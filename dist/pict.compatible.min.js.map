{"version":3,"sources":["pict.compatible.min.js","node_modules/browser-pack/_prelude.js","node_modules/async.eachlimit/index.js","node_modules/async.iterator/index.js","node_modules/async.util.eachoflimit/index.js","node_modules/async.util.ensureasync/index.js","node_modules/async.util.isarray/index.js","node_modules/async.util.isarraylike/index.js","node_modules/async.util.keyiterator/index.js","node_modules/async.util.keys/index.js","node_modules/async.util.noop/index.js","node_modules/async.util.once/index.js","node_modules/async.util.onlyonce/index.js","node_modules/async.util.restparam/index.js","node_modules/async.util.setimmediate/index.js","node_modules/async.util.withoutindex/index.js","node_modules/async.waterfall/index.js","node_modules/base64-js/index.js","node_modules/big.js/big.js","node_modules/buffer/index.js","node_modules/builtin-status-codes/browser.js","node_modules/cachetrax/source/CacheTrax.js","node_modules/cachetrax/source/LinkedList-Node.js","node_modules/cachetrax/source/LinkedList.js","node_modules/call-bind/callBound.js","node_modules/call-bind/index.js","node_modules/cookie/index.js","node_modules/dayjs/dayjs.min.js","node_modules/dayjs/plugin/advancedFormat.js","node_modules/dayjs/plugin/isoWeek.js","node_modules/dayjs/plugin/relativeTime.js","node_modules/dayjs/plugin/timezone.js","node_modules/dayjs/plugin/utc.js","node_modules/dayjs/plugin/weekOfYear.js","node_modules/dayjs/plugin/weekday.js","node_modules/define-data-property/index.js","node_modules/events/events.js","node_modules/fable-log/source/Fable-Log-BaseLogger.js","node_modules/fable-log/source/Fable-Log-DefaultProviders-Web.js","node_modules/fable-log/source/Fable-Log-DefaultStreams.json","node_modules/fable-log/source/Fable-Log-Logger-Console.js","node_modules/fable-log/source/Fable-Log-Logger-SimpleFlatFile.js","node_modules/fable-log/source/Fable-Log.js","node_modules/fable-serviceproviderbase/source/Fable-ServiceProviderBase.js","node_modules/fable-settings/source/Fable-Settings-Default.json","node_modules/fable-settings/source/Fable-Settings-TemplateProcessor.js","node_modules/fable-settings/source/Fable-Settings.js","node_modules/fable-uuid/source/Fable-UUID-Random-Browser.js","node_modules/fable-uuid/source/Fable-UUID.js","node_modules/fable/source/Fable.js","node_modules/fable/source/services/Fable-Service-Anticipate.js","node_modules/fable/source/services/Fable-Service-CSVParser.js","node_modules/fable/source/services/Fable-Service-DataFormat.js","node_modules/fable/source/services/Fable-Service-DataGeneration-DefaultValues.json","node_modules/fable/source/services/Fable-Service-DataGeneration.js","node_modules/fable/source/services/Fable-Service-DateManipulation.js","node_modules/fable/source/services/Fable-Service-EnvironmentData.js","node_modules/fable/source/services/Fable-Service-FilePersistence.js","node_modules/fable/source/services/Fable-Service-MetaTemplate.js","node_modules/fable/source/services/Fable-Service-MetaTemplate/MetaTemplate-StringParser.js","node_modules/fable/source/services/Fable-Service-MetaTemplate/MetaTemplate-WordTree.js","node_modules/fable/source/services/Fable-Service-Operation-DefaultSettings.js","node_modules/fable/source/services/Fable-Service-Operation.js","node_modules/fable/source/services/Fable-Service-RestClient.js","node_modules/fable/source/services/Fable-Service-Template.js","node_modules/fable/source/services/Fable-Service-Utility.js","node_modules/function-bind/implementation.js","node_modules/function-bind/index.js","node_modules/get-intrinsic/index.js","node_modules/gopd/index.js","node_modules/has-property-descriptors/index.js","node_modules/has-proto/index.js","node_modules/has-symbols/index.js","node_modules/has-symbols/shams.js","node_modules/hasown/index.js","node_modules/https-browserify/index.js","node_modules/ieee754/index.js","node_modules/inherits/inherits_browser.js","node_modules/manyfest/source/Manyfest-CleanWrapCharacters.js","node_modules/manyfest/source/Manyfest-HashTranslation.js","node_modules/manyfest/source/Manyfest-LogToConsole.js","node_modules/manyfest/source/Manyfest-ObjectAddress-CheckAddressExists.js","node_modules/manyfest/source/Manyfest-ObjectAddress-DeleteValue.js","node_modules/manyfest/source/Manyfest-ObjectAddress-GetValue.js","node_modules/manyfest/source/Manyfest-ObjectAddress-SetValue.js","node_modules/manyfest/source/Manyfest-ObjectAddressGeneration.js","node_modules/manyfest/source/Manyfest-ParseConditionals.js","node_modules/manyfest/source/Manyfest-SchemaManipulation.js","node_modules/manyfest/source/Manyfest.js","node_modules/object-inspect/index.js","node_modules/once/once.js","node_modules/path-browserify/index.js","node_modules/pict-application/source/Pict-Application.js","node_modules/pict-view/source/Pict-View.js","node_modules/precedent/source/Precedent.js","node_modules/precedent/source/StringParser.js","node_modules/precedent/source/WordTree.js","node_modules/process/browser.js","node_modules/punycode/punycode.js","node_modules/qs/lib/formats.js","node_modules/qs/lib/index.js","node_modules/qs/lib/parse.js","node_modules/qs/lib/stringify.js","node_modules/qs/lib/utils.js","node_modules/querystring-es3/decode.js","node_modules/querystring-es3/encode.js","node_modules/querystring-es3/index.js","node_modules/safe-buffer/index.js","node_modules/set-function-length/index.js","node_modules/side-channel/index.js","node_modules/simple-concat/index.js","node_modules/simple-get/index.js","node_modules/stream-http/index.js","node_modules/stream-http/lib/capability.js","node_modules/stream-http/lib/request.js","node_modules/stream-http/lib/response.js","node_modules/stream-http/node_modules/readable-stream/errors-browser.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/async_iterator.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/buffer_list.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/from-browser.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/pipeline.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/state.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/stream-http/node_modules/readable-stream/readable-browser.js","node_modules/string_decoder/lib/string_decoder.js","node_modules/timers-browserify/main.js","node_modules/url/url.js","node_modules/util-deprecate/browser.js","node_modules/wrappy/wrappy.js","node_modules/xtend/immutable.js","source/Pict-CSS.js","source/Pict-Content-Assignment.js","source/Pict-DataProvider.js","source/Pict-Meadow-EntityProvider.js","source/Pict-Template-Provider.js","source/Pict.js","source/environments/Pict-Environment-Log.js","source/environments/Pict-Environment-Object.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","_defineProperty2","obj","key","value","_toPropertyKey2","defineProperty","enumerable","configurable","writable","_get","Reflect","get","bind","target","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","arguments","apply","this","object","hasOwnProperty","_getPrototypeOf","_classCallCheck2","instance","Constructor","_defineProperties","props","descriptor","_createClass2","protoProps","staticProps","t","_toPrimitive2","_typeof","String","r","e","toPrimitive","Number","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","result","Super","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","getPrototypeOf","f","exports","module","define","amd","window","global","Pict","c","require","u","a","Error","code","eachOfLimit","withoutIndex","limit","cb","tasks","makeCallback","index","fn","next","once","noop","onlyOnce","keyIterator","nextKey","done","running","errored","replenish","err","setImmediate","restParam","args","callback","pop","push","innerArgs","sync","_keys","isArrayLike","coll","keys","k","func","startIndex","Math","max","rest","_setImmediate","fallback","setTimeout","timers","ensureAsync","wrapIterator","concat","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","join","Uint8Array","indexOf","start","end","num","output","GLOBAL","Big","MAX_DP","MAX_POWER","NAME","INVALID","INVALID_DP","INVALID_RM","DIV_BY_ZERO","P","UNDEFINED","NUMERIC","round","x","sd","rm","more","xc","RM","unshift","stringify","doExponential","isNonzero","s","charAt","abs","cmp","y","isneg","yc","j","l","div","b","dp","DP","bl","bt","ri","bz","ai","al","rl","q","qc","qi","shift","eq","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","reverse","mod","ygtx","times","neg","add","pow","one","prec","sqrt","half","toExponential","mul","toFixed","toJSON","NE","PE","toNumber","strict","toPrecision","_Big_","nl","replace","search","substring","parse","roundDown","roundHalfUp","roundHalfEven","roundUp","dup","Buffer","base64","ieee754","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","arg","encodingOrOffset","allocUnsafe","string","encoding","isEncoding","actual","write","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","buffer","array","byteOffset","undefined","fromArrayBuffer","isBuffer","checked","copy","numberIsNaN","type","data","fromObject","assertSize","size","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","foo","typedArraySupport","console","error","species","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","trim","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","libFableServiceProviderBase","libLinkedList","CashMoney","_libFableServiceProvi","_super","pFable","pManifest","pServiceHash","_this3","serviceType","_HashMap","_RecordMap","_List","maxLength","maxAge","pData","pHash","Datum","tmpNode","Hash","Metadata","Created","Date","remove","put","fComplete","pRemovedRecords","tmpRemovedRecords","tmpNow","tmpKeys","expire","fPruneFunction","_this4","pruneBasedOnExpiration","fExpirationPruneComplete","pruneBasedOnLength","LinkedListNode","LeftNode","RightNode","__ISNODE","libLinkedListNode","LinkedList","totalNodes","head","tail","pDatum","tmpHash","initializeNode","append","pNode","fAction","_this5","fIterator","pError","pNodeIndex","GetIntrinsic","callBind","$indexOf","allowMissing","intrinsic","setFunctionLength","$TypeError","$apply","$call","$reflectApply","$defineProperty","$max","originalFunction","applyBind","options","dec","decode","eqIdx","endIdx","tryDecode","serialize","opt","enc","encode","fieldContentRegExp","isNaN","floor","domain","path","expires","__toString","isDate","toUTCString","httpOnly","secure","partitioned","priority","sameSite","decodeURIComponent","encodeURIComponent","h","d","$","M","weekdays","months","ordinal","v","z","utcOffset","date","year","month","clone","ceil","w","D","ms","Q","g","S","_","O","locale","$L","utc","$u","$x","$offset","$d","NaN","match","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","isSame","startOf","endOf","isAfter","isBefore","$g","unix","getTime","toDate","$locale","weekStart","$set","daysInMonth","subtract","format","invalidDate","meridiem","monthsShort","weekdaysMin","weekdaysShort","getTimezoneOffset","diff","toISOString","forEach","extend","$i","isDayjs","en","Ls","globalThis","dayjs","weekYear","isoWeekYear","week","isoWeek","offsetName","dayjs_plugin_advancedFormat","isoWeekday","day","dayjs_plugin_isoWeek","future","past","mm","hh","dd","MM","yy","fromToBase","relativeTime","thresholds","rounding","to","toNow","fromNow","dayjs_plugin_relativeTime","hour","minute","second","timeZoneName","Intl","DateTimeFormat","hour12","timeZone","formatToParts","tz","$timezone","guess","find","resolvedOptions","setDefault","dayjs_plugin_timezone","local","getUTCFullYear","getUTCMonth","getUTCDate","getUTCDay","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","$localOffset","isUTC","dayjs_plugin_utc","yearStart","weeks","dayjs_plugin_weekOfYear","weekday","dayjs_plugin_weekday","hasPropertyDescriptors","$SyntaxError","gopd","nonEnumerable","nonWritable","nonConfigurable","loose","ReflectOwnKeys","R","ReflectApply","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","EventEmitter","emitter","Promise","resolve","reject","errorListener","removeListener","resolver","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","events","existing","warning","newListener","emit","warned","count","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","addEventListener","wrapListener","removeEventListener","setMaxListeners","getMaxListeners","doError","er","message","context","listeners","addListener","prependListener","prependOnceListener","position","originalListener","spliceOne","off","removeAllListeners","rawListeners","eventNames","BaseLogger","_libFableServiceProvi2","_super2","pLogStreamSettings","pLogStreamHash","_this6","_Settings","loggerUUID","generateInsecureUUID","levels","tmpDate","pCharacter","tmpRandomData","random","pLogText","pLogObject","pLogLevel","CoreServiceProviderBase","tmpDefaultProviders","loggertype","streamtype","level","ConsoleLogger","_libBaseLogger","_super3","pFableLog","_this7","_ShowTimeStamps","showtimestamps","_FormattedTimeStamps","formattedtimestamps","_ContextMessage","Context","Product","_OutputLogLinesToConsole","outputloglinestoconsole","_OutputObjectsToConsole","outputobjectstoconsole","prefixCache","pLevel","pObject","tmpTimeStamp","tmpLogLine","log","JSON","libConsoleLog","libFS","libPath","SimpleFlatFileLogger","_libConsoleLog","_super4","_this8","logFileRawPath","logFilePath","normalize","logFileStreamOptions","fileStreamOptions","fileWriter","createWriteStream","activelyWriting","logLineStrings","logObjectStrings","defaultWriteCompleteCallback","defaultBufferFlushCallback","fCloseComplete","tmpCloseComplete","fFlushComplete","tmpFlushComplete","flushBufferToLogFile","tmpLineStrings","tmpObjectStrings","tmpConstructedBufferOutputString","completeBufferFlushToLogFile","fs","FableLog","_libFableServiceProvi3","_super5","pSettings","_this9","tmpSettings","_Providers","_StreamDefinitions","LogStreams","logStreams","logProviders","activeLogStreams","logStreamsTrace","logStreamsDebug","logStreamsInfo","logStreamsWarn","logStreamsError","logStreamsFatal","datumDecorator","uuid","pLogger","fDatumDecorator","pMessage","tmpDecoratedDatum","trace","debug","info","fatal","tmpStreamDefinition","assign","addLogger","initialize","tmpMessage","tmpTime","pTimeStamp","pTimeDelta","tmpEndTime","tmpMs","tmpSeconds","tmpMinutes","tmpHours","pStartTime","logTimeDelta","getTimeDelta","logTimeDeltaHuman","LogProviderBase","LogProviderConsole","LogProviderFlatfile","FableServiceProviderBase","pOptions","isFable","connectFable","fable","UUID","getUUID","tmpErrorMessage","Logging","services","servicesMap","ProductVersion","ConfigFile","process","libPrecedent","FableSettingsTemplateProcessor","pDependencies","templateProcessor","addPattern","pTemplateValue","tmpTemplateValue","tmpSeparatorIndex","tmpDefaultValue","tmpEnvironmentVariableName","env","pString","parseString","_process","precedent","libFableSettingsTemplateProcessor","FableSettings","_libFableServiceProvi4","_super6","_this10","settingsTemplateProcessor","_configureEnvTemplating","buildDefaultSettings","merge","DefaultConfigFile","pException","settings","_PerformEnvTemplating","NoEnvReplacement","tmpKey","_resolveEnv","parseSetting","toObject","_this11","_isObject","fromValue","toValue","_deepMergeObjects","pSettingsFrom","pSettingsTo","tmpSettingsFrom","tmpSettingsTo","tmpSettingsFromCopy","RandomBytes","getRandomValues","crypto","msCrypto","tmpBuffer","tmpValue","generateWhatWGBytes","generateRandomBytes","libRandomByteGenerator","FableUUID","_libFableServiceProvi5","_super7","_this12","_UUIDModeRandom","UUIDModeRandom","_UUIDLength","UUIDLength","_UUIDRandomDictionary","UUIDDictionary","randomByteGenerator","_HexLookup","pBuffer","tmpRandomBytes","generate","bytesToUUID","tmpUUID","generateRandom","generateUUIDv4","libFableSettings","libFableUUID","libFableLog","libFableServiceBase","Fable","_libFableServiceBase$","_super8","_this13","serviceTypes","serviceClasses","extraServiceInitialization","LogNoisiness","SettingsManager","ServiceManager","serviceManager","connectPreinitServiceProviderInstance","addAndInstantiateServiceType","addServiceType","instantiateServiceProviderWithoutRegistration","pServiceType","pServiceClass","isFableService","instantiateServiceProvider","pCustomServiceHash","pServicePrototype","tmpService","setDefaultServiceInstantiation","pServiceInstance","tmpServiceType","tmpServiceHash","pOverwriteService","tmpOverwriteService","ServiceProviderBase","cachetrax","manyfest","FableServiceAnticipate","_libFableServiceBase","_super9","_this14","operationQueue","erroredOperations","executingOperationCount","completedOperationCount","callDepth","maxOperations","lastError","waitingFunctions","tmpOperation","buildAnticipatorCallback","fAsynchronousFunction","checkQueue","tmpCallbackState","Called","OperationSet","fCallback","CSVParser","_libFableServiceProvi6","_super10","_this15","Header","HeaderFieldNames","Delimiter","QuoteCharacter","CleanCharacters","HeaderLineIndex","HasHeader","HasSetHeader","EmitHeader","EmitJSON","EscapedQuoteString","CurrentLine","CurrentRecord","InQuote","InEscapedQuote","LinesParsed","RowsEmitted","pRowArray","tmpObject","pHeaderArray","pFormatAsJSON","tmpFormatAsJSON","tmpCompletedRecord","marshalRowToJSON","pLineString","pushLine","setHeader","emitRow","DataFormat","_libFableServiceProvi7","_super11","_this16","pTargetLength","pPadString","tmpString","stringGeneratePaddingString","_Regex_formatterInsertCommas","_Regex_formatterAddCommasToNumber","_Regex_formatterDollarsRemoveCommas","_Regex_formatterCleanNonAlphaChar","_Regex_formatterCapitalizeEachWord","_Value_MoneySign_Currency","_Value_NaN_Currency","_Value_GroupSeparator_Number","_Value_Prefix_StringHash","_Value_Clean_formatterCleanNonAlpha","_UseEngineStringStartsWith","startsWith","_UseEngineStringEndsWith","endsWith","pSearchString","pStartIndex","stringStartsWith_Polyfill","pEndIndex","stringEndsWith_Polyfill","tmpStringLength","tmpCharacterIndex","pMatch","toUpperCase","pWrapCharacter","tmpReversedWithCommas","stringReverse","pSign","pZeros","pBefore","pDecimal","pAfter","formatterInsertCommas","pNumber","processAddCommasToNumberRegex","pValue","tmpDollarAmount","Utility","bigNumber","parseFloat","formatterAddCommasToNumber","pDigits","tmpDigits","tmpTargetLength","tmpPadString","tmpPadLength","repeat","pTimeSpan","stringPadStart","pTimeStart","pTimeEnd","formatTimeSpan","pJavascriptDate","pStrict","tmpStrict","tmpMonth","tmpDay","tmpYear","pDate","tmpStringSplitLocation","pEnclosureStart","pEnclosureEnd","tmpEnclosureStart","tmpEnclosureEnd","tmpEnclosureCount","tmpEnclosureDepth","pEnclosureIndexToGet","tmpEnclosureIndexToGet","tmpMatchedEnclosureIndex","tmpEnclosedValueStartIndex","tmpEnclosedValueEndIndex","pEnclosureIndexToRemove","tmpEnclosureIndexToRemove","tmpEnclosureStartIndex","tmpEnclosureEndIndex","tmpReturnString","DefaultIntegerMinimum","DefaultIntegerMaximum","DefaultNumericStringLength","MonthSet","WeekDaySet","ColorSet","SurNameSet","NameSet","FableServiceDataGeneration","_libFableServiceBase2","_super12","_this17","defaultData","pMinimum","pMaximum","randomIntegerBetween","pLength","pMaxNumber","tmpLength","tmpMaxNumber","randomIntegerUpTo","DateManipulation","_libFableServiceProvi8","_super13","_this18","dayJS","plugin_weekOfYear","plugin_weekday","plugin_isoWeek","plugin_timezone","plugin_relativetime","plugin_utc","plugin_advancedFormat","FableServiceEnvironmentData","_libFableServiceBase3","_super14","_this19","Environment","libReadline","FableServiceFilePersistence","_libFableServiceBase4","_super15","_this20","Mode","umask","pPath","existsSync","pFileName","pAppendContent","tmpOptions","appendFileSync","unlinkSync","rmdirSync","pFilePath","readFileSync","readFile","pFileContent","writeFileSync","pFileArray","writeFile","fOnLine","fOnComplete","fOnError","tmpLineReader","filePath","fileStream","createReadStream","reader","createInterface","input","crlfDelay","pParameters","_this21","tmpParameters","Path","CurrentPathIndex","ActualPath","ActualPathParts","sep","CurrentPath","open","pFileDescriptor","closeSync","makeFolderRecursive","mkdir","pCreateError","readline","libWordTree","libStringParser","FableServiceMetaTemplate","_libFableServiceBase5","_super16","_this22","WordTree","StringParser","ParseTree","pPatternStart","pPatternEnd","pParser","pParserPromise","addPatternAsync","addPatternBoth","TemplateData","pParseTree","Asynchronous","Output","OutputBuffer","Pattern","PatternMatch","PatternMatchEnd","pParserState","flushOutputBuffer","PatternStartNode","StartPatternMatchComplete","EndPatternMatchBegan","appendOutputBuffer","PatternEnd","isAsync","isBoth","PatternStartString","resetOutputBuffer","Parse","PatternEndString","_this23","pAsyncOutput","PatternStart","ParseAsync","executePatternAsync","_this24","tmpParserState","newParserState","parseCharacter","tmpAnticipate","_loop","_i4","anticipate","parseCharacterAsync","wait","pTree","pPattern","fParser","tmpLeaf","addChild","tmpPatternEnd","addEndChild","fParserAsync","Name","Summary","Version","Status","Completed","CompletionProgress","CompletionTimeElapsed","TimeStart","TimeEnd","Steps","Errors","Log","_OperationStatePrototypeString","FableOperation","_libFableServiceBase6","_super17","_this25","timeStamps","progressTrackers","stepMap","stepFunctions","fExecutionCompleteCallback","_this26","GUIDStep","pGUIDStep","fStepFunction","pStepName","pStepDescription","pStepMetadata","tmpStep","DataGeneration","randomNumericString","Description","StepCount","getStep","writeOperationLog","writeOperationErrors","pTimeStampHash","tmpTimeStampHash","tmpOperationTime","pTotalOperations","pProgressTrackerHash","tmpProgressTrackerHash","tmpTotalOperations","tmpProgressTracker","StartTime","createTimeStamp","EndTime","CurrentTime","PercentComplete","AverageOperationTime","EstimatedCompletionTime","TotalCount","CurrentCount","createProgressTracker","pCurrentOperations","tmpCurrentOperations","solveProgressTrackerStatus","pIncrementSize","tmpIncrementSize","updateProgressTrackerStatus","libSimpleGet","libCookie","FableServiceRestClient","_libFableServiceBase7","_super18","_this27","TraceLog","dataFormat","cookie","prepareRequestOptions","pRequestOptions","tmpCookieObject","headers","tmpCookieKeys","prepareCookies","url","RestClientURLPrefix","_this28","preRequest","RequestStartTime","getTimeStamp","method","pResponse","tmpConnectTime","formatTimeDelta","statusCode","tmpData","pChunk","tmpChunkTime","tmpCompletionTime","_this29","json","tmpDataBuffer","_this30","tmpJSONData","pOptionsOrURL","tmpRequestOptions","executeJSONRequest","body","executeChunkedRequest","FableServiceTemplate","_libFableServiceBase8","_super19","_this31","Matchers","Evaluate","Interpolate","Escaper","Unescaper","GuaranteedNonMatch","templateEscapes","u2028","u2029","renderFunction","templateString","renderTemplate","pTemplateText","_this32","TemplateSource","pCode","TemplateSourceCompiled","templateFunction","libAsyncWaterfall","libAsyncEachLimit","libBigNumber","FableServiceUtility","_libFableServiceBase9","_super20","_this33","templates","waterfall","eachLimit","pDestinationObject","tmpSourceObject","tmpObjectProperties","buildTemplateFunction","pTemplateHash","tmpTemplate","pInput","pChunkSize","pChunkCache","tmpInputArray","tmpChunkSize","tmpChunkCache","splice","pISOString","Dates","toStr","concatty","bound","arrLike","slicy","boundLength","boundArgs","joiner","joiny","Empty","implementation","SyntaxError","$Function","getEvalledConstructor","expressionSyntax","$gOPD","throwTypeError","ThrowTypeError","calleeThrows","gOPDthrows","hasSymbols","hasProto","getProto","needsEval","TypedArray","INTRINSICS","AggregateError","Atomics","BigInt","BigInt64Array","BigUint64Array","DataView","decodeURI","encodeURI","eval","EvalError","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","Map","RegExp","Set","SharedArrayBuffer","Uint8ClampedArray","Uint16Array","Uint32Array","URIError","WeakMap","WeakRef","WeakSet","errorProto","doEval","gen","LEGACY_ALIASES","hasOwn","$concat","$spliceApply","$replace","$strSlice","$exec","exec","rePropName","reEscapeChar","getBaseIntrinsic","alias","intrinsicName","first","last","number","quote","subString","stringToPath","intrinsicBaseName","intrinsicRealName","skipFurtherCaching","isOwn","part","hasown","hasArrayLengthDefineBug","$Object","origSymbol","hasSymbolSham","sym","symObj","syms","propertyIsEnumerable","$hasOwn","http","https","validateParams","params","protocol","request","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","ctor","superCtor","super_","TempCtor","libSimpleLog","ManyfestHashTranslation","pInfoLog","pErrorLog","logInfo","logError","translationTable","pTranslation","_this34","pTranslationSource","pTranslationHash","_this35","removeTranslationHash","removeTranslation","pLogLine","ManyfestObjectAddressResolverCheckAddressExists","pAddress","tmpBracketStartIndex","tmpBracketStopIndex","tmpBoxedPropertyName","tmpBoxedPropertyReference","tmpBoxedPropertyNumber","cleanWrapCharacters","tmpSubObjectName","tmpNewAddress","checkAddressExists","fCleanWrapCharacters","fParseConditionals","ManyfestObjectAddressResolverDeleteValue","pRecord","pParentAddress","tmpParentAddress","tmpObjectTypeMarkerIndex","checkFilters","tmpObjectPropertyName","deleteValueAtAddress","tmpArrayProperty","tmpContainerObject","tmpPropertyParentAddress","tmpObjectProperty","tmpObjectPropertyKeys","ManyfestObjectAddressResolverGetValue","pRootObject","tmpRootObject","tmpParentAddressParts","tmpBackNavigationCount","tmpParentAddressLength","tmpRecurseAddress","getValueAtAddress","tmpOutputArray","ManyfestObjectAddressSetValue","setValueAtAddress","ManyfestObjectAddressGeneration","pBaseAddress","pSchema","tmpBaseAddress","tmpSchema","tmpObjectType","tmpSchemaObjectEntry","Address","InSchema","DataType","Default","generateAddressses","_ConditionalStanzaStart","_ConditionalStanzaEnd","testCondition","pManyfest","pSearchAddress","pSearchComparator","tmpKeepRecord","tmpStartIndex","tmpStopIndex","tmpMagicComparisonPatternSet","tmpSearchAddress","tmpSearchComparator","tmpSearchValue","ManyfestSchemaManipulation","pManyfestSchemaDescriptors","pAddressMapping","tmpManyfestAddresses","tmpHashMapping","pInputAddress","tmpNewDescriptorAddress","tmpOldDescriptorAddress","tmpDescriptor","tmpManyfestSchemaDescriptors","resolveAddressMappings","pManyfestSchemaDescriptorsDestination","pManyfestSchemaDescriptorsSource","tmpSource","tmpNewManyfestSchemaDescriptors","pDescriptorAddress","libHashTranslation","libObjectAddressCheckAddressExists","libObjectAddressGetValue","libObjectAddressSetValue","libObjectAddressDeleteValue","libObjectAddressGeneration","libSchemaManipulation","_DefaultConfiguration","Scope","Descriptors","Manyfest","_libFableServiceProvi9","_super21","_this36","objectAddressCheckAddressExists","objectAddressGetValue","objectAddressSetValue","objectAddressDeleteValue","defaultValues","Float","Integer","Binary","DateTime","Null","scope","elementAddresses","elementHashes","elementDescriptors","reset","loadManifest","schemaManipulations","objectAddressGeneration","hashTranslations","tmpNewOptions","tmpNewManyfest","getManifest","addTranslation","pManifestString","tmpManifest","tmpDescriptorKeys","tmpDescriptionAddresses","addDescriptor","HashTranslations","pDescriptor","getDescriptor","resolveHashAddress","tmpDescriptorAddresses","tmpInElementHashTable","tmpInTranslationTable","translate","getDefaultValue","getDescriptorByHash","tmpValidationData","MissingElements","addValidationError","pErrorMessage","tmpValueExists","Required","tmpElementType","tmpDataType","pOverwriteProperties","populateObject","fFilter","_this37","tmpOverwriteProperties","tmpFilterFunction","hasMap","mapSizeDescriptor","mapSize","mapForEach","hasSet","setSizeDescriptor","setSize","setForEach","weakMapHas","has","weakSetHas","weakRefDeref","deref","booleanValueOf","objectToString","functionToString","$match","$slice","$toUpperCase","$toLowerCase","$test","$join","$arrSlice","$floor","bigIntValueOf","gOPS","symToString","hasShammedSymbols","toStringTag","isEnumerable","gPO","addNumericSeparator","sepRegex","int","intStr","utilInspect","inspectCustom","custom","inspectSymbol","isSymbol","wrapQuotes","defaultStyle","opts","quoteChar","quoteStyle","isRegExp","inspect_","depth","seen","maxStringLength","customInspect","indent","numericSeparator","inspectString","bigIntStr","maxDepth","baseIndent","prev","getIndent","noIndent","newOpts","nameOf","arrObjKeys","symString","markBoxed","HTMLElement","nodeName","getAttribute","isElement","attrs","attributes","childNodes","xs","singleLineValues","indentedJoin","isError","cause","isMap","mapParts","collectionOf","isSet","setParts","isWeakMap","weakCollectionOf","isWeakSet","isWeakRef","isNumber","isBigInt","isBoolean","isString","ys","isPlainObject","protoTag","stringTag","tag","trailer","lowbyte","entries","lineJoiner","isArr","symMap","wrappy","called","onceStrict","onceError","proto","assertPath","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","posix","cwd","resolvedPath","resolvedAbsolute","isAbsolute","trailingSeparator","joined","relative","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","dirname","hasRoot","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","root","_format","delimiter","win32","defaultPictSettings","MainViewportViewIdentifier","MainViewportRenderableHash","MainViewportDestinationAddress","MainViewportDefaultDataAddress","AutoSolveAfterInitialize","AutoRenderMainViewportViewAfterInitialize","Manifests","IdentifierAddressPrefix","PictApplication","_libFableServiceBase10","_super22","_this38","pict","AppData","initializeTimestamp","lastSolvedTimestamp","lastMarshalFromViewsTimestamp","lastMarshalToViewsTimestamp","tmpManifestKeys","tmpManifestKey","onBeforeSolve","onSolve","tmpLoadedViews","views","tmpViewsToSolve","tmpView","AutoInitialize","sort","AutoInitializeOrdinal","solve","onAfterSolve","_this39","onBeforeSolveAsync","AutoSolveWithApp","AutoSolveOrdinal","solveAsync","onSolveAsync","onAfterSolveAsync","onBeforeInitialize","onInitialize","tmpViewsToInitialize","onAfterInitialize","render","fCallBack","_this40","onBeforeInitializeAsync","onInitializeAsync","initializeAsync","onAfterInitializeAsync","renderMainViewportAsync","onBeforeMarshalFromViews","onMarshalFromViews","tmpViewsToMarshalFromViews","marshalFromView","onAfterMarshalFromViews","_this41","onBeforeMarshalFromViewsAsync","marshalFromViewAsync","onMarshalFromViewsAsync","onAfterMarshalFromViewsAsync","onBeforeMarshalToViews","onMarshalToViews","tmpViewsToMarshalToViews","marshalToView","onAfterMarshalToViews","_this42","onBeforeMarshalToViewsAsync","marshalToViewAsync","onMarshalToViewsAsync","onAfterMarshalToViewsAsync","pViewIdentifier","pRenderableHash","pRenderDestinationAddress","pTemplateDataAddress","tmpViewIdentifier","tmpRenderableHash","tmpRenderDestinationAddress","tmpTemplateDataAddress","PictView","renderAsync","defaultPictViewSettings","DefaultRenderable","DefaultDestinationAddress","DefaultTemplateRecordAddress","ViewIdentifier","AutoRender","AutoRenderOrdinal","CSSHash","CSS","CSSProvider","CSSPriority","Templates","DefaultTemplates","Renderables","_libFableServiceBase11","_super23","_this43","lastRenderedTimestamp","lastMarshalFromViewTimestamp","lastMarshalToViewTimestamp","Source","TemplateProvider","addTemplate","Template","tmpDefaultTemplate","addDefaultTemplate","Prefix","Postfix","tmpCSSHash","tmpCSSProvider","CSSMap","addCSS","renderables","addRenderable","pDefaultTemplateDataAddress","pDefaultDestinationAddress","pRenderMethod","tmpRenderable","RenderableHash","TemplateHash","DefaultTemplateDataAddress","RenderMethod","_this44","pRenderable","tmpDataAddress","ContentDestinationAddress","DataProvider","getDataByAddress","onBeforeRender","tmpContent","parseTemplateByHash","ContentAssignment","appendContent","prependContent","getElement","assignContent","onAfterRender","_this45","newAnticipate","fOnBeforeRenderCallback","onBeforeRenderAsync","fAsyncTemplateCallback","pContent","onAfterRenderAsync","_this46","onBeforeMarshalFromView","onMarshalFromView","onAfterMarshalFromView","_this47","onBeforeMarshalFromViewAsync","onMarshalFromViewAsync","onAfterMarshalFromViewAsync","onBeforeMarshalToView","onMarshalToView","onAfterMarshalToView","_this48","onBeforeMarshalToViewAsync","onMarshalToViewAsync","onAfterMarshalToViewAsync","Precedent","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","nextTick","title","browser","argv","version","versions","binding","chdir","freeExports","nodeType","freeModule","freeGlobal","punycode","maxInt","tMin","tMax","skew","damp","initialBias","initialN","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","baseMinusTMin","stringFromCharCode","map","mapDomain","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","basic","oldi","baseMinusT","inputLength","bias","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","ucs2","toASCII","toUnicode","percentTwenties","Format","default","formatters","RFC1738","RFC3986","formats","utils","defaults","allowDots","allowPrototypes","allowSparse","arrayLimit","charset","charsetSentinel","comma","decoder","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","plainObjects","strictNullHandling","$0","numberStr","parseArrayValue","parseKeys","givenKey","valuesParsed","child","segment","parent","chain","leaf","cleanRoot","parseObject","normalizeParseOptions","tempObj","cleanStr","skipIndex","bracketEqualsPos","maybeMap","encodedVal","combine","parseValues","newObj","compact","getSideChannel","arrayPrefixGenerators","brackets","prefix","indices","pushToArray","valueOrArray","toISO","defaultFormat","addQueryPrefix","encoder","encodeValuesOnly","formatter","serializeDate","skipNulls","sentinel","generateArrayPrefix","commaRoundTrip","filter","sideChannel","tmpSc","step","findFlag","objKeys","values","adjustedPrefix","keyPrefix","valueSideChannel","normalizeStringifyOptions","arrayFormat","hexTable","arrayToObject","source","reduce","acc","prop","refs","item","compacted","compactQueue","strWithoutPlus","unescape","defaultEncoder","kind","escape","mapped","mergeTarget","targetItem","qs","regexp","maxKeys","kstr","vstr","idx","stringifyPrimitive","objectKeys","ks","copyProps","SafeBuffer","hasDescriptors","gOPD","functionLengthIsConfigurable","functionLengthIsWritable","callBound","$WeakMap","$Map","$weakMapGet","$weakMapSet","$weakMapHas","$mapGet","$mapSet","$mapHas","listGetNode","curr","$wm","$o","channel","assert","objects","node","listGet","listHas","listSet","stream","chunks","chunk","simpleGet","decompressResponse","querystring","isStream","pipe","maxRedirects","_url$parse","hostname","port","auth","form","accept","originalHost","req","followRedirects","location","host","resume","redirectHost","authorization","tryUnzip","abort","ClientRequest","response","statusCodes","defaultProtocol","IncomingMessage","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","xtend","xhr","getXHR","XMLHttpRequest","XDomainRequest","checkTypeSupport","responseType","isFunction","fetch","ReadableStream","writableStream","WritableStream","abortController","AbortController","arraybuffer","msstream","mozchunkedarraybuffer","overrideMimeType","capability","inherits","rStates","readyStates","preferBinary","Writable","_opts","_body","_headers","useFetch","mode","_mode","decideMode","_fetchTimer","_socketTimeout","_socketTimer","_onFinish","lowerName","unsafeHeaders","getHeader","header","removeHeader","_destroyed","headersObj","Blob","headersList","keyName","signal","controller","_fetchAbortController","requestTimeout","credentials","withCredentials","then","_fetchResponse","_resetTimers","_connect","reason","_xhr","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","status","statusValid","_write","destroy","flushHeaders","setNoDelay","setSocketKeepAlive","UNSENT","OPENED","HEADERS_RECEIVED","resetTimers","Readable","rawHeaders","trailers","rawTrailers","statusMessage","statusText","_resumeFetch","close","pipeTo","getReader","_pos","responseURL","getAllResponseHeaders","matches","_charset","mimeType","charsetMatch","_read","responseText","newData","MSStreamReader","onload","readAsArrayBuffer","codes","createErrorType","Base","NodeError","_Base","arg1","arg2","arg3","getMessage","oneOf","expected","thing","determiner","msg","this_len","Duplex","allowHalfOpen","readable","onend","_writableState","ended","onEndNT","highWaterMark","getBuffer","_readableState","destroyed","PassThrough","Transform","_transform","ReadableState","EElistenerCount","Stream","OurUint8Array","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","isDuplex","objectMode","readableObjectMode","pipes","pipesCount","flowing","endEmitted","reading","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","_destroy","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","onEofChunk","chunkInvalid","_uint8ArrayToBuffer","addChunk","maybeReadMore","_undestroy","undestroy","isPaused","setEncoding","content","clear","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","nReadingNextTick","resume_","fromList","consume","endReadable","endReadableNT","wState","finished","nOrig","doRead","dest","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","ondata","cleanedUp","needDrain","pipeOnDrain","pause","event","dests","ev","wrap","_this","asyncIterator","_fromList","iterable","util","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","transform","flush","_flush","prefinish","err2","CorkedRequest","entry","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","realHasInstance","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","finalCalled","ending","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writev","_writev","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","rState","current","hasInstance","writeAfterEnd","validChunk","newChunk","decodeChunk","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_Object$setPrototypeO","_defineProperty","hint","prim","_toPrimitive","_toPropertyKey","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","promise","lastPromise","wrapForNext","_this2","_Object$create","enumerableOnly","symbols","_objectSpread","getOwnPropertyDescriptors","defineProperties","_classCallCheck","hasStrings","_getString","_getBuffer","nb","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ERR_STREAM_PREMATURE_CLOSE","eos","_len","_key","onlegacyfinish","writableEnded","readableEnded","onrequest","isRequest","ERR_MISSING_ARGS","streams","popCallback","destroys","closed","destroyer","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","pipeline","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","total","utf8CheckIncomplete","clearImmediate","immediateIds","nextImmediateId","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","Url","slashes","hash","query","pathname","href","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","hostlessProtocol","slashedProtocol","ftp","gopher","file","urlParse","parseQueryString","slashesDenoteHost","queryIndex","splitter","uSplit","simplePath","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","newpart","validParts","notHost","bit","ae","esc","qm","resolveObject","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","authInHost","hasTrailingSlash","up","config","localStorage","wrapper","defaultConfiguration","PictCSS","_libFableServiceBase12","_super24","_this49","CSSElementAddress","inlineCSSMap","pPriority","pProvider","tmpPriority","tmpProvidor","Content","Provider","Priority","_this50","tmpCSS","tmpCSSHashes","tmpCSSFragment","tmpCSSComment","generateCSS","PictContentAssignment","_libFableServiceBase13","_super25","_this51","inBrowser","hasDocument","document","querySelectorAll","hasJquery","jQuery","customAssignFunction","customPrependFunction","customAppendFunction","customReadFunction","customGetElementFunction","customReadAttributeFunction","customSetAttributeFunction","customRemoveAttributeFunction","customReadClassFunction","customSetClassFunction","customRemoveClassFunction","tmpElements","tmpElementSet","tmpTargetElementSet","tagName","innerHTML","insertAdjacentHTML","tmpTargetElement","html","pClass","addClass","classList","removeClass","pAttribute","attr","setAttribute","removeAttr","removeAttribute","hasClass","contains","PictDataProvider","_libFableServiceBase14","_super26","_this52","manifest","getValueByHash","Bundle","Record","PictMeadowEntityProvider","_libFableServiceBase15","_super27","_this53","PictDefaultURLPrefix","urlPrefix","PictDefaultDownloadBatchSize","downloadBatchSize","restClient","cache","pEntity","RecordMap","pIDRecord","initializeCache","prune","_this54","tmpPossibleRecord","getJSON","pBody","pMeadowFilterExpression","pRecordStartCursor","pRecordCount","tmpURL","pDownloadError","pDownloadResponse","pDownloadBody","tmpRecordCount","Count","_this55","getEntitySetRecordCount","pRecordCountError","tmpDownloadURIFragments","tmpDownloadBatchSize","tmpEntitySet","pURIFragment","fDownloadCallback","pFullDownloadError","PictTemplateProvider","_libFableServiceBase16","_super28","_this56","templateSources","defaultTemplates","loadTemplateFunction","pTemplate","pTemplateSource","pPrefix","pPostfix","pSource","postfix","template","loadTemplate","checkDefaultTemplateHash","_libFable","_super29","_this57","isBrowser","loadManifestSet","_DefaultPictTemplatesInitialized","initializePictTemplateEngine","pManifestSet","pViewHash","pViewPrototype","tmpViewHash","default_configuration","instantiateServiceProviderFromPrototype","pApplicationHash","pApplicationPrototype","tmpApplicationHash","_this58","fEntityRender","tmpCallback","tmpEntity","tmpEntityTemplate","tmpEntityID","tmpAddressParts","EntityProvider","getEntity","MetaTemplate","fTemplateRender","tmpTemplateHash","tmpAddressOfData","tmpHashTemplateSeparator","fTemplateRenderAsync","fTemplateSetRender","parseTemplateSetByHash","fTemplateSetRenderAsync","tmpTemplateFromMapHash","tmpTemplateHashPart","fTemplateValueSetRender","tmpDataValueSet","Value","tmpValueKeys","fTemplateValueSetRenderAsync","fTemplateFromMapRender","tmpAddressOfMap","tmpAddressOfKey","tmpMap","fTemplateFromMapRenderAsync","fTemplateFromMapSetRender","fTemplateFromMapSetRenderAsync","fDataRender","fJoinDataRender","tmpDataAddresses","tmpSeparator","tmpValueList","fJoinUniqueDataRender","tmpValueMap","tmpColumnData","formatterDollars","formatterRoundNumber","tmpDateValue","tmpDayJS","Timezone","_unused","tmpSQLDateTime","DocumentData","tmpDateValueSet","_unused2","fNotEmptyRender","tmpHashParts","fRandomNumberString","fRandomNumber","tmpMinimumNumber","cleanNonAlphaCharacters","capitalizeEachWord","fLogValue","tmpValueType","fLogStatement","tmpError","stack","pTemplateString","tmpTemplateString","getTemplate","parseTemplate","pDataSet","_this59","fRecordTemplateCallback","pTemplateResult","parseTemplateSet","PictApplicationClass","PictViewClass","EnvironmentLog","EnvironmentObject","PictEnvironmentLog","pPict","pContentMap","contentMap","truncateContentLength","storeEventLog","eventLog","GetElement","Read","Prepend","Append","Assign","TimeStamp","createEventLogEntry","Attribute","PictEnvironmentObject","_ATTRIBUTE_MAP","_CLASS_MAP","ReadAttribute","SetAttribute","RemoveAttribute","ReadClass","SetClass","RemoveClass","initializeAttributeMapLocation","initializeClassMapLocation"],"mappings":"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","file":"pict.compatible.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Pict = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar eachOfLimit = require('async.util.eachoflimit');\nvar withoutIndex = require('async.util.withoutindex');\n\nmodule.exports = function eachLimit(arr, limit, iterator, cb) {\n    return eachOfLimit(limit)(arr, withoutIndex(iterator), cb);\n};\n\n},{\"async.util.eachoflimit\":3,\"async.util.withoutindex\":14}],2:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(tasks) {\n    function makeCallback(index) {\n        function fn() {\n            if (tasks.length) {\n                tasks[index].apply(null, arguments);\n            }\n            return fn.next();\n        }\n        fn.next = function() {\n            return (index < tasks.length - 1) ? makeCallback(index + 1) : null;\n        };\n        return fn;\n    }\n    return makeCallback(0);\n};\n\n},{}],3:[function(require,module,exports){\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar onlyOnce = require('async.util.onlyonce');\nvar keyIterator = require('async.util.keyiterator');\n\nmodule.exports = function eachOfLimit(limit) {\n    return function(obj, iterator, cb) {\n        cb = once(cb || noop);\n        obj = obj || [];\n        var nextKey = keyIterator(obj);\n        if (limit <= 0) {\n            return cb(null);\n        }\n        var done = false;\n        var running = 0;\n        var errored = false;\n\n        (function replenish() {\n            if (done && running <= 0) {\n                return cb(null);\n            }\n\n            while (running < limit && !errored) {\n                var key = nextKey();\n                if (key === null) {\n                    done = true;\n                    if (running <= 0) {\n                        cb(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iterator(obj[key], key, onlyOnce(function(err) {\n                    running -= 1;\n                    if (err) {\n                        cb(err);\n                        errored = true;\n                    } else {\n                        replenish();\n                    }\n                }));\n            }\n        })();\n    };\n};\n\n},{\"async.util.keyiterator\":7,\"async.util.noop\":9,\"async.util.once\":10,\"async.util.onlyonce\":11}],4:[function(require,module,exports){\n'use strict';\nvar setImmediate = require('async.util.setimmediate');\nvar restParam = require('async.util.restparam');\n\nmodule.exports = function(fn) {\n    return restParam(function(args) {\n        var callback = args.pop();\n        args.push(function() {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate(function() {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        var sync = true;\n        fn.apply(this, args);\n        sync = false;\n    });\n};\n\n},{\"async.util.restparam\":12,\"async.util.setimmediate\":13}],5:[function(require,module,exports){\n'use strict';\n\nmodule.exports = Array.isArray || function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar isArray = require('async.util.isarray');\n\nmodule.exports = function isArrayLike(arr) {\n    return isArray(arr) || (\n        // has a positive integer length property\n        typeof arr.length === 'number' &&\n        arr.length >= 0 &&\n        arr.length % 1 === 0\n    );\n};\n\n},{\"async.util.isarray\":5}],7:[function(require,module,exports){\n'use strict';\n\nvar _keys = require('async.util.keys');\nvar isArrayLike = require('async.util.isarraylike');\n\nmodule.exports = function keyIterator(coll) {\n    var i = -1;\n    var len;\n    var keys;\n    if (isArrayLike(coll)) {\n        len = coll.length;\n        return function next() {\n            i++;\n            return i < len ? i : null;\n        };\n    } else {\n        keys = _keys(coll);\n        len = keys.length;\n        return function next() {\n            i++;\n            return i < len ? keys[i] : null;\n        };\n    }\n};\n\n},{\"async.util.isarraylike\":6,\"async.util.keys\":8}],8:[function(require,module,exports){\n'use strict';\n\nmodule.exports = Object.keys || function keys(obj) {\n    var _keys = [];\n    for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            _keys.push(k);\n        }\n    }\n    return _keys;\n};\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function noop () {};\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function once(fn) {\n    return function() {\n        if (fn === null) return;\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function only_once(fn) {\n    return function() {\n        if (fn === null) throw new Error('Callback was already called.');\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n\n},{}],12:[function(require,module,exports){\n'use strict';\nmodule.exports = function restParam(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n        var length = Math.max(arguments.length - startIndex, 0);\n        var rest = new Array(length);\n        for (var index = 0; index < length; index++) {\n            rest[index] = arguments[index + startIndex];\n        }\n        switch (startIndex) {\n            case 0:\n                return func.call(this, rest);\n            case 1:\n                return func.call(this, arguments[0], rest);\n        }\n    };\n};\n\n},{}],13:[function(require,module,exports){\n(function (setImmediate){(function (){\n'use strict';\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\nvar fallback = function(fn) {\n    setTimeout(fn, 0);\n};\n\nmodule.exports = function setImmediate(fn) {\n    // not a direct alias for IE10 compatibility\n    return (_setImmediate || fallback)(fn);\n};\n\n}).call(this)}).call(this,require(\"timers\").setImmediate)\n\n},{\"timers\":133}],14:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function withoutIndex(iterator) {\n    return function(value, index, callback) {\n        return iterator(value, callback);\n    };\n};\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar isArray = require('async.util.isarray');\nvar restParam = require('async.util.restparam');\nvar ensureAsync = require('async.util.ensureasync');\nvar iterator = require('async.iterator');\n\nmodule.exports = function(tasks, cb) {\n    cb = once(cb || noop);\n    if (!isArray(tasks)) return cb(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return cb();\n\n    function wrapIterator(iterator) {\n        return restParam(function(err, args) {\n            if (err) {\n                cb.apply(null, [err].concat(args));\n            } else {\n                var next = iterator.next();\n                if (next) {\n                    args.push(wrapIterator(next));\n                } else {\n                    args.push(cb);\n                }\n                ensureAsync(iterator).apply(null, args);\n            }\n        });\n    }\n    wrapIterator(iterator(tasks))();\n};\n\n},{\"async.iterator\":2,\"async.util.ensureasync\":4,\"async.util.isarray\":5,\"async.util.noop\":9,\"async.util.once\":10,\"async.util.restparam\":12}],16:[function(require,module,exports){\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n},{}],17:[function(require,module,exports){\n/*\r\n *  big.js v6.2.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2022 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,            // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n    /*\r\n     * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n     * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n     * primitive number without a loss of precision.\r\n     */\r\n    STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        if (typeof n !== 'string') {\r\n          if (Big.strict === true && typeof n !== 'bigint') {\r\n            throw TypeError(INVALID + 'value');\r\n          }\r\n\r\n          // Minus zero?\r\n          n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n        }\r\n\r\n        parse(x, n);\r\n      }\r\n\r\n      // Retain a reference to this Big constructor.\r\n      // Shadow Big.prototype.constructor which points to Object.\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.strict = STRICT;\r\n    Big.roundDown = 0;\r\n    Big.roundHalfUp = 1;\r\n    Big.roundHalfEven = 2;\r\n    Big.roundUp = 3;\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    if (!NUMERIC.test(n)) {\r\n      throw Error(INVALID + 'number');\r\n    }\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n   * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, sd, rm, more) {\r\n    var xc = x.c;\r\n\r\n    if (rm === UNDEFINED) rm = x.constructor.RM;\r\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    if (sd < 1) {\r\n      more =\r\n        rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n        rm === 1 && xc[0] >= 5 ||\r\n        rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n      );\r\n\r\n      xc.length = 1;\r\n\r\n      if (more) {\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        x.e = x.e - sd + 1;\r\n        xc[0] = 1;\r\n      } else {\r\n\r\n        // Zero.\r\n        xc[0] = x.e = 0;\r\n      }\r\n    } else if (sd < xc.length) {\r\n\r\n      // xc[sd] is the digit after the digit that may be rounded up.\r\n      more =\r\n        rm === 1 && xc[sd] >= 5 ||\r\n        rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n          (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n        rm === 3 && (more || !!xc[0]);\r\n\r\n      // Remove any digits after the required precision.\r\n      xc.length = sd;\r\n\r\n      // Round up?\r\n      if (more) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up.\r\n        for (; ++xc[--sd] > 9;) {\r\n          xc[sd] = 0;\r\n          if (sd === 0) {\r\n            ++x.e;\r\n            xc.unshift(1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (sd = xc.length; !xc[--sd];) xc.pop();\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   */\r\n  function stringify(x, doExponential, isNonzero) {\r\n    var e = x.e,\r\n      s = x.c.join(''),\r\n      n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (doExponential) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) {\r\n        for (e -= n; e--;) s += '0';\r\n      } else if (e < n) {\r\n        s = s.slice(0, e) + '.' + s.slice(e);\r\n      }\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && isNonzero ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n   */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) {\r\n      y.s = k;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n    q.s = k;\r\n    k = p < 0 ? 0 : p;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n      p--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (yc[0]) {\r\n        y.s = -b;\r\n      } else if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = 1;\r\n      }\r\n      return y;\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n  \r\n  \r\n  /*\r\n   * Return a new Big whose value is the value of this Big negated.\r\n   */\r\n  P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var e, k, t,\r\n      x = this,\r\n      Big = x.constructor;\r\n\r\n    y = new Big(y);\r\n\r\n    // Signs differ?\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (!yc[0]) {\r\n        if (xc[0]) {\r\n          y = new Big(x);\r\n        } else {\r\n          y.s = x.s;\r\n        }\r\n      }\r\n      return y;\r\n    }\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (e = xe - ye) {\r\n      if (e > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        e = -e;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; e--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    e = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (k) {\r\n      xc.unshift(k);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor('1'),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n      throw Error(INVALID + 'exponent');\r\n    }\r\n\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n   * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.prec = function (sd, rm) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    return round(new this.constructor(this), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n   * using rounding mode rm, or Big.RM if rm is not specified.\r\n   * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.round = function (dp, rm) {\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    return round(new this.constructor(this), dp + this.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big('0.5');\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) {\r\n      throw Error(NAME + 'No square root');\r\n    }\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s + '');\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) {\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = b;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), ++dp, rm);\r\n      for (; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, true, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n      // x.e may have changed if the value is rounded up.\r\n      for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, false, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toJSON = P.toString = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Big as a primitve number.\r\n   */\r\n  P.toNumber = function () {\r\n    var n = Number(stringify(this, true, true));\r\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n      throw Error(NAME + 'Imprecise conversion');\r\n    }\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * rounding mode rm, or Big.RM if rm is not specified.\r\n   * Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      n = x.c[0];\r\n\r\n    if (sd !== UNDEFINED) {\r\n      if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n        throw Error(INVALID + 'precision');\r\n      }\r\n      x = round(new Big(x), sd, rm);\r\n      for (; x.c.length < sd;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    if (Big.strict === true) {\r\n      throw Error(NAME + 'valueOf disallowed');\r\n    }\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n\n},{}],18:[function(require,module,exports){\n\n},{}],19:[function(require,module,exports){\narguments[4][18][0].apply(exports,arguments)\n},{\"dup\":18}],20:[function(require,module,exports){\n(function (Buffer){(function (){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"base64-js\":16,\"buffer\":20,\"ieee754\":77}],21:[function(require,module,exports){\nmodule.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n\n},{}],22:[function(require,module,exports){\n/**\n* Cache data structure with:\n*  - enumerable items\n*  - unique hash item access (if none is passed in, one is generated)\n*  - size (length) expiration\n*  - controllable expiration (e.g. keep in cache longer if older/less likely to change)\n*  - time-based expiration\n*  - custom expiration based on passed-in function\n*\n* Also:\n*  - built to work well with browserify\n*  - no dependencies at all\n*  - pet friendly\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nconst libLinkedList = require(`./LinkedList.js`);\n\nclass CashMoney extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'ObjectCache';\n\n\t\t// The map of node objects by hash because Reasons.\n\t\tthis._HashMap = {};\n\n\t\tthis._RecordMap = {};\n\n\t\tthis._List = new libLinkedList();\n\n\t\t// If the list gets over maxLength, we will automatically remove nodes on insertion.\n\t\tthis.maxLength = 0;\n\n\t\t// If cache entries get over this age, they are removed with prune\n\t\tthis.maxAge = 0;\n\t}\n\n\tget RecordMap()\n\t{\n\t\treturn this._RecordMap;\n\t}\n\n\t// Add (or update) a node in the cache\n\tput(pData, pHash)\n\t{\n\t\t// If the hash of the record exists\n\t\tif (this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\t// Just update the hashed records datum\n\t\t\tthis._HashMap[pHash].Datum = pData;\n\t\t\tthis._RecordMap[pHash] = pData;\n\t\t\treturn this._HashMap[pHash].Datum;\n\t\t}\n\n\t\tlet tmpNode = this._List.push(pData, pHash);\n\t\tthis._HashMap[tmpNode.Hash] = tmpNode;\n\t\tthis._RecordMap[pHash] = pData;\n\n\t\t// Automatically prune if over length, but only prune this nodes worth.\n\t\tif (this.maxLength > 0   &&   this._List.length > this.maxLength)\n\t\t{\n\t\t\t// Pop it off the head of the list\n\t\t\ttmpNode = this._List.pop();\n\t\t\t// Also remove it from the hashmap\n\t\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\t\tdelete this._HashMap[tmpNode.Hash];\n\t\t}\n\n\t\t// Now some expiration properties on the node metadata... namely the birthdate in ms of the node\n\t\ttmpNode.Metadata.Created = +new Date();\n\n\t\treturn tmpNode.Datum;\n\t}\n\n\t// Read a datum by hash from the cache\n\tread(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._HashMap[pHash].Datum;\n\t}\n\n\t// Reinvigorate a node based on hash, updating the timestamp and moving it to the head of the list (also removes custom metadata)\n\ttouch(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get the old node out of the list\n\t\tlet tmpNode = this._List.remove(this._HashMap[pHash]);\n\t\t// Remove it from the hash map\n\t\tdelete this._RecordMap[pHash];\n\t\tdelete this._HashMap[pHash];\n\n\t\t// Now put it back, fresh.\n\t\treturn this.put(tmpNode.Datum, tmpNode.Hash);\n\t}\n\n\t// Expire a cached record based on hash\n\texpire(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpNode = this._HashMap[pHash];\n\n\t\t// Remove it from the list of cached records\n\t\ttmpNode = this._List.remove(tmpNode);\n\t\t// Also remove it from the hashmap\n\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\tdelete this._HashMap[tmpNode.Hash];\n\n\t\t// Return it in case the consumer wants to do anything with it\n\t\treturn tmpNode;\n\t}\n\n\t// Prune records from the cached set based on maxAge\n\tpruneBasedOnExpiration(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tif (this.maxAge < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now enumerate each record and remove any that are expired\n\t\tlet tmpNow = +new Date();\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\t// Expire the node if it is older than max age milliseconds\n\t\t\tif (tmpNow - this._HashMap[tmpKeys[i]].Metadata.Created >= this.maxAge)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on maxLength\n\tpruneBasedOnLength(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\t// Pop records off until we have reached maxLength unless it's 0\n\t\tif (this.maxLength > 0)\n\t\t{\n\t\t\twhile (this._List.length > this.maxLength)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this._List.pop());\n\t\t\t}\n\t\t}\n\n\t\treturn fComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on passed in pPruneFunction(pDatum, pHash, pNode) -- returning true expires it\n\tpruneCustom(fComplete, fPruneFunction, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\tlet tmpNode = this._HashMap[tmpKeys[i]];\n\t\t\t// Expire the node if the passed in function returns true\n\t\t\tif (fPruneFunction(tmpNode.Datum, tmpNode.Hash, tmpNode))\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune the list down to the asserted rules (max age then max length if still too long)\n\tprune(fComplete)\n\t{\n\t\tlet tmpRemovedRecords = [];\n\n\t\t// If there are no cached records, we are done.\n\t\tif (this._List.length < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now prune based on expiration time\n\t\tthis.pruneBasedOnExpiration((fExpirationPruneComplete)=>\n\t\t\t{\n\t\t\t\t// Now prune based on length, then return the removed records in the callback.\n\t\t\t\tthis.pruneBasedOnLength(fComplete, tmpRemovedRecords);\n\t\t\t}, tmpRemovedRecords);\n\t}\n\n\t// Get a low level node (including metadata statistics) by hash from the cache\n\tgetNode(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\n\t\treturn this._HashMap[pHash];\n\t}\n}\n\nmodule.exports = CashMoney;\n},{\"./LinkedList.js\":24,\"fable-serviceproviderbase\":44}],23:[function(require,module,exports){\n/**\n* Double Linked List Node\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Linked List Node Prototype\n*\n* @class LinkedListNode\n* @constructor\n*/\n\nclass LinkedListNode\n{\n\tconstructor()\n\t{\n\t\tthis.Hash = false;\n\t\tthis.Datum = false;\n\n\t\t// This is where expiration and other elements are stored;\n\t\tthis.Metadata = {};\n\n\t\tthis.LeftNode = false;\n\t\tthis.RightNode = false;\n\n\t\t// To allow safe specialty operations on nodes\n\t\tthis.__ISNODE = true;\n\t}\n}\n\nmodule.exports = LinkedListNode;\n},{}],24:[function(require,module,exports){\n\"use strict\"\n/**\n* Simple double linked list to hold the cache entries in, in order.\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module FeeFiFo\n*/\n\nconst libLinkedListNode = require('./LinkedList-Node.js');\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nclass LinkedList\n{\n\tconstructor()\n\t{\n\t\t// Total number of nodes ever processed by this ADT\n\t\tthis.totalNodes = 0;\n\n\t\t// The length of the set of nodes currently in the list\n\t\tthis.length = 0;\n\n\t\tthis.head = false;\n\t\tthis.tail = false;\n\t}\n\n\t// Create a node object.\n\tinitializeNode(pDatum, pHash)\n\t{\n\t\t// Don't allow undefined to be added to the list because of reasons\n\t\tif (typeof(pDatum) === 'undefined')\n\t\t\treturn false;\n\n\t\tthis.totalNodes++;\n\n\t\t// Get (or create) a unique hash\n\t\tlet tmpHash = (typeof(pHash) != 'undefined') ? pHash : `NODE[${this.totalNodes}]`;\n\n\t\tlet tmpNode = new libLinkedListNode();\n\n\t\ttmpNode.Hash = tmpHash;\n\t\ttmpNode.Datum = pDatum;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Add a node to the end (right of tail) of the list.\n\tappend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.tail.RightNode = tmpNode;\n\t\ttmpNode.LeftNode = this.tail;\n\t\tthis.tail = tmpNode;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Append to tail of list (FIFO)\n\tpush(pDatum, pHash)\n\t{\n\t\treturn this.append(pDatum, pHash);\n\t}\n\n\t// Add a node to the beginning (left of head) of the list.\n\tprepend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.head.LeftNode = tmpNode;\n\t\ttmpNode.RightNode = this.head;\n\t\tthis.head = tmpNode;\n\t\treturn tmpNode;\n\t}\n\n\t// Remove a node from the list\n\tremove(pNode)\n\t{\n\t\tif (typeof(pNode) === 'undefined')\n\t\t\treturn false;\n\n\t\tif (!pNode.__ISNODE)\n\t\t\treturn false;\n\n\t\tthis.length--;\n\n\t\t// Last element in list.  Empty it out.\n\t\tif (this.length < 1)\n\t\t{\n\t\t\tthis.head = false;\n\t\t\tthis.tail = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's somewhere in the middle, surgically remove it.\n\t\tif (pNode.LeftNode && pNode.RightNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = pNode.RightNode;\n\t\t\tpNode.RightNode.LeftNode = pNode.LeftNode;\n\n\t\t\tpNode.RightNode = false;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's the tail\n\t\tif (pNode.LeftNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = false;\n\t\t\tthis.tail = pNode.LeftNode;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It must be the head\n\t\tpNode.RightNode.LeftNode = false;\n\t\tthis.head = pNode.RightNode;\n\t\tpNode.RightNode = false;\n\t\treturn pNode;\n\t}\n\n\t// Remove the head of the list (FIFO)\n\tpop()\n\t{\n\t\treturn this.remove(this.head);\n\t}\n\n\t// Enumerate over each node IN ORDER, running the function fAction(pDatum, pHash, fCallback) then calling the function fComplete callback when done\n\teach(fAction, fComplete)\n\t{\n\t\tif (this.length < 1)\n\t\t\treturn fComplete();\n\n\t\tlet tmpNode = false;\n\n\t\tlet fIterator = (pError)=>\n\t\t{\n\t\t\t// If the user passed in a callback with an error, call their callback with the error\n\t\t\tif (pError)\n\t\t\t\treturn fComplete(pError);\n\n\t\t\t// If there is no node, this must be the initial run.\n\t\t\tif (!tmpNode)\n\t\t\t\ttmpNode = this.head;\n\t\t\t// Check if we are at the tail of the list\n\t\t\telse if (!tmpNode.RightNode)\n\t\t\t\treturn fComplete();\n\t\t\t// Proceed to the next node\n\t\t\telse\n\t\t\t\ttmpNode = tmpNode.RightNode;\n\n\t\t\t// Call the actual action\n\t\t\t// I hate this pattern because long tails eventually cause stack overflows.\n\t\t\tfAction(tmpNode.Datum, tmpNode.Hash, fIterator);\n\t\t};\n\n\t\t// Now kick off the iterator\n\t\treturn fIterator();\n\t}\n\n\t// Seek a specific node, 0 is the index of the first node.\n\tseek(pNodeIndex)\n\t{\n\t\tif (!pNodeIndex)\n\t\t\treturn false;\n\t\tif (this.length < 1)\n\t\t\treturn false;\n\t\tif (pNodeIndex >= this.length)\n\t\t\treturn false;\n\n\t\tlet tmpNode = this.head;\n\t\tfor (let i = 0; i < pNodeIndex; i++)\n\t\t{\n\t\t\ttmpNode = tmpNode.RightNode;\n\t\t}\n\n\t\treturn tmpNode;\n\t}\n}\n\nmodule.exports = LinkedList;\n},{\"./LinkedList-Node.js\":23}],25:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n\n},{\"./\":26,\"get-intrinsic\":69}],26:[function(require,module,exports){\n'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\nvar setFunctionLength = require('set-function-length');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tif (typeof originalFunction !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\tvar func = $reflectApply(bind, $call, arguments);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + $max(0, originalFunction.length - (arguments.length - 1)),\n\t\ttrue\n\t);\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n\n},{\"function-bind\":68,\"get-intrinsic\":69,\"set-function-length\":109}],27:[function(require,module,exports){\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.partitioned) {\n    str += '; Partitioned'\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} val\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n},{}],28:[function(require,module,exports){\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));\n},{}],29:[function(require,module,exports){\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_advancedFormat=t()}(this,(function(){\"use strict\";return function(e,t){var r=t.prototype,n=r.format;r.format=function(e){var t=this,r=this.$locale();if(!this.isValid())return n.bind(this)(e);var s=this.$utils(),a=(e||\"YYYY-MM-DDTHH:mm:ssZ\").replace(/\\[([^\\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g,(function(e){switch(e){case\"Q\":return Math.ceil((t.$M+1)/3);case\"Do\":return r.ordinal(t.$D);case\"gggg\":return t.weekYear();case\"GGGG\":return t.isoWeekYear();case\"wo\":return r.ordinal(t.week(),\"W\");case\"w\":case\"ww\":return s.s(t.week(),\"w\"===e?1:2,\"0\");case\"W\":case\"WW\":return s.s(t.isoWeek(),\"W\"===e?1:2,\"0\");case\"k\":case\"kk\":return s.s(String(0===t.$H?24:t.$H),\"k\"===e?1:2,\"0\");case\"X\":return Math.floor(t.$d.getTime()/1e3);case\"x\":return t.$d.getTime();case\"z\":return\"[\"+t.offsetName()+\"]\";case\"zzz\":return\"[\"+t.offsetName(\"long\")+\"]\";default:return e}}));return n.bind(this)(a)}}}));\n},{}],30:[function(require,module,exports){\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isoWeek=t()}(this,(function(){\"use strict\";var e=\"day\";return function(t,i,s){var a=function(t){return t.add(4-t.isoWeekday(),e)},d=i.prototype;d.isoWeekYear=function(){return a(this).year()},d.isoWeek=function(t){if(!this.$utils().u(t))return this.add(7*(t-this.isoWeek()),e);var i,d,n,o,r=a(this),u=(i=this.isoWeekYear(),d=this.$u,n=(d?s.utc:s)().year(i).startOf(\"year\"),o=4-n.isoWeekday(),n.isoWeekday()>4&&(o+=7),n.add(o,e));return r.diff(u,\"week\")+1},d.isoWeekday=function(e){return this.$utils().u(e)?this.day()||7:this.day(this.day()%7?e:e-7)};var n=d.startOf;d.startOf=function(e,t){var i=this.$utils(),s=!!i.u(t)||t;return\"isoweek\"===i.p(e)?s?this.date(this.date()-(this.isoWeekday()-1)).startOf(\"day\"):this.date(this.date()-1-(this.isoWeekday()-1)+7).endOf(\"day\"):n.bind(this)(e,t)}}}));\n},{}],31:[function(require,module,exports){\n!function(r,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(r=\"undefined\"!=typeof globalThis?globalThis:r||self).dayjs_plugin_relativeTime=e()}(this,(function(){\"use strict\";return function(r,e,t){r=r||{};var n=e.prototype,o={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"};function i(r,e,t,o){return n.fromToBase(r,e,t,o)}t.en.relativeTime=o,n.fromToBase=function(e,n,i,d,u){for(var f,a,s,l=i.$locale().relativeTime||o,h=r.thresholds||[{l:\"s\",r:44,d:\"second\"},{l:\"m\",r:89},{l:\"mm\",r:44,d:\"minute\"},{l:\"h\",r:89},{l:\"hh\",r:21,d:\"hour\"},{l:\"d\",r:35},{l:\"dd\",r:25,d:\"day\"},{l:\"M\",r:45},{l:\"MM\",r:10,d:\"month\"},{l:\"y\",r:17},{l:\"yy\",d:\"year\"}],m=h.length,c=0;c<m;c+=1){var y=h[c];y.d&&(f=d?t(e).diff(i,y.d,!0):i.diff(e,y.d,!0));var p=(r.rounding||Math.round)(Math.abs(f));if(s=f>0,p<=y.r||!y.r){p<=1&&c>0&&(y=h[c-1]);var v=l[y.l];u&&(p=u(\"\"+p)),a=\"string\"==typeof v?v.replace(\"%d\",p):v(p,n,y.l,s);break}}if(n)return a;var M=s?l.future:l.past;return\"function\"==typeof M?M(a):M.replace(\"%s\",a)},n.to=function(r,e){return i(r,e,this,!0)},n.from=function(r,e){return i(r,e,this)};var d=function(r){return r.$u?t.utc():t()};n.toNow=function(r){return this.to(d(this),r)},n.fromNow=function(r){return this.from(d(this),r)}}}));\n},{}],32:[function(require,module,exports){\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_timezone=e()}(this,(function(){\"use strict\";var t={year:0,month:1,day:2,hour:3,minute:4,second:5},e={};return function(n,i,o){var r,a=function(t,n,i){void 0===i&&(i={});var o=new Date(t),r=function(t,n){void 0===n&&(n={});var i=n.timeZoneName||\"short\",o=t+\"|\"+i,r=e[o];return r||(r=new Intl.DateTimeFormat(\"en-US\",{hour12:!1,timeZone:t,year:\"numeric\",month:\"2-digit\",day:\"2-digit\",hour:\"2-digit\",minute:\"2-digit\",second:\"2-digit\",timeZoneName:i}),e[o]=r),r}(n,i);return r.formatToParts(o)},u=function(e,n){for(var i=a(e,n),r=[],u=0;u<i.length;u+=1){var f=i[u],s=f.type,m=f.value,c=t[s];c>=0&&(r[c]=parseInt(m,10))}var d=r[3],l=24===d?0:d,h=r[0]+\"-\"+r[1]+\"-\"+r[2]+\" \"+l+\":\"+r[4]+\":\"+r[5]+\":000\",v=+e;return(o.utc(h).valueOf()-(v-=v%1e3))/6e4},f=i.prototype;f.tz=function(t,e){void 0===t&&(t=r);var n=this.utcOffset(),i=this.toDate(),a=i.toLocaleString(\"en-US\",{timeZone:t}),u=Math.round((i-new Date(a))/1e3/60),f=o(a,{locale:this.$L}).$set(\"millisecond\",this.$ms).utcOffset(15*-Math.round(i.getTimezoneOffset()/15)-u,!0);if(e){var s=f.utcOffset();f=f.add(n-s,\"minute\")}return f.$x.$timezone=t,f},f.offsetName=function(t){var e=this.$x.$timezone||o.tz.guess(),n=a(this.valueOf(),e,{timeZoneName:t}).find((function(t){return\"timezonename\"===t.type.toLowerCase()}));return n&&n.value};var s=f.startOf;f.startOf=function(t,e){if(!this.$x||!this.$x.$timezone)return s.call(this,t,e);var n=o(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\"),{locale:this.$L});return s.call(n,t,e).tz(this.$x.$timezone,!0)},o.tz=function(t,e,n){var i=n&&e,a=n||e||r,f=u(+o(),a);if(\"string\"!=typeof t)return o(t).tz(a);var s=function(t,e,n){var i=t-60*e*1e3,o=u(i,n);if(e===o)return[i,e];var r=u(i-=60*(o-e)*1e3,n);return o===r?[i,o]:[t-60*Math.min(o,r)*1e3,Math.max(o,r)]}(o.utc(t,i).valueOf(),f,a),m=s[0],c=s[1],d=o(m).utcOffset(c);return d.$x.$timezone=a,d},o.tz.guess=function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},o.tz.setDefault=function(t){r=t}}}));\n},{}],33:[function(require,module,exports){\n!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_utc=i()}(this,(function(){\"use strict\";var t=\"minute\",i=/[+-]\\d\\d(?::?\\d\\d)?/g,e=/([+-]|\\d\\d)/g;return function(s,f,n){var u=f.prototype;n.utc=function(t){var i={date:t,utc:!0,args:arguments};return new f(i)},u.utc=function(i){var e=n(this.toDate(),{locale:this.$L,utc:!0});return i?e.add(this.utcOffset(),t):e},u.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var o=u.parse;u.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),o.call(this,t)};var r=u.init;u.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else r.call(this)};var a=u.utcOffset;u.utcOffset=function(s,f){var n=this.$utils().u;if(n(s))return this.$u?0:n(this.$offset)?a.call(this):this.$offset;if(\"string\"==typeof s&&(s=function(t){void 0===t&&(t=\"\");var s=t.match(i);if(!s)return null;var f=(\"\"+s[0]).match(e)||[\"-\",0,0],n=f[0],u=60*+f[1]+ +f[2];return 0===u?0:\"+\"===n?u:-u}(s),null===s))return this;var u=Math.abs(s)<=16?60*s:s,o=this;if(f)return o.$offset=u,o.$u=0===s,o;if(0!==s){var r=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(o=this.local().add(u+r,t)).$offset=u,o.$x.$localOffset=r}else o=this.utc();return o};var h=u.format;u.format=function(t){var i=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return h.call(this,i)},u.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*t},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var l=u.toDate;u.toDate=function(t){return\"s\"===t&&this.$offset?n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate():l.call(this)};var c=u.diff;u.diff=function(t,i,e){if(t&&this.$u===t.$u)return c.call(this,t,i,e);var s=this.local(),f=n(t).local();return c.call(s,f,i,e)}}}));\n},{}],34:[function(require,module,exports){\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekOfYear=t()}(this,(function(){\"use strict\";var e=\"week\",t=\"year\";return function(i,n,r){var f=n.prototype;f.week=function(i){if(void 0===i&&(i=null),null!==i)return this.add(7*(i-this.week()),\"day\");var n=this.$locale().yearStart||1;if(11===this.month()&&this.date()>25){var f=r(this).startOf(t).add(1,t).date(n),s=r(this).endOf(e);if(f.isBefore(s))return 1}var a=r(this).startOf(t).date(n).startOf(e).subtract(1,\"millisecond\"),o=this.diff(a,e,!0);return o<0?r(this).startOf(\"week\").week():Math.ceil(o)},f.weeks=function(e){return void 0===e&&(e=null),this.week(e)}}}));\n},{}],35:[function(require,module,exports){\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekday=t()}(this,(function(){\"use strict\";return function(e,t){t.prototype.weekday=function(e){var t=this.$locale().weekStart||0,i=this.$W,n=(i<t?i+7:i)-t;return this.$utils().u(e)?n:this.subtract(n,\"day\").add(e,\"day\")}}}));\n},{}],36:[function(require,module,exports){\n'use strict';\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = hasPropertyDescriptors && GetIntrinsic('%Object.defineProperty%', true);\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar gopd = require('gopd');\n\n/** @type {(obj: Record<PropertyKey, unknown>, property: PropertyKey, value: unknown, nonEnumerable?: boolean | null, nonWritable?: boolean | null, nonConfigurable?: boolean | null, loose?: boolean) => void} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n\n},{\"get-intrinsic\":69,\"gopd\":70,\"has-property-descriptors\":71}],37:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n},{}],38:[function(require,module,exports){\n/**\n* Base Logger Class\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass BaseLogger extends libFableServiceProviderBase\n{\n\tconstructor(pLogStreamSettings, pLogStreamHash)\n\t{\n\t\tsuper(pLogStreamSettings, pLogStreamHash);\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = (typeof(pLogStreamSettings) == 'object') ? pLogStreamSettings : {};\n\n\t\tthis.serviceType = 'Logging-Provider';\n\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\t// We added this as the mechanism for tracking loggers to allow multiple simultaneous streams\n\t\t// to the same provider.\n\t\tthis.loggerUUID = this.generateInsecureUUID();\n\n\t\t// Eventually we can use this array to ompute which levels the provider allows.\n\t\t// For now it's just used to precompute some string concatenations.\n\t\tthis.levels = (\n\t\t\t[\n\t\t\t\t\"trace\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"info\",\n\t\t\t\t\"warn\",\n\t\t\t\t\"error\",\n\t\t\t\t\"fatal\"\n\t\t\t]);\n\t}\n\n\t// This is meant to generate programmatically insecure UUIDs to identify loggers\n\tgenerateInsecureUUID()\n\t{\n\t\tlet tmpDate = new Date().getTime();\n\t\tlet tmpUUID = 'LOGSTREAM-xxxxxx-yxxxxx'.replace(/[xy]/g,\n\t\t\t\t(pCharacter) =>\n\t\t\t\t{\n\t\t\t\t\t// Funny algorithm from w3resource that is twister-ish without the deep math and security\n\t\t\t\t\t// ..but good enough for unique log stream identifiers\n\t\t\t\t\tlet tmpRandomData = (tmpDate + Math.random()*16)%16 | 0;\n\t\t\t\t\ttmpDate = Math.floor(tmpDate/16);\n\n\t\t\t\t\treturn (pCharacter =='x' ? tmpRandomData : (tmpRandomData&0x3|0x8)).toString(16);\n\t\t\t\t});\n\t\treturn tmpUUID;\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n\n},{\"fable-serviceproviderbase\":44}],39:[function(require,module,exports){\n/**\n* Default Logger Provider Function\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\nvar getDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\ttmpDefaultProviders.default = tmpDefaultProviders.console;\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();\n},{\"./Fable-Log-Logger-Console.js\":41}],40:[function(require,module,exports){\nmodule.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]\n},{}],41:[function(require,module,exports){\nlet libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings);\n\n\t\tthis._ShowTimeStamps = this._Settings.hasOwnProperty('showtimestamps') ? (this._Settings.showtimestamps == true) : true;\n\t\tthis._FormattedTimeStamps = this._Settings.hasOwnProperty('formattedtimestamps') ? (this._Settings.formattedtimestamps == true) : true;\n\n\t\tthis._ContextMessage = this._Settings.hasOwnProperty('Context') ? `(${this._Settings.Context})` :\n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? `(${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'Unnamed_Log_Context';\n\n\t\t// Allow the user to decide what gets output to the console\n\t\tthis._OutputLogLinesToConsole = this._Settings.hasOwnProperty('outputloglinestoconsole') ? this._Settings.outputloglinestoconsole : true;\n\t\tthis._OutputObjectsToConsole = this._Settings.hasOwnProperty('outputobjectstoconsole') ? this._Settings.outputobjectstoconsole : true;\n\n\t\t// Precompute the prefix for each level\n\t\tthis.prefixCache = {};\n\t\tfor (let i = 0; i <= this.levels.length; i++)\n\t\t{\n\t\t\tthis.prefixCache[this.levels[i]] = `[${this.levels[i]}] ${this._ContextMessage}: `;\n\n\t\t\tif (this._ShowTimeStamps)\n\t\t\t{\n\t\t\t\t// If there is a timestamp we need a to prepend space before the prefixcache string, since the timestamp comes first\n\t\t\t\tthis.prefixCache[this.levels[i]] = ' '+this.prefixCache[this.levels[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpTimeStamp = '';\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = (new Date()).toISOString();\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = +new Date();\n\t\t}\n\n\t\tlet tmpLogLine = `${tmpTimeStamp}${this.prefixCache[pLevel]}${pLogText}`;\n\n\t\tif (this._OutputLogLinesToConsole)\n\t\t{\n\t\t\tconsole.log(tmpLogLine);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (this._OutputObjectsToConsole && (typeof(pObject) !== 'undefined'))\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 2));\n\t\t}\n\n\t\t// Provide an easy way to be overridden and be consistent\n\t\treturn tmpLogLine;\n\t}\n}\n\nmodule.exports = ConsoleLogger;\n},{\"./Fable-Log-BaseLogger.js\":38}],42:[function(require,module,exports){\nconst libConsoleLog = require('./Fable-Log-Logger-Console.js');\nconst libFS = require('fs');\nconst libPath = require('path');\n\nclass SimpleFlatFileLogger extends libConsoleLog\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings, pFableLog);\n\n\t\t// If a path isn't provided for the logfile, it tries to use the ProductName or Context\n\t\tthis.logFileRawPath = (this._Settings.hasOwnProperty('path')) ? this._Settings.path : `./${this._ContextMessage}.log`;\n\t\tthis.logFilePath = libPath.normalize(this.logFileRawPath);\n\n\t\tthis.logFileStreamOptions = (this._Settings.hasOwnProperty('fileStreamoptions')) ? this._Settings.fileStreamOptions : (\n\t\t\t{\n\t\t\t\t\"flags\": \"a\",\n\t\t\t\t\"encoding\": \"utf8\"\n\t\t\t})\n\n\t\tthis.fileWriter = libFS.createWriteStream(this.logFilePath, this.logFileStreamOptions);\n\n\t\tthis.activelyWriting = false;\n\n\t\tthis.logLineStrings = [];\n\t\tthis.logObjectStrings = [];\n\n\t\tthis.defaultWriteCompleteCallback = ()=>{};\n\t\tthis.defaultBufferFlushCallback = ()=>{};\n\t}\n\n\tcloseWriter(fCloseComplete)\n\t{\n\t\tlet tmpCloseComplete = (typeof(fCloseComplete) == 'function') ? fCloseComplete : ()=>{};\n\t\tif (this.fileWriter)\n\t\t{\n\t\t\tthis.fileWriter.end('\\n');\n\t\t\treturn this.fileWriter.once('finish', tmpCloseComplete.bind(this));\n\t\t}\n\t}\n\n\tcompleteBufferFlushToLogFile(fFlushComplete)\n\t{\n\t\tthis.activelyWriting = false;\n\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\tif (this.logLineStrings.length > 0)\n\t\t{\n\t\t\tthis.flushBufferToLogFile(tmpFlushComplete);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpFlushComplete();\n\t\t}\n\t}\n\n\tflushBufferToLogFile(fFlushComplete)\n\t{\n\t\tif (!this.activelyWriting)\n\t\t{\n\t\t\t// Only want to be writing one thing at a time....\n\t\t\tthis.activelyWriting = true;\n\n\t\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\t\t// Get the current buffer arrays.  These should always have matching number of elements.\n\t\t\tlet tmpLineStrings = this.logLineStrings;\n\t\t\tlet tmpObjectStrings = this.logObjectStrings;\n\n\t\t\t// Reset these to be filled while we process this queue...\n\t\t\tthis.logLineStrings = [];\n\t\t\tthis.logObjectStrings = [];\n\n\t\t\t// This is where we will put each line before writing it to the file...\n\t\t\tlet tmpConstructedBufferOutputString = '';\n\n\t\t\tfor (let i = 0; i < tmpLineStrings.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: Windows Newline?   ....... yo no se!\n\t\t\t\ttmpConstructedBufferOutputString += `${tmpLineStrings[i]}\\n`;\n\t\t\t\tif (tmpObjectStrings[i] !== false)\n\t\t\t\t{\n\t\t\t\t\ttmpConstructedBufferOutputString += `${tmpObjectStrings[i]}\\n`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.fileWriter.write(tmpConstructedBufferOutputString, 'utf8'))\n\t\t\t{\n\t\t\t\t// If the streamwriter returns false, we need to wait for it to drain.\n\t\t\t\tthis.fileWriter.once('drain', this.completeBufferFlushToLogFile.bind(this, tmpFlushComplete));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.completeBufferFlushToLogFile(tmpFlushComplete);\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpLogLine = super.write(pLevel, pLogText, pObject);\n\n\t\t// Use a very simple array as the write buffer\n\t\tthis.logLineStrings.push(tmpLogLine);\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tthis.logObjectStrings.push(JSON.stringify(pObject, null, 4));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logObjectStrings.push(false);\n\t\t}\n\n\t\tthis.flushBufferToLogFile();\n\t}\n}\n\nmodule.exports = SimpleFlatFileLogger;\n},{\"./Fable-Log-Logger-Console.js\":41,\"fs\":19,\"path\":92}],43:[function(require,module,exports){\n/**\n* Fable Logging Service\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass FableLog extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'Logging';\n\n\t\tlet tmpSettings = (typeof(pSettings) === 'object') ? pSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders-Node.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'default',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\nmodule.exports = FableLog;\nmodule.exports.LogProviderBase = require('./Fable-Log-BaseLogger.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-Console.js');\nmodule.exports.LogProviderFlatfile = require('./Fable-Log-Logger-SimpleFlatFile.js');\n\n},{\"./Fable-Log-BaseLogger.js\":38,\"./Fable-Log-DefaultProviders-Node.js\":39,\"./Fable-Log-DefaultStreams.json\":40,\"./Fable-Log-Logger-Console.js\":41,\"./Fable-Log-Logger-SimpleFlatFile.js\":42,\"fable-serviceproviderbase\":44}],44:[function(require,module,exports){\n/**\n* Fable Service Base\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\t// The constructor can be used in two ways:\n\t// 1) With a fable, options object and service hash (the options object and service hash are optional)\n\t// 2) With an object or nothing as the first parameter, where it will be treated as the options object\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Check if a fable was passed in; connect it if so\n\t\tif ((typeof(pFable) === 'object') && pFable.isFable)\n\t\t{\n\t\t\tthis.connectFable(pFable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.fable = false;\n\t\t}\n\n\t\t// initialize options and UUID based on whether the fable was passed in or not.\n\t\tif (this.fable)\n\t\t{\n\t\t\tthis.UUID = pFable.getUUID();\n\t\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t\t: {};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// With no fable, check to see if there was an object passed into either of the first two\n\t\t\t// Parameters, and if so, treat it as the options object\n\t\t\tthis.options = ((typeof(pFable) === 'object') && !pFable.isFable) ? pFable\n\t\t\t\t\t\t\t: (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t\t: {};\n\t\t\tthis.UUID = `CORE-SVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`\n\t\t}\n\n\t\t// It's expected that the deriving class will set this\n\t\tthis.serviceType = `Unknown-${this.UUID}`;\n\n\t\t// The service hash is used to identify the specific instantiation of the service in the services map\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash \n\t\t\t\t\t: (!this.fable && (typeof(pOptions) === 'string')) ? pOptions\n\t\t\t\t\t: `${this.UUID}`;\n\t}\n\n\tconnectFable(pFable)\n\t{\n\t\tif ((typeof(pFable) !== 'object') || (!pFable.isFable))\n\t\t{\n\t\t\tlet tmpErrorMessage = `Fable Service Provider Base: Cannot connect to Fable, invalid Fable object passed in.  The pFable parameter was a [${typeof(pFable)}].}`;\n\t\t\tconsole.log(tmpErrorMessage);\n\t\t\treturn new Error(tmpErrorMessage);\n\t\t}\n\n\t\tif (!this.fable)\n\t\t{\n\t\t\tthis.fable = pFable;\n\t\t}\n\n\t\tif (!this.log)\n\t\t{\n\t\t\tthis.log = this.fable.Logging;\n\t\t}\n\t\tif (!this.services)\n\t\t{\n\t\t\tthis.services = this.fable.services;\n\t\t}\n\n\t\tif (!this.servicesMap)\n\t\t{\n\t\t\tthis.servicesMap = this.fable.servicesMap;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tstatic isFableService = true;\n}\n\nmodule.exports = FableServiceProviderBase;\n\n// This is left here in case we want to go back to having different code/base class for \"core\" services\nmodule.exports.CoreServiceProviderBase = FableServiceProviderBase;\n},{}],45:[function(require,module,exports){\nmodule.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n\n},{}],46:[function(require,module,exports){\n(function (process){(function (){\n/**\n* Fable Settings Template Processor\n*\n* This class allows environment variables to come in via templated expressions, and defaults to be set.\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\nconst libPrecedent = require('precedent');\n\nclass FableSettingsTemplateProcessor\n{\n\tconstructor(pDependencies)\n\t{\n        // Use a no-dependencies templating engine to parse out environment variables\n\t\tthis.templateProcessor = new libPrecedent();\n\n        // TODO: Make the environment variable wrap expression demarcation characters configurable?\n\t\tthis.templateProcessor.addPattern('${', '}',\n\t\t\t(pTemplateValue)=>\n\t\t\t{\n\t\t\t\tlet tmpTemplateValue = pTemplateValue.trim();\n\n\t\t\t\tlet tmpSeparatorIndex = tmpTemplateValue.indexOf('|');\n\n\t\t\t\tconst tmpDefaultValue = tmpSeparatorIndex >= 0 ? tmpTemplateValue.substring(tmpSeparatorIndex+1) : '';\n\n\t\t\t\tlet tmpEnvironmentVariableName = (tmpSeparatorIndex > -1) ? tmpTemplateValue.substring(0, tmpSeparatorIndex) : tmpTemplateValue;\n\n\t\t\t\tif (process.env.hasOwnProperty(tmpEnvironmentVariableName))\n\t\t\t\t{\n\t\t\t\t\treturn process.env[tmpEnvironmentVariableName];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpDefaultValue;\n\t\t\t\t}\n\t\t\t});\n    }\n\n    parseSetting(pString)\n    {\n        return this.templateProcessor.parseString(pString);\n    }\n}\n\nmodule.exports = FableSettingsTemplateProcessor;\n\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":98,\"precedent\":95}],47:[function(require,module,exports){\n/**\n* Fable Settings Add-on\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nconst libFableSettingsTemplateProcessor = require('./Fable-Settings-TemplateProcessor.js');\n\nclass FableSettings extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'SettingsManager';\n\n\t\t// Initialize the settings value template processor\n\t\tthis.settingsTemplateProcessor = new libFableSettingsTemplateProcessor();\n\n\t\t// set straight away so anything that uses it respects the initial setting\n\t\tthis._configureEnvTemplating(pSettings);\n\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')));\n\t}\n\n\t// Update the configuration for environment variable templating based on the current settings object\n\t_configureEnvTemplating(pSettings)\n\t{\n\t\t// default environment variable templating to on\n\t\tthis._PerformEnvTemplating = !pSettings || pSettings.NoEnvReplacement !== true;\n\t}\n\n\t// Resolve (recursive) any environment variables found in settings object.\n\t_resolveEnv(pSettings)\n\t{\n\t\tfor (const tmpKey in pSettings)\n\t\t{\n\t\t\tif (typeof(pSettings[tmpKey]) === 'object')\n\t\t\t{\n\t\t\t\tthis._resolveEnv(pSettings[tmpKey]);\n\t\t\t}\n\t\t\telse if (typeof(pSettings[tmpKey]) === 'string')\n\t\t\t{\n\t\t\t\tpSettings[tmpKey] = this.settingsTemplateProcessor.parseSetting(pSettings[tmpKey]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if a value is an object (but not an array).\n\t */\n\t_isObject(value)\n\t{\n\t\treturn typeof(value) === 'object' && !Array.isArray(value);\n\t}\n\n\t/**\n\t * Merge two plain objects. Keys that are objects in both will be merged property-wise.\n\t */\n\t_deepMergeObjects(toObject, fromObject)\n\t{\n\t\tif (!fromObject || !this._isObject(fromObject))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.keys(fromObject).forEach((key) =>\n\t\t{\n\t\t\tconst fromValue = fromObject[key];\n\t\t\tif (this._isObject(fromValue))\n\t\t\t{\n\t\t\t\tconst toValue = toObject[key];\n\t\t\t\tif (toValue && this._isObject(toValue))\n\t\t\t\t{\n\t\t\t\t\t// both are objects, so do a recursive merge\n\t\t\t\t\tthis._deepMergeObjects(toValue, fromValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoObject[key] = fromValue;\n\t\t});\n\t\treturn toObject;\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\t\ttmpSettingsTo = this._deepMergeObjects(tmpSettingsTo, tmpSettingsFromCopy);\n\n\t\tif (this._PerformEnvTemplating)\n\t\t{\n\t\t\tthis._resolveEnv(tmpSettingsTo);\n\t\t}\n\t\t// Update env tempating config, since we just updated the config object, and it may have changed\n\t\tthis._configureEnvTemplating(tmpSettingsTo);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\n\t\tthis.settings = this._deepMergeObjects(tmpSettingsFromCopy, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = FableSettings;\nmodule.exports.new = autoConstruct;\n},{\"./Fable-Settings-Default\":45,\"./Fable-Settings-TemplateProcessor.js\":46,\"fable-serviceproviderbase\":44}],48:[function(require,module,exports){\n/**\n* Random Byte Generator - Browser version\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn this.generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n\n},{}],49:[function(require,module,exports){\n/**\n* Fable UUID Generator\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;0\n\nconst libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'UUID';\n\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = FableUUID;\nmodule.exports.new = autoConstruct;\n\n},{\"./Fable-UUID-Random.js\":48,\"fable-serviceproviderbase\":44}],50:[function(require,module,exports){\n/**\n* Fable Application Services Support Library\n* @author <steven@velozo.com>\n*/\n// Pre-init services\nconst libFableSettings = require('fable-settings');\nconst libFableUUID = require('fable-uuid');\nconst libFableLog = require('fable-log');\n\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass Fable extends libFableServiceBase.CoreServiceProviderBase\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\t// Initialization Phase 0: Set up the lowest level state (fable is a utility service manager at heart)\n\t\tthis.serviceType = 'ServiceManager';\n\n\t\t// An array of the types of services available\n\t\tthis.serviceTypes = [];\n\t\t// A map of instantiated services\n\t\tthis.servicesMap = {};\n\t\t// A map of the default instantiated service by type\n\t\tthis.services = {};\n\n\t\t// A map of class constructors for services\n\t\tthis.serviceClasses = {};\n\n\t\t// If we need extra service initialization capabilities\n\t\tthis.extraServiceInitialization = false;\n\n\t\t// Set how noisy the system is about signaling complexity\n\t\tthis.LogNoisiness = 0;\n\n\t\t// Initialization Phase 1: Set up the core utility services\n\t\t// These are things like power, water, and sewage.  They are required for fable to run (e.g. logging, settings, etc)\n\n\t\t// Instantiate the default Settings Manager\n\t\tthis.SettingsManager = new libFableSettings(pSettings);\n\t\tthis.SettingsManager = this.SettingsManager;\n\t\t// Instantiate the UUID generator\n\t\tthis.UUID = new libFableUUID(this.SettingsManager.settings);\n\t\t// Instantiate the logging system\n\t\tthis.Logging = new libFableLog(this.SettingsManager.settings);\n\t\tthis.Logging.initialize();\n\n\t\t// Initialization Phase 1.5: Instantiate the service manager\n\t\t// This is the start actual bootstrapping point for fable.\n\t\t// For consistency fable is treated as a service.\n\t\tthis.ServiceManager = this;\n\t\t// TODO: Remove this when Orator and meadow-endpoints are shifted to this new pattern\n\t\tthis.serviceManager = this;\n\t\t// END TODO\n\t\tthis.connectFable(this);\n\t\t// --> Bootstrapping of fable into the Service Manager is complete\n\n\t\t// Initialization Phase 2: Map in the default services.\n\t\t// They will then be available in the Default service provider set as well.\n\t\tthis.connectPreinitServiceProviderInstance(this.UUID);\n\t\tthis.connectPreinitServiceProviderInstance(this.Logging);\n\t\tthis.connectPreinitServiceProviderInstance(this.SettingsManager);\n\n\t\t// Initialize and instantiate the default baked-in Data Arithmatic service\n\t\tthis.addAndInstantiateServiceType('EnvironmentData', require('./services/Fable-Service-EnvironmentData.js'));\n\t\tthis.addServiceType('Template', require('./services/Fable-Service-Template.js'));\n\t\tthis.addServiceType('MetaTemplate', require('./services/Fable-Service-MetaTemplate.js'));\n\t\tthis.addServiceType('Anticipate', require('./services/Fable-Service-Anticipate.js'));\n\t\tthis.addAndInstantiateServiceType('Dates', require('./services/Fable-Service-DateManipulation.js'));\n\t\tthis.addAndInstantiateServiceType('DataFormat', require('./services/Fable-Service-DataFormat.js'));\n\t\tthis.addAndInstantiateServiceType('DataGeneration', require('./services/Fable-Service-DataGeneration.js'));\n\t\tthis.addAndInstantiateServiceType('Utility', require('./services/Fable-Service-Utility.js'));\n\t\tthis.addServiceType('Operation', require('./services/Fable-Service-Operation.js'));\n\t\tthis.addServiceType('RestClient', require('./services/Fable-Service-RestClient.js'));\n\t\tthis.addServiceType('CSVParser', require('./services/Fable-Service-CSVParser.js'));\n\t\tthis.addServiceType('Manifest', require('manyfest'));\n\t\tthis.addServiceType('ObjectCache', require('cachetrax'));\n\t\tthis.addServiceType('FilePersistence', require('./services/Fable-Service-FilePersistence.js'));\n\t}\n\n\t/* State Accessors */\n\tget isFable()\n\t{\n\t\treturn true;\n\t}\n\n\tget settings()\n\t{\n\t\treturn this.SettingsManager.settings;\n\t}\n\n\tget settingsManager()\n\t{\n\t\treturn this.SettingsManager;\n\t}\n\n\t// For backwards compatibility\n\tgetUUID()\n\t{\n\t\treturn this.UUID.getUUID();\n\t}\n\n\tnewAnticipate()\n\t{\n\t\treturn this.instantiateServiceProviderWithoutRegistration('Anticipate');\n\t}\n\n\t/* Service Manager Methods */\n\taddServiceType(pServiceType, pServiceClass)\n\t{\n\t\tif (this.servicesMap.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\t// TODO: Check if any services are running?\n\t\t\tthis.log.warn(`Adding a service type [${pServiceType}] that already exists.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the container for instantiated services to go in\n\t\t\tthis.servicesMap[pServiceType] = {};\n\n\t\t\t// Add the type to the list of types\n\t\t\tthis.serviceTypes.push(pServiceType);\n\t\t}\n\n\t\t// Using the static member of the class is a much more reliable way to check if it is a service class than instanceof\n\t\tif ((typeof(pServiceClass) == 'function') && (pServiceClass.isFableService))\n\t\t{\n\t\t\t// Add the class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = pServiceClass;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the base class to the list of classes\n\t\t\tthis.log.error(`Attempted to add service type [${pServiceType}] with an invalid class.  Using base service class, which will not crash but won't provide meaningful services.`);\n\t\t\tthis.serviceClasses[pServiceType] = libFableServiceBase;\n\t\t}\n\t}\n\n\t// This is for the services that are meant to run mostly single-instance so need a default at initialization\n\taddAndInstantiateServiceType(pServiceType, pServiceClass)\n\t{\n\t\tthis.addServiceType(pServiceType, pServiceClass);\n\t\treturn this.instantiateServiceProvider(pServiceType, {}, `${pServiceType}-Default`);\n\t}\n\n\t// Some services expect to be overloaded / customized class.\n\tinstantiateServiceProviderFromPrototype(pServiceType, pOptions, pCustomServiceHash, pServicePrototype)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new pServicePrototype(this, pOptions, pCustomServiceHash);\n\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\tinstantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = this.instantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\t// Create a service provider but don't register it to live forever in fable.services\n\tinstantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new this.serviceClasses[pServiceType](this, pOptions, pCustomServiceHash);\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\t\treturn tmpService;\n\t}\n\n\t// Connect an initialized service provider that came before Fable was initialized\n\tconnectPreinitServiceProviderInstance(pServiceInstance)\n\t{\n\t\tlet tmpServiceType = pServiceInstance.serviceType;\n\t\tlet tmpServiceHash = pServiceInstance.Hash;\n\n\t\t// The service should already be instantiated, so just connect it to fable\n\t\tpServiceInstance.connectFable(this);\n\n\t\t// Add the service type to the map if it isn't there yet\n\t\tif (!this.servicesMap.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\t// If the core service hasn't registered itself yet, create the service container for it.\n\t\t\t// This means you couldn't register another with this type unless it was later registered with a constructor class.\n\t\t\tthis.servicesMap[tmpServiceType] = {};\n\t\t}\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[tmpServiceType][tmpServiceHash] = pServiceInstance;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(tmpServiceType, tmpServiceHash, false);\n\t\t}\n\n\t\treturn pServiceInstance;\n\t}\n\n\tsetDefaultServiceInstantiation(pServiceType, pServiceHash, pOverwriteService)\n\t{\n\t\t// Overwrite services by default, unless told not to\n\t\tlet tmpOverwriteService = (typeof(pOverwriteService) === 'undefined') ? true : pOverwriteService;\n\t\t// Make sure the service exists\n\t\tif (this.servicesMap[pServiceType].hasOwnProperty(pServiceHash))\n\t\t{\n\t\t\tif (!this.hasOwnProperty(pServiceType) || tmpOverwriteService)\n\t\t\t{\n\t\t\t\tthis[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\t}\n\t\t\tif (!this.services.hasOwnProperty(pServiceType) || tmpOverwriteService)\n\t\t\t{\n\t\t\t\tthis.services[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\t\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = Fable;\nmodule.exports.new = autoConstruct;\n\nmodule.exports.LogProviderBase = libFableLog.LogProviderBase;\nmodule.exports.ServiceProviderBase = libFableServiceBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceBase.CoreServiceProviderBase;\n\nmodule.exports.precedent = libFableSettings.precedent;\n\n},{\"./services/Fable-Service-Anticipate.js\":51,\"./services/Fable-Service-CSVParser.js\":52,\"./services/Fable-Service-DataFormat.js\":53,\"./services/Fable-Service-DataGeneration.js\":55,\"./services/Fable-Service-DateManipulation.js\":56,\"./services/Fable-Service-EnvironmentData.js\":57,\"./services/Fable-Service-FilePersistence.js\":58,\"./services/Fable-Service-MetaTemplate.js\":59,\"./services/Fable-Service-Operation.js\":63,\"./services/Fable-Service-RestClient.js\":64,\"./services/Fable-Service-Template.js\":65,\"./services/Fable-Service-Utility.js\":66,\"cachetrax\":22,\"fable-log\":43,\"fable-serviceproviderbase\":44,\"fable-settings\":47,\"fable-uuid\":49,\"manyfest\":89}],51:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceAnticipate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'AsyncAnticipate';\n\n\t\t// The queue of operations waiting to run.\n\t\tthis.operationQueue = [];\n\t\tthis.erroredOperations = [];\n\n\t\tthis.executingOperationCount = 0;\n\t\tthis.completedOperationCount = 0;\n\n\t\tthis.callDepth = 0;\n\n\t\tthis.maxOperations = 1;\n\n\t\tthis.lastError = undefined;\n\t\tthis.waitingFunctions = [];\n\t}\n\n\tcheckQueue()\n\t{\n\t\t// This could be combined with the last else if stanza but the logic for errors and non-errors would be blended and more complex to follow so keeping it unrolled.\n\t\tif (this.lastError)\n\t\t{\n\t\t\t// If there are no operations left, and we have waiting functions, call them.\n\t\t\tfor (let i = 0; i < this.waitingFunctions.length; i++)\n\t\t\t{\n\t\t\t\t//this.log.trace('Calling waiting function.')\n\t\t\t\tthis.waitingFunctions[i](this.lastError);\n\t\t\t}\n\t\t\t// Reset our state\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.waitingFunctions = [];\n\t\t}\n\t\t// This checks to see if we need to start any operations.\n\t\telse if (this.operationQueue.length > 0 && this.executingOperationCount < this.maxOperations)\n\t\t{\n\t\t\tlet tmpOperation = this.operationQueue.shift();\n\t\t\tthis.executingOperationCount += 1;\n\t\t\ttmpOperation(this.buildAnticipatorCallback());\n\t\t}\n\t\telse if (this.waitingFunctions.length > 0 && this.executingOperationCount < 1)\n\t\t{\n\t\t\t// If there are no operations left, and we have waiting functions, call them.\n\t\t\tfor (let i = 0; i < this.waitingFunctions.length; i++)\n\t\t\t{\n\t\t\t\t//this.log.trace('Calling waiting function.')\n\t\t\t\tthis.waitingFunctions[i](this.lastError);\n\t\t\t}\n\t\t\t// Reset our state\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.waitingFunctions = [];\n\t\t}\n\t}\n\n\t// Expects a function fAsynchronousFunction(fCallback)\n\tanticipate(fAsynchronousFunction)\n\t{\n\t\t//this.log.trace('Adding a function...')\n\t\tthis.operationQueue.push(fAsynchronousFunction);\n\t\tthis.checkQueue();\n\t}\n\n\tbuildAnticipatorCallback()\n\t{\n\t\t// This uses closure-scoped state to track the callback state\n\t\tlet tmpCallbackState = (\n\t\t\t{\n\t\t\t\tCalled: false,\n\t\t\t\tError: undefined,\n\t\t\t\tOperationSet: this\n\t\t\t});\n\t\treturn hoistedCallback.bind(this);\n\t\tfunction hoistedCallback(pError)\n\t\t{\n\t\t\tif (tmpCallbackState.Called)\n\t\t\t{\n\t\t\t\t// If they call the callback twice, throw an error\n\t\t\t\tthrow new Error(\"Anticipation async callback called twice...\");\n\t\t\t}\n\t\t\ttmpCallbackState.Called = true;\n\t\t\tthis.lastError = pError;\n\n\t\t\ttmpCallbackState.OperationSet.executingOperationCount -= 1;\n\t\t\ttmpCallbackState.OperationSet.completedOperationCount += 1;\n\n\t\t\ttmpCallbackState.OperationSet.callDepth++;\n\n\t\t\t// TODO: Figure out a better pattern for chaining templates so the call stack doesn't get abused.\n\t\t\tif (tmpCallbackState.OperationSet.callDepth > 400)\n\t\t\t{\n\t\t\t\ttmpCallbackState.OperationSet.callDepth = 0;\n\t\t\t\tsetTimeout(tmpCallbackState.OperationSet.checkQueue.bind(this), 0);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpCallbackState.OperationSet.checkQueue();\n\t\t\t}\n\t\t}\n\t}\n\n\twait(fCallback)\n\t{\n\t\tthis.waitingFunctions.push(fCallback);\n\t\tthis.checkQueue();\n\t}\n}\n\nmodule.exports = FableServiceAnticipate;\n},{\"fable-serviceproviderbase\":44}],52:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Parsing CSVs.  Why?  Because it's a thing that needs to be done.\n*\n* 1. And the other node CSV parsers had issues with the really messy files we had.\n* \n*\n* 2. None of the CSV parsers dealt with and multi-line quoted string columns\n*    which are apparently a-ok according to the official spec.\n* Plus a lot of them are asynchronous because apparently that's the best way to\n* do anything; unfortunately some files have a sequence issue with that.\n*\n* @class CSVParser\n*/\nclass CSVParser extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'CSVParser';\n\n        this.Header = [];\n        this.HeaderFieldNames = [];\n\n        this.Delimiter = ',';\n        this.QuoteCharacter = '\"';\n\n        this.CleanCharacters = ['\\r'];\n\n        this.HeaderLineIndex = 0;\n        this.HasHeader = true;\n        this.HasSetHeader = false;\n        this.EmitHeader = false;\n\n        this.EmitJSON = true;\n\n        this.EscapedQuoteString = '&quot;';\n\n        // Current Line Parsing State\n        this.CurrentLine = '';\n        this.CurrentRecord = [];\n\n        this.InQuote = false;\n        this.InEscapedQuote = false;\n\n        this.LinesParsed = 0;\n        this.RowsEmitted = 0;\n    }\n\n    marshalRowToJSON(pRowArray)\n    {\n        if (!Array.isArray(pRowArray))\n        {\n            return false;\n        }\n\n        for (let i = this.HeaderFieldNames.length; i < pRowArray.length; i++)\n        {\n            this.HeaderFieldNames[i] = `${i}`;\n        }\n\n        let tmpObject = {};\n\n        for (let i = 0; i < pRowArray.length; i++)\n        {\n            tmpObject[this.HeaderFieldNames[i]] = pRowArray[i];\n        }\n\n        return tmpObject;\n    }\n\n    // Set the header data, for use in marshalling to JSON.\n    setHeader (pHeaderArray)\n    {\n        this.Header = pHeaderArray;\n\n        for (let i = 0; i < this.Header.length; i++)\n        {\n            if (typeof(this.Header[i]) == 'undefined')\n            {\n                this.HeaderFieldNames[i] = `${i}`;\n            }\n            else\n            {\n                this.HeaderFieldNames[i] = this.Header[i].toString().trim();\n            }\n        }\n    }\n\n    resetRowState()\n    {\n        this.CurrentRecord = [];\n    }\n\n    pushLine()\n    {\n        for (let i = 0; i < this.CleanCharacters.length; i++)\n        {\n            this.CurrentLine = this.CurrentLine.replace(this.CleanCharacters[i],'');\n        }\n        this.CurrentRecord.push(this.CurrentLine);\n        this.CurrentLine = '';\n    }\n\n    emitRow(pFormatAsJSON)\n    {\n        let tmpFormatAsJSON = (typeof(pFormatAsJSON) == 'undefined') ? this.EmitJSON : pFormatAsJSON;\n\n        this.RowsEmitted++;\n        let tmpCompletedRecord = this.CurrentRecord;\n        this.CurrentRecord = [];\n\n        if (tmpFormatAsJSON)\n        {\n            return this.marshalRowToJSON(tmpCompletedRecord);\n        }\n        else\n        {\n            return tmpCompletedRecord;\n        }\n    }\n\n    parseCSVLine (pLineString)\n    {\n        this.LinesParsed++;\n\n        for (let i = 0; i < pLineString.length; i++)\n        {\n            if ((!this.InQuote) && (pLineString[i] == this.Delimiter))\n            {\n                this.pushLine();\n            }\n            else if (pLineString[i] == this.QuoteCharacter)\n            {\n                // If we are in the second part of an escaped quote, ignore it.\n                if (this.InEscapedQuote)\n                {\n                    this.InEscapedQuote = false;\n                }\n                // If we aren't in a quote, enter quote\n                else if (!this.InQuote)\n                {\n                    this.InQuote = true;\n                }\n                // We are in a quote, so peek forward to see if this is an \"escaped\" quote pair\n                else if ((i < pLineString.length) && (pLineString[i+1] == this.QuoteCharacter))\n                {\n                    this.CurrentLine += this.EscapedQuoteString;\n                    this.InEscapedQuote = true;\n                }\n                // We are in a quote, this isn't an \"escaped\" quote pair, so go out of quote mode\n                else\n                {\n                    this.InQuote = false;\n                }\n            }\n            else\n            {\n                this.CurrentLine += pLineString[i];\n            }\n        }\n\n        // See if we are in a multiline quoted entry -- if not, emit the row.\n        if (!this.InQuote)\n        {\n            // Push the last remaining column from the buffer to the current line.\n            this.pushLine();\n\n            // Check to see if there is a header -- and if so, if this is the header row\n            if (this.HasHeader && !this.HasSetHeader && (this.RowsEmitted == this.HeaderLineIndex))\n            {\n                this.HasSetHeader = true;\n                // Override the format as json bit\n                this.setHeader(this.emitRow(false));\n\n                // No matter what, formatting this as JSON is silly and we don't want to go there anyway.\n                if (this.EmitHeader)\n                {\n                    return this.Header;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n            else\n            {\n                return this.emitRow();\n            }\n        }\n        else\n        {\n            return false;\n        }\n    };\n}\n\nmodule.exports = CSVParser;\n},{\"fable-serviceproviderbase\":44}],53:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Data Formatting and Translation Functions\n*\n* @class DataFormat\n*/\nclass DataFormat extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'DataArithmatic';\n\n\t\t// Regular Expressions (so they don't have to be recompiled every time)\n\t\t// These could be defined as static, but I'm not sure if that will work with browserify ... and specifically the QT browser.\n\t\tthis._Regex_formatterInsertCommas = /.{1,3}/g;\n\t\t// Match Function:\n\t\t// function(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t\t// Thoughts about below:   /^([+-]?)(0*)(\\d+)(\\.(\\d+))?$/;\n\t\tthis._Regex_formatterAddCommasToNumber = /^([-+]?)(0?)(\\d+)(.?)(\\d+)$/g;\n\t\tthis._Regex_formatterDollarsRemoveCommas = /,/gi;\n\t\tthis._Regex_formatterCleanNonAlphaChar = /[^a-zA-Z]/gi;\n\t\tthis._Regex_formatterCapitalizeEachWord = /([a-zA-Z]+)/g;\n\n\t\t// TODO: Potentially pull these in from a configuration.\n\t\t// TODO: Use locale data for this if it's defaults all the way down.\n\t\tthis._Value_MoneySign_Currency = '$';\n\t\tthis._Value_NaN_Currency = '--';\n\t\tthis._Value_GroupSeparator_Number = ',';\n\n\t\tthis._Value_Prefix_StringHash = 'HSH';\n\t\tthis._Value_Clean_formatterCleanNonAlpha = '';\n\n\t\tthis._UseEngineStringStartsWith = (typeof(String.prototype.startsWith) === 'function');\n\t\tthis._UseEngineStringEndsWith = (typeof(String.prototype.endsWith) === 'function');\n\t}\n\n\n\t/*************************************************************************\n\t * String Manipulation and Comparison Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Reverse a string\n\t *\n\t * @param {string} pString - The string to reverse\n\t * @returns {string}\n\t */\n\tstringReverse (pString)\n\t{\n\t\t// TODO: Benchmark if there are faster ways we want to do this with all the newer JS stuff\n\t\t//       ... and if it will work with browserify in a clean way.\n\t\treturn pString.split('').reverse().join('');\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pStartIndex\n\t * @returns {*}\n\t */\n\tstringStartsWith (pString, pSearchString, pStartIndex)\n\t{\n\t\tif (this._UseEngineStringStartsWith)\n\t\t{\n\t\t\treturn pString.startsWith(pSearchString, pStartIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringStartsWith_Polyfill.call(pString, pSearchString, pStartIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pStartIndex - The index to start the search at\n\t * @returns {boolean}\n\t */\n\tstringStartsWith_Polyfill (pSearchString, pStartIndex)\n\t{\n\t\treturn this.slice(pStartIndex || 0, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pEndIndex\n\t * @returns {*}\n\t */\n\tstringEndsWith (pString, pSearchString, pEndIndex)\n\t{\n\t\tif (this._UseEngineStringEndsWith)\n\t\t{\n\t\t\treturn pString.endsWith(pSearchString, pEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringEndsWith_Polyfill.call(pString, pSearchString, pEndIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pEndIndex - The index to end the search at\n\t * @returns {boolean}\n\t */\n\tstringEndsWith_Polyfill (pSearchString, pEndIndex)\n\t{\n\t\t// This works much better than >= because\n\t\t// it compensates for NaN:\n\t\tif (!(pEndIndex < this.length))\n\t\t{\n\t\t\tpEndIndex = this.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpEndIndex |= 0; // round position\n\t\t}\n\t\treturn this.substr(pEndIndex - pSearchString.length, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Generate an insecure string hash.  Not meant to be secure, just a quick way to generate a hash for a string.  This is not a cryptographic hash.  Additional warranty and disclaimer ... this is not for passwords!\n\t *\n\t * @param {string} pString\n\t * @returns {string}\n\t */\n\tinsecureStringHash (pString)\n\t{\n\t\tlet tmpHash = 0;\n\t\tlet tmpStringLength = pString.length;\n\t\tlet tmpCharacterIndex = 0;\n\n\t\twhile (tmpCharacterIndex < tmpStringLength)\n\t\t{\n\t\t\ttmpHash = (tmpHash << 5) - tmpHash + pString.charCodeAt(tmpCharacterIndex++) | 0;\n\t\t}\n\n\t\treturn `${this._Value_Prefix_StringHash}${tmpHash}`;\n\t}\n\n\tcapitalizeEachWord (pString)\n\t{\n\t\treturn pString.replace(this._Regex_formatterCapitalizeEachWord,\n\t\t\t(pMatch) =>\n\t\t\t{\n\t\t\t\treturn pMatch.charAt(0).toUpperCase() + pMatch.substr(1);\n\t\t\t});\n\t}\n\n\t/**\n\t * Clean wrapping characters if they exist consistently around the string.  If they do not, the string is returned unchanged.\n\t *\n\t * @param {string} pWrapCharacter - The character expected as the wrapping character\n\t * @param {string} pString - the string to clean\n\t * @returns {string}\n\t */\n\tcleanEnclosureWrapCharacters (pWrapCharacter, pString)\n\t{\n\t\t// # Use case from ManyFest DSL:\n\t\t//\n\t\t// When a boxed property is passed in, it should have quotes of some\n\t\t// kind around it.\n\t\t//\n\t\t// For instance:\n\t\t// \t\tMyValues['Name']\n\t\t// \t\tMyValues[\"Age\"]\n\t\t// \t\tMyValues[`Cost`]\n\t\t//\n\t\t// This function is necessary to remove the wrapping quotes before object\n\t\t// resolution can occur.\n\t\tif (pString.startsWith(pWrapCharacter) && pString.endsWith(pWrapCharacter))\n\t\t{\n\t\t\treturn pString.substring(1, pString.length - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pString;\n\t\t}\n\t}\n\n\t/**\n\t * Clean a string of any non-alpha characters (including numbers)\n\t *\n\t * @param {*} pString\n\t * @returns\n\t */\n\tcleanNonAlphaCharacters (pString)\n\t{\n\t\tif ((typeof(pString) == 'string') && (pString != ''))\n\t\t{\n\t\t\treturn pString.replace(this._Regex_formatterCleanNonAlphaChar, this._Value_Clean_formatterCleanNonAlpha);\n\t\t}\n\n\t\treturn '';\n\t}\n\n\n\t/*************************************************************************\n\t * Number Formatting Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Insert commas every 3 characters from the right.  Used by formatterAddCommasToNumber().\n\t *\n\t * @param {*} pString\n\t * @returns {*}\n\t */\n\tformatterInsertCommas (pString)\n\t{\n\t\t// Reverse, because it's easier to do things from the left, given arbitrary digit counts\n\t\tlet tmpReversed = this.stringReverse(pString);\n\t\t// Add commas every three characters\n\t\tlet tmpReversedWithCommas = tmpReversed.match(this._Regex_formatterInsertCommas).join(',');\n\t\t// Reverse again (back to normal direction)\n\t\treturn this.stringReverse(tmpReversedWithCommas);\n\t}\n\n\tprocessAddCommasToNumberRegex(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t{\n\t\t// If there was no decimal, the last capture grabs the final digit, so\n\t\t// we have to put it back together with the 'before' substring\n\t\treturn pSign + (pDecimal ? this.formatterInsertCommas(pBefore) + pDecimal + pAfter : this.formatterInsertCommas(pBefore + pAfter));\n\t}\n\n\t/**\n\t * Add Commas to a Number for readability.\n\t *\n\t * @param {*} pNumber\n\t * @returns {string}\n\t */\n\tformatterAddCommasToNumber (pNumber)\n\t{\n\t\t// If the regex doesn't match, `replace` returns the string unmodified\n\t\treturn (pNumber.toString()).replace\n\t\t(\n\t\t\tthis._Regex_formatterAddCommasToNumber,\n\t\t\tthis.processAddCommasToNumberRegex.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * This will take a number and format it as a dollar string.  It will also add commas to the number.  If the number is not a number, it will return '--'.\n\t *\n\t * @param {*} pValue\n\t * @returns {string}\n\t */\n\tformatterDollars (pValue)\n\t{\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tif (pValue === null || pValue === undefined)\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tlet tmpDollarAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpDollarAmount = tmpDollarAmountArbitrary.toFixed(2);\n\n\t\tif (isNaN(tmpDollarAmount))\n\t\t{\n\t\t\t// Try again and see if what was passed in was a dollars string.\n\t\t\tif (typeof(pValue) == 'string')\n\t\t\t{\n\t\t\t\t// TODO: Better rounding function?  This is a hack to get rid of the currency symbol and commas.\n\t\t\t\ttmpDollarAmount = parseFloat(pValue.replace(this._Value_MoneySign_Currency,'').replace(this._Regex_formatterDollarsRemoveCommas,'')).toFixed(2);\n\t\t\t}\n\t\t\t// If we didn't get a number, return the \"not a number\" string.\n\t\t\tif (isNaN(tmpDollarAmount))\n\t\t\t{\n\t\t\t\treturn this._Value_NaN_Currency;\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Get locale data and use that for this stuff.\n\t\treturn `$${this.formatterAddCommasToNumber(tmpDollarAmount)}`;\n\t}\n\n\t/**\n\t * Round a number to a certain number of digits.  If the number is not a number, it will return 0.  If no digits are specified, it will default to 2 significant digits.\n\t *\n\t * @param {*} pValue\n\t * @param {number} pDigits\n\t * @returns {string}\n\t */\n\tformatterRoundNumber (pValue, pDigits)\n\t{\n\t\tlet tmpDigits = (typeof(pDigits) == 'undefined') ? 2 : pDigits;\n\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\n\t\tif (pValue === null || pValue === undefined)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpValue = tmpAmountArbitrary.toFixed(tmpDigits);\n\n\t\tif (isNaN(tmpValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpValue;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate a reapeating padding string to be appended before or after depending on \n\t * which padding function it uses.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringGeneratePaddingString(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpTargetLength = pTargetLength >> 0;\n\t\tlet tmpPadString = String((typeof pPadString !== 'undefined' ? pPadString : ' '));\n\t\tif (pString.length > pTargetLength)\n\t\t{\n\t\t\t// No padding string if the source string is already longer than the target length, return an empty string\n\t\t\treturn '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpPadLength = pTargetLength - pString.length;\n\t\t\tif (tmpPadLength > tmpPadString.length)\n\t\t\t{\n\t\t\t\ttmpPadString += tmpPadString.repeat(tmpTargetLength / tmpPadString.length);\n\t\t\t}\n\t\t\treturn tmpPadString.slice(0, tmpPadLength);\n\t\t}\n\t}\n\n\t/**\n\t * Pad the start of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadStart = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString) + tmpString;\n\t}\n\n\t/**\n\t * Pad the end of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadEnd = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn tmpString + this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString);\n\t}\n\n\t/*************************************************************************\n\t * Time Formatting Functions (milliseconds)\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Format a time length in milliseconds into a human readable string.\n\t * @param {number} pTimeSpan \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeSpan(pTimeSpan)\n\t{\n\t\tif (typeof(pTimeSpan) != 'number')\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpMs = parseInt(pTimeSpan%1000);\n\t\tlet tmpSeconds = parseInt((pTimeSpan/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeSpan/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeSpan/(1000*60*60));\n\n\t\treturn `${this.stringPadStart(tmpHours,2,'0')}:${this.stringPadStart(tmpMinutes,2,'0')}:${this.stringPadStart(tmpSeconds,2,'0')}.${this.stringPadStart(tmpMs,3,'0')}`;\n\t}\n\n\t/**\n\t * Format the time delta between two times in milliseconds into a human readable string.\n\t * \n\t * @param {number} pTimeStart \n\t * @param {number} pTimeEnd \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeDelta(pTimeStart, pTimeEnd)\n\t{\n\t\tif ((typeof(pTimeStart) != 'number') || (typeof(pTimeEnd) != 'number'))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.formatTimeSpan(pTimeEnd-pTimeStart);\n\t}\n\n\t// THE FOLLOWING TERRIBLE FUNCTIONS ARE FOR QT / WKHTMLTOPDF when luxon and moment don't work so well\n\tgetMonthFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tgetMonthAbbreviatedFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tformatMonthDayYearFromDate (pJavascriptDate, pStrict)\n\t{\n\t\tlet tmpStrict = (typeof(pStrict) !== 'undefined') ? pStrict : false;\n\n\t\tlet tmpMonth = pJavascriptDate.getMonth() + 1;\n\t\tlet tmpDay = pJavascriptDate.getDate();\n\t\tlet tmpYear = pJavascriptDate.getFullYear();\n\t\t\n\t\tif (tmpStrict)\n\t\t{\n\t\t\ttmpMonth = this.stringPadStart(tmpMonth, 2, '0');\n\t\t\ttmpDay = this.stringPadStart(tmpDay, 2, '0');\n\t\t\ttmpYear = this.stringPadStart(tmpYear, 4, '0');\n\t\t}\n\n\t\treturn `${tmpMonth}/${tmpDay}/${tmpYear}`;\n\t}\n\t\n\tformatSortableStringFromDate (pDate)\n\t{\n\t\treturn pDate.getFullYear()+this.stringPadStart(pDate.getMonth(),2,'0')+this.stringPadStart(pDate.getDate(),2,'0');\n\t}\n\n\t/*************************************************************************\n\t * String Tokenization Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Return the string before the matched substring.\n\t *\n\t * If the substring is not found, the entire string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringBeforeMatch (pString, pMatch)\n\t{\n\t\treturn pString.split(pMatch)[0];\n\t}\n\n\t/**\n\t * Return the string after the matched substring.\n\t *\n\t * If the substring is not found, an empty string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringAfterMatch (pString, pMatch)\n\t{\n\t\tlet tmpStringSplitLocation = pString.indexOf(pMatch);\n\n\t\tif ((tmpStringSplitLocation < 0) || ((tmpStringSplitLocation + pMatch.length) >= pString.length))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn pString.substring(tmpStringSplitLocation + pMatch.length);\n\t}\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures (pString, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\tif (tmpEnclosureDepth == 0)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t}\n\t\t\t\ttmpEnclosureDepth++;\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpEnclosureCount;\n\t}\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosedValueStartIndex = 0;\n\t\tlet tmpEnclosedValueEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This is the end of an enclosure\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t\t{\n\t\t\t// Return an empty string if the enclosure is not found\n\t\t\treturn '';\n\t\t}\n\n\t\tif ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t\t}\n\t}\n\n\n\t/**\n\t * Remove an enclosure from a string based on the index of the enclosure.\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToRemove\n\t * @param {number} pEnclosureStart\n\t * @param {number} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringRemoveEnclosureByIndex (pString, pEnclosureIndexToRemove, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToRemove = (typeof(pEnclosureIndexToRemove) == 'number') ? pEnclosureIndexToRemove : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosureStartIndex = 0;\n\t\tlet tmpEnclosureEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToRemove == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosureStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosureEndIndex <= tmpEnclosureStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToRemove)\n\t\t{\n\t\t\treturn tmpString;\n\t\t}\n\n\t\tlet tmpReturnString = '';\n\n\t\tif (tmpEnclosureStartIndex > 1)\n\t\t{\n\t\t\ttmpReturnString = tmpString.substring(0, tmpEnclosureStartIndex);\n\t\t}\n\n\t\tif ((tmpString.length > (tmpEnclosureEndIndex + 1)) && (tmpEnclosureEndIndex > tmpEnclosureStartIndex))\n\t\t{\n\t\t\ttmpReturnString += tmpString.substring(tmpEnclosureEndIndex+1);\n\t\t}\n\n\t\treturn tmpReturnString;\n\t}\n}\n\nmodule.exports = DataFormat;\n},{\"fable-serviceproviderbase\":44}],54:[function(require,module,exports){\nmodule.exports={\n\t\"DefaultIntegerMinimum\": 0,\n\t\"DefaultIntegerMaximum\": 9999999,\n\n\t\"DefaultNumericStringLength\": 10,\n\n\t\"MonthSet\": [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n\n\t\"WeekDaySet\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n\n\t\"ColorSet\": \n\t\t[\n\t\t\t\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Indigo\", \"Violet\", \"Pink\", \"Purple\", \"Turquoise\", \"Gold\",\n\t\t\t\"Lime\", \"Maroon\", \"Navy\", \"Coral\", \"Teal\", \"Brown\", \"White\", \"Black\", \"Sky\", \"Berry\",\n\t\t\t\"Grey\", \"Straw\", \"Silver\", \"Sapphire\"\n\t\t],\n\n\t\"SurNameSet\":\n\t\t[\n\t\t\t\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Miller\", \"Davis\", \"Garcia\", \"Rodriguez\", \"Wilson\",\n\t\t\t\"Martinez\", \"Anderson\", \"Taylor\", \"Thomas\", \"Hernandez\", \"Moore\", \"Martin\", \"Jackson\", \"Thompson\", \"White\",\n\t\t\t\"Lopez\", \"Lee\", \"Gonzalez\", \"Harris\", \"Clark\", \"Lewis\", \"Robinson\", \"Walker\", \"Perez\", \"Hall\",\n\t\t\t\"Young\", \"Allen\", \"Sanchez\", \"Wright\", \"King\", \"Scott\", \"Green\", \"Baker\", \"Adams\", \"Nelson\",\n\t\t\t\"Hill\", \"Ramirez\", \"Campbell\", \"Mitchell\", \"Roberts\", \"Carter\", \"Phillips\", \"Evans\", \"Turner\", \"Torres\",\n\t\t\t\"Parker\", \"Collins\", \"Edwards\", \"Stewart\", \"Flores\", \"Morris\", \"Nguyen\", \"Murphy\", \"Rivera\", \"Cook\",\n\t\t\t\"Rogers\", \"Morgan\", \"Peterson\", \"Cooper\", \"Reed\", \"Bailey\", \"Bell\", \"Gomez\", \"Kelly\", \"Howard\",\n\t\t\t\"Ward\", \"Cox\", \"Diaz\", \"Richardson\", \"Wood\", \"Watson\", \"Brooks\", \"Bennett\", \"Gray\", \"James\",\n\t\t\t\"Reyes\", \"Cruz\", \"Hughes\", \"Price\", \"Myers\", \"Long\", \"Foster\", \"Sanders\", \"Ross\", \"Morales\",\n\t\t\t\"Powell\", \"Sullivan\", \"Russell\", \"Ortiz\", \"Jenkins\", \"Gutierrez\", \"Perry\", \"Butler\", \"Barnes\", \"Fisher\"\n\t\t],\n\n\t\"NameSet\":\n\t\t[\n\t\t\t\"Mary\", \"Patricia\", \"Jennifer\", \"Linda\", \"Elizabeth\", \"Barbara\", \"Susan\", \"Jessica\", \"Sarah\", \"Karen\",\n\t\t\t\"Lisa\", \"Nancy\", \"Betty\", \"Sandra\", \"Margaret\", \"Ashley\", \"Kimberly\", \"Emily\", \"Donna\", \"Michelle\",\n\t\t\t\"Carol\", \"Amanda\", \"Melissa\", \"Deborah\", \"Stephanie\", \"Dorothy\", \"Rebecca\", \"Sharon\", \"Laura\", \"Cynthia\",\n\t\t\t\"Amy\", \"Kathleen\", \"Angela\", \"Shirley\", \"Brenda\", \"Emma\", \"Anna\", \"Pamela\", \"Nicole\", \"Samantha\",\n\t\t\t\"Katherine\", \"Christine\", \"Helen\", \"Debra\", \"Rachel\", \"Carolyn\", \"Janet\", \"Maria\", \"Catherine\", \"Heather\",\n\t\t\t\"Diane\", \"Olivia\", \"Julie\", \"Joyce\", \"Victoria\", \"Ruth\", \"Virginia\", \"Lauren\", \"Kelly\", \"Christina\",\n\t\t\t\"Joan\", \"Evelyn\", \"Judith\", \"Andrea\", \"Hannah\", \"Megan\", \"Cheryl\", \"Jacqueline\", \"Martha\", \"Madison\",\n\t\t\t\"Teresa\", \"Gloria\", \"Sara\", \"Janice\", \"Ann\", \"Kathryn\", \"Abigail\", \"Sophia\", \"Frances\", \"Jean\",\n\t\t\t\"Alice\", \"Judy\", \"Isabella\", \"Julia\", \"Grace\", \"Amber\", \"Denise\", \"Danielle\", \"Marilyn\", \"Beverly\",\n\t\t\t\"Charlotte\", \"Natalie\", \"Theresa\", \"Diana\", \"Brittany\", \"Doris\", \"Kayla\", \"Alexis\", \"Lori\", \"Marie\",\n\t\t\t\"James\", \"Robert\", \"John\", \"Michael\", \"David\", \"William\", \"Richard\", \"Joseph\", \"Thomas\", \"Christopher\",\n\t\t\t\"Charles\", \"Daniel\", \"Matthew\", \"Anthony\", \"Mark\", \"Donald\", \"Steven\", \"Andrew\", \"Paul\", \"Joshua\",\n\t\t\t\"Kenneth\", \"Kevin\", \"Brian\", \"George\", \"Timothy\", \"Ronald\", \"Jason\", \"Edward\", \"Jeffrey\", \"Ryan\",\n\t\t\t\"Jacob\", \"Gary\", \"Nicholas\", \"Eric\", \"Jonathan\", \"Stephen\", \"Larry\", \"Justin\", \"Scott\", \"Brandon\",\n\t\t\t\"Benjamin\", \"Samuel\", \"Gregory\", \"Alexander\", \"Patrick\", \"Frank\", \"Raymond\", \"Jack\", \"Dennis\", \"Jerry\",\n\t\t\t\"Tyler\", \"Aaron\", \"Jose\", \"Adam\", \"Nathan\", \"Henry\", \"Zachary\", \"Douglas\", \"Peter\", \"Kyle\",\n\t\t\t\"Noah\", \"Ethan\", \"Jeremy\", \"Walter\", \"Christian\", \"Keith\", \"Roger\", \"Terry\", \"Austin\", \"Sean\",\n\t\t\t\"Gerald\", \"Carl\", \"Harold\", \"Dylan\", \"Arthur\", \"Lawrence\", \"Jordan\", \"Jesse\", \"Bryan\", \"Billy\",\n\t\t\t\"Bruce\", \"Gabriel\", \"Joe\", \"Logan\", \"Alan\", \"Juan\", \"Albert\", \"Willie\", \"Elijah\", \"Wayne\",\n\t\t\t\"Randy\", \"Vincent\", \"Mason\", \"Roy\", \"Ralph\", \"Bobby\", \"Russell\", \"Bradley\", \"Philip\", \"Eugene\"\n\t\t]\n}\n},{}],55:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceDataGeneration extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'DataGeneration';\n\n\t\tthis.defaultData = require('./Fable-Service-DataGeneration-DefaultValues.json');\n\t}\n\n\t// Return a random integer between pMinimum and pMaximum\n\trandomIntegerBetween(pMinimum, pMaximum)\n\t{\n\t\treturn Math.floor(Math.random() * (pMaximum - pMinimum)) + pMinimum;\n\t}\n\t// Return a random integer up to the passed-in maximum\n\trandomIntegerUpTo(pMaximum)\n\t{\n\t\treturn this.randomIntegerBetween(0, pMaximum);\n\t}\n\t// Return a random integer between 0 and 9999999\n\trandomInteger()\n\t{\n\t\treturn Math.floor(Math.random()*this.defaultData.DefaultIntegerMaximum);\n\t}\n\n\n\trandomNumericString(pLength, pMaxNumber)\n\t{\n\t\tlet tmpLength = (typeof(pLength) === 'undefined') ? 10 : pLength;\n\t\tlet tmpMaxNumber = (typeof(pMaxNumber) === 'undefined') ? ((10 ** tmpLength) - 1) : pMaxNumber;\n\n\t\treturn this.services.DataFormat.stringPadStart(this.randomIntegerUpTo(tmpMaxNumber), pLength, '0');\n\t}\n\n\n\trandomMonth()\n\t{\n\t\treturn this.defaultData.MonthSet[this.randomIntegerUpTo(this.defaultData.MonthSet.length-1)];\n\t}\n\trandomDayOfWeek()\n\t{\n\t\treturn this.defaultData.WeekDaySet[this.randomIntegerUpTo(this.defaultData.WeekDaySet.length-1)];\n\t}\n\n\n\trandomColor()\n\t{\n\t\treturn this.defaultData.ColorSet[this.randomIntegerUpTo(this.defaultData.ColorSet.length-1)];\n\t}\n\n\n\trandomName()\n\t{\n\t\treturn this.defaultData.NameSet[this.randomIntegerUpTo(this.defaultData.NameSet.length-1)];\n\t}\n\trandomSurname()\n\t{\n\t\treturn this.defaultData.SurNameSet[this.randomIntegerUpTo(this.defaultData.SurNameSet.length-1)];\n\t}\n}\n\nmodule.exports = FableServiceDataGeneration;\n},{\"./Fable-Service-DataGeneration-DefaultValues.json\":54,\"fable-serviceproviderbase\":44}],56:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Date management a la Moment using days.js\n*\n* @class DateManipulation\n*/\nclass DateManipulation extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'Dates';\n\n\t\tthis.dayJS = require('dayjs');\n\n\t\t// Include the `weekOfYear` plugin\n\t\tthis.plugin_weekOfYear = require('dayjs/plugin/weekOfYear');\n\t\tthis.dayJS.extend(this.plugin_weekOfYear);\n\t\t// Include the `weekday` plugin\n\t\tthis.plugin_weekday = require('dayjs/plugin/weekday');\n\t\tthis.dayJS.extend(this.plugin_weekday);\n\t\t// Include the `isoWeek` plugin\n\t\tthis.plugin_isoWeek = require('dayjs/plugin/isoWeek');\n\t\tthis.dayJS.extend(this.plugin_isoWeek);\n\t\t// Include the `timezone` plugin\n\t\tthis.plugin_timezone = require('dayjs/plugin/timezone');\n\t\tthis.dayJS.extend(this.plugin_timezone);\n\t\t// Include the `relativetime` plugin\n\t\tthis.plugin_relativetime = require('dayjs/plugin/relativeTime');\n\t\tthis.dayJS.extend(this.plugin_relativetime);\n\t\t// Include the `utc` plugin\n\t\tthis.plugin_utc = require('dayjs/plugin/utc');\n\t\tthis.dayJS.extend(this.plugin_utc);\n\t\t// Include the `advancedFormat` plugin\n\t\tthis.plugin_advancedFormat = require('dayjs/plugin/advancedFormat');\n\t\tthis.dayJS.extend(this.plugin_advancedFormat);\n\n\t\t// A developer can include locales if they want\n\t\t// You would do the following:\n\t\t// const localeDE = require('dayjs/locale/de');\n\t\t// _Fable.Dates.dayJS.locale('de');\n\t}\n}\n\nmodule.exports = DateManipulation;\n},{\"dayjs\":28,\"dayjs/plugin/advancedFormat\":29,\"dayjs/plugin/isoWeek\":30,\"dayjs/plugin/relativeTime\":31,\"dayjs/plugin/timezone\":32,\"dayjs/plugin/utc\":33,\"dayjs/plugin/weekOfYear\":34,\"dayjs/plugin/weekday\":35,\"fable-serviceproviderbase\":44}],57:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceEnvironmentData extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'EnvironmentData';\n\n\t\tthis.Environment = `node.js`;\n\t}\n}\n\nmodule.exports = FableServiceEnvironmentData;\n},{\"fable-serviceproviderbase\":44}],58:[function(require,module,exports){\n(function (process){(function (){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libFS = require('fs');\nconst libPath = require('path');\nconst libReadline = require('readline');\n\n\nclass FableServiceFilePersistence extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'FilePersistence';\n\n\t\tif (!this.options.hasOwnProperty('Mode'))\n\t\t{\n\t\t\tthis.options.Mode = parseInt('0777', 8) & ~process.umask();\n\t\t}\n\n\t\tthis.libFS = libFS;\n\t\tthis.libPath = libPath;\n\t\tthis.libReadline = libReadline;\n\t}\n\n\tjoinPath(...pPathArray)\n\t{\n\t\treturn libPath.resolve(...pPathArray);\n\t}\n\n\texistsSync(pPath)\n\t{\n\t\treturn libFS.existsSync(pPath);\n\t}\n\n\texists(pPath, fCallback)\n\t{\n\t\tlet tmpFileExists = this.existsSync(pPath);;\n\n\t\treturn fCallback(null, tmpFileExists);\n\t}\n\n\tappendFileSync(pFileName, pAppendContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.appendFileSync(pFileName, pAppendContent, tmpOptions);\n\t}\n\n\tdeleteFileSync(pFileName)\n\t{\n\t\treturn libFS.unlinkSync(pFileName);\n\t}\n\n\tdeleteFolderSync(pFileName)\n\t{\n\t\treturn libFS.rmdirSync(pFileName);\n\t}\n\n\treadFileSync(pFilePath, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.readFileSync(pFilePath, tmpOptions);\n\t}\n\n\treadFile(pFilePath, pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.readFile(pFilePath, tmpOptions, fCallback);\n\t}\n\n\twriteFileSync(pFileName, pFileContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFileSync(pFileName, pFileContent, tmpOptions);\n\t}\n\n\twriteFileSyncFromObject(pFileName, pObject)\n\t{\n\t\treturn this.writeFileSync(pFileName, JSON.stringify(pObject, null, 4));\n\t}\n\n\twriteFileSyncFromArray(pFileName, pFileArray)\n\t{\n\t\tif (!Array.isArray(pFileArray))\n\t\t{\n\t\t\tthis.log.error(`File Persistence Service attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).`);\n\t\t\treturn Error('Attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let i = 0; i < pFileArray.length; i++)\n\t\t\t{\n\t\t\t\treturn this.appendFileSync(pFileName, `${pFileArray[i]}\\n`);\n\t\t\t}\n\t\t}\n\t}\n\n\twriteFile(pFileName, pFileContent, pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFile(pFileName, pFileContent, tmpOptions, fCallback);\n\t}\n\n\tlineReaderFactory(pFilePath, fOnLine, fOnComplete, fOnError)\n\t{\n\t\tlet tmpLineReader = {};\n\n\t\tif (typeof(pFilePath) != 'string')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpLineReader.filePath = pFilePath;\n\n\t\ttmpLineReader.fileStream = libFS.createReadStream(tmpLineReader.filePath);\n\n\t\ttmpLineReader.reader = libReadline.createInterface({ input: tmpLineReader.fileStream, crlfDelay: Infinity });\n\n\t\tif (typeof(fOnError) === 'function')\n\t\t{\n\t\t\ttmpLineReader.reader.on('error', fOnError);\n\t\t}\n\n\t\ttmpLineReader.reader.on('line', (typeof(fOnLine) === 'function') ? fOnLine : () => {});\n\n\t\tif (typeof(fOnComplete) === 'function')\n\t\t{\n\t\t\ttmpLineReader.reader.on('close', fOnComplete);\n\t\t}\n\n\t\treturn tmpLineReader;\n\t}\n\n\t// Folder management\n\tmakeFolderRecursive(pParameters, fCallback)\n\t{\n\t\tlet tmpParameters = pParameters;\n\n\t\tif (typeof(pParameters) == 'string')\n\t\t{\n\t\t\ttmpParameters = { Path: pParameters };\n\t\t}\n\t\telse if (typeof(pParameters) !== 'object')\n\t\t{\n\t\t\tfCallback(new Error('Parameters object or string not properly passed to recursive folder create.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(tmpParameters.Path) !== 'string'))\n\t\t{\n\t\t\tfCallback(new Error('Parameters object needs a path to run the folder create operation.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!tmpParameters.hasOwnProperty('Mode'))\n\t\t{\n\t\t\ttmpParameters.Mode = this.options.Mode;\n\t\t}\n\n\t\t// Check if we are just starting .. if so, build the initial state for our recursive function\n\t\tif (typeof(tmpParameters.CurrentPathIndex) === 'undefined')\n\t\t{\n\t\t\t// Build the tools to start recursing\n\t\t\ttmpParameters.ActualPath = libPath.normalize(tmpParameters.Path);\n\t\t\ttmpParameters.ActualPathParts = tmpParameters.ActualPath.split(libPath.sep);\n\t\t\ttmpParameters.CurrentPathIndex = 0;\n\t\t\ttmpParameters.CurrentPath = '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is not our first run, so we will continue the recursion.\n\t\t\t// Build the new base path\n\t\t\tif (tmpParameters.CurrentPath == libPath.sep)\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\n\t\t\t// Increment the path index\n\t\t\ttmpParameters.CurrentPathIndex++;\n\t\t}\n\n\t\t// Check if the path is fully complete\n\t\tif (tmpParameters.CurrentPathIndex >= tmpParameters.ActualPathParts.length)\n\t\t{\n\t\t\treturn fCallback(null);\n\t\t}\n\n\t\t// Check if the path exists (and is a folder)\n\t\tlibFS.open(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], 'r',\n\t\t\t(pError, pFileDescriptor)=>\n\t\t\t{\n\t\t\t\tif (pFileDescriptor)\n\t\t\t\t{\n\t\t\t\t\tlibFS.closeSync(pFileDescriptor);\n\t\t\t\t}\n\n\t\t\t\tif (pError && pError.code=='ENOENT')\n\t\t\t\t{\n\t\t\t\t\t/* Path doesn't exist, create it */\n\t\t\t\t\tlibFS.mkdir(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], tmpParameters.Mode,\n\t\t\t\t\t\t(pCreateError) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!pCreateError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// We have now created our folder and there was no error -- continue.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (pCreateError.code =='EEXIST')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// The folder exists -- our dev might be running this in parallel/async/whatnot.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(pCreateError.code);\n\t\t\t\t\t\t\t\treturn fCallback(pCreateError);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nmodule.exports = FableServiceFilePersistence;\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":98,\"fable-serviceproviderbase\":44,\"fs\":19,\"path\":92,\"readline\":19}],59:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\n/**\n* Precedent Meta-Templating\n* @author      Steven Velozo <steven@velozo.com>\n* @description Process text stream trie and postfix tree, parsing out meta-template expression functions.\n*/\nconst libWordTree = require(`./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js`);\nconst libStringParser = require(`./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js`);\n\n\nclass FableServiceMetaTemplate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'MetaTemplate';\n\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser(this.fable);\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\taddPatternAsync(pPatternStart, pPatternEnd, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternAsync(pPatternStart, pPatternEnd, pParserPromise);\n\t}\n\n\taddPatternBoth(pPatternStart, pPatternEnd, pParser, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternBoth(pPatternStart, pPatternEnd, pParser, pParserPromise);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData, fCallback)\n\t{\n\t\tif (this.LogNoisiness > 4)\n\t\t{\n\t\t\tthis.fable.log.trace(`Metatemplate parsing template string [${pString}] where the callback is a ${typeof(fCallback)}`, {TemplateData:pData});\n\t\t}\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceMetaTemplate;\n},{\"./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js\":60,\"./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js\":61,\"fable-serviceproviderbase\":44}],60:[function(require,module,exports){\n/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor(pFable)\n\t{\n\t\tthis.fable = pFable;\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse') && (!pParserState.Pattern.isAsync || pParserState.Pattern.isBoth))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.fable.log.info(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync && !pParserState.Pattern.isBoth)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.fable.log.info(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texecutePatternAsync(pParserState, pData, fCallback)\n\t{\n\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t// Trim the start and end tags off the output buffer now\n\t\tif (pParserState.Pattern.isAsync && !pParserState.Pattern.isBoth)\n\t\t{\n\t\t\t// Run the function\n\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.fable.log.info(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\treturn fCallback();\n\t\t\t\t});\n\t\t}\n\t\telse if (pParserState.Pattern.isAsync && pParserState.Pattern.isBoth)\n\t\t{\n\t\t\t// Run the function when both async and non async were provided with the pattern\n\t\t\treturn pParserState.Pattern.ParseAsync(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.fable.log.info(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\treturn fCallback();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Run the t*mplate function\n\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacterAsync (pCharacter, pParserState, pData, fCallback)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.executePatternAsync(pParserState, pData, fCallback);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.executePatternAsync(pParserState, pData, fCallback);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\telse\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\t// Without this, templates of all sizes work fine in node.  They do not in the browser.\n\t\t// Trying this out without the timout on non asynchronous template flips.\n\t\treturn fCallback();\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t * @param {function} fCallback - The callback function to call when the parse is complete\n\t */\n\tparseString (pString, pParseTree, pData, fCallback)\n\t{\n\t\tif (typeof(fCallback) !== 'function')\n\t\t{\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\t\tfor (var i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: This is not fast.\n\t\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData, fCallback);\n\t\t\t}\n\n\t\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\t\treturn tmpParserState.Output;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is the async mode\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\t\t\ttmpParserState.Asynchronous = true;\n\n\t\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tfor (let i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\ttmpAnticipate.anticipate(\n\t\t\t\t\t(fCallback) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.parseCharacterAsync(pString[i], tmpParserState, pData, fCallback);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\t// Flush the remaining data\n\t\t\t\t\tthis.flushOutputBuffer(tmpParserState);\n\t\t\t\t\treturn fCallback(pError, tmpParserState.Output);\n\t\t\t\t});\n\t\t}\n\t}\n}\n\nmodule.exports = StringParser;\n\n},{}],61:[function(require,module,exports){\n/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn tmpLeaf;\n\t}\n\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPatternAsync\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParserAsync - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternAsync (pPatternStart, pPatternEnd, fParserAsync)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParserAsync);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t}\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPatternBoth\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternBoth (pPatternStart, pPatternEnd, fParser, fParserAsync)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParser);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t\ttmpLeaf.isBoth = true;\n\t\t\t// When a leaf has both async and non-async versions of the functions, we store the async in fParserAsync.\n\t\t\ttmpLeaf.ParseAsync = fParserAsync;\n\t\t}\n\t}\n}\n\nmodule.exports = WordTree;\n\n},{}],62:[function(require,module,exports){\nmodule.exports = (\n    {\n        \"Metadata\": {\n            \"UUID\": false,\n            \"Hash\": false,\n\n            \"Name\": \"\",\n            \"Summary\": \"\",\n\n            \"Version\": 0\n        },\n        \"Status\": {\n            \"Completed\": false,\n\n            \"CompletionProgress\": 0,\n            \"CompletionTimeElapsed\": 0,\n\n            \"TimeStart\": 0,\n            \"TimeEnd\": 0\n        },\n        \"Steps\": [],\n        \"Errors\": [],\n        \"Log\": []\n    }\n);\n},{}],63:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst _OperationStatePrototypeString = JSON.stringify(require('./Fable-Service-Operation-DefaultSettings.js'));\n\nclass FableOperation extends libFableServiceBase\n{\n\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\t// Timestamps will just be the long ints\n\t\tthis.timeStamps = {};\n\t\t// ProgressTrackers have an object format of: {Hash:'SomeHash',EndTime:UINT,CurrentTime:UINT,TotalCount:INT,CurrentCount:INT}\n\t\tthis.progressTrackers = {};\n\n        this.serviceType = 'PhasedOperation';\n\n\t\tthis.state = JSON.parse(_OperationStatePrototypeString);\n\n\t\tthis.stepMap = {};\n\t\tthis.stepFunctions = {};\n\n\t\t// Match the service instantiation to the operation.\n\t\tthis.state.Metadata.Hash = this.Hash;\n\t\tthis.state.Metadata.UUID = this.UUID;\n\n\t\tthis.state.Metadata.Name = (typeof(this.options.Name) == 'string') ? this.options.Name : `Unnamed Operation ${this.state.Metadata.UUID}`;\n\t\tthis.name = this.state.Metadata.Name;\n\n\t\tthis.log = this;\n\t}\n\n\texecute(fExecutionCompleteCallback)\n\t{\n\t\tif (this.state.Status.TimeStart)\n\t\t{\n\t\t\treturn fExecutionCompleteCallback(new Error(`Operation [${this.state.Metadata.UUID}] ${this.state.Metadata.Name} has already been executed!`));\n\t\t}\n\n\t\tthis.state.Status.TimeStart = +new Date();\n\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\tfor (let i = 0; i < this.state.Steps; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(this.stepFunctions[this.state.Steps[i].GUIDStep].bind(this));\n\t\t}\n\n\t\t// Wait for the anticipation to complete\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tthis.state.Status.TimeEnd = +new Date();\n\t\t\t\treturn fExecutionCompleteCallback();\n\t\t\t});\n\t}\n\n/*\n\tTODO: I've gone back and forth on whether this should be an object, JSON \n\tobject prototype, or set of functions here.  Discuss with colleagues!\n*/\n\taddStep(pGUIDStep, fStepFunction, pStepName, pStepDescription, pStepMetadata)\n\t{\n\t\tlet tmpStep = {};\n\t\ttmpStep.GUIDStep = (typeof(pGUIDStep) !== 'undefined') ? pGUIDStep : `STEP-${this.state.Steps.length}-${this.fable.DataGeneration.randomNumericString()}`;\n\t\ttmpStep.Name = (typeof(pStepName) !== 'undefined') ? pStepName : `Step [${tmpStep.GUIDStep}]`;\n\t\ttmpStep.Description = (typeof(pStepDescription) !== 'undefined') ? pStepDescription : `Step execution of ${tmpStep.Name}.`;\n\t\t// TODO: Right now this allows an Array... do we want to block that?\n\t\ttmpStep.Metadata = (typeof(pStepMetadata) === 'object') ? pStepMetadata : {};\n\n\t\ttmpStep.TimeStart = false;\n\t\ttmpStep.TimeEnd = false;\n\n\t\t// There is an array of steps, in the Operation State itself ... push a step there\n\t\tthis.state.Steps.push(tmpStep);\n\n\t\tthis.stepMap[tmpStep.GUIDStep]\n\t\tthis.stepFunctions[tmpStep.GUIDStep] = fStepFunction;\n\n\t\tthis.state.Status.StepCount++;\n\t\treturn tmpStep;\n\t}\n\n\tgetStep(pGUIDStep)\n\t{\n\t\tif (this.stepMap.hasOwnProperty(pGUIDStep))\n\t\t{\n\t\t\treturn this.stepMap[pGUIDStep];\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tstartStep(pGUIDStep)\n\t{\n\t\tlet tmpStep = this.getStep(pGUIDStep);\n\n\t\tif (tmpStep === false)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpStep.TimeStart = +new Date();\n\n\t\treturn tmpStep;\n\t}\n\n\tstopStep(pGUIDStep)\n\t{\n\t\tlet tmpStep = this.getStep(pGUIDStep);\n\n\t\tif (tmpStep === false)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpStep.TimeEnd = +new Date();\n\n\t\treturn tmpStep;\n\t}\n\n\twriteOperationLog(pLogLevel, pLogText, pLogObject)\n\t{\n\t\tthis.state.Log.push(`[${new Date().toUTCString()}]-[${pLogLevel}]: ${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Log.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\twriteOperationErrors(pLogText, pLogObject)\n\t{\n\t\tthis.state.Errors.push(`${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Errors.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('TRACE', pLogText, pLogObject);\n\t\tthis.fable.log.trace(pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('DEBUG', pLogText, pLogObject);\n\t\tthis.fable.log.debug(pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('INFO', pLogText, pLogObject);\n\t\tthis.fable.log.info(pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('WARN', pLogText, pLogObject);\n\t\tthis.fable.log.warn(pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('ERROR', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.error(pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('FATAL', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.fatal(pLogText, pLogObject);\n\t}\n\n\n\t/************************************************************************\n\t * BEGINNING OF -->  Telemetry Helpers\n\t */\n\tcreateTimeStamp(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tthis.timeStamps[tmpTimeStampHash] = +new Date();\n\t\treturn this.timeStamps[tmpTimeStampHash];\n\t}\n\n\tgetTimeDelta(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tif (this.timeStamps.hasOwnProperty(tmpTimeStampHash))\n\t\t{\n\t\t\tlet tmpEndTime = +new Date();\n\t\t\treturn tmpEndTime-this.timeStamps[tmpTimeStampHash];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tlogTimeDelta(pTimeStampHash, pMessage)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : `Elapsed for ${tmpTimeStampHash}: `;\n\t\tlet tmpOperationTime = this.getTimeDelta(pTimeStampHash);\n\t\tthis.info(tmpMessage +' ('+tmpOperationTime+'ms)');\n\t\treturn tmpOperationTime;\n\t}\n\n\tcreateProgressTracker(pTotalOperations, pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpTotalOperations = (typeof(pTotalOperations) == 'number') ? pTotalOperations : 100;\n\n\t\tlet tmpProgressTracker = (\n\t\t\t{\n\t\t\t\tHash: tmpProgressTrackerHash,\n\t\t\t\tStartTime: this.createTimeStamp(tmpProgressTrackerHash),\n\t\t\t\tEndTime: 0,\n\t\t\t\tCurrentTime: 0,\n\t\t\t\tPercentComplete: -1,\n\t\t\t\tAverageOperationTime: -1,\n\t\t\t\tEstimatedCompletionTime: -1,\n\t\t\t\tTotalCount: tmpTotalOperations,\n\t\t\t\tCurrentCount:-1\n\t\t\t});\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash] = tmpProgressTracker;\n\n\t\treturn tmpProgressTracker;\n\t}\n\n\tsolveProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tlet tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\ttmpProgressTracker.CurrentTime = this.getTimeDelta(tmpProgressTracker.Hash);\n\n\t\tif ((tmpProgressTracker.CurrentCount > 0) && (tmpProgressTracker.TotalCount > 0))\n\t\t{\n\t\t\ttmpProgressTracker.PercentComplete = (tmpProgressTracker.CurrentCount / tmpProgressTracker.TotalCount) * 100.0;\n\t\t}\n\n\t\tif ((tmpProgressTracker.CurrentCount > 0) && (tmpProgressTracker.CurrentTime > 0))\n\t\t{\n\t\t\ttmpProgressTracker.AverageOperationTime = tmpProgressTracker.CurrentTime / tmpProgressTracker.CurrentCount;\n\t\t}\n\n\t\tif ((tmpProgressTracker.CurrentCount < tmpProgressTracker.TotalCount) && (tmpProgressTracker.AverageOperationTime > 0))\n\t\t{\n\t\t\ttmpProgressTracker.EstimatedCompletionTime = (tmpProgressTracker.TotalCount - tmpProgressTracker.CurrentCount) * tmpProgressTracker.AverageOperationTime;\n\t\t}\n\t}\n\n\tupdateProgressTrackerStatus(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\n\t\tif (isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = tmpCurrentOperations;\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tincrementProgressTrackerStatus(pProgressTrackerHash, pIncrementSize)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpIncrementSize = parseInt(pIncrementSize);\n\n\t\tif (isNaN(tmpIncrementSize))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = this.progressTrackers[tmpProgressTrackerHash].CurrentCount + tmpIncrementSize;\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tsetProgressTrackerEndTime(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (!isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\tthis.updateProgressTrackerStatus(tmpProgressTrackerHash, tmpCurrentOperations);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].EndTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tprintProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTrackerHash} does not exist!  No stats to display.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\t\tif (tmpProgressTracker.CurrentCount < 1)\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} has no completed operations.  ${tmpProgressTracker.CurrentTime}ms have elapsed since it was started.`);\n\t\t\t}\n\t\t\telse if (tmpProgressTracker.EndTime < 1)\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} is ${tmpProgressTracker.PercentComplete.toFixed(3)}% completed - ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations over ${tmpProgressTracker.CurrentTime}ms (median ${tmpProgressTracker.AverageOperationTime.toFixed(3)} per).  Estimated completion in ${tmpProgressTracker.EstimatedCompletionTime.toFixed(0)}ms or ${(tmpProgressTracker.EstimatedCompletionTime / 1000 / 60).toFixed(2)}minutes`)\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} is done and completed ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations in ${tmpProgressTracker.EndTime}ms.`)\n\t\t\t}\n\t\t}\n\t}\n\t/*\n\t * END OF       -->  Logging and Telemetry Helpers\n\t ************************************************************************/\n}\n\nmodule.exports = FableOperation;\n},{\"./Fable-Service-Operation-DefaultSettings.js\":62,\"fable-serviceproviderbase\":44}],64:[function(require,module,exports){\n(function (Buffer){(function (){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libSimpleGet = require('simple-get');\nconst libCookie = require('cookie');\n\nclass FableServiceRestClient extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.TraceLog = false;\n\t\tif (this.options.TraceLog || this.fable.TraceLog)\n\t\t{\n\t\t\tthis.TraceLog = true;\n\t\t}\n\n\t\tthis.dataFormat = this.fable.services.DataFormat;\n\n\t\tthis.serviceType = 'RestClient';\n\n\t\tthis.cookie = false;\n\n\t\t// This is a function that can be overridden, to allow the management\n\t\t// of the request options before they are passed to the request library.\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tget simpleGet()\n\t{\n\t\treturn libSimpleGet;\n\t}\n\n\tprepareCookies(pRequestOptions)\n\t{\n\t\tif (this.cookie)\n\t\t{\n\t\t\tlet tmpCookieObject = this.cookie;\n\t\t\tif (!pRequestOptions.hasOwnProperty('headers'))\n\t\t\t{\n\t\t\t\tpRequestOptions.headers = {};\n\t\t\t}\n\t\t\tlet tmpCookieKeys = Object.keys(tmpCookieObject);\n\t\t\tif (tmpCookieKeys.length > 0)\n\t\t\t{\n\t\t\t\t// Only grab the first for now.\n\t\t\t\tpRequestOptions.headers.cookie = libCookie.serialize(tmpCookieKeys[0], tmpCookieObject[tmpCookieKeys[0]]);\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn pRequestOptions;\n\t}\n\n\tpreRequest(pOptions)\n\t{\n\t\t// Validate the options object\n\t\tlet tmpOptions = this.prepareCookies(pOptions);\n\n\t\t// Prepend a string to the URL if it exists in the Fable Config\n\t\tif (this.fable.settings.hasOwnProperty('RestClientURLPrefix'))\n\t\t{\n\t\t\ttmpOptions.url = this.fable.settings.RestClientURLPrefix + tmpOptions.url;\n\t\t}\n\n\t\treturn this.prepareRequestOptions(tmpOptions);\n\t}\n\n\texecuteChunkedRequest(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpData.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpData);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteChunkedRequestBinary(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\ttmpOptions.json = false;\n\t\ttmpOptions.encoding = null;\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpDataBuffer = false;\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: Potentially create a third option that streams this to a file?  So it doesn't have to hold it all in memory.\n\t\t\t\t\t\tif (!tmpDataBuffer)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.from(pChunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.concat([tmpDataBuffer, pChunk]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpDataBuffer.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpDataBuffer);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteJSONRequest(pOptions, fCallback)\n\t{\n\t\tpOptions.json = true;\n\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\tif (!tmpOptions.hasOwnProperty('headers'))\n\t\t{\n\t\t\ttmpOptions.headers = {};\n\t\t}\n\t\t/* Automated headers break some APIs\n\t\tif (!tmpOptions.headers.hasOwnProperty('Content-Type'))\n\t\t{\n\t\t\ttmpOptions.headers['Content-Type'] = 'application/json';\n\t\t}\n\t\t*/\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} JSON request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpJSONData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpJSONData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> JSON ${tmpOptions.method} completed - received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, JSON.parse(tmpJSONData));\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetJSON(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeJSONRequest(tmpRequestOptions, fCallback);\n\t}\n\n\tputJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PUT JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PUT';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpostJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`POST JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'POST';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpatchJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PATCH JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PATCH';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\theadJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`HEAD JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'HEAD';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tdelJSON(pOptions, fCallback)\n\t{\n\t\tpOptions.method = 'DELETE';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tgetRawText(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeChunkedRequest(tmpRequestOptions, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceRestClient;\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":20,\"cookie\":27,\"fable-serviceproviderbase\":44,\"simple-get\":112}],65:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceTemplate extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Template';\n\n\t\t// These are the exact regex's used in lodash/underscore\n\t\t// TODO: Switch this to precedent\n\t\tthis.Matchers = (\n\t\t\t{\n\t\t\t\tEvaluate: /<%([\\s\\S]+?)%>/g,\n\t\t\t\tInterpolate: /<%=([\\s\\S]+?)%>/g,\n\t\t\t\tEscaper: /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g,\n\t\t\t\tUnescaper: /\\\\(\\\\|'|r|n|t|u2028|u2029)/g,\n\t\t\t\t// This is how underscore does it, so we are keeping it for now.\n\t\t\t\tGuaranteedNonMatch: /.^/\n\t\t\t});\n\n\t\t// This is a helper for the escaper and unescaper functions.\n\t\t// Right now we are going to keep what underscore is doing, but, not forever.\n\t\tthis.templateEscapes = {\n\t\t\t'\\\\': '\\\\',\n\t\t\t\"'\": \"'\",\n\t\t\t'r': '\\r',\n\t\t\t'\\r': 'r',\n\t\t\t'n': '\\n',\n\t\t\t'\\n': 'n',\n\t\t\t't': '\\t',\n\t\t\t'\\t': 't',\n\t\t\t'u2028': '\\u2028',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'u2029': '\\u2029',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\t// This is defined as such to underscore that it is a dynamic programming\n\t\t// function on this class.\n\t\tthis.renderFunction = false;\n        this.templateString = false;\n\t}\n\n\trenderTemplate(pData)\n\t{\n\t\treturn this.renderFunction(pData);\n\t}\n\n\ttemplateFunction(pData)\n\t{\n\t\tlet fRenderTemplateBound = this.renderTemplate.bind(this);\n\t\treturn fRenderTemplateBound;\n\t}\n\n\tbuildTemplateFunction(pTemplateText, pData)\n\t{\n\t\t// For now this is being kept in a weird form ... this is to mimic the old\n\t\t// underscore code until this is rewritten using precedent.\n\t\tthis.TemplateSource = \"__p+='\" + pTemplateText\n\t\t\t.replace(this.Matchers.Escaper,\n\t\t\t\t(pMatch)=>\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\${this.templateEscapes[pMatch]}`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Interpolate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `'+\\n(${decodeURIComponent(pCode)})+\\n'`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Evaluate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `';\\n${decodeURIComponent(pCode)}\\n;__p+='`;\n\t\t\t\t}) + `';\\n`;\n\n\n\t\tthis.TemplateSource = `with(pTemplateDataObject||{}){\\n${this.TemplateSource}}\\n`;\n\t\tthis.TemplateSource = `var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n${this.TemplateSource}return __p;\\n`;\n\n\t\tthis.renderFunction = new Function('pTemplateDataObject', this.TemplateSource);\n\n\t\tif (typeof(pData) != 'undefined')\n\t\t{\n\t\t\treturn this.renderFunction(pData);\n\t\t}\n\n\t\t// Provide the compiled function source as a convenience for build time\n\t\t// precompilation.\n\t\tthis.TemplateSourceCompiled = 'function(obj){\\n' + this.TemplateSource + '}';\n\n\t\treturn this.templateFunction();\n\t}\n}\n\nmodule.exports = FableServiceTemplate;\n},{\"fable-serviceproviderbase\":44}],66:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\n// TODO: These are still pretty big -- consider the smaller polyfills\nconst libAsyncWaterfall = require('async.waterfall');\nconst libAsyncEachLimit = require('async.eachlimit');\n\nconst libBigNumber = require('big.js');\n\nclass FableServiceUtility extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\tthis.templates = {};\n\n\t\t// These two functions are used extensively throughout\n\t\tthis.waterfall = libAsyncWaterfall;\n\t\tthis.eachLimit = libAsyncEachLimit;\n\n\t\tthis.bigNumber = libBigNumber;\n\t}\n\n\t// Underscore and lodash have a behavior, _.extend, which merges objects.\n\t// Now that es6 gives us this, use the native thingy.\n\t// Nevermind, the native thing is not stable enough across environments\n\t// Basic shallow copy\n\textend(pDestinationObject, ...pSourceObjects)\n\t{\n\t\tfor (let i = 0; i < pSourceObjects.length; i++)\n\t\t{\n\t\t\tlet tmpSourceObject = pSourceObjects[i];\n\t\t\tif (typeof(tmpSourceObject) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpObjectProperties = Object.keys(tmpSourceObject);\n\t\t\t\tfor (let k = 0; k < tmpObjectProperties.length; k++)\n\t\t\t\t{\n\t\t\t\t\tpDestinationObject[tmpObjectProperties[k]] = tmpSourceObject[tmpObjectProperties[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pDestinationObject;\n\t}\n\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\ttemplate(pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.instantiateServiceProviderWithoutRegistration('Template');\n\t\treturn tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t}\n\n\t// Build a template function from a template hash, and, register it with the service provider\n\tbuildHashedTemplate(pTemplateHash, pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.instantiateServiceProvider('Template', {}, pTemplateHash);\n\t\tthis.templates[pTemplateHash] = tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t\treturn this.templates[pTemplateHash];\n\t}\n\n\t// This is a safe, modern version of chunk from underscore\n\t// Algorithm pulled from a mix of these two polyfills:\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\n\t// https://youmightnotneed.com/lodash\n\t// This implementation was most tolerant in browsers.  Uglify can fix the rest.\n\tchunk (pInput, pChunkSize, pChunkCache)\n\t{\n\t\tlet tmpInputArray = [...pInput];\n\t\t// Note lodash defaults to 1, underscore defaults to 0\n\t\tlet tmpChunkSize = (typeof(pChunkSize) == 'number') ? pChunkSize : 0;\n\t\tlet tmpChunkCache = (typeof(pChunkCache) != 'undefined') ? pChunkCache : [];\n\n\t\tif (tmpChunkSize <= 0)\n\t\t{\n\t\t\treturn tmpChunkCache;\n\t\t}\n\n\t\twhile (tmpInputArray.length)\n\t\t{\n\t\t\ttmpChunkCache.push(tmpInputArray.splice(0, tmpChunkSize));\n\t\t}\n\n\t\treturn tmpChunkCache;\n\t}\n\n\t// Convert an ISO string to a javascript date object\n\t// Adapted from https://stackoverflow.com/a/54751179\n\t//\n\t// Takes strings like: 2022-11-04T11:34:45.000Z\n\t//                and: 1986-06-11T09:34:46.012Z+0200\n\t// ... and converts them into javascript timestamps, following the directions of the timezone stuff.\n\t//\n\t// This is not meant to replace the more complex libraries such as moment or luxon.\n\t// This *is* meant to be a simple, small, and fast way to convert ISO strings to dates in engines\n\t// with ultra limited JS capabilities where those don't work.\n\tisoStringToDate (pISOString)\n\t{\n\t\tif (!this.fable.hasOwnProperty('Dates'))\n\t\t{\n\t\t\tthis.fable.instantiateServiceProvider('Dates');\n\t\t}\n\n\t\tlet tmpDate = false;\n\n\t\ttry\n\t\t{\n\t\t\ttmpDate = this.fable.Dates.dayJS.utc(pISOString);\n\t\t}\n\t\tcatch(pError)\n\t\t{\n\t\t\t// TODO: Should this throw?  Doubtful.\n\t\t\tthis.fable.log.error(`Could not parse date string ${pISOString} with dayJS.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (tmpDate)\n\t\t{\n\t\t\treturn tmpDate.toDate();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nmodule.exports = FableServiceUtility;\n},{\"async.eachlimit\":1,\"async.waterfall\":15,\"big.js\":17,\"fable-serviceproviderbase\":44}],67:[function(require,module,exports){\n'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n\n},{}],68:[function(require,module,exports){\n'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n\n},{\"./implementation\":67}],69:[function(require,module,exports){\n'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n\n},{\"function-bind\":68,\"has-proto\":72,\"has-symbols\":73,\"hasown\":75}],70:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n\n},{\"get-intrinsic\":69}],71:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\tif ($defineProperty) {\n\t\ttry {\n\t\t\t$defineProperty({}, 'a', { value: 1 });\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// IE 8 has a broken defineProperty\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!hasPropertyDescriptors()) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n\n},{\"get-intrinsic\":69}],72:[function(require,module,exports){\n'use strict';\n\nvar test = {\n\tfoo: {}\n};\n\nvar $Object = Object;\n\nmodule.exports = function hasProto() {\n\treturn { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);\n};\n\n},{}],73:[function(require,module,exports){\n'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n\n},{\"./shams\":74}],74:[function(require,module,exports){\n'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n\n},{}],75:[function(require,module,exports){\n'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {(o: {}, p: PropertyKey) => p is keyof o} */\nmodule.exports = bind.call(call, $hasOwn);\n\n},{\"function-bind\":68}],76:[function(require,module,exports){\nvar http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n\n},{\"http\":113,\"url\":134}],77:[function(require,module,exports){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],78:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n\n},{}],79:[function(require,module,exports){\n// When a boxed property is passed in, it should have quotes of some\n// kind around it.\n//\n// For instance:\n// \t\tMyValues['Name']\n// \t\tMyValues[\"Age\"]\n// \t\tMyValues[`Cost`]\n//\n// This function removes the wrapping quotes.\n//\n// Please note it *DOES NOT PARSE* template literals, so backticks just\n// end up doing the same thing as other quote types.\n//\n// TODO: Should template literals be processed?  If so what state do they have access to?  That should happen here if so.\n// TODO: Make a simple class include library with these\nconst cleanWrapCharacters = (pCharacter, pString) =>\n{\n\tif (pString.startsWith(pCharacter) && pString.endsWith(pCharacter))\n\t{\n\t\treturn pString.substring(1, pString.length - 1);\n\t}\n\telse\n\t{\n\t\treturn pString;\n\t}\n};\n\nmodule.exports = cleanWrapCharacters;\n},{}],80:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Hash Translation\n*\n* This is a very simple translation table for hashes, which allows the same schema to resolve\n* differently based on a loaded translation table.\n*\n* This is to prevent the requirement for mutating schemas over and over again when we want to\n* reuse the structure but look up data elements by different addresses.\n*\n* One side-effect of this is that a translation table can \"override\" the built-in hashes, since\n* this is always used to resolve hashes before any of the functionCallByHash(pHash, ...) perform\n* their lookups by hash.\n*\n* @class ManyfestHashTranslation\n*/\nclass ManyfestHashTranslation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n        this.translationTable = {};\n\t}\n\n    translationCount()\n    {\n        return Object.keys(this.translationTable).length;\n    }\n\n    addTranslation(pTranslation)\n    {\n        // This adds a translation in the form of:\n        // { \"SourceHash\": \"DestinationHash\", \"SecondSourceHash\":\"SecondDestinationHash\" }\n        if (typeof(pTranslation) != 'object')\n        {\n            this.logError(`Hash translation addTranslation expected a translation be type object but was passed in ${typeof(pTranslation)}`);\n            return false;\n        }\n\n        let tmpTranslationSources = Object.keys(pTranslation)\n\n        tmpTranslationSources.forEach(\n            (pTranslationSource) =>\n            {\n                if (typeof(pTranslation[pTranslationSource]) != 'string')\n                {\n                    this.logError(`Hash translation addTranslation expected a translation destination hash for [${pTranslationSource}] to be a string but the referrant was a ${typeof(pTranslation[pTranslationSource])}`);\n                }\n                else\n                {\n                    this.translationTable[pTranslationSource] = pTranslation[pTranslationSource];\n                }\n            });\n    }\n\n    removeTranslationHash(pTranslationHash)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslationHash))\n        {\n            delete this.translationTable[pTranslationHash];\n        }\n    }\n\n    // This removes translations.\n    // If passed a string, just removes the single one.\n    // If passed an object, it does all the source keys.\n    removeTranslation(pTranslation)\n    {\n        if (typeof(pTranslation) == 'string')\n        {\n            this.removeTranslationHash(pTranslation);\n            return true;\n        }\n        else if (typeof(pTranslation) == 'object')\n        {\n            let tmpTranslationSources = Object.keys(pTranslation)\n\n            tmpTranslationSources.forEach(\n                (pTranslationSource) =>\n                {\n                    this.removeTranslation(pTranslationSource);\n                });\n            return true;\n        }\n        else\n        {\n            this.logError(`Hash translation removeTranslation expected either a string or an object but the passed-in translation was type ${typeof(pTranslation)}`);\n            return false;\n        }\n    }\n\n    clearTranslations()\n    {\n        this.translationTable = {};\n    }\n\n    translate(pTranslation)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslation))\n        {\n            return this.translationTable[pTranslation];\n        }\n        else\n        {\n            return pTranslation;\n        }\n    }\n}\n\nmodule.exports = ManyfestHashTranslation;\n},{\"./Manyfest-LogToConsole.js\":81}],81:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\n\n/**\n* Manyfest simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n\n    console.log(`[Manyfest] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject));\n};\n\nmodule.exports = logToConsole;\n},{}],82:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Resolver\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressResolverCheckAddressExists\n*/\nclass ManyfestObjectAddressResolverCheckAddressExists\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// Check if an address exists.\n\t//\n\t// This is necessary because the getValueAtAddress function is ambiguous on\n\t// whether the element/property is actually there or not (it returns\n\t// undefined whether the property exists or not).  This function checks for\n\t// existance and returns true or false dependent.\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\t// TODO: Should these throw an error?\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Check if the property exists.\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName].hasOwnProperty(tmpBoxedPropertyReference);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Use the new in operator to see if the element is in the array\n\t\t\t\t\treturn (tmpBoxedPropertyNumber in pObject[tmpBoxedPropertyName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Check if the property exists\n\t\t\t\treturn pObject.hasOwnProperty(pAddress);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// Because this is an impossible address, the property doesn't exist\n\t\t\t\t\t// TODO: Should we throw an error in this condition?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverCheckAddressExists;\n},{\"./Manyfest-LogToConsole.js\":81}],83:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - DeleteValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverDeleteValue\n*/\nclass ManyfestObjectAddressResolverDeleteValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// TODO: Dry me\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Count from the end to the beginning so splice doesn't %&%#$ up the array\n\t\t\t\tfor (let i = tmpInputArray.length - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Delete elements end to beginning\n\t\t\t\t\t\ttmpInputArray.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tdelete pObject[tmpObjectPropertyName];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tdelete pObject[pAddress];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverDeleteValue;\n},{\"../source/Manyfest-ParseConditionals.js\":87,\"./Manyfest-CleanWrapCharacters.js\":79,\"./Manyfest-LogToConsole.js\":81}],84:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - GetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverGetValue\n*/\nclass ManyfestObjectAddressResolverGetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress, pParentAddress, pRootObject)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// Set the root object to the passed-in object if it isn't set yet.  This is expected to be the root object.\n\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// Adding simple back-navigation in objects\n\t\tif (tmpSeparatorIndex == 0)\n\t\t{\n\t\t\t// Given an address of \"Bundle.Contract.IDContract...Project.IDProject\" the ... would be interpreted as two back-navigations from IDContract.\n\t\t\t// When the address is passed in, though, the first . is already eliminated.  So we can count the dots.\n\t\t\tlet tmpParentAddressParts = tmpParentAddress.split('.');\n\n\t\t\tlet tmpBackNavigationCount = 0;\n\n\t\t\t// Count the number of dots\n\t\t\tfor (let i = 0; i < pAddress.length; i++)\n\t\t\t{\n\t\t\t\tif (pAddress.charAt(i) != '.')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttmpBackNavigationCount++;\n\t\t\t}\n\n\t\t\tlet tmpParentAddressLength = tmpParentAddressParts.length - tmpBackNavigationCount;\n\n\t\t\tif (tmpParentAddressLength < 0)\n\t\t\t{\n\t\t\t\t// We are trying to back navigate more than we can.\n\t\t\t\t// TODO: Should this be undefined or should we bank out at the bottom and try to go forward?\n\t\t\t\t// This seems safest for now.\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are trying to back navigate to a parent object.\n\t\t\t\t// Recurse with the back-propagated parent address, and, the new address without the back-navigation dots.\n\t\t\t\tlet tmpRecurseAddress = pAddress.slice(tmpBackNavigationCount);\n\t\t\t\tif (tmpParentAddressLength > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpRecurseAddress = `${tmpParentAddressParts.slice(0, tmpParentAddressLength).join('.')}.${tmpRecurseAddress}`;\n\t\t\t\t}\n\t\t\t\tthis.logInfo(`Back-navigation detected.  Recursing back to address [${tmpRecurseAddress}]`);\n\t\t\t\treturn this.getValueAtAddress(tmpRootObject, tmpRecurseAddress);\n\t\t\t}\n\t\t}\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\tlet tmpOutputArray = [];\n\t\t\t\tfor (let i = 0; i < tmpInputArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOutputArray.push(tmpInputArray[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpOutputArray;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn pObject[tmpObjectPropertyName];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tif (typeof(pObject[pAddress]) != null)\n\t\t\t\t{\n\t\t\t\t\treturn pObject[pAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverGetValue;\n},{\"../source/Manyfest-ParseConditionals.js\":87,\"./Manyfest-CleanWrapCharacters.js\":79,\"./Manyfest-LogToConsole.js\":81}],85:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - SetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressSetValue\n*/\nclass ManyfestObjectAddressSetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyReference] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the time in recursion to set the value in the object\n\t\t\t\tpObject[pAddress] = pValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressSetValue;\n},{\"./Manyfest-CleanWrapCharacters.js\":79,\"./Manyfest-LogToConsole.js\":81}],86:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Generation\n*\n* Automagically generate addresses and properties based on a passed-in object,\n* to be used for easy creation of schemas.  Meant to simplify the lives of\n* developers wanting to create schemas without typing a bunch of stuff.\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressGeneration\n*/\nclass ManyfestObjectAddressGeneration\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// generateAddressses\n\t//\n\t// This flattens an object into a set of key:value pairs for *EVERY SINGLE\n\t// POSSIBLE ADDRESS* in the object.  It can get ... really insane really\n\t// quickly.  This is not meant to be used directly to generate schemas, but\n\t// instead as a starting point for scripts or UIs.\n\t//\n\t// This will return a mega set of key:value pairs with all possible schema\n\t// permutations and default values (when not an object) and everything else.\n\tgenerateAddressses (pObject, pBaseAddress, pSchema)\n\t{\n\t\tlet tmpBaseAddress = (typeof(pBaseAddress) == 'string') ? pBaseAddress : '';\n\t\tlet tmpSchema = (typeof(pSchema) == 'object') ? pSchema : {};\n\n\t\tlet tmpObjectType = typeof(pObject);\n\n\t\tlet tmpSchemaObjectEntry = (\n\t\t\t{\n\t\t\t\tAddress: tmpBaseAddress,\n\t\t\t\tHash: tmpBaseAddress,\n\t\t\t\tName: tmpBaseAddress,\n\t\t\t\t// This is so scripts and UI controls can force a developer to opt-in.\n\t\t\t\tInSchema: false\n\t\t\t}\n\t\t)\n\n\t\tif ((tmpObjectType == 'object') && (pObject == null))\n\t\t{\n\t\t\ttmpObjectType = 'null';\n\t\t}\n\n\t\tswitch(tmpObjectType)\n\t\t{\n\t\t\tcase 'string':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'String';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'bigint':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Number';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\tcase 'null':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Any';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif (Array.isArray(pObject))\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Array';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < pObject.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[i], `${tmpBaseAddress}[${i}]`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Object';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t\ttmpBaseAddress += '.';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectProperties = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectProperties.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[tmpObjectProperties[i]], `${tmpBaseAddress}${tmpObjectProperties[i]}`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'symbol':\n\t\t\tcase 'function':\n\t\t\t\t// Symbols and functions neither recurse nor get added to the schema\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tmpSchema;\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressGeneration;\n},{\"./Manyfest-LogToConsole.js\":81}],87:[function(require,module,exports){\n// Given a string, parse out any conditional expressions and set whether or not to keep the record.\n//\n// For instance:\n// \t\t'files[]<<~?format,==,Thumbnail?~>>'\n//      'files[]<<~?format,==,Metadata?~>>'\n//      'files[]<<~?size,>,4000?~>>'\n//\n// The wrapping parts are the <<~? and ?~>> megabrackets.\n//\n// The function does not need to alter the string -- just check the conditionals within.\n\n// TODO: Consider making this an es6 class\n\n// Let's use indexOf since it is apparently the fastest.\nconst _ConditionalStanzaStart = '<<~?';\nconst _ConditionalStanzaStartLength = _ConditionalStanzaStart.length;\nconst _ConditionalStanzaEnd = '?~>>';\nconst _ConditionalStanzaEndLength = _ConditionalStanzaEnd.length;\n\n// Test the condition of a value in a record\nconst testCondition = (pManyfest, pRecord, pSearchAddress, pSearchComparator, pValue) =>\n{\n\tswitch(pSearchComparator)\n\t{\n\t\tcase '!=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) != pValue);\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) < pValue);\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) > pValue);\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) <= pValue);\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) >= pValue);\n\t\t\tbreak;\n\t\tcase '===':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === pValue);\n\t\t\tbreak;\n\t\tcase '==':\n\t\tdefault:\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) == pValue);\n\t\t\tbreak;\n\t}\n};\n\nconst parseConditionals = (pManyfest, pAddress, pRecord) =>\n{\n\tlet tmpKeepRecord = true;\n\n\t/*\n\t\tAlgorithm is simple:\n\n\t\t1.  Enuerate start points\n\n\t\t2.  Find stop points within each start point\n\t\t3. Check the conditional\n\t*/\n\n\tlet tmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart);\n\n\twhile (tmpStartIndex != -1)\n\t{\n\t\tlet tmpStopIndex = pAddress.indexOf(_ConditionalStanzaEnd, tmpStartIndex+_ConditionalStanzaStartLength);\n\n\t\tif (tmpStopIndex != -1)\n\t\t{\n\t\t\tlet tmpMagicComparisonPatternSet = pAddress.substring(tmpStartIndex+_ConditionalStanzaStartLength, tmpStopIndex).split(',');\n\n\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\t\t\tlet tmpSearchComparator = tmpMagicComparisonPatternSet[1];\n\t\t\tlet tmpSearchValue = tmpMagicComparisonPatternSet[2];\n\n\t\t\t// Process the piece\n\t\t\ttmpKeepRecord = tmpKeepRecord && testCondition(pManyfest, pRecord, tmpSearchAddress, tmpSearchComparator, tmpSearchValue);\n\t\t\ttmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart, tmpStopIndex+_ConditionalStanzaEndLength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpStartIndex = -1;\n\t\t}\n\t\t\n\t}\n\n\treturn tmpKeepRecord;\n}\n\nmodule.exports = parseConditionals;\n},{}],88:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Schema Manipulation Functions\n*\n* @class ManyfestSchemaManipulation\n*/\nclass ManyfestSchemaManipulation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n    // This translates the default address mappings to something different.\n    //\n    // For instance you can pass in manyfest schema descriptor object:\n    // \t{\n\t//\t  \"Address.Of.a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t//\t  \"Address.Of.b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t//  }\n    //\n    //\n    // And then an address mapping (basically a Hash->Address map)\n    //  {\n    //    \"a\": \"New.Address.Of.a\",\n    //    \"b\": \"New.Address.Of.b\"\n    //  }\n    //\n    // NOTE: This mutates the schema object permanently, altering the base hash.\n    //       If there is a collision with an existing address, it can lead to overwrites.\n    // TODO: Discuss what should happen on collisions.\n\tresolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\tif (typeof(pManyfestSchemaDescriptors) != 'object')\n\t\t{\n\t\t\tthis.logError(`Attempted to resolve address mapping but the descriptor was not an object.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof(pAddressMapping) != 'object')\n\t\t{\n\t\t\t// No mappings were passed in\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the arrays of both the schema definition and the hash mapping\n\t\tlet tmpManyfestAddresses = Object.keys(pManyfestSchemaDescriptors);\n\t\tlet tmpHashMapping = {};\n\t\ttmpManyfestAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tif (pManyfestSchemaDescriptors[pAddress].hasOwnProperty('Hash'))\n\t\t\t\t{\n\t\t\t\t\ttmpHashMapping[pManyfestSchemaDescriptors[pAddress].Hash] = pAddress;\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet tmpAddressMappingSet = Object.keys(pAddressMapping);\n\n\t\ttmpAddressMappingSet.forEach(\n\t\t\t(pInputAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpNewDescriptorAddress = pAddressMapping[pInputAddress];\n\t\t\t\tlet tmpOldDescriptorAddress = false;\n\t\t\t\tlet tmpDescriptor = false;\n\n\t\t\t\t// See if there is a matching descriptor either by Address directly or Hash\n\t\t\t\tif (pManyfestSchemaDescriptors.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = pInputAddress;\n\t\t\t\t}\n\t\t\t\telse if (tmpHashMapping.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = tmpHashMapping[pInputAddress];\n\t\t\t\t}\n\n\t\t\t\t// If there was a matching descriptor in the manifest, store it in the temporary descriptor\n\t\t\t\tif (tmpOldDescriptorAddress)\n\t\t\t\t{\n\t\t\t\t\ttmpDescriptor = pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t\tdelete pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Create a new descriptor!  Map it to the input address.\n\t\t\t\t\ttmpDescriptor = { Hash:pInputAddress };\n\t\t\t\t}\n\n\t\t\t\t// Now re-add the descriptor to the manyfest schema\n\t\t\t\tpManyfestSchemaDescriptors[tmpNewDescriptorAddress] = tmpDescriptor;\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tsafeResolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\t// This returns the descriptors as a new object, safely remapping without mutating the original schema Descriptors\n\t\tlet tmpManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptors));\n\t\tthis.resolveAddressMappings(tmpManyfestSchemaDescriptors, pAddressMapping);\n\t\treturn tmpManyfestSchemaDescriptors;\n\t}\n\n\tmergeAddressMappings(pManyfestSchemaDescriptorsDestination, pManyfestSchemaDescriptorsSource)\n\t{\n\t\tif ((typeof(pManyfestSchemaDescriptorsSource) != 'object') || (typeof(pManyfestSchemaDescriptorsDestination) != 'object'))\n\t\t{\n\t\t\tthis.logError(`Attempted to merge two schema descriptors but both were not objects.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpSource = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsSource));\n\t\tlet tmpNewManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsDestination));\n\n\t\t// The first passed-in set of descriptors takes precedence.\n\t\tlet tmpDescriptorAddresses = Object.keys(tmpSource);\n\n\t\ttmpDescriptorAddresses.forEach(\n\t\t\t(pDescriptorAddress) =>\n\t\t\t{\n\t\t\t\tif (!tmpNewManyfestSchemaDescriptors.hasOwnProperty(pDescriptorAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpNewManyfestSchemaDescriptors[pDescriptorAddress] = tmpSource[pDescriptorAddress];\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpNewManyfestSchemaDescriptors;\n\t}\n}\n\nmodule.exports = ManyfestSchemaManipulation;\n},{\"./Manyfest-LogToConsole.js\":81}],89:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\nlet libHashTranslation = require('./Manyfest-HashTranslation.js');\nlet libObjectAddressCheckAddressExists = require('./Manyfest-ObjectAddress-CheckAddressExists.js');\nlet libObjectAddressGetValue = require('./Manyfest-ObjectAddress-GetValue.js');\nlet libObjectAddressSetValue = require('./Manyfest-ObjectAddress-SetValue.js');\nlet libObjectAddressDeleteValue = require('./Manyfest-ObjectAddress-DeleteValue.js');\nlet libObjectAddressGeneration = require('./Manyfest-ObjectAddressGeneration.js');\nlet libSchemaManipulation = require('./Manyfest-SchemaManipulation.js');\n\nconst _DefaultConfiguration = { Scope:'DEFAULT', Descriptors: {} }\n\n/**\n* Manyfest object address-based descriptions and manipulations.\n*\n* @class Manyfest\n*/\nclass Manyfest extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'Manifest';\n\n\t\t// Wire in logging\n\t\tthis.logInfo = libSimpleLog;\n\t\tthis.logError = libSimpleLog;\n\n\t\t// Create an object address resolver and map in the functions\n\t\tthis.objectAddressCheckAddressExists = new libObjectAddressCheckAddressExists(this.logInfo, this.logError);\n\t\tthis.objectAddressGetValue = new libObjectAddressGetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressSetValue = new libObjectAddressSetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressDeleteValue = new libObjectAddressDeleteValue(this.logInfo, this.logError);\n\n\t\tif (!this.options.hasOwnProperty('defaultValues'))\n\t\t{\n\t\t\tthis.options.defaultValues = (\n\t\t\t\t{\n\t\t\t\t\t\"String\": \"\",\n\t\t\t\t\t\"Number\": 0,\n\t\t\t\t\t\"Float\": 0.0,\n\t\t\t\t\t\"Integer\": 0,\n\t\t\t\t\t\"Boolean\": false,\n\t\t\t\t\t\"Binary\": 0,\n\t\t\t\t\t\"DateTime\": 0,\n\t\t\t\t\t\"Array\": [],\n\t\t\t\t\t\"Object\": {},\n\t\t\t\t\t\"Null\": null\n\t\t\t\t});\n\t\t}\n\t\tif (!this.options.hasOwnProperty('strict'))\n\t\t{\n\t\t\tthis.options.strict = false;\n\t\t}\n\n\t\tthis.scope = undefined;\n\t\tthis.elementAddresses = undefined;\n\t\tthis.elementHashes = undefined;\n\t\tthis.elementDescriptors = undefined;\n\n\t\tthis.reset();\n\n\t\tif (typeof(this.options) === 'object')\n\t\t{\n\t\t\tthis.loadManifest(this.options);\n\t\t}\n\n\t\tthis.schemaManipulations = new libSchemaManipulation(this.logInfo, this.logError);\n\t\tthis.objectAddressGeneration = new libObjectAddressGeneration(this.logInfo, this.logError);\n\n\t\tthis.hashTranslations = new libHashTranslation(this.logInfo, this.logError);\n\t}\n\n\t/*************************************************************************\n\t * Schema Manifest Loading, Reading, Manipulation and Serialization Functions\n\t */\n\n\t// Reset critical manifest properties\n\treset()\n\t{\n\t\tthis.scope = 'DEFAULT';\n\t\tthis.elementAddresses = [];\n\t\tthis.elementHashes = {};\n\t\tthis.elementDescriptors = {};\n\t}\n\n\tclone()\n\t{\n\t\t// Make a copy of the options in-place\n\t\tlet tmpNewOptions = JSON.parse(JSON.stringify(this.options));\n\n\t\tlet tmpNewManyfest = new Manyfest(this.getManifest(), this.logInfo, this.logError, tmpNewOptions);\n\n\t\t// Import the hash translations\n\t\ttmpNewManyfest.hashTranslations.addTranslation(this.hashTranslations.translationTable);\n\n\t\treturn tmpNewManyfest;\n\t}\n\n\t// Deserialize a Manifest from a string\n\tdeserialize(pManifestString)\n\t{\n\t\t// TODO: Add guards for bad manifest string\n\t\treturn this.loadManifest(JSON.parse(pManifestString));\n\t}\n\n\t// Load a manifest from an object\n\tloadManifest(pManifest)\n\t{\n\t\tif (typeof(pManifest) !== 'object')\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading manifest; expecting an object but parameter was type ${typeof(pManifest)}.`);\n\t\t}\n\n\t\tlet tmpManifest = (typeof(pManifest) == 'object') ? pManifest : {};\n\n\t\tlet tmpDescriptorKeys = Object.keys(_DefaultConfiguration);\n\n\t\tfor (let i = 0; i < tmpDescriptorKeys.length; i++)\n\t\t{\n\t\t\tif (!tmpManifest.hasOwnProperty(tmpDescriptorKeys[i]))\n\t\t\t{\n\t\t\t\ttmpManifest[tmpDescriptorKeys[i]] = JSON.parse(JSON.stringify(_DefaultConfiguration[tmpDescriptorKeys[i]]));\n\t\t\t}\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Scope'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Scope) === 'string')\n\t\t\t{\n\t\t\t\tthis.scope = tmpManifest.Scope;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest; expecting a string but property was type ${typeof(tmpManifest.Scope)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest object.  Property \"Scope\" does not exist in the root of the object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Descriptors'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Descriptors) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpDescriptionAddresses = Object.keys(tmpManifest.Descriptors);\n\t\t\t\tfor (let i = 0; i < tmpDescriptionAddresses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.addDescriptor(tmpDescriptionAddresses[i], tmpManifest.Descriptors[tmpDescriptionAddresses[i]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading description object from manifest object.  Expecting an object in 'Manifest.Descriptors' but the property was type ${typeof(tmpManifest.Descriptors)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object description from manifest object.  Property \"Descriptors\" does not exist in the root of the Manifest object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('HashTranslations'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.HashTranslations) === 'object')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < tmpManifest.HashTranslations.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// Each translation is \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Serialize the Manifest to a string\n\tserialize()\n\t{\n\t\treturn JSON.stringify(this.getManifest());\n\t}\n\n\tgetManifest()\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tScope: this.scope,\n\t\t\t\tDescriptors: JSON.parse(JSON.stringify(this.elementDescriptors)),\n\t\t\t\tHashTranslations: JSON.parse(JSON.stringify(this.hashTranslations.translationTable))\n\t\t\t});\n\t}\n\n\t// Add a descriptor to the manifest\n\taddDescriptor(pAddress, pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) === 'object')\n\t\t{\n\t\t\t// Add the Address into the Descriptor if it doesn't exist:\n\t\t\tif (!pDescriptor.hasOwnProperty('Address'))\n\t\t\t{\n\t\t\t\tpDescriptor.Address = pAddress;\n\t\t\t}\n\n\t\t\tif (!this.elementDescriptors.hasOwnProperty(pAddress))\n\t\t\t{\n\t\t\t\tthis.elementAddresses.push(pAddress);\n\t\t\t}\n\n\t\t\t// Add the element descriptor to the schema\n\t\t\tthis.elementDescriptors[pAddress] = pDescriptor;\n\n\t\t\t// Always add the address as a hash\n\t\t\tthis.elementHashes[pAddress] = pAddress;\n\n\t\t\tif (pDescriptor.hasOwnProperty('Hash'))\n\t\t\t{\n\t\t\t\t// TODO: Check if this is a good idea or not..\n\t\t\t\t//       Collisions are bound to happen with both representations of the address/hash in here and developers being able to create their own hashes.\n\t\t\t\tthis.elementHashes[pDescriptor.Hash] = pAddress;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpDescriptor.Hash = pAddress;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object descriptor for address '${pAddress}' from manifest object.  Expecting an object but property was type ${typeof(pDescriptor)}.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetDescriptorByHash(pHash)\n\t{\n\t\treturn this.getDescriptor(this.resolveHashAddress(pHash));\n\t}\n\n\tgetDescriptor(pAddress)\n\t{\n\t\treturn this.elementDescriptors[pAddress];\n\t}\n\n\t// execute an action function for each descriptor\n\teachDescriptor(fAction)\n\t{\n        let tmpDescriptorAddresses = Object.keys(this.elementDescriptors);\n        for (let i = 0; i < tmpDescriptorAddresses.length; i++)\n        {\n            fAction(this.elementDescriptors[tmpDescriptorAddresses[i]]);\n        }\n\n\t}\n\n\t/*************************************************************************\n\t * Beginning of Object Manipulation (read & write) Functions\n\t */\n\t// Check if an element exists by its hash\n\tcheckAddressExistsByHash (pObject, pHash)\n\t{\n\t\treturn this.checkAddressExists(pObject,this.resolveHashAddress(pHash));\n\t}\n\n\t// Check if an element exists at an address\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\treturn this.objectAddressCheckAddressExists.checkAddressExists(pObject, pAddress);\n\t}\n\n\t// Turn a hash into an address, factoring in the translation table.\n\tresolveHashAddress(pHash)\n\t{\n\t\tlet tmpAddress = undefined;\n\n\t\tlet tmpInElementHashTable = this.elementHashes.hasOwnProperty(pHash);\n\t\tlet tmpInTranslationTable = this.hashTranslations.translationTable.hasOwnProperty(pHash);\n\n\t\t// The most straightforward: the hash exists, no translations.\n\t\tif (tmpInElementHashTable && !tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[pHash];\n\t\t}\n\t\t// There is a translation from one hash to another, and, the elementHashes contains the pointer end\n\t\telse if (tmpInTranslationTable && this.elementHashes.hasOwnProperty(this.hashTranslations.translate(pHash)))\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[this.hashTranslations.translate(pHash)];\n\t\t}\n\t\t// Use the level of indirection only in the Translation Table\n\t\telse if (tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.hashTranslations.translate(pHash);\n\t\t}\n\t\t// Just treat the hash as an address.\n\t\t// TODO: Discuss this ... it is magic but controversial\n\t\telse\n\t\t{\n\t\t\ttmpAddress = pHash;\n\t\t}\n\n\t\treturn tmpAddress;\n\t}\n\n\t// Get the value of an element by its hash\n\tgetValueByHash (pObject, pHash)\n\t{\n\t\tlet tmpValue = this.getValueAtAddress(pObject, this.resolveHashAddress(pHash));\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptorByHash(pHash));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\tlet tmpValue = this.objectAddressGetValue.getValueAtAddress(pObject, pAddress);\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptor(pAddress));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Set the value of an element by its hash\n\tsetValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.setValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressSetValue.setValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Delete the value of an element by its hash\n\tdeleteValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.deleteValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressDeleteValue.deleteValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Validate the consistency of an object against the schema\n\tvalidate(pObject)\n\t{\n\t\tlet tmpValidationData =\n\t\t{\n\t\t\tError: null,\n\t\t\tErrors: [],\n\t\t\tMissingElements:[]\n\t\t};\n\n\t\tif (typeof(pObject) !== 'object')\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Expected passed in object to be type object but was passed in ${typeof(pObject)}`);\n\t\t}\n\n\t\tlet addValidationError = (pAddress, pErrorMessage) =>\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Element at address \"${pAddress}\" ${pErrorMessage}.`);\n\t\t};\n\n\t\t// Now enumerate through the values and check for anomalies based on the schema\n\t\tfor (let i = 0; i < this.elementAddresses.length; i++)\n\t\t{\n\t\t\tlet tmpDescriptor = this.getDescriptor(this.elementAddresses[i]);\n\t\t\tlet tmpValueExists = this.checkAddressExists(pObject, tmpDescriptor.Address);\n\t\t\tlet tmpValue = this.getValueAtAddress(pObject, tmpDescriptor.Address);\n\n\t\t\tif ((typeof(tmpValue) == 'undefined') || !tmpValueExists)\n\t\t\t{\n\t\t\t\t// This will technically mean that `Object.Some.Value = undefined` will end up showing as \"missing\"\n\t\t\t\t// TODO: Do we want to do a different message based on if the property exists but is undefined?\n\t\t\t\ttmpValidationData.MissingElements.push(tmpDescriptor.Address);\n\t\t\t\tif (tmpDescriptor.Required || this.options.strict)\n\t\t\t\t{\n\t\t\t\t\taddValidationError(tmpDescriptor.Address, 'is flagged REQUIRED but is not set in the object');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now see if there is a data type specified for this element\n\t\t\tif (tmpDescriptor.DataType)\n\t\t\t{\n\t\t\t\tlet tmpElementType = typeof(tmpValue);\n\t\t\t\tswitch(tmpDescriptor.DataType.toString().trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpValueString = tmpValue.toString();\n\t\t\t\t\t\t\tif (tmpValueString.indexOf('.') > -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// TODO: Is this an error?\n\t\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but has a decimal point in the number.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DateTime':\n\t\t\t\t\t\tlet tmpValueDate = new Date(tmpValue);\n\t\t\t\t\t\tif (tmpValueDate.toString() == 'Invalid Date')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is not parsable as a Date by Javascript`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Check if this is a string, in the default case\n\t\t\t\t\t\t// Note this is only when a DataType is specified and it is an unrecognized data type.\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} (which auto-converted to String because it was unrecognized) but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpValidationData;\n\t}\n\n\t// Returns a default value, or, the default value for the data type (which is overridable with configuration)\n\tgetDefaultValue(pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) != 'object')\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (pDescriptor.hasOwnProperty('Default'))\n\t\t{\n\t\t\treturn pDescriptor.Default;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Default to a null if it doesn't have a type specified.\n\t\t\t// This will ensure a placeholder is created but isn't misinterpreted.\n\t\t\tlet tmpDataType = (pDescriptor.hasOwnProperty('DataType')) ? pDescriptor.DataType : 'String';\n\t\t\tif (this.options.defaultValues.hasOwnProperty(tmpDataType))\n\t\t\t{\n\t\t\t\treturn this.options.defaultValues[tmpDataType];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// give up and return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enumerate through the schema and populate default values if they don't exist.\n\tpopulateDefaults(pObject, pOverwriteProperties)\n\t{\n\t\treturn this.populateObject(pObject, pOverwriteProperties,\n\t\t\t// This just sets up a simple filter to see if there is a default set.\n\t\t\t(pDescriptor) =>\n\t\t\t{\n\t\t\t\treturn pDescriptor.hasOwnProperty('Default');\n\t\t\t});\n\t}\n\n\t// Forcefully populate all values even if they don't have defaults.\n\t// Based on type, this can do unexpected things.\n\tpopulateObject(pObject, pOverwriteProperties, fFilter)\n\t{\n\t\t// Automatically create an object if one isn't passed in.\n\t\tlet tmpObject = (typeof(pObject) === 'object') ? pObject : {};\n\t\t// Default to *NOT OVERWRITING* properties\n\t\tlet tmpOverwriteProperties = (typeof(pOverwriteProperties) == 'undefined') ? false : pOverwriteProperties;\n\t\t// This is a filter function, which is passed the schema and allows complex filtering of population\n\t\t// The default filter function just returns true, populating everything.\n\t\tlet tmpFilterFunction = (typeof(fFilter) == 'function') ? fFilter : (pDescriptor) => { return true; };\n\n\t\tthis.elementAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpDescriptor = this.getDescriptor(pAddress);\n\t\t\t\t// Check the filter function to see if this is an address we want to set the value for.\n\t\t\t\tif (tmpFilterFunction(tmpDescriptor))\n\t\t\t\t{\n\t\t\t\t\t// If we are overwriting properties OR the property does not exist\n\t\t\t\t\tif (tmpOverwriteProperties || !this.checkAddressExists(tmpObject, pAddress))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setValueAtAddress(tmpObject, pAddress, this.getDefaultValue(tmpDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpObject;\n\t}\n};\n\nmodule.exports = Manyfest;\n},{\"./Manyfest-HashTranslation.js\":80,\"./Manyfest-LogToConsole.js\":81,\"./Manyfest-ObjectAddress-CheckAddressExists.js\":82,\"./Manyfest-ObjectAddress-DeleteValue.js\":83,\"./Manyfest-ObjectAddress-GetValue.js\":84,\"./Manyfest-ObjectAddress-SetValue.js\":85,\"./Manyfest-ObjectAddressGeneration.js\":86,\"./Manyfest-SchemaManipulation.js\":88,\"fable-serviceproviderbase\":44}],90:[function(require,module,exports){\n(function (global){(function (){\nvar hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (obj === global) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./util.inspect\":18}],91:[function(require,module,exports){\nvar wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n\n},{\"wrappy\":136}],92:[function(require,module,exports){\n(function (process){(function (){\n// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":98}],93:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase')\n\nconst defaultPictSettings = (\n\t{\n\t\tName: 'DefaultPictApplication',\n\n\t\t// The main \"viewport\" is the view that is used to host our application\n\t\tMainViewportViewIdentifier: 'Default-View',\n\t\tMainViewportRenderableHash: false,\n\t\tMainViewportDestinationAddress: false,\n\t\tMainViewportDefaultDataAddress: false,\n\n\t\t// Whether or not we should automatically render the main viewport after we initialize the pict application\n\t\tAutoSolveAfterInitialize: true,\n\t\tAutoRenderMainViewportViewAfterInitialize: true,\n\n\t\tManifests: {},\n\t\t// The prefix to prepend on all template destination hashes\n\t\tIdentifierAddressPrefix: 'PICT-'\n\t});\n\nclass PictApplication extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tthis.serviceType = 'PictApplication';\n\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict state\n\t\tthis.AppData = this.fable.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastMarshalFromViewsTimestamp = false;\n\t\tthis.lastMarshalToViewsTimestamp = false;\n\n\t\t// Load all the manifests for the application\n\t\tlet tmpManifestKeys = Object.keys(this.options.Manifests);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++)\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.fable.instantiateServiceProvider('Manifest', this.options.Manifests[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Solve All Views                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing solve() function...`)\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpViewsToSolve[i].solve();\n\t\t}\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\t// Walk through any loaded views and solve them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoSolveWithApp)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoSolveOrdinal - b.options.AutoSolveOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToSolve[i].solveAsync.bind(tmpViewsToSolve[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Initialize Application                   */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\ttmpViewsToInitialize[i].initialize();\n\t\t\t}\n\t\t\tthis.onAfterInitialize();\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Solve the template synchronously\n\t\t\t\tthis.solve();\n\t\t\t}\n\t\t\t// Now check and see if we should automatically render as well\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Render the template synchronously\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallBack)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\t// TODO: Some optimization cleverness could be gained by grouping them into a parallelized async operation, by ordinal.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority\n\t\t\t// If they are all the default priority 0, it will end up being add order due to JSON Object Property Key order stuff\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = tmpViewsToInitialize[i];\n\t\t\t\ttmpAnticipate.anticipate(tmpView.initializeAsync.bind(tmpView));\n\t\t\t}\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.solveAsync.bind(this));\n\t\t\t}\n\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.renderMainViewportAsync.bind(this));\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallBack();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data From All Views              */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalFromViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalFromViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalFromViews[i].marshalFromView();\n\t\t}\n\t\tthis.onMarshalFromViews();\n\t\tthis.onAfterMarshalFromViews();\n\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalFromViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalFromViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalFromViews[i].marshalFromViewAsync.bind(tmpViewsToMarshalFromViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data To All Views                */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalToViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalToViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalToViews[i].marshalToView();\n\t\t}\n\t\tthis.onMarshalToViews();\n\t\tthis.onAfterMarshalToViews();\n\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalToViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalToViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalToViews[i].marshalToViewAsync.bind(tmpViewsToMarshalToViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Render View                              */\n\t/* -------------------------------------------------------------------------- */\n\trender(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\t// Now get the view (by hash) from the loaded views\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not render from View ${tmpViewIdentifier} because it is not a valid view.`);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn tmpView.render(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress);\n\t}\n\trenderMainViewport()\n\t{\n\t\treturn this.render(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress);\n\t}\n\n\trenderAsync(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tlet tmpErrorMessage = `PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not asynchronously render from View ${tmpViewIdentifier} because it is not a valid view.`;\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.error(tmpErrorMessage);\n\t\t\t}\n\t\t\treturn fCallback(new Error(tmpErrorMessage));\n\t\t}\n\n\t\treturn tmpView.renderAsync(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress, fCallback);\n\t}\n\trenderMainViewportAsync(fCallback)\n\t{\n\t\treturn this.renderAsync(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress, fCallback);\n\t}\n}\n\nmodule.exports = PictApplication;\n},{\"fable-serviceproviderbase\":44}],94:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst defaultPictViewSettings = (\n\t{\n\t\tDefaultRenderable: false,\n\t\tDefaultDestinationAddress: false,\n\t\tDefaultTemplateRecordAddress: false,\n\n\t\tViewIdentifier: false,\n\n\t\t// If this is set to true, when the App initializes this will.\n\t\t// After the App initializes, initialize will be called as soon as it's added.\n\t\tAutoInitialize: true,\n\t\tAutoInitializeOrdinal: 0,\n\n\t\t// If this is set to true, when the App autorenders (on load) this will.\n\t\t// After the App initializes, render will be called as soon as it's added.\n\t\tAutoRender: true,\n\t\tAutoRenderOrdinal: 0,\n\n\t\tAutoSolveWithApp: true,\n\t\tAutoSolveOrdinal: 0,\n\n\t\tCSSHash: false,\n\t\tCSS: false,\n\t\tCSSProvider: false,\n\t\tCSSPriority: 500,\n\n\t\tTemplates: [],\n\n\t\tDefaultTemplates: [],\n\n\t\tRenderables: [],\n\n\t\tManifests: {}\n\t});\n\nclass PictView extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Intersect default options, parent constructor, service information\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictViewSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tif (!this.options.ViewIdentifier)\n\t\t{\n\t\t\tthis.options.ViewIdentifier = `AutoViewID-${this.fable.getUUID()}`;\n\t\t}\n\t\tthis.serviceType = 'PictView';\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict application state\n\t\tthis.AppData = this.pict.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastRenderedTimestamp = false;\n\t\tthis.lastMarshalFromViewTimestamp = false;\n\t\tthis.lastMarshalToViewTimestamp = false;\n\n\t\t// Load all templates from the array in the options\n\t\t// Templates are in the form of {Hash:'Some-Template-Hash',Template:'Template content',Source:'TemplateSource'}\n\t\tfor (let i = 0; i < this.options.Templates.length; i++)\n\t\t{\n\t\t\tlet tmpTemplate = this.options.Templates[i];\n\n\t\t\tif (!tmpTemplate.hasOwnProperty('Hash') || !tmpTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Template ${i} in the options array.`, tmpTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addTemplate(tmpTemplate.Hash, tmpTemplate.Template, tmpTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load all default templates from the array in the options\n\t\t// Templates are in the form of {Prefix:'',Postfix:'-List-Row',Template:'Template content',Source:'TemplateSourceString'}\n\t\tfor (let i = 0; i < this.options.DefaultTemplates.length; i++)\n\t\t{\n\t\t\tlet tmpDefaultTemplate = this.options.DefaultTemplates[i];\n\n\t\t\tif (!tmpDefaultTemplate.hasOwnProperty('Postfix') || !tmpDefaultTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Default Template ${i} in the options array.`, tmpDefaultTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpDefaultTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpDefaultTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addDefaultTemplate(tmpDefaultTemplate.Prefix, tmpDefaultTemplate.Postfix, tmpDefaultTemplate.Template, tmpDefaultTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load the CSS if it's available\n\t\tif (this.options.CSS)\n\t\t{\n\t\t\tlet tmpCSSHash = this.options.CSSHash ? this.options.CSSHash : `View-${this.options.ViewIdentifier}`;\n\t\t\tlet tmpCSSProvider = this.options.CSSProvider ? this.options.CSSProvider : tmpCSSHash;\n\t\t\tthis.pict.CSSMap.addCSS(tmpCSSHash, this.options.CSS, tmpCSSProvider, this.options.CSSPriority);\n\t\t}\n\n\t\t// Load all renderables\n\t\t// Renderables are launchable renderable instructions with templates\n\t\t// They look as such: {Identifier:'ContentEntry', TemplateHash:'Content-Entry-Section-Main', ContentDestinationAddress:'#ContentSection', RecordAddress:'AppData.Content.DefaultText', ManifestTransformation:'ManyfestHash', ManifestDestinationAddress:'AppData.Content.DataToTransformContent'}\n\t\t// The only parts that are necessary are Identifier and Template\n\t\t// A developer can then do render('ContentEntry') and it just kinda works.  Or they can override the ContentDestinationAddress\n\t\tthis.renderables = {};\n\t\tfor (let i = 0; i < this.options.Renderables.length; i++)\n\t\t{\n\t\t\tlet tmpRenderable = this.options.Renderables[i];\n\t\t\tthis.addRenderable(this.options.Renderables[i]);\n\t\t}\n\t}\n\n\taddRenderable(pRenderableHash, pTemplateHash, pDefaultTemplateDataAddress, pDefaultDestinationAddress, pRenderMethod)\n\t{\n\t\tlet tmpRenderable = false;\n\n\t\tif (typeof(pRenderableHash) == 'object')\n\t\t{\n\t\t\t// The developer passed in the renderable as an object.\n\t\t\t// Use theirs instead!\n\t\t\ttmpRenderable = pRenderableHash;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpRenderMethod = (typeof(pRenderMethod) !== 'string') ? pRenderMethod : 'replace';\n\t\t\ttmpRenderable = (\n\t\t\t\t{\n\t\t\t\t\tRenderableHash: pRenderableHash,\n\t\t\t\t\tTemplateHash: pTemplateHash,\n\t\t\t\t\tDefaultTemplateDataAddress: pDefaultTemplateDataAddress,\n\t\t\t\t\tDefaultDestinationAddress: pDefaultDestinationAddress,\n\t\t\t\t\tRenderMethod: tmpRenderMethod\n\t\t\t\t});\n\t\t}\n\n\t\tif ((typeof(tmpRenderable.RenderableHash) != 'string') || (typeof(tmpRenderable.TemplateHash) != 'string'))\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Renderable; RenderableHash or TemplateHash are invalid.`, tmpRenderable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} adding renderable [${tmpRenderable.RenderableHash}] pointed to template ${tmpRenderable.TemplateHash}.`);\n\t\t\t}\n\n\t\t\tthis.renderables[tmpRenderable.RenderableHash] = tmpRenderable;\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                        Code Section: Initialization                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\tthis.onAfterInitialize();\n\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallback)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallback();\n\t\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Render                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeRender(pRenderable, pRenderDestinationAddress, pData)\n\t{\n\t\t// Overload this to mess with stuff before the content gets generated from the template\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeRenderAsync(fCallback)\n\t{\n\t\treturn fCallback();\n\t}\n\n\trender(pRenderable, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it is not a valid renderable.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpDataAddress;\n\t\tlet tmpData;\n\n\t\tif (typeof(pTemplateDataAddress) === 'object')\n\t\t{\n\t\t\ttmpData = pTemplateDataAddress;\n\t\t\ttmpDataAddress = 'Passed in as object';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\t\ttmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\t\t}\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\t// Generate the content output from the template and data\n\t\tlet tmpContent = this.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData)\n\n\t\t// Assign the content to the destination address\n\t\tswitch(tmpRenderable.RenderMethod)\n\t\t{\n\t\t\tcase 'append':\n\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'prepend':\n\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'append_once':\n\t\t\t\t// Try to find the content in the destination address\n\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t{\n\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'replace':\n\t\t\t\t// TODO: Should this be the default?\n\t\t\tdefault:\n\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Execute the developer-overridable post-render behavior\n\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, tmpContent)\n\n\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\treturn true;\n\t}\n\trenderAsync(pRenderable, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`));\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`));\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn fCallback(Error(`Could not render ${tmpRenderableHash}`));\n\t\t}\n\n\t\tlet tmpDataAddress;\n\t\tlet tmpData;\n\n\t\tif (typeof(pTemplateDataAddress) === 'object')\n\t\t{\n\t\t\ttmpData = pTemplateDataAddress;\n\t\t\ttmpDataAddress = 'Passed in as object';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\t\ttmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\t\t}\n\n\t\tlet tmpAnticipate = this.fable.newAnticipate();\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\t//\n\n\t\ttmpAnticipate.anticipate(\n\t\t\t(fOnBeforeRenderCallback) =>\n\t\t\t{\n\t\t\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\t\t\t\tthis.onBeforeRenderAsync(\n\t\t\t\t\t(pError) =>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fOnBeforeRenderCallback(pError);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\ttmpAnticipate.anticipate(\n\t\t\t(fAsyncTemplateCallback) =>\n\t\t\t{\n\t\t\t\t// Render the template (asynchronously)\n\t\t\t\tthis.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData,\n\t\t\t\t\t(pError, pContent) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render (asynchronously) ${tmpRenderableHash} (param ${pRenderable}) because it did not parse the template.`, pError);\n\t\t\t\t\t\t\treturn fAsyncTemplateCallback(pError);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Assign the content to the destination address\n\t\t\t\t\t\tswitch(tmpRenderable.RenderMethod)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'append':\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'prepend':\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'append_once':\n\t\t\t\t\t\t\t\t// Try to find the content in the destination address\n\t\t\t\t\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\t\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'replace':\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Execute the developer-overridable asynchronous post-render behavior\n\t\t\t\t\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\t\t\t\t\treturn this.onAfterRenderAsync(fAsyncTemplateCallback, pContent);\n\t\t\t\t\t});\n\t\t\t});\n\t\ttmpAnticipate.wait(fCallback);\n\t}\n\n\tonAfterRender()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterRenderAsync(fCallback)\n\t{\n\t\tthis.onAfterRender();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Solver                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal From View                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalFromView();\n\t\tthis.onMarshalFromView();\n\t\tthis.onAfterMarshalFromView();\n\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalFromViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal To View                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalToView();\n\t\tthis.onMarshalToView();\n\t\tthis.onAfterMarshalToView();\n\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalToViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToView();\n\t\treturn fCallback();\n\t}\n}\n\nmodule.exports = PictView;\n},{\"fable-serviceproviderbase\":44}],95:[function(require,module,exports){\n/**\n* Precedent Meta-Templating\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Process text streams, parsing out meta-template expressions.\n*/\nvar libWordTree = require(`./WordTree.js`);\nvar libStringParser = require(`./StringParser.js`);\n\nclass Precedent\n{\n\t/**\n\t * Precedent Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser();\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData);\n\t}\n}\n\nmodule.exports = Precedent;\n\n},{\"./StringParser.js\":96,\"./WordTree.js\":97}],96:[function(require,module,exports){\n/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t */\n\tparseString (pString, pParseTree, pData)\n\t{\n\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\tfor (var i = 0; i < pString.length; i++)\n\t\t{\n\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData);\n\t\t}\n\n\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\treturn tmpParserState.Output;\n\t}\n}\n\nmodule.exports = StringParser;\n\n},{}],97:[function(require,module,exports){\n/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n\n},{}],98:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],99:[function(require,module,exports){\n(function (global){(function (){\n/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],100:[function(require,module,exports){\n'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n\n},{}],101:[function(require,module,exports){\n'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n},{\"./formats\":100,\"./parse\":102,\"./stringify\":103}],102:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n\n},{\"./utils\":104}],103:[function(require,module,exports){\n'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            strictNullHandling,\n            skipNulls,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n\n},{\"./formats\":100,\"./utils\":104,\"side-channel\":110}],104:[function(require,module,exports){\n'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n\n},{\"./formats\":100}],105:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],106:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],107:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":105,\"./encode\":106}],108:[function(require,module,exports){\n/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n},{\"buffer\":20}],109:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $floor = GetIntrinsic('%Math.floor%');\n\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(fn, 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(fn, 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n\n},{\"define-data-property\":36,\"get-intrinsic\":69,\"gopd\":70,\"has-property-descriptors\":71}],110:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n\n},{\"call-bind/callBound\":25,\"get-intrinsic\":69,\"object-inspect\":90}],111:[function(require,module,exports){\n(function (Buffer){(function (){\n/*! simple-concat. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function (stream, cb) {\n  var chunks = []\n  stream.on('data', function (chunk) {\n    chunks.push(chunk)\n  })\n  stream.once('end', function () {\n    if (cb) cb(null, Buffer.concat(chunks))\n    cb = null\n  })\n  stream.once('error', function (err) {\n    if (cb) cb(err)\n    cb = null\n  })\n}\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":20}],112:[function(require,module,exports){\n(function (Buffer){(function (){\n/*! simple-get. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const originalHost = opts.hostname // hostname before potential redirect\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api\n      // If redirected host is different than original host, drop headers to prevent cookie leak (#73)\n      if (redirectHost !== null && redirectHost !== originalHost) {\n        delete opts.headers.cookie\n        delete opts.headers.authorization\n      }\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":20,\"decompress-response\":18,\"http\":113,\"https\":76,\"once\":91,\"querystring\":107,\"simple-concat\":111,\"url\":134}],113:[function(require,module,exports){\n(function (global){(function (){\nvar ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./lib/request\":115,\"./lib/response\":116,\"builtin-status-codes\":21,\"url\":134,\"xtend\":137}],114:[function(require,module,exports){\n(function (global){(function (){\nexports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],115:[function(require,module,exports){\n(function (process,global,Buffer){(function (){\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"./capability\":114,\"./response\":116,\"_process\":98,\"buffer\":20,\"inherits\":78,\"readable-stream\":131}],116:[function(require,module,exports){\n(function (process,global,Buffer){(function (){\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"./capability\":114,\"_process\":98,\"buffer\":20,\"inherits\":78,\"readable-stream\":131}],117:[function(require,module,exports){\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n\n},{}],118:[function(require,module,exports){\n(function (process){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n}).call(this)}).call(this,require('_process'))\n\n},{\"./_stream_readable\":120,\"./_stream_writable\":122,\"_process\":98,\"inherits\":78}],119:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n},{\"./_stream_transform\":121,\"inherits\":78}],120:[function(require,module,exports){\n(function (process,global){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../errors\":117,\"./_stream_duplex\":118,\"./internal/streams/async_iterator\":123,\"./internal/streams/buffer_list\":124,\"./internal/streams/destroy\":125,\"./internal/streams/from\":127,\"./internal/streams/state\":129,\"./internal/streams/stream\":130,\"_process\":98,\"buffer\":20,\"events\":37,\"inherits\":78,\"string_decoder/\":132,\"util\":18}],121:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}\n},{\"../errors\":117,\"./_stream_duplex\":118,\"inherits\":78}],122:[function(require,module,exports){\n(function (process,global){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../errors\":117,\"./_stream_duplex\":118,\"./internal/streams/destroy\":125,\"./internal/streams/state\":129,\"./internal/streams/stream\":130,\"_process\":98,\"buffer\":20,\"inherits\":78,\"util-deprecate\":135}],123:[function(require,module,exports){\n(function (process){(function (){\n'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;\n}).call(this)}).call(this,require('_process'))\n\n},{\"./end-of-stream\":126,\"_process\":98}],124:[function(require,module,exports){\n'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();\n},{\"buffer\":20,\"util\":18}],125:[function(require,module,exports){\n(function (process){(function (){\n'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":98}],126:[function(require,module,exports){\n// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;\n},{\"../../../errors\":117}],127:[function(require,module,exports){\nmodule.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n\n},{}],128:[function(require,module,exports){\n// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;\n},{\"../../../errors\":117,\"./end-of-stream\":126}],129:[function(require,module,exports){\n'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};\n},{\"../../../errors\":117}],130:[function(require,module,exports){\nmodule.exports = require('events').EventEmitter;\n\n},{\"events\":37}],131:[function(require,module,exports){\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n\n},{\"./lib/_stream_duplex.js\":118,\"./lib/_stream_passthrough.js\":119,\"./lib/_stream_readable.js\":120,\"./lib/_stream_transform.js\":121,\"./lib/_stream_writable.js\":122,\"./lib/internal/streams/end-of-stream.js\":126,\"./lib/internal/streams/pipeline.js\":128}],132:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n},{\"safe-buffer\":108}],133:[function(require,module,exports){\n(function (setImmediate,clearImmediate){(function (){\nvar nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n}).call(this)}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate)\n\n},{\"process/browser.js\":98,\"timers\":133}],134:[function(require,module,exports){\n/*\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nvar punycode = require('punycode');\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n/*\n * define these here so at least they only have to be\n * compiled once on the first module load.\n */\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/,\n\n  /*\n   * RFC 2396: characters reserved for delimiting URLs.\n   * We actually just auto-escape these.\n   */\n  delims = [\n    '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'\n  ],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = [\n    '{', '}', '|', '\\\\', '^', '`'\n  ].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  /*\n   * Characters that are never ever allowed in a hostname.\n   * Note that any invalid chars are also handled, but these\n   * are the ones that are *expected* to be seen, so we fast-path\n   * them.\n   */\n  nonHostChars = [\n    '%', '/', '?', ';', '#'\n  ].concat(autoEscape),\n  hostEndingChars = [\n    '/', '?', '#'\n  ],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    http: true,\n    https: true,\n    ftp: true,\n    gopher: true,\n    file: true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  },\n  querystring = require('qs');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && typeof url === 'object' && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (typeof url !== 'string') {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  /*\n   * Copy chrome, IE, opera backslash-handling behavior.\n   * Back slashes before the query string get converted to forward slashes\n   * See: https://code.google.com/p/chromium/issues/detail?id=25916\n   */\n  var queryIndex = url.indexOf('?'),\n    splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  /*\n   * trim before proceeding.\n   * This is to support parse stuff like \"  http://foo.com  \\n\"\n   */\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  /*\n   * figure out if it's got a host\n   * user@server is *always* interpreted as a hostname, and url\n   * resolution will treat //foo/bar as host=foo,path=bar because that's\n   * how the browser resolves relative URLs.\n   */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@/]+@[^@/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || (proto && !slashedProtocol[proto]))) {\n\n    /*\n     * there's a hostname.\n     * the first instance of /, ?, ;, or # ends the host.\n     *\n     * If there is an @ in the hostname, then non-host chars *are* allowed\n     * to the left of the last @ sign, unless some host-ending character\n     * comes *before* the @-sign.\n     * URLs are obnoxious.\n     *\n     * ex:\n     * http://a@b@c/ => user:a@b host:c\n     * http://a@b?@c => user:a host:c path:/?@c\n     */\n\n    /*\n     * v0.12 TODO(isaacs): This is not quite how Chrome does things.\n     * Review our test case against browsers more comprehensively.\n     */\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n\n    /*\n     * at this point, either we have an explicit point where the\n     * auth portion cannot go past, or the last @ char is the decider.\n     */\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      /*\n       * atSign must be in auth portion.\n       * http://a@b/c@d => host:b auth:a path:/c@d\n       */\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    /*\n     * Now we have a portion which is definitely the auth.\n     * Pull that off.\n     */\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) { hostEnd = rest.length; }\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    /*\n     * we've indicated that there is a hostname,\n     * so even if it's empty, it has to be present.\n     */\n    this.hostname = this.hostname || '';\n\n    /*\n     * if hostname begins with [ and ends with ]\n     * assume that it's an IPv6 address.\n     */\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              /*\n               * we replace non-ASCII char with a temporary placeholder\n               * we need this to make sure size of hostname is not\n               * broken by replacing non-ASCII by nothing\n               */\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      /*\n       * IDNA Support: Returns a punycoded representation of \"domain\".\n       * It only converts parts of the domain name that\n       * have non-ASCII characters, i.e. it doesn't matter if\n       * you call it with a domain that already is ASCII-only.\n       */\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    /*\n     * strip [ and ] from the hostname\n     * the host field still retains them, though\n     */\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  /*\n   * now rest is set to the post-host stuff.\n   * chop off any delim chars.\n   */\n  if (!unsafeProtocol[lowerProto]) {\n\n    /*\n     * First, make 100% sure that any \"autoEscape\" chars get\n     * escaped, even if encodeURIComponent doesn't think they\n     * need to be.\n     */\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) { continue; }\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  /*\n   * ensure it's an object, and not a string url.\n   * If it's an obj, this is a no-op.\n   * this way, you can call url_format() on strings\n   * to clean up potentially wonky urls.\n   */\n  if (typeof obj === 'string') { obj = urlParse(obj); }\n  if (!(obj instanceof Url)) { return Url.prototype.format.call(obj); }\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n    pathname = this.pathname || '',\n    hash = this.hash || '',\n    host = false,\n    query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && typeof this.query === 'object' && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query, {\n      arrayFormat: 'repeat',\n      addQueryPrefix: false\n    });\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') { protocol += ':'; }\n\n  /*\n   * only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n   * unless they had them to begin with.\n   */\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') { pathname = '/' + pathname; }\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') { hash = '#' + hash; }\n  if (search && search.charAt(0) !== '?') { search = '?' + search; }\n\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) { return relative; }\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (typeof relative === 'string') {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  /*\n   * hash is always overridden, no matter what.\n   * even href=\"\" will remove it.\n   */\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') { result[rkey] = relative[rkey]; }\n    }\n\n    // urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.pathname = '/';\n      result.path = result.pathname;\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    /*\n     * if it's a known url protocol, then changing\n     * the protocol does weird things\n     * first, if it's not file:, then we MUST have a host,\n     * and if there was a path\n     * to begin with, then we MUST have a path.\n     * if it is file:, then the host is dropped,\n     * because that's known to be hostless.\n     * anything else is assumed to be absolute.\n     */\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift())) { }\n      if (!relative.host) { relative.host = ''; }\n      if (!relative.hostname) { relative.hostname = ''; }\n      if (relPath[0] !== '') { relPath.unshift(''); }\n      if (relPath.length < 2) { relPath.unshift(''); }\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n    isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n    mustEndAbs = isRelAbs || isSourceAbs || (result.host && relative.pathname),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    relPath = relative.pathname && relative.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  /*\n   * if the url is a non-slashed url, then relative\n   * links like ../.. should be able\n   * to crawl up to the hostname, as well.  This is strange.\n   * result.protocol has already been set by now.\n   * Later on, put the first path part into the host field.\n   */\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') { srcPath[0] = result.host; } else { srcPath.unshift(result.host); }\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') { relPath[0] = relative.host; } else { relPath.unshift(relative.host); }\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    /*\n     * it's relative\n     * throw away the existing file, and take the new path instead.\n     */\n    if (!srcPath) { srcPath = []; }\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search != null) {\n    /*\n     * just pull out the search.\n     * like href='?foo'.\n     * Put this after the other two cases because it simplifies the booleans\n     */\n    if (psychotic) {\n      result.host = srcPath.shift();\n      result.hostname = result.host;\n      /*\n       * occationaly the auth can get stuck only in host\n       * this especially happens in cases like\n       * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n       */\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.hostname = authInHost.shift();\n        result.host = result.hostname;\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    // to support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    /*\n     * no path at all.  easy.\n     * we've already handled the other stuff above.\n     */\n    result.pathname = null;\n    // to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  /*\n   * if a url ENDs in . or .., then it must get a trailing slash.\n   * however, if it ends in anything else non-slashy,\n   * then it must NOT get a trailing slash.\n   */\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === '';\n\n  /*\n   * strip single dots, resolve double dots to parent dir\n   * if the path tries to go above the root, `up` ends up > 0\n   */\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    result.host = result.hostname;\n    /*\n     * occationaly the auth can get stuck only in host\n     * this especially happens in cases like\n     * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n     */\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.hostname = authInHost.shift();\n      result.host = result.hostname;\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (srcPath.length > 0) {\n    result.pathname = srcPath.join('/');\n  } else {\n    result.pathname = null;\n    result.path = null;\n  }\n\n  // to support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\n},{\"punycode\":99,\"qs\":101}],135:[function(require,module,exports){\n(function (global){(function (){\n\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],136:[function(require,module,exports){\n// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n\n},{}],137:[function(require,module,exports){\nmodule.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n},{}],138:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst defaultConfiguration = (\n\t{\n\t\t// This is the address for the <script /> tag that contains the CSS.\n\t\tCSSElementAddress: '#PICT-CSS'\n\t}\n)\n\nclass PictCSS extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\t// No merging of options necessary\n\t\tif (typeof(this.options.CSSElementAddress) === 'undefined')\n\t\t{\n\t\t\tthis.options.CSSElementAddress = defaultConfiguration.CSSElementAddress;\n\t\t}\n\n\t\tthis.inlineCSSMap = {};\n\t}\n\n\t// Add a CSS fragment to the CSS map (each view can have its own CSS fragment)\n\t// Hash is shared across all views, so if 10 views all load the \"My-Table-View\" fragment, it will only be loaded once.\n\taddCSS(pHash, pContent, pPriority, pProvider)\n\t{\n\t\tlet tmpPriority = (typeof(pPriority) !== 'undefined') ? pPriority : 1000;\n\t\tlet tmpProvidor = (typeof(pProvider) === 'string') ? pProvider : 'Unknown';\n\t\tthis.inlineCSSMap[pHash] = { Hash: pHash, Content: pContent, Provider: tmpProvidor, Priority:tmpPriority };\n\t}\n\n\tremoveCSS(pHash)\n\t{\n\t\tdelete this.inlineCSSMap[pHash];\n\t}\n\n\tgenerateCSS()\n\t{\n\t\tlet tmpCSS = '';\n\t\tlet tmpCSSHashes = Object.keys(this.inlineCSSMap);\n\t\t// Sort the hashes by Priority\n\t\ttmpCSSHashes.sort((a, b) => { return this.inlineCSSMap[a].Priority - this.inlineCSSMap[b].Priority; });\n\t\tfor (let i = 0; i < tmpCSSHashes.length; i++)\n\t\t{\n\t\t\tlet tmpCSSFragment = this.inlineCSSMap[tmpCSSHashes[i]];\n\t\t\tlet tmpCSSComment = tmpCSSFragment.Hash;\n\t\t\tif (tmpCSSFragment.Hash != tmpCSSFragment.Provider)\n\t\t\t{\n\t\t\t\ttmpCSSComment = `${tmpCSSComment} from ${tmpCSSFragment.Provider}`;\n\t\t\t}\n\t\t\ttmpCSS += `/* ${tmpCSSComment} */\\n${tmpCSSFragment.Content}\\n`;\n\t\t}\n\t\treturn tmpCSS;\n\t}\n\n\t// Inject the CSS into the magic DOM element for it\n\tinjectCSS()\n\t{\n\t\tthis.services.ContentAssignment.assignContent(this.options.CSSElementAddress, this.generateCSS());\n\t}\n}\n\nmodule.exports = PictCSS;\n},{\"fable\":50}],139:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictContentAssignment extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictContentAssignment';\n\n\t\t// Check to see if we are running in a browser\n\t\tthis.inBrowser = false;\n\t\tthis.hasDocument = false;\n\t\tif (typeof (window) == 'object')\n\t\t{\n\t\t\tthis.inBrowser = true;\n\t\t\t// Now check that the browser has a document object\n\t\t\tif ((typeof (window.document) != 'undefined') && (typeof (window.document.querySelectorAll) == 'function'))\n\t\t\t{\n\t\t\t\tthis.hasDocument = true;\n\t\t\t}\n\t\t}\n\n\t\t// If we're in a browser, check to see if jQuery is available.\n\t\tthis.hasJquery = false;\n\t\tthis.jQuery = false;\n\t\tif (this.inBrowser && typeof (window.jQuery) !== 'undefined')\n\t\t{\n\t\t\tthis.hasJquery = true;\n\t\t}\n\n\t\t// API Consumers can craft their own assign function\n\t\tthis.customAssignFunction = false;\n\t\t// API Consumers can also craft their own prepend function\n\t\tthis.customPrependFunction = false;\n\t\t// API Consumers can also craft their own append function\n\t\tthis.customAppendFunction = false;\n\n\t\t// API Consumers can also craft their own read function\n\t\tthis.customReadFunction = false;\n\t\t// API Consumers can even craft their own get element function.\n\t\tthis.customGetElementFunction = false;\n\n\t\t// API Consumers can also craft their own attribute read function\n\t\tthis.customReadAttributeFunction = false;\n\t\t// API Consumers can also craft their own attribute set function\n\t\tthis.customSetAttributeFunction = false;\n\t\t// API Consumers can also craft their own attribute remove function\n\t\tthis.customRemoveAttributeFunction = false;\n\n\t\t// API Consumers can also craft their own class read function\n\t\tthis.customReadClassFunction = false;\n\t\t// API Consumers can also craft their own class set function\n\t\tthis.customSetClassFunction = false;\n\t\t// API Consumers can also craft their own class remove function\n\t\tthis.customRemoveClassFunction = false;\n\t}\n\n\tgetElement(pAddress)\n\t{\n\t\tif (this.customGetElementFunction)\n\t\t{\n\t\t\treturn this.customGetElementFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpElements = window.jQuery(pAddress);\n\t\t\tif (tmpElements.length == 0)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// TODO: This isn't the most efficient method, but it is the most compatible.\n\t\t\t\tlet tmpElementSet = [];\n\t\t\t\tfor (let i = 0; i < tmpElements.length; i++)\n\t\t\t\t{\n\t\t\t\t\ttmpElementSet.push(tmpElements[0]);\n\t\t\t\t}\n\t\t\t\treturn tmpElementSet;\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\treturn window.document.querySelectorAll(pAddress);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content GET ELEMENT for [${pAddress}] will return empty because none of the browser methods are available`);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tassignContent(pAddress, pContent)\n\t{\n\t\tif (this.customAssignFunction)\n\t\t{\n\t\t\treturn this.customAssignFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element(s)\n\t\t\tlet tmpTargetElementSet = window.jQuery(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\t// Get the element(s)\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content ASSIGN to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tappendContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customAppendFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.append(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"beforeend\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content APPEND to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tprependContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customPrependFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.prepend(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"afterbegin\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content PREPEND in [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\treadContent(pAddress)\n\t{\n\t\tif (this.customReadFunction)\n\t\t{\n\t\t\treturn this.customReadFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\tswitch (tmpTargetElement.prop('tagName'))\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\treturn tmpTargetElement.val();\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\treturn tmpTargetElement.text();\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn tmpTargetElement.html();\n\t\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tif (tmpTargetElementSet.length < 1)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse if (tmpTargetElementSet.length == 1)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[0].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\treturn tmpTargetElementSet[0].value;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\treturn tmpTargetElementSet[0].text;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn tmpTargetElementSet[0].innerHTML;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content READ from [${pAddress}]...`);\n\t\t\treturn '';\n\t\t}\n\t}\n\n\n\taddClass(pAddress, pClass)\n\t{\n\t\tif (this.customSetClassFunction)\n\t\t{\n\t\t\treturn this.customSetClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.addClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.add(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content ADDCLASS to [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\tremoveClass(pAddress, pClass)\n\t{\n\t\tif (this.customRemoveClassFunction)\n\t\t{\n\t\t\treturn this.customRemoveClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.remove(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVECLASS from [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\treadAttribute(pAddress, pAttribute)\n\t{\n\t\tif (this.customReadAttributeFunction)\n\t\t{\n\t\t\treturn this.customReadAttributeFunction(pAddress, pAttribute);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.attr(pAttribute);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].getAttribute(pAttribute);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content READATTRIBUTE from [${pAddress}]:`, pAttribute);\n\t\t}\n\t}\n\n\tsetAttribute(pAddress, pAttribute, pValue)\n\t{\n\t\tif (this.customSetAttributeFunction)\n\t\t{\n\t\t\treturn this.customSetAttributeFunction(pAddress, pAttribute, pValue);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.attr(pAttribute, pValue);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].setAttribute(pAttribute, pValue);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content SETATTRIBUTE for [${pAddress}] ATTRIBUTE [${pAttribute}]:`, pValue);\n\t\t}\n\t}\n\n\tremoveAttribute(pAddress, pAttribute)\n\t{\n\t\tif (this.customRemoveAttributeFunction)\n\t\t{\n\t\t\treturn this.customRemoveAttributeFunction(pAddress, pAttribute);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeAttr(pAttribute);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].removeAttribute(pAttribute);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVEATTRIBUTE for [${pAddress}] ATTRIBUTE [${pAttribute}]`);\n\t\t}\n\t}\n\n\thasClass(pAddress, pClass)\n\t{\n\t\tif (this.customReadClassFunction)\n\t\t{\n\t\t\treturn this.customReadClassFunction(pAddress, pClass);\n\t\t}\n\t\tif (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\treturn tmpTargetElement.hasClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\treturn tmpTargetElementSet[i].classList.contains(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content HASCLASS for [${pAddress}] CLASS [${pClass}]:`);\n\t\t}\n\t}\n}\n\nmodule.exports = PictContentAssignment;\n},{\"fable\":50}],140:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictDataProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictDataProvider';\n\t}\n\n    getDataByAddress(pAddress, pData)\n    {\n        let tmpData = (typeof(pData) === 'undefined') ? {} : pData;\n\n        return this.fable.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, pAddress);\n    }\n}\n\nmodule.exports = PictDataProvider;\n},{\"fable\":50}],141:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictMeadowEntityProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictMeadowProvider';\n\n\t\tif (this.fable.settings.PictDefaultURLPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = this.fable.settings.PictDefaultURLPrefix;\n\t\t}\n\t\telse if (!this.options.urlPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = '/1.0/';\n\t\t}\n\n\t\tif (this.fable.settings.PictDefaultDownloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = this.fable.settings.PictDefaultDownloadBatchSize;\n\t\t}\n\t\telse if (!this.options.downloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = 100;\n\t\t}\n\n\t\tthis.restClient = this.fable.instantiateServiceProviderWithoutRegistration('RestClient');\n\n\t\tthis.cache = {};\n\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tinitializeCache(pEntity)\n\t{\n\t\t// This should not be happening as often as it's happening.\n\t\tif (!this.cache.hasOwnProperty(pEntity))\n\t\t{\n\t\t\tthis.cache[pEntity] = this.fable.instantiateServiceProviderWithoutRegistration('ObjectCache');\n\t\t\t// TODO: Make this a configuration?\n\t\t\t// For now cache for 30 seconds.\n\t\t\tthis.cache[pEntity].maxAge = 30000;\n\t\t\tthis.cache[pEntity].maxLength = 10000;\n\n\t\t\tthis.fable.Bundle[pEntity] = this.cache[pEntity].RecordMap;\n\t\t}\n\t}\n\n\tgetEntity(pEntity, pIDRecord, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\tfunction ()\n\t\t\t{\n\t\t\t\tlet tmpPossibleRecord = this.cache[pEntity].read(pIDRecord);\n\n\t\t\t\tif (tmpPossibleRecord)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(null, tmpPossibleRecord);\n\t\t\t\t}\n\n\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}/${pIDRecord}`\n\t\t\t\t\t});\n\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pBody)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.cache[pEntity].put(pBody, pIDRecord);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pBody);\n\t\t\t\t\t});\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySetPage(pEntity, pMeadowFilterExpression, pRecordStartCursor, pRecordCount, fCallback)\n\t{\n\t\tlet tmpURL = `${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${pRecordStartCursor}/${pRecordCount}`;\n\n\t\treturn this.restClient.getJSON(tmpURL,\n\t\t\tfunction (pDownloadError, pDownloadResponse, pDownloadBody)\n\t\t\t{\n\t\t\t\treturn fCallback(pDownloadError, pDownloadBody);\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySetRecordCount(pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\tlet tmpURL = `${this.options.urlPrefix}${pEntity}s/Count/FilteredTo/${pMeadowFilterExpression}`;\n\n\t\treturn this.restClient.getJSON(tmpURL,\n\t\t\tfunction (pError, pResponse, pBody)\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\tthis.log.error(`Error getting entity count of [${pEntity}] filtered to [${pMeadowFilterExpression}] from url [${tmpURL}]: ${pError}`);\n\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t}\n\t\t\t\tlet tmpRecordCount = 0;\n\t\t\t\tif (pBody.Count)\n\t\t\t\t{\n\t\t\t\t\ttmpRecordCount = pBody.Count;\n\t\t\t\t}\n\t\t\t\treturn fCallback(pError, tmpRecordCount);\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySet(pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\t// TODO: Should we test for too many record IDs here by string length in pMeadowFilterExpression?\n\t\t//       FBL~ID${pDestinationEntity}~INN~${tmpIDRecordsCommaSeparated}\n\t\t//       If the list is mega-long we can parse it and break it into chunks.\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\tfunction ()\n\t\t\t{\n\t\t\t\treturn this.getEntitySetRecordCount(pEntity, pMeadowFilterExpression,\n\t\t\t\t\t(pRecordCountError, pRecordCount) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pRecordCountError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn fCallback(pRecordCountError);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet tmpRecordCount = pRecordCount;\n\n\t\t\t\t\t\tif (isNaN(pRecordCount))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Entity count did not return a number for [${pEntity}] filtered to [${pMeadowFilterExpression}]... something is fatally wrong from the server accessed in getEntitySet call.`);\n\t\t\t\t\t\t\treturn fCallback(new Error('Entity count did not return a number in getEntitySet.'));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpDownloadURIFragments = [];\n\t\t\t\t\t\tlet tmpDownloadBatchSize = this.options.downloadBatchSize;\n\t\t\t\t\t\tfor (let i = 0; i < (tmpRecordCount / tmpDownloadBatchSize); i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Generate each of the URI fragments to download\n\t\t\t\t\t\t\ttmpDownloadURIFragments.push(`${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${i * tmpDownloadBatchSize}/${tmpDownloadBatchSize}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpEntitySet = [];\n\n\t\t\t\t\t\t// Now run these in series (it's possible to parallelize the requests but they would not be in server order)\n\t\t\t\t\t\tthis.fable.Utility.eachLimit(tmpDownloadURIFragments, 1,\n\t\t\t\t\t\t\t(pURIFragment, fDownloadCallback) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.restClient.getJSON(pURIFragment,\n\t\t\t\t\t\t\t\t\t(pDownloadError, pDownloadResponse, pDownloadBody) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmpEntitySet = tmpEntitySet.concat(pDownloadBody);\n\t\t\t\t\t\t\t\t\t\t// Should we be caching each record?\n\t\t\t\t\t\t\t\t\t\treturn fDownloadCallback(pDownloadError);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(pFullDownloadError) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(pFullDownloadError, tmpEntitySet);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t}.bind(this));\n\t}\n}\n\nmodule.exports = PictMeadowEntityProvider;\n},{\"fable\":50}],142:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictTemplateProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictTemplateProvider';\n\n        this.templates = {};\n        this.templateSources = {};\n\n        // Default templates are stored by prefix.\n        // The longest prefix match is used.\n        // Case sensitive.\n        this.defaultTemplates = [];\n\n        // This function can be overloaded to load templates from a database, in a page or other source.\n        this.loadTemplateFunction = (pTemplateHash) => { return false; };\n\t}\n\n    addTemplate(pTemplateHash, pTemplate, pTemplateSource)\n    {\n        this.templates[pTemplateHash] = pTemplate;\n\n        if (typeof(pTemplateSource) == 'string')\n        {\n            this.templateSources[pTemplateHash] = pTemplateSource;\n        }\n        else\n        {\n            this.templateSources[pTemplateHash] = `Direct addTemplate('${pTemplateHash}') function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`;\n        }\n    }\n\n    addDefaultTemplate(pPrefix, pPostfix, pTemplate, pSource)\n    {\n        let tmpSource = (typeof(pSource) == 'string') ? pSource : `Direct addDefaultTemplate('${pPrefix}','${pPostfix}',..) function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`\n        let tmpDefaultTemplate = {\n            prefix: pPrefix,\n            postfix: pPostfix,\n            template: pTemplate,\n            source: tmpSource\n        };\n        if (typeof(pTemplate) != 'string')\n        {\n            this.log.error('PictTemplateProvider.addDefaultTemplate: pTemplate is not a string.');\n        }\n        this.defaultTemplates.push(tmpDefaultTemplate);\n    }\n\n    checkDefaultTemplateHash(pTemplateHash)\n    {\n        /*\n         * Default templates are managed by postfix and prefix.  The use case is things like titles, headers, list \n         * wrappers, rows, etc.\n         *\n         * So we might have a default template for a list wrapper and it should expect \"-ListWrap\" as the postfix.\n         * And we might have a default template for a list row and it should expect \"-ListRow\" as the postfix.\n         * The list might have a \"-ListTitle\", or we might have shared titles and it would just be \"-Title\".\n         * \n         * The idea is to allow fallbacks on defaults.\n         */\n        for (let i = 0; i < this.defaultTemplates.length; i++)\n        {\n            if ((pTemplateHash.indexOf(this.defaultTemplates[i].postfix) == pTemplateHash.length - this.defaultTemplates[i].postfix.length)\n                && (pTemplateHash.indexOf(this.defaultTemplates[i].prefix) == 0))\n            {\n                this.templates[pTemplateHash] = this.defaultTemplates[i].template;\n                this.templateSources[pTemplateHash] = `Auto created in checkDefaultTemplateHash('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${this.defaultTemplates[i].prefix}]...[${this.defaultTemplates[i].postfix}]`;\n                return this.templates[pTemplateHash];\n            }\n        }\n        return false;\n    }\n\n    getTemplate(pTemplateHash)\n    {\n        // TODO: Optimize this.\n        // If the template doesn't exist, try to load it with the loading function\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.loadTemplate(pTemplateHash);\n        }\n        // If the loading function fails, try to load it from the default templates\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.checkDefaultTemplateHash(pTemplateHash);\n        }\n        if (this.templates.hasOwnProperty(pTemplateHash))\n        {\n            return this.templates[pTemplateHash];\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    loadTemplate(pTemplateHash)\n    {\n        let tmpTemplate = this.loadTemplateFunction(pTemplateHash);\n\n        if (tmpTemplate)\n        {\n            this.templates[pTemplateHash] = tmpTemplate.template;\n            this.templateSources[pTemplateHash] = `Loaded in loadTemplate('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${tmpTemplate.source}]`;\n\n        }\n\n        return tmpTemplate;\n    }\n}\n\nmodule.exports = PictTemplateProvider;\n},{\"fable\":50}],143:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nconst libFable = require('fable');\n\nclass Pict extends libFable\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\tthis.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n\n\t\t// The templateProvider provides a basic key->template mapping with default fallback capabilities\n\t\tthis.addAndInstantiateServiceType('TemplateProvider', require('./Pict-Template-Provider.js'));\n\t\tthis.addAndInstantiateServiceType('EntityProvider',  require('./Pict-Meadow-EntityProvider.js'));\n\t\tthis.addAndInstantiateServiceType('DataProvider',  require('./Pict-DataProvider.js'));\n\t\tthis.addAndInstantiateServiceType('ContentAssignment',  require('./Pict-Content-Assignment.js'));\n\t\tthis.addAndInstantiateServiceType('CSSMap', require('./Pict-CSS.js'));\n\n\t\tthis.instantiateServiceProvider('MetaTemplate');\n\t\tthis.instantiateServiceProvider('DataGeneration');\n\n\t\tthis.manifest = this.instantiateServiceProvider('Manifest');\n\n\t\tthis.AppData = {};\n\t\tthis.Bundle = {};\n\n\t\t// Log noisness goes from 0 - 5, where 5 is show me everything.\n\t\tthis.LogNoisiness = 0;\n\n\t\t// Load manifest sets\n\t\tif (this.settings.Manifests)\n\t\t{\n\t\t\tthis.loadManifestSet(this.settings.Manifests);\n\t\t}\n\n\t\tthis._DefaultPictTemplatesInitialized = false;\n\t\tthis.initializePictTemplateEngine();\n\n\t\tthis.addServiceType('PictView',  require('pict-view'));\n\t\tthis.addServiceType('PictApplication',  require('pict-application'));\n\n\t\t// Expose the named views directly, through a convenience accessor\n\t\tthis.views = this.servicesMap.PictView;\n\t}\n\n\t// Load manifests in as Hashed services\n\tloadManifestSet (pManifestSet)\n\t{\n\t\tif (typeof(pManifestSet) != 'object')\n\t\t{\n\t\t\tthis.log.warn(`PICT [${this.UUID}] could not load Manifest Set; pManifestSet was not an object.`);\n\t\t\treturn false;\n\t\t}\n\t\tlet tmpManifestKeys = Object.keys(pManifestSet);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++ )\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.instantiateServiceProvider('Manifest', pManifestSet[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddView(pViewHash, pOptions, pViewPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpViewHash = (typeof(pViewHash) == 'string') ? pViewHash : this.fable.getUUID();\n\n\t\tif (typeof(pViewPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pViewPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pViewPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictView', tmpOptions, tmpViewHash, pViewPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictView', tmpOptions, tmpViewHash);\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddApplication(pApplicationHash, pOptions, pApplicationPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpApplicationHash = (typeof(pApplicationHash) == 'string') ? pApplicationHash : this.fable.getUUID();\n\n\t\tif (typeof(pApplicationPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pApplicationPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pApplicationPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictApplication', tmpOptions, tmpApplicationHash, pApplicationPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictApplication', tmpOptions, tmpApplicationHash);\n\t\t}\n\t}\n\n\tinitializePictTemplateEngine()\n\t{\n\t\t/*\n\t\t *\n\t\t * To stave off madness, these are inefficient for now.  The wkhtmltopdf renderer leaves much to be desired\n\t\t * in the way of feedback with regards to javascript compatibility.\n\t\t *\n\t\t */\n\t\tif (!this._DefaultPictTemplatesInitialized)\n\t\t{\n\t\t\t// Expects one of the following:\n\t\t\t// \t\t{~E:Book^AppData.Some.Address.IDBook^Render-Book-Template~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook and render it to Render-Book-Template\n\t\t\tlet fEntityRender = (pHash, pData, fCallback) =>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpEntity = false;\n\t\t\t\t\tlet tmpEntityID = false;\n\t\t\t\t\tlet tmpEntityTemplate = false;\n\n\t\t\t\t\t// This expression requires 2 parts -- a third is optional, and, if present, is the template to render to.\n\t\t\t\t\tlet tmpAddressParts = tmpHash.split('^');\n\n\t\t\t\t\tif (tmpAddressParts.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpEntity = tmpAddressParts[0].trim();\n\t\t\t\t\ttmpEntityID = tmpAddressParts[1].trim();\n\t\t\t\t\ttmpEntityTemplate = tmpAddressParts[2].trim();\n\n\t\t\t\t\tif (!isNaN(tmpEntityID))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpEntityID = parseInt(tmpEntityID);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is an address, so we need to get the value at the address\n\t\t\t\t\t\ttmpEntityID = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpEntityID);\n\t\t\t\t\t}\n\n\t\t\t\t\t// No Entity or EntityID\n\t\t\t\t\tif (!tmpEntity || !tmpEntityID)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]  Entity: ${tmpEntity} ID: ${tmpEntityID}`);\n\t\t\t\t\t\treturn tmpCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]  Entity: ${tmpEntity} ID: ${tmpEntityID}`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`Pict: Entity Render: Entity [${tmpEntity}] with ID [${tmpEntityID}] as template [${tmpEntityTemplate}] from [${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to get the entity\n\t\t\t\t\tthis.EntityProvider.getEntity(tmpEntity, tmpEntityID,\n\t\t\t\t\t\tfunction (pError, pRecord)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Pict: Entity Render: Error getting entity [${tmpEntity}] with ID [${tmpEntityID}] for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Now render the template\n\t\t\t\t\t\t\tif (tmpEntityTemplate)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpEntityTemplate, pRecord, tmpCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn tmpCallback(null, '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(this));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternAsync('{~E:', '~}', fEntityRender);\n\t\t\tthis.MetaTemplate.addPatternAsync('{~Entity:', '~}', fEntityRender);\n\n\t\t\t// {~T:Template:AddressOfData~}\n\t\t\tlet fTemplateRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render Async: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render Async: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData),\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~T:', '~}', fTemplateRender, fTemplateRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~Template:', '~}', fTemplateRender, fTemplateRenderAsync);\n\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateSetRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0]\n\t\t\t\t\ttmpAddressOfData = tmpTemplateHashPart[1];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\ttmpData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData);\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TS:', '~}', fTemplateSetRender, fTemplateSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateSet:', '~}', fTemplateSetRender, fTemplateSetRenderAsync);\n\n// Refactor: #### DRY PROBLEM Too much dry needing fixed at this point\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateValueSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData);\n\n\t\t\t\t\tlet tmpDataValueSet = [];\n\t\t\t\t\tif (Array.isArray(tmpData))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < tmpData.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[i]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof(tmpData) === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueKeys = Object.keys(tmpData);\n\t\t\t\t\t\tfor (let i = 0; i < tmpValueKeys.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[tmpValueKeys[i]]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData});\n\t\t\t\t\t}\n\t\t\t\t\ttmpData = tmpDataValueSet;\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, tmpData);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateValueSetRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0]\n\t\t\t\t\ttmpAddressOfData = tmpTemplateHashPart[1];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\ttmpData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData);\n\n\t\t\t\t\tlet tmpDataValueSet = [];\n\t\t\t\t\tif (Array.isArray(tmpData))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < tmpData.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[i]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof(tmpData) === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueKeys = Object.keys(tmpData);\n\t\t\t\t\t\tfor (let i = 0; i < tmpValueKeys.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[tmpValueKeys[i]]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData});\n\t\t\t\t\t}\n\t\t\t\t\ttmpData = tmpDataValueSet;\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TVS:', '~}', fTemplateValueSetRender, fTemplateValueSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateValueSet:', '~}', fTemplateValueSetRender, fTemplateValueSetRenderAsync);\n\n\t\t\t// {~T:TemplateFromMap:AddressOfData~}\n\t\t\tlet fTemplateFromMapRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfMap);\n\t\t\t\t\tlet tmpKey = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfKey);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, tmpData);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateFromMapRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfMap);\n\t\t\t\t\tlet tmpKey = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfKey);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from TemplateFromMaps\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TFM:', '~}', fTemplateFromMapRender, fTemplateFromMapRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateFromMap:', '~}', fTemplateFromMapRender, fTemplateFromMapRenderAsync);\n\n\t\t\t// {~TS:TemplateFromMap:AddressOfDataSet~}\n\t\t\tlet fTemplateFromMapSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfMap);\n\t\t\t\t\tlet tmpKey = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfKey);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateFromMapSetRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMapSet Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfMap);\n\t\t\t\t\tlet tmpKey = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfKey);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMapSet Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from TemplateFromMaps\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TSFM:', '~}', fTemplateFromMapSetRender, fTemplateFromMapSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateSetFromMap:', '~}', fTemplateFromMapSetRender, fTemplateFromMapSetRenderAsync);\n// Refactor: #### END OF DRY PROBLEM\n\n\n\n\t\t\t//{~Data:AppData.Some.Value.to.Render~}\n\t\t\tlet fDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = '';\n\t\t\t\t\tif (tmpHash != null)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\t}\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn tmpValue;\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~D:', '~}', fDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Data:', '~}', fDataRender);\n\n\t\t\t//<p>{~Join: - ^Record.d1^Record.d1~}</p>\n\t\t\tlet fJoinDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash;\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDataAddresses = tmpHash.split('^');\n\t\t\t\t\tif (tmpDataAddresses.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get the separator string\n\t\t\t\t\tlet tmpSeparator = tmpDataAddresses.shift();\n\n\t\t\t\t\tlet tmpValueList = [];\n\t\t\t\t\tfor (let i = 0; i < tmpDataAddresses.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpDataAddresses[i]);\n\t\t\t\t\t\tif (tmpValue)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpValueList.push(tmpValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpValueList.join(tmpSeparator);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~J:', '~}', fJoinDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Join:', '~}', fJoinDataRender);\n\n\t\t\t//<p>{~JoinUnique: - ^Record.d1^Record.d1~}</p>\n\t\t\tlet fJoinUniqueDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash;\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join Unique [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join Unique [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDataAddresses = tmpHash.split('^');\n\t\t\t\t\tif (tmpDataAddresses.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get the separator string\n\t\t\t\t\tlet tmpSeparator = tmpDataAddresses.shift();\n\n\t\t\t\t\tlet tmpValueList = [];\n\t\t\t\t\tlet tmpValueMap = {};\n\t\t\t\t\tfor (let i = 0; i < tmpDataAddresses.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpDataAddresses[i]);\n\t\t\t\t\t\tif (tmpValue)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!tmpValueMap.hasOwnProperty(tmpValue))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValueMap[tmpValue] = true;\n\t\t\t\t\t\t\t\ttmpValueList.push(tmpValue);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpValueList.join(tmpSeparator);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~JU:', '~}', fJoinUniqueDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~JoinUnique:', '~}', fJoinUniqueDataRender);\n\n\t\t\tthis.MetaTemplate.addPattern('{~Dollars:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterDollars(tmpColumnData);\n\t\t\t\t});\n\t\t\tthis.MetaTemplate.addPattern('{~Digits:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterAddCommasToNumber(this.DataFormat.formatterRoundNumber(tmpColumnData, 2));\n\t\t\t\t});\n\t\t\t\n\t\t\t// Output the date as a YYYY-MM-DD string\n\t\t\tthis.MetaTemplate.addPattern('{~DateYMD:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpDateValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: Modularize this\n\t\t\t\t\tlet tmpDayJS = this.fable.Dates.dayJS.utc(tmpDateValue);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Try to cast the day to be a specific timezone if one is set for the app\n\t\t\t\t\t\tif (this.options.Timezone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.options.Timezone);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`Error casting Document date ${tmpSQLDateTime} to the Document timezone using tz in this.AppData.DocumentData.Timezone: [${this.AppData.DocumentData.Timezone}] .. casting to the browser guess which is [${this.fable.Dates.dayJS.tz.guess()}].`);\n\t\t\t\t\t\t// Day.js will try to guess the user's timezone for us\n\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpDayJS.format('YYYY-MM-DD');\n\t\t\t\t});\n\n\t\t\t\n\t\t\t// Output the date as a YYYY-MM-DD string\n\t\t\t// Takes in the format as the second parameter: {~DateYMD:AppData.Some.Date^YYYY-MM-DD~}\n\t\t\tthis.MetaTemplate.addPattern('{~DateFormat:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpDateValueSet = tmpHash.split('^');\n\n\t\t\t\t\tif (tmpDateValueSet.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PICT Template [fDateFormat]::[${tmpHash}] did not have a valid format string and date.`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDateValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpDateValueSet[0]);\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: Modularize this\n\t\t\t\t\tlet tmpDayJS = this.fable.Dates.dayJS.utc(tmpDateValue);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Try to cast the day to be a specific timezone if one is set for the app\n\t\t\t\t\t\tif (this.options.Timezone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.options.Timezone);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`Error casting Document date ${tmpSQLDateTime} to the Document timezone using tz in this.AppData.DocumentData.Timezone: [${this.AppData.DocumentData.Timezone}] .. casting to the browser guess which is [${this.fable.Dates.dayJS.tz.guess()}].`);\n\t\t\t\t\t\t// Day.js will try to guess the user's timezone for us\n\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpDayJS.format(tmpDateValueSet[1]);\n\t\t\t\t});\n\t\t\t// {NE~Some.Address|If the left value is truthy, render this value.~}\n\t\t\tlet fNotEmptyRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Should switch this to indexOf so pipes can be in the content.\n\t\t\t\t\tlet tmpHashParts = tmpHash.split('|');\n\n\t\t\t\t\t// For now just check truthiness\n\t\t\t\t\tif (this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHashParts[0]))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpHashParts[1];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~NotEmpty:', '~}', fNotEmptyRender);\n\t\t\tthis.MetaTemplate.addPattern('{~NE:', '~}', fNotEmptyRender);\n\n\t\t\tlet fRandomNumberString = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumberString]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpStringLength = 4;\n\t\t\t\t\tlet tmpMaxNumber = 9999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpStringLength = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomNumericString(tmpStringLength, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumberString:', '~}',fRandomNumberString);\n\t\t\tthis.MetaTemplate.addPattern('{~RNS:', '~}',fRandomNumberString);\n\n\t\t\tlet fRandomNumber = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumber]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpMinimumNumber = 0;\n\t\t\t\t\tlet tmpMaxNumber = 9999999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMinimumNumber = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomIntegerBetween(tmpMinimumNumber, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumber:', '~}',fRandomNumber);\n\t\t\tthis.MetaTemplate.addPattern('{~RN:', '~}',fRandomNumber);\n\n\t\t\tlet fPascalCaseIdentifier = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn this.DataFormat.cleanNonAlphaCharacters(this.DataFormat.capitalizeEachWord(tmpValue));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~PascalCaseIdentifier:', '~}',fPascalCaseIdentifier);\n\n\t\t\tlet fLogValue = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tlet tmpValueType = typeof(tmpValue);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValueType == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is ${tmpValueType}.`);\n\t\t\t\t\t}\n\t\t\t\t\telse if (tmpValueType == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is an obect.`, tmpValue);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is a ${tmpValueType} = [${tmpValue}]`);\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogValue:', '~}',fLogValue);\n\t\t\tthis.MetaTemplate.addPattern('{~LV:', '~}',fLogValue);\n\n\n\t\t\tlet fLogStatement = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tthis.log.trace(`PICT Template Log Message: ${tmpHash}`);\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogStatement:', '~}',fLogStatement);\n\t\t\tthis.MetaTemplate.addPattern('{~LS:', '~}',fLogStatement);\n\n\t\t\tlet fBreakpoint = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpError = new Error(`PICT Template Breakpoint: ${tmpHash}`);\n\t\t\t\t\tthis.log.trace(`PICT Template Breakpoint: ${tmpHash}`, tmpError.stack);\n\t\t\t\t\tdebugger;\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~Breakpoint', '~}',fBreakpoint);\n\n\t\t\tthis._DefaultPictTemplatesInitialized = true;\n\t\t}\n\t}\n\n\tparseTemplate (pTemplateString, pData, fCallback)\n\t{\n\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\treturn this.MetaTemplate.parseString(pTemplateString, tmpData, fCallback);\n\t}\n\n\tparseTemplateByHash (pTemplateHash, pData, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\ttmpTemplateString = '';\n\t\t}\n\t\treturn this.parseTemplate(tmpTemplateString, pData, fCallback);\n\t}\n\n\tparseTemplateSet (pTemplateString, pDataSet, fCallback)\n\t{\n\t\t// TODO: This will need streaming -- for now janky old string append does the trick\n\t\tlet tmpValue = '';\n\t\tif (typeof(fCallback) == 'function')\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tthis.Utility.eachLimit(pDataSet, 1,\n\t\t\t\t\t(pRecord, fRecordTemplateCallback)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplate(pTemplateString, pRecord,\n\t\t\t\t\t\t\t(pError, pTemplateResult)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValue += pTemplateResult;\n\t\t\t\t\t\t\t\treturn fRecordTemplateCallback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t(pError)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fCallback(pError, tmpValue);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn fCallback(Error('Pict: Template Set: pDataSet is not an array or object.'), '');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tif (Array.isArray(pDataSet))\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < pDataSet.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpKeys = Object.keys(pDataSet);\n\t\t\t\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[tmpKeys[i]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpValue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\tparseTemplateSetByHash (pTemplateHash, pDataSet, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\ttmpTemplateString = '';\n\t\t}\n\t\treturn this.parseTemplateSet(tmpTemplateString, pDataSet, fCallback);\n\t}\n};\n\nmodule.exports = Pict;\n\nmodule.exports.PictApplicationClass = require('pict-application');\nmodule.exports.PictViewClass = require('pict-view');\n\nmodule.exports.EnvironmentLog = require('./environments/Pict-Environment-Log.js');\nmodule.exports.EnvironmentObject = require('./environments/Pict-Environment-Object.js');\n\n// This is to help understand the type of enivironement we're executing in\nmodule.exports.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n},{\"./Pict-CSS.js\":138,\"./Pict-Content-Assignment.js\":139,\"./Pict-DataProvider.js\":140,\"./Pict-Meadow-EntityProvider.js\":141,\"./Pict-Template-Provider.js\":142,\"./environments/Pict-Environment-Log.js\":144,\"./environments/Pict-Environment-Object.js\":145,\"fable\":50,\"pict-application\":93,\"pict-view\":94}],144:[function(require,module,exports){\n/**\n* Pict browser shim loader\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\n\nclass PictEnvironmentLog\n{\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\n\t\tthis.pict.ContentAssignment.customReadAttributeFunction = this.customReadAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetAttributeFunction = this.customSetAttributeFunction.bind(this);\n\t}\n\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\tcustomGetElementFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\tcustomReadFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\tcustomAppendFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\tcustomPrependFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomAssignFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Assign.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomReadAttributeFunction (pAddress, pAttribute)\n\t{\n\t\tthis.pict.log.info(`Mocking an READ ATTRIBUTE from Address -> [${pAddress}]`, {Attribute: pAttribute});\n\t\treturn '';\n\t}\n\n\tcustomSetAttributeFunction (pAddress, pAttribute, pContent)\n\t{\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an SET ATTRIBUTE to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Attribute: pAttribute, Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an SET ATTRIBUTE to Address -> [${pAddress}]`, {Attribute: pAttribute, Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n}\n\nmodule.exports = PictEnvironmentLog;\n},{}],145:[function(require,module,exports){\n/**\n* Pict browser shim loader with Object statefulness for the environement\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\n\nclass PictEnvironmentObject\n{\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.contentMap._ATTRIBUTE_MAP = {};\n\t\tthis.contentMap._CLASS_MAP = {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\t\tthis.eventLog.ReadAttribute = [];\n\t\tthis.eventLog.SetAttribute = [];\n\t\tthis.eventLog.RemoveAttribute = [];\n\t\tthis.eventLog.ReadClass = [];\n\t\tthis.eventLog.SetClass = [];\n\t\tthis.eventLog.RemoveClass = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadAttributeFunction = this.customReadAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetAttributeFunction = this.customSetAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customRemoveAttributeFunction = this.customRemoveAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadClassFunction = this.customReadClassFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetClassFunction = this.customSetClassFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customRemoveClassFunction = this.customRemoveClassFunction.bind(this);\n\t}\n\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\tcustomGetElementFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\t}\n\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\tcustomReadFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\t}\n\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\tcustomAppendFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = (typeof(this.contentMap[pAddress]) == 'undefined') ? pContent : this.contentMap[pAddress] + pContent;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\tcustomPrependFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = (typeof(this.contentMap[pAddress]) == 'undefined') ? pContent : pContent + this.contentMap[pAddress];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomAssignFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = pContent;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tinitializeAttributeMapLocation(pAddress, pAttribute)\n\t{\n\t\tif (!this.contentMap._ATTRIBUTE_MAP.hasOwnProperty(pAddress))\n\t\t{\n\t\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress] = {};\n\t\t}\n\t\tif (!this.contentMap._ATTRIBUTE_MAP[pAddress].hasOwnProperty(pAttribute))\n\t\t{\n\t\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute] = false;\n\t\t}\n\t}\n\n\tinitializeClassMapLocation(pAddress)\n\t{\n\t\tif (!this.contentMap._CLASS_MAP.hasOwnProperty(pAddress))\n\t\t{\n\t\t\tthis.contentMap._CLASS_MAP[pAddress] = [];\n\t\t}\n\t}\n\n\tcustomReadAttributeFunction (pAddress, pAttribute)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tlet tmpContent = this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (tmpContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE READ for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: tmpContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE READ for Address -> [${pAddress}]::[${pAttribute}]`, {Content: tmpContent});\n\t\t}\n\t\treturn tmpContent;\n\t}\n\n\tcustomSetAttributeFunction (pAddress, pAttribute, pValue)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute] = pValue;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (pValue.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE SET for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pValue.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE SET for Address -> [${pAddress}]::[${pAttribute}]`, {Content: pValue});\n\t\t}\n\t\treturn pValue;\n\t}\n\n\tcustomRemoveAttributeFunction (pAddress, pAttribute)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tlet tmpContent = this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (tmpContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE REMOVE for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: tmpContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE REMOVE for Address -> [${pAddress}]::[${pAttribute}]`, {Content: tmpContent});\n\t\t}\n\n\t\tdelete this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\treturn true;\n\t}\n\n\tcustomReadClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tconst tmpContent = this.contentMap._CLASS_MAP[pAddress].indexOf(pClass) > -1;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS READ for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent});\n\n\t\treturn tmpContent;\n\t}\n\n\tcustomSetClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tlet tmpContent = this.contentMap._CLASS_MAP[pAddress];\n\n\t\tif (!this.contentMap._CLASS_MAP[pAddress].indexOf(pClass) > -1)\n\t\t{\n\t\t\tthis.contentMap._CLASS_MAP[pAddress].push(pClass);\n\t\t}\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS SET for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent.join(' ')});\n\n\t\treturn tmpContent;\n\t}\n\n\tcustomRemoveClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tlet tmpContent = this.contentMap._CLASS_MAP[pAddress];\n\n\t\tthis.contentMap._CLASS_MAP[pAddress].splice(pClass);\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS REMOVE for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent.join(' ')});\n\n\t\treturn tmpContent;\n\t}\n}\n\nmodule.exports = PictEnvironmentObject;\n},{}]},{},[143])(143)\n});\n\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\nvar eachOfLimit = require('async.util.eachoflimit');\nvar withoutIndex = require('async.util.withoutindex');\n\nmodule.exports = function eachLimit(arr, limit, iterator, cb) {\n    return eachOfLimit(limit)(arr, withoutIndex(iterator), cb);\n};\n","'use strict';\n\nmodule.exports = function(tasks) {\n    function makeCallback(index) {\n        function fn() {\n            if (tasks.length) {\n                tasks[index].apply(null, arguments);\n            }\n            return fn.next();\n        }\n        fn.next = function() {\n            return (index < tasks.length - 1) ? makeCallback(index + 1) : null;\n        };\n        return fn;\n    }\n    return makeCallback(0);\n};\n","var once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar onlyOnce = require('async.util.onlyonce');\nvar keyIterator = require('async.util.keyiterator');\n\nmodule.exports = function eachOfLimit(limit) {\n    return function(obj, iterator, cb) {\n        cb = once(cb || noop);\n        obj = obj || [];\n        var nextKey = keyIterator(obj);\n        if (limit <= 0) {\n            return cb(null);\n        }\n        var done = false;\n        var running = 0;\n        var errored = false;\n\n        (function replenish() {\n            if (done && running <= 0) {\n                return cb(null);\n            }\n\n            while (running < limit && !errored) {\n                var key = nextKey();\n                if (key === null) {\n                    done = true;\n                    if (running <= 0) {\n                        cb(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iterator(obj[key], key, onlyOnce(function(err) {\n                    running -= 1;\n                    if (err) {\n                        cb(err);\n                        errored = true;\n                    } else {\n                        replenish();\n                    }\n                }));\n            }\n        })();\n    };\n};\n","'use strict';\nvar setImmediate = require('async.util.setimmediate');\nvar restParam = require('async.util.restparam');\n\nmodule.exports = function(fn) {\n    return restParam(function(args) {\n        var callback = args.pop();\n        args.push(function() {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate(function() {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        var sync = true;\n        fn.apply(this, args);\n        sync = false;\n    });\n};\n","'use strict';\n\nmodule.exports = Array.isArray || function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n","'use strict';\n\nvar isArray = require('async.util.isarray');\n\nmodule.exports = function isArrayLike(arr) {\n    return isArray(arr) || (\n        // has a positive integer length property\n        typeof arr.length === 'number' &&\n        arr.length >= 0 &&\n        arr.length % 1 === 0\n    );\n};\n","'use strict';\n\nvar _keys = require('async.util.keys');\nvar isArrayLike = require('async.util.isarraylike');\n\nmodule.exports = function keyIterator(coll) {\n    var i = -1;\n    var len;\n    var keys;\n    if (isArrayLike(coll)) {\n        len = coll.length;\n        return function next() {\n            i++;\n            return i < len ? i : null;\n        };\n    } else {\n        keys = _keys(coll);\n        len = keys.length;\n        return function next() {\n            i++;\n            return i < len ? keys[i] : null;\n        };\n    }\n};\n","'use strict';\n\nmodule.exports = Object.keys || function keys(obj) {\n    var _keys = [];\n    for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            _keys.push(k);\n        }\n    }\n    return _keys;\n};\n","'use strict';\n\nmodule.exports = function noop () {};\n","'use strict';\n\nmodule.exports = function once(fn) {\n    return function() {\n        if (fn === null) return;\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n","'use strict';\n\nmodule.exports = function only_once(fn) {\n    return function() {\n        if (fn === null) throw new Error('Callback was already called.');\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n","'use strict';\nmodule.exports = function restParam(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n        var length = Math.max(arguments.length - startIndex, 0);\n        var rest = new Array(length);\n        for (var index = 0; index < length; index++) {\n            rest[index] = arguments[index + startIndex];\n        }\n        switch (startIndex) {\n            case 0:\n                return func.call(this, rest);\n            case 1:\n                return func.call(this, arguments[0], rest);\n        }\n    };\n};\n","'use strict';\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\nvar fallback = function(fn) {\n    setTimeout(fn, 0);\n};\n\nmodule.exports = function setImmediate(fn) {\n    // not a direct alias for IE10 compatibility\n    return (_setImmediate || fallback)(fn);\n};\n","'use strict';\n\nmodule.exports = function withoutIndex(iterator) {\n    return function(value, index, callback) {\n        return iterator(value, callback);\n    };\n};\n","'use strict';\n\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar isArray = require('async.util.isarray');\nvar restParam = require('async.util.restparam');\nvar ensureAsync = require('async.util.ensureasync');\nvar iterator = require('async.iterator');\n\nmodule.exports = function(tasks, cb) {\n    cb = once(cb || noop);\n    if (!isArray(tasks)) return cb(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return cb();\n\n    function wrapIterator(iterator) {\n        return restParam(function(err, args) {\n            if (err) {\n                cb.apply(null, [err].concat(args));\n            } else {\n                var next = iterator.next();\n                if (next) {\n                    args.push(wrapIterator(next));\n                } else {\n                    args.push(cb);\n                }\n                ensureAsync(iterator).apply(null, args);\n            }\n        });\n    }\n    wrapIterator(iterator(tasks))();\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*\r\n *  big.js v6.2.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2022 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,            // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n    /*\r\n     * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n     * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n     * primitive number without a loss of precision.\r\n     */\r\n    STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        if (typeof n !== 'string') {\r\n          if (Big.strict === true && typeof n !== 'bigint') {\r\n            throw TypeError(INVALID + 'value');\r\n          }\r\n\r\n          // Minus zero?\r\n          n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n        }\r\n\r\n        parse(x, n);\r\n      }\r\n\r\n      // Retain a reference to this Big constructor.\r\n      // Shadow Big.prototype.constructor which points to Object.\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.strict = STRICT;\r\n    Big.roundDown = 0;\r\n    Big.roundHalfUp = 1;\r\n    Big.roundHalfEven = 2;\r\n    Big.roundUp = 3;\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    if (!NUMERIC.test(n)) {\r\n      throw Error(INVALID + 'number');\r\n    }\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n   * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, sd, rm, more) {\r\n    var xc = x.c;\r\n\r\n    if (rm === UNDEFINED) rm = x.constructor.RM;\r\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    if (sd < 1) {\r\n      more =\r\n        rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n        rm === 1 && xc[0] >= 5 ||\r\n        rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n      );\r\n\r\n      xc.length = 1;\r\n\r\n      if (more) {\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        x.e = x.e - sd + 1;\r\n        xc[0] = 1;\r\n      } else {\r\n\r\n        // Zero.\r\n        xc[0] = x.e = 0;\r\n      }\r\n    } else if (sd < xc.length) {\r\n\r\n      // xc[sd] is the digit after the digit that may be rounded up.\r\n      more =\r\n        rm === 1 && xc[sd] >= 5 ||\r\n        rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n          (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n        rm === 3 && (more || !!xc[0]);\r\n\r\n      // Remove any digits after the required precision.\r\n      xc.length = sd;\r\n\r\n      // Round up?\r\n      if (more) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up.\r\n        for (; ++xc[--sd] > 9;) {\r\n          xc[sd] = 0;\r\n          if (sd === 0) {\r\n            ++x.e;\r\n            xc.unshift(1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (sd = xc.length; !xc[--sd];) xc.pop();\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   */\r\n  function stringify(x, doExponential, isNonzero) {\r\n    var e = x.e,\r\n      s = x.c.join(''),\r\n      n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (doExponential) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) {\r\n        for (e -= n; e--;) s += '0';\r\n      } else if (e < n) {\r\n        s = s.slice(0, e) + '.' + s.slice(e);\r\n      }\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && isNonzero ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n   */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) {\r\n      y.s = k;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n    q.s = k;\r\n    k = p < 0 ? 0 : p;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n      p--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (yc[0]) {\r\n        y.s = -b;\r\n      } else if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = 1;\r\n      }\r\n      return y;\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n  \r\n  \r\n  /*\r\n   * Return a new Big whose value is the value of this Big negated.\r\n   */\r\n  P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var e, k, t,\r\n      x = this,\r\n      Big = x.constructor;\r\n\r\n    y = new Big(y);\r\n\r\n    // Signs differ?\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (!yc[0]) {\r\n        if (xc[0]) {\r\n          y = new Big(x);\r\n        } else {\r\n          y.s = x.s;\r\n        }\r\n      }\r\n      return y;\r\n    }\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (e = xe - ye) {\r\n      if (e > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        e = -e;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; e--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    e = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (k) {\r\n      xc.unshift(k);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor('1'),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n      throw Error(INVALID + 'exponent');\r\n    }\r\n\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n   * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.prec = function (sd, rm) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    return round(new this.constructor(this), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n   * using rounding mode rm, or Big.RM if rm is not specified.\r\n   * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.round = function (dp, rm) {\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    return round(new this.constructor(this), dp + this.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big('0.5');\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) {\r\n      throw Error(NAME + 'No square root');\r\n    }\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s + '');\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) {\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = b;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), ++dp, rm);\r\n      for (; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, true, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n      // x.e may have changed if the value is rounded up.\r\n      for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, false, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toJSON = P.toString = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Big as a primitve number.\r\n   */\r\n  P.toNumber = function () {\r\n    var n = Number(stringify(this, true, true));\r\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n      throw Error(NAME + 'Imprecise conversion');\r\n    }\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * rounding mode rm, or Big.RM if rm is not specified.\r\n   * Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      n = x.c[0];\r\n\r\n    if (sd !== UNDEFINED) {\r\n      if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n        throw Error(INVALID + 'precision');\r\n      }\r\n      x = round(new Big(x), sd, rm);\r\n      for (; x.c.length < sd;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    if (Big.strict === true) {\r\n      throw Error(NAME + 'valueOf disallowed');\r\n    }\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","/**\n* Cache data structure with:\n*  - enumerable items\n*  - unique hash item access (if none is passed in, one is generated)\n*  - size (length) expiration\n*  - controllable expiration (e.g. keep in cache longer if older/less likely to change)\n*  - time-based expiration\n*  - custom expiration based on passed-in function\n*\n* Also:\n*  - built to work well with browserify\n*  - no dependencies at all\n*  - pet friendly\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nconst libLinkedList = require(`./LinkedList.js`);\n\nclass CashMoney extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'ObjectCache';\n\n\t\t// The map of node objects by hash because Reasons.\n\t\tthis._HashMap = {};\n\n\t\tthis._RecordMap = {};\n\n\t\tthis._List = new libLinkedList();\n\n\t\t// If the list gets over maxLength, we will automatically remove nodes on insertion.\n\t\tthis.maxLength = 0;\n\n\t\t// If cache entries get over this age, they are removed with prune\n\t\tthis.maxAge = 0;\n\t}\n\n\tget RecordMap()\n\t{\n\t\treturn this._RecordMap;\n\t}\n\n\t// Add (or update) a node in the cache\n\tput(pData, pHash)\n\t{\n\t\t// If the hash of the record exists\n\t\tif (this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\t// Just update the hashed records datum\n\t\t\tthis._HashMap[pHash].Datum = pData;\n\t\t\tthis._RecordMap[pHash] = pData;\n\t\t\treturn this._HashMap[pHash].Datum;\n\t\t}\n\n\t\tlet tmpNode = this._List.push(pData, pHash);\n\t\tthis._HashMap[tmpNode.Hash] = tmpNode;\n\t\tthis._RecordMap[pHash] = pData;\n\n\t\t// Automatically prune if over length, but only prune this nodes worth.\n\t\tif (this.maxLength > 0   &&   this._List.length > this.maxLength)\n\t\t{\n\t\t\t// Pop it off the head of the list\n\t\t\ttmpNode = this._List.pop();\n\t\t\t// Also remove it from the hashmap\n\t\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\t\tdelete this._HashMap[tmpNode.Hash];\n\t\t}\n\n\t\t// Now some expiration properties on the node metadata... namely the birthdate in ms of the node\n\t\ttmpNode.Metadata.Created = +new Date();\n\n\t\treturn tmpNode.Datum;\n\t}\n\n\t// Read a datum by hash from the cache\n\tread(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._HashMap[pHash].Datum;\n\t}\n\n\t// Reinvigorate a node based on hash, updating the timestamp and moving it to the head of the list (also removes custom metadata)\n\ttouch(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get the old node out of the list\n\t\tlet tmpNode = this._List.remove(this._HashMap[pHash]);\n\t\t// Remove it from the hash map\n\t\tdelete this._RecordMap[pHash];\n\t\tdelete this._HashMap[pHash];\n\n\t\t// Now put it back, fresh.\n\t\treturn this.put(tmpNode.Datum, tmpNode.Hash);\n\t}\n\n\t// Expire a cached record based on hash\n\texpire(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpNode = this._HashMap[pHash];\n\n\t\t// Remove it from the list of cached records\n\t\ttmpNode = this._List.remove(tmpNode);\n\t\t// Also remove it from the hashmap\n\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\tdelete this._HashMap[tmpNode.Hash];\n\n\t\t// Return it in case the consumer wants to do anything with it\n\t\treturn tmpNode;\n\t}\n\n\t// Prune records from the cached set based on maxAge\n\tpruneBasedOnExpiration(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tif (this.maxAge < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now enumerate each record and remove any that are expired\n\t\tlet tmpNow = +new Date();\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\t// Expire the node if it is older than max age milliseconds\n\t\t\tif (tmpNow - this._HashMap[tmpKeys[i]].Metadata.Created >= this.maxAge)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on maxLength\n\tpruneBasedOnLength(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\t// Pop records off until we have reached maxLength unless it's 0\n\t\tif (this.maxLength > 0)\n\t\t{\n\t\t\twhile (this._List.length > this.maxLength)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this._List.pop());\n\t\t\t}\n\t\t}\n\n\t\treturn fComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on passed in pPruneFunction(pDatum, pHash, pNode) -- returning true expires it\n\tpruneCustom(fComplete, fPruneFunction, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\tlet tmpNode = this._HashMap[tmpKeys[i]];\n\t\t\t// Expire the node if the passed in function returns true\n\t\t\tif (fPruneFunction(tmpNode.Datum, tmpNode.Hash, tmpNode))\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune the list down to the asserted rules (max age then max length if still too long)\n\tprune(fComplete)\n\t{\n\t\tlet tmpRemovedRecords = [];\n\n\t\t// If there are no cached records, we are done.\n\t\tif (this._List.length < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now prune based on expiration time\n\t\tthis.pruneBasedOnExpiration((fExpirationPruneComplete)=>\n\t\t\t{\n\t\t\t\t// Now prune based on length, then return the removed records in the callback.\n\t\t\t\tthis.pruneBasedOnLength(fComplete, tmpRemovedRecords);\n\t\t\t}, tmpRemovedRecords);\n\t}\n\n\t// Get a low level node (including metadata statistics) by hash from the cache\n\tgetNode(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\n\t\treturn this._HashMap[pHash];\n\t}\n}\n\nmodule.exports = CashMoney;","/**\n* Double Linked List Node\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Linked List Node Prototype\n*\n* @class LinkedListNode\n* @constructor\n*/\n\nclass LinkedListNode\n{\n\tconstructor()\n\t{\n\t\tthis.Hash = false;\n\t\tthis.Datum = false;\n\n\t\t// This is where expiration and other elements are stored;\n\t\tthis.Metadata = {};\n\n\t\tthis.LeftNode = false;\n\t\tthis.RightNode = false;\n\n\t\t// To allow safe specialty operations on nodes\n\t\tthis.__ISNODE = true;\n\t}\n}\n\nmodule.exports = LinkedListNode;","\"use strict\"\n/**\n* Simple double linked list to hold the cache entries in, in order.\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module FeeFiFo\n*/\n\nconst libLinkedListNode = require('./LinkedList-Node.js');\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nclass LinkedList\n{\n\tconstructor()\n\t{\n\t\t// Total number of nodes ever processed by this ADT\n\t\tthis.totalNodes = 0;\n\n\t\t// The length of the set of nodes currently in the list\n\t\tthis.length = 0;\n\n\t\tthis.head = false;\n\t\tthis.tail = false;\n\t}\n\n\t// Create a node object.\n\tinitializeNode(pDatum, pHash)\n\t{\n\t\t// Don't allow undefined to be added to the list because of reasons\n\t\tif (typeof(pDatum) === 'undefined')\n\t\t\treturn false;\n\n\t\tthis.totalNodes++;\n\n\t\t// Get (or create) a unique hash\n\t\tlet tmpHash = (typeof(pHash) != 'undefined') ? pHash : `NODE[${this.totalNodes}]`;\n\n\t\tlet tmpNode = new libLinkedListNode();\n\n\t\ttmpNode.Hash = tmpHash;\n\t\ttmpNode.Datum = pDatum;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Add a node to the end (right of tail) of the list.\n\tappend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.tail.RightNode = tmpNode;\n\t\ttmpNode.LeftNode = this.tail;\n\t\tthis.tail = tmpNode;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Append to tail of list (FIFO)\n\tpush(pDatum, pHash)\n\t{\n\t\treturn this.append(pDatum, pHash);\n\t}\n\n\t// Add a node to the beginning (left of head) of the list.\n\tprepend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.head.LeftNode = tmpNode;\n\t\ttmpNode.RightNode = this.head;\n\t\tthis.head = tmpNode;\n\t\treturn tmpNode;\n\t}\n\n\t// Remove a node from the list\n\tremove(pNode)\n\t{\n\t\tif (typeof(pNode) === 'undefined')\n\t\t\treturn false;\n\n\t\tif (!pNode.__ISNODE)\n\t\t\treturn false;\n\n\t\tthis.length--;\n\n\t\t// Last element in list.  Empty it out.\n\t\tif (this.length < 1)\n\t\t{\n\t\t\tthis.head = false;\n\t\t\tthis.tail = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's somewhere in the middle, surgically remove it.\n\t\tif (pNode.LeftNode && pNode.RightNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = pNode.RightNode;\n\t\t\tpNode.RightNode.LeftNode = pNode.LeftNode;\n\n\t\t\tpNode.RightNode = false;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's the tail\n\t\tif (pNode.LeftNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = false;\n\t\t\tthis.tail = pNode.LeftNode;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It must be the head\n\t\tpNode.RightNode.LeftNode = false;\n\t\tthis.head = pNode.RightNode;\n\t\tpNode.RightNode = false;\n\t\treturn pNode;\n\t}\n\n\t// Remove the head of the list (FIFO)\n\tpop()\n\t{\n\t\treturn this.remove(this.head);\n\t}\n\n\t// Enumerate over each node IN ORDER, running the function fAction(pDatum, pHash, fCallback) then calling the function fComplete callback when done\n\teach(fAction, fComplete)\n\t{\n\t\tif (this.length < 1)\n\t\t\treturn fComplete();\n\n\t\tlet tmpNode = false;\n\n\t\tlet fIterator = (pError)=>\n\t\t{\n\t\t\t// If the user passed in a callback with an error, call their callback with the error\n\t\t\tif (pError)\n\t\t\t\treturn fComplete(pError);\n\n\t\t\t// If there is no node, this must be the initial run.\n\t\t\tif (!tmpNode)\n\t\t\t\ttmpNode = this.head;\n\t\t\t// Check if we are at the tail of the list\n\t\t\telse if (!tmpNode.RightNode)\n\t\t\t\treturn fComplete();\n\t\t\t// Proceed to the next node\n\t\t\telse\n\t\t\t\ttmpNode = tmpNode.RightNode;\n\n\t\t\t// Call the actual action\n\t\t\t// I hate this pattern because long tails eventually cause stack overflows.\n\t\t\tfAction(tmpNode.Datum, tmpNode.Hash, fIterator);\n\t\t};\n\n\t\t// Now kick off the iterator\n\t\treturn fIterator();\n\t}\n\n\t// Seek a specific node, 0 is the index of the first node.\n\tseek(pNodeIndex)\n\t{\n\t\tif (!pNodeIndex)\n\t\t\treturn false;\n\t\tif (this.length < 1)\n\t\t\treturn false;\n\t\tif (pNodeIndex >= this.length)\n\t\t\treturn false;\n\n\t\tlet tmpNode = this.head;\n\t\tfor (let i = 0; i < pNodeIndex; i++)\n\t\t{\n\t\t\ttmpNode = tmpNode.RightNode;\n\t\t}\n\n\t\treturn tmpNode;\n\t}\n}\n\nmodule.exports = LinkedList;","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\nvar setFunctionLength = require('set-function-length');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tif (typeof originalFunction !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\tvar func = $reflectApply(bind, $call, arguments);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + $max(0, originalFunction.length - (arguments.length - 1)),\n\t\ttrue\n\t);\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.partitioned) {\n    str += '; Partitioned'\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} val\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_advancedFormat=t()}(this,(function(){\"use strict\";return function(e,t){var r=t.prototype,n=r.format;r.format=function(e){var t=this,r=this.$locale();if(!this.isValid())return n.bind(this)(e);var s=this.$utils(),a=(e||\"YYYY-MM-DDTHH:mm:ssZ\").replace(/\\[([^\\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g,(function(e){switch(e){case\"Q\":return Math.ceil((t.$M+1)/3);case\"Do\":return r.ordinal(t.$D);case\"gggg\":return t.weekYear();case\"GGGG\":return t.isoWeekYear();case\"wo\":return r.ordinal(t.week(),\"W\");case\"w\":case\"ww\":return s.s(t.week(),\"w\"===e?1:2,\"0\");case\"W\":case\"WW\":return s.s(t.isoWeek(),\"W\"===e?1:2,\"0\");case\"k\":case\"kk\":return s.s(String(0===t.$H?24:t.$H),\"k\"===e?1:2,\"0\");case\"X\":return Math.floor(t.$d.getTime()/1e3);case\"x\":return t.$d.getTime();case\"z\":return\"[\"+t.offsetName()+\"]\";case\"zzz\":return\"[\"+t.offsetName(\"long\")+\"]\";default:return e}}));return n.bind(this)(a)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isoWeek=t()}(this,(function(){\"use strict\";var e=\"day\";return function(t,i,s){var a=function(t){return t.add(4-t.isoWeekday(),e)},d=i.prototype;d.isoWeekYear=function(){return a(this).year()},d.isoWeek=function(t){if(!this.$utils().u(t))return this.add(7*(t-this.isoWeek()),e);var i,d,n,o,r=a(this),u=(i=this.isoWeekYear(),d=this.$u,n=(d?s.utc:s)().year(i).startOf(\"year\"),o=4-n.isoWeekday(),n.isoWeekday()>4&&(o+=7),n.add(o,e));return r.diff(u,\"week\")+1},d.isoWeekday=function(e){return this.$utils().u(e)?this.day()||7:this.day(this.day()%7?e:e-7)};var n=d.startOf;d.startOf=function(e,t){var i=this.$utils(),s=!!i.u(t)||t;return\"isoweek\"===i.p(e)?s?this.date(this.date()-(this.isoWeekday()-1)).startOf(\"day\"):this.date(this.date()-1-(this.isoWeekday()-1)+7).endOf(\"day\"):n.bind(this)(e,t)}}}));","!function(r,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(r=\"undefined\"!=typeof globalThis?globalThis:r||self).dayjs_plugin_relativeTime=e()}(this,(function(){\"use strict\";return function(r,e,t){r=r||{};var n=e.prototype,o={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"};function i(r,e,t,o){return n.fromToBase(r,e,t,o)}t.en.relativeTime=o,n.fromToBase=function(e,n,i,d,u){for(var f,a,s,l=i.$locale().relativeTime||o,h=r.thresholds||[{l:\"s\",r:44,d:\"second\"},{l:\"m\",r:89},{l:\"mm\",r:44,d:\"minute\"},{l:\"h\",r:89},{l:\"hh\",r:21,d:\"hour\"},{l:\"d\",r:35},{l:\"dd\",r:25,d:\"day\"},{l:\"M\",r:45},{l:\"MM\",r:10,d:\"month\"},{l:\"y\",r:17},{l:\"yy\",d:\"year\"}],m=h.length,c=0;c<m;c+=1){var y=h[c];y.d&&(f=d?t(e).diff(i,y.d,!0):i.diff(e,y.d,!0));var p=(r.rounding||Math.round)(Math.abs(f));if(s=f>0,p<=y.r||!y.r){p<=1&&c>0&&(y=h[c-1]);var v=l[y.l];u&&(p=u(\"\"+p)),a=\"string\"==typeof v?v.replace(\"%d\",p):v(p,n,y.l,s);break}}if(n)return a;var M=s?l.future:l.past;return\"function\"==typeof M?M(a):M.replace(\"%s\",a)},n.to=function(r,e){return i(r,e,this,!0)},n.from=function(r,e){return i(r,e,this)};var d=function(r){return r.$u?t.utc():t()};n.toNow=function(r){return this.to(d(this),r)},n.fromNow=function(r){return this.from(d(this),r)}}}));","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_timezone=e()}(this,(function(){\"use strict\";var t={year:0,month:1,day:2,hour:3,minute:4,second:5},e={};return function(n,i,o){var r,a=function(t,n,i){void 0===i&&(i={});var o=new Date(t),r=function(t,n){void 0===n&&(n={});var i=n.timeZoneName||\"short\",o=t+\"|\"+i,r=e[o];return r||(r=new Intl.DateTimeFormat(\"en-US\",{hour12:!1,timeZone:t,year:\"numeric\",month:\"2-digit\",day:\"2-digit\",hour:\"2-digit\",minute:\"2-digit\",second:\"2-digit\",timeZoneName:i}),e[o]=r),r}(n,i);return r.formatToParts(o)},u=function(e,n){for(var i=a(e,n),r=[],u=0;u<i.length;u+=1){var f=i[u],s=f.type,m=f.value,c=t[s];c>=0&&(r[c]=parseInt(m,10))}var d=r[3],l=24===d?0:d,h=r[0]+\"-\"+r[1]+\"-\"+r[2]+\" \"+l+\":\"+r[4]+\":\"+r[5]+\":000\",v=+e;return(o.utc(h).valueOf()-(v-=v%1e3))/6e4},f=i.prototype;f.tz=function(t,e){void 0===t&&(t=r);var n=this.utcOffset(),i=this.toDate(),a=i.toLocaleString(\"en-US\",{timeZone:t}),u=Math.round((i-new Date(a))/1e3/60),f=o(a,{locale:this.$L}).$set(\"millisecond\",this.$ms).utcOffset(15*-Math.round(i.getTimezoneOffset()/15)-u,!0);if(e){var s=f.utcOffset();f=f.add(n-s,\"minute\")}return f.$x.$timezone=t,f},f.offsetName=function(t){var e=this.$x.$timezone||o.tz.guess(),n=a(this.valueOf(),e,{timeZoneName:t}).find((function(t){return\"timezonename\"===t.type.toLowerCase()}));return n&&n.value};var s=f.startOf;f.startOf=function(t,e){if(!this.$x||!this.$x.$timezone)return s.call(this,t,e);var n=o(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\"),{locale:this.$L});return s.call(n,t,e).tz(this.$x.$timezone,!0)},o.tz=function(t,e,n){var i=n&&e,a=n||e||r,f=u(+o(),a);if(\"string\"!=typeof t)return o(t).tz(a);var s=function(t,e,n){var i=t-60*e*1e3,o=u(i,n);if(e===o)return[i,e];var r=u(i-=60*(o-e)*1e3,n);return o===r?[i,o]:[t-60*Math.min(o,r)*1e3,Math.max(o,r)]}(o.utc(t,i).valueOf(),f,a),m=s[0],c=s[1],d=o(m).utcOffset(c);return d.$x.$timezone=a,d},o.tz.guess=function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},o.tz.setDefault=function(t){r=t}}}));","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_utc=i()}(this,(function(){\"use strict\";var t=\"minute\",i=/[+-]\\d\\d(?::?\\d\\d)?/g,e=/([+-]|\\d\\d)/g;return function(s,f,n){var u=f.prototype;n.utc=function(t){var i={date:t,utc:!0,args:arguments};return new f(i)},u.utc=function(i){var e=n(this.toDate(),{locale:this.$L,utc:!0});return i?e.add(this.utcOffset(),t):e},u.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var o=u.parse;u.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),o.call(this,t)};var r=u.init;u.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else r.call(this)};var a=u.utcOffset;u.utcOffset=function(s,f){var n=this.$utils().u;if(n(s))return this.$u?0:n(this.$offset)?a.call(this):this.$offset;if(\"string\"==typeof s&&(s=function(t){void 0===t&&(t=\"\");var s=t.match(i);if(!s)return null;var f=(\"\"+s[0]).match(e)||[\"-\",0,0],n=f[0],u=60*+f[1]+ +f[2];return 0===u?0:\"+\"===n?u:-u}(s),null===s))return this;var u=Math.abs(s)<=16?60*s:s,o=this;if(f)return o.$offset=u,o.$u=0===s,o;if(0!==s){var r=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(o=this.local().add(u+r,t)).$offset=u,o.$x.$localOffset=r}else o=this.utc();return o};var h=u.format;u.format=function(t){var i=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return h.call(this,i)},u.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*t},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var l=u.toDate;u.toDate=function(t){return\"s\"===t&&this.$offset?n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate():l.call(this)};var c=u.diff;u.diff=function(t,i,e){if(t&&this.$u===t.$u)return c.call(this,t,i,e);var s=this.local(),f=n(t).local();return c.call(s,f,i,e)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekOfYear=t()}(this,(function(){\"use strict\";var e=\"week\",t=\"year\";return function(i,n,r){var f=n.prototype;f.week=function(i){if(void 0===i&&(i=null),null!==i)return this.add(7*(i-this.week()),\"day\");var n=this.$locale().yearStart||1;if(11===this.month()&&this.date()>25){var f=r(this).startOf(t).add(1,t).date(n),s=r(this).endOf(e);if(f.isBefore(s))return 1}var a=r(this).startOf(t).date(n).startOf(e).subtract(1,\"millisecond\"),o=this.diff(a,e,!0);return o<0?r(this).startOf(\"week\").week():Math.ceil(o)},f.weeks=function(e){return void 0===e&&(e=null),this.week(e)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekday=t()}(this,(function(){\"use strict\";return function(e,t){t.prototype.weekday=function(e){var t=this.$locale().weekStart||0,i=this.$W,n=(i<t?i+7:i)-t;return this.$utils().u(e)?n:this.subtract(n,\"day\").add(e,\"day\")}}}));","'use strict';\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = hasPropertyDescriptors && GetIntrinsic('%Object.defineProperty%', true);\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar gopd = require('gopd');\n\n/** @type {(obj: Record<PropertyKey, unknown>, property: PropertyKey, value: unknown, nonEnumerable?: boolean | null, nonWritable?: boolean | null, nonConfigurable?: boolean | null, loose?: boolean) => void} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/**\n* Base Logger Class\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass BaseLogger extends libFableServiceProviderBase\n{\n\tconstructor(pLogStreamSettings, pLogStreamHash)\n\t{\n\t\tsuper(pLogStreamSettings, pLogStreamHash);\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = (typeof(pLogStreamSettings) == 'object') ? pLogStreamSettings : {};\n\n\t\tthis.serviceType = 'Logging-Provider';\n\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\t// We added this as the mechanism for tracking loggers to allow multiple simultaneous streams\n\t\t// to the same provider.\n\t\tthis.loggerUUID = this.generateInsecureUUID();\n\n\t\t// Eventually we can use this array to ompute which levels the provider allows.\n\t\t// For now it's just used to precompute some string concatenations.\n\t\tthis.levels = (\n\t\t\t[\n\t\t\t\t\"trace\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"info\",\n\t\t\t\t\"warn\",\n\t\t\t\t\"error\",\n\t\t\t\t\"fatal\"\n\t\t\t]);\n\t}\n\n\t// This is meant to generate programmatically insecure UUIDs to identify loggers\n\tgenerateInsecureUUID()\n\t{\n\t\tlet tmpDate = new Date().getTime();\n\t\tlet tmpUUID = 'LOGSTREAM-xxxxxx-yxxxxx'.replace(/[xy]/g,\n\t\t\t\t(pCharacter) =>\n\t\t\t\t{\n\t\t\t\t\t// Funny algorithm from w3resource that is twister-ish without the deep math and security\n\t\t\t\t\t// ..but good enough for unique log stream identifiers\n\t\t\t\t\tlet tmpRandomData = (tmpDate + Math.random()*16)%16 | 0;\n\t\t\t\t\ttmpDate = Math.floor(tmpDate/16);\n\n\t\t\t\t\treturn (pCharacter =='x' ? tmpRandomData : (tmpRandomData&0x3|0x8)).toString(16);\n\t\t\t\t});\n\t\treturn tmpUUID;\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n","/**\n* Default Logger Provider Function\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\nvar getDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\ttmpDefaultProviders.default = tmpDefaultProviders.console;\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();","module.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]","let libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings);\n\n\t\tthis._ShowTimeStamps = this._Settings.hasOwnProperty('showtimestamps') ? (this._Settings.showtimestamps == true) : true;\n\t\tthis._FormattedTimeStamps = this._Settings.hasOwnProperty('formattedtimestamps') ? (this._Settings.formattedtimestamps == true) : true;\n\n\t\tthis._ContextMessage = this._Settings.hasOwnProperty('Context') ? `(${this._Settings.Context})` :\n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? `(${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'Unnamed_Log_Context';\n\n\t\t// Allow the user to decide what gets output to the console\n\t\tthis._OutputLogLinesToConsole = this._Settings.hasOwnProperty('outputloglinestoconsole') ? this._Settings.outputloglinestoconsole : true;\n\t\tthis._OutputObjectsToConsole = this._Settings.hasOwnProperty('outputobjectstoconsole') ? this._Settings.outputobjectstoconsole : true;\n\n\t\t// Precompute the prefix for each level\n\t\tthis.prefixCache = {};\n\t\tfor (let i = 0; i <= this.levels.length; i++)\n\t\t{\n\t\t\tthis.prefixCache[this.levels[i]] = `[${this.levels[i]}] ${this._ContextMessage}: `;\n\n\t\t\tif (this._ShowTimeStamps)\n\t\t\t{\n\t\t\t\t// If there is a timestamp we need a to prepend space before the prefixcache string, since the timestamp comes first\n\t\t\t\tthis.prefixCache[this.levels[i]] = ' '+this.prefixCache[this.levels[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpTimeStamp = '';\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = (new Date()).toISOString();\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = +new Date();\n\t\t}\n\n\t\tlet tmpLogLine = `${tmpTimeStamp}${this.prefixCache[pLevel]}${pLogText}`;\n\n\t\tif (this._OutputLogLinesToConsole)\n\t\t{\n\t\t\tconsole.log(tmpLogLine);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (this._OutputObjectsToConsole && (typeof(pObject) !== 'undefined'))\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 2));\n\t\t}\n\n\t\t// Provide an easy way to be overridden and be consistent\n\t\treturn tmpLogLine;\n\t}\n}\n\nmodule.exports = ConsoleLogger;","const libConsoleLog = require('./Fable-Log-Logger-Console.js');\nconst libFS = require('fs');\nconst libPath = require('path');\n\nclass SimpleFlatFileLogger extends libConsoleLog\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings, pFableLog);\n\n\t\t// If a path isn't provided for the logfile, it tries to use the ProductName or Context\n\t\tthis.logFileRawPath = (this._Settings.hasOwnProperty('path')) ? this._Settings.path : `./${this._ContextMessage}.log`;\n\t\tthis.logFilePath = libPath.normalize(this.logFileRawPath);\n\n\t\tthis.logFileStreamOptions = (this._Settings.hasOwnProperty('fileStreamoptions')) ? this._Settings.fileStreamOptions : (\n\t\t\t{\n\t\t\t\t\"flags\": \"a\",\n\t\t\t\t\"encoding\": \"utf8\"\n\t\t\t})\n\n\t\tthis.fileWriter = libFS.createWriteStream(this.logFilePath, this.logFileStreamOptions);\n\n\t\tthis.activelyWriting = false;\n\n\t\tthis.logLineStrings = [];\n\t\tthis.logObjectStrings = [];\n\n\t\tthis.defaultWriteCompleteCallback = ()=>{};\n\t\tthis.defaultBufferFlushCallback = ()=>{};\n\t}\n\n\tcloseWriter(fCloseComplete)\n\t{\n\t\tlet tmpCloseComplete = (typeof(fCloseComplete) == 'function') ? fCloseComplete : ()=>{};\n\t\tif (this.fileWriter)\n\t\t{\n\t\t\tthis.fileWriter.end('\\n');\n\t\t\treturn this.fileWriter.once('finish', tmpCloseComplete.bind(this));\n\t\t}\n\t}\n\n\tcompleteBufferFlushToLogFile(fFlushComplete)\n\t{\n\t\tthis.activelyWriting = false;\n\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\tif (this.logLineStrings.length > 0)\n\t\t{\n\t\t\tthis.flushBufferToLogFile(tmpFlushComplete);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpFlushComplete();\n\t\t}\n\t}\n\n\tflushBufferToLogFile(fFlushComplete)\n\t{\n\t\tif (!this.activelyWriting)\n\t\t{\n\t\t\t// Only want to be writing one thing at a time....\n\t\t\tthis.activelyWriting = true;\n\n\t\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\t\t// Get the current buffer arrays.  These should always have matching number of elements.\n\t\t\tlet tmpLineStrings = this.logLineStrings;\n\t\t\tlet tmpObjectStrings = this.logObjectStrings;\n\n\t\t\t// Reset these to be filled while we process this queue...\n\t\t\tthis.logLineStrings = [];\n\t\t\tthis.logObjectStrings = [];\n\n\t\t\t// This is where we will put each line before writing it to the file...\n\t\t\tlet tmpConstructedBufferOutputString = '';\n\n\t\t\tfor (let i = 0; i < tmpLineStrings.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: Windows Newline?   ....... yo no se!\n\t\t\t\ttmpConstructedBufferOutputString += `${tmpLineStrings[i]}\\n`;\n\t\t\t\tif (tmpObjectStrings[i] !== false)\n\t\t\t\t{\n\t\t\t\t\ttmpConstructedBufferOutputString += `${tmpObjectStrings[i]}\\n`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.fileWriter.write(tmpConstructedBufferOutputString, 'utf8'))\n\t\t\t{\n\t\t\t\t// If the streamwriter returns false, we need to wait for it to drain.\n\t\t\t\tthis.fileWriter.once('drain', this.completeBufferFlushToLogFile.bind(this, tmpFlushComplete));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.completeBufferFlushToLogFile(tmpFlushComplete);\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpLogLine = super.write(pLevel, pLogText, pObject);\n\n\t\t// Use a very simple array as the write buffer\n\t\tthis.logLineStrings.push(tmpLogLine);\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tthis.logObjectStrings.push(JSON.stringify(pObject, null, 4));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logObjectStrings.push(false);\n\t\t}\n\n\t\tthis.flushBufferToLogFile();\n\t}\n}\n\nmodule.exports = SimpleFlatFileLogger;","/**\n* Fable Logging Service\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass FableLog extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'Logging';\n\n\t\tlet tmpSettings = (typeof(pSettings) === 'object') ? pSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders-Node.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'default',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\nmodule.exports = FableLog;\nmodule.exports.LogProviderBase = require('./Fable-Log-BaseLogger.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-Console.js');\nmodule.exports.LogProviderFlatfile = require('./Fable-Log-Logger-SimpleFlatFile.js');\n","/**\n* Fable Service Base\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\t// The constructor can be used in two ways:\n\t// 1) With a fable, options object and service hash (the options object and service hash are optional)\n\t// 2) With an object or nothing as the first parameter, where it will be treated as the options object\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Check if a fable was passed in; connect it if so\n\t\tif ((typeof(pFable) === 'object') && pFable.isFable)\n\t\t{\n\t\t\tthis.connectFable(pFable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.fable = false;\n\t\t}\n\n\t\t// initialize options and UUID based on whether the fable was passed in or not.\n\t\tif (this.fable)\n\t\t{\n\t\t\tthis.UUID = pFable.getUUID();\n\t\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t\t: {};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// With no fable, check to see if there was an object passed into either of the first two\n\t\t\t// Parameters, and if so, treat it as the options object\n\t\t\tthis.options = ((typeof(pFable) === 'object') && !pFable.isFable) ? pFable\n\t\t\t\t\t\t\t: (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t\t: {};\n\t\t\tthis.UUID = `CORE-SVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`\n\t\t}\n\n\t\t// It's expected that the deriving class will set this\n\t\tthis.serviceType = `Unknown-${this.UUID}`;\n\n\t\t// The service hash is used to identify the specific instantiation of the service in the services map\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash \n\t\t\t\t\t: (!this.fable && (typeof(pOptions) === 'string')) ? pOptions\n\t\t\t\t\t: `${this.UUID}`;\n\t}\n\n\tconnectFable(pFable)\n\t{\n\t\tif ((typeof(pFable) !== 'object') || (!pFable.isFable))\n\t\t{\n\t\t\tlet tmpErrorMessage = `Fable Service Provider Base: Cannot connect to Fable, invalid Fable object passed in.  The pFable parameter was a [${typeof(pFable)}].}`;\n\t\t\tconsole.log(tmpErrorMessage);\n\t\t\treturn new Error(tmpErrorMessage);\n\t\t}\n\n\t\tif (!this.fable)\n\t\t{\n\t\t\tthis.fable = pFable;\n\t\t}\n\n\t\tif (!this.log)\n\t\t{\n\t\t\tthis.log = this.fable.Logging;\n\t\t}\n\t\tif (!this.services)\n\t\t{\n\t\t\tthis.services = this.fable.services;\n\t\t}\n\n\t\tif (!this.servicesMap)\n\t\t{\n\t\t\tthis.servicesMap = this.fable.servicesMap;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tstatic isFableService = true;\n}\n\nmodule.exports = FableServiceProviderBase;\n\n// This is left here in case we want to go back to having different code/base class for \"core\" services\nmodule.exports.CoreServiceProviderBase = FableServiceProviderBase;","module.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n","/**\n* Fable Settings Template Processor\n*\n* This class allows environment variables to come in via templated expressions, and defaults to be set.\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\nconst libPrecedent = require('precedent');\n\nclass FableSettingsTemplateProcessor\n{\n\tconstructor(pDependencies)\n\t{\n        // Use a no-dependencies templating engine to parse out environment variables\n\t\tthis.templateProcessor = new libPrecedent();\n\n        // TODO: Make the environment variable wrap expression demarcation characters configurable?\n\t\tthis.templateProcessor.addPattern('${', '}',\n\t\t\t(pTemplateValue)=>\n\t\t\t{\n\t\t\t\tlet tmpTemplateValue = pTemplateValue.trim();\n\n\t\t\t\tlet tmpSeparatorIndex = tmpTemplateValue.indexOf('|');\n\n\t\t\t\tconst tmpDefaultValue = tmpSeparatorIndex >= 0 ? tmpTemplateValue.substring(tmpSeparatorIndex+1) : '';\n\n\t\t\t\tlet tmpEnvironmentVariableName = (tmpSeparatorIndex > -1) ? tmpTemplateValue.substring(0, tmpSeparatorIndex) : tmpTemplateValue;\n\n\t\t\t\tif (process.env.hasOwnProperty(tmpEnvironmentVariableName))\n\t\t\t\t{\n\t\t\t\t\treturn process.env[tmpEnvironmentVariableName];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpDefaultValue;\n\t\t\t\t}\n\t\t\t});\n    }\n\n    parseSetting(pString)\n    {\n        return this.templateProcessor.parseString(pString);\n    }\n}\n\nmodule.exports = FableSettingsTemplateProcessor;\n","/**\n* Fable Settings Add-on\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nconst libFableSettingsTemplateProcessor = require('./Fable-Settings-TemplateProcessor.js');\n\nclass FableSettings extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'SettingsManager';\n\n\t\t// Initialize the settings value template processor\n\t\tthis.settingsTemplateProcessor = new libFableSettingsTemplateProcessor();\n\n\t\t// set straight away so anything that uses it respects the initial setting\n\t\tthis._configureEnvTemplating(pSettings);\n\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')));\n\t}\n\n\t// Update the configuration for environment variable templating based on the current settings object\n\t_configureEnvTemplating(pSettings)\n\t{\n\t\t// default environment variable templating to on\n\t\tthis._PerformEnvTemplating = !pSettings || pSettings.NoEnvReplacement !== true;\n\t}\n\n\t// Resolve (recursive) any environment variables found in settings object.\n\t_resolveEnv(pSettings)\n\t{\n\t\tfor (const tmpKey in pSettings)\n\t\t{\n\t\t\tif (typeof(pSettings[tmpKey]) === 'object')\n\t\t\t{\n\t\t\t\tthis._resolveEnv(pSettings[tmpKey]);\n\t\t\t}\n\t\t\telse if (typeof(pSettings[tmpKey]) === 'string')\n\t\t\t{\n\t\t\t\tpSettings[tmpKey] = this.settingsTemplateProcessor.parseSetting(pSettings[tmpKey]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if a value is an object (but not an array).\n\t */\n\t_isObject(value)\n\t{\n\t\treturn typeof(value) === 'object' && !Array.isArray(value);\n\t}\n\n\t/**\n\t * Merge two plain objects. Keys that are objects in both will be merged property-wise.\n\t */\n\t_deepMergeObjects(toObject, fromObject)\n\t{\n\t\tif (!fromObject || !this._isObject(fromObject))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.keys(fromObject).forEach((key) =>\n\t\t{\n\t\t\tconst fromValue = fromObject[key];\n\t\t\tif (this._isObject(fromValue))\n\t\t\t{\n\t\t\t\tconst toValue = toObject[key];\n\t\t\t\tif (toValue && this._isObject(toValue))\n\t\t\t\t{\n\t\t\t\t\t// both are objects, so do a recursive merge\n\t\t\t\t\tthis._deepMergeObjects(toValue, fromValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoObject[key] = fromValue;\n\t\t});\n\t\treturn toObject;\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\t\ttmpSettingsTo = this._deepMergeObjects(tmpSettingsTo, tmpSettingsFromCopy);\n\n\t\tif (this._PerformEnvTemplating)\n\t\t{\n\t\t\tthis._resolveEnv(tmpSettingsTo);\n\t\t}\n\t\t// Update env tempating config, since we just updated the config object, and it may have changed\n\t\tthis._configureEnvTemplating(tmpSettingsTo);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\n\t\tthis.settings = this._deepMergeObjects(tmpSettingsFromCopy, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = FableSettings;\nmodule.exports.new = autoConstruct;","/**\n* Random Byte Generator - Browser version\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn this.generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n","/**\n* Fable UUID Generator\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;0\n\nconst libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'UUID';\n\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = FableUUID;\nmodule.exports.new = autoConstruct;\n","/**\n* Fable Application Services Support Library\n* @author <steven@velozo.com>\n*/\n// Pre-init services\nconst libFableSettings = require('fable-settings');\nconst libFableUUID = require('fable-uuid');\nconst libFableLog = require('fable-log');\n\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass Fable extends libFableServiceBase.CoreServiceProviderBase\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\t// Initialization Phase 0: Set up the lowest level state (fable is a utility service manager at heart)\n\t\tthis.serviceType = 'ServiceManager';\n\n\t\t// An array of the types of services available\n\t\tthis.serviceTypes = [];\n\t\t// A map of instantiated services\n\t\tthis.servicesMap = {};\n\t\t// A map of the default instantiated service by type\n\t\tthis.services = {};\n\n\t\t// A map of class constructors for services\n\t\tthis.serviceClasses = {};\n\n\t\t// If we need extra service initialization capabilities\n\t\tthis.extraServiceInitialization = false;\n\n\t\t// Set how noisy the system is about signaling complexity\n\t\tthis.LogNoisiness = 0;\n\n\t\t// Initialization Phase 1: Set up the core utility services\n\t\t// These are things like power, water, and sewage.  They are required for fable to run (e.g. logging, settings, etc)\n\n\t\t// Instantiate the default Settings Manager\n\t\tthis.SettingsManager = new libFableSettings(pSettings);\n\t\tthis.SettingsManager = this.SettingsManager;\n\t\t// Instantiate the UUID generator\n\t\tthis.UUID = new libFableUUID(this.SettingsManager.settings);\n\t\t// Instantiate the logging system\n\t\tthis.Logging = new libFableLog(this.SettingsManager.settings);\n\t\tthis.Logging.initialize();\n\n\t\t// Initialization Phase 1.5: Instantiate the service manager\n\t\t// This is the start actual bootstrapping point for fable.\n\t\t// For consistency fable is treated as a service.\n\t\tthis.ServiceManager = this;\n\t\t// TODO: Remove this when Orator and meadow-endpoints are shifted to this new pattern\n\t\tthis.serviceManager = this;\n\t\t// END TODO\n\t\tthis.connectFable(this);\n\t\t// --> Bootstrapping of fable into the Service Manager is complete\n\n\t\t// Initialization Phase 2: Map in the default services.\n\t\t// They will then be available in the Default service provider set as well.\n\t\tthis.connectPreinitServiceProviderInstance(this.UUID);\n\t\tthis.connectPreinitServiceProviderInstance(this.Logging);\n\t\tthis.connectPreinitServiceProviderInstance(this.SettingsManager);\n\n\t\t// Initialize and instantiate the default baked-in Data Arithmatic service\n\t\tthis.addAndInstantiateServiceType('EnvironmentData', require('./services/Fable-Service-EnvironmentData.js'));\n\t\tthis.addServiceType('Template', require('./services/Fable-Service-Template.js'));\n\t\tthis.addServiceType('MetaTemplate', require('./services/Fable-Service-MetaTemplate.js'));\n\t\tthis.addServiceType('Anticipate', require('./services/Fable-Service-Anticipate.js'));\n\t\tthis.addAndInstantiateServiceType('Dates', require('./services/Fable-Service-DateManipulation.js'));\n\t\tthis.addAndInstantiateServiceType('DataFormat', require('./services/Fable-Service-DataFormat.js'));\n\t\tthis.addAndInstantiateServiceType('DataGeneration', require('./services/Fable-Service-DataGeneration.js'));\n\t\tthis.addAndInstantiateServiceType('Utility', require('./services/Fable-Service-Utility.js'));\n\t\tthis.addServiceType('Operation', require('./services/Fable-Service-Operation.js'));\n\t\tthis.addServiceType('RestClient', require('./services/Fable-Service-RestClient.js'));\n\t\tthis.addServiceType('CSVParser', require('./services/Fable-Service-CSVParser.js'));\n\t\tthis.addServiceType('Manifest', require('manyfest'));\n\t\tthis.addServiceType('ObjectCache', require('cachetrax'));\n\t\tthis.addServiceType('FilePersistence', require('./services/Fable-Service-FilePersistence.js'));\n\t}\n\n\t/* State Accessors */\n\tget isFable()\n\t{\n\t\treturn true;\n\t}\n\n\tget settings()\n\t{\n\t\treturn this.SettingsManager.settings;\n\t}\n\n\tget settingsManager()\n\t{\n\t\treturn this.SettingsManager;\n\t}\n\n\t// For backwards compatibility\n\tgetUUID()\n\t{\n\t\treturn this.UUID.getUUID();\n\t}\n\n\tnewAnticipate()\n\t{\n\t\treturn this.instantiateServiceProviderWithoutRegistration('Anticipate');\n\t}\n\n\t/* Service Manager Methods */\n\taddServiceType(pServiceType, pServiceClass)\n\t{\n\t\tif (this.servicesMap.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\t// TODO: Check if any services are running?\n\t\t\tthis.log.warn(`Adding a service type [${pServiceType}] that already exists.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the container for instantiated services to go in\n\t\t\tthis.servicesMap[pServiceType] = {};\n\n\t\t\t// Add the type to the list of types\n\t\t\tthis.serviceTypes.push(pServiceType);\n\t\t}\n\n\t\t// Using the static member of the class is a much more reliable way to check if it is a service class than instanceof\n\t\tif ((typeof(pServiceClass) == 'function') && (pServiceClass.isFableService))\n\t\t{\n\t\t\t// Add the class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = pServiceClass;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the base class to the list of classes\n\t\t\tthis.log.error(`Attempted to add service type [${pServiceType}] with an invalid class.  Using base service class, which will not crash but won't provide meaningful services.`);\n\t\t\tthis.serviceClasses[pServiceType] = libFableServiceBase;\n\t\t}\n\t}\n\n\t// This is for the services that are meant to run mostly single-instance so need a default at initialization\n\taddAndInstantiateServiceType(pServiceType, pServiceClass)\n\t{\n\t\tthis.addServiceType(pServiceType, pServiceClass);\n\t\treturn this.instantiateServiceProvider(pServiceType, {}, `${pServiceType}-Default`);\n\t}\n\n\t// Some services expect to be overloaded / customized class.\n\tinstantiateServiceProviderFromPrototype(pServiceType, pOptions, pCustomServiceHash, pServicePrototype)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new pServicePrototype(this, pOptions, pCustomServiceHash);\n\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\tinstantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = this.instantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\t// Create a service provider but don't register it to live forever in fable.services\n\tinstantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new this.serviceClasses[pServiceType](this, pOptions, pCustomServiceHash);\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\t\treturn tmpService;\n\t}\n\n\t// Connect an initialized service provider that came before Fable was initialized\n\tconnectPreinitServiceProviderInstance(pServiceInstance)\n\t{\n\t\tlet tmpServiceType = pServiceInstance.serviceType;\n\t\tlet tmpServiceHash = pServiceInstance.Hash;\n\n\t\t// The service should already be instantiated, so just connect it to fable\n\t\tpServiceInstance.connectFable(this);\n\n\t\t// Add the service type to the map if it isn't there yet\n\t\tif (!this.servicesMap.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\t// If the core service hasn't registered itself yet, create the service container for it.\n\t\t\t// This means you couldn't register another with this type unless it was later registered with a constructor class.\n\t\t\tthis.servicesMap[tmpServiceType] = {};\n\t\t}\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[tmpServiceType][tmpServiceHash] = pServiceInstance;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(tmpServiceType, tmpServiceHash, false);\n\t\t}\n\n\t\treturn pServiceInstance;\n\t}\n\n\tsetDefaultServiceInstantiation(pServiceType, pServiceHash, pOverwriteService)\n\t{\n\t\t// Overwrite services by default, unless told not to\n\t\tlet tmpOverwriteService = (typeof(pOverwriteService) === 'undefined') ? true : pOverwriteService;\n\t\t// Make sure the service exists\n\t\tif (this.servicesMap[pServiceType].hasOwnProperty(pServiceHash))\n\t\t{\n\t\t\tif (!this.hasOwnProperty(pServiceType) || tmpOverwriteService)\n\t\t\t{\n\t\t\t\tthis[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\t}\n\t\t\tif (!this.services.hasOwnProperty(pServiceType) || tmpOverwriteService)\n\t\t\t{\n\t\t\t\tthis.services[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\t\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = Fable;\nmodule.exports.new = autoConstruct;\n\nmodule.exports.LogProviderBase = libFableLog.LogProviderBase;\nmodule.exports.ServiceProviderBase = libFableServiceBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceBase.CoreServiceProviderBase;\n\nmodule.exports.precedent = libFableSettings.precedent;\n","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceAnticipate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'AsyncAnticipate';\n\n\t\t// The queue of operations waiting to run.\n\t\tthis.operationQueue = [];\n\t\tthis.erroredOperations = [];\n\n\t\tthis.executingOperationCount = 0;\n\t\tthis.completedOperationCount = 0;\n\n\t\tthis.callDepth = 0;\n\n\t\tthis.maxOperations = 1;\n\n\t\tthis.lastError = undefined;\n\t\tthis.waitingFunctions = [];\n\t}\n\n\tcheckQueue()\n\t{\n\t\t// This could be combined with the last else if stanza but the logic for errors and non-errors would be blended and more complex to follow so keeping it unrolled.\n\t\tif (this.lastError)\n\t\t{\n\t\t\t// If there are no operations left, and we have waiting functions, call them.\n\t\t\tfor (let i = 0; i < this.waitingFunctions.length; i++)\n\t\t\t{\n\t\t\t\t//this.log.trace('Calling waiting function.')\n\t\t\t\tthis.waitingFunctions[i](this.lastError);\n\t\t\t}\n\t\t\t// Reset our state\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.waitingFunctions = [];\n\t\t}\n\t\t// This checks to see if we need to start any operations.\n\t\telse if (this.operationQueue.length > 0 && this.executingOperationCount < this.maxOperations)\n\t\t{\n\t\t\tlet tmpOperation = this.operationQueue.shift();\n\t\t\tthis.executingOperationCount += 1;\n\t\t\ttmpOperation(this.buildAnticipatorCallback());\n\t\t}\n\t\telse if (this.waitingFunctions.length > 0 && this.executingOperationCount < 1)\n\t\t{\n\t\t\t// If there are no operations left, and we have waiting functions, call them.\n\t\t\tfor (let i = 0; i < this.waitingFunctions.length; i++)\n\t\t\t{\n\t\t\t\t//this.log.trace('Calling waiting function.')\n\t\t\t\tthis.waitingFunctions[i](this.lastError);\n\t\t\t}\n\t\t\t// Reset our state\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.waitingFunctions = [];\n\t\t}\n\t}\n\n\t// Expects a function fAsynchronousFunction(fCallback)\n\tanticipate(fAsynchronousFunction)\n\t{\n\t\t//this.log.trace('Adding a function...')\n\t\tthis.operationQueue.push(fAsynchronousFunction);\n\t\tthis.checkQueue();\n\t}\n\n\tbuildAnticipatorCallback()\n\t{\n\t\t// This uses closure-scoped state to track the callback state\n\t\tlet tmpCallbackState = (\n\t\t\t{\n\t\t\t\tCalled: false,\n\t\t\t\tError: undefined,\n\t\t\t\tOperationSet: this\n\t\t\t});\n\t\treturn hoistedCallback.bind(this);\n\t\tfunction hoistedCallback(pError)\n\t\t{\n\t\t\tif (tmpCallbackState.Called)\n\t\t\t{\n\t\t\t\t// If they call the callback twice, throw an error\n\t\t\t\tthrow new Error(\"Anticipation async callback called twice...\");\n\t\t\t}\n\t\t\ttmpCallbackState.Called = true;\n\t\t\tthis.lastError = pError;\n\n\t\t\ttmpCallbackState.OperationSet.executingOperationCount -= 1;\n\t\t\ttmpCallbackState.OperationSet.completedOperationCount += 1;\n\n\t\t\ttmpCallbackState.OperationSet.callDepth++;\n\n\t\t\t// TODO: Figure out a better pattern for chaining templates so the call stack doesn't get abused.\n\t\t\tif (tmpCallbackState.OperationSet.callDepth > 400)\n\t\t\t{\n\t\t\t\ttmpCallbackState.OperationSet.callDepth = 0;\n\t\t\t\tsetTimeout(tmpCallbackState.OperationSet.checkQueue.bind(this), 0);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpCallbackState.OperationSet.checkQueue();\n\t\t\t}\n\t\t}\n\t}\n\n\twait(fCallback)\n\t{\n\t\tthis.waitingFunctions.push(fCallback);\n\t\tthis.checkQueue();\n\t}\n}\n\nmodule.exports = FableServiceAnticipate;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Parsing CSVs.  Why?  Because it's a thing that needs to be done.\n*\n* 1. And the other node CSV parsers had issues with the really messy files we had.\n* \n*\n* 2. None of the CSV parsers dealt with and multi-line quoted string columns\n*    which are apparently a-ok according to the official spec.\n* Plus a lot of them are asynchronous because apparently that's the best way to\n* do anything; unfortunately some files have a sequence issue with that.\n*\n* @class CSVParser\n*/\nclass CSVParser extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'CSVParser';\n\n        this.Header = [];\n        this.HeaderFieldNames = [];\n\n        this.Delimiter = ',';\n        this.QuoteCharacter = '\"';\n\n        this.CleanCharacters = ['\\r'];\n\n        this.HeaderLineIndex = 0;\n        this.HasHeader = true;\n        this.HasSetHeader = false;\n        this.EmitHeader = false;\n\n        this.EmitJSON = true;\n\n        this.EscapedQuoteString = '&quot;';\n\n        // Current Line Parsing State\n        this.CurrentLine = '';\n        this.CurrentRecord = [];\n\n        this.InQuote = false;\n        this.InEscapedQuote = false;\n\n        this.LinesParsed = 0;\n        this.RowsEmitted = 0;\n    }\n\n    marshalRowToJSON(pRowArray)\n    {\n        if (!Array.isArray(pRowArray))\n        {\n            return false;\n        }\n\n        for (let i = this.HeaderFieldNames.length; i < pRowArray.length; i++)\n        {\n            this.HeaderFieldNames[i] = `${i}`;\n        }\n\n        let tmpObject = {};\n\n        for (let i = 0; i < pRowArray.length; i++)\n        {\n            tmpObject[this.HeaderFieldNames[i]] = pRowArray[i];\n        }\n\n        return tmpObject;\n    }\n\n    // Set the header data, for use in marshalling to JSON.\n    setHeader (pHeaderArray)\n    {\n        this.Header = pHeaderArray;\n\n        for (let i = 0; i < this.Header.length; i++)\n        {\n            if (typeof(this.Header[i]) == 'undefined')\n            {\n                this.HeaderFieldNames[i] = `${i}`;\n            }\n            else\n            {\n                this.HeaderFieldNames[i] = this.Header[i].toString().trim();\n            }\n        }\n    }\n\n    resetRowState()\n    {\n        this.CurrentRecord = [];\n    }\n\n    pushLine()\n    {\n        for (let i = 0; i < this.CleanCharacters.length; i++)\n        {\n            this.CurrentLine = this.CurrentLine.replace(this.CleanCharacters[i],'');\n        }\n        this.CurrentRecord.push(this.CurrentLine);\n        this.CurrentLine = '';\n    }\n\n    emitRow(pFormatAsJSON)\n    {\n        let tmpFormatAsJSON = (typeof(pFormatAsJSON) == 'undefined') ? this.EmitJSON : pFormatAsJSON;\n\n        this.RowsEmitted++;\n        let tmpCompletedRecord = this.CurrentRecord;\n        this.CurrentRecord = [];\n\n        if (tmpFormatAsJSON)\n        {\n            return this.marshalRowToJSON(tmpCompletedRecord);\n        }\n        else\n        {\n            return tmpCompletedRecord;\n        }\n    }\n\n    parseCSVLine (pLineString)\n    {\n        this.LinesParsed++;\n\n        for (let i = 0; i < pLineString.length; i++)\n        {\n            if ((!this.InQuote) && (pLineString[i] == this.Delimiter))\n            {\n                this.pushLine();\n            }\n            else if (pLineString[i] == this.QuoteCharacter)\n            {\n                // If we are in the second part of an escaped quote, ignore it.\n                if (this.InEscapedQuote)\n                {\n                    this.InEscapedQuote = false;\n                }\n                // If we aren't in a quote, enter quote\n                else if (!this.InQuote)\n                {\n                    this.InQuote = true;\n                }\n                // We are in a quote, so peek forward to see if this is an \"escaped\" quote pair\n                else if ((i < pLineString.length) && (pLineString[i+1] == this.QuoteCharacter))\n                {\n                    this.CurrentLine += this.EscapedQuoteString;\n                    this.InEscapedQuote = true;\n                }\n                // We are in a quote, this isn't an \"escaped\" quote pair, so go out of quote mode\n                else\n                {\n                    this.InQuote = false;\n                }\n            }\n            else\n            {\n                this.CurrentLine += pLineString[i];\n            }\n        }\n\n        // See if we are in a multiline quoted entry -- if not, emit the row.\n        if (!this.InQuote)\n        {\n            // Push the last remaining column from the buffer to the current line.\n            this.pushLine();\n\n            // Check to see if there is a header -- and if so, if this is the header row\n            if (this.HasHeader && !this.HasSetHeader && (this.RowsEmitted == this.HeaderLineIndex))\n            {\n                this.HasSetHeader = true;\n                // Override the format as json bit\n                this.setHeader(this.emitRow(false));\n\n                // No matter what, formatting this as JSON is silly and we don't want to go there anyway.\n                if (this.EmitHeader)\n                {\n                    return this.Header;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n            else\n            {\n                return this.emitRow();\n            }\n        }\n        else\n        {\n            return false;\n        }\n    };\n}\n\nmodule.exports = CSVParser;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Data Formatting and Translation Functions\n*\n* @class DataFormat\n*/\nclass DataFormat extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'DataArithmatic';\n\n\t\t// Regular Expressions (so they don't have to be recompiled every time)\n\t\t// These could be defined as static, but I'm not sure if that will work with browserify ... and specifically the QT browser.\n\t\tthis._Regex_formatterInsertCommas = /.{1,3}/g;\n\t\t// Match Function:\n\t\t// function(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t\t// Thoughts about below:   /^([+-]?)(0*)(\\d+)(\\.(\\d+))?$/;\n\t\tthis._Regex_formatterAddCommasToNumber = /^([-+]?)(0?)(\\d+)(.?)(\\d+)$/g;\n\t\tthis._Regex_formatterDollarsRemoveCommas = /,/gi;\n\t\tthis._Regex_formatterCleanNonAlphaChar = /[^a-zA-Z]/gi;\n\t\tthis._Regex_formatterCapitalizeEachWord = /([a-zA-Z]+)/g;\n\n\t\t// TODO: Potentially pull these in from a configuration.\n\t\t// TODO: Use locale data for this if it's defaults all the way down.\n\t\tthis._Value_MoneySign_Currency = '$';\n\t\tthis._Value_NaN_Currency = '--';\n\t\tthis._Value_GroupSeparator_Number = ',';\n\n\t\tthis._Value_Prefix_StringHash = 'HSH';\n\t\tthis._Value_Clean_formatterCleanNonAlpha = '';\n\n\t\tthis._UseEngineStringStartsWith = (typeof(String.prototype.startsWith) === 'function');\n\t\tthis._UseEngineStringEndsWith = (typeof(String.prototype.endsWith) === 'function');\n\t}\n\n\n\t/*************************************************************************\n\t * String Manipulation and Comparison Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Reverse a string\n\t *\n\t * @param {string} pString - The string to reverse\n\t * @returns {string}\n\t */\n\tstringReverse (pString)\n\t{\n\t\t// TODO: Benchmark if there are faster ways we want to do this with all the newer JS stuff\n\t\t//       ... and if it will work with browserify in a clean way.\n\t\treturn pString.split('').reverse().join('');\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pStartIndex\n\t * @returns {*}\n\t */\n\tstringStartsWith (pString, pSearchString, pStartIndex)\n\t{\n\t\tif (this._UseEngineStringStartsWith)\n\t\t{\n\t\t\treturn pString.startsWith(pSearchString, pStartIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringStartsWith_Polyfill.call(pString, pSearchString, pStartIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pStartIndex - The index to start the search at\n\t * @returns {boolean}\n\t */\n\tstringStartsWith_Polyfill (pSearchString, pStartIndex)\n\t{\n\t\treturn this.slice(pStartIndex || 0, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pEndIndex\n\t * @returns {*}\n\t */\n\tstringEndsWith (pString, pSearchString, pEndIndex)\n\t{\n\t\tif (this._UseEngineStringEndsWith)\n\t\t{\n\t\t\treturn pString.endsWith(pSearchString, pEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringEndsWith_Polyfill.call(pString, pSearchString, pEndIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pEndIndex - The index to end the search at\n\t * @returns {boolean}\n\t */\n\tstringEndsWith_Polyfill (pSearchString, pEndIndex)\n\t{\n\t\t// This works much better than >= because\n\t\t// it compensates for NaN:\n\t\tif (!(pEndIndex < this.length))\n\t\t{\n\t\t\tpEndIndex = this.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpEndIndex |= 0; // round position\n\t\t}\n\t\treturn this.substr(pEndIndex - pSearchString.length, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Generate an insecure string hash.  Not meant to be secure, just a quick way to generate a hash for a string.  This is not a cryptographic hash.  Additional warranty and disclaimer ... this is not for passwords!\n\t *\n\t * @param {string} pString\n\t * @returns {string}\n\t */\n\tinsecureStringHash (pString)\n\t{\n\t\tlet tmpHash = 0;\n\t\tlet tmpStringLength = pString.length;\n\t\tlet tmpCharacterIndex = 0;\n\n\t\twhile (tmpCharacterIndex < tmpStringLength)\n\t\t{\n\t\t\ttmpHash = (tmpHash << 5) - tmpHash + pString.charCodeAt(tmpCharacterIndex++) | 0;\n\t\t}\n\n\t\treturn `${this._Value_Prefix_StringHash}${tmpHash}`;\n\t}\n\n\tcapitalizeEachWord (pString)\n\t{\n\t\treturn pString.replace(this._Regex_formatterCapitalizeEachWord,\n\t\t\t(pMatch) =>\n\t\t\t{\n\t\t\t\treturn pMatch.charAt(0).toUpperCase() + pMatch.substr(1);\n\t\t\t});\n\t}\n\n\t/**\n\t * Clean wrapping characters if they exist consistently around the string.  If they do not, the string is returned unchanged.\n\t *\n\t * @param {string} pWrapCharacter - The character expected as the wrapping character\n\t * @param {string} pString - the string to clean\n\t * @returns {string}\n\t */\n\tcleanEnclosureWrapCharacters (pWrapCharacter, pString)\n\t{\n\t\t// # Use case from ManyFest DSL:\n\t\t//\n\t\t// When a boxed property is passed in, it should have quotes of some\n\t\t// kind around it.\n\t\t//\n\t\t// For instance:\n\t\t// \t\tMyValues['Name']\n\t\t// \t\tMyValues[\"Age\"]\n\t\t// \t\tMyValues[`Cost`]\n\t\t//\n\t\t// This function is necessary to remove the wrapping quotes before object\n\t\t// resolution can occur.\n\t\tif (pString.startsWith(pWrapCharacter) && pString.endsWith(pWrapCharacter))\n\t\t{\n\t\t\treturn pString.substring(1, pString.length - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pString;\n\t\t}\n\t}\n\n\t/**\n\t * Clean a string of any non-alpha characters (including numbers)\n\t *\n\t * @param {*} pString\n\t * @returns\n\t */\n\tcleanNonAlphaCharacters (pString)\n\t{\n\t\tif ((typeof(pString) == 'string') && (pString != ''))\n\t\t{\n\t\t\treturn pString.replace(this._Regex_formatterCleanNonAlphaChar, this._Value_Clean_formatterCleanNonAlpha);\n\t\t}\n\n\t\treturn '';\n\t}\n\n\n\t/*************************************************************************\n\t * Number Formatting Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Insert commas every 3 characters from the right.  Used by formatterAddCommasToNumber().\n\t *\n\t * @param {*} pString\n\t * @returns {*}\n\t */\n\tformatterInsertCommas (pString)\n\t{\n\t\t// Reverse, because it's easier to do things from the left, given arbitrary digit counts\n\t\tlet tmpReversed = this.stringReverse(pString);\n\t\t// Add commas every three characters\n\t\tlet tmpReversedWithCommas = tmpReversed.match(this._Regex_formatterInsertCommas).join(',');\n\t\t// Reverse again (back to normal direction)\n\t\treturn this.stringReverse(tmpReversedWithCommas);\n\t}\n\n\tprocessAddCommasToNumberRegex(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t{\n\t\t// If there was no decimal, the last capture grabs the final digit, so\n\t\t// we have to put it back together with the 'before' substring\n\t\treturn pSign + (pDecimal ? this.formatterInsertCommas(pBefore) + pDecimal + pAfter : this.formatterInsertCommas(pBefore + pAfter));\n\t}\n\n\t/**\n\t * Add Commas to a Number for readability.\n\t *\n\t * @param {*} pNumber\n\t * @returns {string}\n\t */\n\tformatterAddCommasToNumber (pNumber)\n\t{\n\t\t// If the regex doesn't match, `replace` returns the string unmodified\n\t\treturn (pNumber.toString()).replace\n\t\t(\n\t\t\tthis._Regex_formatterAddCommasToNumber,\n\t\t\tthis.processAddCommasToNumberRegex.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * This will take a number and format it as a dollar string.  It will also add commas to the number.  If the number is not a number, it will return '--'.\n\t *\n\t * @param {*} pValue\n\t * @returns {string}\n\t */\n\tformatterDollars (pValue)\n\t{\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tif (pValue === null || pValue === undefined)\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tlet tmpDollarAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpDollarAmount = tmpDollarAmountArbitrary.toFixed(2);\n\n\t\tif (isNaN(tmpDollarAmount))\n\t\t{\n\t\t\t// Try again and see if what was passed in was a dollars string.\n\t\t\tif (typeof(pValue) == 'string')\n\t\t\t{\n\t\t\t\t// TODO: Better rounding function?  This is a hack to get rid of the currency symbol and commas.\n\t\t\t\ttmpDollarAmount = parseFloat(pValue.replace(this._Value_MoneySign_Currency,'').replace(this._Regex_formatterDollarsRemoveCommas,'')).toFixed(2);\n\t\t\t}\n\t\t\t// If we didn't get a number, return the \"not a number\" string.\n\t\t\tif (isNaN(tmpDollarAmount))\n\t\t\t{\n\t\t\t\treturn this._Value_NaN_Currency;\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Get locale data and use that for this stuff.\n\t\treturn `$${this.formatterAddCommasToNumber(tmpDollarAmount)}`;\n\t}\n\n\t/**\n\t * Round a number to a certain number of digits.  If the number is not a number, it will return 0.  If no digits are specified, it will default to 2 significant digits.\n\t *\n\t * @param {*} pValue\n\t * @param {number} pDigits\n\t * @returns {string}\n\t */\n\tformatterRoundNumber (pValue, pDigits)\n\t{\n\t\tlet tmpDigits = (typeof(pDigits) == 'undefined') ? 2 : pDigits;\n\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\n\t\tif (pValue === null || pValue === undefined)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpValue = tmpAmountArbitrary.toFixed(tmpDigits);\n\n\t\tif (isNaN(tmpValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpValue;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate a reapeating padding string to be appended before or after depending on \n\t * which padding function it uses.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringGeneratePaddingString(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpTargetLength = pTargetLength >> 0;\n\t\tlet tmpPadString = String((typeof pPadString !== 'undefined' ? pPadString : ' '));\n\t\tif (pString.length > pTargetLength)\n\t\t{\n\t\t\t// No padding string if the source string is already longer than the target length, return an empty string\n\t\t\treturn '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpPadLength = pTargetLength - pString.length;\n\t\t\tif (tmpPadLength > tmpPadString.length)\n\t\t\t{\n\t\t\t\ttmpPadString += tmpPadString.repeat(tmpTargetLength / tmpPadString.length);\n\t\t\t}\n\t\t\treturn tmpPadString.slice(0, tmpPadLength);\n\t\t}\n\t}\n\n\t/**\n\t * Pad the start of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadStart = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString) + tmpString;\n\t}\n\n\t/**\n\t * Pad the end of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadEnd = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn tmpString + this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString);\n\t}\n\n\t/*************************************************************************\n\t * Time Formatting Functions (milliseconds)\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Format a time length in milliseconds into a human readable string.\n\t * @param {number} pTimeSpan \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeSpan(pTimeSpan)\n\t{\n\t\tif (typeof(pTimeSpan) != 'number')\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpMs = parseInt(pTimeSpan%1000);\n\t\tlet tmpSeconds = parseInt((pTimeSpan/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeSpan/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeSpan/(1000*60*60));\n\n\t\treturn `${this.stringPadStart(tmpHours,2,'0')}:${this.stringPadStart(tmpMinutes,2,'0')}:${this.stringPadStart(tmpSeconds,2,'0')}.${this.stringPadStart(tmpMs,3,'0')}`;\n\t}\n\n\t/**\n\t * Format the time delta between two times in milliseconds into a human readable string.\n\t * \n\t * @param {number} pTimeStart \n\t * @param {number} pTimeEnd \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeDelta(pTimeStart, pTimeEnd)\n\t{\n\t\tif ((typeof(pTimeStart) != 'number') || (typeof(pTimeEnd) != 'number'))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.formatTimeSpan(pTimeEnd-pTimeStart);\n\t}\n\n\t// THE FOLLOWING TERRIBLE FUNCTIONS ARE FOR QT / WKHTMLTOPDF when luxon and moment don't work so well\n\tgetMonthFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tgetMonthAbbreviatedFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tformatMonthDayYearFromDate (pJavascriptDate, pStrict)\n\t{\n\t\tlet tmpStrict = (typeof(pStrict) !== 'undefined') ? pStrict : false;\n\n\t\tlet tmpMonth = pJavascriptDate.getMonth() + 1;\n\t\tlet tmpDay = pJavascriptDate.getDate();\n\t\tlet tmpYear = pJavascriptDate.getFullYear();\n\t\t\n\t\tif (tmpStrict)\n\t\t{\n\t\t\ttmpMonth = this.stringPadStart(tmpMonth, 2, '0');\n\t\t\ttmpDay = this.stringPadStart(tmpDay, 2, '0');\n\t\t\ttmpYear = this.stringPadStart(tmpYear, 4, '0');\n\t\t}\n\n\t\treturn `${tmpMonth}/${tmpDay}/${tmpYear}`;\n\t}\n\t\n\tformatSortableStringFromDate (pDate)\n\t{\n\t\treturn pDate.getFullYear()+this.stringPadStart(pDate.getMonth(),2,'0')+this.stringPadStart(pDate.getDate(),2,'0');\n\t}\n\n\t/*************************************************************************\n\t * String Tokenization Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Return the string before the matched substring.\n\t *\n\t * If the substring is not found, the entire string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringBeforeMatch (pString, pMatch)\n\t{\n\t\treturn pString.split(pMatch)[0];\n\t}\n\n\t/**\n\t * Return the string after the matched substring.\n\t *\n\t * If the substring is not found, an empty string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringAfterMatch (pString, pMatch)\n\t{\n\t\tlet tmpStringSplitLocation = pString.indexOf(pMatch);\n\n\t\tif ((tmpStringSplitLocation < 0) || ((tmpStringSplitLocation + pMatch.length) >= pString.length))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn pString.substring(tmpStringSplitLocation + pMatch.length);\n\t}\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures (pString, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\tif (tmpEnclosureDepth == 0)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t}\n\t\t\t\ttmpEnclosureDepth++;\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpEnclosureCount;\n\t}\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosedValueStartIndex = 0;\n\t\tlet tmpEnclosedValueEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This is the end of an enclosure\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t\t{\n\t\t\t// Return an empty string if the enclosure is not found\n\t\t\treturn '';\n\t\t}\n\n\t\tif ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t\t}\n\t}\n\n\n\t/**\n\t * Remove an enclosure from a string based on the index of the enclosure.\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToRemove\n\t * @param {number} pEnclosureStart\n\t * @param {number} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringRemoveEnclosureByIndex (pString, pEnclosureIndexToRemove, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToRemove = (typeof(pEnclosureIndexToRemove) == 'number') ? pEnclosureIndexToRemove : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosureStartIndex = 0;\n\t\tlet tmpEnclosureEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToRemove == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosureStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosureEndIndex <= tmpEnclosureStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToRemove)\n\t\t{\n\t\t\treturn tmpString;\n\t\t}\n\n\t\tlet tmpReturnString = '';\n\n\t\tif (tmpEnclosureStartIndex > 1)\n\t\t{\n\t\t\ttmpReturnString = tmpString.substring(0, tmpEnclosureStartIndex);\n\t\t}\n\n\t\tif ((tmpString.length > (tmpEnclosureEndIndex + 1)) && (tmpEnclosureEndIndex > tmpEnclosureStartIndex))\n\t\t{\n\t\t\ttmpReturnString += tmpString.substring(tmpEnclosureEndIndex+1);\n\t\t}\n\n\t\treturn tmpReturnString;\n\t}\n}\n\nmodule.exports = DataFormat;","module.exports={\n\t\"DefaultIntegerMinimum\": 0,\n\t\"DefaultIntegerMaximum\": 9999999,\n\n\t\"DefaultNumericStringLength\": 10,\n\n\t\"MonthSet\": [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n\n\t\"WeekDaySet\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n\n\t\"ColorSet\": \n\t\t[\n\t\t\t\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Indigo\", \"Violet\", \"Pink\", \"Purple\", \"Turquoise\", \"Gold\",\n\t\t\t\"Lime\", \"Maroon\", \"Navy\", \"Coral\", \"Teal\", \"Brown\", \"White\", \"Black\", \"Sky\", \"Berry\",\n\t\t\t\"Grey\", \"Straw\", \"Silver\", \"Sapphire\"\n\t\t],\n\n\t\"SurNameSet\":\n\t\t[\n\t\t\t\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Miller\", \"Davis\", \"Garcia\", \"Rodriguez\", \"Wilson\",\n\t\t\t\"Martinez\", \"Anderson\", \"Taylor\", \"Thomas\", \"Hernandez\", \"Moore\", \"Martin\", \"Jackson\", \"Thompson\", \"White\",\n\t\t\t\"Lopez\", \"Lee\", \"Gonzalez\", \"Harris\", \"Clark\", \"Lewis\", \"Robinson\", \"Walker\", \"Perez\", \"Hall\",\n\t\t\t\"Young\", \"Allen\", \"Sanchez\", \"Wright\", \"King\", \"Scott\", \"Green\", \"Baker\", \"Adams\", \"Nelson\",\n\t\t\t\"Hill\", \"Ramirez\", \"Campbell\", \"Mitchell\", \"Roberts\", \"Carter\", \"Phillips\", \"Evans\", \"Turner\", \"Torres\",\n\t\t\t\"Parker\", \"Collins\", \"Edwards\", \"Stewart\", \"Flores\", \"Morris\", \"Nguyen\", \"Murphy\", \"Rivera\", \"Cook\",\n\t\t\t\"Rogers\", \"Morgan\", \"Peterson\", \"Cooper\", \"Reed\", \"Bailey\", \"Bell\", \"Gomez\", \"Kelly\", \"Howard\",\n\t\t\t\"Ward\", \"Cox\", \"Diaz\", \"Richardson\", \"Wood\", \"Watson\", \"Brooks\", \"Bennett\", \"Gray\", \"James\",\n\t\t\t\"Reyes\", \"Cruz\", \"Hughes\", \"Price\", \"Myers\", \"Long\", \"Foster\", \"Sanders\", \"Ross\", \"Morales\",\n\t\t\t\"Powell\", \"Sullivan\", \"Russell\", \"Ortiz\", \"Jenkins\", \"Gutierrez\", \"Perry\", \"Butler\", \"Barnes\", \"Fisher\"\n\t\t],\n\n\t\"NameSet\":\n\t\t[\n\t\t\t\"Mary\", \"Patricia\", \"Jennifer\", \"Linda\", \"Elizabeth\", \"Barbara\", \"Susan\", \"Jessica\", \"Sarah\", \"Karen\",\n\t\t\t\"Lisa\", \"Nancy\", \"Betty\", \"Sandra\", \"Margaret\", \"Ashley\", \"Kimberly\", \"Emily\", \"Donna\", \"Michelle\",\n\t\t\t\"Carol\", \"Amanda\", \"Melissa\", \"Deborah\", \"Stephanie\", \"Dorothy\", \"Rebecca\", \"Sharon\", \"Laura\", \"Cynthia\",\n\t\t\t\"Amy\", \"Kathleen\", \"Angela\", \"Shirley\", \"Brenda\", \"Emma\", \"Anna\", \"Pamela\", \"Nicole\", \"Samantha\",\n\t\t\t\"Katherine\", \"Christine\", \"Helen\", \"Debra\", \"Rachel\", \"Carolyn\", \"Janet\", \"Maria\", \"Catherine\", \"Heather\",\n\t\t\t\"Diane\", \"Olivia\", \"Julie\", \"Joyce\", \"Victoria\", \"Ruth\", \"Virginia\", \"Lauren\", \"Kelly\", \"Christina\",\n\t\t\t\"Joan\", \"Evelyn\", \"Judith\", \"Andrea\", \"Hannah\", \"Megan\", \"Cheryl\", \"Jacqueline\", \"Martha\", \"Madison\",\n\t\t\t\"Teresa\", \"Gloria\", \"Sara\", \"Janice\", \"Ann\", \"Kathryn\", \"Abigail\", \"Sophia\", \"Frances\", \"Jean\",\n\t\t\t\"Alice\", \"Judy\", \"Isabella\", \"Julia\", \"Grace\", \"Amber\", \"Denise\", \"Danielle\", \"Marilyn\", \"Beverly\",\n\t\t\t\"Charlotte\", \"Natalie\", \"Theresa\", \"Diana\", \"Brittany\", \"Doris\", \"Kayla\", \"Alexis\", \"Lori\", \"Marie\",\n\t\t\t\"James\", \"Robert\", \"John\", \"Michael\", \"David\", \"William\", \"Richard\", \"Joseph\", \"Thomas\", \"Christopher\",\n\t\t\t\"Charles\", \"Daniel\", \"Matthew\", \"Anthony\", \"Mark\", \"Donald\", \"Steven\", \"Andrew\", \"Paul\", \"Joshua\",\n\t\t\t\"Kenneth\", \"Kevin\", \"Brian\", \"George\", \"Timothy\", \"Ronald\", \"Jason\", \"Edward\", \"Jeffrey\", \"Ryan\",\n\t\t\t\"Jacob\", \"Gary\", \"Nicholas\", \"Eric\", \"Jonathan\", \"Stephen\", \"Larry\", \"Justin\", \"Scott\", \"Brandon\",\n\t\t\t\"Benjamin\", \"Samuel\", \"Gregory\", \"Alexander\", \"Patrick\", \"Frank\", \"Raymond\", \"Jack\", \"Dennis\", \"Jerry\",\n\t\t\t\"Tyler\", \"Aaron\", \"Jose\", \"Adam\", \"Nathan\", \"Henry\", \"Zachary\", \"Douglas\", \"Peter\", \"Kyle\",\n\t\t\t\"Noah\", \"Ethan\", \"Jeremy\", \"Walter\", \"Christian\", \"Keith\", \"Roger\", \"Terry\", \"Austin\", \"Sean\",\n\t\t\t\"Gerald\", \"Carl\", \"Harold\", \"Dylan\", \"Arthur\", \"Lawrence\", \"Jordan\", \"Jesse\", \"Bryan\", \"Billy\",\n\t\t\t\"Bruce\", \"Gabriel\", \"Joe\", \"Logan\", \"Alan\", \"Juan\", \"Albert\", \"Willie\", \"Elijah\", \"Wayne\",\n\t\t\t\"Randy\", \"Vincent\", \"Mason\", \"Roy\", \"Ralph\", \"Bobby\", \"Russell\", \"Bradley\", \"Philip\", \"Eugene\"\n\t\t]\n}","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceDataGeneration extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'DataGeneration';\n\n\t\tthis.defaultData = require('./Fable-Service-DataGeneration-DefaultValues.json');\n\t}\n\n\t// Return a random integer between pMinimum and pMaximum\n\trandomIntegerBetween(pMinimum, pMaximum)\n\t{\n\t\treturn Math.floor(Math.random() * (pMaximum - pMinimum)) + pMinimum;\n\t}\n\t// Return a random integer up to the passed-in maximum\n\trandomIntegerUpTo(pMaximum)\n\t{\n\t\treturn this.randomIntegerBetween(0, pMaximum);\n\t}\n\t// Return a random integer between 0 and 9999999\n\trandomInteger()\n\t{\n\t\treturn Math.floor(Math.random()*this.defaultData.DefaultIntegerMaximum);\n\t}\n\n\n\trandomNumericString(pLength, pMaxNumber)\n\t{\n\t\tlet tmpLength = (typeof(pLength) === 'undefined') ? 10 : pLength;\n\t\tlet tmpMaxNumber = (typeof(pMaxNumber) === 'undefined') ? ((10 ** tmpLength) - 1) : pMaxNumber;\n\n\t\treturn this.services.DataFormat.stringPadStart(this.randomIntegerUpTo(tmpMaxNumber), pLength, '0');\n\t}\n\n\n\trandomMonth()\n\t{\n\t\treturn this.defaultData.MonthSet[this.randomIntegerUpTo(this.defaultData.MonthSet.length-1)];\n\t}\n\trandomDayOfWeek()\n\t{\n\t\treturn this.defaultData.WeekDaySet[this.randomIntegerUpTo(this.defaultData.WeekDaySet.length-1)];\n\t}\n\n\n\trandomColor()\n\t{\n\t\treturn this.defaultData.ColorSet[this.randomIntegerUpTo(this.defaultData.ColorSet.length-1)];\n\t}\n\n\n\trandomName()\n\t{\n\t\treturn this.defaultData.NameSet[this.randomIntegerUpTo(this.defaultData.NameSet.length-1)];\n\t}\n\trandomSurname()\n\t{\n\t\treturn this.defaultData.SurNameSet[this.randomIntegerUpTo(this.defaultData.SurNameSet.length-1)];\n\t}\n}\n\nmodule.exports = FableServiceDataGeneration;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Date management a la Moment using days.js\n*\n* @class DateManipulation\n*/\nclass DateManipulation extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'Dates';\n\n\t\tthis.dayJS = require('dayjs');\n\n\t\t// Include the `weekOfYear` plugin\n\t\tthis.plugin_weekOfYear = require('dayjs/plugin/weekOfYear');\n\t\tthis.dayJS.extend(this.plugin_weekOfYear);\n\t\t// Include the `weekday` plugin\n\t\tthis.plugin_weekday = require('dayjs/plugin/weekday');\n\t\tthis.dayJS.extend(this.plugin_weekday);\n\t\t// Include the `isoWeek` plugin\n\t\tthis.plugin_isoWeek = require('dayjs/plugin/isoWeek');\n\t\tthis.dayJS.extend(this.plugin_isoWeek);\n\t\t// Include the `timezone` plugin\n\t\tthis.plugin_timezone = require('dayjs/plugin/timezone');\n\t\tthis.dayJS.extend(this.plugin_timezone);\n\t\t// Include the `relativetime` plugin\n\t\tthis.plugin_relativetime = require('dayjs/plugin/relativeTime');\n\t\tthis.dayJS.extend(this.plugin_relativetime);\n\t\t// Include the `utc` plugin\n\t\tthis.plugin_utc = require('dayjs/plugin/utc');\n\t\tthis.dayJS.extend(this.plugin_utc);\n\t\t// Include the `advancedFormat` plugin\n\t\tthis.plugin_advancedFormat = require('dayjs/plugin/advancedFormat');\n\t\tthis.dayJS.extend(this.plugin_advancedFormat);\n\n\t\t// A developer can include locales if they want\n\t\t// You would do the following:\n\t\t// const localeDE = require('dayjs/locale/de');\n\t\t// _Fable.Dates.dayJS.locale('de');\n\t}\n}\n\nmodule.exports = DateManipulation;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceEnvironmentData extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'EnvironmentData';\n\n\t\tthis.Environment = `node.js`;\n\t}\n}\n\nmodule.exports = FableServiceEnvironmentData;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libFS = require('fs');\nconst libPath = require('path');\nconst libReadline = require('readline');\n\n\nclass FableServiceFilePersistence extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'FilePersistence';\n\n\t\tif (!this.options.hasOwnProperty('Mode'))\n\t\t{\n\t\t\tthis.options.Mode = parseInt('0777', 8) & ~process.umask();\n\t\t}\n\n\t\tthis.libFS = libFS;\n\t\tthis.libPath = libPath;\n\t\tthis.libReadline = libReadline;\n\t}\n\n\tjoinPath(...pPathArray)\n\t{\n\t\treturn libPath.resolve(...pPathArray);\n\t}\n\n\texistsSync(pPath)\n\t{\n\t\treturn libFS.existsSync(pPath);\n\t}\n\n\texists(pPath, fCallback)\n\t{\n\t\tlet tmpFileExists = this.existsSync(pPath);;\n\n\t\treturn fCallback(null, tmpFileExists);\n\t}\n\n\tappendFileSync(pFileName, pAppendContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.appendFileSync(pFileName, pAppendContent, tmpOptions);\n\t}\n\n\tdeleteFileSync(pFileName)\n\t{\n\t\treturn libFS.unlinkSync(pFileName);\n\t}\n\n\tdeleteFolderSync(pFileName)\n\t{\n\t\treturn libFS.rmdirSync(pFileName);\n\t}\n\n\treadFileSync(pFilePath, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.readFileSync(pFilePath, tmpOptions);\n\t}\n\n\treadFile(pFilePath, pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.readFile(pFilePath, tmpOptions, fCallback);\n\t}\n\n\twriteFileSync(pFileName, pFileContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFileSync(pFileName, pFileContent, tmpOptions);\n\t}\n\n\twriteFileSyncFromObject(pFileName, pObject)\n\t{\n\t\treturn this.writeFileSync(pFileName, JSON.stringify(pObject, null, 4));\n\t}\n\n\twriteFileSyncFromArray(pFileName, pFileArray)\n\t{\n\t\tif (!Array.isArray(pFileArray))\n\t\t{\n\t\t\tthis.log.error(`File Persistence Service attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).`);\n\t\t\treturn Error('Attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let i = 0; i < pFileArray.length; i++)\n\t\t\t{\n\t\t\t\treturn this.appendFileSync(pFileName, `${pFileArray[i]}\\n`);\n\t\t\t}\n\t\t}\n\t}\n\n\twriteFile(pFileName, pFileContent, pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFile(pFileName, pFileContent, tmpOptions, fCallback);\n\t}\n\n\tlineReaderFactory(pFilePath, fOnLine, fOnComplete, fOnError)\n\t{\n\t\tlet tmpLineReader = {};\n\n\t\tif (typeof(pFilePath) != 'string')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpLineReader.filePath = pFilePath;\n\n\t\ttmpLineReader.fileStream = libFS.createReadStream(tmpLineReader.filePath);\n\n\t\ttmpLineReader.reader = libReadline.createInterface({ input: tmpLineReader.fileStream, crlfDelay: Infinity });\n\n\t\tif (typeof(fOnError) === 'function')\n\t\t{\n\t\t\ttmpLineReader.reader.on('error', fOnError);\n\t\t}\n\n\t\ttmpLineReader.reader.on('line', (typeof(fOnLine) === 'function') ? fOnLine : () => {});\n\n\t\tif (typeof(fOnComplete) === 'function')\n\t\t{\n\t\t\ttmpLineReader.reader.on('close', fOnComplete);\n\t\t}\n\n\t\treturn tmpLineReader;\n\t}\n\n\t// Folder management\n\tmakeFolderRecursive(pParameters, fCallback)\n\t{\n\t\tlet tmpParameters = pParameters;\n\n\t\tif (typeof(pParameters) == 'string')\n\t\t{\n\t\t\ttmpParameters = { Path: pParameters };\n\t\t}\n\t\telse if (typeof(pParameters) !== 'object')\n\t\t{\n\t\t\tfCallback(new Error('Parameters object or string not properly passed to recursive folder create.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(tmpParameters.Path) !== 'string'))\n\t\t{\n\t\t\tfCallback(new Error('Parameters object needs a path to run the folder create operation.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!tmpParameters.hasOwnProperty('Mode'))\n\t\t{\n\t\t\ttmpParameters.Mode = this.options.Mode;\n\t\t}\n\n\t\t// Check if we are just starting .. if so, build the initial state for our recursive function\n\t\tif (typeof(tmpParameters.CurrentPathIndex) === 'undefined')\n\t\t{\n\t\t\t// Build the tools to start recursing\n\t\t\ttmpParameters.ActualPath = libPath.normalize(tmpParameters.Path);\n\t\t\ttmpParameters.ActualPathParts = tmpParameters.ActualPath.split(libPath.sep);\n\t\t\ttmpParameters.CurrentPathIndex = 0;\n\t\t\ttmpParameters.CurrentPath = '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is not our first run, so we will continue the recursion.\n\t\t\t// Build the new base path\n\t\t\tif (tmpParameters.CurrentPath == libPath.sep)\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\n\t\t\t// Increment the path index\n\t\t\ttmpParameters.CurrentPathIndex++;\n\t\t}\n\n\t\t// Check if the path is fully complete\n\t\tif (tmpParameters.CurrentPathIndex >= tmpParameters.ActualPathParts.length)\n\t\t{\n\t\t\treturn fCallback(null);\n\t\t}\n\n\t\t// Check if the path exists (and is a folder)\n\t\tlibFS.open(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], 'r',\n\t\t\t(pError, pFileDescriptor)=>\n\t\t\t{\n\t\t\t\tif (pFileDescriptor)\n\t\t\t\t{\n\t\t\t\t\tlibFS.closeSync(pFileDescriptor);\n\t\t\t\t}\n\n\t\t\t\tif (pError && pError.code=='ENOENT')\n\t\t\t\t{\n\t\t\t\t\t/* Path doesn't exist, create it */\n\t\t\t\t\tlibFS.mkdir(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], tmpParameters.Mode,\n\t\t\t\t\t\t(pCreateError) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!pCreateError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// We have now created our folder and there was no error -- continue.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (pCreateError.code =='EEXIST')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// The folder exists -- our dev might be running this in parallel/async/whatnot.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(pCreateError.code);\n\t\t\t\t\t\t\t\treturn fCallback(pCreateError);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nmodule.exports = FableServiceFilePersistence;","const libFableServiceBase = require('fable-serviceproviderbase');\n\n/**\n* Precedent Meta-Templating\n* @author      Steven Velozo <steven@velozo.com>\n* @description Process text stream trie and postfix tree, parsing out meta-template expression functions.\n*/\nconst libWordTree = require(`./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js`);\nconst libStringParser = require(`./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js`);\n\n\nclass FableServiceMetaTemplate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'MetaTemplate';\n\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser(this.fable);\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\taddPatternAsync(pPatternStart, pPatternEnd, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternAsync(pPatternStart, pPatternEnd, pParserPromise);\n\t}\n\n\taddPatternBoth(pPatternStart, pPatternEnd, pParser, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternBoth(pPatternStart, pPatternEnd, pParser, pParserPromise);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData, fCallback)\n\t{\n\t\tif (this.LogNoisiness > 4)\n\t\t{\n\t\t\tthis.fable.log.trace(`Metatemplate parsing template string [${pString}] where the callback is a ${typeof(fCallback)}`, {TemplateData:pData});\n\t\t}\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceMetaTemplate;","/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor(pFable)\n\t{\n\t\tthis.fable = pFable;\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse') && (!pParserState.Pattern.isAsync || pParserState.Pattern.isBoth))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.fable.log.info(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync && !pParserState.Pattern.isBoth)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.fable.log.info(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texecutePatternAsync(pParserState, pData, fCallback)\n\t{\n\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t// Trim the start and end tags off the output buffer now\n\t\tif (pParserState.Pattern.isAsync && !pParserState.Pattern.isBoth)\n\t\t{\n\t\t\t// Run the function\n\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.fable.log.info(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\treturn fCallback();\n\t\t\t\t});\n\t\t}\n\t\telse if (pParserState.Pattern.isAsync && pParserState.Pattern.isBoth)\n\t\t{\n\t\t\t// Run the function when both async and non async were provided with the pattern\n\t\t\treturn pParserState.Pattern.ParseAsync(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.fable.log.info(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\treturn fCallback();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Run the t*mplate function\n\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacterAsync (pCharacter, pParserState, pData, fCallback)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.executePatternAsync(pParserState, pData, fCallback);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.executePatternAsync(pParserState, pData, fCallback);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\telse\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\t// Without this, templates of all sizes work fine in node.  They do not in the browser.\n\t\t// Trying this out without the timout on non asynchronous template flips.\n\t\treturn fCallback();\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t * @param {function} fCallback - The callback function to call when the parse is complete\n\t */\n\tparseString (pString, pParseTree, pData, fCallback)\n\t{\n\t\tif (typeof(fCallback) !== 'function')\n\t\t{\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\t\tfor (var i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: This is not fast.\n\t\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData, fCallback);\n\t\t\t}\n\n\t\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\t\treturn tmpParserState.Output;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is the async mode\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\t\t\ttmpParserState.Asynchronous = true;\n\n\t\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tfor (let i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\ttmpAnticipate.anticipate(\n\t\t\t\t\t(fCallback) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.parseCharacterAsync(pString[i], tmpParserState, pData, fCallback);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\t// Flush the remaining data\n\t\t\t\t\tthis.flushOutputBuffer(tmpParserState);\n\t\t\t\t\treturn fCallback(pError, tmpParserState.Output);\n\t\t\t\t});\n\t\t}\n\t}\n}\n\nmodule.exports = StringParser;\n","/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn tmpLeaf;\n\t}\n\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPatternAsync\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParserAsync - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternAsync (pPatternStart, pPatternEnd, fParserAsync)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParserAsync);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t}\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPatternBoth\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternBoth (pPatternStart, pPatternEnd, fParser, fParserAsync)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParser);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t\ttmpLeaf.isBoth = true;\n\t\t\t// When a leaf has both async and non-async versions of the functions, we store the async in fParserAsync.\n\t\t\ttmpLeaf.ParseAsync = fParserAsync;\n\t\t}\n\t}\n}\n\nmodule.exports = WordTree;\n","module.exports = (\n    {\n        \"Metadata\": {\n            \"UUID\": false,\n            \"Hash\": false,\n\n            \"Name\": \"\",\n            \"Summary\": \"\",\n\n            \"Version\": 0\n        },\n        \"Status\": {\n            \"Completed\": false,\n\n            \"CompletionProgress\": 0,\n            \"CompletionTimeElapsed\": 0,\n\n            \"TimeStart\": 0,\n            \"TimeEnd\": 0\n        },\n        \"Steps\": [],\n        \"Errors\": [],\n        \"Log\": []\n    }\n);","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst _OperationStatePrototypeString = JSON.stringify(require('./Fable-Service-Operation-DefaultSettings.js'));\n\nclass FableOperation extends libFableServiceBase\n{\n\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\t// Timestamps will just be the long ints\n\t\tthis.timeStamps = {};\n\t\t// ProgressTrackers have an object format of: {Hash:'SomeHash',EndTime:UINT,CurrentTime:UINT,TotalCount:INT,CurrentCount:INT}\n\t\tthis.progressTrackers = {};\n\n        this.serviceType = 'PhasedOperation';\n\n\t\tthis.state = JSON.parse(_OperationStatePrototypeString);\n\n\t\tthis.stepMap = {};\n\t\tthis.stepFunctions = {};\n\n\t\t// Match the service instantiation to the operation.\n\t\tthis.state.Metadata.Hash = this.Hash;\n\t\tthis.state.Metadata.UUID = this.UUID;\n\n\t\tthis.state.Metadata.Name = (typeof(this.options.Name) == 'string') ? this.options.Name : `Unnamed Operation ${this.state.Metadata.UUID}`;\n\t\tthis.name = this.state.Metadata.Name;\n\n\t\tthis.log = this;\n\t}\n\n\texecute(fExecutionCompleteCallback)\n\t{\n\t\tif (this.state.Status.TimeStart)\n\t\t{\n\t\t\treturn fExecutionCompleteCallback(new Error(`Operation [${this.state.Metadata.UUID}] ${this.state.Metadata.Name} has already been executed!`));\n\t\t}\n\n\t\tthis.state.Status.TimeStart = +new Date();\n\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\tfor (let i = 0; i < this.state.Steps; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(this.stepFunctions[this.state.Steps[i].GUIDStep].bind(this));\n\t\t}\n\n\t\t// Wait for the anticipation to complete\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tthis.state.Status.TimeEnd = +new Date();\n\t\t\t\treturn fExecutionCompleteCallback();\n\t\t\t});\n\t}\n\n/*\n\tTODO: I've gone back and forth on whether this should be an object, JSON \n\tobject prototype, or set of functions here.  Discuss with colleagues!\n*/\n\taddStep(pGUIDStep, fStepFunction, pStepName, pStepDescription, pStepMetadata)\n\t{\n\t\tlet tmpStep = {};\n\t\ttmpStep.GUIDStep = (typeof(pGUIDStep) !== 'undefined') ? pGUIDStep : `STEP-${this.state.Steps.length}-${this.fable.DataGeneration.randomNumericString()}`;\n\t\ttmpStep.Name = (typeof(pStepName) !== 'undefined') ? pStepName : `Step [${tmpStep.GUIDStep}]`;\n\t\ttmpStep.Description = (typeof(pStepDescription) !== 'undefined') ? pStepDescription : `Step execution of ${tmpStep.Name}.`;\n\t\t// TODO: Right now this allows an Array... do we want to block that?\n\t\ttmpStep.Metadata = (typeof(pStepMetadata) === 'object') ? pStepMetadata : {};\n\n\t\ttmpStep.TimeStart = false;\n\t\ttmpStep.TimeEnd = false;\n\n\t\t// There is an array of steps, in the Operation State itself ... push a step there\n\t\tthis.state.Steps.push(tmpStep);\n\n\t\tthis.stepMap[tmpStep.GUIDStep]\n\t\tthis.stepFunctions[tmpStep.GUIDStep] = fStepFunction;\n\n\t\tthis.state.Status.StepCount++;\n\t\treturn tmpStep;\n\t}\n\n\tgetStep(pGUIDStep)\n\t{\n\t\tif (this.stepMap.hasOwnProperty(pGUIDStep))\n\t\t{\n\t\t\treturn this.stepMap[pGUIDStep];\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tstartStep(pGUIDStep)\n\t{\n\t\tlet tmpStep = this.getStep(pGUIDStep);\n\n\t\tif (tmpStep === false)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpStep.TimeStart = +new Date();\n\n\t\treturn tmpStep;\n\t}\n\n\tstopStep(pGUIDStep)\n\t{\n\t\tlet tmpStep = this.getStep(pGUIDStep);\n\n\t\tif (tmpStep === false)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpStep.TimeEnd = +new Date();\n\n\t\treturn tmpStep;\n\t}\n\n\twriteOperationLog(pLogLevel, pLogText, pLogObject)\n\t{\n\t\tthis.state.Log.push(`[${new Date().toUTCString()}]-[${pLogLevel}]: ${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Log.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\twriteOperationErrors(pLogText, pLogObject)\n\t{\n\t\tthis.state.Errors.push(`${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Errors.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('TRACE', pLogText, pLogObject);\n\t\tthis.fable.log.trace(pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('DEBUG', pLogText, pLogObject);\n\t\tthis.fable.log.debug(pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('INFO', pLogText, pLogObject);\n\t\tthis.fable.log.info(pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('WARN', pLogText, pLogObject);\n\t\tthis.fable.log.warn(pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('ERROR', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.error(pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('FATAL', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.fatal(pLogText, pLogObject);\n\t}\n\n\n\t/************************************************************************\n\t * BEGINNING OF -->  Telemetry Helpers\n\t */\n\tcreateTimeStamp(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tthis.timeStamps[tmpTimeStampHash] = +new Date();\n\t\treturn this.timeStamps[tmpTimeStampHash];\n\t}\n\n\tgetTimeDelta(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tif (this.timeStamps.hasOwnProperty(tmpTimeStampHash))\n\t\t{\n\t\t\tlet tmpEndTime = +new Date();\n\t\t\treturn tmpEndTime-this.timeStamps[tmpTimeStampHash];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tlogTimeDelta(pTimeStampHash, pMessage)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : `Elapsed for ${tmpTimeStampHash}: `;\n\t\tlet tmpOperationTime = this.getTimeDelta(pTimeStampHash);\n\t\tthis.info(tmpMessage +' ('+tmpOperationTime+'ms)');\n\t\treturn tmpOperationTime;\n\t}\n\n\tcreateProgressTracker(pTotalOperations, pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpTotalOperations = (typeof(pTotalOperations) == 'number') ? pTotalOperations : 100;\n\n\t\tlet tmpProgressTracker = (\n\t\t\t{\n\t\t\t\tHash: tmpProgressTrackerHash,\n\t\t\t\tStartTime: this.createTimeStamp(tmpProgressTrackerHash),\n\t\t\t\tEndTime: 0,\n\t\t\t\tCurrentTime: 0,\n\t\t\t\tPercentComplete: -1,\n\t\t\t\tAverageOperationTime: -1,\n\t\t\t\tEstimatedCompletionTime: -1,\n\t\t\t\tTotalCount: tmpTotalOperations,\n\t\t\t\tCurrentCount:-1\n\t\t\t});\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash] = tmpProgressTracker;\n\n\t\treturn tmpProgressTracker;\n\t}\n\n\tsolveProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tlet tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\ttmpProgressTracker.CurrentTime = this.getTimeDelta(tmpProgressTracker.Hash);\n\n\t\tif ((tmpProgressTracker.CurrentCount > 0) && (tmpProgressTracker.TotalCount > 0))\n\t\t{\n\t\t\ttmpProgressTracker.PercentComplete = (tmpProgressTracker.CurrentCount / tmpProgressTracker.TotalCount) * 100.0;\n\t\t}\n\n\t\tif ((tmpProgressTracker.CurrentCount > 0) && (tmpProgressTracker.CurrentTime > 0))\n\t\t{\n\t\t\ttmpProgressTracker.AverageOperationTime = tmpProgressTracker.CurrentTime / tmpProgressTracker.CurrentCount;\n\t\t}\n\n\t\tif ((tmpProgressTracker.CurrentCount < tmpProgressTracker.TotalCount) && (tmpProgressTracker.AverageOperationTime > 0))\n\t\t{\n\t\t\ttmpProgressTracker.EstimatedCompletionTime = (tmpProgressTracker.TotalCount - tmpProgressTracker.CurrentCount) * tmpProgressTracker.AverageOperationTime;\n\t\t}\n\t}\n\n\tupdateProgressTrackerStatus(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\n\t\tif (isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = tmpCurrentOperations;\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tincrementProgressTrackerStatus(pProgressTrackerHash, pIncrementSize)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpIncrementSize = parseInt(pIncrementSize);\n\n\t\tif (isNaN(tmpIncrementSize))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = this.progressTrackers[tmpProgressTrackerHash].CurrentCount + tmpIncrementSize;\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tsetProgressTrackerEndTime(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (!isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\tthis.updateProgressTrackerStatus(tmpProgressTrackerHash, tmpCurrentOperations);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].EndTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tprintProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTrackerHash} does not exist!  No stats to display.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\t\tif (tmpProgressTracker.CurrentCount < 1)\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} has no completed operations.  ${tmpProgressTracker.CurrentTime}ms have elapsed since it was started.`);\n\t\t\t}\n\t\t\telse if (tmpProgressTracker.EndTime < 1)\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} is ${tmpProgressTracker.PercentComplete.toFixed(3)}% completed - ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations over ${tmpProgressTracker.CurrentTime}ms (median ${tmpProgressTracker.AverageOperationTime.toFixed(3)} per).  Estimated completion in ${tmpProgressTracker.EstimatedCompletionTime.toFixed(0)}ms or ${(tmpProgressTracker.EstimatedCompletionTime / 1000 / 60).toFixed(2)}minutes`)\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} is done and completed ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations in ${tmpProgressTracker.EndTime}ms.`)\n\t\t\t}\n\t\t}\n\t}\n\t/*\n\t * END OF       -->  Logging and Telemetry Helpers\n\t ************************************************************************/\n}\n\nmodule.exports = FableOperation;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libSimpleGet = require('simple-get');\nconst libCookie = require('cookie');\n\nclass FableServiceRestClient extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.TraceLog = false;\n\t\tif (this.options.TraceLog || this.fable.TraceLog)\n\t\t{\n\t\t\tthis.TraceLog = true;\n\t\t}\n\n\t\tthis.dataFormat = this.fable.services.DataFormat;\n\n\t\tthis.serviceType = 'RestClient';\n\n\t\tthis.cookie = false;\n\n\t\t// This is a function that can be overridden, to allow the management\n\t\t// of the request options before they are passed to the request library.\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tget simpleGet()\n\t{\n\t\treturn libSimpleGet;\n\t}\n\n\tprepareCookies(pRequestOptions)\n\t{\n\t\tif (this.cookie)\n\t\t{\n\t\t\tlet tmpCookieObject = this.cookie;\n\t\t\tif (!pRequestOptions.hasOwnProperty('headers'))\n\t\t\t{\n\t\t\t\tpRequestOptions.headers = {};\n\t\t\t}\n\t\t\tlet tmpCookieKeys = Object.keys(tmpCookieObject);\n\t\t\tif (tmpCookieKeys.length > 0)\n\t\t\t{\n\t\t\t\t// Only grab the first for now.\n\t\t\t\tpRequestOptions.headers.cookie = libCookie.serialize(tmpCookieKeys[0], tmpCookieObject[tmpCookieKeys[0]]);\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn pRequestOptions;\n\t}\n\n\tpreRequest(pOptions)\n\t{\n\t\t// Validate the options object\n\t\tlet tmpOptions = this.prepareCookies(pOptions);\n\n\t\t// Prepend a string to the URL if it exists in the Fable Config\n\t\tif (this.fable.settings.hasOwnProperty('RestClientURLPrefix'))\n\t\t{\n\t\t\ttmpOptions.url = this.fable.settings.RestClientURLPrefix + tmpOptions.url;\n\t\t}\n\n\t\treturn this.prepareRequestOptions(tmpOptions);\n\t}\n\n\texecuteChunkedRequest(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpData.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpData);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteChunkedRequestBinary(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\ttmpOptions.json = false;\n\t\ttmpOptions.encoding = null;\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpDataBuffer = false;\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: Potentially create a third option that streams this to a file?  So it doesn't have to hold it all in memory.\n\t\t\t\t\t\tif (!tmpDataBuffer)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.from(pChunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.concat([tmpDataBuffer, pChunk]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpDataBuffer.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpDataBuffer);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteJSONRequest(pOptions, fCallback)\n\t{\n\t\tpOptions.json = true;\n\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\tif (!tmpOptions.hasOwnProperty('headers'))\n\t\t{\n\t\t\ttmpOptions.headers = {};\n\t\t}\n\t\t/* Automated headers break some APIs\n\t\tif (!tmpOptions.headers.hasOwnProperty('Content-Type'))\n\t\t{\n\t\t\ttmpOptions.headers['Content-Type'] = 'application/json';\n\t\t}\n\t\t*/\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} JSON request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpJSONData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpJSONData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> JSON ${tmpOptions.method} completed - received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, JSON.parse(tmpJSONData));\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetJSON(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeJSONRequest(tmpRequestOptions, fCallback);\n\t}\n\n\tputJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PUT JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PUT';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpostJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`POST JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'POST';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpatchJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PATCH JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PATCH';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\theadJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`HEAD JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'HEAD';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tdelJSON(pOptions, fCallback)\n\t{\n\t\tpOptions.method = 'DELETE';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tgetRawText(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeChunkedRequest(tmpRequestOptions, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceRestClient;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceTemplate extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Template';\n\n\t\t// These are the exact regex's used in lodash/underscore\n\t\t// TODO: Switch this to precedent\n\t\tthis.Matchers = (\n\t\t\t{\n\t\t\t\tEvaluate: /<%([\\s\\S]+?)%>/g,\n\t\t\t\tInterpolate: /<%=([\\s\\S]+?)%>/g,\n\t\t\t\tEscaper: /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g,\n\t\t\t\tUnescaper: /\\\\(\\\\|'|r|n|t|u2028|u2029)/g,\n\t\t\t\t// This is how underscore does it, so we are keeping it for now.\n\t\t\t\tGuaranteedNonMatch: /.^/\n\t\t\t});\n\n\t\t// This is a helper for the escaper and unescaper functions.\n\t\t// Right now we are going to keep what underscore is doing, but, not forever.\n\t\tthis.templateEscapes = {\n\t\t\t'\\\\': '\\\\',\n\t\t\t\"'\": \"'\",\n\t\t\t'r': '\\r',\n\t\t\t'\\r': 'r',\n\t\t\t'n': '\\n',\n\t\t\t'\\n': 'n',\n\t\t\t't': '\\t',\n\t\t\t'\\t': 't',\n\t\t\t'u2028': '\\u2028',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'u2029': '\\u2029',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\t// This is defined as such to underscore that it is a dynamic programming\n\t\t// function on this class.\n\t\tthis.renderFunction = false;\n        this.templateString = false;\n\t}\n\n\trenderTemplate(pData)\n\t{\n\t\treturn this.renderFunction(pData);\n\t}\n\n\ttemplateFunction(pData)\n\t{\n\t\tlet fRenderTemplateBound = this.renderTemplate.bind(this);\n\t\treturn fRenderTemplateBound;\n\t}\n\n\tbuildTemplateFunction(pTemplateText, pData)\n\t{\n\t\t// For now this is being kept in a weird form ... this is to mimic the old\n\t\t// underscore code until this is rewritten using precedent.\n\t\tthis.TemplateSource = \"__p+='\" + pTemplateText\n\t\t\t.replace(this.Matchers.Escaper,\n\t\t\t\t(pMatch)=>\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\${this.templateEscapes[pMatch]}`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Interpolate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `'+\\n(${decodeURIComponent(pCode)})+\\n'`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Evaluate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `';\\n${decodeURIComponent(pCode)}\\n;__p+='`;\n\t\t\t\t}) + `';\\n`;\n\n\n\t\tthis.TemplateSource = `with(pTemplateDataObject||{}){\\n${this.TemplateSource}}\\n`;\n\t\tthis.TemplateSource = `var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n${this.TemplateSource}return __p;\\n`;\n\n\t\tthis.renderFunction = new Function('pTemplateDataObject', this.TemplateSource);\n\n\t\tif (typeof(pData) != 'undefined')\n\t\t{\n\t\t\treturn this.renderFunction(pData);\n\t\t}\n\n\t\t// Provide the compiled function source as a convenience for build time\n\t\t// precompilation.\n\t\tthis.TemplateSourceCompiled = 'function(obj){\\n' + this.TemplateSource + '}';\n\n\t\treturn this.templateFunction();\n\t}\n}\n\nmodule.exports = FableServiceTemplate;","const libFableServiceBase = require('fable-serviceproviderbase');\n\n// TODO: These are still pretty big -- consider the smaller polyfills\nconst libAsyncWaterfall = require('async.waterfall');\nconst libAsyncEachLimit = require('async.eachlimit');\n\nconst libBigNumber = require('big.js');\n\nclass FableServiceUtility extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\tthis.templates = {};\n\n\t\t// These two functions are used extensively throughout\n\t\tthis.waterfall = libAsyncWaterfall;\n\t\tthis.eachLimit = libAsyncEachLimit;\n\n\t\tthis.bigNumber = libBigNumber;\n\t}\n\n\t// Underscore and lodash have a behavior, _.extend, which merges objects.\n\t// Now that es6 gives us this, use the native thingy.\n\t// Nevermind, the native thing is not stable enough across environments\n\t// Basic shallow copy\n\textend(pDestinationObject, ...pSourceObjects)\n\t{\n\t\tfor (let i = 0; i < pSourceObjects.length; i++)\n\t\t{\n\t\t\tlet tmpSourceObject = pSourceObjects[i];\n\t\t\tif (typeof(tmpSourceObject) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpObjectProperties = Object.keys(tmpSourceObject);\n\t\t\t\tfor (let k = 0; k < tmpObjectProperties.length; k++)\n\t\t\t\t{\n\t\t\t\t\tpDestinationObject[tmpObjectProperties[k]] = tmpSourceObject[tmpObjectProperties[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pDestinationObject;\n\t}\n\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\ttemplate(pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.instantiateServiceProviderWithoutRegistration('Template');\n\t\treturn tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t}\n\n\t// Build a template function from a template hash, and, register it with the service provider\n\tbuildHashedTemplate(pTemplateHash, pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.instantiateServiceProvider('Template', {}, pTemplateHash);\n\t\tthis.templates[pTemplateHash] = tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t\treturn this.templates[pTemplateHash];\n\t}\n\n\t// This is a safe, modern version of chunk from underscore\n\t// Algorithm pulled from a mix of these two polyfills:\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\n\t// https://youmightnotneed.com/lodash\n\t// This implementation was most tolerant in browsers.  Uglify can fix the rest.\n\tchunk (pInput, pChunkSize, pChunkCache)\n\t{\n\t\tlet tmpInputArray = [...pInput];\n\t\t// Note lodash defaults to 1, underscore defaults to 0\n\t\tlet tmpChunkSize = (typeof(pChunkSize) == 'number') ? pChunkSize : 0;\n\t\tlet tmpChunkCache = (typeof(pChunkCache) != 'undefined') ? pChunkCache : [];\n\n\t\tif (tmpChunkSize <= 0)\n\t\t{\n\t\t\treturn tmpChunkCache;\n\t\t}\n\n\t\twhile (tmpInputArray.length)\n\t\t{\n\t\t\ttmpChunkCache.push(tmpInputArray.splice(0, tmpChunkSize));\n\t\t}\n\n\t\treturn tmpChunkCache;\n\t}\n\n\t// Convert an ISO string to a javascript date object\n\t// Adapted from https://stackoverflow.com/a/54751179\n\t//\n\t// Takes strings like: 2022-11-04T11:34:45.000Z\n\t//                and: 1986-06-11T09:34:46.012Z+0200\n\t// ... and converts them into javascript timestamps, following the directions of the timezone stuff.\n\t//\n\t// This is not meant to replace the more complex libraries such as moment or luxon.\n\t// This *is* meant to be a simple, small, and fast way to convert ISO strings to dates in engines\n\t// with ultra limited JS capabilities where those don't work.\n\tisoStringToDate (pISOString)\n\t{\n\t\tif (!this.fable.hasOwnProperty('Dates'))\n\t\t{\n\t\t\tthis.fable.instantiateServiceProvider('Dates');\n\t\t}\n\n\t\tlet tmpDate = false;\n\n\t\ttry\n\t\t{\n\t\t\ttmpDate = this.fable.Dates.dayJS.utc(pISOString);\n\t\t}\n\t\tcatch(pError)\n\t\t{\n\t\t\t// TODO: Should this throw?  Doubtful.\n\t\t\tthis.fable.log.error(`Could not parse date string ${pISOString} with dayJS.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (tmpDate)\n\t\t{\n\t\t\treturn tmpDate.toDate();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nmodule.exports = FableServiceUtility;","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\tif ($defineProperty) {\n\t\ttry {\n\t\t\t$defineProperty({}, 'a', { value: 1 });\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// IE 8 has a broken defineProperty\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!hasPropertyDescriptors()) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\nvar test = {\n\tfoo: {}\n};\n\nvar $Object = Object;\n\nmodule.exports = function hasProto() {\n\treturn { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {(o: {}, p: PropertyKey) => p is keyof o} */\nmodule.exports = bind.call(call, $hasOwn);\n","var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// When a boxed property is passed in, it should have quotes of some\n// kind around it.\n//\n// For instance:\n// \t\tMyValues['Name']\n// \t\tMyValues[\"Age\"]\n// \t\tMyValues[`Cost`]\n//\n// This function removes the wrapping quotes.\n//\n// Please note it *DOES NOT PARSE* template literals, so backticks just\n// end up doing the same thing as other quote types.\n//\n// TODO: Should template literals be processed?  If so what state do they have access to?  That should happen here if so.\n// TODO: Make a simple class include library with these\nconst cleanWrapCharacters = (pCharacter, pString) =>\n{\n\tif (pString.startsWith(pCharacter) && pString.endsWith(pCharacter))\n\t{\n\t\treturn pString.substring(1, pString.length - 1);\n\t}\n\telse\n\t{\n\t\treturn pString;\n\t}\n};\n\nmodule.exports = cleanWrapCharacters;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Hash Translation\n*\n* This is a very simple translation table for hashes, which allows the same schema to resolve\n* differently based on a loaded translation table.\n*\n* This is to prevent the requirement for mutating schemas over and over again when we want to\n* reuse the structure but look up data elements by different addresses.\n*\n* One side-effect of this is that a translation table can \"override\" the built-in hashes, since\n* this is always used to resolve hashes before any of the functionCallByHash(pHash, ...) perform\n* their lookups by hash.\n*\n* @class ManyfestHashTranslation\n*/\nclass ManyfestHashTranslation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n        this.translationTable = {};\n\t}\n\n    translationCount()\n    {\n        return Object.keys(this.translationTable).length;\n    }\n\n    addTranslation(pTranslation)\n    {\n        // This adds a translation in the form of:\n        // { \"SourceHash\": \"DestinationHash\", \"SecondSourceHash\":\"SecondDestinationHash\" }\n        if (typeof(pTranslation) != 'object')\n        {\n            this.logError(`Hash translation addTranslation expected a translation be type object but was passed in ${typeof(pTranslation)}`);\n            return false;\n        }\n\n        let tmpTranslationSources = Object.keys(pTranslation)\n\n        tmpTranslationSources.forEach(\n            (pTranslationSource) =>\n            {\n                if (typeof(pTranslation[pTranslationSource]) != 'string')\n                {\n                    this.logError(`Hash translation addTranslation expected a translation destination hash for [${pTranslationSource}] to be a string but the referrant was a ${typeof(pTranslation[pTranslationSource])}`);\n                }\n                else\n                {\n                    this.translationTable[pTranslationSource] = pTranslation[pTranslationSource];\n                }\n            });\n    }\n\n    removeTranslationHash(pTranslationHash)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslationHash))\n        {\n            delete this.translationTable[pTranslationHash];\n        }\n    }\n\n    // This removes translations.\n    // If passed a string, just removes the single one.\n    // If passed an object, it does all the source keys.\n    removeTranslation(pTranslation)\n    {\n        if (typeof(pTranslation) == 'string')\n        {\n            this.removeTranslationHash(pTranslation);\n            return true;\n        }\n        else if (typeof(pTranslation) == 'object')\n        {\n            let tmpTranslationSources = Object.keys(pTranslation)\n\n            tmpTranslationSources.forEach(\n                (pTranslationSource) =>\n                {\n                    this.removeTranslation(pTranslationSource);\n                });\n            return true;\n        }\n        else\n        {\n            this.logError(`Hash translation removeTranslation expected either a string or an object but the passed-in translation was type ${typeof(pTranslation)}`);\n            return false;\n        }\n    }\n\n    clearTranslations()\n    {\n        this.translationTable = {};\n    }\n\n    translate(pTranslation)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslation))\n        {\n            return this.translationTable[pTranslation];\n        }\n        else\n        {\n            return pTranslation;\n        }\n    }\n}\n\nmodule.exports = ManyfestHashTranslation;","/**\n* @author <steven@velozo.com>\n*/\n\n/**\n* Manyfest simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n\n    console.log(`[Manyfest] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject));\n};\n\nmodule.exports = logToConsole;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Resolver\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressResolverCheckAddressExists\n*/\nclass ManyfestObjectAddressResolverCheckAddressExists\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// Check if an address exists.\n\t//\n\t// This is necessary because the getValueAtAddress function is ambiguous on\n\t// whether the element/property is actually there or not (it returns\n\t// undefined whether the property exists or not).  This function checks for\n\t// existance and returns true or false dependent.\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\t// TODO: Should these throw an error?\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Check if the property exists.\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName].hasOwnProperty(tmpBoxedPropertyReference);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Use the new in operator to see if the element is in the array\n\t\t\t\t\treturn (tmpBoxedPropertyNumber in pObject[tmpBoxedPropertyName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Check if the property exists\n\t\t\t\treturn pObject.hasOwnProperty(pAddress);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// Because this is an impossible address, the property doesn't exist\n\t\t\t\t\t// TODO: Should we throw an error in this condition?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverCheckAddressExists;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - DeleteValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverDeleteValue\n*/\nclass ManyfestObjectAddressResolverDeleteValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// TODO: Dry me\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Count from the end to the beginning so splice doesn't %&%#$ up the array\n\t\t\t\tfor (let i = tmpInputArray.length - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Delete elements end to beginning\n\t\t\t\t\t\ttmpInputArray.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tdelete pObject[tmpObjectPropertyName];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tdelete pObject[pAddress];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverDeleteValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - GetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverGetValue\n*/\nclass ManyfestObjectAddressResolverGetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress, pParentAddress, pRootObject)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// Set the root object to the passed-in object if it isn't set yet.  This is expected to be the root object.\n\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// Adding simple back-navigation in objects\n\t\tif (tmpSeparatorIndex == 0)\n\t\t{\n\t\t\t// Given an address of \"Bundle.Contract.IDContract...Project.IDProject\" the ... would be interpreted as two back-navigations from IDContract.\n\t\t\t// When the address is passed in, though, the first . is already eliminated.  So we can count the dots.\n\t\t\tlet tmpParentAddressParts = tmpParentAddress.split('.');\n\n\t\t\tlet tmpBackNavigationCount = 0;\n\n\t\t\t// Count the number of dots\n\t\t\tfor (let i = 0; i < pAddress.length; i++)\n\t\t\t{\n\t\t\t\tif (pAddress.charAt(i) != '.')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttmpBackNavigationCount++;\n\t\t\t}\n\n\t\t\tlet tmpParentAddressLength = tmpParentAddressParts.length - tmpBackNavigationCount;\n\n\t\t\tif (tmpParentAddressLength < 0)\n\t\t\t{\n\t\t\t\t// We are trying to back navigate more than we can.\n\t\t\t\t// TODO: Should this be undefined or should we bank out at the bottom and try to go forward?\n\t\t\t\t// This seems safest for now.\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are trying to back navigate to a parent object.\n\t\t\t\t// Recurse with the back-propagated parent address, and, the new address without the back-navigation dots.\n\t\t\t\tlet tmpRecurseAddress = pAddress.slice(tmpBackNavigationCount);\n\t\t\t\tif (tmpParentAddressLength > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpRecurseAddress = `${tmpParentAddressParts.slice(0, tmpParentAddressLength).join('.')}.${tmpRecurseAddress}`;\n\t\t\t\t}\n\t\t\t\tthis.logInfo(`Back-navigation detected.  Recursing back to address [${tmpRecurseAddress}]`);\n\t\t\t\treturn this.getValueAtAddress(tmpRootObject, tmpRecurseAddress);\n\t\t\t}\n\t\t}\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\tlet tmpOutputArray = [];\n\t\t\t\tfor (let i = 0; i < tmpInputArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOutputArray.push(tmpInputArray[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpOutputArray;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn pObject[tmpObjectPropertyName];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tif (typeof(pObject[pAddress]) != null)\n\t\t\t\t{\n\t\t\t\t\treturn pObject[pAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverGetValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - SetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressSetValue\n*/\nclass ManyfestObjectAddressSetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyReference] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the time in recursion to set the value in the object\n\t\t\t\tpObject[pAddress] = pValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressSetValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Generation\n*\n* Automagically generate addresses and properties based on a passed-in object,\n* to be used for easy creation of schemas.  Meant to simplify the lives of\n* developers wanting to create schemas without typing a bunch of stuff.\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressGeneration\n*/\nclass ManyfestObjectAddressGeneration\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// generateAddressses\n\t//\n\t// This flattens an object into a set of key:value pairs for *EVERY SINGLE\n\t// POSSIBLE ADDRESS* in the object.  It can get ... really insane really\n\t// quickly.  This is not meant to be used directly to generate schemas, but\n\t// instead as a starting point for scripts or UIs.\n\t//\n\t// This will return a mega set of key:value pairs with all possible schema\n\t// permutations and default values (when not an object) and everything else.\n\tgenerateAddressses (pObject, pBaseAddress, pSchema)\n\t{\n\t\tlet tmpBaseAddress = (typeof(pBaseAddress) == 'string') ? pBaseAddress : '';\n\t\tlet tmpSchema = (typeof(pSchema) == 'object') ? pSchema : {};\n\n\t\tlet tmpObjectType = typeof(pObject);\n\n\t\tlet tmpSchemaObjectEntry = (\n\t\t\t{\n\t\t\t\tAddress: tmpBaseAddress,\n\t\t\t\tHash: tmpBaseAddress,\n\t\t\t\tName: tmpBaseAddress,\n\t\t\t\t// This is so scripts and UI controls can force a developer to opt-in.\n\t\t\t\tInSchema: false\n\t\t\t}\n\t\t)\n\n\t\tif ((tmpObjectType == 'object') && (pObject == null))\n\t\t{\n\t\t\ttmpObjectType = 'null';\n\t\t}\n\n\t\tswitch(tmpObjectType)\n\t\t{\n\t\t\tcase 'string':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'String';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'bigint':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Number';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\tcase 'null':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Any';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif (Array.isArray(pObject))\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Array';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < pObject.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[i], `${tmpBaseAddress}[${i}]`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Object';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t\ttmpBaseAddress += '.';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectProperties = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectProperties.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[tmpObjectProperties[i]], `${tmpBaseAddress}${tmpObjectProperties[i]}`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'symbol':\n\t\t\tcase 'function':\n\t\t\t\t// Symbols and functions neither recurse nor get added to the schema\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tmpSchema;\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressGeneration;","// Given a string, parse out any conditional expressions and set whether or not to keep the record.\n//\n// For instance:\n// \t\t'files[]<<~?format,==,Thumbnail?~>>'\n//      'files[]<<~?format,==,Metadata?~>>'\n//      'files[]<<~?size,>,4000?~>>'\n//\n// The wrapping parts are the <<~? and ?~>> megabrackets.\n//\n// The function does not need to alter the string -- just check the conditionals within.\n\n// TODO: Consider making this an es6 class\n\n// Let's use indexOf since it is apparently the fastest.\nconst _ConditionalStanzaStart = '<<~?';\nconst _ConditionalStanzaStartLength = _ConditionalStanzaStart.length;\nconst _ConditionalStanzaEnd = '?~>>';\nconst _ConditionalStanzaEndLength = _ConditionalStanzaEnd.length;\n\n// Test the condition of a value in a record\nconst testCondition = (pManyfest, pRecord, pSearchAddress, pSearchComparator, pValue) =>\n{\n\tswitch(pSearchComparator)\n\t{\n\t\tcase '!=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) != pValue);\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) < pValue);\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) > pValue);\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) <= pValue);\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) >= pValue);\n\t\t\tbreak;\n\t\tcase '===':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === pValue);\n\t\t\tbreak;\n\t\tcase '==':\n\t\tdefault:\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) == pValue);\n\t\t\tbreak;\n\t}\n};\n\nconst parseConditionals = (pManyfest, pAddress, pRecord) =>\n{\n\tlet tmpKeepRecord = true;\n\n\t/*\n\t\tAlgorithm is simple:\n\n\t\t1.  Enuerate start points\n\n\t\t2.  Find stop points within each start point\n\t\t3. Check the conditional\n\t*/\n\n\tlet tmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart);\n\n\twhile (tmpStartIndex != -1)\n\t{\n\t\tlet tmpStopIndex = pAddress.indexOf(_ConditionalStanzaEnd, tmpStartIndex+_ConditionalStanzaStartLength);\n\n\t\tif (tmpStopIndex != -1)\n\t\t{\n\t\t\tlet tmpMagicComparisonPatternSet = pAddress.substring(tmpStartIndex+_ConditionalStanzaStartLength, tmpStopIndex).split(',');\n\n\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\t\t\tlet tmpSearchComparator = tmpMagicComparisonPatternSet[1];\n\t\t\tlet tmpSearchValue = tmpMagicComparisonPatternSet[2];\n\n\t\t\t// Process the piece\n\t\t\ttmpKeepRecord = tmpKeepRecord && testCondition(pManyfest, pRecord, tmpSearchAddress, tmpSearchComparator, tmpSearchValue);\n\t\t\ttmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart, tmpStopIndex+_ConditionalStanzaEndLength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpStartIndex = -1;\n\t\t}\n\t\t\n\t}\n\n\treturn tmpKeepRecord;\n}\n\nmodule.exports = parseConditionals;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Schema Manipulation Functions\n*\n* @class ManyfestSchemaManipulation\n*/\nclass ManyfestSchemaManipulation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n    // This translates the default address mappings to something different.\n    //\n    // For instance you can pass in manyfest schema descriptor object:\n    // \t{\n\t//\t  \"Address.Of.a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t//\t  \"Address.Of.b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t//  }\n    //\n    //\n    // And then an address mapping (basically a Hash->Address map)\n    //  {\n    //    \"a\": \"New.Address.Of.a\",\n    //    \"b\": \"New.Address.Of.b\"\n    //  }\n    //\n    // NOTE: This mutates the schema object permanently, altering the base hash.\n    //       If there is a collision with an existing address, it can lead to overwrites.\n    // TODO: Discuss what should happen on collisions.\n\tresolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\tif (typeof(pManyfestSchemaDescriptors) != 'object')\n\t\t{\n\t\t\tthis.logError(`Attempted to resolve address mapping but the descriptor was not an object.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof(pAddressMapping) != 'object')\n\t\t{\n\t\t\t// No mappings were passed in\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the arrays of both the schema definition and the hash mapping\n\t\tlet tmpManyfestAddresses = Object.keys(pManyfestSchemaDescriptors);\n\t\tlet tmpHashMapping = {};\n\t\ttmpManyfestAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tif (pManyfestSchemaDescriptors[pAddress].hasOwnProperty('Hash'))\n\t\t\t\t{\n\t\t\t\t\ttmpHashMapping[pManyfestSchemaDescriptors[pAddress].Hash] = pAddress;\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet tmpAddressMappingSet = Object.keys(pAddressMapping);\n\n\t\ttmpAddressMappingSet.forEach(\n\t\t\t(pInputAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpNewDescriptorAddress = pAddressMapping[pInputAddress];\n\t\t\t\tlet tmpOldDescriptorAddress = false;\n\t\t\t\tlet tmpDescriptor = false;\n\n\t\t\t\t// See if there is a matching descriptor either by Address directly or Hash\n\t\t\t\tif (pManyfestSchemaDescriptors.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = pInputAddress;\n\t\t\t\t}\n\t\t\t\telse if (tmpHashMapping.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = tmpHashMapping[pInputAddress];\n\t\t\t\t}\n\n\t\t\t\t// If there was a matching descriptor in the manifest, store it in the temporary descriptor\n\t\t\t\tif (tmpOldDescriptorAddress)\n\t\t\t\t{\n\t\t\t\t\ttmpDescriptor = pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t\tdelete pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Create a new descriptor!  Map it to the input address.\n\t\t\t\t\ttmpDescriptor = { Hash:pInputAddress };\n\t\t\t\t}\n\n\t\t\t\t// Now re-add the descriptor to the manyfest schema\n\t\t\t\tpManyfestSchemaDescriptors[tmpNewDescriptorAddress] = tmpDescriptor;\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tsafeResolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\t// This returns the descriptors as a new object, safely remapping without mutating the original schema Descriptors\n\t\tlet tmpManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptors));\n\t\tthis.resolveAddressMappings(tmpManyfestSchemaDescriptors, pAddressMapping);\n\t\treturn tmpManyfestSchemaDescriptors;\n\t}\n\n\tmergeAddressMappings(pManyfestSchemaDescriptorsDestination, pManyfestSchemaDescriptorsSource)\n\t{\n\t\tif ((typeof(pManyfestSchemaDescriptorsSource) != 'object') || (typeof(pManyfestSchemaDescriptorsDestination) != 'object'))\n\t\t{\n\t\t\tthis.logError(`Attempted to merge two schema descriptors but both were not objects.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpSource = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsSource));\n\t\tlet tmpNewManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsDestination));\n\n\t\t// The first passed-in set of descriptors takes precedence.\n\t\tlet tmpDescriptorAddresses = Object.keys(tmpSource);\n\n\t\ttmpDescriptorAddresses.forEach(\n\t\t\t(pDescriptorAddress) =>\n\t\t\t{\n\t\t\t\tif (!tmpNewManyfestSchemaDescriptors.hasOwnProperty(pDescriptorAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpNewManyfestSchemaDescriptors[pDescriptorAddress] = tmpSource[pDescriptorAddress];\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpNewManyfestSchemaDescriptors;\n\t}\n}\n\nmodule.exports = ManyfestSchemaManipulation;","/**\n* @author <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\nlet libHashTranslation = require('./Manyfest-HashTranslation.js');\nlet libObjectAddressCheckAddressExists = require('./Manyfest-ObjectAddress-CheckAddressExists.js');\nlet libObjectAddressGetValue = require('./Manyfest-ObjectAddress-GetValue.js');\nlet libObjectAddressSetValue = require('./Manyfest-ObjectAddress-SetValue.js');\nlet libObjectAddressDeleteValue = require('./Manyfest-ObjectAddress-DeleteValue.js');\nlet libObjectAddressGeneration = require('./Manyfest-ObjectAddressGeneration.js');\nlet libSchemaManipulation = require('./Manyfest-SchemaManipulation.js');\n\nconst _DefaultConfiguration = { Scope:'DEFAULT', Descriptors: {} }\n\n/**\n* Manyfest object address-based descriptions and manipulations.\n*\n* @class Manyfest\n*/\nclass Manyfest extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'Manifest';\n\n\t\t// Wire in logging\n\t\tthis.logInfo = libSimpleLog;\n\t\tthis.logError = libSimpleLog;\n\n\t\t// Create an object address resolver and map in the functions\n\t\tthis.objectAddressCheckAddressExists = new libObjectAddressCheckAddressExists(this.logInfo, this.logError);\n\t\tthis.objectAddressGetValue = new libObjectAddressGetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressSetValue = new libObjectAddressSetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressDeleteValue = new libObjectAddressDeleteValue(this.logInfo, this.logError);\n\n\t\tif (!this.options.hasOwnProperty('defaultValues'))\n\t\t{\n\t\t\tthis.options.defaultValues = (\n\t\t\t\t{\n\t\t\t\t\t\"String\": \"\",\n\t\t\t\t\t\"Number\": 0,\n\t\t\t\t\t\"Float\": 0.0,\n\t\t\t\t\t\"Integer\": 0,\n\t\t\t\t\t\"Boolean\": false,\n\t\t\t\t\t\"Binary\": 0,\n\t\t\t\t\t\"DateTime\": 0,\n\t\t\t\t\t\"Array\": [],\n\t\t\t\t\t\"Object\": {},\n\t\t\t\t\t\"Null\": null\n\t\t\t\t});\n\t\t}\n\t\tif (!this.options.hasOwnProperty('strict'))\n\t\t{\n\t\t\tthis.options.strict = false;\n\t\t}\n\n\t\tthis.scope = undefined;\n\t\tthis.elementAddresses = undefined;\n\t\tthis.elementHashes = undefined;\n\t\tthis.elementDescriptors = undefined;\n\n\t\tthis.reset();\n\n\t\tif (typeof(this.options) === 'object')\n\t\t{\n\t\t\tthis.loadManifest(this.options);\n\t\t}\n\n\t\tthis.schemaManipulations = new libSchemaManipulation(this.logInfo, this.logError);\n\t\tthis.objectAddressGeneration = new libObjectAddressGeneration(this.logInfo, this.logError);\n\n\t\tthis.hashTranslations = new libHashTranslation(this.logInfo, this.logError);\n\t}\n\n\t/*************************************************************************\n\t * Schema Manifest Loading, Reading, Manipulation and Serialization Functions\n\t */\n\n\t// Reset critical manifest properties\n\treset()\n\t{\n\t\tthis.scope = 'DEFAULT';\n\t\tthis.elementAddresses = [];\n\t\tthis.elementHashes = {};\n\t\tthis.elementDescriptors = {};\n\t}\n\n\tclone()\n\t{\n\t\t// Make a copy of the options in-place\n\t\tlet tmpNewOptions = JSON.parse(JSON.stringify(this.options));\n\n\t\tlet tmpNewManyfest = new Manyfest(this.getManifest(), this.logInfo, this.logError, tmpNewOptions);\n\n\t\t// Import the hash translations\n\t\ttmpNewManyfest.hashTranslations.addTranslation(this.hashTranslations.translationTable);\n\n\t\treturn tmpNewManyfest;\n\t}\n\n\t// Deserialize a Manifest from a string\n\tdeserialize(pManifestString)\n\t{\n\t\t// TODO: Add guards for bad manifest string\n\t\treturn this.loadManifest(JSON.parse(pManifestString));\n\t}\n\n\t// Load a manifest from an object\n\tloadManifest(pManifest)\n\t{\n\t\tif (typeof(pManifest) !== 'object')\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading manifest; expecting an object but parameter was type ${typeof(pManifest)}.`);\n\t\t}\n\n\t\tlet tmpManifest = (typeof(pManifest) == 'object') ? pManifest : {};\n\n\t\tlet tmpDescriptorKeys = Object.keys(_DefaultConfiguration);\n\n\t\tfor (let i = 0; i < tmpDescriptorKeys.length; i++)\n\t\t{\n\t\t\tif (!tmpManifest.hasOwnProperty(tmpDescriptorKeys[i]))\n\t\t\t{\n\t\t\t\ttmpManifest[tmpDescriptorKeys[i]] = JSON.parse(JSON.stringify(_DefaultConfiguration[tmpDescriptorKeys[i]]));\n\t\t\t}\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Scope'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Scope) === 'string')\n\t\t\t{\n\t\t\t\tthis.scope = tmpManifest.Scope;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest; expecting a string but property was type ${typeof(tmpManifest.Scope)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest object.  Property \"Scope\" does not exist in the root of the object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Descriptors'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Descriptors) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpDescriptionAddresses = Object.keys(tmpManifest.Descriptors);\n\t\t\t\tfor (let i = 0; i < tmpDescriptionAddresses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.addDescriptor(tmpDescriptionAddresses[i], tmpManifest.Descriptors[tmpDescriptionAddresses[i]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading description object from manifest object.  Expecting an object in 'Manifest.Descriptors' but the property was type ${typeof(tmpManifest.Descriptors)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object description from manifest object.  Property \"Descriptors\" does not exist in the root of the Manifest object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('HashTranslations'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.HashTranslations) === 'object')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < tmpManifest.HashTranslations.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// Each translation is \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Serialize the Manifest to a string\n\tserialize()\n\t{\n\t\treturn JSON.stringify(this.getManifest());\n\t}\n\n\tgetManifest()\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tScope: this.scope,\n\t\t\t\tDescriptors: JSON.parse(JSON.stringify(this.elementDescriptors)),\n\t\t\t\tHashTranslations: JSON.parse(JSON.stringify(this.hashTranslations.translationTable))\n\t\t\t});\n\t}\n\n\t// Add a descriptor to the manifest\n\taddDescriptor(pAddress, pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) === 'object')\n\t\t{\n\t\t\t// Add the Address into the Descriptor if it doesn't exist:\n\t\t\tif (!pDescriptor.hasOwnProperty('Address'))\n\t\t\t{\n\t\t\t\tpDescriptor.Address = pAddress;\n\t\t\t}\n\n\t\t\tif (!this.elementDescriptors.hasOwnProperty(pAddress))\n\t\t\t{\n\t\t\t\tthis.elementAddresses.push(pAddress);\n\t\t\t}\n\n\t\t\t// Add the element descriptor to the schema\n\t\t\tthis.elementDescriptors[pAddress] = pDescriptor;\n\n\t\t\t// Always add the address as a hash\n\t\t\tthis.elementHashes[pAddress] = pAddress;\n\n\t\t\tif (pDescriptor.hasOwnProperty('Hash'))\n\t\t\t{\n\t\t\t\t// TODO: Check if this is a good idea or not..\n\t\t\t\t//       Collisions are bound to happen with both representations of the address/hash in here and developers being able to create their own hashes.\n\t\t\t\tthis.elementHashes[pDescriptor.Hash] = pAddress;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpDescriptor.Hash = pAddress;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object descriptor for address '${pAddress}' from manifest object.  Expecting an object but property was type ${typeof(pDescriptor)}.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetDescriptorByHash(pHash)\n\t{\n\t\treturn this.getDescriptor(this.resolveHashAddress(pHash));\n\t}\n\n\tgetDescriptor(pAddress)\n\t{\n\t\treturn this.elementDescriptors[pAddress];\n\t}\n\n\t// execute an action function for each descriptor\n\teachDescriptor(fAction)\n\t{\n        let tmpDescriptorAddresses = Object.keys(this.elementDescriptors);\n        for (let i = 0; i < tmpDescriptorAddresses.length; i++)\n        {\n            fAction(this.elementDescriptors[tmpDescriptorAddresses[i]]);\n        }\n\n\t}\n\n\t/*************************************************************************\n\t * Beginning of Object Manipulation (read & write) Functions\n\t */\n\t// Check if an element exists by its hash\n\tcheckAddressExistsByHash (pObject, pHash)\n\t{\n\t\treturn this.checkAddressExists(pObject,this.resolveHashAddress(pHash));\n\t}\n\n\t// Check if an element exists at an address\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\treturn this.objectAddressCheckAddressExists.checkAddressExists(pObject, pAddress);\n\t}\n\n\t// Turn a hash into an address, factoring in the translation table.\n\tresolveHashAddress(pHash)\n\t{\n\t\tlet tmpAddress = undefined;\n\n\t\tlet tmpInElementHashTable = this.elementHashes.hasOwnProperty(pHash);\n\t\tlet tmpInTranslationTable = this.hashTranslations.translationTable.hasOwnProperty(pHash);\n\n\t\t// The most straightforward: the hash exists, no translations.\n\t\tif (tmpInElementHashTable && !tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[pHash];\n\t\t}\n\t\t// There is a translation from one hash to another, and, the elementHashes contains the pointer end\n\t\telse if (tmpInTranslationTable && this.elementHashes.hasOwnProperty(this.hashTranslations.translate(pHash)))\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[this.hashTranslations.translate(pHash)];\n\t\t}\n\t\t// Use the level of indirection only in the Translation Table\n\t\telse if (tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.hashTranslations.translate(pHash);\n\t\t}\n\t\t// Just treat the hash as an address.\n\t\t// TODO: Discuss this ... it is magic but controversial\n\t\telse\n\t\t{\n\t\t\ttmpAddress = pHash;\n\t\t}\n\n\t\treturn tmpAddress;\n\t}\n\n\t// Get the value of an element by its hash\n\tgetValueByHash (pObject, pHash)\n\t{\n\t\tlet tmpValue = this.getValueAtAddress(pObject, this.resolveHashAddress(pHash));\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptorByHash(pHash));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\tlet tmpValue = this.objectAddressGetValue.getValueAtAddress(pObject, pAddress);\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptor(pAddress));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Set the value of an element by its hash\n\tsetValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.setValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressSetValue.setValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Delete the value of an element by its hash\n\tdeleteValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.deleteValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressDeleteValue.deleteValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Validate the consistency of an object against the schema\n\tvalidate(pObject)\n\t{\n\t\tlet tmpValidationData =\n\t\t{\n\t\t\tError: null,\n\t\t\tErrors: [],\n\t\t\tMissingElements:[]\n\t\t};\n\n\t\tif (typeof(pObject) !== 'object')\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Expected passed in object to be type object but was passed in ${typeof(pObject)}`);\n\t\t}\n\n\t\tlet addValidationError = (pAddress, pErrorMessage) =>\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Element at address \"${pAddress}\" ${pErrorMessage}.`);\n\t\t};\n\n\t\t// Now enumerate through the values and check for anomalies based on the schema\n\t\tfor (let i = 0; i < this.elementAddresses.length; i++)\n\t\t{\n\t\t\tlet tmpDescriptor = this.getDescriptor(this.elementAddresses[i]);\n\t\t\tlet tmpValueExists = this.checkAddressExists(pObject, tmpDescriptor.Address);\n\t\t\tlet tmpValue = this.getValueAtAddress(pObject, tmpDescriptor.Address);\n\n\t\t\tif ((typeof(tmpValue) == 'undefined') || !tmpValueExists)\n\t\t\t{\n\t\t\t\t// This will technically mean that `Object.Some.Value = undefined` will end up showing as \"missing\"\n\t\t\t\t// TODO: Do we want to do a different message based on if the property exists but is undefined?\n\t\t\t\ttmpValidationData.MissingElements.push(tmpDescriptor.Address);\n\t\t\t\tif (tmpDescriptor.Required || this.options.strict)\n\t\t\t\t{\n\t\t\t\t\taddValidationError(tmpDescriptor.Address, 'is flagged REQUIRED but is not set in the object');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now see if there is a data type specified for this element\n\t\t\tif (tmpDescriptor.DataType)\n\t\t\t{\n\t\t\t\tlet tmpElementType = typeof(tmpValue);\n\t\t\t\tswitch(tmpDescriptor.DataType.toString().trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpValueString = tmpValue.toString();\n\t\t\t\t\t\t\tif (tmpValueString.indexOf('.') > -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// TODO: Is this an error?\n\t\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but has a decimal point in the number.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DateTime':\n\t\t\t\t\t\tlet tmpValueDate = new Date(tmpValue);\n\t\t\t\t\t\tif (tmpValueDate.toString() == 'Invalid Date')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is not parsable as a Date by Javascript`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Check if this is a string, in the default case\n\t\t\t\t\t\t// Note this is only when a DataType is specified and it is an unrecognized data type.\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} (which auto-converted to String because it was unrecognized) but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpValidationData;\n\t}\n\n\t// Returns a default value, or, the default value for the data type (which is overridable with configuration)\n\tgetDefaultValue(pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) != 'object')\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (pDescriptor.hasOwnProperty('Default'))\n\t\t{\n\t\t\treturn pDescriptor.Default;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Default to a null if it doesn't have a type specified.\n\t\t\t// This will ensure a placeholder is created but isn't misinterpreted.\n\t\t\tlet tmpDataType = (pDescriptor.hasOwnProperty('DataType')) ? pDescriptor.DataType : 'String';\n\t\t\tif (this.options.defaultValues.hasOwnProperty(tmpDataType))\n\t\t\t{\n\t\t\t\treturn this.options.defaultValues[tmpDataType];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// give up and return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enumerate through the schema and populate default values if they don't exist.\n\tpopulateDefaults(pObject, pOverwriteProperties)\n\t{\n\t\treturn this.populateObject(pObject, pOverwriteProperties,\n\t\t\t// This just sets up a simple filter to see if there is a default set.\n\t\t\t(pDescriptor) =>\n\t\t\t{\n\t\t\t\treturn pDescriptor.hasOwnProperty('Default');\n\t\t\t});\n\t}\n\n\t// Forcefully populate all values even if they don't have defaults.\n\t// Based on type, this can do unexpected things.\n\tpopulateObject(pObject, pOverwriteProperties, fFilter)\n\t{\n\t\t// Automatically create an object if one isn't passed in.\n\t\tlet tmpObject = (typeof(pObject) === 'object') ? pObject : {};\n\t\t// Default to *NOT OVERWRITING* properties\n\t\tlet tmpOverwriteProperties = (typeof(pOverwriteProperties) == 'undefined') ? false : pOverwriteProperties;\n\t\t// This is a filter function, which is passed the schema and allows complex filtering of population\n\t\t// The default filter function just returns true, populating everything.\n\t\tlet tmpFilterFunction = (typeof(fFilter) == 'function') ? fFilter : (pDescriptor) => { return true; };\n\n\t\tthis.elementAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpDescriptor = this.getDescriptor(pAddress);\n\t\t\t\t// Check the filter function to see if this is an address we want to set the value for.\n\t\t\t\tif (tmpFilterFunction(tmpDescriptor))\n\t\t\t\t{\n\t\t\t\t\t// If we are overwriting properties OR the property does not exist\n\t\t\t\t\tif (tmpOverwriteProperties || !this.checkAddressExists(tmpObject, pAddress))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setValueAtAddress(tmpObject, pAddress, this.getDefaultValue(tmpDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpObject;\n\t}\n};\n\nmodule.exports = Manyfest;","var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (obj === global) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","const libFableServiceBase = require('fable-serviceproviderbase')\n\nconst defaultPictSettings = (\n\t{\n\t\tName: 'DefaultPictApplication',\n\n\t\t// The main \"viewport\" is the view that is used to host our application\n\t\tMainViewportViewIdentifier: 'Default-View',\n\t\tMainViewportRenderableHash: false,\n\t\tMainViewportDestinationAddress: false,\n\t\tMainViewportDefaultDataAddress: false,\n\n\t\t// Whether or not we should automatically render the main viewport after we initialize the pict application\n\t\tAutoSolveAfterInitialize: true,\n\t\tAutoRenderMainViewportViewAfterInitialize: true,\n\n\t\tManifests: {},\n\t\t// The prefix to prepend on all template destination hashes\n\t\tIdentifierAddressPrefix: 'PICT-'\n\t});\n\nclass PictApplication extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tthis.serviceType = 'PictApplication';\n\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict state\n\t\tthis.AppData = this.fable.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastMarshalFromViewsTimestamp = false;\n\t\tthis.lastMarshalToViewsTimestamp = false;\n\n\t\t// Load all the manifests for the application\n\t\tlet tmpManifestKeys = Object.keys(this.options.Manifests);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++)\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.fable.instantiateServiceProvider('Manifest', this.options.Manifests[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Solve All Views                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing solve() function...`)\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpViewsToSolve[i].solve();\n\t\t}\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\t// Walk through any loaded views and solve them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoSolveWithApp)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoSolveOrdinal - b.options.AutoSolveOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToSolve[i].solveAsync.bind(tmpViewsToSolve[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Initialize Application                   */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\ttmpViewsToInitialize[i].initialize();\n\t\t\t}\n\t\t\tthis.onAfterInitialize();\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Solve the template synchronously\n\t\t\t\tthis.solve();\n\t\t\t}\n\t\t\t// Now check and see if we should automatically render as well\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Render the template synchronously\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallBack)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\t// TODO: Some optimization cleverness could be gained by grouping them into a parallelized async operation, by ordinal.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority\n\t\t\t// If they are all the default priority 0, it will end up being add order due to JSON Object Property Key order stuff\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = tmpViewsToInitialize[i];\n\t\t\t\ttmpAnticipate.anticipate(tmpView.initializeAsync.bind(tmpView));\n\t\t\t}\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.solveAsync.bind(this));\n\t\t\t}\n\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.renderMainViewportAsync.bind(this));\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallBack();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data From All Views              */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalFromViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalFromViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalFromViews[i].marshalFromView();\n\t\t}\n\t\tthis.onMarshalFromViews();\n\t\tthis.onAfterMarshalFromViews();\n\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalFromViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalFromViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalFromViews[i].marshalFromViewAsync.bind(tmpViewsToMarshalFromViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data To All Views                */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalToViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalToViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalToViews[i].marshalToView();\n\t\t}\n\t\tthis.onMarshalToViews();\n\t\tthis.onAfterMarshalToViews();\n\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalToViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalToViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalToViews[i].marshalToViewAsync.bind(tmpViewsToMarshalToViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Render View                              */\n\t/* -------------------------------------------------------------------------- */\n\trender(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\t// Now get the view (by hash) from the loaded views\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not render from View ${tmpViewIdentifier} because it is not a valid view.`);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn tmpView.render(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress);\n\t}\n\trenderMainViewport()\n\t{\n\t\treturn this.render(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress);\n\t}\n\n\trenderAsync(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tlet tmpErrorMessage = `PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not asynchronously render from View ${tmpViewIdentifier} because it is not a valid view.`;\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.error(tmpErrorMessage);\n\t\t\t}\n\t\t\treturn fCallback(new Error(tmpErrorMessage));\n\t\t}\n\n\t\treturn tmpView.renderAsync(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress, fCallback);\n\t}\n\trenderMainViewportAsync(fCallback)\n\t{\n\t\treturn this.renderAsync(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress, fCallback);\n\t}\n}\n\nmodule.exports = PictApplication;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst defaultPictViewSettings = (\n\t{\n\t\tDefaultRenderable: false,\n\t\tDefaultDestinationAddress: false,\n\t\tDefaultTemplateRecordAddress: false,\n\n\t\tViewIdentifier: false,\n\n\t\t// If this is set to true, when the App initializes this will.\n\t\t// After the App initializes, initialize will be called as soon as it's added.\n\t\tAutoInitialize: true,\n\t\tAutoInitializeOrdinal: 0,\n\n\t\t// If this is set to true, when the App autorenders (on load) this will.\n\t\t// After the App initializes, render will be called as soon as it's added.\n\t\tAutoRender: true,\n\t\tAutoRenderOrdinal: 0,\n\n\t\tAutoSolveWithApp: true,\n\t\tAutoSolveOrdinal: 0,\n\n\t\tCSSHash: false,\n\t\tCSS: false,\n\t\tCSSProvider: false,\n\t\tCSSPriority: 500,\n\n\t\tTemplates: [],\n\n\t\tDefaultTemplates: [],\n\n\t\tRenderables: [],\n\n\t\tManifests: {}\n\t});\n\nclass PictView extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Intersect default options, parent constructor, service information\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictViewSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tif (!this.options.ViewIdentifier)\n\t\t{\n\t\t\tthis.options.ViewIdentifier = `AutoViewID-${this.fable.getUUID()}`;\n\t\t}\n\t\tthis.serviceType = 'PictView';\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict application state\n\t\tthis.AppData = this.pict.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastRenderedTimestamp = false;\n\t\tthis.lastMarshalFromViewTimestamp = false;\n\t\tthis.lastMarshalToViewTimestamp = false;\n\n\t\t// Load all templates from the array in the options\n\t\t// Templates are in the form of {Hash:'Some-Template-Hash',Template:'Template content',Source:'TemplateSource'}\n\t\tfor (let i = 0; i < this.options.Templates.length; i++)\n\t\t{\n\t\t\tlet tmpTemplate = this.options.Templates[i];\n\n\t\t\tif (!tmpTemplate.hasOwnProperty('Hash') || !tmpTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Template ${i} in the options array.`, tmpTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addTemplate(tmpTemplate.Hash, tmpTemplate.Template, tmpTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load all default templates from the array in the options\n\t\t// Templates are in the form of {Prefix:'',Postfix:'-List-Row',Template:'Template content',Source:'TemplateSourceString'}\n\t\tfor (let i = 0; i < this.options.DefaultTemplates.length; i++)\n\t\t{\n\t\t\tlet tmpDefaultTemplate = this.options.DefaultTemplates[i];\n\n\t\t\tif (!tmpDefaultTemplate.hasOwnProperty('Postfix') || !tmpDefaultTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Default Template ${i} in the options array.`, tmpDefaultTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpDefaultTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpDefaultTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addDefaultTemplate(tmpDefaultTemplate.Prefix, tmpDefaultTemplate.Postfix, tmpDefaultTemplate.Template, tmpDefaultTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load the CSS if it's available\n\t\tif (this.options.CSS)\n\t\t{\n\t\t\tlet tmpCSSHash = this.options.CSSHash ? this.options.CSSHash : `View-${this.options.ViewIdentifier}`;\n\t\t\tlet tmpCSSProvider = this.options.CSSProvider ? this.options.CSSProvider : tmpCSSHash;\n\t\t\tthis.pict.CSSMap.addCSS(tmpCSSHash, this.options.CSS, tmpCSSProvider, this.options.CSSPriority);\n\t\t}\n\n\t\t// Load all renderables\n\t\t// Renderables are launchable renderable instructions with templates\n\t\t// They look as such: {Identifier:'ContentEntry', TemplateHash:'Content-Entry-Section-Main', ContentDestinationAddress:'#ContentSection', RecordAddress:'AppData.Content.DefaultText', ManifestTransformation:'ManyfestHash', ManifestDestinationAddress:'AppData.Content.DataToTransformContent'}\n\t\t// The only parts that are necessary are Identifier and Template\n\t\t// A developer can then do render('ContentEntry') and it just kinda works.  Or they can override the ContentDestinationAddress\n\t\tthis.renderables = {};\n\t\tfor (let i = 0; i < this.options.Renderables.length; i++)\n\t\t{\n\t\t\tlet tmpRenderable = this.options.Renderables[i];\n\t\t\tthis.addRenderable(this.options.Renderables[i]);\n\t\t}\n\t}\n\n\taddRenderable(pRenderableHash, pTemplateHash, pDefaultTemplateDataAddress, pDefaultDestinationAddress, pRenderMethod)\n\t{\n\t\tlet tmpRenderable = false;\n\n\t\tif (typeof(pRenderableHash) == 'object')\n\t\t{\n\t\t\t// The developer passed in the renderable as an object.\n\t\t\t// Use theirs instead!\n\t\t\ttmpRenderable = pRenderableHash;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpRenderMethod = (typeof(pRenderMethod) !== 'string') ? pRenderMethod : 'replace';\n\t\t\ttmpRenderable = (\n\t\t\t\t{\n\t\t\t\t\tRenderableHash: pRenderableHash,\n\t\t\t\t\tTemplateHash: pTemplateHash,\n\t\t\t\t\tDefaultTemplateDataAddress: pDefaultTemplateDataAddress,\n\t\t\t\t\tDefaultDestinationAddress: pDefaultDestinationAddress,\n\t\t\t\t\tRenderMethod: tmpRenderMethod\n\t\t\t\t});\n\t\t}\n\n\t\tif ((typeof(tmpRenderable.RenderableHash) != 'string') || (typeof(tmpRenderable.TemplateHash) != 'string'))\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Renderable; RenderableHash or TemplateHash are invalid.`, tmpRenderable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} adding renderable [${tmpRenderable.RenderableHash}] pointed to template ${tmpRenderable.TemplateHash}.`);\n\t\t\t}\n\n\t\t\tthis.renderables[tmpRenderable.RenderableHash] = tmpRenderable;\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                        Code Section: Initialization                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\tthis.onAfterInitialize();\n\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallback)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallback();\n\t\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Render                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeRender(pRenderable, pRenderDestinationAddress, pData)\n\t{\n\t\t// Overload this to mess with stuff before the content gets generated from the template\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeRenderAsync(fCallback)\n\t{\n\t\treturn fCallback();\n\t}\n\n\trender(pRenderable, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it is not a valid renderable.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpDataAddress;\n\t\tlet tmpData;\n\n\t\tif (typeof(pTemplateDataAddress) === 'object')\n\t\t{\n\t\t\ttmpData = pTemplateDataAddress;\n\t\t\ttmpDataAddress = 'Passed in as object';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\t\ttmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\t\t}\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\t// Generate the content output from the template and data\n\t\tlet tmpContent = this.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData)\n\n\t\t// Assign the content to the destination address\n\t\tswitch(tmpRenderable.RenderMethod)\n\t\t{\n\t\t\tcase 'append':\n\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'prepend':\n\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'append_once':\n\t\t\t\t// Try to find the content in the destination address\n\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t{\n\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'replace':\n\t\t\t\t// TODO: Should this be the default?\n\t\t\tdefault:\n\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Execute the developer-overridable post-render behavior\n\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, tmpContent)\n\n\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\treturn true;\n\t}\n\trenderAsync(pRenderable, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`));\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`));\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn fCallback(Error(`Could not render ${tmpRenderableHash}`));\n\t\t}\n\n\t\tlet tmpDataAddress;\n\t\tlet tmpData;\n\n\t\tif (typeof(pTemplateDataAddress) === 'object')\n\t\t{\n\t\t\ttmpData = pTemplateDataAddress;\n\t\t\ttmpDataAddress = 'Passed in as object';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\t\ttmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\t\t}\n\n\t\tlet tmpAnticipate = this.fable.newAnticipate();\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\t//\n\n\t\ttmpAnticipate.anticipate(\n\t\t\t(fOnBeforeRenderCallback) =>\n\t\t\t{\n\t\t\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\t\t\t\tthis.onBeforeRenderAsync(\n\t\t\t\t\t(pError) =>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fOnBeforeRenderCallback(pError);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\ttmpAnticipate.anticipate(\n\t\t\t(fAsyncTemplateCallback) =>\n\t\t\t{\n\t\t\t\t// Render the template (asynchronously)\n\t\t\t\tthis.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData,\n\t\t\t\t\t(pError, pContent) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render (asynchronously) ${tmpRenderableHash} (param ${pRenderable}) because it did not parse the template.`, pError);\n\t\t\t\t\t\t\treturn fAsyncTemplateCallback(pError);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Assign the content to the destination address\n\t\t\t\t\t\tswitch(tmpRenderable.RenderMethod)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'append':\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'prepend':\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'append_once':\n\t\t\t\t\t\t\t\t// Try to find the content in the destination address\n\t\t\t\t\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\t\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'replace':\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Execute the developer-overridable asynchronous post-render behavior\n\t\t\t\t\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\t\t\t\t\treturn this.onAfterRenderAsync(fAsyncTemplateCallback, pContent);\n\t\t\t\t\t});\n\t\t\t});\n\t\ttmpAnticipate.wait(fCallback);\n\t}\n\n\tonAfterRender()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterRenderAsync(fCallback)\n\t{\n\t\tthis.onAfterRender();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Solver                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal From View                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalFromView();\n\t\tthis.onMarshalFromView();\n\t\tthis.onAfterMarshalFromView();\n\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalFromViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal To View                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalToView();\n\t\tthis.onMarshalToView();\n\t\tthis.onAfterMarshalToView();\n\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalToViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToView();\n\t\treturn fCallback();\n\t}\n}\n\nmodule.exports = PictView;","/**\n* Precedent Meta-Templating\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Process text streams, parsing out meta-template expressions.\n*/\nvar libWordTree = require(`./WordTree.js`);\nvar libStringParser = require(`./StringParser.js`);\n\nclass Precedent\n{\n\t/**\n\t * Precedent Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser();\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData);\n\t}\n}\n\nmodule.exports = Precedent;\n","/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t */\n\tparseString (pString, pParseTree, pData)\n\t{\n\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\tfor (var i = 0; i < pString.length; i++)\n\t\t{\n\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData);\n\t\t}\n\n\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\treturn tmpParserState.Output;\n\t}\n}\n\nmodule.exports = StringParser;\n","/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            strictNullHandling,\n            skipNulls,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $floor = GetIntrinsic('%Math.floor%');\n\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(fn, 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(fn, 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n","/*! simple-concat. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function (stream, cb) {\n  var chunks = []\n  stream.on('data', function (chunk) {\n    chunks.push(chunk)\n  })\n  stream.once('end', function () {\n    if (cb) cb(null, Buffer.concat(chunks))\n    cb = null\n  })\n  stream.once('error', function (err) {\n    if (cb) cb(err)\n    cb = null\n  })\n}\n","/*! simple-get. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const originalHost = opts.hostname // hostname before potential redirect\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api\n      // If redirected host is different than original host, drop headers to prevent cookie leak (#73)\n      if (redirectHost !== null && redirectHost !== originalHost) {\n        delete opts.headers.cookie\n        delete opts.headers.authorization\n      }\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};","/*\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nvar punycode = require('punycode');\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n/*\n * define these here so at least they only have to be\n * compiled once on the first module load.\n */\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/,\n\n  /*\n   * RFC 2396: characters reserved for delimiting URLs.\n   * We actually just auto-escape these.\n   */\n  delims = [\n    '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'\n  ],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = [\n    '{', '}', '|', '\\\\', '^', '`'\n  ].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  /*\n   * Characters that are never ever allowed in a hostname.\n   * Note that any invalid chars are also handled, but these\n   * are the ones that are *expected* to be seen, so we fast-path\n   * them.\n   */\n  nonHostChars = [\n    '%', '/', '?', ';', '#'\n  ].concat(autoEscape),\n  hostEndingChars = [\n    '/', '?', '#'\n  ],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    http: true,\n    https: true,\n    ftp: true,\n    gopher: true,\n    file: true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  },\n  querystring = require('qs');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && typeof url === 'object' && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (typeof url !== 'string') {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  /*\n   * Copy chrome, IE, opera backslash-handling behavior.\n   * Back slashes before the query string get converted to forward slashes\n   * See: https://code.google.com/p/chromium/issues/detail?id=25916\n   */\n  var queryIndex = url.indexOf('?'),\n    splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  /*\n   * trim before proceeding.\n   * This is to support parse stuff like \"  http://foo.com  \\n\"\n   */\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  /*\n   * figure out if it's got a host\n   * user@server is *always* interpreted as a hostname, and url\n   * resolution will treat //foo/bar as host=foo,path=bar because that's\n   * how the browser resolves relative URLs.\n   */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@/]+@[^@/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || (proto && !slashedProtocol[proto]))) {\n\n    /*\n     * there's a hostname.\n     * the first instance of /, ?, ;, or # ends the host.\n     *\n     * If there is an @ in the hostname, then non-host chars *are* allowed\n     * to the left of the last @ sign, unless some host-ending character\n     * comes *before* the @-sign.\n     * URLs are obnoxious.\n     *\n     * ex:\n     * http://a@b@c/ => user:a@b host:c\n     * http://a@b?@c => user:a host:c path:/?@c\n     */\n\n    /*\n     * v0.12 TODO(isaacs): This is not quite how Chrome does things.\n     * Review our test case against browsers more comprehensively.\n     */\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n\n    /*\n     * at this point, either we have an explicit point where the\n     * auth portion cannot go past, or the last @ char is the decider.\n     */\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      /*\n       * atSign must be in auth portion.\n       * http://a@b/c@d => host:b auth:a path:/c@d\n       */\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    /*\n     * Now we have a portion which is definitely the auth.\n     * Pull that off.\n     */\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) { hostEnd = rest.length; }\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    /*\n     * we've indicated that there is a hostname,\n     * so even if it's empty, it has to be present.\n     */\n    this.hostname = this.hostname || '';\n\n    /*\n     * if hostname begins with [ and ends with ]\n     * assume that it's an IPv6 address.\n     */\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              /*\n               * we replace non-ASCII char with a temporary placeholder\n               * we need this to make sure size of hostname is not\n               * broken by replacing non-ASCII by nothing\n               */\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      /*\n       * IDNA Support: Returns a punycoded representation of \"domain\".\n       * It only converts parts of the domain name that\n       * have non-ASCII characters, i.e. it doesn't matter if\n       * you call it with a domain that already is ASCII-only.\n       */\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    /*\n     * strip [ and ] from the hostname\n     * the host field still retains them, though\n     */\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  /*\n   * now rest is set to the post-host stuff.\n   * chop off any delim chars.\n   */\n  if (!unsafeProtocol[lowerProto]) {\n\n    /*\n     * First, make 100% sure that any \"autoEscape\" chars get\n     * escaped, even if encodeURIComponent doesn't think they\n     * need to be.\n     */\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) { continue; }\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  /*\n   * ensure it's an object, and not a string url.\n   * If it's an obj, this is a no-op.\n   * this way, you can call url_format() on strings\n   * to clean up potentially wonky urls.\n   */\n  if (typeof obj === 'string') { obj = urlParse(obj); }\n  if (!(obj instanceof Url)) { return Url.prototype.format.call(obj); }\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n    pathname = this.pathname || '',\n    hash = this.hash || '',\n    host = false,\n    query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && typeof this.query === 'object' && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query, {\n      arrayFormat: 'repeat',\n      addQueryPrefix: false\n    });\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') { protocol += ':'; }\n\n  /*\n   * only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n   * unless they had them to begin with.\n   */\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') { pathname = '/' + pathname; }\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') { hash = '#' + hash; }\n  if (search && search.charAt(0) !== '?') { search = '?' + search; }\n\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) { return relative; }\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (typeof relative === 'string') {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  /*\n   * hash is always overridden, no matter what.\n   * even href=\"\" will remove it.\n   */\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') { result[rkey] = relative[rkey]; }\n    }\n\n    // urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.pathname = '/';\n      result.path = result.pathname;\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    /*\n     * if it's a known url protocol, then changing\n     * the protocol does weird things\n     * first, if it's not file:, then we MUST have a host,\n     * and if there was a path\n     * to begin with, then we MUST have a path.\n     * if it is file:, then the host is dropped,\n     * because that's known to be hostless.\n     * anything else is assumed to be absolute.\n     */\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift())) { }\n      if (!relative.host) { relative.host = ''; }\n      if (!relative.hostname) { relative.hostname = ''; }\n      if (relPath[0] !== '') { relPath.unshift(''); }\n      if (relPath.length < 2) { relPath.unshift(''); }\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n    isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n    mustEndAbs = isRelAbs || isSourceAbs || (result.host && relative.pathname),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    relPath = relative.pathname && relative.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  /*\n   * if the url is a non-slashed url, then relative\n   * links like ../.. should be able\n   * to crawl up to the hostname, as well.  This is strange.\n   * result.protocol has already been set by now.\n   * Later on, put the first path part into the host field.\n   */\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') { srcPath[0] = result.host; } else { srcPath.unshift(result.host); }\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') { relPath[0] = relative.host; } else { relPath.unshift(relative.host); }\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    /*\n     * it's relative\n     * throw away the existing file, and take the new path instead.\n     */\n    if (!srcPath) { srcPath = []; }\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search != null) {\n    /*\n     * just pull out the search.\n     * like href='?foo'.\n     * Put this after the other two cases because it simplifies the booleans\n     */\n    if (psychotic) {\n      result.host = srcPath.shift();\n      result.hostname = result.host;\n      /*\n       * occationaly the auth can get stuck only in host\n       * this especially happens in cases like\n       * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n       */\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.hostname = authInHost.shift();\n        result.host = result.hostname;\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    // to support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    /*\n     * no path at all.  easy.\n     * we've already handled the other stuff above.\n     */\n    result.pathname = null;\n    // to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  /*\n   * if a url ENDs in . or .., then it must get a trailing slash.\n   * however, if it ends in anything else non-slashy,\n   * then it must NOT get a trailing slash.\n   */\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === '';\n\n  /*\n   * strip single dots, resolve double dots to parent dir\n   * if the path tries to go above the root, `up` ends up > 0\n   */\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    result.host = result.hostname;\n    /*\n     * occationaly the auth can get stuck only in host\n     * this especially happens in cases like\n     * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n     */\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.hostname = authInHost.shift();\n      result.host = result.hostname;\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (srcPath.length > 0) {\n    result.pathname = srcPath.join('/');\n  } else {\n    result.pathname = null;\n    result.path = null;\n  }\n\n  // to support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst defaultConfiguration = (\n\t{\n\t\t// This is the address for the <script /> tag that contains the CSS.\n\t\tCSSElementAddress: '#PICT-CSS'\n\t}\n)\n\nclass PictCSS extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\t// No merging of options necessary\n\t\tif (typeof(this.options.CSSElementAddress) === 'undefined')\n\t\t{\n\t\t\tthis.options.CSSElementAddress = defaultConfiguration.CSSElementAddress;\n\t\t}\n\n\t\tthis.inlineCSSMap = {};\n\t}\n\n\t// Add a CSS fragment to the CSS map (each view can have its own CSS fragment)\n\t// Hash is shared across all views, so if 10 views all load the \"My-Table-View\" fragment, it will only be loaded once.\n\taddCSS(pHash, pContent, pPriority, pProvider)\n\t{\n\t\tlet tmpPriority = (typeof(pPriority) !== 'undefined') ? pPriority : 1000;\n\t\tlet tmpProvidor = (typeof(pProvider) === 'string') ? pProvider : 'Unknown';\n\t\tthis.inlineCSSMap[pHash] = { Hash: pHash, Content: pContent, Provider: tmpProvidor, Priority:tmpPriority };\n\t}\n\n\tremoveCSS(pHash)\n\t{\n\t\tdelete this.inlineCSSMap[pHash];\n\t}\n\n\tgenerateCSS()\n\t{\n\t\tlet tmpCSS = '';\n\t\tlet tmpCSSHashes = Object.keys(this.inlineCSSMap);\n\t\t// Sort the hashes by Priority\n\t\ttmpCSSHashes.sort((a, b) => { return this.inlineCSSMap[a].Priority - this.inlineCSSMap[b].Priority; });\n\t\tfor (let i = 0; i < tmpCSSHashes.length; i++)\n\t\t{\n\t\t\tlet tmpCSSFragment = this.inlineCSSMap[tmpCSSHashes[i]];\n\t\t\tlet tmpCSSComment = tmpCSSFragment.Hash;\n\t\t\tif (tmpCSSFragment.Hash != tmpCSSFragment.Provider)\n\t\t\t{\n\t\t\t\ttmpCSSComment = `${tmpCSSComment} from ${tmpCSSFragment.Provider}`;\n\t\t\t}\n\t\t\ttmpCSS += `/* ${tmpCSSComment} */\\n${tmpCSSFragment.Content}\\n`;\n\t\t}\n\t\treturn tmpCSS;\n\t}\n\n\t// Inject the CSS into the magic DOM element for it\n\tinjectCSS()\n\t{\n\t\tthis.services.ContentAssignment.assignContent(this.options.CSSElementAddress, this.generateCSS());\n\t}\n}\n\nmodule.exports = PictCSS;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictContentAssignment extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictContentAssignment';\n\n\t\t// Check to see if we are running in a browser\n\t\tthis.inBrowser = false;\n\t\tthis.hasDocument = false;\n\t\tif (typeof (window) == 'object')\n\t\t{\n\t\t\tthis.inBrowser = true;\n\t\t\t// Now check that the browser has a document object\n\t\t\tif ((typeof (window.document) != 'undefined') && (typeof (window.document.querySelectorAll) == 'function'))\n\t\t\t{\n\t\t\t\tthis.hasDocument = true;\n\t\t\t}\n\t\t}\n\n\t\t// If we're in a browser, check to see if jQuery is available.\n\t\tthis.hasJquery = false;\n\t\tthis.jQuery = false;\n\t\tif (this.inBrowser && typeof (window.jQuery) !== 'undefined')\n\t\t{\n\t\t\tthis.hasJquery = true;\n\t\t}\n\n\t\t// API Consumers can craft their own assign function\n\t\tthis.customAssignFunction = false;\n\t\t// API Consumers can also craft their own prepend function\n\t\tthis.customPrependFunction = false;\n\t\t// API Consumers can also craft their own append function\n\t\tthis.customAppendFunction = false;\n\n\t\t// API Consumers can also craft their own read function\n\t\tthis.customReadFunction = false;\n\t\t// API Consumers can even craft their own get element function.\n\t\tthis.customGetElementFunction = false;\n\n\t\t// API Consumers can also craft their own attribute read function\n\t\tthis.customReadAttributeFunction = false;\n\t\t// API Consumers can also craft their own attribute set function\n\t\tthis.customSetAttributeFunction = false;\n\t\t// API Consumers can also craft their own attribute remove function\n\t\tthis.customRemoveAttributeFunction = false;\n\n\t\t// API Consumers can also craft their own class read function\n\t\tthis.customReadClassFunction = false;\n\t\t// API Consumers can also craft their own class set function\n\t\tthis.customSetClassFunction = false;\n\t\t// API Consumers can also craft their own class remove function\n\t\tthis.customRemoveClassFunction = false;\n\t}\n\n\tgetElement(pAddress)\n\t{\n\t\tif (this.customGetElementFunction)\n\t\t{\n\t\t\treturn this.customGetElementFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpElements = window.jQuery(pAddress);\n\t\t\tif (tmpElements.length == 0)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// TODO: This isn't the most efficient method, but it is the most compatible.\n\t\t\t\tlet tmpElementSet = [];\n\t\t\t\tfor (let i = 0; i < tmpElements.length; i++)\n\t\t\t\t{\n\t\t\t\t\ttmpElementSet.push(tmpElements[0]);\n\t\t\t\t}\n\t\t\t\treturn tmpElementSet;\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\treturn window.document.querySelectorAll(pAddress);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content GET ELEMENT for [${pAddress}] will return empty because none of the browser methods are available`);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tassignContent(pAddress, pContent)\n\t{\n\t\tif (this.customAssignFunction)\n\t\t{\n\t\t\treturn this.customAssignFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element(s)\n\t\t\tlet tmpTargetElementSet = window.jQuery(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\t// Get the element(s)\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content ASSIGN to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tappendContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customAppendFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.append(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"beforeend\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content APPEND to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tprependContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customPrependFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.prepend(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"afterbegin\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content PREPEND in [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\treadContent(pAddress)\n\t{\n\t\tif (this.customReadFunction)\n\t\t{\n\t\t\treturn this.customReadFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\tswitch (tmpTargetElement.prop('tagName'))\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\treturn tmpTargetElement.val();\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\treturn tmpTargetElement.text();\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn tmpTargetElement.html();\n\t\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tif (tmpTargetElementSet.length < 1)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse if (tmpTargetElementSet.length == 1)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[0].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\treturn tmpTargetElementSet[0].value;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\treturn tmpTargetElementSet[0].text;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn tmpTargetElementSet[0].innerHTML;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content READ from [${pAddress}]...`);\n\t\t\treturn '';\n\t\t}\n\t}\n\n\n\taddClass(pAddress, pClass)\n\t{\n\t\tif (this.customSetClassFunction)\n\t\t{\n\t\t\treturn this.customSetClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.addClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.add(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content ADDCLASS to [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\tremoveClass(pAddress, pClass)\n\t{\n\t\tif (this.customRemoveClassFunction)\n\t\t{\n\t\t\treturn this.customRemoveClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.remove(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVECLASS from [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\treadAttribute(pAddress, pAttribute)\n\t{\n\t\tif (this.customReadAttributeFunction)\n\t\t{\n\t\t\treturn this.customReadAttributeFunction(pAddress, pAttribute);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.attr(pAttribute);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].getAttribute(pAttribute);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content READATTRIBUTE from [${pAddress}]:`, pAttribute);\n\t\t}\n\t}\n\n\tsetAttribute(pAddress, pAttribute, pValue)\n\t{\n\t\tif (this.customSetAttributeFunction)\n\t\t{\n\t\t\treturn this.customSetAttributeFunction(pAddress, pAttribute, pValue);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.attr(pAttribute, pValue);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].setAttribute(pAttribute, pValue);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content SETATTRIBUTE for [${pAddress}] ATTRIBUTE [${pAttribute}]:`, pValue);\n\t\t}\n\t}\n\n\tremoveAttribute(pAddress, pAttribute)\n\t{\n\t\tif (this.customRemoveAttributeFunction)\n\t\t{\n\t\t\treturn this.customRemoveAttributeFunction(pAddress, pAttribute);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeAttr(pAttribute);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].removeAttribute(pAttribute);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVEATTRIBUTE for [${pAddress}] ATTRIBUTE [${pAttribute}]`);\n\t\t}\n\t}\n\n\thasClass(pAddress, pClass)\n\t{\n\t\tif (this.customReadClassFunction)\n\t\t{\n\t\t\treturn this.customReadClassFunction(pAddress, pClass);\n\t\t}\n\t\tif (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\treturn tmpTargetElement.hasClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\treturn tmpTargetElementSet[i].classList.contains(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content HASCLASS for [${pAddress}] CLASS [${pClass}]:`);\n\t\t}\n\t}\n}\n\nmodule.exports = PictContentAssignment;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictDataProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictDataProvider';\n\t}\n\n    getDataByAddress(pAddress, pData)\n    {\n        let tmpData = (typeof(pData) === 'undefined') ? {} : pData;\n\n        return this.fable.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, pAddress);\n    }\n}\n\nmodule.exports = PictDataProvider;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictMeadowEntityProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictMeadowProvider';\n\n\t\tif (this.fable.settings.PictDefaultURLPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = this.fable.settings.PictDefaultURLPrefix;\n\t\t}\n\t\telse if (!this.options.urlPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = '/1.0/';\n\t\t}\n\n\t\tif (this.fable.settings.PictDefaultDownloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = this.fable.settings.PictDefaultDownloadBatchSize;\n\t\t}\n\t\telse if (!this.options.downloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = 100;\n\t\t}\n\n\t\tthis.restClient = this.fable.instantiateServiceProviderWithoutRegistration('RestClient');\n\n\t\tthis.cache = {};\n\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tinitializeCache(pEntity)\n\t{\n\t\t// This should not be happening as often as it's happening.\n\t\tif (!this.cache.hasOwnProperty(pEntity))\n\t\t{\n\t\t\tthis.cache[pEntity] = this.fable.instantiateServiceProviderWithoutRegistration('ObjectCache');\n\t\t\t// TODO: Make this a configuration?\n\t\t\t// For now cache for 30 seconds.\n\t\t\tthis.cache[pEntity].maxAge = 30000;\n\t\t\tthis.cache[pEntity].maxLength = 10000;\n\n\t\t\tthis.fable.Bundle[pEntity] = this.cache[pEntity].RecordMap;\n\t\t}\n\t}\n\n\tgetEntity(pEntity, pIDRecord, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\tfunction ()\n\t\t\t{\n\t\t\t\tlet tmpPossibleRecord = this.cache[pEntity].read(pIDRecord);\n\n\t\t\t\tif (tmpPossibleRecord)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(null, tmpPossibleRecord);\n\t\t\t\t}\n\n\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}/${pIDRecord}`\n\t\t\t\t\t});\n\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pBody)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.cache[pEntity].put(pBody, pIDRecord);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pBody);\n\t\t\t\t\t});\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySetPage(pEntity, pMeadowFilterExpression, pRecordStartCursor, pRecordCount, fCallback)\n\t{\n\t\tlet tmpURL = `${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${pRecordStartCursor}/${pRecordCount}`;\n\n\t\treturn this.restClient.getJSON(tmpURL,\n\t\t\tfunction (pDownloadError, pDownloadResponse, pDownloadBody)\n\t\t\t{\n\t\t\t\treturn fCallback(pDownloadError, pDownloadBody);\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySetRecordCount(pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\tlet tmpURL = `${this.options.urlPrefix}${pEntity}s/Count/FilteredTo/${pMeadowFilterExpression}`;\n\n\t\treturn this.restClient.getJSON(tmpURL,\n\t\t\tfunction (pError, pResponse, pBody)\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\tthis.log.error(`Error getting entity count of [${pEntity}] filtered to [${pMeadowFilterExpression}] from url [${tmpURL}]: ${pError}`);\n\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t}\n\t\t\t\tlet tmpRecordCount = 0;\n\t\t\t\tif (pBody.Count)\n\t\t\t\t{\n\t\t\t\t\ttmpRecordCount = pBody.Count;\n\t\t\t\t}\n\t\t\t\treturn fCallback(pError, tmpRecordCount);\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySet(pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\t// TODO: Should we test for too many record IDs here by string length in pMeadowFilterExpression?\n\t\t//       FBL~ID${pDestinationEntity}~INN~${tmpIDRecordsCommaSeparated}\n\t\t//       If the list is mega-long we can parse it and break it into chunks.\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\tfunction ()\n\t\t\t{\n\t\t\t\treturn this.getEntitySetRecordCount(pEntity, pMeadowFilterExpression,\n\t\t\t\t\t(pRecordCountError, pRecordCount) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pRecordCountError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn fCallback(pRecordCountError);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet tmpRecordCount = pRecordCount;\n\n\t\t\t\t\t\tif (isNaN(pRecordCount))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Entity count did not return a number for [${pEntity}] filtered to [${pMeadowFilterExpression}]... something is fatally wrong from the server accessed in getEntitySet call.`);\n\t\t\t\t\t\t\treturn fCallback(new Error('Entity count did not return a number in getEntitySet.'));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpDownloadURIFragments = [];\n\t\t\t\t\t\tlet tmpDownloadBatchSize = this.options.downloadBatchSize;\n\t\t\t\t\t\tfor (let i = 0; i < (tmpRecordCount / tmpDownloadBatchSize); i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Generate each of the URI fragments to download\n\t\t\t\t\t\t\ttmpDownloadURIFragments.push(`${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${i * tmpDownloadBatchSize}/${tmpDownloadBatchSize}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpEntitySet = [];\n\n\t\t\t\t\t\t// Now run these in series (it's possible to parallelize the requests but they would not be in server order)\n\t\t\t\t\t\tthis.fable.Utility.eachLimit(tmpDownloadURIFragments, 1,\n\t\t\t\t\t\t\t(pURIFragment, fDownloadCallback) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.restClient.getJSON(pURIFragment,\n\t\t\t\t\t\t\t\t\t(pDownloadError, pDownloadResponse, pDownloadBody) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmpEntitySet = tmpEntitySet.concat(pDownloadBody);\n\t\t\t\t\t\t\t\t\t\t// Should we be caching each record?\n\t\t\t\t\t\t\t\t\t\treturn fDownloadCallback(pDownloadError);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(pFullDownloadError) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(pFullDownloadError, tmpEntitySet);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t}.bind(this));\n\t}\n}\n\nmodule.exports = PictMeadowEntityProvider;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictTemplateProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictTemplateProvider';\n\n        this.templates = {};\n        this.templateSources = {};\n\n        // Default templates are stored by prefix.\n        // The longest prefix match is used.\n        // Case sensitive.\n        this.defaultTemplates = [];\n\n        // This function can be overloaded to load templates from a database, in a page or other source.\n        this.loadTemplateFunction = (pTemplateHash) => { return false; };\n\t}\n\n    addTemplate(pTemplateHash, pTemplate, pTemplateSource)\n    {\n        this.templates[pTemplateHash] = pTemplate;\n\n        if (typeof(pTemplateSource) == 'string')\n        {\n            this.templateSources[pTemplateHash] = pTemplateSource;\n        }\n        else\n        {\n            this.templateSources[pTemplateHash] = `Direct addTemplate('${pTemplateHash}') function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`;\n        }\n    }\n\n    addDefaultTemplate(pPrefix, pPostfix, pTemplate, pSource)\n    {\n        let tmpSource = (typeof(pSource) == 'string') ? pSource : `Direct addDefaultTemplate('${pPrefix}','${pPostfix}',..) function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`\n        let tmpDefaultTemplate = {\n            prefix: pPrefix,\n            postfix: pPostfix,\n            template: pTemplate,\n            source: tmpSource\n        };\n        if (typeof(pTemplate) != 'string')\n        {\n            this.log.error('PictTemplateProvider.addDefaultTemplate: pTemplate is not a string.');\n        }\n        this.defaultTemplates.push(tmpDefaultTemplate);\n    }\n\n    checkDefaultTemplateHash(pTemplateHash)\n    {\n        /*\n         * Default templates are managed by postfix and prefix.  The use case is things like titles, headers, list \n         * wrappers, rows, etc.\n         *\n         * So we might have a default template for a list wrapper and it should expect \"-ListWrap\" as the postfix.\n         * And we might have a default template for a list row and it should expect \"-ListRow\" as the postfix.\n         * The list might have a \"-ListTitle\", or we might have shared titles and it would just be \"-Title\".\n         * \n         * The idea is to allow fallbacks on defaults.\n         */\n        for (let i = 0; i < this.defaultTemplates.length; i++)\n        {\n            if ((pTemplateHash.indexOf(this.defaultTemplates[i].postfix) == pTemplateHash.length - this.defaultTemplates[i].postfix.length)\n                && (pTemplateHash.indexOf(this.defaultTemplates[i].prefix) == 0))\n            {\n                this.templates[pTemplateHash] = this.defaultTemplates[i].template;\n                this.templateSources[pTemplateHash] = `Auto created in checkDefaultTemplateHash('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${this.defaultTemplates[i].prefix}]...[${this.defaultTemplates[i].postfix}]`;\n                return this.templates[pTemplateHash];\n            }\n        }\n        return false;\n    }\n\n    getTemplate(pTemplateHash)\n    {\n        // TODO: Optimize this.\n        // If the template doesn't exist, try to load it with the loading function\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.loadTemplate(pTemplateHash);\n        }\n        // If the loading function fails, try to load it from the default templates\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.checkDefaultTemplateHash(pTemplateHash);\n        }\n        if (this.templates.hasOwnProperty(pTemplateHash))\n        {\n            return this.templates[pTemplateHash];\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    loadTemplate(pTemplateHash)\n    {\n        let tmpTemplate = this.loadTemplateFunction(pTemplateHash);\n\n        if (tmpTemplate)\n        {\n            this.templates[pTemplateHash] = tmpTemplate.template;\n            this.templateSources[pTemplateHash] = `Loaded in loadTemplate('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${tmpTemplate.source}]`;\n\n        }\n\n        return tmpTemplate;\n    }\n}\n\nmodule.exports = PictTemplateProvider;","/**\n* @author <steven@velozo.com>\n*/\nconst libFable = require('fable');\n\nclass Pict extends libFable\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\tthis.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n\n\t\t// The templateProvider provides a basic key->template mapping with default fallback capabilities\n\t\tthis.addAndInstantiateServiceType('TemplateProvider', require('./Pict-Template-Provider.js'));\n\t\tthis.addAndInstantiateServiceType('EntityProvider',  require('./Pict-Meadow-EntityProvider.js'));\n\t\tthis.addAndInstantiateServiceType('DataProvider',  require('./Pict-DataProvider.js'));\n\t\tthis.addAndInstantiateServiceType('ContentAssignment',  require('./Pict-Content-Assignment.js'));\n\t\tthis.addAndInstantiateServiceType('CSSMap', require('./Pict-CSS.js'));\n\n\t\tthis.instantiateServiceProvider('MetaTemplate');\n\t\tthis.instantiateServiceProvider('DataGeneration');\n\n\t\tthis.manifest = this.instantiateServiceProvider('Manifest');\n\n\t\tthis.AppData = {};\n\t\tthis.Bundle = {};\n\n\t\t// Log noisness goes from 0 - 5, where 5 is show me everything.\n\t\tthis.LogNoisiness = 0;\n\n\t\t// Load manifest sets\n\t\tif (this.settings.Manifests)\n\t\t{\n\t\t\tthis.loadManifestSet(this.settings.Manifests);\n\t\t}\n\n\t\tthis._DefaultPictTemplatesInitialized = false;\n\t\tthis.initializePictTemplateEngine();\n\n\t\tthis.addServiceType('PictView',  require('pict-view'));\n\t\tthis.addServiceType('PictApplication',  require('pict-application'));\n\n\t\t// Expose the named views directly, through a convenience accessor\n\t\tthis.views = this.servicesMap.PictView;\n\t}\n\n\t// Load manifests in as Hashed services\n\tloadManifestSet (pManifestSet)\n\t{\n\t\tif (typeof(pManifestSet) != 'object')\n\t\t{\n\t\t\tthis.log.warn(`PICT [${this.UUID}] could not load Manifest Set; pManifestSet was not an object.`);\n\t\t\treturn false;\n\t\t}\n\t\tlet tmpManifestKeys = Object.keys(pManifestSet);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++ )\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.instantiateServiceProvider('Manifest', pManifestSet[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddView(pViewHash, pOptions, pViewPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpViewHash = (typeof(pViewHash) == 'string') ? pViewHash : this.fable.getUUID();\n\n\t\tif (typeof(pViewPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pViewPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pViewPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictView', tmpOptions, tmpViewHash, pViewPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictView', tmpOptions, tmpViewHash);\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddApplication(pApplicationHash, pOptions, pApplicationPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpApplicationHash = (typeof(pApplicationHash) == 'string') ? pApplicationHash : this.fable.getUUID();\n\n\t\tif (typeof(pApplicationPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pApplicationPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pApplicationPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictApplication', tmpOptions, tmpApplicationHash, pApplicationPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictApplication', tmpOptions, tmpApplicationHash);\n\t\t}\n\t}\n\n\tinitializePictTemplateEngine()\n\t{\n\t\t/*\n\t\t *\n\t\t * To stave off madness, these are inefficient for now.  The wkhtmltopdf renderer leaves much to be desired\n\t\t * in the way of feedback with regards to javascript compatibility.\n\t\t *\n\t\t */\n\t\tif (!this._DefaultPictTemplatesInitialized)\n\t\t{\n\t\t\t// Expects one of the following:\n\t\t\t// \t\t{~E:Book^AppData.Some.Address.IDBook^Render-Book-Template~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook and render it to Render-Book-Template\n\t\t\tlet fEntityRender = (pHash, pData, fCallback) =>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpEntity = false;\n\t\t\t\t\tlet tmpEntityID = false;\n\t\t\t\t\tlet tmpEntityTemplate = false;\n\n\t\t\t\t\t// This expression requires 2 parts -- a third is optional, and, if present, is the template to render to.\n\t\t\t\t\tlet tmpAddressParts = tmpHash.split('^');\n\n\t\t\t\t\tif (tmpAddressParts.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpEntity = tmpAddressParts[0].trim();\n\t\t\t\t\ttmpEntityID = tmpAddressParts[1].trim();\n\t\t\t\t\ttmpEntityTemplate = tmpAddressParts[2].trim();\n\n\t\t\t\t\tif (!isNaN(tmpEntityID))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpEntityID = parseInt(tmpEntityID);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is an address, so we need to get the value at the address\n\t\t\t\t\t\ttmpEntityID = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpEntityID);\n\t\t\t\t\t}\n\n\t\t\t\t\t// No Entity or EntityID\n\t\t\t\t\tif (!tmpEntity || !tmpEntityID)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]  Entity: ${tmpEntity} ID: ${tmpEntityID}`);\n\t\t\t\t\t\treturn tmpCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]  Entity: ${tmpEntity} ID: ${tmpEntityID}`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`Pict: Entity Render: Entity [${tmpEntity}] with ID [${tmpEntityID}] as template [${tmpEntityTemplate}] from [${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to get the entity\n\t\t\t\t\tthis.EntityProvider.getEntity(tmpEntity, tmpEntityID,\n\t\t\t\t\t\tfunction (pError, pRecord)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Pict: Entity Render: Error getting entity [${tmpEntity}] with ID [${tmpEntityID}] for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Now render the template\n\t\t\t\t\t\t\tif (tmpEntityTemplate)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpEntityTemplate, pRecord, tmpCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn tmpCallback(null, '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(this));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternAsync('{~E:', '~}', fEntityRender);\n\t\t\tthis.MetaTemplate.addPatternAsync('{~Entity:', '~}', fEntityRender);\n\n\t\t\t// {~T:Template:AddressOfData~}\n\t\t\tlet fTemplateRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render Async: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render Async: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData),\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~T:', '~}', fTemplateRender, fTemplateRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~Template:', '~}', fTemplateRender, fTemplateRenderAsync);\n\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateSetRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0]\n\t\t\t\t\ttmpAddressOfData = tmpTemplateHashPart[1];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\ttmpData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData);\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TS:', '~}', fTemplateSetRender, fTemplateSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateSet:', '~}', fTemplateSetRender, fTemplateSetRenderAsync);\n\n// Refactor: #### DRY PROBLEM Too much dry needing fixed at this point\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateValueSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData);\n\n\t\t\t\t\tlet tmpDataValueSet = [];\n\t\t\t\t\tif (Array.isArray(tmpData))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < tmpData.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[i]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof(tmpData) === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueKeys = Object.keys(tmpData);\n\t\t\t\t\t\tfor (let i = 0; i < tmpValueKeys.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[tmpValueKeys[i]]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData});\n\t\t\t\t\t}\n\t\t\t\t\ttmpData = tmpDataValueSet;\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, tmpData);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateValueSetRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0]\n\t\t\t\t\ttmpAddressOfData = tmpTemplateHashPart[1];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\ttmpData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData);\n\n\t\t\t\t\tlet tmpDataValueSet = [];\n\t\t\t\t\tif (Array.isArray(tmpData))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < tmpData.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[i]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof(tmpData) === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueKeys = Object.keys(tmpData);\n\t\t\t\t\t\tfor (let i = 0; i < tmpValueKeys.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[tmpValueKeys[i]]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData});\n\t\t\t\t\t}\n\t\t\t\t\ttmpData = tmpDataValueSet;\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TVS:', '~}', fTemplateValueSetRender, fTemplateValueSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateValueSet:', '~}', fTemplateValueSetRender, fTemplateValueSetRenderAsync);\n\n\t\t\t// {~T:TemplateFromMap:AddressOfData~}\n\t\t\tlet fTemplateFromMapRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfMap);\n\t\t\t\t\tlet tmpKey = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfKey);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, tmpData);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateFromMapRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfMap);\n\t\t\t\t\tlet tmpKey = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfKey);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from TemplateFromMaps\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TFM:', '~}', fTemplateFromMapRender, fTemplateFromMapRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateFromMap:', '~}', fTemplateFromMapRender, fTemplateFromMapRenderAsync);\n\n\t\t\t// {~TS:TemplateFromMap:AddressOfDataSet~}\n\t\t\tlet fTemplateFromMapSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfMap);\n\t\t\t\t\tlet tmpKey = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfKey);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateFromMapSetRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMapSet Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfMap);\n\t\t\t\t\tlet tmpKey = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfKey);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMapSet Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from TemplateFromMaps\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TSFM:', '~}', fTemplateFromMapSetRender, fTemplateFromMapSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateSetFromMap:', '~}', fTemplateFromMapSetRender, fTemplateFromMapSetRenderAsync);\n// Refactor: #### END OF DRY PROBLEM\n\n\n\n\t\t\t//{~Data:AppData.Some.Value.to.Render~}\n\t\t\tlet fDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = '';\n\t\t\t\t\tif (tmpHash != null)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\t}\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn tmpValue;\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~D:', '~}', fDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Data:', '~}', fDataRender);\n\n\t\t\t//<p>{~Join: - ^Record.d1^Record.d1~}</p>\n\t\t\tlet fJoinDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash;\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDataAddresses = tmpHash.split('^');\n\t\t\t\t\tif (tmpDataAddresses.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get the separator string\n\t\t\t\t\tlet tmpSeparator = tmpDataAddresses.shift();\n\n\t\t\t\t\tlet tmpValueList = [];\n\t\t\t\t\tfor (let i = 0; i < tmpDataAddresses.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpDataAddresses[i]);\n\t\t\t\t\t\tif (tmpValue)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpValueList.push(tmpValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpValueList.join(tmpSeparator);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~J:', '~}', fJoinDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Join:', '~}', fJoinDataRender);\n\n\t\t\t//<p>{~JoinUnique: - ^Record.d1^Record.d1~}</p>\n\t\t\tlet fJoinUniqueDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash;\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join Unique [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join Unique [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDataAddresses = tmpHash.split('^');\n\t\t\t\t\tif (tmpDataAddresses.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get the separator string\n\t\t\t\t\tlet tmpSeparator = tmpDataAddresses.shift();\n\n\t\t\t\t\tlet tmpValueList = [];\n\t\t\t\t\tlet tmpValueMap = {};\n\t\t\t\t\tfor (let i = 0; i < tmpDataAddresses.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpDataAddresses[i]);\n\t\t\t\t\t\tif (tmpValue)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!tmpValueMap.hasOwnProperty(tmpValue))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValueMap[tmpValue] = true;\n\t\t\t\t\t\t\t\ttmpValueList.push(tmpValue);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpValueList.join(tmpSeparator);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~JU:', '~}', fJoinUniqueDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~JoinUnique:', '~}', fJoinUniqueDataRender);\n\n\t\t\tthis.MetaTemplate.addPattern('{~Dollars:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterDollars(tmpColumnData);\n\t\t\t\t});\n\t\t\tthis.MetaTemplate.addPattern('{~Digits:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterAddCommasToNumber(this.DataFormat.formatterRoundNumber(tmpColumnData, 2));\n\t\t\t\t});\n\t\t\t\n\t\t\t// Output the date as a YYYY-MM-DD string\n\t\t\tthis.MetaTemplate.addPattern('{~DateYMD:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpDateValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: Modularize this\n\t\t\t\t\tlet tmpDayJS = this.fable.Dates.dayJS.utc(tmpDateValue);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Try to cast the day to be a specific timezone if one is set for the app\n\t\t\t\t\t\tif (this.options.Timezone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.options.Timezone);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`Error casting Document date ${tmpSQLDateTime} to the Document timezone using tz in this.AppData.DocumentData.Timezone: [${this.AppData.DocumentData.Timezone}] .. casting to the browser guess which is [${this.fable.Dates.dayJS.tz.guess()}].`);\n\t\t\t\t\t\t// Day.js will try to guess the user's timezone for us\n\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpDayJS.format('YYYY-MM-DD');\n\t\t\t\t});\n\n\t\t\t\n\t\t\t// Output the date as a YYYY-MM-DD string\n\t\t\t// Takes in the format as the second parameter: {~DateYMD:AppData.Some.Date^YYYY-MM-DD~}\n\t\t\tthis.MetaTemplate.addPattern('{~DateFormat:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpDateValueSet = tmpHash.split('^');\n\n\t\t\t\t\tif (tmpDateValueSet.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PICT Template [fDateFormat]::[${tmpHash}] did not have a valid format string and date.`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDateValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpDateValueSet[0]);\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: Modularize this\n\t\t\t\t\tlet tmpDayJS = this.fable.Dates.dayJS.utc(tmpDateValue);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Try to cast the day to be a specific timezone if one is set for the app\n\t\t\t\t\t\tif (this.options.Timezone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.options.Timezone);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`Error casting Document date ${tmpSQLDateTime} to the Document timezone using tz in this.AppData.DocumentData.Timezone: [${this.AppData.DocumentData.Timezone}] .. casting to the browser guess which is [${this.fable.Dates.dayJS.tz.guess()}].`);\n\t\t\t\t\t\t// Day.js will try to guess the user's timezone for us\n\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpDayJS.format(tmpDateValueSet[1]);\n\t\t\t\t});\n\t\t\t// {NE~Some.Address|If the left value is truthy, render this value.~}\n\t\t\tlet fNotEmptyRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Should switch this to indexOf so pipes can be in the content.\n\t\t\t\t\tlet tmpHashParts = tmpHash.split('|');\n\n\t\t\t\t\t// For now just check truthiness\n\t\t\t\t\tif (this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHashParts[0]))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpHashParts[1];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~NotEmpty:', '~}', fNotEmptyRender);\n\t\t\tthis.MetaTemplate.addPattern('{~NE:', '~}', fNotEmptyRender);\n\n\t\t\tlet fRandomNumberString = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumberString]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpStringLength = 4;\n\t\t\t\t\tlet tmpMaxNumber = 9999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpStringLength = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomNumericString(tmpStringLength, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumberString:', '~}',fRandomNumberString);\n\t\t\tthis.MetaTemplate.addPattern('{~RNS:', '~}',fRandomNumberString);\n\n\t\t\tlet fRandomNumber = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumber]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpMinimumNumber = 0;\n\t\t\t\t\tlet tmpMaxNumber = 9999999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMinimumNumber = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomIntegerBetween(tmpMinimumNumber, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumber:', '~}',fRandomNumber);\n\t\t\tthis.MetaTemplate.addPattern('{~RN:', '~}',fRandomNumber);\n\n\t\t\tlet fPascalCaseIdentifier = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn this.DataFormat.cleanNonAlphaCharacters(this.DataFormat.capitalizeEachWord(tmpValue));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~PascalCaseIdentifier:', '~}',fPascalCaseIdentifier);\n\n\t\t\tlet fLogValue = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tlet tmpValueType = typeof(tmpValue);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValueType == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is ${tmpValueType}.`);\n\t\t\t\t\t}\n\t\t\t\t\telse if (tmpValueType == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is an obect.`, tmpValue);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is a ${tmpValueType} = [${tmpValue}]`);\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogValue:', '~}',fLogValue);\n\t\t\tthis.MetaTemplate.addPattern('{~LV:', '~}',fLogValue);\n\n\n\t\t\tlet fLogStatement = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tthis.log.trace(`PICT Template Log Message: ${tmpHash}`);\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogStatement:', '~}',fLogStatement);\n\t\t\tthis.MetaTemplate.addPattern('{~LS:', '~}',fLogStatement);\n\n\t\t\tlet fBreakpoint = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpError = new Error(`PICT Template Breakpoint: ${tmpHash}`);\n\t\t\t\t\tthis.log.trace(`PICT Template Breakpoint: ${tmpHash}`, tmpError.stack);\n\t\t\t\t\tdebugger;\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~Breakpoint', '~}',fBreakpoint);\n\n\t\t\tthis._DefaultPictTemplatesInitialized = true;\n\t\t}\n\t}\n\n\tparseTemplate (pTemplateString, pData, fCallback)\n\t{\n\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\treturn this.MetaTemplate.parseString(pTemplateString, tmpData, fCallback);\n\t}\n\n\tparseTemplateByHash (pTemplateHash, pData, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\ttmpTemplateString = '';\n\t\t}\n\t\treturn this.parseTemplate(tmpTemplateString, pData, fCallback);\n\t}\n\n\tparseTemplateSet (pTemplateString, pDataSet, fCallback)\n\t{\n\t\t// TODO: This will need streaming -- for now janky old string append does the trick\n\t\tlet tmpValue = '';\n\t\tif (typeof(fCallback) == 'function')\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tthis.Utility.eachLimit(pDataSet, 1,\n\t\t\t\t\t(pRecord, fRecordTemplateCallback)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplate(pTemplateString, pRecord,\n\t\t\t\t\t\t\t(pError, pTemplateResult)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValue += pTemplateResult;\n\t\t\t\t\t\t\t\treturn fRecordTemplateCallback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t(pError)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fCallback(pError, tmpValue);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn fCallback(Error('Pict: Template Set: pDataSet is not an array or object.'), '');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tif (Array.isArray(pDataSet))\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < pDataSet.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpKeys = Object.keys(pDataSet);\n\t\t\t\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[tmpKeys[i]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpValue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\tparseTemplateSetByHash (pTemplateHash, pDataSet, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\ttmpTemplateString = '';\n\t\t}\n\t\treturn this.parseTemplateSet(tmpTemplateString, pDataSet, fCallback);\n\t}\n};\n\nmodule.exports = Pict;\n\nmodule.exports.PictApplicationClass = require('pict-application');\nmodule.exports.PictViewClass = require('pict-view');\n\nmodule.exports.EnvironmentLog = require('./environments/Pict-Environment-Log.js');\nmodule.exports.EnvironmentObject = require('./environments/Pict-Environment-Object.js');\n\n// This is to help understand the type of enivironement we're executing in\nmodule.exports.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");","/**\n* Pict browser shim loader\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\n\nclass PictEnvironmentLog\n{\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\n\t\tthis.pict.ContentAssignment.customReadAttributeFunction = this.customReadAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetAttributeFunction = this.customSetAttributeFunction.bind(this);\n\t}\n\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\tcustomGetElementFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\tcustomReadFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\tcustomAppendFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\tcustomPrependFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomAssignFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Assign.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomReadAttributeFunction (pAddress, pAttribute)\n\t{\n\t\tthis.pict.log.info(`Mocking an READ ATTRIBUTE from Address -> [${pAddress}]`, {Attribute: pAttribute});\n\t\treturn '';\n\t}\n\n\tcustomSetAttributeFunction (pAddress, pAttribute, pContent)\n\t{\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an SET ATTRIBUTE to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Attribute: pAttribute, Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an SET ATTRIBUTE to Address -> [${pAddress}]`, {Attribute: pAttribute, Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n}\n\nmodule.exports = PictEnvironmentLog;","/**\n* Pict browser shim loader with Object statefulness for the environement\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\n\nclass PictEnvironmentObject\n{\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.contentMap._ATTRIBUTE_MAP = {};\n\t\tthis.contentMap._CLASS_MAP = {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\t\tthis.eventLog.ReadAttribute = [];\n\t\tthis.eventLog.SetAttribute = [];\n\t\tthis.eventLog.RemoveAttribute = [];\n\t\tthis.eventLog.ReadClass = [];\n\t\tthis.eventLog.SetClass = [];\n\t\tthis.eventLog.RemoveClass = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadAttributeFunction = this.customReadAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetAttributeFunction = this.customSetAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customRemoveAttributeFunction = this.customRemoveAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadClassFunction = this.customReadClassFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetClassFunction = this.customSetClassFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customRemoveClassFunction = this.customRemoveClassFunction.bind(this);\n\t}\n\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\tcustomGetElementFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\t}\n\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\tcustomReadFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\t}\n\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\tcustomAppendFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = (typeof(this.contentMap[pAddress]) == 'undefined') ? pContent : this.contentMap[pAddress] + pContent;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\tcustomPrependFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = (typeof(this.contentMap[pAddress]) == 'undefined') ? pContent : pContent + this.contentMap[pAddress];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomAssignFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = pContent;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tinitializeAttributeMapLocation(pAddress, pAttribute)\n\t{\n\t\tif (!this.contentMap._ATTRIBUTE_MAP.hasOwnProperty(pAddress))\n\t\t{\n\t\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress] = {};\n\t\t}\n\t\tif (!this.contentMap._ATTRIBUTE_MAP[pAddress].hasOwnProperty(pAttribute))\n\t\t{\n\t\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute] = false;\n\t\t}\n\t}\n\n\tinitializeClassMapLocation(pAddress)\n\t{\n\t\tif (!this.contentMap._CLASS_MAP.hasOwnProperty(pAddress))\n\t\t{\n\t\t\tthis.contentMap._CLASS_MAP[pAddress] = [];\n\t\t}\n\t}\n\n\tcustomReadAttributeFunction (pAddress, pAttribute)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tlet tmpContent = this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (tmpContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE READ for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: tmpContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE READ for Address -> [${pAddress}]::[${pAttribute}]`, {Content: tmpContent});\n\t\t}\n\t\treturn tmpContent;\n\t}\n\n\tcustomSetAttributeFunction (pAddress, pAttribute, pValue)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute] = pValue;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (pValue.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE SET for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pValue.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE SET for Address -> [${pAddress}]::[${pAttribute}]`, {Content: pValue});\n\t\t}\n\t\treturn pValue;\n\t}\n\n\tcustomRemoveAttributeFunction (pAddress, pAttribute)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tlet tmpContent = this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (tmpContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE REMOVE for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: tmpContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE REMOVE for Address -> [${pAddress}]::[${pAttribute}]`, {Content: tmpContent});\n\t\t}\n\n\t\tdelete this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\treturn true;\n\t}\n\n\tcustomReadClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tconst tmpContent = this.contentMap._CLASS_MAP[pAddress].indexOf(pClass) > -1;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS READ for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent});\n\n\t\treturn tmpContent;\n\t}\n\n\tcustomSetClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tlet tmpContent = this.contentMap._CLASS_MAP[pAddress];\n\n\t\tif (!this.contentMap._CLASS_MAP[pAddress].indexOf(pClass) > -1)\n\t\t{\n\t\t\tthis.contentMap._CLASS_MAP[pAddress].push(pClass);\n\t\t}\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS SET for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent.join(' ')});\n\n\t\treturn tmpContent;\n\t}\n\n\tcustomRemoveClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tlet tmpContent = this.contentMap._CLASS_MAP[pAddress];\n\n\t\tthis.contentMap._CLASS_MAP[pAddress].splice(pClass);\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS REMOVE for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent.join(' ')});\n\n\t\treturn tmpContent;\n\t}\n}\n\nmodule.exports = PictEnvironmentObject;"]}