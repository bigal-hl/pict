{"version":3,"sources":["pict.compatible.min.js","node_modules/browser-pack/_prelude.js","node_modules/async.eachlimit/index.js","node_modules/async.iterator/index.js","node_modules/async.util.eachoflimit/index.js","node_modules/async.util.ensureasync/index.js","node_modules/async.util.isarray/index.js","node_modules/async.util.isarraylike/index.js","node_modules/async.util.keyiterator/index.js","node_modules/async.util.keys/index.js","node_modules/async.util.noop/index.js","node_modules/async.util.once/index.js","node_modules/async.util.onlyonce/index.js","node_modules/async.util.restparam/index.js","node_modules/async.util.setimmediate/index.js","node_modules/async.util.withoutindex/index.js","node_modules/async.waterfall/index.js","node_modules/base64-js/index.js","node_modules/big.js/big.js","node_modules/buffer/index.js","node_modules/builtin-status-codes/browser.js","node_modules/cachetrax/source/CacheTrax.js","node_modules/cachetrax/source/LinkedList-Node.js","node_modules/cachetrax/source/LinkedList.js","node_modules/call-bind/callBound.js","node_modules/call-bind/index.js","node_modules/cookie/index.js","node_modules/dayjs/dayjs.min.js","node_modules/dayjs/plugin/advancedFormat.js","node_modules/dayjs/plugin/isoWeek.js","node_modules/dayjs/plugin/relativeTime.js","node_modules/dayjs/plugin/timezone.js","node_modules/dayjs/plugin/utc.js","node_modules/dayjs/plugin/weekOfYear.js","node_modules/dayjs/plugin/weekday.js","node_modules/define-data-property/index.js","node_modules/es-define-property/index.js","node_modules/es-errors/eval.js","node_modules/es-errors/index.js","node_modules/es-errors/range.js","node_modules/es-errors/ref.js","node_modules/es-errors/syntax.js","node_modules/es-errors/type.js","node_modules/es-errors/uri.js","node_modules/events/events.js","node_modules/fable-log/source/Fable-Log-BaseLogger.js","node_modules/fable-log/source/Fable-Log-DefaultProviders-Web.js","node_modules/fable-log/source/Fable-Log-DefaultStreams.json","node_modules/fable-log/source/Fable-Log-Logger-Console.js","node_modules/fable-log/source/Fable-Log-Logger-SimpleFlatFile.js","node_modules/fable-log/source/Fable-Log.js","node_modules/fable-serviceproviderbase/source/Fable-ServiceProviderBase.js","node_modules/fable-settings/source/Fable-Settings-Default.json","node_modules/fable-settings/source/Fable-Settings-TemplateProcessor.js","node_modules/fable-settings/source/Fable-Settings.js","node_modules/fable-uuid/source/Fable-UUID-Random-Browser.js","node_modules/fable-uuid/source/Fable-UUID.js","node_modules/fable/source/Fable.js","node_modules/fable/source/services/Fable-Service-Anticipate.js","node_modules/fable/source/services/Fable-Service-CSVParser.js","node_modules/fable/source/services/Fable-Service-DataFormat.js","node_modules/fable/source/services/Fable-Service-DataGeneration-DefaultValues.json","node_modules/fable/source/services/Fable-Service-DataGeneration.js","node_modules/fable/source/services/Fable-Service-DateManipulation.js","node_modules/fable/source/services/Fable-Service-EnvironmentData.js","node_modules/fable/source/services/Fable-Service-ExpressionParser.js","node_modules/fable/source/services/Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-Base.js","node_modules/fable/source/services/Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-ExpressionTokenizer.js","node_modules/fable/source/services/Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-FunctionMap.json","node_modules/fable/source/services/Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-Linter.js","node_modules/fable/source/services/Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-Postfix.js","node_modules/fable/source/services/Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-SolvePostfixedExpression.js","node_modules/fable/source/services/Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-TokenMap.json","node_modules/fable/source/services/Fable-Service-FilePersistence.js","node_modules/fable/source/services/Fable-Service-Math.js","node_modules/fable/source/services/Fable-Service-MetaTemplate.js","node_modules/fable/source/services/Fable-Service-MetaTemplate/MetaTemplate-StringParser.js","node_modules/fable/source/services/Fable-Service-MetaTemplate/MetaTemplate-WordTree.js","node_modules/fable/source/services/Fable-Service-Operation-DefaultSettings.js","node_modules/fable/source/services/Fable-Service-Operation.js","node_modules/fable/source/services/Fable-Service-ProgressTime.js","node_modules/fable/source/services/Fable-Service-ProgressTracker/ProgressTracker.js","node_modules/fable/source/services/Fable-Service-ProgressTrackerSet.js","node_modules/fable/source/services/Fable-Service-RestClient.js","node_modules/fable/source/services/Fable-Service-Template.js","node_modules/fable/source/services/Fable-Service-Utility.js","node_modules/function-bind/implementation.js","node_modules/function-bind/index.js","node_modules/get-intrinsic/index.js","node_modules/gopd/index.js","node_modules/has-property-descriptors/index.js","node_modules/has-proto/index.js","node_modules/has-symbols/index.js","node_modules/has-symbols/shams.js","node_modules/hasown/index.js","node_modules/https-browserify/index.js","node_modules/ieee754/index.js","node_modules/inherits/inherits_browser.js","node_modules/manyfest/source/Manyfest-CleanWrapCharacters.js","node_modules/manyfest/source/Manyfest-HashTranslation.js","node_modules/manyfest/source/Manyfest-LogToConsole.js","node_modules/manyfest/source/Manyfest-ObjectAddress-CheckAddressExists.js","node_modules/manyfest/source/Manyfest-ObjectAddress-DeleteValue.js","node_modules/manyfest/source/Manyfest-ObjectAddress-GetValue.js","node_modules/manyfest/source/Manyfest-ObjectAddress-Parser.js","node_modules/manyfest/source/Manyfest-ObjectAddress-SetValue.js","node_modules/manyfest/source/Manyfest-ObjectAddressGeneration.js","node_modules/manyfest/source/Manyfest-ParseConditionals.js","node_modules/manyfest/source/Manyfest-SchemaManipulation.js","node_modules/manyfest/source/Manyfest.js","node_modules/object-inspect/index.js","node_modules/once/once.js","node_modules/path-browserify/index.js","node_modules/pict-application/source/Pict-Application.js","node_modules/pict-provider/source/Pict-Provider.js","node_modules/pict-view/source/Pict-View.js","node_modules/precedent/source/Precedent.js","node_modules/precedent/source/StringParser.js","node_modules/precedent/source/WordTree.js","node_modules/process/browser.js","node_modules/punycode/punycode.js","node_modules/qs/lib/formats.js","node_modules/qs/lib/index.js","node_modules/qs/lib/parse.js","node_modules/qs/lib/stringify.js","node_modules/qs/lib/utils.js","node_modules/querystring-es3/decode.js","node_modules/querystring-es3/encode.js","node_modules/querystring-es3/index.js","node_modules/safe-buffer/index.js","node_modules/set-function-length/index.js","node_modules/side-channel/index.js","node_modules/simple-concat/index.js","node_modules/simple-get/index.js","node_modules/stream-http/index.js","node_modules/stream-http/lib/capability.js","node_modules/stream-http/lib/request.js","node_modules/stream-http/lib/response.js","node_modules/stream-http/node_modules/readable-stream/errors-browser.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/async_iterator.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/buffer_list.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/from-browser.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/pipeline.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/state.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/stream-http/node_modules/readable-stream/readable-browser.js","node_modules/string_decoder/lib/string_decoder.js","node_modules/timers-browserify/main.js","node_modules/url/url.js","node_modules/util-deprecate/browser.js","node_modules/wrappy/wrappy.js","node_modules/xtend/immutable.js","source/Pict-Browser-SafeLoad.js","source/Pict-Browser-SafeOnDocumentReady.js","source/Pict-CSS.js","source/Pict-Content-Assignment.js","source/Pict-DataProvider.js","source/Pict-Meadow-EntityProvider.js","source/Pict-Template-Provider.js","source/Pict.js","source/environments/Pict-Environment-Log.js","source/environments/Pict-Environment-Object.js"],"names":["_toConsumableArray","r","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","a","_arrayLikeToArray","t","toString","call","slice","constructor","name","Array","from","test","Symbol","iterator","isArray","length","e","n","_defineProperty2","_toPropertyKey2","Object","defineProperty","value","enumerable","configurable","writable","_get","Reflect","get","bind","p","_superPropBase","getOwnPropertyDescriptor","arguments","apply","o","hasOwnProperty","_getPrototypeOf","_classCallCheck2","_defineProperties","key","_createClass2","prototype","i","_toPrimitive2","_typeof","toPrimitive","String","Number","_callSuper","_possibleConstructorReturn","_isNativeReflectConstruct","construct","_assertThisInitialized","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","__proto__","_inherits","create","_setPrototypeOf","f","exports","module","define","amd","window","global","self","this","Pict","c","require","u","Error","code","eachOfLimit","withoutIndex","arr","limit","cb","tasks","makeCallback","index","fn","next","once","noop","onlyOnce","keyIterator","obj","nextKey","done","running","errored","replenish","err","setImmediate","restParam","args","callback","pop","push","innerArgs","sync","_keys","isArrayLike","coll","len","keys","k","func","startIndex","Math","max","rest","_setImmediate","fallback","setTimeout","timers","ensureAsync","wrapIterator","concat","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","join","Uint8Array","indexOf","start","end","num","output","GLOBAL","Big","MAX_DP","MAX_POWER","NAME","INVALID","INVALID_DP","INVALID_RM","DIV_BY_ZERO","P","UNDEFINED","NUMERIC","round","x","sd","rm","more","xc","RM","unshift","stringify","doExponential","isNonzero","s","charAt","abs","cmp","y","isneg","yc","j","l","div","b","dp","DP","bl","bt","ri","bz","ai","al","rl","q","qc","qi","shift","eq","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","reverse","mod","ygtx","times","neg","add","pow","one","prec","sqrt","half","toExponential","mul","toFixed","toJSON","NE","PE","toNumber","strict","toPrecision","_Big_","nl","replace","search","substring","parse","roundDown","roundHalfUp","roundHalfEven","roundUp","dup","Buffer","base64","ieee754","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","arg","encodingOrOffset","allocUnsafe","string","encoding","isEncoding","actual","write","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","buffer","array","byteOffset","undefined","fromArrayBuffer","isBuffer","checked","copy","numberIsNaN","type","data","fromObject","assertSize","size","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","foo","typedArraySupport","console","error","species","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","libFableServiceProviderBase","libLinkedList","CashMoney","_libFableServiceProvi","pFable","pManifest","pServiceHash","_this3","serviceType","_HashMap","_RecordMap","_List","maxLength","maxAge","pData","pHash","Datum","tmpNode","Hash","Metadata","Created","Date","remove","put","fComplete","pRemovedRecords","tmpRemovedRecords","tmpNow","tmpKeys","expire","fPruneFunction","_this4","pruneBasedOnExpiration","fExpirationPruneComplete","pruneBasedOnLength","LinkedListNode","LeftNode","RightNode","__ISNODE","libLinkedListNode","LinkedList","totalNodes","head","tail","pDatum","tmpHash","initializeNode","append","pNode","fAction","_this5","fIterator","pError","pNodeIndex","GetIntrinsic","callBind","$indexOf","allowMissing","intrinsic","setFunctionLength","$TypeError","$apply","$call","$reflectApply","$defineProperty","$max","originalFunction","applyBind","options","dec","decode","eqIdx","endIdx","tryDecode","serialize","opt","enc","encode","fieldContentRegExp","isNaN","floor","domain","path","expires","__toString","isDate","toUTCString","httpOnly","secure","partitioned","priority","sameSite","decodeURIComponent","encodeURIComponent","h","d","$","M","weekdays","months","ordinal","v","z","utcOffset","date","year","month","clone","ceil","w","D","ms","Q","g","S","_","O","locale","$L","utc","$u","$x","$offset","$d","NaN","match","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","isSame","startOf","endOf","isAfter","isBefore","$g","unix","getTime","toDate","$locale","weekStart","$set","daysInMonth","subtract","format","invalidDate","meridiem","monthsShort","weekdaysMin","weekdaysShort","getTimezoneOffset","diff","toISOString","forEach","extend","$i","isDayjs","en","Ls","globalThis","dayjs","weekYear","isoWeekYear","week","isoWeek","offsetName","dayjs_plugin_advancedFormat","isoWeekday","day","dayjs_plugin_isoWeek","future","past","mm","hh","dd","MM","yy","fromToBase","relativeTime","thresholds","rounding","to","toNow","fromNow","dayjs_plugin_relativeTime","hour","minute","second","timeZoneName","Intl","DateTimeFormat","hour12","timeZone","formatToParts","tz","$timezone","guess","find","resolvedOptions","setDefault","dayjs_plugin_timezone","local","getUTCFullYear","getUTCMonth","getUTCDate","getUTCDay","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","$localOffset","isUTC","dayjs_plugin_utc","yearStart","weeks","dayjs_plugin_weekOfYear","weekday","dayjs_plugin_weekday","$SyntaxError","gopd","property","nonEnumerable","nonWritable","nonConfigurable","loose","desc","EvalError","SyntaxError","URIError","ReflectOwnKeys","R","ReflectApply","receiver","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","EventEmitter","emitter","Promise","resolve","reject","errorListener","removeListener","resolver","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","events","existing","warning","newListener","emit","warned","count","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","addEventListener","wrapListener","removeEventListener","setMaxListeners","getMaxListeners","doError","er","message","context","listeners","addListener","prependListener","prependOnceListener","position","originalListener","spliceOne","off","removeAllListeners","rawListeners","eventNames","BaseLogger","_libFableServiceProvi2","pLogStreamSettings","pLogStreamHash","_this6","_Settings","loggerUUID","generateInsecureUUID","levels","tmpDate","pCharacter","tmpRandomData","random","pLogText","pLogObject","pLogLevel","CoreServiceProviderBase","tmpDefaultProviders","loggertype","streamtype","level","ConsoleLogger","_libBaseLogger","pFableLog","_this7","_ShowTimeStamps","showtimestamps","_FormattedTimeStamps","formattedtimestamps","_ContextMessage","Context","Product","_OutputLogLinesToConsole","outputloglinestoconsole","_OutputObjectsToConsole","outputobjectstoconsole","prefixCache","pLevel","pObject","tmpTimeStamp","tmpLogLine","log","JSON","libConsoleLog","libFS","libPath","SimpleFlatFileLogger","_libConsoleLog","_this8","logFileRawPath","logFilePath","normalize","logFileStreamOptions","fileStreamOptions","fileWriter","createWriteStream","activelyWriting","logLineStrings","logObjectStrings","defaultWriteCompleteCallback","defaultBufferFlushCallback","fCloseComplete","tmpCloseComplete","fFlushComplete","tmpFlushComplete","flushBufferToLogFile","tmpLineStrings","tmpObjectStrings","tmpConstructedBufferOutputString","completeBufferFlushToLogFile","fs","FableLog","_libFableServiceProvi3","pSettings","_this9","tmpSettings","_Providers","_StreamDefinitions","LogStreams","logStreams","logProviders","activeLogStreams","logStreamsTrace","logStreamsDebug","logStreamsInfo","logStreamsWarn","logStreamsError","logStreamsFatal","datumDecorator","uuid","pLogger","fDatumDecorator","pMessage","tmpDecoratedDatum","trace","debug","info","fatal","tmpStreamDefinition","assign","addLogger","initialize","tmpMessage","tmpTime","pTimeStamp","pTimeDelta","tmpEndTime","tmpMs","tmpSeconds","tmpMinutes","tmpHours","pStartTime","logTimeDelta","getTimeDelta","logTimeDeltaHuman","LogProviderBase","LogProviderConsole","LogProviderFlatfile","FableServiceProviderBase","pOptions","isFable","connectFable","fable","UUID","getUUID","tmpErrorMessage","Logging","services","servicesMap","ProductVersion","ConfigFile","process","libPrecedent","FableSettingsTemplateProcessor","pDependencies","templateProcessor","addPattern","pTemplateValue","tmpTemplateValue","tmpSeparatorIndex","tmpDefaultValue","tmpEnvironmentVariableName","env","pString","parseString","_process","precedent","libFableSettingsTemplateProcessor","FableSettings","_libFableServiceProvi4","_this10","settingsTemplateProcessor","_configureEnvTemplating","buildDefaultSettings","merge","base","DefaultConfigFile","pException","settings","_PerformEnvTemplating","NoEnvReplacement","tmpKey","_resolveEnv","parseSetting","toObject","_this11","_isObject","fromValue","toValue","_deepMergeObjects","pSettingsFrom","pSettingsTo","tmpSettingsFrom","tmpSettingsTo","tmpSettingsFromCopy","RandomBytes","getRandomValues","crypto","msCrypto","tmpBuffer","tmpValue","generateWhatWGBytes","generateRandomBytes","libRandomByteGenerator","FableUUID","_libFableServiceProvi5","_this12","_UUIDModeRandom","UUIDModeRandom","_UUIDLength","UUIDLength","_UUIDRandomDictionary","UUIDDictionary","randomByteGenerator","_HexLookup","pBuffer","tmpRandomBytes","generate","bytesToUUID","tmpUUID","generateRandom","generateUUIDv4","libFableSettings","libFableUUID","libFableLog","libFableServiceBase","Fable","_libFableServiceBase$","_this13","serviceTypes","serviceClasses","extraServiceInitialization","LogNoisiness","SettingsManager","ServiceManager","serviceManager","connectPreinitServiceProviderInstance","addAndInstantiateServiceType","addServiceType","instantiateServiceProviderWithoutRegistration","pManifestDefinition","pServiceType","pServiceClass","isFableService","instantiateServiceProvider","pCustomServiceHash","pServicePrototype","tmpService","setDefaultServiceInstantiation","pServiceInstance","tmpServiceType","tmpServiceHash","pOverwriteService","tmpOverwriteService","ServiceProviderBase","cachetrax","manyfest","FableServiceAnticipate","_libFableServiceBase","_this14","operationQueue","erroredOperations","executingOperationCount","completedOperationCount","callDepth","maxOperations","lastError","waitingFunctions","tmpOperation","buildAnticipatorCallback","fAsynchronousFunction","checkQueue","tmpCallbackState","Called","OperationSet","fCallback","CSVParser","_libFableServiceProvi6","_this15","Header","HeaderFieldNames","Delimiter","QuoteCharacter","CleanCharacters","HeaderLineIndex","HasHeader","HasSetHeader","EmitHeader","EmitJSON","EscapedQuoteString","CurrentLine","CurrentRecord","InQuote","InEscapedQuote","LinesParsed","RowsEmitted","pRowArray","tmpObject","pHeaderArray","pFormatAsJSON","tmpFormatAsJSON","tmpCompletedRecord","marshalRowToJSON","pLineString","pushLine","setHeader","emitRow","DataFormat","_libFableServiceProvi7","_this16","pTargetLength","pPadString","tmpString","stringGeneratePaddingString","_Regex_formatterInsertCommas","_Regex_formatterAddCommasToNumber","_Regex_formatterDollarsRemoveCommas","_Regex_formatterCleanNonAlphaChar","_Regex_formatterCapitalizeEachWord","_Value_MoneySign_Currency","_Value_NaN_Currency","_Value_GroupSeparator_Number","_Value_Prefix_StringHash","_Value_Clean_formatterCleanNonAlpha","_UseEngineStringStartsWith","startsWith","_UseEngineStringEndsWith","endsWith","pSearchString","pStartIndex","stringStartsWith_Polyfill","pEndIndex","stringEndsWith_Polyfill","tmpStringLength","tmpCharacterIndex","pMatch","toUpperCase","pWrapCharacter","tmpReversedWithCommas","stringReverse","pSign","pZeros","pBefore","pDecimal","pAfter","formatterInsertCommas","pNumber","processAddCommasToNumberRegex","pValue","pPrecision","pRoundingMethod","tmpDollarAmountArbitrary","parsePrecise","tmpPrecision","tmpDollarAmount","toFixedPrecise","formatterAddCommasToNumber","pDigits","tmpDigits","Utility","bigNumber","tmpTargetLength","tmpPadString","tmpPadLength","repeat","pTimeSpan","stringPadStart","pTimeStart","pTimeEnd","formatTimeSpan","pJavascriptDate","pStrict","tmpStrict","tmpMonth","tmpDay","tmpYear","pDate","tmpStringSplitLocation","pSeparator","pEnclosureStartSymbolMap","pEnclosureEndSymbolMap","tmpSeparator","tmpEnclosureStartSymbolMap","pEnclosureStart","tmpEnclosureEndSymbolMap","pEnclosureEnd","tmpSegmentCount","tmpEnclosureStack","tmpCurrentSegmentStart","tmpSegmentList","tmpEnclosureStart","tmpEnclosureEnd","tmpEnclosureCount","tmpEnclosureDepth","pEnclosureIndexToGet","tmpEnclosureIndexToGet","tmpMatchedEnclosureIndex","tmpEnclosedValueStartIndex","tmpEnclosedValueEndIndex","pEnclosureIndexToRemove","tmpEnclosureIndexToRemove","tmpEnclosureStartIndex","tmpEnclosureEndIndex","tmpReturnString","DefaultIntegerMinimum","DefaultIntegerMaximum","DefaultNumericStringLength","MonthSet","WeekDaySet","ColorSet","SurNameSet","NameSet","FableServiceDataGeneration","_libFableServiceBase2","_this17","defaultData","pMinimum","pMaximum","randomIntegerBetween","pLength","pMaxNumber","tmpMaxNumber","randomIntegerUpTo","DateManipulation","_libFableServiceProvi8","_this18","dayJS","plugin_weekOfYear","plugin_weekday","plugin_isoWeek","plugin_timezone","plugin_relativetime","plugin_utc","plugin_advancedFormat","FableServiceEnvironmentData","_libFableServiceBase3","_this19","Environment","FableServiceExpressionParser","_libFableServiceBase4","_this20","tokenMap","tokenMaxPrecedence","functionMap","addServiceTypeIfNotExists","Tokenizer","Linter","Postfix","Solver","connectExpressionParser","pTokenizedObjects","pDataSource","pResultObject","tmpResults","ExpressionParserLog","tmpDataSource","tmpManifest","newManyfest","tmpToken","Type","Resolved","getValueByHash","Token","tmpValueParsed","Value","getValueAtAddress","pExpression","tokenize","pTokenizedExpression","lintTokenizedExpression","buildPostfixedSolveList","pPostfixedExpression","pDataDestinationObject","solvePostfixedExpression","pDataSourceObject","tmpResultsObject","tmpDataSourceObject","tmpDataDestinationObject","RawTokens","substituteValuesInTokenizedObjects","PostfixTokenObjects","PostfixSolveList","ExpressionParserOperationBase","_libFableServiceProvi9","_this21","numberTest","ExpressionParser","pExpressionParser","pToken","pTokenType","getTokenType","Descriptor","ExpressionTokenizer","_libExpressionParserO","_this22","RawExpression","tmpCurrentTokenType","tmpCurrentToken","tmpCharacter","Name","Address","rad","sin","ExpressionParserLinter","_libExpressionParserO2","_this23","LinterResults","tmpParenthesisDepth","tmpInStateAddress","tmpEqualityAssignmentCount","tmpTokenPrevious","ExpressionParserPostfix","_libExpressionParserO3","_this24","pOperation","pLeftValue","pRightValue","pDepthSolveList","pDepthSolveIndex","VirtualSymbolName","Operation","LeftValue","RightValue","tmpDepthSolveList","getTokenContainerObject","Parsed","Precedence","PostfixedAssignmentAddress","tmpEqualsIndex","tmpDepth","tmpVirtualParenthesisIndex","tmpSolveLayerStack","Depth","SolveLayerStack","tmpSolveLayerMap","tmpSolveLayerMaxDepth","tmpSolveLayerKeys","tmpVirtualSymbolIndex","sort","pLeftLayer","pRightLayer","PostfixLayerstackMap","tmpSolveLayerIndex","tmpSolveLayerTokens","tmpPrecedence","tmpParenthesisCacheLIFOStack","tmpPostfixTokenObject","ParenthesisStack","PreviousPrecedence","IsFunction","PreviousVirtualSymbolName","tmpVirtualSymbolName","tmpOpenParenthesis","tmpPeekedNextToken","tmpAbstractAddToken","getPosfixSolveListOperation","tmpAbstractMultiplyToken","getTokenContianerObject","tmpAssignmentInstruction","ExpressionParserSolver","_libExpressionParserO4","_this25","tmpPassedInFable","VirtualSymbols","tmpStepResultObject","ExpressionStep","ExpressionStepIndex","ResultsObject","Manifest","tmpFunctionAddress","SolverFinalVirtualSymbol","tmpSolverResultValue","setValueAtAddress","setValueByHash","libReadline","FableServiceFilePersistence","_libFableServiceBase5","_this26","Mode","umask","pPath","existsSync","pFileName","pAppendContent","tmpOptions","appendFileSync","unlinkSync","rmdirSync","pFilePath","readFileSync","readFile","pFileContent","writeFileSync","pFileArray","writeFile","fOnLine","fOnComplete","fOnError","tmpLineReader","filePath","fileStream","createReadStream","reader","createInterface","input","crlfDelay","pParameters","_this27","tmpParameters","Path","CurrentPathIndex","ActualPath","ActualPathParts","sep","CurrentPath","open","pFileDescriptor","closeSync","makeFolderRecursive","mkdir","pCreateError","readline","FableServiceMath","_libFableServiceBase6","_this28","pNonNumberValue","tmpNumber","pIs","pOf","tmpLeftValue","tmpRightValue","tmpResult","pDecimals","tmpDecimals","tmpRoundingMethod","pDegrees","tmpDegrees","PI","pRadians","tmpRadians","cos","tan","libWordTree","libStringParser","FableServiceMetaTemplate","_libFableServiceBase7","_this29","WordTree","StringParser","ParseTree","pPatternStart","pPatternEnd","pParser","pParserPromise","addPatternAsync","addPatternBoth","pDataContext","TemplateData","pParseTree","Asynchronous","Output","OutputBuffer","Pattern","PatternMatch","PatternMatchEnd","pParserState","flushOutputBuffer","PatternStartNode","StartPatternMatchComplete","EndPatternMatchBegan","appendOutputBuffer","PatternEnd","isAsync","isBoth","PatternStartString","resetOutputBuffer","Parse","PatternEndString","_this30","pAsyncOutput","PatternStart","ParseAsync","executePatternAsync","_this31","tmpPreviousDataContext","tmpDataContext","tmpParserState","newParserState","parseCharacter","tmpAnticipate","_loop","_i15","anticipate","parseCharacterAsync","wait","pTree","pPattern","fParser","tmpLeaf","addChild","tmpPatternEnd","addEndChild","fParserAsync","Summary","Version","Status","Completed","StepCount","Steps","Errors","Log","_OperationStatePrototypeString","FableOperation","_libFableServiceBase8","_this32","timeStamps","stepMap","stepFunctions","progressTrackerSet","OverallProgressTracker","createProgressTracker","fExecutionCompleteCallback","_this33","StartTimeStamp","setProgressTrackerTotalOperations","startProgressTracker","_loop2","fNext","GUIDStep","ProgressTracker","metadata","getProgressTracker","logProgressTrackerStatus","getProgressTrackerStatusString","OperationState","StepState","endProgressTracker","tmpStepTimingMessage","incrementProgressTracker","tmpOperationTimingMessage","fStepFunction","pStepMetadata","pStepName","pStepDescription","pGUIDStep","tmpStep","DataGeneration","randomNumericString","Description","fDone","pTotalOperationCount","writeOperationLog","writeOperationErrors","FableServiceProgressTime","_libFableServiceBase9","_this34","pTimeDurationInMilliseconds","tmpTimeDuration","tmpTimeDurationString","pTimeStampHash","tmpTimeStampHash","pReferenceTime","tmpReferenceTime","tmpReference","pTimeStampHashStart","pTimeStampHashEnd","tmpTimeStampHashStart","tmpTimeStampHashEnd","tmpOperationTime","getTimeStampDelta","formatTimeDuration","getTimeStampDeltaMessage","pProgressTrackerSet","pProgressTrackerHash","progressTrackerHash","getProgressTrackerData","pProgressAmount","updateProgressTracker","pProgressIncrementAmount","libProgressTrackerClass","FableServiceProgressTrackerSet","_libFableServiceBase10","_this35","progressTrackers","progressTimes","createTimeStamp","tmpProgressTrackerHash","pTotalOperations","tmpTotalOperations","tmpProgressTracker","StartTimeHash","CurrentTimeStamp","EndTimeHash","EndTimeStamp","PercentComplete","AllowTruePercentComplete","ElapsedTime","AverageOperationTime","EstimatedCompletionTime","TotalCount","CurrentCount","removeTimeStamp","getTimeStampValue","solveProgressTrackerStatus","updateTimeStampValue","pCurrentOperations","tmpCurrentOperations","pOperationIncrementAmount","tmpOperationIncrementAmount","libSimpleGet","libCookie","FableServiceRestClient","_libFableServiceBase11","_this36","TraceLog","dataFormat","cookie","prepareRequestOptions","pRequestOptions","tmpCookieObject","headers","tmpCookieKeys","prepareCookies","url","RestClientURLPrefix","_this37","preRequest","RequestStartTime","getTimeStamp","method","pResponse","tmpConnectTime","formatTimeDelta","statusCode","tmpData","pChunk","tmpChunkTime","tmpCompletionTime","_this38","json","tmpDataBuffer","_this39","tmpJSONData","pOptionsOrURL","tmpRequestOptions","executeJSONRequest","body","executeChunkedRequest","FableServiceTemplate","_libFableServiceBase12","_this40","Matchers","Evaluate","Interpolate","Escaper","Unescaper","GuaranteedNonMatch","templateEscapes","u2028","u2029","renderFunction","templateString","renderTemplate","pTemplateText","_this41","TemplateSource","pCode","TemplateSourceCompiled","templateFunction","libAsyncWaterfall","libAsyncEachLimit","libBigNumber","FableServiceUtility","_libFableServiceBase13","_this42","templates","waterfall","eachLimit","pDestinationObject","tmpSourceObject","tmpObjectProperties","buildTemplateFunction","pTemplateHash","tmpTemplate","pInput","pChunkSize","pChunkCache","tmpInputArray","tmpChunkSize","tmpChunkCache","splice","pISOString","Dates","toStr","concatty","bound","arrLike","slicy","boundLength","boundArgs","joiner","joiny","result","Empty","implementation","$Error","$EvalError","$RangeError","$ReferenceError","$URIError","$Function","getEvalledConstructor","expressionSyntax","$gOPD","throwTypeError","ThrowTypeError","calleeThrows","gOPDthrows","hasSymbols","hasProto","getProto","needsEval","TypedArray","INTRINSICS","AggregateError","Atomics","BigInt","BigInt64Array","BigUint64Array","DataView","decodeURI","encodeURI","eval","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","Map","parseFloat","Proxy","RegExp","Set","SharedArrayBuffer","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","WeakRef","WeakSet","errorProto","doEval","gen","LEGACY_ALIASES","hasOwn","$concat","$spliceApply","$replace","$strSlice","$exec","exec","rePropName","reEscapeChar","getBaseIntrinsic","alias","intrinsicName","first","last","number","quote","subString","stringToPath","intrinsicBaseName","intrinsicRealName","skipFurtherCaching","isOwn","part","hasown","hasPropertyDescriptors","hasArrayLengthDefineBug","$Object","origSymbol","hasSymbolSham","sym","symObj","syms","propertyIsEnumerable","descriptor","$hasOwn","http","https","validateParams","params","protocol","request","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","ctor","superCtor","super_","TempCtor","libSimpleLog","ManyfestHashTranslation","pInfoLog","pErrorLog","logInfo","logError","translationTable","pTranslation","_this43","pTranslationSource","pTranslationHash","_this44","removeTranslationHash","removeTranslation","pLogLine","libGetObjectValue","_MockFable","ManyfestObjectAddressResolverCheckAddressExists","getObjectValueClass","pAddress","pRootObject","tmpRootObject","tmpAddressPartBeginning","stringGetFirstSegment","tmpBracketStartIndex","tmpBracketStopIndex","tmpFunctionStartIndex","stringCountEnclosures","tmpBoxedPropertyName","tmpBoxedPropertyReference","tmpBoxedPropertyNumber","cleanWrapCharacters","tmpSubObjectName","tmpNewAddress","tmpFunctionArguments","stringGetSegments","stringGetEnclosureValueByIndex","checkAddressExists","tmpArgumentValues","fCleanWrapCharacters","fParseConditionals","ManyfestObjectAddressResolverDeleteValue","pRecord","pParentAddress","tmpParentAddress","tmpObjectTypeMarkerIndex","checkRecordFilters","tmpObjectPropertyName","deleteValueAtAddress","tmpArrayProperty","tmpContainerObject","tmpPropertyParentAddress","tmpObjectProperty","tmpObjectPropertyKeys","ManyfestObjectAddressResolverGetValue","tmpParentAddressParts","tmpBackNavigationCount","tmpParentAddressLength","tmpRecurseAddress","tmpOutputArray","stringCountSegments","ManyfestObjectAddressSetValue","ManyfestObjectAddressGeneration","pBaseAddress","pSchema","tmpBaseAddress","tmpSchema","tmpObjectType","tmpSchemaObjectEntry","InSchema","DataType","Default","generateAddressses","_ConditionalStanzaStart","_ConditionalStanzaEnd","testCondition","pManyfest","pSearchAddress","pSearchComparator","tmpKeepRecord","tmpStartIndex","tmpStopIndex","tmpMagicComparisonPatternSet","tmpSearchAddress","tmpSearchComparator","tmpSearchValue","ManyfestSchemaManipulation","pManyfestSchemaDescriptors","pAddressMapping","tmpManyfestAddresses","tmpHashMapping","pInputAddress","tmpNewDescriptorAddress","tmpOldDescriptorAddress","tmpDescriptor","tmpManyfestSchemaDescriptors","resolveAddressMappings","pManyfestSchemaDescriptorsDestination","pManyfestSchemaDescriptorsSource","tmpSource","tmpNewManyfestSchemaDescriptors","pDescriptorAddress","libHashTranslation","libObjectAddressCheckAddressExists","libObjectAddressGetValue","libObjectAddressSetValue","libObjectAddressDeleteValue","libObjectAddressGeneration","libSchemaManipulation","_DefaultConfiguration","Scope","Descriptors","Manyfest","_libFableServiceProvi10","_this45","objectAddressCheckAddressExists","objectAddressGetValue","objectAddressSetValue","objectAddressDeleteValue","defaultValues","Float","Integer","Binary","DateTime","Null","scope","elementAddresses","elementHashes","elementDescriptors","reset","loadManifest","schemaManipulations","objectAddressGeneration","hashTranslations","tmpNewOptions","tmpNewManyfest","getManifest","addTranslation","pManifestString","tmpDescriptorKeys","tmpDescriptionAddresses","addDescriptor","HashTranslations","pDescriptor","getDescriptor","resolveHashAddress","tmpDescriptorAddresses","tmpInElementHashTable","tmpInTranslationTable","translate","getDefaultValue","getDescriptorByHash","tmpValidationData","MissingElements","addValidationError","pErrorMessage","tmpValueExists","Required","tmpElementType","tmpDataType","pOverwriteProperties","populateObject","fFilter","_this46","tmpOverwriteProperties","tmpFilterFunction","hasMap","mapSizeDescriptor","mapSize","mapForEach","hasSet","setSizeDescriptor","setSize","setForEach","weakMapHas","has","weakSetHas","weakRefDeref","deref","booleanValueOf","objectToString","functionToString","$match","$slice","$toUpperCase","$toLowerCase","$test","$join","$arrSlice","$floor","bigIntValueOf","gOPS","symToString","hasShammedSymbols","toStringTag","isEnumerable","gPO","addNumericSeparator","sepRegex","int","intStr","utilInspect","inspectCustom","custom","inspectSymbol","isSymbol","wrapQuotes","defaultStyle","opts","quoteChar","quoteStyle","isRegExp","inspect_","depth","seen","maxStringLength","customInspect","indent","numericSeparator","inspectString","bigIntStr","maxDepth","baseIndent","prev","getIndent","noIndent","newOpts","nameOf","arrObjKeys","symString","markBoxed","HTMLElement","nodeName","getAttribute","isElement","attrs","attributes","childNodes","xs","singleLineValues","indentedJoin","isError","cause","isMap","mapParts","collectionOf","isSet","setParts","isWeakMap","weakCollectionOf","isWeakSet","isWeakRef","isNumber","isBigInt","isBoolean","isString","ys","isPlainObject","protoTag","stringTag","tag","trailer","lowbyte","entries","lineJoiner","isArr","symMap","wrappy","called","onceStrict","onceError","proto","assertPath","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","posix","cwd","resolvedPath","resolvedAbsolute","isAbsolute","trailingSeparator","joined","relative","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","dirname","hasRoot","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","root","_format","delimiter","win32","defaultPictSettings","MainViewportViewIdentifier","MainViewportRenderableHash","MainViewportDestinationAddress","MainViewportDefaultDataAddress","AutoSolveAfterInitialize","AutoRenderMainViewportViewAfterInitialize","AutoRenderViewsAfterInitialize","Manifests","IdentifierAddressPrefix","PictApplication","_libFableServiceBase14","_this47","pict","AppData","initializeTimestamp","lastSolvedTimestamp","lastMarshalFromViewsTimestamp","lastMarshalToViewsTimestamp","lastAutoRenderTimestamp","tmpManifestKeys","tmpManifestKey","onPreSolve","onBeforeSolve","onSolve","tmpLoadedProviders","providers","tmpProvidersToSolve","tmpProvider","AutoSolveWithApp","AutoSolveOrdinal","solve","tmpLoadedViews","views","tmpViewsToSolve","tmpView","AutoInitialize","AutoInitializeOrdinal","onAfterSolve","_this48","onBeforeSolveAsync","tmpCallback","solveAsync","onSolveAsync","onAfterSolveAsync","onBeforeInitialize","onInitialize","LogControlFlow","tmpProvidersToInitialize","tmpViewsToInitialize","onAfterInitialize","render","_this49","onBeforeInitializeAsync","onInitializeAsync","initializeAsync","onAfterInitializeAsync","renderMainViewportAsync","onBeforeMarshalFromViews","onMarshalFromViews","tmpViewsToMarshalFromViews","marshalFromView","onAfterMarshalFromViews","_this50","onBeforeMarshalFromViewsAsync","marshalFromViewAsync","onMarshalFromViewsAsync","onAfterMarshalFromViewsAsync","onBeforeMarshalToViews","onMarshalToViews","tmpViewsToMarshalToViews","marshalToView","onAfterMarshalToViews","_this51","onBeforeMarshalToViewsAsync","marshalToViewAsync","onMarshalToViewsAsync","onAfterMarshalToViewsAsync","pViewIdentifier","pRenderableHash","pRenderDestinationAddress","pTemplateDataAddress","tmpViewIdentifier","tmpRenderableHash","tmpRenderDestinationAddress","tmpTemplateDataAddress","PictView","_this52","renderAsync","_this53","AutoRenderOrdinal","AutoRender","_this54","defaultPictProviderSettings","ProviderIdentifier","Templates","PictProvider","_libFableServiceBase15","_this55","tmpDefaultTemplate","Source","TemplateProvider","addDefaultTemplate","Prefix","Template","_this56","onPreRender","defaultPictViewSettings","DefaultRenderable","DefaultDestinationAddress","DefaultTemplateRecordAddress","ViewIdentifier","CSSHash","CSS","CSSProvider","CSSPriority","DefaultTemplates","Renderables","_libFableServiceBase16","_this57","lastRenderedTimestamp","lastMarshalFromViewTimestamp","lastMarshalToViewTimestamp","addTemplate","tmpCSSHash","tmpCSSProvider","CSSMap","addCSS","renderables","addRenderable","pDefaultTemplateDataAddress","pDefaultDestinationAddress","pRenderMethod","tmpRenderable","RenderableHash","TemplateHash","DefaultTemplateDataAddress","RenderMethod","_this58","pRenderable","tmpDataAddress","ContentDestinationAddress","DataProvider","getDataByAddress","onBeforeRender","tmpContent","parseTemplateByHash","ContentAssignment","appendContent","prependContent","getElement","assignContent","onAfterRender","_this59","newAnticipate","fOnBeforeRenderCallback","onBeforeRenderAsync","fAsyncTemplateCallback","pContent","fOnAfterRenderCallback","onAfterRenderAsync","_this60","onBeforeMarshalFromView","onMarshalFromView","onAfterMarshalFromView","_this61","onBeforeMarshalFromViewAsync","onMarshalFromViewAsync","onAfterMarshalFromViewAsync","onBeforeMarshalToView","onMarshalToView","onAfterMarshalToView","_this62","onBeforeMarshalToViewAsync","onMarshalToViewAsync","onAfterMarshalToViewAsync","Precedent","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","nextTick","title","browser","argv","version","versions","binding","chdir","freeExports","nodeType","freeModule","freeGlobal","punycode","maxInt","tMin","tMax","skew","damp","initialBias","initialN","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","baseMinusTMin","stringFromCharCode","map","mapDomain","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","basic","oldi","baseMinusT","inputLength","bias","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","ucs2","toASCII","toUnicode","percentTwenties","Format","default","formatters","RFC1738","RFC3986","formats","utils","defaults","allowDots","allowEmptyArrays","allowPrototypes","allowSparse","arrayLimit","charset","charsetSentinel","comma","decodeDotInKeys","decoder","duplicates","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","plainObjects","strictNullHandling","$0","numberStr","parseArrayValue","parseKeys","givenKey","valuesParsed","child","segment","parent","chain","leaf","cleanRoot","decodedRoot","parseObject","normalizeParseOptions","tempObj","cleanStr","skipIndex","bracketEqualsPos","maybeMap","encodedVal","combine","parseValues","newObj","compact","getSideChannel","arrayPrefixGenerators","brackets","prefix","indices","pushToArray","valueOrArray","toISO","defaultFormat","addQueryPrefix","arrayFormat","encodeDotInKeys","encoder","encodeValuesOnly","formatter","serializeDate","skipNulls","sentinel","object","generateArrayPrefix","commaRoundTrip","filter","sideChannel","tmpSc","step","findFlag","objKeys","values","encodedPrefix","adjustedPrefix","encodedKey","keyPrefix","valueSideChannel","normalizeStringifyOptions","hexTable","arrayToObject","source","reduce","acc","prop","refs","item","compacted","compactQueue","strWithoutPlus","unescape","defaultEncoder","kind","escape","mapped","mergeTarget","targetItem","qs","regexp","maxKeys","kstr","vstr","idx","stringifyPrimitive","objectKeys","ks","copyProps","SafeBuffer","hasDescriptors","gOPD","functionLengthIsConfigurable","functionLengthIsWritable","callBound","$WeakMap","$Map","$weakMapGet","$weakMapSet","$weakMapHas","$mapGet","$mapSet","$mapHas","listGetNode","curr","$wm","$o","channel","assert","objects","node","listGet","listHas","listSet","stream","chunks","chunk","simpleGet","decompressResponse","querystring","isStream","pipe","maxRedirects","_url$parse","hostname","port","auth","form","accept","originalHost","req","followRedirects","location","host","resume","redirectHost","authorization","tryUnzip","abort","ClientRequest","response","statusCodes","defaultProtocol","IncomingMessage","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","xtend","xhr","getXHR","XMLHttpRequest","XDomainRequest","checkTypeSupport","responseType","isFunction","fetch","ReadableStream","writableStream","WritableStream","abortController","AbortController","arraybuffer","msstream","mozchunkedarraybuffer","overrideMimeType","capability","inherits","rStates","readyStates","preferBinary","Writable","_opts","_body","_headers","useFetch","mode","_mode","decideMode","_fetchTimer","_socketTimeout","_socketTimer","_onFinish","lowerName","unsafeHeaders","getHeader","header","removeHeader","_destroyed","headersObj","Blob","headersList","keyName","signal","controller","_fetchAbortController","requestTimeout","credentials","withCredentials","then","_fetchResponse","_resetTimers","_connect","reason","_xhr","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","status","statusValid","_write","destroy","flushHeaders","setNoDelay","setSocketKeepAlive","UNSENT","OPENED","HEADERS_RECEIVED","resetTimers","Readable","rawHeaders","trailers","rawTrailers","statusMessage","statusText","_resumeFetch","close","pipeTo","getReader","_pos","responseURL","getAllResponseHeaders","matches","_charset","mimeType","charsetMatch","_read","responseText","newData","MSStreamReader","onload","readAsArrayBuffer","codes","createErrorType","Base","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","getMessage","oneOf","expected","thing","determiner","msg","this_len","Duplex","allowHalfOpen","readable","onend","_writableState","ended","onEndNT","highWaterMark","getBuffer","_readableState","destroyed","PassThrough","Transform","_transform","ReadableState","EElistenerCount","Stream","OurUint8Array","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","isDuplex","objectMode","readableObjectMode","pipes","pipesCount","flowing","endEmitted","reading","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","_destroy","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","onEofChunk","chunkInvalid","_uint8ArrayToBuffer","addChunk","maybeReadMore","_undestroy","undestroy","isPaused","setEncoding","content","clear","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","nReadingNextTick","resume_","fromList","consume","endReadable","endReadableNT","wState","finished","nOrig","doRead","dest","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","ondata","cleanedUp","needDrain","pipeOnDrain","pause","event","dests","ev","wrap","_this","asyncIterator","_fromList","iterable","util","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","transform","flush","_flush","prefinish","err2","CorkedRequest","entry","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","realHasInstance","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","finalCalled","ending","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writev","_writev","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","rState","current","hasInstance","writeAfterEnd","validChunk","newChunk","decodeChunk","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_Object$setPrototypeO","_defineProperty","hint","prim","_toPrimitive","_toPropertyKey","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","promise","lastPromise","wrapForNext","_this2","_Object$create","enumerableOnly","symbols","_objectSpread","getOwnPropertyDescriptors","defineProperties","props","instance","Constructor","_classCallCheck","protoProps","staticProps","hasStrings","_getString","_getBuffer","nb","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ERR_STREAM_PREMATURE_CLOSE","eos","_len","_key","onlegacyfinish","writableEnded","readableEnded","onrequest","isRequest","ERR_MISSING_ARGS","streams","popCallback","destroys","closed","destroyer","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","pipeline","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","total","utf8CheckIncomplete","clearImmediate","immediateIds","nextImmediateId","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","Url","slashes","hash","query","pathname","href","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","hostlessProtocol","slashedProtocol","ftp","gopher","file","urlParse","parseQueryString","slashesDenoteHost","queryIndex","splitter","uSplit","simplePath","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","newpart","validParts","notHost","bit","ae","esc","qm","resolveObject","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","authInHost","hasTrailingSlash","up","config","localStorage","wrapper","pPictApplication","pLogNoisiness","tmpLogNoisiness","default_configuration","_Pict","pict_configuration","tmpApplicationHash","tmpDefaultConfiguration","addApplication","document","attachEvent","defaultConfiguration","PictCSS","_libFableServiceBase17","_this63","CSSElementAddress","inlineCSSMap","pPriority","pProvider","tmpPriority","tmpProvidor","Content","Provider","Priority","_this64","tmpCSS","tmpCSSHashes","tmpCSSFragment","tmpCSSComment","generateCSS","PictContentAssignment","_libFableServiceBase18","_this65","inBrowser","hasDocument","querySelectorAll","hasJquery","jQuery","customAssignFunction","customPrependFunction","customAppendFunction","customReadFunction","customGetElementFunction","customReadAttributeFunction","customSetAttributeFunction","customRemoveAttributeFunction","customReadClassFunction","customSetClassFunction","customRemoveClassFunction","tmpElements","tmpElementSet","tmpTargetElementSet","tagName","innerHTML","insertAdjacentHTML","tmpTargetElement","html","pClass","addClass","classList","removeClass","pAttribute","attr","setAttribute","removeAttr","removeAttribute","hasClass","contains","PictDataProvider","_libFableServiceBase19","_this66","manifest","Bundle","Record","PictMeadowEntityProvider","_libFableServiceBase20","_this67","PictDefaultURLPrefix","urlPrefix","PictDefaultDownloadBatchSize","downloadBatchSize","restClient","cache","pEntity","RecordMap","pIDRecord","initializeCache","prune","_this68","tmpPossibleRecord","getJSON","pBody","pMeadowFilterExpression","pRecordStartCursor","pRecordCount","tmpURL","pDownloadError","pDownloadResponse","pDownloadBody","tmpRecordCount","Count","_this69","getEntitySetRecordCount","pRecordCountError","tmpDownloadURIFragments","tmpDownloadBatchSize","tmpEntitySet","pURIFragment","fDownloadCallback","pFullDownloadError","PictTemplateProvider","_libFableServiceBase21","_this70","templateSources","defaultTemplates","loadTemplateFunction","pTemplate","pTemplateSource","pPrefix","pPostfix","pSource","postfix","template","loadTemplate","checkDefaultTemplateHash","libFable","_libFable","_this71","isBrowser","EntityProvider","LogControlFlowWatchAddressList","loadManifestSet","_DefaultPictTemplatesInitialized","initializePictTemplateEngine","pManifestSet","pViewHash","pViewPrototype","tmpViewHash","Options","instantiateServiceProviderFromPrototype","pProviderHash","pProviderPrototype","tmpProviderHash","pApplicationHash","pApplicationPrototype","_this72","fEntityRender","pContextArray","tmpEntity","tmpEntityTemplate","tmpEntityID","tmpAddressParts","resolveStateFromAddress","_unused","getEntity","MetaTemplate","fTemplateRender","tmpTemplateHash","tmpAddressOfData","tmpHashTemplateSeparator","fTemplateRenderAsync","fTemplateSetRender","parseTemplateSetByHash","fTemplateSetRenderAsync","tmpTemplateFromMapHash","tmpTemplateHashPart","compareValues","pValueLeft","pOperator","pValueRight","fTemplateIfAbsoluteValueRender","tmpComparisonOperation","tmpHashParts","tmpComparisonParts","fTemplateIfAbsoluteValueRenderAsync","fTemplateIfRender","fTemplateIfRenderAsync","fTemplateValueSetRender","tmpDataValueSet","tmpValueKeys","fTemplateValueSetRenderAsync","fTemplateFromMapRender","tmpAddressOfMap","tmpAddressOfKey","tmpMap","fTemplateFromMapRenderAsync","fTemplateFromMapSetRender","fTemplateFromMapSetRenderAsync","fDataValueTree","ValueTreeParameters","ResolvedValue","ResolvedValueType","TreeMaxDepth","_unused2","tmpPictObjectWrapTemplate","getTemplate","ObjectValueTree","fDataValueTreeObjectSet","ResolveValue","parseTemplate","pCurrentDepth","pMaxDepth","tmpTemplateResult","tmpObjectValueKeys","tmpPictObjectBranchTemplate","tmpBranchType","tmpBranchValue","tmpDataValue","RootContainer","Container","BranchEntryCount","BranchIndex","BranchKey","BranchValue","BranchDataType","CurrentDepth","MaxDepth","fDataRender","fJoinDataRender","tmpDataAddresses","tmpValueList","tmpValueSet","fJoinUniqueDataRender","tmpValueMap","tmpColumnData","formatterDollars","formatterRoundNumber","tmpDateValue","tmpDayJS","Timezone","_unused3","tmpDateValueSet","_unused4","fNotEmptyRender","fRandomNumberString","_unused5","_unused6","fRandomNumber","tmpMinimumNumber","_unused7","_unused8","cleanNonAlphaCharacters","capitalizeEachWord","fLogValue","tmpValueType","fLogValueTree","_unused9","fLogValueTreeObjectSet","fLogStatement","tmpError","stack","tmpContextArray","pTemplateString","tmpParseUUID","_this73","pParsedTemplate","tmpTemplateString","pDataSet","_this74","fRecordTemplateCallback","pTemplateResult","parseTemplateSet","PictApplicationClass","PictViewClass","PictProviderClass","EnvironmentLog","EnvironmentObject","safeOnDocumentReady","safeLoadPictApplication","PictEnvironmentLog","pPict","pContentMap","contentMap","truncateContentLength","storeEventLog","eventLog","GetElement","Read","Prepend","Append","Assign","TimeStamp","createEventLogEntry","Attribute","PictEnvironmentObject","_ATTRIBUTE_MAP","_CLASS_MAP","ReadAttribute","SetAttribute","RemoveAttribute","ReadClass","SetClass","RemoveClass","initializeAttributeMapLocation","initializeClassMapLocation"],"mappings":"AAAA,aAAa,SAASA,mBAAmBC,GAAG,OAAOC,mBAAmBD,IAAIE,iBAAiBF,IAAIG,4BAA4BH,IAAII,oBAAqB,CAAC,SAASA,qBAAqB,MAAM,IAAIC,UAAU,uIAAwI,CAAC,SAASF,4BAA4BH,EAAEM,GAAG,GAAGN,EAAE,CAAC,GAAG,iBAAiBA,EAAE,OAAOO,kBAAkBP,EAAEM,GAAG,IAAIE,EAAE,CAAC,EAAEC,SAASC,KAAKV,GAAGW,MAAM,GAAG,GAAG,MAAM,WAAWH,GAAGR,EAAEY,cAAcJ,EAAER,EAAEY,YAAYC,MAAM,QAAQL,GAAG,QAAQA,EAAEM,MAAMC,KAAKf,GAAG,cAAcQ,GAAG,2CAA2CQ,KAAKR,GAAGD,kBAAkBP,EAAEM,QAAG,CAAO,CAAC,CAAC,SAASJ,iBAAiBF,GAAG,GAAG,oBAAoBiB,QAAQ,MAAMjB,EAAEiB,OAAOC,WAAW,MAAMlB,EAAE,cAAc,OAAOc,MAAMC,KAAKf,EAAG,CAAC,SAASC,mBAAmBD,GAAG,GAAGc,MAAMK,QAAQnB,GAAG,OAAOO,kBAAkBP,EAAG,CAAC,SAASO,kBAAkBP,EAAEM,IAAI,MAAMA,GAAGA,EAAEN,EAAEoB,UAAUd,EAAEN,EAAEoB,QAAQ,IAAI,IAAIC,EAAE,EAAEC,EAAER,MAAMR,GAAGe,EAAEf,EAAEe,IAAIC,EAAED,GAAGrB,EAAEqB,GAAG,OAAOC,CAAE,CAAC,SAASC,iBAAiBF,EAAErB,EAAEQ,GAAG,OAAOR,EAAEwB,gBAAgBxB,MAAMqB,EAAEI,OAAOC,eAAeL,EAAErB,EAAE,CAAC2B,MAAMnB,EAAEoB,YAAW,EAAGC,cAAa,EAAGC,UAAS,IAAKT,EAAErB,GAAGQ,EAAEa,CAAE,CAAC,SAASU,OAAO,OAAOA,KAAK,oBAAoBC,SAASA,QAAQC,IAAID,QAAQC,IAAIC,OAAO,SAASb,EAAEb,EAAER,GAAG,IAAImC,EAAEC,eAAef,EAAEb,GAAG,GAAG2B,EAAE,CAAC,IAAIb,EAAEG,OAAOY,yBAAyBF,EAAE3B,GAAG,OAAOc,EAAEW,IAAIX,EAAEW,IAAIvB,KAAK4B,UAAUlB,OAAO,EAAEC,EAAErB,GAAGsB,EAAEK,KAAM,CAAC,EAAEI,KAAKQ,MAAM,KAAKD,UAAW,CAAC,SAASF,eAAe5B,EAAEgC,GAAG,MAAM,CAAC,EAAEC,eAAe/B,KAAKF,EAAEgC,IAAI,QAAQhC,EAAEkC,gBAAgBlC,MAAM,OAAOA,CAAE,CAAC,SAASmC,iBAAiBrC,EAAEgB,GAAG,KAAKhB,aAAagB,GAAG,MAAM,IAAIjB,UAAU,oCAAqC,CAAC,SAASuC,kBAAkBvB,EAAErB,GAAG,IAAI,IAAIQ,EAAE,EAAEA,EAAER,EAAEoB,OAAOZ,IAAI,CAAC,IAAIgC,EAAExC,EAAEQ,GAAGgC,EAAEZ,WAAWY,EAAEZ,aAAY,EAAGY,EAAEX,cAAa,EAAG,UAAUW,IAAIA,EAAEV,UAAS,GAAIL,OAAOC,eAAeL,EAAEG,gBAAgBgB,EAAEK,KAAKL,EAAG,CAAC,CAAC,SAASM,cAAczB,EAAErB,EAAEQ,GAAG,OAAOR,GAAG4C,kBAAkBvB,EAAE0B,UAAU/C,GAAGQ,GAAGoC,kBAAkBvB,EAAEb,GAAGiB,OAAOC,eAAeL,EAAE,YAAY,CAACS,UAAS,IAAKT,CAAE,CAAC,SAASG,gBAAgBhB,GAAG,IAAIwC,EAAEC,cAAczC,EAAE,UAAU,MAAM,UAAU0C,QAAQF,GAAGA,EAAEA,EAAE,EAAG,CAAC,SAASC,cAAczC,EAAER,GAAG,GAAG,UAAUkD,QAAQ1C,KAAKA,EAAE,OAAOA,EAAE,IAAIa,EAAEb,EAAES,OAAOkC,aAAa,QAAG,IAAS9B,EAAE,CAAC,IAAI2B,EAAE3B,EAAEX,KAAKF,EAAER,GAAG,WAAW,GAAG,UAAUkD,QAAQF,GAAG,OAAOA,EAAE,MAAM,IAAI3C,UAAU,+CAAgD,CAAC,OAAO,WAAWL,EAAEoD,OAAOC,QAAQ7C,EAAG,CAAC,SAAS8C,WAAW9C,EAAEgC,EAAEnB,GAAG,OAAOmB,EAAEE,gBAAgBF,GAAGe,2BAA2B/C,EAAEgD,4BAA4BxB,QAAQyB,UAAUjB,EAAEnB,GAAG,GAAGqB,gBAAgBlC,GAAGI,aAAa4B,EAAED,MAAM/B,EAAEa,GAAI,CAAC,SAASkC,2BAA2B/C,EAAEa,GAAG,GAAGA,IAAI,UAAU6B,QAAQ7B,IAAI,mBAAmBA,GAAG,OAAOA,EAAE,QAAG,IAASA,EAAE,MAAM,IAAIhB,UAAU,4DAA4D,OAAOqD,uBAAuBlD,EAAG,CAAC,SAASkD,uBAAuBrC,GAAG,QAAG,IAASA,EAAE,MAAM,IAAIsC,eAAe,6DAA6D,OAAOtC,CAAE,CAAC,SAASmC,4BAA4B,IAAI,IAAIhD,GAAGoD,QAAQb,UAAUc,QAAQnD,KAAKsB,QAAQyB,UAAUG,QAAQ,IAAG,WAAW,IAAI,CAAC,MAAMpD,GAAG,CAAC,OAAOgD,0BAA0B,WAAqC,QAAQhD,CAAE,IAAK,CAAC,SAASkC,gBAAgBlC,GAAG,OAAOkC,gBAAgBjB,OAAOqC,eAAerC,OAAOsC,eAAe7B,OAAO,SAAS1B,GAAG,OAAOA,EAAEwD,WAAWvC,OAAOsC,eAAevD,EAAG,EAAEkC,gBAAgBlC,EAAG,CAAC,SAASyD,UAAUzD,EAAEa,GAAG,GAAG,mBAAmBA,GAAG,OAAOA,EAAE,MAAM,IAAIhB,UAAU,sDAAsDG,EAAEuC,UAAUtB,OAAOyC,OAAO7C,GAAGA,EAAE0B,UAAU,CAACnC,YAAY,CAACe,MAAMnB,EAAEsB,UAAS,EAAGD,cAAa,KAAMJ,OAAOC,eAAelB,EAAE,YAAY,CAACsB,UAAS,IAAKT,GAAG8C,gBAAgB3D,EAAEa,EAAG,CAAC,SAAS8C,gBAAgB3D,EAAEa,GAAG,OAAO8C,gBAAgB1C,OAAOqC,eAAerC,OAAOqC,eAAe5B,OAAO,SAAS1B,EAAEa,GAAG,OAAOb,EAAEwD,UAAU3C,EAAEb,CAAE,EAAE2D,gBAAgB3D,EAAEa,EAAG,CAAC,SAAS6B,QAAQV,GAA6B,OAAOU,QAAQ,mBAAmBjC,QAAQ,iBAAiBA,OAAOC,SAAS,SAASsB,GAAG,cAAcA,CAAE,EAAE,SAASA,GAAG,OAAOA,GAAG,mBAAmBvB,QAAQuB,EAAE5B,cAAcK,QAAQuB,IAAIvB,OAAO8B,UAAU,gBAAgBP,CAAE,EAAEU,QAAQV,EAAG,ECA99H,SAAA4B,GAAA,GAAA,YAAA,oBAAAC,QAAA,YAAAnB,QAAAmB,WAAA,oBAAAC,OAAAA,OAAAD,QAAAD,SAAA,GAAA,mBAAAG,QAAAA,OAAAC,IAAAD,OAAA,GAAAH,OAAA,EAAA,oBAAAK,OAAAA,OAAA,oBAAAC,OAAAA,OAAA,oBAAAC,KAAAA,KAAAC,MAAAC,KAAAT,GAAA,CAAA,CAAA,EAAA,WAAA,OAAA,SAAApE,EAAAqB,EAAAC,EAAAd,GAAA,SAAAgC,EAAAQ,EAAAoB,GAAA,IAAA9C,EAAA0B,GAAA,CAAA,IAAA3B,EAAA2B,GAAA,CAAA,IAAA8B,EAAA,mBAAAC,SAAAA,QAAA,IAAAX,GAAAU,EAAA,OAAAA,EAAA9B,GAAA,GAAA,GAAAgC,EAAA,OAAAA,EAAAhC,GAAA,GAAA,IAAA1C,EAAA,IAAA2E,MAAA,uBAAAjC,EAAA,KAAA,MAAA1C,EAAA4E,KAAA,mBAAA5E,CAAA,CAAA,IAAA6B,EAAAb,EAAA0B,GAAA,CAAAqB,QAAA,CAAA,GAAAhD,EAAA2B,GAAA,GAAAtC,KAAAyB,EAAAkC,SAAA,SAAArE,GAAA,OAAAwC,EAAAnB,EAAA2B,GAAA,GAAAhD,IAAAA,EAAA,GAAAmC,EAAAA,EAAAkC,QAAArE,EAAAqB,EAAAC,EAAAd,EAAA,CAAA,OAAAc,EAAA0B,GAAAqB,OAAA,CAAA,IAAA,IAAAW,EAAA,mBAAAD,SAAAA,QAAA/B,EAAA,EAAAA,EAAAxC,EAAAY,OAAA4B,IAAAR,EAAAhC,EAAAwC,IAAA,OAAAR,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,SAAAuC,EAAAT,EAAAD,GCEA,IAAAc,EAAAJ,EAAA,0BACAK,EAAAL,EAAA,2BAEAT,EAAAD,QAAA,SAAAgB,EAAAC,EAAApE,EAAAqE,GACA,OAAAJ,EAAAG,EAAAH,CAAAE,EAAAD,EAAAlE,GAAAqE,EACA,CFGA,EAAE,CAAC,yBAAyB,EAAE,0BAA0B,KAAK,EAAE,CAAC,SAASR,EAAQT,EAAOD,GGRxFC,EAAAD,QAAA,SAAAmB,GAaA,OAZA,SAAAC,EAAAC,GACA,SAAAC,IAIA,OAHAH,EAAApE,QACAoE,EAAAE,GAAAnD,MAAA,KAAAD,WAEAqD,EAAAC,MACA,CAIA,OAHAD,EAAAC,KAAA,WACA,OAAAF,EAAAF,EAAApE,OAAA,EAAAqE,EAAAC,EAAA,GAAA,IACA,EACAC,CACA,CACAF,CAAA,EACA,CHaA,EAAE,CAAC,GAAG,EAAE,CAAC,SAASV,EAAQT,EAAOD,GI7BjC,IAAAwB,EAAAd,EAAA,mBACAe,EAAAf,EAAA,mBACAgB,EAAAhB,EAAA,uBACAiB,EAAAjB,EAAA,0BAEAT,EAAAD,QAAA,SAAAiB,GACA,OAAA,SAAAW,EAAA/E,EAAAqE,GACAA,EAAAM,EAAAN,GAAAO,GAEA,IAAAI,EAAAF,EADAC,EAAAA,GAAA,IAEA,GAAAX,GAAA,EACA,OAAAC,EAAA,MAEA,IAAAY,GAAA,EACAC,EAAA,EACAC,GAAA,GAEA,SAAAC,IACA,GAAAH,GAAAC,GAAA,EACA,OAAAb,EAAA,MAGA,KAAAa,EAAAd,IAAAe,GAAA,CACA,IAAAxD,EAAAqD,IACA,GAAA,OAAArD,EAKA,OAJAsD,GAAA,OACAC,GAAA,GACAb,EAAA,OAIAa,GAAA,EACAlF,EAAA+E,EAAApD,GAAAA,EAAAkD,GAAA,SAAAQ,GACAH,GAAA,EACAG,GACAhB,EAAAgB,GACAF,GAAA,GAEAC,GAEA,IACA,CACA,CAzBA,EA0BA,CACA,CJgCA,EAAE,CAAC,yBAAyB,EAAE,kBAAkB,EAAE,kBAAkB,GAAG,sBAAsB,KAAK,EAAE,CAAC,SAASvB,EAAQT,EAAOD,GK3E7H,IAAAmC,EAAAzB,EAAA,2BACA0B,EAAA1B,EAAA,wBAEAT,EAAAD,QAAA,SAAAsB,GACA,OAAAc,GAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAE,MACAF,EAAAG,MAAA,WACA,IAAAC,EAAAxE,UACAyE,EACAP,GAAA,WACAG,EAAApE,MAAA,KAAAuE,EACA,IAEAH,EAAApE,MAAA,KAAAuE,EAEA,IACA,IAAAC,GAAA,EACApB,EAAApD,MAAAqC,KAAA8B,GACAK,GAAA,CACA,GACA,CL+EA,EAAE,CAAC,uBAAuB,GAAG,0BAA0B,KAAK,EAAE,CAAC,SAAShC,EAAQT,EAAOD,GMlGvFC,EAAAD,QAAAvD,MAAAK,SAAA,SAAA8E,GACA,MAAA,mBAAAxE,OAAAsB,UAAAtC,SAAAC,KAAAuF,EACA,CNuGA,EAAE,CAAC,GAAG,EAAE,CAAC,SAASlB,EAAQT,EAAOD,GOzGjC,IAAAlD,EAAA4D,EAAA,sBAEAT,EAAAD,QAAA,SAAAgB,GACA,OAAAlE,EAAAkE,IAEA,iBAAAA,EAAAjE,QACAiE,EAAAjE,QAAA,GACAiE,EAAAjE,OAAA,GAAA,CAEA,CP8GA,EAAE,CAAC,qBAAqB,IAAI,EAAE,CAAC,SAAS2D,EAAQT,EAAOD,GQvHvD,IAAA2C,EAAAjC,EAAA,mBACAkC,EAAAlC,EAAA,0BAEAT,EAAAD,QAAA,SAAA6C,GACA,IACAC,EACAC,EAFApE,GAAA,EAGA,OAAAiE,EAAAC,IACAC,EAAAD,EAAA9F,OACA,WAEA,QADA4B,EACAmE,EAAAnE,EAAA,IACA,IAEAoE,EAAAJ,EAAAE,GACAC,EAAAC,EAAAhG,OACA,WAEA,QADA4B,EACAmE,EAAAC,EAAApE,GAAA,IACA,EAEA,CR4HA,EAAE,CAAC,yBAAyB,EAAE,kBAAkB,IAAI,EAAE,CAAC,SAAS+B,EAAQT,EAAOD,GSjJ/EC,EAAAD,QAAA5C,OAAA2F,MAAA,SAAAnB,GACA,IAAAe,EAAA,GACA,IAAA,IAAAK,KAAApB,EACAA,EAAAxD,eAAA4E,IACAL,EAAAH,KAAAQ,GAGA,OAAAL,CACA,CTsJA,EAAE,CAAC,GAAG,EAAE,CAAC,SAASjC,EAAQT,EAAOD,GU9JjCC,EAAAD,QAAA,WAAA,CVmKA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASU,EAAQT,EAAOD,GWnKlCC,EAAAD,QAAA,SAAAsB,GACA,OAAA,WACA,OAAAA,IACAA,EAAApD,MAAAqC,KAAAtC,WACAqD,EAAA,KACA,CACA,CXwKA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASZ,EAAQT,EAAOD,GY9KlCC,EAAAD,QAAA,SAAAsB,GACA,OAAA,WACA,GAAA,OAAAA,EAAA,MAAA,IAAAV,MAAA,gCACAU,EAAApD,MAAAqC,KAAAtC,WACAqD,EAAA,IACA,CACA,CZmLA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASZ,EAAQT,EAAOD,Ga1LlCC,EAAAD,QAAA,SAAAiD,EAAAC,GAEA,OADAA,EAAA,MAAAA,EAAAD,EAAAlG,OAAA,GAAAmG,EACA,WAGA,IAFA,IAAAnG,EAAAoG,KAAAC,IAAAnF,UAAAlB,OAAAmG,EAAA,GACAG,EAAA,IAAA5G,MAAAM,GACAsE,EAAA,EAAAA,EAAAtE,EAAAsE,IACAgC,EAAAhC,GAAApD,UAAAoD,EAAA6B,GAEA,OAAAA,GACA,KAAA,EACA,OAAAD,EAAA5G,KAAAkE,KAAA8C,GACA,KAAA,EACA,OAAAJ,EAAA5G,KAAAkE,KAAAtC,UAAA,GAAAoF,GAEA,CACA,Cb8LA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS3C,EAAQT,EAAOD,IAClC,SAAWmC,IAAc,Wc7MzB,IAAAmB,EAAA,mBAAAnB,GAAAA,EACAoB,EAAA,SAAAjC,GACAkC,WAAAlC,EAAA,EACA,EAEArB,EAAAD,QAAA,SAAAsB,GAEA,OAAAgC,GAAAC,GAAAjC,EACA,CdkNC,GAAEjF,KAAKkE,KAAM,GAAElE,KAAKkE,KAAKG,EAAQ,UAAUyB,aAE5C,EAAE,CAACsB,OAAS,MAAM,GAAG,CAAC,SAAS/C,EAAQT,EAAOD,Ge5N9CC,EAAAD,QAAA,SAAAnD,GACA,OAAA,SAAAS,EAAA+D,EAAAiB,GACA,OAAAzF,EAAAS,EAAAgF,EACA,CACA,CfiOA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS5B,EAAQT,EAAOD,GgBrOlC,IAAAwB,EAAAd,EAAA,mBACAe,EAAAf,EAAA,mBACA5D,EAAA4D,EAAA,sBACA0B,EAAA1B,EAAA,wBACAgD,EAAAhD,EAAA,0BACA7D,EAAA6D,EAAA,kBAEAT,EAAAD,QAAA,SAAAmB,EAAAD,GAEA,GADAA,EAAAM,EAAAN,GAAAO,IACA3E,EAAAqE,GAAA,OAAAD,EAAA,IAAAN,MAAA,8DACA,IAAAO,EAAApE,OAAA,OAAAmE,KAEA,SAAAyC,EAAA9G,GACA,OAAAuF,GAAA,SAAAF,EAAAG,GACA,GAAAH,EACAhB,EAAAhD,MAAA,KAAA,CAAAgE,GAAA0B,OAAAvB,QACA,CACA,IAAAd,EAAA1E,EAAA0E,OACAA,EACAc,EAAAG,KAAAmB,EAAApC,IAEAc,EAAAG,KAAAtB,GAEAwC,EAAA7G,GAAAqB,MAAA,KAAAmE,EACA,CACA,GACA,CACAsB,CAAA9G,EAAAsE,GAAAwC,EACA,ChB0OA,EAAE,CAAC,iBAAiB,EAAE,yBAAyB,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,kBAAkB,GAAG,uBAAuB,KAAK,GAAG,CAAC,SAASjD,EAAQT,EAAOD,GiBtQzKA,EAAA6D,WAuCA,SAAAC,GACA,IAAAC,EAAAC,EAAAF,GACAG,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACA,OAAA,GAAAE,EAAAC,GAAA,EAAAA,CACA,EA3CAlE,EAAAmE,YAiDA,SAAAL,GACA,IAAAM,EAcAzF,EAbAoF,EAAAC,EAAAF,GACAG,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAEA/C,EAAA,IAAAqD,EAVA,SAAAP,EAAAG,EAAAC,GACA,OAAA,GAAAD,EAAAC,GAAA,EAAAA,CACA,CAQAI,CAAAR,EAAAG,EAAAC,IAEAK,EAAA,EAGAzB,EAAAoB,EAAA,EACAD,EAAA,EACAA,EAGA,IAAAtF,EAAA,EAAAA,EAAAmE,EAAAnE,GAAA,EACAyF,EACAI,EAAAV,EAAAW,WAAA9F,KAAA,GACA6F,EAAAV,EAAAW,WAAA9F,EAAA,KAAA,GACA6F,EAAAV,EAAAW,WAAA9F,EAAA,KAAA,EACA6F,EAAAV,EAAAW,WAAA9F,EAAA,IACAqC,EAAAuD,KAAAH,GAAA,GAAA,IACApD,EAAAuD,KAAAH,GAAA,EAAA,IACApD,EAAAuD,KAAA,IAAAH,EAGA,IAAAF,IACAE,EACAI,EAAAV,EAAAW,WAAA9F,KAAA,EACA6F,EAAAV,EAAAW,WAAA9F,EAAA,KAAA,EACAqC,EAAAuD,KAAA,IAAAH,GAGA,IAAAF,IACAE,EACAI,EAAAV,EAAAW,WAAA9F,KAAA,GACA6F,EAAAV,EAAAW,WAAA9F,EAAA,KAAA,EACA6F,EAAAV,EAAAW,WAAA9F,EAAA,KAAA,EACAqC,EAAAuD,KAAAH,GAAA,EAAA,IACApD,EAAAuD,KAAA,IAAAH,GAGA,OAAApD,CACA,EA5FAhB,EAAA0E,cAkHA,SAAAC,GAQA,IAPA,IAAAP,EACAtB,EAAA6B,EAAA5H,OACA6H,EAAA9B,EAAA,EACA+B,EAAA,GACAC,EAAA,MAGAnG,EAAA,EAAAoG,EAAAjC,EAAA8B,EAAAjG,EAAAoG,EAAApG,GAAAmG,EACAD,EAAArC,KAAAwC,EAAAL,EAAAhG,EAAAA,EAAAmG,EAAAC,EAAAA,EAAApG,EAAAmG,IAIA,IAAAF,GACAR,EAAAO,EAAA7B,EAAA,GACA+B,EAAArC,KACAyC,EAAAb,GAAA,GACAa,EAAAb,GAAA,EAAA,IACA,OAEA,IAAAQ,IACAR,GAAAO,EAAA7B,EAAA,IAAA,GAAA6B,EAAA7B,EAAA,GACA+B,EAAArC,KACAyC,EAAAb,GAAA,IACAa,EAAAb,GAAA,EAAA,IACAa,EAAAb,GAAA,EAAA,IACA,MAIA,OAAAS,EAAAK,KAAA,GACA,EA1IA,IALA,IAAAD,EAAA,GACAT,EAAA,GACAH,EAAA,oBAAAc,WAAAA,WAAA1I,MAEAoE,EAAA,mEACAlC,EAAA,EAAAA,EAAAkC,KAAAlC,EACAsG,EAAAtG,GAAAkC,EAAAlC,GACA6F,EAAA3D,EAAA4D,WAAA9F,IAAAA,EAQA,SAAAqF,EAAAF,GACA,IAAAhB,EAAAgB,EAAA/G,OAEA,GAAA+F,EAAA,EAAA,EACA,MAAA,IAAAlC,MAAA,kDAKA,IAAAqD,EAAAH,EAAAsB,QAAA,KAOA,OANA,IAAAnB,IAAAA,EAAAnB,GAMA,CAAAmB,EAJAA,IAAAnB,EACA,EACA,EAAAmB,EAAA,EAGA,CAmEA,SAAAe,EAAAL,EAAAU,EAAAC,GAGA,IAFA,IAAAlB,EARAmB,EASAC,EAAA,GACA7G,EAAA0G,EAAA1G,EAAA2G,EAAA3G,GAAA,EACAyF,GACAO,EAAAhG,IAAA,GAAA,WACAgG,EAAAhG,EAAA,IAAA,EAAA,QACA,IAAAgG,EAAAhG,EAAA,IACA6G,EAAAhD,KAdAyC,GADAM,EAeAnB,IAdA,GAAA,IACAa,EAAAM,GAAA,GAAA,IACAN,EAAAM,GAAA,EAAA,IACAN,EAAA,GAAAM,IAaA,OAAAC,EAAAN,KAAA,GACA,CAlGAV,EAAA,IAAAC,WAAA,IAAA,GACAD,EAAA,IAAAC,WAAA,IAAA,EjB6YA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS/D,EAAQT,EAAOD,IkB1ZlC,SAAAyF,GAEA,IAAAC,EAyBAC,EAAA,IAGAC,EAAA,IA4BAC,EAAA,YACAC,EAAAD,EAAA,WACAE,EAAAD,EAAA,iBACAE,EAAAF,EAAA,gBACAG,EAAAJ,EAAA,mBAGAK,EAAA,CAAA,EACAC,OAAA,EACAC,EAAA,uCA0HA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAJ,EAAA7F,EAGA,GADA+F,IAAAL,IAAAK,EAAAF,EAAA/J,YAAAoK,IACA,IAAAH,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,EACA,MAAA5F,MAAAoF,GAGA,GAAAO,EAAA,EACAE,EACA,IAAAD,IAAAC,KAAAC,EAAA,KAAA,IAAAH,IACA,IAAAC,GAAAE,EAAA,IAAA,GACA,IAAAF,IAAAE,EAAA,GAAA,GAAA,IAAAA,EAAA,KAAAD,GAAAC,EAAA,KAAAP,KAGAO,EAAA3J,OAAA,EAEA0J,GAGAH,EAAAtJ,EAAAsJ,EAAAtJ,EAAAuJ,EAAA,EACAG,EAAA,GAAA,GAIAA,EAAA,GAAAJ,EAAAtJ,EAAA,OAEA,GAAAuJ,EAAAG,EAAA3J,OAAA,CAaA,GAVA0J,EACA,IAAAD,GAAAE,EAAAH,IAAA,GACA,IAAAC,IAAAE,EAAAH,GAAA,GAAA,IAAAG,EAAAH,KACAE,GAAAC,EAAAH,EAAA,KAAAJ,GAAA,EAAAO,EAAAH,EAAA,MACA,IAAAC,IAAAC,KAAAC,EAAA,IAGAA,EAAA3J,OAAAwJ,EAGAE,EAGA,OAAAC,IAAAH,GAAA,GAEA,GADAG,EAAAH,GAAA,EACA,IAAAA,EAAA,GACAD,EAAAtJ,EACA0J,EAAAE,QAAA,GACA,KACA,CAKA,IAAAL,EAAAG,EAAA3J,QAAA2J,IAAAH,IAAAG,EAAAnE,KACA,CAEA,OAAA+D,CACA,CAOA,SAAAO,EAAAP,EAAAQ,EAAAC,GACA,IAAA/J,EAAAsJ,EAAAtJ,EACAgK,EAAAV,EAAA7F,EAAAyE,KAAA,IACAjI,EAAA+J,EAAAjK,OAGA,GAAA+J,EACAE,EAAAA,EAAAC,OAAA,IAAAhK,EAAA,EAAA,IAAA+J,EAAA1K,MAAA,GAAA,KAAAU,EAAA,EAAA,IAAA,MAAAA,OAGA,GAAAA,EAAA,EAAA,CACA,OAAAA,GAAAgK,EAAA,IAAAA,EACAA,EAAA,KAAAA,CACA,MAAA,GAAAhK,EAAA,EACA,KAAAA,EAAAC,EACA,IAAAD,GAAAC,EAAAD,KAAAgK,GAAA,SACAhK,EAAAC,IACA+J,EAAAA,EAAA1K,MAAA,EAAAU,GAAA,IAAAgK,EAAA1K,MAAAU,SAEAC,EAAA,IACA+J,EAAAA,EAAAC,OAAA,GAAA,IAAAD,EAAA1K,MAAA,IAGA,OAAAgK,EAAAU,EAAA,GAAAD,EAAA,IAAAC,EAAAA,CACA,CASAd,EAAAgB,IAAA,WACA,IAAAZ,EAAA,IAAA/F,KAAAhE,YAAAgE,MAEA,OADA+F,EAAAU,EAAA,EACAV,CACA,EAQAJ,EAAAiB,IAAA,SAAAC,GACA,IAAAC,EACAf,EAAA/F,KACAmG,EAAAJ,EAAA7F,EACA6G,GAAAF,EAAA,IAAAd,EAAA/J,YAAA6K,IAAA3G,EACA9B,EAAA2H,EAAAU,EACAO,EAAAH,EAAAJ,EACAhE,EAAAsD,EAAAtJ,EACAwK,EAAAJ,EAAApK,EAGA,IAAA0J,EAAA,KAAAY,EAAA,GAAA,OAAAZ,EAAA,GAAA/H,EAAA2I,EAAA,IAAAC,EAAA,EAGA,GAAA5I,GAAA4I,EAAA,OAAA5I,EAKA,GAHA0I,EAAA1I,EAAA,EAGAqE,GAAAwE,EAAA,OAAAxE,EAAAwE,EAAAH,EAAA,GAAA,EAKA,IAHAE,GAAAvE,EAAA0D,EAAA3J,SAAAyK,EAAAF,EAAAvK,QAAAiG,EAAAwE,EAGA7I,GAAA,IAAAA,EAAA4I,GACA,GAAAb,EAAA/H,IAAA2I,EAAA3I,GAAA,OAAA+H,EAAA/H,GAAA2I,EAAA3I,GAAA0I,EAAA,GAAA,EAIA,OAAArE,GAAAwE,EAAA,EAAAxE,EAAAwE,EAAAH,EAAA,GAAA,CACA,EAOAnB,EAAAuB,IAAA,SAAAL,GACA,IAAAd,EAAA/F,KACAmF,EAAAY,EAAA/J,YACAN,EAAAqK,EAAA7F,EACAiH,GAAAN,EAAA,IAAA1B,EAAA0B,IAAA3G,EACAuC,EAAAsD,EAAAU,GAAAI,EAAAJ,EAAA,GAAA,EACAW,EAAAjC,EAAAkC,GAEA,GAAAD,MAAAA,GAAAA,EAAA,GAAAA,EAAAhC,EACA,MAAA/E,MAAAmF,GAIA,IAAA2B,EAAA,GACA,MAAA9G,MAAAqF,GAIA,IAAAhK,EAAA,GAGA,OAFAmL,EAAAJ,EAAAhE,EACAoE,EAAA3G,EAAA,CAAA2G,EAAApK,EAAA,GACAoK,EAGA,IAAAS,EAAAC,EAAA7K,EAAAkK,EAAAY,EACAC,EAAAN,EAAApL,QACA2L,EAAAJ,EAAAH,EAAA3K,OACAmL,EAAAjM,EAAAc,OACApB,EAAAM,EAAAK,MAAA,EAAAuL,GACAM,EAAAxM,EAAAoB,OACAqL,EAAAhB,EACAiB,EAAAD,EAAA3H,EAAA,GACA6H,EAAA,EACAxK,EAAA6J,GAAAS,EAAApL,EAAAsJ,EAAAtJ,EAAAoK,EAAApK,GAAA,EASA,IAPAoL,EAAApB,EAAAhE,EACAA,EAAAlF,EAAA,EAAA,EAAAA,EAGAkK,EAAApB,QAAA,GAGAuB,IAAAN,GAAAlM,EAAA6G,KAAA,GAEA,EAAA,CAGA,IAAAvF,EAAA,EAAAA,EAAA,GAAAA,IAAA,CAGA,GAAA4K,IAAAM,EAAAxM,EAAAoB,QACAoK,EAAAU,EAAAM,EAAA,GAAA,OAEA,IAAAJ,GAAA,EAAAZ,EAAA,IAAAY,EAAAF,GACA,GAAAH,EAAAK,IAAApM,EAAAoM,GAAA,CACAZ,EAAAO,EAAAK,GAAApM,EAAAoM,GAAA,GAAA,EACA,KACA,CAKA,KAAAZ,EAAA,GAgBA,MAZA,IAAAW,EAAAK,GAAAN,EAAAH,EAAAM,EAAAG,GAAA,CACA,GAAAxM,IAAAwM,GAAAL,EAAAK,GAAA,CAEA,IADAJ,EAAAI,EACAJ,IAAApM,IAAAoM,IAAApM,EAAAoM,GAAA,IACApM,EAAAoM,GACApM,EAAAwM,IAAA,EACA,CACAxM,EAAAwM,IAAAL,EAAAK,EACA,CAEA,MAAAxM,EAAA,IAAAA,EAAA4M,OAIA,CAGAF,EAAAC,KAAAnB,EAAAlK,IAAAA,EAGAtB,EAAA,IAAAwL,EAAAxL,EAAAwM,GAAAlM,EAAAgM,IAAA,EACAtM,EAAA,CAAAM,EAAAgM,GAEA,QAAAA,IAAAC,GAAAvM,EAAA,KAAAwK,IAAAnD,KAcA,OAXAqF,EAAA,IAAA,GAAAC,IAGAD,EAAAE,QACAH,EAAApL,IACAc,KAIAwK,EAAAxK,GAAAuI,EAAA+B,EAAAtK,EAAA4H,EAAAiB,GAAAhL,EAAA,KAAAwK,GAEAiC,CACA,EAMAlC,EAAAsC,GAAA,SAAApB,GACA,OAAA,IAAA7G,KAAA4G,IAAAC,EACA,EAOAlB,EAAAuC,GAAA,SAAArB,GACA,OAAA7G,KAAA4G,IAAAC,GAAA,CACA,EAOAlB,EAAAwC,IAAA,SAAAtB,GACA,OAAA7G,KAAA4G,IAAAC,IAAA,CACA,EAMAlB,EAAAyC,GAAA,SAAAvB,GACA,OAAA7G,KAAA4G,IAAAC,GAAA,CACA,EAOAlB,EAAA0C,IAAA,SAAAxB,GACA,OAAA7G,KAAA4G,IAAAC,GAAA,CACA,EAMAlB,EAAA2C,MAAA3C,EAAA4C,IAAA,SAAA1B,GACA,IAAAzI,EAAA4I,EAAApL,EAAA4M,EACAzC,EAAA/F,KACAmF,EAAAY,EAAA/J,YACAN,EAAAqK,EAAAU,EACAU,GAAAN,EAAA,IAAA1B,EAAA0B,IAAAJ,EAGA,GAAA/K,GAAAyL,EAEA,OADAN,EAAAJ,GAAAU,EACApB,EAAA0C,KAAA5B,GAGA,IAAAV,EAAAJ,EAAA7F,EAAAnE,QACA2M,EAAA3C,EAAAtJ,EACAsK,EAAAF,EAAA3G,EACAyI,EAAA9B,EAAApK,EAGA,IAAA0J,EAAA,KAAAY,EAAA,GAQA,OAPAA,EAAA,GACAF,EAAAJ,GAAAU,EACAhB,EAAA,GACAU,EAAA,IAAA1B,EAAAY,GAEAc,EAAAJ,EAAA,EAEAI,EAIA,GAAAnL,EAAAgN,EAAAC,EAAA,CAWA,KATAH,EAAA9M,EAAA,IACAA,GAAAA,EACAE,EAAAuK,IAEAwC,EAAAD,EACA9M,EAAAmL,GAGAnL,EAAAgN,UACAzB,EAAAzL,EAAAyL,KAAAvL,EAAAqG,KAAA,GACArG,EAAAgN,SACA,MAKA,IAFA5B,IAAAwB,EAAArC,EAAA3J,OAAAuK,EAAAvK,QAAA2J,EAAAY,GAAAvK,OAEAd,EAAAyL,EAAA,EAAAA,EAAAH,EAAAG,IACA,GAAAhB,EAAAgB,IAAAJ,EAAAI,GAAA,CACAqB,EAAArC,EAAAgB,GAAAJ,EAAAI,GACA,KACA,CAgBA,GAXAqB,IACA5M,EAAAuK,EACAA,EAAAY,EACAA,EAAAnL,EACAiL,EAAAJ,GAAAI,EAAAJ,IAOAU,GAAAH,EAAAD,EAAAvK,SAAA4B,EAAA+H,EAAA3J,SAAA,EAAA,KAAA2K,KAAAhB,EAAA/H,KAAA,EAGA,IAAA+I,EAAA/I,EAAA4I,EAAAtL,GAAA,CACA,GAAAyK,IAAAa,GAAAD,EAAAC,GAAA,CACA,IAAA5I,EAAA4I,EAAA5I,IAAA+H,IAAA/H,IAAA+H,EAAA/H,GAAA,IACA+H,EAAA/H,GACA+H,EAAAa,IAAA,EACA,CAEAb,EAAAa,IAAAD,EAAAC,EACA,CAGA,KAAA,IAAAb,IAAAgB,IAAAhB,EAAAnE,MAGA,KAAA,IAAAmE,EAAA,IACAA,EAAA6B,UACAW,EAeA,OAZAxC,EAAA,KAGAU,EAAAJ,EAAA,EAGAN,EAAA,CAAAwC,EAAA,IAGA9B,EAAA3G,EAAAiG,EACAU,EAAApK,EAAAkM,EAEA9B,CACA,EAMAlB,EAAAkD,IAAA,SAAAhC,GACA,IAAAiC,EACA/C,EAAA/F,KACAmF,EAAAY,EAAA/J,YACAN,EAAAqK,EAAAU,EACAU,GAAAN,EAAA,IAAA1B,EAAA0B,IAAAJ,EAEA,IAAAI,EAAA3G,EAAA,GACA,MAAAG,MAAAqF,GAQA,OALAK,EAAAU,EAAAI,EAAAJ,EAAA,EACAqC,EAAA,GAAAjC,EAAAD,IAAAb,GACAA,EAAAU,EAAA/K,EACAmL,EAAAJ,EAAAU,EAEA2B,EAAA,IAAA3D,EAAAY,IAEArK,EAAAyJ,EAAAkC,GACAF,EAAAhC,EAAAiB,GACAjB,EAAAkC,GAAAlC,EAAAiB,GAAA,EACAL,EAAAA,EAAAmB,IAAAL,GACA1B,EAAAkC,GAAA3L,EACAyJ,EAAAiB,GAAAe,EAEAnH,KAAAsI,MAAAvC,EAAAgD,MAAAlC,IACA,EAMAlB,EAAAqD,IAAA,WACA,IAAAjD,EAAA,IAAA/F,KAAAhE,YAAAgE,MAEA,OADA+F,EAAAU,GAAAV,EAAAU,EACAV,CACA,EAMAJ,EAAA8C,KAAA9C,EAAAsD,IAAA,SAAApC,GACA,IAAApK,EAAAgG,EAAA7G,EACAmK,EAAA/F,KACAmF,EAAAY,EAAA/J,YAKA,GAHA6K,EAAA,IAAA1B,EAAA0B,GAGAd,EAAAU,GAAAI,EAAAJ,EAEA,OADAI,EAAAJ,GAAAI,EAAAJ,EACAV,EAAAuC,MAAAzB,GAGA,IAAA6B,EAAA3C,EAAAtJ,EACA0J,EAAAJ,EAAA7F,EACAyI,EAAA9B,EAAApK,EACAsK,EAAAF,EAAA3G,EAGA,IAAAiG,EAAA,KAAAY,EAAA,GAQA,OAPAA,EAAA,KACAZ,EAAA,GACAU,EAAA,IAAA1B,EAAAY,GAEAc,EAAAJ,EAAAV,EAAAU,GAGAI,EAOA,GAJAV,EAAAA,EAAApK,QAIAU,EAAAiM,EAAAC,EAAA,CAUA,IATAlM,EAAA,GACAkM,EAAAD,EACA9M,EAAAmL,IAEAtK,GAAAA,EACAb,EAAAuK,GAGAvK,EAAAgN,UACAnM,KAAAb,EAAAqG,KAAA,GACArG,EAAAgN,SACA,CAYA,IATAzC,EAAA3J,OAAAuK,EAAAvK,OAAA,IACAZ,EAAAmL,EACAA,EAAAZ,EACAA,EAAAvK,GAGAa,EAAAsK,EAAAvK,OAGAiG,EAAA,EAAAhG,EAAA0J,EAAA1J,IAAA,GAAAgG,GAAA0D,IAAA1J,GAAA0J,EAAA1J,GAAAsK,EAAAtK,GAAAgG,GAAA,GAAA,EAUA,IANAA,IACA0D,EAAAE,QAAA5D,KACAkG,GAIAlM,EAAA0J,EAAA3J,OAAA,IAAA2J,IAAA1J,IAAA0J,EAAAnE,MAKA,OAHA6E,EAAA3G,EAAAiG,EACAU,EAAApK,EAAAkM,EAEA9B,CACA,EAUAlB,EAAAuD,IAAA,SAAAxM,GACA,IAAAqJ,EAAA/F,KACAmJ,EAAA,IAAApD,EAAA/J,YAAA,KACA6K,EAAAsC,EACArC,EAAApK,EAAA,EAEA,GAAAA,MAAAA,GAAAA,GAAA,KAAAA,EAAA2I,EACA,MAAAhF,MAAAkF,EAAA,YAKA,IAFAuB,IAAApK,GAAAA,GAGA,EAAAA,IAAAmK,EAAAA,EAAAkC,MAAAhD,IACArJ,IAAA,GAEAqJ,EAAAA,EAAAgD,MAAAhD,GAGA,OAAAe,EAAAqC,EAAAjC,IAAAL,GAAAA,CACA,EAUAlB,EAAAyD,KAAA,SAAApD,EAAAC,GACA,GAAAD,MAAAA,GAAAA,EAAA,GAAAA,EAAAZ,EACA,MAAA/E,MAAAkF,EAAA,aAEA,OAAAO,EAAA,IAAA9F,KAAAhE,YAAAgE,MAAAgG,EAAAC,EACA,EAYAN,EAAAG,MAAA,SAAAsB,EAAAnB,GACA,GAAAmB,IAAAxB,EAAAwB,EAAA,OACA,GAAAA,MAAAA,GAAAA,GAAAhC,GAAAgC,EAAAhC,EACA,MAAA/E,MAAAmF,GAEA,OAAAM,EAAA,IAAA9F,KAAAhE,YAAAgE,MAAAoH,EAAApH,KAAAvD,EAAA,EAAAwJ,EACA,EAOAN,EAAA0D,KAAA,WACA,IAAAjO,EAAA8E,EAAAtE,EACAmK,EAAA/F,KACAmF,EAAAY,EAAA/J,YACAyK,EAAAV,EAAAU,EACAhK,EAAAsJ,EAAAtJ,EACA6M,EAAA,IAAAnE,EAAA,OAGA,IAAAY,EAAA7F,EAAA,GAAA,OAAA,IAAAiF,EAAAY,GAGA,GAAAU,EAAA,EACA,MAAApG,MAAAiF,EAAA,kBAQA,KAJAmB,EAAA7D,KAAAyG,KAAAtD,EAAA,MAIAU,IAAA,MACAvG,EAAA6F,EAAA7F,EAAAyE,KAAA,KACAnI,OAAAC,EAAA,IAAAyD,GAAA,KAEAzD,IAAAA,EAAA,GAAA,EAAA,IAAAA,EAAA,GAAA,EAAAA,GACArB,EAAA,IAAA+J,IAFAsB,EAAA7D,KAAAyG,KAAAnJ,KAEA,IAAA,MAAAuG,EAAAA,EAAA8C,iBAAAxN,MAAA,EAAA0K,EAAA5B,QAAA,KAAA,IAAApI,IAEArB,EAAA,IAAA+J,EAAAsB,EAAA,IAGAhK,EAAArB,EAAAqB,GAAA0I,EAAAkC,IAAA,GAGA,GACAzL,EAAAR,EACAA,EAAAkO,EAAAP,MAAAnN,EAAA6M,KAAA1C,EAAAmB,IAAAtL,WACAA,EAAAsE,EAAAnE,MAAA,EAAAU,GAAAkI,KAAA,MAAAvJ,EAAA8E,EAAAnE,MAAA,EAAAU,GAAAkI,KAAA,KAEA,OAAAmB,EAAA1K,GAAA+J,EAAAkC,IAAA,GAAAjM,EAAAqB,EAAA,EAAA0I,EAAAiB,GACA,EAMAT,EAAAoD,MAAApD,EAAA6D,IAAA,SAAA3C,GACA,IAAA3G,EACA6F,EAAA/F,KACAmF,EAAAY,EAAA/J,YACAmK,EAAAJ,EAAA7F,EACA6G,GAAAF,EAAA,IAAA1B,EAAA0B,IAAA3G,EACAxE,EAAAyK,EAAA3J,OACA2K,EAAAJ,EAAAvK,OACA4B,EAAA2H,EAAAtJ,EACAuK,EAAAH,EAAApK,EAMA,GAHAoK,EAAAJ,EAAAV,EAAAU,GAAAI,EAAAJ,EAAA,GAAA,GAGAN,EAAA,KAAAY,EAAA,GAEA,OADAF,EAAA3G,EAAA,CAAA2G,EAAApK,EAAA,GACAoK,EAiBA,IAbAA,EAAApK,EAAA2B,EAAA4I,EAGAtL,EAAAyL,IACAjH,EAAAiG,EACAA,EAAAY,EACAA,EAAA7G,EACA8G,EAAAtL,EACAA,EAAAyL,EACAA,EAAAH,GAIA9G,EAAA,IAAAhE,MAAA8K,EAAAtL,EAAAyL,GAAAH,KAAA9G,EAAA8G,GAAA,EAKA,IAAA5I,EAAA+I,EAAA/I,KAAA,CAIA,IAHA+I,EAAA,EAGAH,EAAAtL,EAAA0C,EAAA4I,EAAA5I,GAGA+I,EAAAjH,EAAA8G,GAAAD,EAAA3I,GAAA+H,EAAAa,EAAA5I,EAAA,GAAA+I,EACAjH,EAAA8G,KAAAG,EAAA,GAGAA,EAAAA,EAAA,GAAA,EAGAjH,EAAA8G,GAAAG,CACA,CAOA,IAJAA,IAAAN,EAAApK,EACAyD,EAAA8H,QAGA5J,EAAA8B,EAAA1D,QAAA0D,IAAA9B,IAAA8B,EAAA8B,MAGA,OAFA6E,EAAA3G,EAAAA,EAEA2G,CACA,EAUAlB,EAAA4D,cAAA,SAAAnC,EAAAnB,GACA,IAAAF,EAAA/F,KACAtD,EAAAqJ,EAAA7F,EAAA,GAEA,GAAAkH,IAAAxB,EAAA,CACA,GAAAwB,MAAAA,GAAAA,EAAA,GAAAA,EAAAhC,EACA,MAAA/E,MAAAmF,GAGA,IADAO,EAAAD,EAAA,IAAAC,EAAA/J,YAAA+J,KAAAqB,EAAAnB,GACAF,EAAA7F,EAAA1D,OAAA4K,GAAArB,EAAA7F,EAAA+B,KAAA,EACA,CAEA,OAAAqE,EAAAP,GAAA,IAAArJ,EACA,EAaAiJ,EAAA8D,QAAA,SAAArC,EAAAnB,GACA,IAAAF,EAAA/F,KACAtD,EAAAqJ,EAAA7F,EAAA,GAEA,GAAAkH,IAAAxB,EAAA,CACA,GAAAwB,MAAAA,GAAAA,EAAA,GAAAA,EAAAhC,EACA,MAAA/E,MAAAmF,GAKA,IAAA4B,EAAAA,GAHArB,EAAAD,EAAA,IAAAC,EAAA/J,YAAA+J,GAAAqB,EAAArB,EAAAtJ,EAAA,EAAAwJ,IAGAxJ,EAAA,EAAAsJ,EAAA7F,EAAA1D,OAAA4K,GAAArB,EAAA7F,EAAA+B,KAAA,EACA,CAEA,OAAAqE,EAAAP,GAAA,IAAArJ,EACA,EASAiJ,EAAA+D,OAAA/D,EAAA9J,SAAA,WACA,IAAAkK,EAAA/F,KACAmF,EAAAY,EAAA/J,YACA,OAAAsK,EAAAP,EAAAA,EAAAtJ,GAAA0I,EAAAwE,IAAA5D,EAAAtJ,GAAA0I,EAAAyE,KAAA7D,EAAA7F,EAAA,GACA,EAMAyF,EAAAkE,SAAA,WACA,IAAAnN,EAAA+B,OAAA6H,EAAAtG,MAAA,GAAA,IACA,IAAA,IAAAA,KAAAhE,YAAA8N,SAAA9J,KAAAiI,GAAAvL,EAAAb,YACA,MAAAwE,MAAAiF,EAAA,wBAEA,OAAA5I,CACA,EAYAiJ,EAAAoE,YAAA,SAAA/D,EAAAC,GACA,IAAAF,EAAA/F,KACAmF,EAAAY,EAAA/J,YACAU,EAAAqJ,EAAA7F,EAAA,GAEA,GAAA8F,IAAAJ,EAAA,CACA,GAAAI,MAAAA,GAAAA,EAAA,GAAAA,EAAAZ,EACA,MAAA/E,MAAAkF,EAAA,aAGA,IADAQ,EAAAD,EAAA,IAAAX,EAAAY,GAAAC,EAAAC,GACAF,EAAA7F,EAAA1D,OAAAwJ,GAAAD,EAAA7F,EAAA+B,KAAA,EACA,CAEA,OAAAqE,EAAAP,EAAAC,GAAAD,EAAAtJ,GAAAsJ,EAAAtJ,GAAA0I,EAAAwE,IAAA5D,EAAAtJ,GAAA0I,EAAAyE,KAAAlN,EACA,EASAiJ,EAAA1G,QAAA,WACA,IAAA8G,EAAA/F,KACAmF,EAAAY,EAAA/J,YACA,IAAA,IAAAmJ,EAAA2E,OACA,MAAAzJ,MAAAiF,EAAA,sBAEA,OAAAgB,EAAAP,EAAAA,EAAAtJ,GAAA0I,EAAAwE,IAAA5D,EAAAtJ,GAAA0I,EAAAyE,IAAA,EACA,EAMAzE,EAn7BA,SAAA6E,IAQA,SAAA7E,EAAAzI,GACA,IAAAqJ,EAAA/F,KAGA,KAAA+F,aAAAZ,GAAA,OAAAzI,IAAAkJ,EAAAoE,IAAA,IAAA7E,EAAAzI,GAGA,GAAAA,aAAAyI,EACAY,EAAAU,EAAA/J,EAAA+J,EACAV,EAAAtJ,EAAAC,EAAAD,EACAsJ,EAAA7F,EAAAxD,EAAAwD,EAAAnE,YACA,CACA,GAAA,iBAAAW,EAAA,CACA,IAAA,IAAAyI,EAAA2E,QAAA,iBAAApN,EACA,MAAAjB,UAAA8J,EAAA,SAIA7I,EAAA,IAAAA,GAAA,EAAAA,EAAA,EAAA,KAAA8B,OAAA9B,EACA,EA+BA,SAAAqJ,EAAArJ,GACA,IAAAD,EAAA2B,EAAA6L,EAEA,IAAApE,EAAAzJ,KAAAM,GACA,MAAA2D,MAAAkF,EAAA,UAIAQ,EAAAU,EAAA,KAAA/J,EAAAgK,OAAA,IAAAhK,EAAAA,EAAAX,MAAA,IAAA,GAAA,GAGAU,EAAAC,EAAAmI,QAAA,OAAA,IAAAnI,EAAAA,EAAAwN,QAAA,IAAA,MAGA9L,EAAA1B,EAAAyN,OAAA,OAAA,GAGA1N,EAAA,IAAAA,EAAA2B,GACA3B,IAAAC,EAAAX,MAAAqC,EAAA,GACA1B,EAAAA,EAAA0N,UAAA,EAAAhM,IACA3B,EAAA,IAGAA,EAAAC,EAAAF,QAMA,IAHAyN,EAAAvN,EAAAF,OAGA4B,EAAA,EAAAA,EAAA6L,GAAA,KAAAvN,EAAAgK,OAAAtI,MAAAA,EAEA,GAAAA,GAAA6L,EAGAlE,EAAA7F,EAAA,CAAA6F,EAAAtJ,EAAA,OACA,CAGA,KAAAwN,EAAA,GAAA,KAAAvN,EAAAgK,SAAAuD,KAKA,IAJAlE,EAAAtJ,EAAAA,EAAA2B,EAAA,EACA2H,EAAA7F,EAAA,GAGAzD,EAAA,EAAA2B,GAAA6L,GAAAlE,EAAA7F,EAAAzD,MAAAC,EAAAgK,OAAAtI,IACA,CAGA,CA5EAiM,CAAAtE,EAAArJ,EACA,CAIAqJ,EAAA/J,YAAAmJ,CACA,CAaA,OAXAA,EAAAhH,UAAAwH,EACAR,EAAAkC,GAjGA,GAkGAlC,EAAAiB,GAxFA,EAyFAjB,EAAAwE,IA5EA,EA6EAxE,EAAAyE,GAtEA,GAuEAzE,EAAA2E,OAhEA,MAiEA3E,EAAAmF,UAAA,EACAnF,EAAAoF,YAAA,EACApF,EAAAqF,cAAA,EACArF,EAAAsF,QAAA,EAEAtF,CACA,CAk4BA6E,GAEA7E,EAAA,QAAAA,EAAAA,IAAAA,OAOA,IAAAzF,GAAAA,EAAAD,QACAC,EAAAD,QAAA0F,EAIAD,EAAAC,IAAAA,CAEA,CA5gCA,CA4gCAnF,KlBmaA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASG,EAAQT,EAAOD,GAElC,EAAE,CAAC,GAAG,GAAG,CAAC,SAASU,EAAQT,EAAOD,GAClC/B,UAAU,GAAG,IAAI,GAAGC,MAAM8B,EAAQ/B,UAClC,EAAE,CAACgN,IAAM,KAAK,GAAG,CAAC,SAASvK,EAAQT,EAAOD,IAC1C,SAAWkL,IAAQ,WmBh7CnB,IAAAC,EAAAzK,EAAA,aACA0K,EAAA1K,EAAA,WAEAV,EAAAkL,OAAAA,EACAlL,EAAAqL,WAqTA,SAAAtO,IACAA,GAAAA,IACAA,EAAA,GAEA,OAAAmO,EAAAI,OAAAvO,EACA,EAzTAiD,EAAAuL,kBAAA,GAEA,IAAAC,EAAA,WAsDA,SAAAC,EAAA1O,GACA,GAAAA,EAAAyO,EACA,MAAA,IAAAE,WAAA,cAAA3O,EAAA,kCAGA,IAAA4O,EAAA,IAAAxG,WAAApI,GAEA,OADA4O,EAAAhM,UAAAuL,EAAAxM,UACAiN,CACA,CAYA,SAAAT,EAAAU,EAAAC,EAAA9O,GAEA,GAAA,iBAAA6O,EAAA,CACA,GAAA,iBAAAC,EACA,MAAA,IAAA7P,UACA,sEAGA,OAAA8P,EAAAF,EACA,CACA,OAAAlP,EAAAkP,EAAAC,EAAA9O,EACA,CAeA,SAAAL,EAAAY,EAAAuO,EAAA9O,GACA,GAAA,iBAAAO,EACA,OAiHA,SAAAyO,EAAAC,GACA,iBAAAA,GAAA,KAAAA,IACAA,EAAA,QAGA,IAAAd,EAAAe,WAAAD,GACA,MAAA,IAAAhQ,UAAA,qBAAAgQ,GAGA,IAAAjP,EAAA,EAAA8G,EAAAkI,EAAAC,GACAL,EAAAF,EAAA1O,GAEAmP,EAAAP,EAAAQ,MAAAJ,EAAAC,GAEAE,IAAAnP,IAIA4O,EAAAA,EAAArP,MAAA,EAAA4P,IAGA,OAAAP,CACA,CAvIAS,CAAA9O,EAAAuO,GAGA,GAAAQ,YAAAC,OAAAhP,GACA,OAAAiP,EAAAjP,GAGA,GAAA,MAAAA,EACA,MAAAtB,UACA,kHACA6C,QAAAvB,IAIA,GAAAkP,EAAAlP,EAAA+O,cACA/O,GAAAkP,EAAAlP,EAAAmP,OAAAJ,aACA,OAkIA,SAAAK,EAAAC,EAAA5P,GACA,GAAA4P,EAAA,GAAAD,EAAA7I,WAAA8I,EACA,MAAA,IAAAjB,WAAA,wCAGA,GAAAgB,EAAA7I,WAAA8I,GAAA5P,GAAA,GACA,MAAA,IAAA2O,WAAA,wCAGA,IAAAC,EAEAA,OADAiB,IAAAD,QAAAC,IAAA7P,EACA,IAAAoI,WAAAuH,QACAE,IAAA7P,EACA,IAAAoI,WAAAuH,EAAAC,GAEA,IAAAxH,WAAAuH,EAAAC,EAAA5P,GAKA,OADA4O,EAAAhM,UAAAuL,EAAAxM,UACAiN,CACA,CAvJAkB,CAAAvP,EAAAuO,EAAA9O,GAGA,GAAA,iBAAAO,EACA,MAAA,IAAAtB,UACA,yEAIA,IAAAwD,EAAAlC,EAAAkC,SAAAlC,EAAAkC,UACA,GAAA,MAAAA,GAAAA,IAAAlC,EACA,OAAA4N,EAAAxO,KAAA8C,EAAAqM,EAAA9O,GAGA,IAAA2K,EA2IA,SAAA9F,GACA,GAAAsJ,EAAA4B,SAAAlL,GAAA,CACA,IAAAkB,EAAA,EAAAiK,EAAAnL,EAAA7E,QACA4O,EAAAF,EAAA3I,GAEA,OAAA,IAAA6I,EAAA5O,QAIA6E,EAAAoL,KAAArB,EAAA,EAAA,EAAA7I,GAHA6I,CAKA,CAEA,QAAAiB,IAAAhL,EAAA7E,OACA,MAAA,iBAAA6E,EAAA7E,QAAAkQ,EAAArL,EAAA7E,QACA0O,EAAA,GAEAc,EAAA3K,GAGA,GAAA,WAAAA,EAAAsL,MAAAzQ,MAAAK,QAAA8E,EAAAuL,MACA,OAAAZ,EAAA3K,EAAAuL,KAEA,CAlKAC,CAAA9P,GACA,GAAAoK,EAAA,OAAAA,EAEA,GAAA,oBAAA9K,QAAA,MAAAA,OAAAkC,aACA,mBAAAxB,EAAAV,OAAAkC,aACA,OAAAoM,EAAAxO,KACAY,EAAAV,OAAAkC,aAAA,UAAA+M,EAAA9O,GAIA,MAAA,IAAAf,UACA,kHACA6C,QAAAvB,GAEA,CAmBA,SAAA+P,EAAAC,GACA,GAAA,iBAAAA,EACA,MAAA,IAAAtR,UAAA,0CACA,GAAAsR,EAAA,EACA,MAAA,IAAA5B,WAAA,cAAA4B,EAAA,iCAEA,CA0BA,SAAAxB,EAAAwB,GAEA,OADAD,EAAAC,GACA7B,EAAA6B,EAAA,EAAA,EAAA,EAAAP,EAAAO,GACA,CAuCA,SAAAf,EAAAG,GAGA,IAFA,IAAA3P,EAAA2P,EAAA3P,OAAA,EAAA,EAAA,EAAAgQ,EAAAL,EAAA3P,QACA4O,EAAAF,EAAA1O,GACA4B,EAAA,EAAAA,EAAA5B,EAAA4B,GAAA,EACAgN,EAAAhN,GAAA,IAAA+N,EAAA/N,GAEA,OAAAgN,CACA,CAkDA,SAAAoB,EAAAhQ,GAGA,GAAAA,GAAAyO,EACA,MAAA,IAAAE,WAAA,0DACAF,EAAApP,SAAA,IAAA,UAEA,OAAA,EAAAW,CACA,CA6FA,SAAA8G,EAAAkI,EAAAC,GACA,GAAAd,EAAA4B,SAAAf,GACA,OAAAA,EAAAhP,OAEA,GAAAsP,YAAAC,OAAAP,IAAAS,EAAAT,EAAAM,aACA,OAAAN,EAAAlI,WAEA,GAAA,iBAAAkI,EACA,MAAA,IAAA/P,UACA,2FACA6C,QAAAkN,IAIA,IAAAjJ,EAAAiJ,EAAAhP,OACAwQ,EAAAtP,UAAAlB,OAAA,IAAA,IAAAkB,UAAA,GACA,IAAAsP,GAAA,IAAAzK,EAAA,OAAA,EAIA,IADA,IAAA0K,GAAA,IAEA,OAAAxB,GACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,OAAAlJ,EACA,IAAA,OACA,IAAA,QACA,OAAA2K,EAAA1B,GAAAhP,OACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EAAA+F,EACA,IAAA,MACA,OAAAA,IAAA,EACA,IAAA,SACA,OAAA4K,EAAA3B,GAAAhP,OACA,QACA,GAAAyQ,EACA,OAAAD,GAAA,EAAAE,EAAA1B,GAAAhP,OAEAiP,GAAA,GAAAA,GAAA2B,cACAH,GAAA,EAGA,CAGA,SAAAI,EAAA5B,EAAA3G,EAAAC,GACA,IAAAkI,GAAA,EAcA,SALAZ,IAAAvH,GAAAA,EAAA,KACAA,EAAA,GAIAA,EAAA9E,KAAAxD,OACA,MAAA,GAOA,SAJA6P,IAAAtH,GAAAA,EAAA/E,KAAAxD,UACAuI,EAAA/E,KAAAxD,QAGAuI,GAAA,EACA,MAAA,GAOA,IAHAA,KAAA,KACAD,KAAA,GAGA,MAAA,GAKA,IAFA2G,IAAAA,EAAA,UAGA,OAAAA,GACA,IAAA,MACA,OAAA6B,EAAAtN,KAAA8E,EAAAC,GAEA,IAAA,OACA,IAAA,QACA,OAAAwI,EAAAvN,KAAA8E,EAAAC,GAEA,IAAA,QACA,OAAAyI,EAAAxN,KAAA8E,EAAAC,GAEA,IAAA,SACA,IAAA,SACA,OAAA0I,EAAAzN,KAAA8E,EAAAC,GAEA,IAAA,SACA,OAAA2I,EAAA1N,KAAA8E,EAAAC,GAEA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA4I,EAAA3N,KAAA8E,EAAAC,GAEA,QACA,GAAAkI,EAAA,MAAA,IAAAxR,UAAA,qBAAAgQ,GACAA,GAAAA,EAAA,IAAA2B,cACAH,GAAA,EAGA,CAUA,SAAAW,EAAAzG,EAAAzK,EAAAmR,GACA,IAAAzP,EAAA+I,EAAAzK,GACAyK,EAAAzK,GAAAyK,EAAA0G,GACA1G,EAAA0G,GAAAzP,CACA,CAwIA,SAAA0P,EAAA5B,EAAA6B,EAAA3B,EAAAX,EAAAuC,GAEA,GAAA,IAAA9B,EAAA1P,OAAA,OAAA,EAmBA,GAhBA,iBAAA4P,GACAX,EAAAW,EACAA,EAAA,GACAA,EAAA,WACAA,EAAA,WACAA,GAAA,aACAA,GAAA,YAGAM,EADAN,GAAAA,KAGAA,EAAA4B,EAAA,EAAA9B,EAAA1P,OAAA,GAIA4P,EAAA,IAAAA,EAAAF,EAAA1P,OAAA4P,GACAA,GAAAF,EAAA1P,OAAA,CACA,GAAAwR,EAAA,OAAA,EACA5B,EAAAF,EAAA1P,OAAA,CACA,MAAA,GAAA4P,EAAA,EAAA,CACA,IAAA4B,EACA,OAAA,EADA5B,EAAA,CAEA,CAQA,GALA,iBAAA2B,IACAA,EAAApD,EAAAxO,KAAA4R,EAAAtC,IAIAd,EAAA4B,SAAAwB,GAEA,OAAA,IAAAA,EAAAvR,QACA,EAEAyR,EAAA/B,EAAA6B,EAAA3B,EAAAX,EAAAuC,GACA,GAAA,iBAAAD,EAEA,OADAA,GAAA,IACA,mBAAAnJ,WAAAzG,UAAA0G,QACAmJ,EACApJ,WAAAzG,UAAA0G,QAAA/I,KAAAoQ,EAAA6B,EAAA3B,GAEAxH,WAAAzG,UAAA+P,YAAApS,KAAAoQ,EAAA6B,EAAA3B,GAGA6B,EAAA/B,EAAA,CAAA6B,GAAA3B,EAAAX,EAAAuC,GAGA,MAAA,IAAAvS,UAAA,uCACA,CAEA,SAAAwS,EAAAxN,EAAAsN,EAAA3B,EAAAX,EAAAuC,GACA,IA0BA5P,EA1BA+P,EAAA,EACAC,EAAA3N,EAAAjE,OACA6R,EAAAN,EAAAvR,OAEA,QAAA6P,IAAAZ,IAEA,UADAA,EAAAjN,OAAAiN,GAAA2B,gBACA,UAAA3B,GACA,YAAAA,GAAA,aAAAA,GAAA,CACA,GAAAhL,EAAAjE,OAAA,GAAAuR,EAAAvR,OAAA,EACA,OAAA,EAEA2R,EAAA,EACAC,GAAA,EACAC,GAAA,EACAjC,GAAA,CACA,CAGA,SAAAkC,EAAAlD,EAAAhN,GACA,OAAA,IAAA+P,EACA/C,EAAAhN,GAEAgN,EAAAmD,aAAAnQ,EAAA+P,EAEA,CAGA,GAAAH,EAAA,CACA,IAAAQ,GAAA,EACA,IAAApQ,EAAAgO,EAAAhO,EAAAgQ,EAAAhQ,IACA,GAAAkQ,EAAA7N,EAAArC,KAAAkQ,EAAAP,GAAA,IAAAS,EAAA,EAAApQ,EAAAoQ,IAEA,IADA,IAAAA,IAAAA,EAAApQ,GACAA,EAAAoQ,EAAA,IAAAH,EAAA,OAAAG,EAAAL,OAEA,IAAAK,IAAApQ,GAAAA,EAAAoQ,GACAA,GAAA,CAGA,MAEA,IADApC,EAAAiC,EAAAD,IAAAhC,EAAAgC,EAAAC,GACAjQ,EAAAgO,EAAAhO,GAAA,EAAAA,IAAA,CAEA,IADA,IAAAqQ,GAAA,EACAzH,EAAA,EAAAA,EAAAqH,EAAArH,IACA,GAAAsH,EAAA7N,EAAArC,EAAA4I,KAAAsH,EAAAP,EAAA/G,GAAA,CACAyH,GAAA,EACA,KACA,CAEA,GAAAA,EAAA,OAAArQ,CACA,CAGA,OAAA,CACA,CAcA,SAAAsQ,EAAAtD,EAAAI,EAAAmD,EAAAnS,GACAmS,EAAAlQ,OAAAkQ,IAAA,EACA,IAAAC,EAAAxD,EAAA5O,OAAAmS,EACAnS,GAGAA,EAAAiC,OAAAjC,IACAoS,IACApS,EAAAoS,GAJApS,EAAAoS,EAQA,IAAAC,EAAArD,EAAAhP,OAEAA,EAAAqS,EAAA,IACArS,EAAAqS,EAAA,GAEA,IAAA,IAAAzQ,EAAA,EAAAA,EAAA5B,IAAA4B,EAAA,CACA,IAAA0Q,EAAAC,SAAAvD,EAAAwD,OAAA,EAAA5Q,EAAA,GAAA,IACA,GAAAsO,EAAAoC,GAAA,OAAA1Q,EACAgN,EAAAuD,EAAAvQ,GAAA0Q,CACA,CACA,OAAA1Q,CACA,CAEA,SAAA6Q,EAAA7D,EAAAI,EAAAmD,EAAAnS,GACA,OAAA0S,EAAAhC,EAAA1B,EAAAJ,EAAA5O,OAAAmS,GAAAvD,EAAAuD,EAAAnS,EACA,CAEA,SAAA2S,EAAA/D,EAAAI,EAAAmD,EAAAnS,GACA,OAAA0S,EA63BA,SAAAE,GAEA,IADA,IAAAC,EAAA,GACAjR,EAAA,EAAAA,EAAAgR,EAAA5S,SAAA4B,EAEAiR,EAAApN,KAAA,IAAAmN,EAAAlL,WAAA9F,IAEA,OAAAiR,CACA,CAp4BAC,CAAA9D,GAAAJ,EAAAuD,EAAAnS,EACA,CAEA,SAAA+S,EAAAnE,EAAAI,EAAAmD,EAAAnS,GACA,OAAA2S,EAAA/D,EAAAI,EAAAmD,EAAAnS,EACA,CAEA,SAAAgT,EAAApE,EAAAI,EAAAmD,EAAAnS,GACA,OAAA0S,EAAA/B,EAAA3B,GAAAJ,EAAAuD,EAAAnS,EACA,CAEA,SAAAiT,EAAArE,EAAAI,EAAAmD,EAAAnS,GACA,OAAA0S,EA03BA,SAAAE,EAAAM,GAGA,IAFA,IAAAxP,EAAAyP,EAAAC,EACAP,EAAA,GACAjR,EAAA,EAAAA,EAAAgR,EAAA5S,WACAkT,GAAA,GAAA,KADAtR,EAIAuR,GADAzP,EAAAkP,EAAAlL,WAAA9F,KACA,EACAwR,EAAA1P,EAAA,IACAmP,EAAApN,KAAA2N,GACAP,EAAApN,KAAA0N,GAGA,OAAAN,CACA,CAx4BAQ,CAAArE,EAAAJ,EAAA5O,OAAAmS,GAAAvD,EAAAuD,EAAAnS,EACA,CAgFA,SAAAkR,EAAAtC,EAAAtG,EAAAC,GACA,OAAA,IAAAD,GAAAC,IAAAqG,EAAA5O,OACAoO,EAAAzG,cAAAiH,GAEAR,EAAAzG,cAAAiH,EAAArP,MAAA+I,EAAAC,GAEA,CAEA,SAAAwI,EAAAnC,EAAAtG,EAAAC,GACAA,EAAAnC,KAAAkN,IAAA1E,EAAA5O,OAAAuI,GAIA,IAHA,IAAAgL,EAAA,GAEA3R,EAAA0G,EACA1G,EAAA2G,GAAA,CACA,IAQAiL,EAAAC,EAAAC,EAAAC,EARAC,EAAAhF,EAAAhN,GACAiS,EAAA,KACAC,EAAAF,EAAA,IAAA,EACAA,EAAA,IAAA,EACAA,EAAA,IAAA,EACA,EAEA,GAAAhS,EAAAkS,GAAAvL,EAGA,OAAAuL,GACA,KAAA,EACAF,EAAA,MACAC,EAAAD,GAEA,MACA,KAAA,EAEA,MAAA,KADAJ,EAAA5E,EAAAhN,EAAA,OAEA+R,GAAA,GAAAC,IAAA,EAAA,GAAAJ,GACA,MACAK,EAAAF,GAGA,MACA,KAAA,EACAH,EAAA5E,EAAAhN,EAAA,GACA6R,EAAA7E,EAAAhN,EAAA,GACA,MAAA,IAAA4R,IAAA,MAAA,IAAAC,KACAE,GAAA,GAAAC,IAAA,IAAA,GAAAJ,IAAA,EAAA,GAAAC,GACA,OAAAE,EAAA,OAAAA,EAAA,SACAE,EAAAF,GAGA,MACA,KAAA,EACAH,EAAA5E,EAAAhN,EAAA,GACA6R,EAAA7E,EAAAhN,EAAA,GACA8R,EAAA9E,EAAAhN,EAAA,GACA,MAAA,IAAA4R,IAAA,MAAA,IAAAC,IAAA,MAAA,IAAAC,KACAC,GAAA,GAAAC,IAAA,IAAA,GAAAJ,IAAA,IAAA,GAAAC,IAAA,EAAA,GAAAC,GACA,OAAAC,EAAA,UACAE,EAAAF,GAMA,OAAAE,GAGAA,EAAA,MACAC,EAAA,GACAD,EAAA,QAEAA,GAAA,MACAN,EAAA9N,KAAAoO,IAAA,GAAA,KAAA,OACAA,EAAA,MAAA,KAAAA,GAGAN,EAAA9N,KAAAoO,GACAjS,GAAAkS,CACA,CAEA,OAQA,SAAAC,GACA,IAAAhO,EAAAgO,EAAA/T,OACA,GAAA+F,GAAAiO,EACA,OAAAhS,OAAAiS,aAAA9S,MAAAa,OAAA+R,GAIA,IAAAR,EAAA,GACA3R,EAAA,EACA,KAAAA,EAAAmE,GACAwN,GAAAvR,OAAAiS,aAAA9S,MACAa,OACA+R,EAAAxU,MAAAqC,EAAAA,GAAAoS,IAGA,OAAAT,CACA,CAxBAW,CAAAX,EACA,CA79BAtQ,EAAAkR,WAAA1F,EAgBAN,EAAAiG,oBAUA,WAEA,IACA,IAAAnQ,EAAA,IAAAmE,WAAA,GAEA,OADAnE,EAAArB,UAAA,CAAAA,UAAAwF,WAAAzG,UAAA0S,IAAA,WAAA,OAAA,EAAA,GACA,KAAApQ,EAAAoQ,KACA,CAAA,MAAApU,GACA,OAAA,CACA,CACA,CAnBAqU,GAEAnG,EAAAiG,qBAAA,oBAAAG,SACA,mBAAAA,QAAAC,OACAD,QAAAC,MACA,iJAgBAnU,OAAAC,eAAA6N,EAAAxM,UAAA,SAAA,CACAnB,YAAA,EACAK,IAAA,WACA,GAAAsN,EAAA4B,SAAAvM,MACA,OAAAA,KAAAkM,MACA,IAGArP,OAAAC,eAAA6N,EAAAxM,UAAA,SAAA,CACAnB,YAAA,EACAK,IAAA,WACA,GAAAsN,EAAA4B,SAAAvM,MACA,OAAAA,KAAAoM,UACA,IAqCA,oBAAA/P,QAAA,MAAAA,OAAA4U,SACAtG,EAAAtO,OAAA4U,WAAAtG,GACA9N,OAAAC,eAAA6N,EAAAtO,OAAA4U,QAAA,CACAlU,MAAA,KACAE,cAAA,EACAD,YAAA,EACAE,UAAA,IAIAyN,EAAAuG,SAAA,KA0DAvG,EAAAxO,KAAA,SAAAY,EAAAuO,EAAA9O,GACA,OAAAL,EAAAY,EAAAuO,EAAA9O,EACA,EAIAmO,EAAAxM,UAAAiB,UAAAwF,WAAAzG,UACAwM,EAAAvL,UAAAwF,WA8BA+F,EAAAI,MAAA,SAAAgC,EAAAoE,EAAA1F,GACA,OArBA,SAAAsB,EAAAoE,EAAA1F,GAEA,OADAqB,EAAAC,GACAA,GAAA,EACA7B,EAAA6B,QAEAV,IAAA8E,EAIA,iBAAA1F,EACAP,EAAA6B,GAAAoE,KAAAA,EAAA1F,GACAP,EAAA6B,GAAAoE,KAAAA,GAEAjG,EAAA6B,EACA,CAOAhC,CAAAgC,EAAAoE,EAAA1F,EACA,EAUAd,EAAAY,YAAA,SAAAwB,GACA,OAAAxB,EAAAwB,EACA,EAIApC,EAAAyG,gBAAA,SAAArE,GACA,OAAAxB,EAAAwB,EACA,EAoGApC,EAAA4B,SAAA,SAAApF,GACA,OAAA,MAAAA,IAAA,IAAAA,EAAAkK,WACAlK,IAAAwD,EAAAxM,SACA,EAEAwM,EAAA2G,QAAA,SAAA5V,EAAAyL,GAGA,GAFA8E,EAAAvQ,EAAAkJ,cAAAlJ,EAAAiP,EAAAxO,KAAAT,EAAAA,EAAAiT,OAAAjT,EAAA4H,aACA2I,EAAA9E,EAAAvC,cAAAuC,EAAAwD,EAAAxO,KAAAgL,EAAAA,EAAAwH,OAAAxH,EAAA7D,cACAqH,EAAA4B,SAAA7Q,KAAAiP,EAAA4B,SAAApF,GACA,MAAA,IAAA1L,UACA,yEAIA,GAAAC,IAAAyL,EAAA,OAAA,EAKA,IAHA,IAAApB,EAAArK,EAAAc,OACAqK,EAAAM,EAAA3K,OAEA4B,EAAA,EAAAmE,EAAAK,KAAAkN,IAAA/J,EAAAc,GAAAzI,EAAAmE,IAAAnE,EACA,GAAA1C,EAAA0C,KAAA+I,EAAA/I,GAAA,CACA2H,EAAArK,EAAA0C,GACAyI,EAAAM,EAAA/I,GACA,KACA,CAGA,OAAA2H,EAAAc,GAAA,EACAA,EAAAd,EAAA,EACA,CACA,EAEA4E,EAAAe,WAAA,SAAAD,GACA,OAAAjN,OAAAiN,GAAA2B,eACA,IAAA,MACA,IAAA,OACA,IAAA,QACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,IAAA,SACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EACA,QACA,OAAA,EAEA,EAEAzC,EAAAtH,OAAA,SAAAkO,EAAA/U,GACA,IAAAN,MAAAK,QAAAgV,GACA,MAAA,IAAA9V,UAAA,+CAGA,GAAA,IAAA8V,EAAA/U,OACA,OAAAmO,EAAAI,MAAA,GAGA,IAAA3M,EACA,QAAAiO,IAAA7P,EAEA,IADAA,EAAA,EACA4B,EAAA,EAAAA,EAAAmT,EAAA/U,SAAA4B,EACA5B,GAAA+U,EAAAnT,GAAA5B,OAIA,IAAA0P,EAAAvB,EAAAY,YAAA/O,GACAgV,EAAA,EACA,IAAApT,EAAA,EAAAA,EAAAmT,EAAA/U,SAAA4B,EAAA,CACA,IAAAgN,EAAAmG,EAAAnT,GAIA,GAHA6N,EAAAb,EAAAxG,cACAwG,EAAAT,EAAAxO,KAAAiP,KAEAT,EAAA4B,SAAAnB,GACA,MAAA,IAAA3P,UAAA,+CAEA2P,EAAAqB,KAAAP,EAAAsF,GACAA,GAAApG,EAAA5O,MACA,CACA,OAAA0P,CACA,EAiDAvB,EAAArH,WAAAA,EA8EAqH,EAAAxM,UAAAkT,WAAA,EAQA1G,EAAAxM,UAAAsT,OAAA,WACA,IAAAlP,EAAAvC,KAAAxD,OACA,GAAA+F,EAAA,GAAA,EACA,MAAA,IAAA4I,WAAA,6CAEA,IAAA,IAAA/M,EAAA,EAAAA,EAAAmE,EAAAnE,GAAA,EACAwP,EAAA5N,KAAA5B,EAAAA,EAAA,GAEA,OAAA4B,IACA,EAEA2K,EAAAxM,UAAAuT,OAAA,WACA,IAAAnP,EAAAvC,KAAAxD,OACA,GAAA+F,EAAA,GAAA,EACA,MAAA,IAAA4I,WAAA,6CAEA,IAAA,IAAA/M,EAAA,EAAAA,EAAAmE,EAAAnE,GAAA,EACAwP,EAAA5N,KAAA5B,EAAAA,EAAA,GACAwP,EAAA5N,KAAA5B,EAAA,EAAAA,EAAA,GAEA,OAAA4B,IACA,EAEA2K,EAAAxM,UAAAwT,OAAA,WACA,IAAApP,EAAAvC,KAAAxD,OACA,GAAA+F,EAAA,GAAA,EACA,MAAA,IAAA4I,WAAA,6CAEA,IAAA,IAAA/M,EAAA,EAAAA,EAAAmE,EAAAnE,GAAA,EACAwP,EAAA5N,KAAA5B,EAAAA,EAAA,GACAwP,EAAA5N,KAAA5B,EAAA,EAAAA,EAAA,GACAwP,EAAA5N,KAAA5B,EAAA,EAAAA,EAAA,GACAwP,EAAA5N,KAAA5B,EAAA,EAAAA,EAAA,GAEA,OAAA4B,IACA,EAEA2K,EAAAxM,UAAAtC,SAAA,WACA,IAAAW,EAAAwD,KAAAxD,OACA,OAAA,IAAAA,EAAA,GACA,IAAAkB,UAAAlB,OAAA+Q,EAAAvN,KAAA,EAAAxD,GACA6Q,EAAA1P,MAAAqC,KAAAtC,UACA,EAEAiN,EAAAxM,UAAAyT,eAAAjH,EAAAxM,UAAAtC,SAEA8O,EAAAxM,UAAA0T,OAAA,SAAA1K,GACA,IAAAwD,EAAA4B,SAAApF,GAAA,MAAA,IAAA1L,UAAA,6BACA,OAAAuE,OAAAmH,GACA,IAAAwD,EAAA2G,QAAAtR,KAAAmH,EACA,EAEAwD,EAAAxM,UAAA2T,QAAA,WACA,IAAA1C,EAAA,GACAvM,EAAApD,EAAAuL,kBAGA,OAFAoE,EAAApP,KAAAnE,SAAA,MAAA,EAAAgH,GAAAqH,QAAA,UAAA,OAAA6H,OACA/R,KAAAxD,OAAAqG,IAAAuM,GAAA,SACA,WAAAA,EAAA,GACA,EAEAzE,EAAAxM,UAAAmT,QAAA,SAAAU,EAAAlN,EAAAC,EAAAkN,EAAAC,GAIA,GAHAjG,EAAA+F,EAAApN,cACAoN,EAAArH,EAAAxO,KAAA6V,EAAAA,EAAArD,OAAAqD,EAAA1O,cAEAqH,EAAA4B,SAAAyF,GACA,MAAA,IAAAvW,UACA,iFACA6C,QAAA0T,IAiBA,QAbA3F,IAAAvH,IACAA,EAAA,QAEAuH,IAAAtH,IACAA,EAAAiN,EAAAA,EAAAxV,OAAA,QAEA6P,IAAA4F,IACAA,EAAA,QAEA5F,IAAA6F,IACAA,EAAAlS,KAAAxD,QAGAsI,EAAA,GAAAC,EAAAiN,EAAAxV,QAAAyV,EAAA,GAAAC,EAAAlS,KAAAxD,OACA,MAAA,IAAA2O,WAAA,sBAGA,GAAA8G,GAAAC,GAAApN,GAAAC,EACA,OAAA,EAEA,GAAAkN,GAAAC,EACA,OAAA,EAEA,GAAApN,GAAAC,EACA,OAAA,EAQA,GAAA/E,OAAAgS,EAAA,OAAA,EASA,IAPA,IAAAjM,GAJAmM,KAAA,IADAD,KAAA,GAMApL,GAPA9B,KAAA,IADAD,KAAA,GASAvC,EAAAK,KAAAkN,IAAA/J,EAAAc,GAEAsL,EAAAnS,KAAAjE,MAAAkW,EAAAC,GACAE,EAAAJ,EAAAjW,MAAA+I,EAAAC,GAEA3G,EAAA,EAAAA,EAAAmE,IAAAnE,EACA,GAAA+T,EAAA/T,KAAAgU,EAAAhU,GAAA,CACA2H,EAAAoM,EAAA/T,GACAyI,EAAAuL,EAAAhU,GACA,KACA,CAGA,OAAA2H,EAAAc,GAAA,EACAA,EAAAd,EAAA,EACA,CACA,EA2HA4E,EAAAxM,UAAAkU,SAAA,SAAAtE,EAAA3B,EAAAX,GACA,OAAA,IAAAzL,KAAA6E,QAAAkJ,EAAA3B,EAAAX,EACA,EAEAd,EAAAxM,UAAA0G,QAAA,SAAAkJ,EAAA3B,EAAAX,GACA,OAAAqC,EAAA9N,KAAA+N,EAAA3B,EAAAX,GAAA,EACA,EAEAd,EAAAxM,UAAA+P,YAAA,SAAAH,EAAA3B,EAAAX,GACA,OAAAqC,EAAA9N,KAAA+N,EAAA3B,EAAAX,GAAA,EACA,EA+CAd,EAAAxM,UAAAyN,MAAA,SAAAJ,EAAAmD,EAAAnS,EAAAiP,GAEA,QAAAY,IAAAsC,EACAlD,EAAA,OACAjP,EAAAwD,KAAAxD,OACAmS,EAAA,OAEA,QAAAtC,IAAA7P,GAAA,iBAAAmS,EACAlD,EAAAkD,EACAnS,EAAAwD,KAAAxD,OACAmS,EAAA,MAEA,KAAA2D,SAAA3D,GAUA,MAAA,IAAAtO,MACA,2EAVAsO,KAAA,EACA2D,SAAA9V,IACAA,KAAA,OACA6P,IAAAZ,IAAAA,EAAA,UAEAA,EAAAjP,EACAA,OAAA6P,EAMA,CAEA,IAAAuC,EAAA5O,KAAAxD,OAAAmS,EAGA,SAFAtC,IAAA7P,GAAAA,EAAAoS,KAAApS,EAAAoS,GAEApD,EAAAhP,OAAA,IAAAA,EAAA,GAAAmS,EAAA,IAAAA,EAAA3O,KAAAxD,OACA,MAAA,IAAA2O,WAAA,0CAGAM,IAAAA,EAAA,QAGA,IADA,IAAAwB,GAAA,IAEA,OAAAxB,GACA,IAAA,MACA,OAAAiD,EAAA1O,KAAAwL,EAAAmD,EAAAnS,GAEA,IAAA,OACA,IAAA,QACA,OAAAyS,EAAAjP,KAAAwL,EAAAmD,EAAAnS,GAEA,IAAA,QACA,OAAA2S,EAAAnP,KAAAwL,EAAAmD,EAAAnS,GAEA,IAAA,SACA,IAAA,SACA,OAAA+S,EAAAvP,KAAAwL,EAAAmD,EAAAnS,GAEA,IAAA,SAEA,OAAAgT,EAAAxP,KAAAwL,EAAAmD,EAAAnS,GAEA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAAiT,EAAAzP,KAAAwL,EAAAmD,EAAAnS,GAEA,QACA,GAAAyQ,EAAA,MAAA,IAAAxR,UAAA,qBAAAgQ,GACAA,GAAA,GAAAA,GAAA2B,cACAH,GAAA,EAGA,EAEAtC,EAAAxM,UAAAuL,OAAA,WACA,MAAA,CACAiD,KAAA,SACAC,KAAA1Q,MAAAiC,UAAApC,MAAAD,KAAAkE,KAAAuS,MAAAvS,KAAA,GAEA,EAsFA,IAAAwQ,EAAA,KAoBA,SAAAhD,EAAApC,EAAAtG,EAAAC,GACA,IAAAyN,EAAA,GACAzN,EAAAnC,KAAAkN,IAAA1E,EAAA5O,OAAAuI,GAEA,IAAA,IAAA3G,EAAA0G,EAAA1G,EAAA2G,IAAA3G,EACAoU,GAAAhU,OAAAiS,aAAA,IAAArF,EAAAhN,IAEA,OAAAoU,CACA,CAEA,SAAA/E,EAAArC,EAAAtG,EAAAC,GACA,IAAAyN,EAAA,GACAzN,EAAAnC,KAAAkN,IAAA1E,EAAA5O,OAAAuI,GAEA,IAAA,IAAA3G,EAAA0G,EAAA1G,EAAA2G,IAAA3G,EACAoU,GAAAhU,OAAAiS,aAAArF,EAAAhN,IAEA,OAAAoU,CACA,CAEA,SAAAlF,EAAAlC,EAAAtG,EAAAC,GACA,IAAAxC,EAAA6I,EAAA5O,SAEAsI,GAAAA,EAAA,KAAAA,EAAA,KACAC,GAAAA,EAAA,GAAAA,EAAAxC,KAAAwC,EAAAxC,GAGA,IADA,IAAAkQ,EAAA,GACArU,EAAA0G,EAAA1G,EAAA2G,IAAA3G,EACAqU,GAAAC,EAAAtH,EAAAhN,IAEA,OAAAqU,CACA,CAEA,SAAA9E,EAAAvC,EAAAtG,EAAAC,GAGA,IAFA,IAAA4N,EAAAvH,EAAArP,MAAA+I,EAAAC,GACAgL,EAAA,GACA3R,EAAA,EAAAA,EAAAuU,EAAAnW,OAAA4B,GAAA,EACA2R,GAAAvR,OAAAiS,aAAAkC,EAAAvU,GAAA,IAAAuU,EAAAvU,EAAA,IAEA,OAAA2R,CACA,CAgCA,SAAA6C,EAAAjE,EAAAkE,EAAArW,GACA,GAAAmS,EAAA,GAAA,GAAAA,EAAA,EAAA,MAAA,IAAAxD,WAAA,sBACA,GAAAwD,EAAAkE,EAAArW,EAAA,MAAA,IAAA2O,WAAA,wCACA,CA4KA,SAAA2H,EAAA1H,EAAArO,EAAA4R,EAAAkE,EAAAhQ,EAAAiN,GACA,IAAAnF,EAAA4B,SAAAnB,GAAA,MAAA,IAAA3P,UAAA,+CACA,GAAAsB,EAAA8F,GAAA9F,EAAA+S,EAAA,MAAA,IAAA3E,WAAA,qCACA,GAAAwD,EAAAkE,EAAAzH,EAAA5O,OAAA,MAAA,IAAA2O,WAAA,qBACA,CAwLA,SAAA4H,EAAA3H,EAAArO,EAAA4R,EAAAkE,EAAAhQ,EAAAiN,GACA,GAAAnB,EAAAkE,EAAAzH,EAAA5O,OAAA,MAAA,IAAA2O,WAAA,sBACA,GAAAwD,EAAA,EAAA,MAAA,IAAAxD,WAAA,qBACA,CAEA,SAAA6H,EAAA5H,EAAArO,EAAA4R,EAAAsE,EAAAC,GAOA,OANAnW,GAAAA,EACA4R,KAAA,EACAuE,GACAH,EAAA3H,EAAArO,EAAA4R,EAAA,GAEA9D,EAAAe,MAAAR,EAAArO,EAAA4R,EAAAsE,EAAA,GAAA,GACAtE,EAAA,CACA,CAUA,SAAAwE,EAAA/H,EAAArO,EAAA4R,EAAAsE,EAAAC,GAOA,OANAnW,GAAAA,EACA4R,KAAA,EACAuE,GACAH,EAAA3H,EAAArO,EAAA4R,EAAA,GAEA9D,EAAAe,MAAAR,EAAArO,EAAA4R,EAAAsE,EAAA,GAAA,GACAtE,EAAA,CACA,CAxaAhE,EAAAxM,UAAApC,MAAA,SAAA+I,EAAAC,GACA,IAAAxC,EAAAvC,KAAAxD,QACAsI,IAAAA,GAGA,GACAA,GAAAvC,GACA,IAAAuC,EAAA,GACAA,EAAAvC,IACAuC,EAAAvC,IANAwC,OAAAsH,IAAAtH,EAAAxC,IAAAwC,GASA,GACAA,GAAAxC,GACA,IAAAwC,EAAA,GACAA,EAAAxC,IACAwC,EAAAxC,GAGAwC,EAAAD,IAAAC,EAAAD,GAEA,IAAAsO,EAAApT,KAAAqT,SAAAvO,EAAAC,GAGA,OADAqO,EAAAhU,UAAAuL,EAAAxM,UACAiV,CACA,EAUAzI,EAAAxM,UAAAmV,WAAA,SAAA3E,EAAArL,EAAA4P,GACAvE,KAAA,EACArL,KAAA,EACA4P,GAAAN,EAAAjE,EAAArL,EAAAtD,KAAAxD,QAKA,IAHA,IAAAuR,EAAA/N,KAAA2O,GACAnF,EAAA,EACApL,EAAA,IACAA,EAAAkF,IAAAkG,GAAA,MACAuE,GAAA/N,KAAA2O,EAAAvQ,GAAAoL,EAGA,OAAAuE,CACA,EAEApD,EAAAxM,UAAAoV,WAAA,SAAA5E,EAAArL,EAAA4P,GACAvE,KAAA,EACArL,KAAA,EACA4P,GACAN,EAAAjE,EAAArL,EAAAtD,KAAAxD,QAKA,IAFA,IAAAuR,EAAA/N,KAAA2O,IAAArL,GACAkG,EAAA,EACAlG,EAAA,IAAAkG,GAAA,MACAuE,GAAA/N,KAAA2O,IAAArL,GAAAkG,EAGA,OAAAuE,CACA,EAEApD,EAAAxM,UAAAqV,UAAA,SAAA7E,EAAAuE,GAGA,OAFAvE,KAAA,EACAuE,GAAAN,EAAAjE,EAAA,EAAA3O,KAAAxD,QACAwD,KAAA2O,EACA,EAEAhE,EAAAxM,UAAAsV,aAAA,SAAA9E,EAAAuE,GAGA,OAFAvE,KAAA,EACAuE,GAAAN,EAAAjE,EAAA,EAAA3O,KAAAxD,QACAwD,KAAA2O,GAAA3O,KAAA2O,EAAA,IAAA,CACA,EAEAhE,EAAAxM,UAAAoQ,aAAA,SAAAI,EAAAuE,GAGA,OAFAvE,KAAA,EACAuE,GAAAN,EAAAjE,EAAA,EAAA3O,KAAAxD,QACAwD,KAAA2O,IAAA,EAAA3O,KAAA2O,EAAA,EACA,EAEAhE,EAAAxM,UAAAuV,aAAA,SAAA/E,EAAAuE,GAIA,OAHAvE,KAAA,EACAuE,GAAAN,EAAAjE,EAAA,EAAA3O,KAAAxD,SAEAwD,KAAA2O,GACA3O,KAAA2O,EAAA,IAAA,EACA3O,KAAA2O,EAAA,IAAA,IACA,SAAA3O,KAAA2O,EAAA,EACA,EAEAhE,EAAAxM,UAAAwV,aAAA,SAAAhF,EAAAuE,GAIA,OAHAvE,KAAA,EACAuE,GAAAN,EAAAjE,EAAA,EAAA3O,KAAAxD,QAEA,SAAAwD,KAAA2O,IACA3O,KAAA2O,EAAA,IAAA,GACA3O,KAAA2O,EAAA,IAAA,EACA3O,KAAA2O,EAAA,GACA,EAEAhE,EAAAxM,UAAAyV,UAAA,SAAAjF,EAAArL,EAAA4P,GACAvE,KAAA,EACArL,KAAA,EACA4P,GAAAN,EAAAjE,EAAArL,EAAAtD,KAAAxD,QAKA,IAHA,IAAAuR,EAAA/N,KAAA2O,GACAnF,EAAA,EACApL,EAAA,IACAA,EAAAkF,IAAAkG,GAAA,MACAuE,GAAA/N,KAAA2O,EAAAvQ,GAAAoL,EAMA,OAFAuE,IAFAvE,GAAA,OAEAuE,GAAAnL,KAAAsG,IAAA,EAAA,EAAA5F,IAEAyK,CACA,EAEApD,EAAAxM,UAAA0V,UAAA,SAAAlF,EAAArL,EAAA4P,GACAvE,KAAA,EACArL,KAAA,EACA4P,GAAAN,EAAAjE,EAAArL,EAAAtD,KAAAxD,QAKA,IAHA,IAAA4B,EAAAkF,EACAkG,EAAA,EACAuE,EAAA/N,KAAA2O,IAAAvQ,GACAA,EAAA,IAAAoL,GAAA,MACAuE,GAAA/N,KAAA2O,IAAAvQ,GAAAoL,EAMA,OAFAuE,IAFAvE,GAAA,OAEAuE,GAAAnL,KAAAsG,IAAA,EAAA,EAAA5F,IAEAyK,CACA,EAEApD,EAAAxM,UAAA2V,SAAA,SAAAnF,EAAAuE,GAGA,OAFAvE,KAAA,EACAuE,GAAAN,EAAAjE,EAAA,EAAA3O,KAAAxD,QACA,IAAAwD,KAAA2O,IACA,GAAA,IAAA3O,KAAA2O,GAAA,GADA3O,KAAA2O,EAEA,EAEAhE,EAAAxM,UAAA4V,YAAA,SAAApF,EAAAuE,GACAvE,KAAA,EACAuE,GAAAN,EAAAjE,EAAA,EAAA3O,KAAAxD,QACA,IAAAuR,EAAA/N,KAAA2O,GAAA3O,KAAA2O,EAAA,IAAA,EACA,OAAA,MAAAZ,EAAA,WAAAA,EAAAA,CACA,EAEApD,EAAAxM,UAAA6V,YAAA,SAAArF,EAAAuE,GACAvE,KAAA,EACAuE,GAAAN,EAAAjE,EAAA,EAAA3O,KAAAxD,QACA,IAAAuR,EAAA/N,KAAA2O,EAAA,GAAA3O,KAAA2O,IAAA,EACA,OAAA,MAAAZ,EAAA,WAAAA,EAAAA,CACA,EAEApD,EAAAxM,UAAA8V,YAAA,SAAAtF,EAAAuE,GAIA,OAHAvE,KAAA,EACAuE,GAAAN,EAAAjE,EAAA,EAAA3O,KAAAxD,QAEAwD,KAAA2O,GACA3O,KAAA2O,EAAA,IAAA,EACA3O,KAAA2O,EAAA,IAAA,GACA3O,KAAA2O,EAAA,IAAA,EACA,EAEAhE,EAAAxM,UAAA+V,YAAA,SAAAvF,EAAAuE,GAIA,OAHAvE,KAAA,EACAuE,GAAAN,EAAAjE,EAAA,EAAA3O,KAAAxD,QAEAwD,KAAA2O,IAAA,GACA3O,KAAA2O,EAAA,IAAA,GACA3O,KAAA2O,EAAA,IAAA,EACA3O,KAAA2O,EAAA,EACA,EAEAhE,EAAAxM,UAAAgW,YAAA,SAAAxF,EAAAuE,GAGA,OAFAvE,KAAA,EACAuE,GAAAN,EAAAjE,EAAA,EAAA3O,KAAAxD,QACAqO,EAAAyD,KAAAtO,KAAA2O,GAAA,EAAA,GAAA,EACA,EAEAhE,EAAAxM,UAAAiW,YAAA,SAAAzF,EAAAuE,GAGA,OAFAvE,KAAA,EACAuE,GAAAN,EAAAjE,EAAA,EAAA3O,KAAAxD,QACAqO,EAAAyD,KAAAtO,KAAA2O,GAAA,EAAA,GAAA,EACA,EAEAhE,EAAAxM,UAAAkW,aAAA,SAAA1F,EAAAuE,GAGA,OAFAvE,KAAA,EACAuE,GAAAN,EAAAjE,EAAA,EAAA3O,KAAAxD,QACAqO,EAAAyD,KAAAtO,KAAA2O,GAAA,EAAA,GAAA,EACA,EAEAhE,EAAAxM,UAAAmW,aAAA,SAAA3F,EAAAuE,GAGA,OAFAvE,KAAA,EACAuE,GAAAN,EAAAjE,EAAA,EAAA3O,KAAAxD,QACAqO,EAAAyD,KAAAtO,KAAA2O,GAAA,EAAA,GAAA,EACA,EAQAhE,EAAAxM,UAAAoW,YAAA,SAAAxX,EAAA4R,EAAArL,EAAA4P,IACAnW,GAAAA,EACA4R,KAAA,EACArL,KAAA,EACA4P,IAEAJ,EAAA9S,KAAAjD,EAAA4R,EAAArL,EADAV,KAAAsG,IAAA,EAAA,EAAA5F,GAAA,EACA,GAGA,IAAAkG,EAAA,EACApL,EAAA,EAEA,IADA4B,KAAA2O,GAAA,IAAA5R,IACAqB,EAAAkF,IAAAkG,GAAA,MACAxJ,KAAA2O,EAAAvQ,GAAArB,EAAAyM,EAAA,IAGA,OAAAmF,EAAArL,CACA,EAEAqH,EAAAxM,UAAAqW,YAAA,SAAAzX,EAAA4R,EAAArL,EAAA4P,IACAnW,GAAAA,EACA4R,KAAA,EACArL,KAAA,EACA4P,IAEAJ,EAAA9S,KAAAjD,EAAA4R,EAAArL,EADAV,KAAAsG,IAAA,EAAA,EAAA5F,GAAA,EACA,GAGA,IAAAlF,EAAAkF,EAAA,EACAkG,EAAA,EAEA,IADAxJ,KAAA2O,EAAAvQ,GAAA,IAAArB,IACAqB,GAAA,IAAAoL,GAAA,MACAxJ,KAAA2O,EAAAvQ,GAAArB,EAAAyM,EAAA,IAGA,OAAAmF,EAAArL,CACA,EAEAqH,EAAAxM,UAAAsW,WAAA,SAAA1X,EAAA4R,EAAAuE,GAKA,OAJAnW,GAAAA,EACA4R,KAAA,EACAuE,GAAAJ,EAAA9S,KAAAjD,EAAA4R,EAAA,EAAA,IAAA,GACA3O,KAAA2O,GAAA,IAAA5R,EACA4R,EAAA,CACA,EAEAhE,EAAAxM,UAAAuW,cAAA,SAAA3X,EAAA4R,EAAAuE,GAMA,OALAnW,GAAAA,EACA4R,KAAA,EACAuE,GAAAJ,EAAA9S,KAAAjD,EAAA4R,EAAA,EAAA,MAAA,GACA3O,KAAA2O,GAAA,IAAA5R,EACAiD,KAAA2O,EAAA,GAAA5R,IAAA,EACA4R,EAAA,CACA,EAEAhE,EAAAxM,UAAAwW,cAAA,SAAA5X,EAAA4R,EAAAuE,GAMA,OALAnW,GAAAA,EACA4R,KAAA,EACAuE,GAAAJ,EAAA9S,KAAAjD,EAAA4R,EAAA,EAAA,MAAA,GACA3O,KAAA2O,GAAA5R,IAAA,EACAiD,KAAA2O,EAAA,GAAA,IAAA5R,EACA4R,EAAA,CACA,EAEAhE,EAAAxM,UAAAyW,cAAA,SAAA7X,EAAA4R,EAAAuE,GAQA,OAPAnW,GAAAA,EACA4R,KAAA,EACAuE,GAAAJ,EAAA9S,KAAAjD,EAAA4R,EAAA,EAAA,WAAA,GACA3O,KAAA2O,EAAA,GAAA5R,IAAA,GACAiD,KAAA2O,EAAA,GAAA5R,IAAA,GACAiD,KAAA2O,EAAA,GAAA5R,IAAA,EACAiD,KAAA2O,GAAA,IAAA5R,EACA4R,EAAA,CACA,EAEAhE,EAAAxM,UAAA0W,cAAA,SAAA9X,EAAA4R,EAAAuE,GAQA,OAPAnW,GAAAA,EACA4R,KAAA,EACAuE,GAAAJ,EAAA9S,KAAAjD,EAAA4R,EAAA,EAAA,WAAA,GACA3O,KAAA2O,GAAA5R,IAAA,GACAiD,KAAA2O,EAAA,GAAA5R,IAAA,GACAiD,KAAA2O,EAAA,GAAA5R,IAAA,EACAiD,KAAA2O,EAAA,GAAA,IAAA5R,EACA4R,EAAA,CACA,EAEAhE,EAAAxM,UAAA2W,WAAA,SAAA/X,EAAA4R,EAAArL,EAAA4P,GAGA,GAFAnW,GAAAA,EACA4R,KAAA,GACAuE,EAAA,CACA,IAAAxS,EAAAkC,KAAAsG,IAAA,EAAA,EAAA5F,EAAA,GAEAwP,EAAA9S,KAAAjD,EAAA4R,EAAArL,EAAA5C,EAAA,GAAAA,EACA,CAEA,IAAAtC,EAAA,EACAoL,EAAA,EACAjB,EAAA,EAEA,IADAvI,KAAA2O,GAAA,IAAA5R,IACAqB,EAAAkF,IAAAkG,GAAA,MACAzM,EAAA,GAAA,IAAAwL,GAAA,IAAAvI,KAAA2O,EAAAvQ,EAAA,KACAmK,EAAA,GAEAvI,KAAA2O,EAAAvQ,IAAArB,EAAAyM,EAAA,GAAAjB,EAAA,IAGA,OAAAoG,EAAArL,CACA,EAEAqH,EAAAxM,UAAA4W,WAAA,SAAAhY,EAAA4R,EAAArL,EAAA4P,GAGA,GAFAnW,GAAAA,EACA4R,KAAA,GACAuE,EAAA,CACA,IAAAxS,EAAAkC,KAAAsG,IAAA,EAAA,EAAA5F,EAAA,GAEAwP,EAAA9S,KAAAjD,EAAA4R,EAAArL,EAAA5C,EAAA,GAAAA,EACA,CAEA,IAAAtC,EAAAkF,EAAA,EACAkG,EAAA,EACAjB,EAAA,EAEA,IADAvI,KAAA2O,EAAAvQ,GAAA,IAAArB,IACAqB,GAAA,IAAAoL,GAAA,MACAzM,EAAA,GAAA,IAAAwL,GAAA,IAAAvI,KAAA2O,EAAAvQ,EAAA,KACAmK,EAAA,GAEAvI,KAAA2O,EAAAvQ,IAAArB,EAAAyM,EAAA,GAAAjB,EAAA,IAGA,OAAAoG,EAAArL,CACA,EAEAqH,EAAAxM,UAAA6W,UAAA,SAAAjY,EAAA4R,EAAAuE,GAMA,OALAnW,GAAAA,EACA4R,KAAA,EACAuE,GAAAJ,EAAA9S,KAAAjD,EAAA4R,EAAA,EAAA,KAAA,KACA5R,EAAA,IAAAA,EAAA,IAAAA,EAAA,GACAiD,KAAA2O,GAAA,IAAA5R,EACA4R,EAAA,CACA,EAEAhE,EAAAxM,UAAA8W,aAAA,SAAAlY,EAAA4R,EAAAuE,GAMA,OALAnW,GAAAA,EACA4R,KAAA,EACAuE,GAAAJ,EAAA9S,KAAAjD,EAAA4R,EAAA,EAAA,OAAA,OACA3O,KAAA2O,GAAA,IAAA5R,EACAiD,KAAA2O,EAAA,GAAA5R,IAAA,EACA4R,EAAA,CACA,EAEAhE,EAAAxM,UAAA+W,aAAA,SAAAnY,EAAA4R,EAAAuE,GAMA,OALAnW,GAAAA,EACA4R,KAAA,EACAuE,GAAAJ,EAAA9S,KAAAjD,EAAA4R,EAAA,EAAA,OAAA,OACA3O,KAAA2O,GAAA5R,IAAA,EACAiD,KAAA2O,EAAA,GAAA,IAAA5R,EACA4R,EAAA,CACA,EAEAhE,EAAAxM,UAAAgX,aAAA,SAAApY,EAAA4R,EAAAuE,GAQA,OAPAnW,GAAAA,EACA4R,KAAA,EACAuE,GAAAJ,EAAA9S,KAAAjD,EAAA4R,EAAA,EAAA,YAAA,YACA3O,KAAA2O,GAAA,IAAA5R,EACAiD,KAAA2O,EAAA,GAAA5R,IAAA,EACAiD,KAAA2O,EAAA,GAAA5R,IAAA,GACAiD,KAAA2O,EAAA,GAAA5R,IAAA,GACA4R,EAAA,CACA,EAEAhE,EAAAxM,UAAAiX,aAAA,SAAArY,EAAA4R,EAAAuE,GASA,OARAnW,GAAAA,EACA4R,KAAA,EACAuE,GAAAJ,EAAA9S,KAAAjD,EAAA4R,EAAA,EAAA,YAAA,YACA5R,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACAiD,KAAA2O,GAAA5R,IAAA,GACAiD,KAAA2O,EAAA,GAAA5R,IAAA,GACAiD,KAAA2O,EAAA,GAAA5R,IAAA,EACAiD,KAAA2O,EAAA,GAAA,IAAA5R,EACA4R,EAAA,CACA,EAiBAhE,EAAAxM,UAAAkX,aAAA,SAAAtY,EAAA4R,EAAAuE,GACA,OAAAF,EAAAhT,KAAAjD,EAAA4R,GAAA,EAAAuE,EACA,EAEAvI,EAAAxM,UAAAmX,aAAA,SAAAvY,EAAA4R,EAAAuE,GACA,OAAAF,EAAAhT,KAAAjD,EAAA4R,GAAA,EAAAuE,EACA,EAYAvI,EAAAxM,UAAAoX,cAAA,SAAAxY,EAAA4R,EAAAuE,GACA,OAAAC,EAAAnT,KAAAjD,EAAA4R,GAAA,EAAAuE,EACA,EAEAvI,EAAAxM,UAAAqX,cAAA,SAAAzY,EAAA4R,EAAAuE,GACA,OAAAC,EAAAnT,KAAAjD,EAAA4R,GAAA,EAAAuE,EACA,EAGAvI,EAAAxM,UAAAsO,KAAA,SAAAuF,EAAAyD,EAAA3Q,EAAAC,GACA,IAAA4F,EAAA4B,SAAAyF,GAAA,MAAA,IAAAvW,UAAA,+BAQA,GAPAqJ,IAAAA,EAAA,GACAC,GAAA,IAAAA,IAAAA,EAAA/E,KAAAxD,QACAiZ,GAAAzD,EAAAxV,SAAAiZ,EAAAzD,EAAAxV,QACAiZ,IAAAA,EAAA,GACA1Q,EAAA,GAAAA,EAAAD,IAAAC,EAAAD,GAGAC,IAAAD,EAAA,OAAA,EACA,GAAA,IAAAkN,EAAAxV,QAAA,IAAAwD,KAAAxD,OAAA,OAAA,EAGA,GAAAiZ,EAAA,EACA,MAAA,IAAAtK,WAAA,6BAEA,GAAArG,EAAA,GAAAA,GAAA9E,KAAAxD,OAAA,MAAA,IAAA2O,WAAA,sBACA,GAAApG,EAAA,EAAA,MAAA,IAAAoG,WAAA,2BAGApG,EAAA/E,KAAAxD,SAAAuI,EAAA/E,KAAAxD,QACAwV,EAAAxV,OAAAiZ,EAAA1Q,EAAAD,IACAC,EAAAiN,EAAAxV,OAAAiZ,EAAA3Q,GAGA,IAAAvC,EAAAwC,EAAAD,EAEA,GAAA9E,OAAAgS,GAAA,mBAAApN,WAAAzG,UAAAuX,WAEA1V,KAAA0V,WAAAD,EAAA3Q,EAAAC,QACA,GAAA/E,OAAAgS,GAAAlN,EAAA2Q,GAAAA,EAAA1Q,EAEA,IAAA,IAAA3G,EAAAmE,EAAA,EAAAnE,GAAA,IAAAA,EACA4T,EAAA5T,EAAAqX,GAAAzV,KAAA5B,EAAA0G,QAGAF,WAAAzG,UAAAwX,IAAA7Z,KACAkW,EACAhS,KAAAqT,SAAAvO,EAAAC,GACA0Q,GAIA,OAAAlT,CACA,EAMAoI,EAAAxM,UAAAgT,KAAA,SAAApD,EAAAjJ,EAAAC,EAAA0G,GAEA,GAAA,iBAAAsC,EAAA,CASA,GARA,iBAAAjJ,GACA2G,EAAA3G,EACAA,EAAA,EACAC,EAAA/E,KAAAxD,QACA,iBAAAuI,IACA0G,EAAA1G,EACAA,EAAA/E,KAAAxD,aAEA6P,IAAAZ,GAAA,iBAAAA,EACA,MAAA,IAAAhQ,UAAA,6BAEA,GAAA,iBAAAgQ,IAAAd,EAAAe,WAAAD,GACA,MAAA,IAAAhQ,UAAA,qBAAAgQ,GAEA,GAAA,IAAAsC,EAAAvR,OAAA,CACA,IAAA8D,EAAAyN,EAAA7J,WAAA,IACA,SAAAuH,GAAAnL,EAAA,KACA,WAAAmL,KAEAsC,EAAAzN,EAEA,CACA,KAAA,iBAAAyN,IACAA,GAAA,KAIA,GAAAjJ,EAAA,GAAA9E,KAAAxD,OAAAsI,GAAA9E,KAAAxD,OAAAuI,EACA,MAAA,IAAAoG,WAAA,sBAGA,GAAApG,GAAAD,EACA,OAAA9E,KAQA,IAAA5B,EACA,GANA0G,KAAA,EACAC,OAAAsH,IAAAtH,EAAA/E,KAAAxD,OAAAuI,IAAA,EAEAgJ,IAAAA,EAAA,GAGA,iBAAAA,EACA,IAAA3P,EAAA0G,EAAA1G,EAAA2G,IAAA3G,EACA4B,KAAA5B,GAAA2P,MAEA,CACA,IAAA4E,EAAAhI,EAAA4B,SAAAwB,GACAA,EACApD,EAAAxO,KAAA4R,EAAAtC,GACAlJ,EAAAoQ,EAAAnW,OACA,GAAA,IAAA+F,EACA,MAAA,IAAA9G,UAAA,cAAAsS,EACA,qCAEA,IAAA3P,EAAA,EAAAA,EAAA2G,EAAAD,IAAA1G,EACA4B,KAAA5B,EAAA0G,GAAA6N,EAAAvU,EAAAmE,EAEA,CAEA,OAAAvC,IACA,EAKA,IAAA4V,EAAA,oBAgBA,SAAAlD,EAAAhW,GACA,OAAAA,EAAA,GAAA,IAAAA,EAAAb,SAAA,IACAa,EAAAb,SAAA,GACA,CAEA,SAAAqR,EAAA1B,EAAAkE,GAEA,IAAAW,EADAX,EAAAA,GAAAmG,IAMA,IAJA,IAAArZ,EAAAgP,EAAAhP,OACAsZ,EAAA,KACAnD,EAAA,GAEAvU,EAAA,EAAAA,EAAA5B,IAAA4B,EAAA,CAIA,IAHAiS,EAAA7E,EAAAtH,WAAA9F,IAGA,OAAAiS,EAAA,MAAA,CAEA,IAAAyF,EAAA,CAEA,GAAAzF,EAAA,MAAA,EAEAX,GAAA,IAAA,GAAAiD,EAAA1Q,KAAA,IAAA,IAAA,KACA,QACA,CAAA,GAAA7D,EAAA,IAAA5B,EAAA,EAEAkT,GAAA,IAAA,GAAAiD,EAAA1Q,KAAA,IAAA,IAAA,KACA,QACA,CAGA6T,EAAAzF,EAEA,QACA,CAGA,GAAAA,EAAA,MAAA,EACAX,GAAA,IAAA,GAAAiD,EAAA1Q,KAAA,IAAA,IAAA,KACA6T,EAAAzF,EACA,QACA,CAGAA,EAAA,OAAAyF,EAAA,OAAA,GAAAzF,EAAA,MACA,MAAAyF,IAEApG,GAAA,IAAA,GAAAiD,EAAA1Q,KAAA,IAAA,IAAA,KAMA,GAHA6T,EAAA,KAGAzF,EAAA,IAAA,CACA,IAAAX,GAAA,GAAA,EAAA,MACAiD,EAAA1Q,KAAAoO,EACA,MAAA,GAAAA,EAAA,KAAA,CACA,IAAAX,GAAA,GAAA,EAAA,MACAiD,EAAA1Q,KACAoO,GAAA,EAAA,IACA,GAAAA,EAAA,IAEA,MAAA,GAAAA,EAAA,MAAA,CACA,IAAAX,GAAA,GAAA,EAAA,MACAiD,EAAA1Q,KACAoO,GAAA,GAAA,IACAA,GAAA,EAAA,GAAA,IACA,GAAAA,EAAA,IAEA,KAAA,MAAAA,EAAA,SASA,MAAA,IAAAhQ,MAAA,sBARA,IAAAqP,GAAA,GAAA,EAAA,MACAiD,EAAA1Q,KACAoO,GAAA,GAAA,IACAA,GAAA,GAAA,GAAA,IACAA,GAAA,EAAA,GAAA,IACA,GAAAA,EAAA,IAIA,CACA,CAEA,OAAAsC,CACA,CA2BA,SAAAxF,EAAAiC,GACA,OAAAxE,EAAAhH,YA7HA,SAAAwL,GAMA,IAFAA,GAFAA,EAAAA,EAAA2G,MAAA,KAAA,IAEAhE,OAAA7H,QAAA0L,EAAA,KAEApZ,OAAA,EAAA,MAAA,GAEA,KAAA4S,EAAA5S,OAAA,GAAA,GACA4S,GAAA,IAEA,OAAAA,CACA,CAiHA4G,CAAA5G,GACA,CAEA,SAAAF,EAAA+G,EAAAC,EAAAvH,EAAAnS,GACA,IAAA,IAAA4B,EAAA,EAAAA,EAAA5B,KACA4B,EAAAuQ,GAAAuH,EAAA1Z,QAAA4B,GAAA6X,EAAAzZ,UADA4B,EAEA8X,EAAA9X,EAAAuQ,GAAAsH,EAAA7X,GAEA,OAAAA,CACA,CAKA,SAAA6N,EAAA5K,EAAAsL,GACA,OAAAtL,aAAAsL,GACA,MAAAtL,GAAA,MAAAA,EAAArF,aAAA,MAAAqF,EAAArF,YAAAC,MACAoF,EAAArF,YAAAC,OAAA0Q,EAAA1Q,IACA,CACA,SAAAyQ,EAAArL,GAEA,OAAAA,GAAAA,CACA,CnB67CC,GAAEvF,KAAKkE,KAAM,GAAElE,KAAKkE,KAAKG,EAAQ,UAAUwK,OAE5C,EAAE,CAAC,YAAY,GAAGuB,OAAS,GAAGrB,QAAU,KAAK,GAAG,CAAC,SAAS1K,EAAQT,EAAOD,GoB/qGzEC,EAAAD,QAAA,CACA,IAAA,WACA,IAAA,sBACA,IAAA,aACA,IAAA,KACA,IAAA,UACA,IAAA,WACA,IAAA,gCACA,IAAA,aACA,IAAA,gBACA,IAAA,kBACA,IAAA,eACA,IAAA,mBACA,IAAA,UACA,IAAA,mBACA,IAAA,oBACA,IAAA,QACA,IAAA,YACA,IAAA,eACA,IAAA,YACA,IAAA,qBACA,IAAA,qBACA,IAAA,cACA,IAAA,eACA,IAAA,mBACA,IAAA,YACA,IAAA,YACA,IAAA,qBACA,IAAA,iBACA,IAAA,gCACA,IAAA,kBACA,IAAA,WACA,IAAA,OACA,IAAA,kBACA,IAAA,sBACA,IAAA,oBACA,IAAA,eACA,IAAA,yBACA,IAAA,wBACA,IAAA,qBACA,IAAA,eACA,IAAA,sBACA,IAAA,uBACA,IAAA,SACA,IAAA,oBACA,IAAA,uBACA,IAAA,mBACA,IAAA,wBACA,IAAA,oBACA,IAAA,kCACA,IAAA,gCACA,IAAA,wBACA,IAAA,kBACA,IAAA,cACA,IAAA,sBACA,IAAA,kBACA,IAAA,6BACA,IAAA,0BACA,IAAA,uBACA,IAAA,gBACA,IAAA,2BACA,IAAA,eACA,IAAA,kCpBmrGA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASU,EAAQT,EAAOD,GqBjuGlC,IAAA0W,EAAAhW,EAAA,6BAEAiW,EAAAjW,EAAA,mBAEAkW,EAAA,SAAAC,GAEA,SAAAD,EAAAE,EAAAC,EAAAC,GACA,IAAAC,EAuBA,OAvBA3Y,iBAAAiC,KAAAqW,IAGAK,EAAAhY,WAAAsB,KAAAqW,OAFAhK,IAAAkK,EAEA,CAAA,CAAA,GAIA,CAAAA,EAAAC,EAAAC,KAGAE,YAAA,cAGAD,EAAAE,SAAA,CAAA,EAEAF,EAAAG,WAAA,CAAA,EAEAH,EAAAI,MAAA,IAAAV,EAGAM,EAAAK,UAAA,EAGAL,EAAAM,OAAA,EAAAlY,uBAAA4X,EACA,CAAA,OAAArX,UAAAgX,EAAAC,GAAApY,cAAAmY,EAAA,CAAA,CAAApY,IAAA,YAAAZ,IAEA,WAEA,OAAA2C,KAAA6W,UACA,GAEA,CAAA5Y,IAAA,MAAAlB,MACA,SAAAka,EAAAC,GAGA,GAAAlX,KAAA4W,SAAA/Y,eAAAqZ,GAKA,OAFAlX,KAAA4W,SAAAM,GAAAC,MAAAF,EACAjX,KAAA6W,WAAAK,GAAAD,EACAjX,KAAA4W,SAAAM,GAAAC,MAGA,IAAAC,EAAApX,KAAA8W,MAAA7U,KAAAgV,EAAAC,GAiBA,OAhBAlX,KAAA4W,SAAAQ,EAAAC,MAAAD,EACApX,KAAA6W,WAAAK,GAAAD,EAGAjX,KAAA+W,UAAA,GAAA/W,KAAA8W,MAAAta,OAAAwD,KAAA+W,YAGAK,EAAApX,KAAA8W,MAAA9U,aAEAhC,KAAA6W,WAAAO,EAAAC,aACArX,KAAA4W,SAAAQ,EAAAC,OAIAD,EAAAE,SAAAC,SAAA,IAAAC,KAEAJ,EAAAD,KACA,GAEA,CAAAlZ,IAAA,OAAAlB,MACA,SAAAma,GAEA,QAAAlX,KAAA4W,SAAA/Y,eAAAqZ,IAKAlX,KAAA4W,SAAAM,GAAAC,KACA,GAEA,CAAAlZ,IAAA,QAAAlB,MACA,SAAAma,GAEA,IAAAlX,KAAA4W,SAAA/Y,eAAAqZ,GAEA,OAAA,EAIA,IAAAE,EAAApX,KAAA8W,MAAAW,OAAAzX,KAAA4W,SAAAM,IAMA,cAJAlX,KAAA6W,WAAAK,UACAlX,KAAA4W,SAAAM,GAGAlX,KAAA0X,IAAAN,EAAAD,MAAAC,EAAAC,KACA,GAEA,CAAApZ,IAAA,SAAAlB,MACA,SAAAma,GAEA,IAAAlX,KAAA4W,SAAA/Y,eAAAqZ,GAEA,OAAA,EAGA,IAAAE,EAAApX,KAAA4W,SAAAM,GASA,OANAE,EAAApX,KAAA8W,MAAAW,OAAAL,UAEApX,KAAA6W,WAAAO,EAAAC,aACArX,KAAA4W,SAAAQ,EAAAC,MAGAD,CACA,GAEA,CAAAnZ,IAAA,yBAAAlB,MACA,SAAA4a,EAAAC,GAEA,IAAAC,OAAA,IAAAD,EAAA,GAAAA,EAEA,GAAA5X,KAAAgX,OAAA,EAEA,OAAAW,EAAAE,GAOA,IAHA,IAAAC,GAAA,IAAAN,KACAO,EAAAlb,OAAA2F,KAAAxC,KAAA4W,UAEAxY,EAAA,EAAAA,EAAA2Z,EAAAvb,OAAA4B,IAGA0Z,EAAA9X,KAAA4W,SAAAmB,EAAA3Z,IAAAkZ,SAAAC,SAAAvX,KAAAgX,QAEAa,EAAA5V,KAAAjC,KAAAgY,OAAAD,EAAA3Z,KAGAuZ,EAAAE,EACA,GAEA,CAAA5Z,IAAA,qBAAAlB,MACA,SAAA4a,EAAAC,GAEA,IAAAC,OAAA,IAAAD,EAAA,GAAAA,EAGA,GAAA5X,KAAA+W,UAAA,EAEA,KAAA/W,KAAA8W,MAAAta,OAAAwD,KAAA+W,WAEAc,EAAA5V,KAAAjC,KAAA8W,MAAA9U,OAIA,OAAA2V,EAAAE,EACA,GAEA,CAAA5Z,IAAA,cAAAlB,MACA,SAAA4a,EAAAM,EAAAL,GAKA,IAHA,IAAAC,OAAA,IAAAD,EAAA,GAAAA,EAEAG,EAAAlb,OAAA2F,KAAAxC,KAAA4W,UACAxY,EAAA,EAAAA,EAAA2Z,EAAAvb,OAAA4B,IACA,CACA,IAAAgZ,EAAApX,KAAA4W,SAAAmB,EAAA3Z,IAEA6Z,EAAAb,EAAAD,MAAAC,EAAAC,KAAAD,IAEAS,EAAA5V,KAAAjC,KAAAgY,OAAAD,EAAA3Z,IAEA,CACAuZ,EAAAE,EACA,GAEA,CAAA5Z,IAAA,QAAAlB,MACA,SAAA4a,GACA,IAAAO,EAAAlY,KACA6X,EAAA,GAGA,GAAA7X,KAAA8W,MAAAta,OAAA,EAEA,OAAAmb,EAAAE,GAIA7X,KAAAmY,wBAAA,SAAAC,GAGAF,EAAAG,mBAAAV,EAAAE,EACA,GAAAA,EACA,GAEA,CAAA5Z,IAAA,UAAAlB,MACA,SAAAma,GAEA,QAAAlX,KAAA4W,SAAA/Y,eAAAqZ,IAGAlX,KAAA4W,SAAAM,EACA,IAAA,CAzMA,CAAAf,GA4MAzW,EAAAD,QAAA4W,CrBmvGA,EAAE,CAAC,kBAAkB,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAASlW,EAAQT,EAAOD,GsB58GrF,IAOA6Y,EAAApa,eAEA,SAAAoa,IACAva,iBAAAiC,KAAAsY,GACAtY,KAAAqX,MAAA,EACArX,KAAAmX,OAAA,EAGAnX,KAAAsX,SAAA,CAAA,EAEAtX,KAAAuY,UAAA,EACAvY,KAAAwY,WAAA,EAGAxY,KAAAyY,UAAA,CACA,IAGA/Y,EAAAD,QAAA6Y,CtBq9GA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASnY,EAAQT,EAAOD,GuB7+GlC,IAAAiZ,EAAAvY,EAAA,wBASAwY,EAAA,WAcA,OAAAza,eAZA,SAAAya,IACA5a,iBAAAiC,KAAA2Y,GAEA3Y,KAAA4Y,WAAA,EAGA5Y,KAAAxD,OAAA,EAEAwD,KAAA6Y,MAAA,EACA7Y,KAAA8Y,MAAA,CACA,GAEA,CAAA,CAAA7a,IAAA,iBAAAlB,MACA,SAAAgc,EAAA7B,GAGA,QAAA,IAAA6B,EACA,OAAA,EAEA/Y,KAAA4Y,aAGA,IAAAI,OAAA,IAAA9B,EAAAA,EAAA,QAAA7T,OAAArD,KAAA4Y,WAAA,KAEAxB,EAAA,IAAAsB,EAKA,OAHAtB,EAAAC,KAAA2B,EACA5B,EAAAD,MAAA4B,EAEA3B,CACA,GAEA,CAAAnZ,IAAA,SAAAlB,MACA,SAAAgc,EAAA7B,GAGA,IAAAE,EAAApX,KAAAiZ,eAAAF,EAAA7B,GACA,QAAAE,IAIApX,KAAAxD,SAGA,GAAAwD,KAAAxD,QAEAwD,KAAA6Y,KAAAzB,EACApX,KAAA8Y,KAAA1B,EACAA,IAGApX,KAAA8Y,KAAAN,UAAApB,EACAA,EAAAmB,SAAAvY,KAAA8Y,KACA9Y,KAAA8Y,KAAA1B,EAEAA,GACA,GAEA,CAAAnZ,IAAA,OAAAlB,MACA,SAAAgc,EAAA7B,GAEA,OAAAlX,KAAAkZ,OAAAH,EAAA7B,EACA,GAEA,CAAAjZ,IAAA,UAAAlB,MACA,SAAAgc,EAAA7B,GAGA,IAAAE,EAAApX,KAAAiZ,eAAAF,EAAA7B,GACA,QAAAE,IAIApX,KAAAxD,SAGA,GAAAwD,KAAAxD,QAEAwD,KAAA6Y,KAAAzB,EACApX,KAAA8Y,KAAA1B,EACAA,IAGApX,KAAA6Y,KAAAN,SAAAnB,EACAA,EAAAoB,UAAAxY,KAAA6Y,KACA7Y,KAAA6Y,KAAAzB,EACAA,GACA,GAEA,CAAAnZ,IAAA,SAAAlB,MACA,SAAAoc,GAEA,YAAA,IAAAA,MAGAA,EAAAV,WAGAzY,KAAAxD,SAGAwD,KAAAxD,OAAA,GAEAwD,KAAA6Y,MAAA,EACA7Y,KAAA8Y,MAAA,EACAK,GAIAA,EAAAZ,UAAAY,EAAAX,WAEAW,EAAAZ,SAAAC,UAAAW,EAAAX,UACAW,EAAAX,UAAAD,SAAAY,EAAAZ,SAEAY,EAAAX,WAAA,EACAW,EAAAZ,UAAA,EACAY,GAIAA,EAAAZ,UAEAY,EAAAZ,SAAAC,WAAA,EACAxY,KAAA8Y,KAAAK,EAAAZ,SACAY,EAAAZ,UAAA,EACAY,IAIAA,EAAAX,UAAAD,UAAA,EACAvY,KAAA6Y,KAAAM,EAAAX,UACAW,EAAAX,WAAA,EACAW,IACA,GAEA,CAAAlb,IAAA,MAAAlB,MACA,WAEA,OAAAiD,KAAAyX,OAAAzX,KAAA6Y,KACA,GAEA,CAAA5a,IAAA,OAAAlB,MACA,SAAAqc,EAAAzB,GACA,IAAA0B,EAAArZ,KACA,GAAAA,KAAAxD,OAAA,EACA,OAAAmb,IAEA,IAAAP,GAAA,EAwBA,OAtBA,SAAAkC,EAAAC,GAGA,GAAAA,EACA,OAAA5B,EAAA4B,GAGA,GAAAnC,EAGA,KAAAA,EAAAoB,UACA,OAAAb,IAGAP,EAAAA,EAAAoB,SAAA,MANApB,EAAAiC,EAAAR,KAUAO,EAAAhC,EAAAD,MAAAC,EAAAC,KAAAiC,EACA,CAGAA,EACA,GAEA,CAAArb,IAAA,OAAAlB,MACA,SAAAyc,GAEA,IAAAA,EACA,OAAA,EACA,GAAAxZ,KAAAxD,OAAA,EACA,OAAA,EACA,GAAAgd,GAAAxZ,KAAAxD,OACA,OAAA,EAGA,IADA,IAAA4a,EAAApX,KAAA6Y,KACAza,EAAA,EAAAA,EAAAob,EAAApb,IAEAgZ,EAAAA,EAAAoB,UAGA,OAAApB,CACA,IAAA,CAjMA,GAoMA1X,EAAAD,QAAAkZ,CvBu/GA,EAAE,CAAC,uBAAuB,KAAK,GAAG,CAAC,SAASxY,EAAQT,EAAOD,GwB1sH3D,IAAAga,EAAAtZ,EAAA,iBAEAuZ,EAAAvZ,EAAA,MAEAwZ,EAAAD,EAAAD,EAAA,6BAEA/Z,EAAAD,QAAA,SAAAxD,EAAA2d,GACA,IAAAC,EAAAJ,EAAAxd,IAAA2d,GACA,MAAA,mBAAAC,GAAAF,EAAA1d,EAAA,gBAAA,EACAyd,EAAAG,GAEAA,CACA,CxB+sHA,EAAE,CAAC,KAAK,GAAG,gBAAgB,KAAK,GAAG,CAAC,SAAS1Z,EAAQT,EAAOD,GyB3tH5D,IAAAnC,EAAA6C,EAAA,iBACAsZ,EAAAtZ,EAAA,iBACA2Z,EAAA3Z,EAAA,uBAEA4Z,EAAA5Z,EAAA,kBACA6Z,EAAAP,EAAA,8BACAQ,EAAAR,EAAA,6BACAS,EAAAT,EAAA,mBAAA,IAAAnc,EAAAxB,KAAAme,EAAAD,GAEAG,EAAAha,EAAA,sBACAia,EAAAX,EAAA,cAEA/Z,EAAAD,QAAA,SAAA4a,GACA,GAAA,mBAAAA,EACA,MAAA,IAAAN,EAAA,0BAEA,IAAArX,EAAAwX,EAAA5c,EAAA2c,EAAAvc,WACA,OAAAoc,EACApX,EACA,EAAA0X,EAAA,EAAAC,EAAA7d,QAAAkB,UAAAlB,OAAA,KACA,EAEA,EAEA,IAAA8d,EAAA,WACA,OAAAJ,EAAA5c,EAAA0c,EAAAtc,UACA,EAEAyc,EACAA,EAAAza,EAAAD,QAAA,QAAA,CAAA1C,MAAAud,IAEA5a,EAAAD,QAAA9B,MAAA2c,CzBiuHA,EAAE,CAAC,qBAAqB,GAAG,iBAAiB,GAAG,gBAAgB,GAAG,gBAAgB,GAAG,sBAAsB,MAAM,GAAG,CAAC,SAASna,EAAQT,EAAOD,G0BpvH7IA,EAAA4K,MAgCA,SAAA+E,EAAAmL,GACA,GAAA,iBAAAnL,EACA,MAAA,IAAA3T,UAAA,iCAGA,IAAA4F,EAAA,CAAA,EAEAmZ,GADAD,GAAA,CAAA,GACAE,QAAAA,EAEA3Z,EAAA,EACA,KAAAA,EAAAsO,EAAA5S,QAAA,CACA,IAAAke,EAAAtL,EAAAvK,QAAA,IAAA/D,GAGA,IAAA,IAAA4Z,EACA,MAGA,IAAAC,EAAAvL,EAAAvK,QAAA,IAAA/D,GAEA,IAAA,IAAA6Z,EACAA,EAAAvL,EAAA5S,YACA,GAAAme,EAAAD,EAAA,CAEA5Z,EAAAsO,EAAAlB,YAAA,IAAAwM,EAAA,GAAA,EACA,QACA,CAEA,IAAAzc,EAAAmR,EAAArT,MAAA+E,EAAA4Z,GAAA3I,OAGA,QAAA1F,IAAAhL,EAAApD,GAAA,CACA,IAAA8P,EAAAqB,EAAArT,MAAA2e,EAAA,EAAAC,GAAA5I,OAGA,KAAAhE,EAAA7J,WAAA,KACA6J,EAAAA,EAAAhS,MAAA,GAAA,IAGAsF,EAAApD,GAAA2c,EAAA7M,EAAAyM,EACA,CAEA1Z,EAAA6Z,EAAA,CACA,CAEA,OAAAtZ,CACA,EA7EA5B,EAAAob,UA+FA,SAAA5e,EAAA8R,EAAAwM,GACA,IAAAO,EAAAP,GAAA,CAAA,EACAQ,EAAAD,EAAAE,QAAAA,EAEA,GAAA,mBAAAD,EACA,MAAA,IAAAtf,UAAA,4BAGA,IAAAwf,EAAA7e,KAAAH,GACA,MAAA,IAAAR,UAAA,4BAGA,IAAAsB,EAAAge,EAAAhN,GAEA,GAAAhR,IAAAke,EAAA7e,KAAAW,GACA,MAAA,IAAAtB,UAAA,2BAGA,IAAA2T,EAAAnT,EAAA,IAAAc,EAEA,GAAA,MAAA+d,EAAA9D,OAAA,CACA,IAAAA,EAAA8D,EAAA9D,OAAA,EAEA,GAAAkE,MAAAlE,KAAA1E,SAAA0E,GACA,MAAA,IAAAvb,UAAA,4BAGA2T,GAAA,aAAAxM,KAAAuY,MAAAnE,EACA,CAEA,GAAA8D,EAAAM,OAAA,CACA,IAAAH,EAAA7e,KAAA0e,EAAAM,QACA,MAAA,IAAA3f,UAAA,4BAGA2T,GAAA,YAAA0L,EAAAM,MACA,CAEA,GAAAN,EAAAO,KAAA,CACA,IAAAJ,EAAA7e,KAAA0e,EAAAO,MACA,MAAA,IAAA5f,UAAA,0BAGA2T,GAAA,UAAA0L,EAAAO,IACA,CAEA,GAAAP,EAAAQ,QAAA,CACA,IAAAA,EAAAR,EAAAQ,QAEA,IA+FA,SAAAvN,GACA,MAAA,kBAAAwN,EAAAzf,KAAAiS,IACAA,aAAAyJ,IACA,CAlGAgE,CAAAF,IAAAJ,MAAAI,EAAArc,WACA,MAAA,IAAAxD,UAAA,6BAGA2T,GAAA,aAAAkM,EAAAG,aACA,CAEAX,EAAAY,WACAtM,GAAA,cAGA0L,EAAAa,SACAvM,GAAA,YAGA0L,EAAAc,cACAxM,GAAA,iBAGA,GAAA0L,EAAAe,SAAA,CAKA,OAJA,iBAAAf,EAAAe,SACAf,EAAAe,SAAAzO,cACA0N,EAAAe,UAGA,IAAA,MACAzM,GAAA,iBACA,MACA,IAAA,SACAA,GAAA,oBACA,MACA,IAAA,OACAA,GAAA,kBACA,MACA,QACA,MAAA,IAAA3T,UAAA,8BAEA,CAEA,GAAAqf,EAAAgB,SAAA,CAIA,OAHA,iBAAAhB,EAAAgB,SACAhB,EAAAgB,SAAA1O,cAAA0N,EAAAgB,UAGA,KAAA,EACA1M,GAAA,oBACA,MACA,IAAA,MACAA,GAAA,iBACA,MACA,IAAA,SACAA,GAAA,oBACA,MACA,IAAA,OACAA,GAAA,kBACA,MACA,QACA,MAAA,IAAA3T,UAAA,8BAEA,CAEA,OAAA2T,CACA,EAvMA,IAAAmM,EAAA1e,OAAAsB,UAAAtC,SAUAof,EAAA,wCAsMA,SAAAR,EAAArL,GACA,OAAA,IAAAA,EAAAvK,QAAA,KACAkX,mBAAA3M,GACAA,CACA,CASA,SAAA4L,EAAAjN,GACA,OAAAiO,mBAAAjO,EACA,CAsBA,SAAA6M,EAAAxL,EAAAqL,GACA,IACA,OAAAA,EAAArL,EACA,CAAA,MAAA3S,GACA,OAAA2S,CACA,CACA,C1BqwHA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASjP,EAAQT,EAAOD,G2BthIlC,IAAA7D,EAAAa,EAAAb,EAAAoE,KAAAvD,EAAA,WAAA,IAAAA,EAAA,IAAAC,EAAA,KAAAtB,EAAA,cAAAgD,EAAA,SAAAqI,EAAA,SAAArG,EAAA,OAAA1E,EAAA,MAAAkC,EAAA,OAAAsC,EAAA,QAAAV,EAAA,UAAAyc,EAAA,OAAAC,EAAA,OAAAjV,EAAA,eAAAkV,EAAA,6FAAAtV,EAAA,sFAAAuV,EAAA,CAAAngB,KAAA,KAAAogB,SAAA,2DAAAtG,MAAA,KAAAuG,OAAA,wFAAAvG,MAAA,KAAAwG,QAAA,SAAA3gB,GAAA,IAAAa,EAAA,CAAA,KAAA,KAAA,KAAA,MAAAC,EAAAd,EAAA,IAAA,MAAA,IAAAA,GAAAa,GAAAC,EAAA,IAAA,KAAAD,EAAAC,IAAAD,EAAA,IAAA,GAAA,GAAAoR,EAAA,SAAAjS,EAAAa,EAAAC,GAAA,IAAAtB,EAAAoD,OAAA5C,GAAA,OAAAR,GAAAA,EAAAoB,QAAAC,EAAAb,EAAA,GAAAM,MAAAO,EAAA,EAAArB,EAAAoB,QAAAmI,KAAAjI,GAAAd,CAAA,EAAA4gB,EAAA,CAAA/V,EAAAoH,EAAA4O,EAAA,SAAA7gB,GAAA,IAAAa,GAAAb,EAAA8gB,YAAAhgB,EAAAkG,KAAA+D,IAAAlK,GAAArB,EAAAwH,KAAAuY,MAAAze,EAAA,IAAA0B,EAAA1B,EAAA,GAAA,OAAAD,GAAA,EAAA,IAAA,KAAAoR,EAAAzS,EAAA,EAAA,KAAA,IAAAyS,EAAAzP,EAAA,EAAA,IAAA,EAAAyP,EAAA,SAAAjS,EAAAa,EAAAC,GAAA,GAAAD,EAAAkgB,OAAAjgB,EAAAigB,OAAA,OAAA/gB,EAAAc,EAAAD,GAAA,IAAArB,EAAA,IAAAsB,EAAAkgB,OAAAngB,EAAAmgB,SAAAlgB,EAAAmgB,QAAApgB,EAAAogB,SAAAze,EAAA3B,EAAAqgB,QAAA7T,IAAA7N,EAAA8E,GAAAuG,EAAA/J,EAAA0B,EAAA,EAAAgC,EAAA3D,EAAAqgB,QAAA7T,IAAA7N,GAAAqL,GAAA,EAAA,GAAAvG,GAAA,UAAA9E,GAAAsB,EAAA0B,IAAAqI,EAAArI,EAAAgC,EAAAA,EAAAhC,KAAA,EAAA,EAAA1C,EAAA,SAAAE,GAAA,OAAAA,EAAA,EAAAgH,KAAAma,KAAAnhB,IAAA,EAAAgH,KAAAuY,MAAAvf,EAAA,EAAA2B,EAAA,SAAA3B,GAAA,MAAA,CAAAwgB,EAAAlc,EAAA2G,EAAAoV,EAAAe,EAAApf,EAAAse,EAAAxgB,EAAAuhB,EAAAf,EAAAD,EAAA7b,EAAAyN,EAAApH,EAAAA,EAAArI,EAAA8e,GAAA9hB,EAAA+hB,EAAA3d,GAAA5D,IAAA4C,OAAA5C,GAAA,IAAAwR,cAAAlD,QAAA,KAAA,GAAA,EAAA9J,EAAA,SAAAxE,GAAA,YAAA,IAAAA,CAAA,GAAAwhB,EAAA,KAAAH,EAAA,CAAA,EAAAA,EAAAG,GAAAhB,EAAA,IAAA7e,EAAA,iBAAA8f,EAAA,SAAAzhB,GAAA,OAAAA,aAAA0hB,MAAA1hB,IAAAA,EAAA2B,GAAA,EAAAyf,EAAA,SAAAphB,EAAAa,EAAAC,EAAAtB,GAAA,IAAAgD,EAAA,IAAA3B,EAAA,OAAA2gB,EAAA,GAAA,iBAAA3gB,EAAA,CAAA,IAAAgK,EAAAhK,EAAA2Q,cAAA6P,EAAAxW,KAAArI,EAAAqI,GAAA/J,IAAAugB,EAAAxW,GAAA/J,EAAA0B,EAAAqI,GAAA,IAAArG,EAAA3D,EAAAsZ,MAAA,KAAA,IAAA3X,GAAAgC,EAAA5D,OAAA,EAAA,OAAAZ,EAAAwE,EAAA,GAAA,KAAA,CAAA,IAAA1E,EAAAe,EAAAR,KAAAghB,EAAAvhB,GAAAe,EAAA2B,EAAA1C,CAAA,CAAA,OAAAN,GAAAgD,IAAAgf,EAAAhf,GAAAA,IAAAhD,GAAAgiB,CAAA,EAAAG,EAAA,SAAA3hB,EAAAa,GAAA,GAAA4gB,EAAAzhB,GAAA,OAAAA,EAAAkhB,QAAA,IAAApgB,EAAA,UAAA4B,QAAA7B,GAAAA,EAAA,CAAA,EAAA,OAAAC,EAAAigB,KAAA/gB,EAAAc,EAAAoF,KAAApE,UAAA,IAAA4f,EAAA5gB,EAAA,EAAAyK,EAAAqV,EAAArV,EAAAF,EAAA+V,EAAA7V,EAAA/I,EAAAif,EAAAlW,EAAA6V,EAAA,SAAAphB,EAAAa,GAAA,OAAA8gB,EAAA3hB,EAAA,CAAA4hB,OAAA/gB,EAAAghB,GAAAC,IAAAjhB,EAAAkhB,GAAA5X,EAAAtJ,EAAAmhB,GAAAC,QAAAphB,EAAAohB,SAAA,EAAA,IAAAP,EAAA,WAAA,SAAAlB,EAAAxgB,GAAAoE,KAAAyd,GAAAT,EAAAphB,EAAA4hB,OAAA,MAAA,GAAAxd,KAAAqK,MAAAzO,GAAAoE,KAAA4d,GAAA5d,KAAA4d,IAAAhiB,EAAAmK,GAAA,CAAA,EAAA/F,KAAAzC,IAAA,CAAA,CAAA,IAAAsQ,EAAAuO,EAAAje,UAAA,OAAA0P,EAAAxD,MAAA,SAAAzO,GAAAoE,KAAA8d,GAAA,SAAAliB,GAAA,IAAAa,EAAAb,EAAA+gB,KAAAjgB,EAAAd,EAAA8hB,IAAA,GAAA,OAAAjhB,EAAA,OAAA,IAAA+a,KAAAuG,KAAA,GAAA5W,EAAA/G,EAAA3D,GAAA,OAAA,IAAA+a,KAAA,GAAA/a,aAAA+a,KAAA,OAAA,IAAAA,KAAA/a,GAAA,GAAA,iBAAAA,IAAA,MAAAL,KAAAK,GAAA,CAAA,IAAArB,EAAAqB,EAAAuhB,MAAA7B,GAAA,GAAA/gB,EAAA,CAAA,IAAAgD,EAAAhD,EAAA,GAAA,GAAA,EAAAqL,GAAArL,EAAA,IAAA,KAAAgP,UAAA,EAAA,GAAA,OAAA1N,EAAA,IAAA8a,KAAAA,KAAAyG,IAAA7iB,EAAA,GAAAgD,EAAAhD,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAqL,IAAA,IAAA+Q,KAAApc,EAAA,GAAAgD,EAAAhD,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAqL,EAAA,CAAA,CAAA,OAAA,IAAA+Q,KAAA/a,EAAA,CAAA,CAAAb,GAAAoE,KAAAke,MAAA,EAAArQ,EAAAqQ,KAAA,WAAA,IAAAtiB,EAAAoE,KAAA8d,GAAA9d,KAAAme,GAAAviB,EAAAwiB,cAAApe,KAAAqe,GAAAziB,EAAA0iB,WAAAte,KAAAue,GAAA3iB,EAAA4iB,UAAAxe,KAAAye,GAAA7iB,EAAA8iB,SAAA1e,KAAA2e,GAAA/iB,EAAAgjB,WAAA5e,KAAA6e,GAAAjjB,EAAAkjB,aAAA9e,KAAA+e,GAAAnjB,EAAAojB,aAAAhf,KAAAif,IAAArjB,EAAAsjB,iBAAA,EAAArR,EAAAsR,OAAA,WAAA,OAAAhY,CAAA,EAAA0G,EAAAuR,QAAA,WAAA,QAAApf,KAAA8d,GAAAjiB,aAAAoL,EAAA,EAAA4G,EAAAwR,OAAA,SAAAzjB,EAAAa,GAAA,IAAAC,EAAA6gB,EAAA3hB,GAAA,OAAAoE,KAAAsf,QAAA7iB,IAAAC,GAAAA,GAAAsD,KAAAuf,MAAA9iB,EAAA,EAAAoR,EAAA2R,QAAA,SAAA5jB,EAAAa,GAAA,OAAA8gB,EAAA3hB,GAAAoE,KAAAsf,QAAA7iB,EAAA,EAAAoR,EAAA4R,SAAA,SAAA7jB,EAAAa,GAAA,OAAAuD,KAAAuf,MAAA9iB,GAAA8gB,EAAA3hB,EAAA,EAAAiS,EAAA6R,GAAA,SAAA9jB,EAAAa,EAAAC,GAAA,OAAAyK,EAAA/G,EAAAxE,GAAAoE,KAAAvD,GAAAuD,KAAA2V,IAAAjZ,EAAAd,EAAA,EAAAiS,EAAA8R,KAAA,WAAA,OAAA/c,KAAAuY,MAAAnb,KAAAf,UAAA,IAAA,EAAA4O,EAAA5O,QAAA,WAAA,OAAAe,KAAA8d,GAAA8B,SAAA,EAAA/R,EAAAyR,QAAA,SAAA1jB,EAAAa,GAAA,IAAAC,EAAAsD,KAAA5E,IAAA+L,EAAA/G,EAAA3D,IAAAA,EAAA+C,EAAA2H,EAAA5J,EAAA3B,GAAAqL,EAAA,SAAArL,EAAAa,GAAA,IAAA2B,EAAA+I,EAAA6V,EAAAtgB,EAAAihB,GAAAnG,KAAAyG,IAAAvhB,EAAAyhB,GAAA1hB,EAAAb,GAAA,IAAA4b,KAAA9a,EAAAyhB,GAAA1hB,EAAAb,GAAAc,GAAA,OAAAtB,EAAAgD,EAAAA,EAAAmhB,MAAA7jB,EAAA,EAAAygB,EAAA,SAAAvgB,EAAAa,GAAA,OAAA0K,EAAA6V,EAAAtgB,EAAAmjB,SAAAjkB,GAAA+B,MAAAjB,EAAAmjB,OAAA,MAAAzkB,EAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,GAAA,GAAA,MAAAW,MAAAU,IAAAC,EAAA,EAAAmK,EAAA7G,KAAAye,GAAArC,EAAApc,KAAAqe,GAAAxQ,EAAA7N,KAAAue,GAAA/B,EAAA,OAAAxc,KAAA2d,GAAA,MAAA,IAAA,OAAAne,GAAA,KAAAyc,EAAA,OAAA7gB,EAAA6L,EAAA,EAAA,GAAAA,EAAA,GAAA,IAAA,KAAA/G,EAAA,OAAA9E,EAAA6L,EAAA,EAAAmV,GAAAnV,EAAA,EAAAmV,EAAA,GAAA,KAAAxe,EAAA,IAAAwf,EAAApd,KAAA8f,UAAAC,WAAA,EAAA9C,GAAApW,EAAAuW,EAAAvW,EAAA,EAAAA,GAAAuW,EAAA,OAAAnW,EAAA7L,EAAAyS,EAAAoP,EAAApP,GAAA,EAAAoP,GAAAb,GAAA,KAAA1gB,EAAA,KAAAwgB,EAAA,OAAAC,EAAAK,EAAA,QAAA,GAAA,KAAApc,EAAA,OAAA+b,EAAAK,EAAA,UAAA,GAAA,KAAA/V,EAAA,OAAA0V,EAAAK,EAAA,UAAA,GAAA,KAAApe,EAAA,OAAA+d,EAAAK,EAAA,eAAA,GAAA,QAAA,OAAAxc,KAAA8c,QAAA,EAAAjP,EAAA0R,MAAA,SAAA3jB,GAAA,OAAAoE,KAAAsf,QAAA1jB,GAAA,EAAA,EAAAiS,EAAAmS,KAAA,SAAApkB,EAAAa,GAAA,IAAAC,EAAAkB,EAAAuJ,EAAA5J,EAAA3B,GAAA4D,EAAA,OAAAQ,KAAA2d,GAAA,MAAA,IAAA1W,GAAAvK,EAAA,CAAA,EAAAA,EAAAhB,GAAA8D,EAAA,OAAA9C,EAAAwf,GAAA1c,EAAA,OAAA9C,EAAAwD,GAAAV,EAAA,QAAA9C,EAAAuf,GAAAzc,EAAA,WAAA9C,EAAA0D,GAAAZ,EAAA,QAAA9C,EAAA+J,GAAAjH,EAAA,UAAA9C,EAAA0B,GAAAoB,EAAA,UAAA9C,EAAAtB,GAAAoE,EAAA,eAAA9C,GAAAkB,GAAAue,EAAAve,IAAAlC,EAAAsE,KAAAue,IAAA9hB,EAAAuD,KAAAye,IAAAhiB,EAAA,GAAAmB,IAAAsC,GAAAtC,IAAAqe,EAAA,CAAA,IAAApV,EAAA7G,KAAA8c,QAAAnH,IAAAuG,EAAA,GAAArV,EAAAiX,GAAA7W,GAAAkV,GAAAtV,EAAAqX,OAAAle,KAAA8d,GAAAjX,EAAA8O,IAAAuG,EAAAtZ,KAAAkN,IAAA9P,KAAAue,GAAA1X,EAAAoZ,gBAAAnC,EAAA,MAAA7W,GAAAjH,KAAA8d,GAAA7W,GAAAkV,GAAA,OAAAnc,KAAAke,OAAAle,IAAA,EAAA6N,EAAA8H,IAAA,SAAA/Z,EAAAa,GAAA,OAAAuD,KAAA8c,QAAAkD,KAAApkB,EAAAa,EAAA,EAAAoR,EAAAxQ,IAAA,SAAAzB,GAAA,OAAAoE,KAAAmH,EAAA5J,EAAA3B,KAAA,EAAAiS,EAAA5E,IAAA,SAAA7N,EAAAoE,GAAA,IAAA0c,EAAAjV,EAAAjH,KAAA5E,EAAAqD,OAAArD,GAAA,IAAA+gB,EAAAhV,EAAA5J,EAAAiC,GAAAqH,EAAA,SAAAjL,GAAA,IAAAa,EAAA8gB,EAAAtW,GAAA,OAAAE,EAAA6V,EAAAvgB,EAAAkgB,KAAAlgB,EAAAkgB,OAAA/Z,KAAAkD,MAAAlK,EAAAR,IAAA6L,EAAA,EAAA,GAAAkV,IAAAjc,EAAA,OAAAF,KAAA2V,IAAAzV,EAAAF,KAAAqe,GAAAjjB,GAAA,GAAA+gB,IAAAF,EAAA,OAAAjc,KAAA2V,IAAAsG,EAAAjc,KAAAme,GAAA/iB,GAAA,GAAA+gB,IAAAzgB,EAAA,OAAAmL,EAAA,GAAA,GAAAsV,IAAAve,EAAA,OAAAiJ,EAAA,GAAA,IAAAuV,GAAAF,EAAA,CAAA,EAAAA,EAAAzV,GAAAhK,EAAAyf,EAAA9b,GAAA1D,EAAAwf,EAAA9d,GAAA,IAAA8d,GAAAC,IAAA,EAAAtO,EAAA7N,KAAA8d,GAAA8B,UAAAxkB,EAAAghB,EAAA,OAAAjV,EAAA6V,EAAAnP,EAAA7N,KAAA,EAAA6N,EAAAqS,SAAA,SAAAtkB,EAAAa,GAAA,OAAAuD,KAAAiJ,KAAA,EAAArN,EAAAa,EAAA,EAAAoR,EAAAsS,OAAA,SAAAvkB,GAAA,IAAAa,EAAAuD,KAAAtD,EAAAsD,KAAA8f,UAAA,IAAA9f,KAAAof,UAAA,OAAA1iB,EAAA0jB,aAAAnZ,EAAA,IAAA7L,EAAAQ,GAAA,uBAAAwC,EAAA+I,EAAAsV,EAAAzc,MAAAyG,EAAAzG,KAAA2e,GAAAve,EAAAJ,KAAA6e,GAAAnjB,EAAAsE,KAAAqe,GAAAzgB,EAAAlB,EAAA2f,SAAAnc,EAAAxD,EAAA4f,OAAA9c,EAAA9C,EAAA2jB,SAAApE,EAAA,SAAArgB,EAAAc,EAAA0B,EAAAqI,GAAA,OAAA7K,IAAAA,EAAAc,IAAAd,EAAAa,EAAArB,KAAAgD,EAAA1B,GAAAX,MAAA,EAAA0K,EAAA,EAAAyV,EAAA,SAAAtgB,GAAA,OAAAuL,EAAAV,EAAAA,EAAA,IAAA,GAAA7K,EAAA,IAAA,EAAAugB,EAAA3c,GAAA,SAAA5D,EAAAa,EAAAC,GAAA,IAAAtB,EAAAQ,EAAA,GAAA,KAAA,KAAA,OAAAc,EAAAtB,EAAAgS,cAAAhS,CAAA,EAAA,OAAAA,EAAA8O,QAAArD,GAAA,SAAAjL,EAAAR,GAAA,OAAAA,GAAA,SAAAQ,GAAA,OAAAA,GAAA,IAAA,KAAA,OAAA4C,OAAA/B,EAAA0hB,IAAApiB,OAAA,GAAA,IAAA,OAAA,OAAAoL,EAAAV,EAAAhK,EAAA0hB,GAAA,EAAA,KAAA,IAAA,IAAA,OAAAziB,EAAA,EAAA,IAAA,KAAA,OAAAyL,EAAAV,EAAA/K,EAAA,EAAA,EAAA,KAAA,IAAA,MAAA,OAAAugB,EAAAvf,EAAA4jB,YAAA5kB,EAAAwE,EAAA,GAAA,IAAA,OAAA,OAAA+b,EAAA/b,EAAAxE,GAAA,IAAA,IAAA,OAAAe,EAAA8hB,GAAA,IAAA,KAAA,OAAApX,EAAAV,EAAAhK,EAAA8hB,GAAA,EAAA,KAAA,IAAA,IAAA,OAAA/f,OAAA/B,EAAAgiB,IAAA,IAAA,KAAA,OAAAxC,EAAAvf,EAAA6jB,YAAA9jB,EAAAgiB,GAAA7gB,EAAA,GAAA,IAAA,MAAA,OAAAqe,EAAAvf,EAAA8jB,cAAA/jB,EAAAgiB,GAAA7gB,EAAA,GAAA,IAAA,OAAA,OAAAA,EAAAnB,EAAAgiB,IAAA,IAAA,IAAA,OAAAjgB,OAAAiI,GAAA,IAAA,KAAA,OAAAU,EAAAV,EAAAA,EAAA,EAAA,KAAA,IAAA,IAAA,OAAAyV,EAAA,GAAA,IAAA,KAAA,OAAAA,EAAA,GAAA,IAAA,IAAA,OAAAC,EAAA1V,EAAArG,GAAA,GAAA,IAAA,IAAA,OAAA+b,EAAA1V,EAAArG,GAAA,GAAA,IAAA,IAAA,OAAA5B,OAAA4B,GAAA,IAAA,KAAA,OAAA+G,EAAAV,EAAArG,EAAA,EAAA,KAAA,IAAA,IAAA,OAAA5B,OAAA/B,EAAAsiB,IAAA,IAAA,KAAA,OAAA5X,EAAAV,EAAAhK,EAAAsiB,GAAA,EAAA,KAAA,IAAA,MAAA,OAAA5X,EAAAV,EAAAhK,EAAAwiB,IAAA,EAAA,KAAA,IAAA,IAAA,OAAA7gB,EAAA,OAAA,IAAA,CAAA,CAAAxC,IAAAwC,EAAA8L,QAAA,IAAA,GAAA,GAAA,EAAA2D,EAAA6O,UAAA,WAAA,OAAA,IAAA9Z,KAAAkD,MAAA9F,KAAA8d,GAAA2C,oBAAA,GAAA,EAAA5S,EAAA6S,KAAA,SAAAtlB,EAAA8gB,EAAAjV,GAAA,IAAAkV,EAAAtV,EAAA7G,KAAAoc,EAAAjV,EAAA5J,EAAA2e,GAAArO,EAAA0P,EAAAniB,GAAAohB,GAAA3O,EAAA6O,YAAA1c,KAAA0c,aAAAjgB,EAAA2gB,EAAApd,KAAA6N,EAAAoP,EAAA,WAAA,OAAA9V,EAAA0G,EAAAhH,EAAAgH,EAAA,EAAA,OAAAuO,GAAA,KAAAH,EAAAE,EAAAc,IAAA,GAAA,MAAA,KAAA/c,EAAAic,EAAAc,IAAA,MAAA,KAAAzd,EAAA2c,EAAAc,IAAA,EAAA,MAAA,KAAArf,EAAAue,GAAAiB,EAAAZ,GAAA,OAAA,MAAA,KAAA9gB,EAAAygB,GAAAiB,EAAAZ,GAAA,MAAA,MAAA,KAAApc,EAAA+b,EAAAiB,EAAA1gB,EAAA,MAAA,KAAA+J,EAAA0V,EAAAiB,EAAA3gB,EAAA,MAAA,KAAA2B,EAAA+d,EAAAiB,EAAA,IAAA,MAAA,QAAAjB,EAAAiB,EAAA,OAAAnW,EAAAkV,EAAAhV,EAAAzL,EAAAygB,EAAA,EAAAtO,EAAAoS,YAAA,WAAA,OAAAjgB,KAAAuf,MAAArf,GAAAqe,EAAA,EAAA1Q,EAAAiS,QAAA,WAAA,OAAA7C,EAAAjd,KAAAyd,GAAA,EAAA5P,EAAA2P,OAAA,SAAA5hB,EAAAa,GAAA,IAAAb,EAAA,OAAAoE,KAAAyd,GAAA,IAAA/gB,EAAAsD,KAAA8c,QAAA1hB,EAAA4hB,EAAAphB,EAAAa,GAAA,GAAA,OAAArB,IAAAsB,EAAA+gB,GAAAriB,GAAAsB,CAAA,EAAAmR,EAAAiP,MAAA,WAAA,OAAA3V,EAAA6V,EAAAhd,KAAA8d,GAAA9d,KAAA,EAAA6N,EAAAgS,OAAA,WAAA,OAAA,IAAArI,KAAAxX,KAAAf,UAAA,EAAA4O,EAAAnE,OAAA,WAAA,OAAA1J,KAAAof,UAAApf,KAAA2gB,cAAA,IAAA,EAAA9S,EAAA8S,YAAA,WAAA,OAAA3gB,KAAA8d,GAAA6C,aAAA,EAAA9S,EAAAhS,SAAA,WAAA,OAAAmE,KAAA8d,GAAArC,aAAA,EAAAW,CAAA,CAAA,GAAA3Z,EAAA6a,EAAAnf,UAAA,OAAAof,EAAApf,UAAAsE,EAAA,CAAA,CAAA,MAAArH,GAAA,CAAA,KAAAgD,GAAA,CAAA,KAAAqI,GAAA,CAAA,KAAArG,GAAA,CAAA,KAAA1E,GAAA,CAAA,KAAAwE,GAAA,CAAA,KAAA+b,GAAA,CAAA,KAAAC,IAAA0E,SAAA,SAAAhlB,GAAA6G,EAAA7G,EAAA,IAAA,SAAAa,GAAA,OAAAuD,KAAA0f,GAAAjjB,EAAAb,EAAA,GAAAA,EAAA,GAAA,CAAA,IAAA2hB,EAAAsD,OAAA,SAAAjlB,EAAAa,GAAA,OAAAb,EAAAklB,KAAAllB,EAAAa,EAAA6gB,EAAAC,GAAA3hB,EAAAklB,IAAA,GAAAvD,CAAA,EAAAA,EAAAC,OAAAR,EAAAO,EAAAwD,QAAA1D,EAAAE,EAAAoC,KAAA,SAAA/jB,GAAA,OAAA2hB,EAAA,IAAA3hB,EAAA,EAAA2hB,EAAAyD,GAAA/D,EAAAG,GAAAG,EAAA0D,GAAAhE,EAAAM,EAAAhgB,EAAA,CAAA,EAAAggB,CAAA,EAAA,UAAAjf,QAAAmB,SAAA,IAAAC,EAAAA,EAAAD,QAAAhD,KAAAb,EAAA,oBAAAslB,WAAAA,WAAAtlB,GAAAmE,MAAAohB,MAAA1kB,G3BwhIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS0D,EAAQT,EAAOD,G4BxhIlC,IAAAhD,EAAAb,EAAAa,EAAAuD,KAAApE,EAAA,WAAA,OAAA,SAAAa,EAAAb,GAAA,IAAAR,EAAAQ,EAAAuC,UAAAzB,EAAAtB,EAAA+kB,OAAA/kB,EAAA+kB,OAAA,SAAA1jB,GAAA,IAAAb,EAAAoE,KAAA5E,EAAA4E,KAAA8f,UAAA,IAAA9f,KAAAof,UAAA,OAAA1iB,EAAAY,KAAA0C,KAAAtD,CAAAD,GAAA,IAAAgK,EAAAzG,KAAAmf,SAAAzjB,GAAAe,GAAA,wBAAAyN,QAAA,+DAAA,SAAAzN,GAAA,OAAAA,GAAA,IAAA,IAAA,OAAAmG,KAAAma,MAAAnhB,EAAAyiB,GAAA,GAAA,GAAA,IAAA,KAAA,OAAAjjB,EAAAmhB,QAAA3gB,EAAA2iB,IAAA,IAAA,OAAA,OAAA3iB,EAAAwlB,WAAA,IAAA,OAAA,OAAAxlB,EAAAylB,cAAA,IAAA,KAAA,OAAAjmB,EAAAmhB,QAAA3gB,EAAA0lB,OAAA,KAAA,IAAA,IAAA,IAAA,KAAA,OAAA7a,EAAAA,EAAA7K,EAAA0lB,OAAA,MAAA7kB,EAAA,EAAA,EAAA,KAAA,IAAA,IAAA,IAAA,KAAA,OAAAgK,EAAAA,EAAA7K,EAAA2lB,UAAA,MAAA9kB,EAAA,EAAA,EAAA,KAAA,IAAA,IAAA,IAAA,KAAA,OAAAgK,EAAAA,EAAAjI,OAAA,IAAA5C,EAAA+iB,GAAA,GAAA/iB,EAAA+iB,IAAA,MAAAliB,EAAA,EAAA,EAAA,KAAA,IAAA,IAAA,OAAAmG,KAAAuY,MAAAvf,EAAAkiB,GAAA8B,UAAA,KAAA,IAAA,IAAA,OAAAhkB,EAAAkiB,GAAA8B,UAAA,IAAA,IAAA,MAAA,IAAAhkB,EAAA4lB,aAAA,IAAA,IAAA,MAAA,MAAA,IAAA5lB,EAAA4lB,WAAA,QAAA,IAAA,QAAA,OAAA/kB,EAAA,IAAA,OAAAC,EAAAY,KAAA0C,KAAAtD,CAAAhB,EAAA,CAAA,CAAA,EAAA,UAAA4C,QAAAmB,SAAA,IAAAC,EAAAA,EAAAD,QAAA7D,KAAAa,EAAA,oBAAAykB,WAAAA,WAAAzkB,GAAAsD,MAAA0hB,4BAAA7lB,G5B0hIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASuE,EAAQT,EAAOD,G6B1hIlC,IAAAhD,EAAAb,EAAAa,EAAAuD,KAAApE,EAAA,WAAA,IAAAa,EAAA,MAAA,OAAA,SAAAb,EAAAwC,EAAAqI,GAAA,IAAA/K,EAAA,SAAAE,GAAA,OAAAA,EAAAqN,IAAA,EAAArN,EAAA8lB,aAAAjlB,EAAA,EAAAyf,EAAA9d,EAAAD,UAAA+d,EAAAmF,YAAA,WAAA,OAAA3lB,EAAAsE,MAAA4c,MAAA,EAAAV,EAAAqF,QAAA,SAAA3lB,GAAA,IAAAoE,KAAAmf,SAAA/e,EAAAxE,GAAA,OAAAoE,KAAAiJ,IAAA,GAAArN,EAAAoE,KAAAuhB,WAAA9kB,GAAA,IAAA2B,EAAA1B,EAAAkB,EAAAxC,EAAAM,EAAAsE,MAAAI,GAAAhC,EAAA4B,KAAAqhB,cAAAzjB,EAAA,GAAAlB,GAAAsD,KAAA2d,GAAAlX,EAAAiX,IAAAjX,KAAAmW,KAAAxe,GAAAkhB,QAAA,SAAAoC,aAAAhlB,EAAAglB,aAAA,IAAA9jB,GAAA,GAAAlB,EAAAuM,IAAArL,EAAAnB,IAAA,OAAArB,EAAAslB,KAAAtgB,EAAA,QAAA,CAAA,EAAA8b,EAAAwF,WAAA,SAAAjlB,GAAA,OAAAuD,KAAAmf,SAAA/e,EAAA3D,GAAAuD,KAAA2hB,OAAA,EAAA3hB,KAAA2hB,IAAA3hB,KAAA2hB,MAAA,EAAAllB,EAAAA,EAAA,EAAA,EAAA,IAAAC,EAAAwf,EAAAoD,QAAApD,EAAAoD,QAAA,SAAA7iB,EAAAb,GAAA,IAAAwC,EAAA4B,KAAAmf,SAAA1Y,IAAArI,EAAAgC,EAAAxE,IAAAA,EAAA,MAAA,YAAAwC,EAAAb,EAAAd,GAAAgK,EAAAzG,KAAA2c,KAAA3c,KAAA2c,QAAA3c,KAAA0hB,aAAA,IAAApC,QAAA,OAAAtf,KAAA2c,KAAA3c,KAAA2c,OAAA,GAAA3c,KAAA0hB,aAAA,GAAA,GAAAnC,MAAA,OAAA7iB,EAAAY,KAAA0C,KAAAtD,CAAAD,EAAAb,EAAA,CAAA,CAAA,EAAA,UAAA0C,QAAAmB,SAAA,IAAAC,EAAAA,EAAAD,QAAA7D,KAAAa,EAAA,oBAAAykB,WAAAA,WAAAzkB,GAAAsD,MAAA6hB,qBAAAhmB,G7B4hIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASuE,EAAQT,EAAOD,G8B5hIlC,IAAArE,EAAAqB,EAAArB,EAAA4E,KAAAvD,EAAA,WAAA,OAAA,SAAArB,EAAAqB,EAAAb,GAAAR,EAAAA,GAAA,CAAA,EAAA,IAAAsB,EAAAD,EAAA0B,UAAAP,EAAA,CAAAikB,OAAA,QAAAC,KAAA,SAAArb,EAAA,gBAAAoH,EAAA,WAAAkU,GAAA,aAAA9F,EAAA,UAAA+F,GAAA,WAAA9F,EAAA,QAAA+F,GAAA,UAAA7F,EAAA,UAAA8F,GAAA,YAAArb,EAAA,SAAAsb,GAAA,YAAA,SAAA/jB,EAAAhD,EAAAqB,EAAAb,EAAAgC,GAAA,OAAAlB,EAAA0lB,WAAAhnB,EAAAqB,EAAAb,EAAAgC,EAAA,CAAAhC,EAAAolB,GAAAqB,aAAAzkB,EAAAlB,EAAA0lB,WAAA,SAAA3lB,EAAAC,EAAA0B,EAAA8d,EAAA9b,GAAA,IAAA,IAAAZ,EAAA9D,EAAA+K,EAAAQ,EAAA7I,EAAA0hB,UAAAuC,cAAAzkB,EAAAqe,EAAA7gB,EAAAknB,YAAA,CAAA,CAAArb,EAAA,IAAA7L,EAAA,GAAA8gB,EAAA,UAAA,CAAAjV,EAAA,IAAA7L,EAAA,IAAA,CAAA6L,EAAA,KAAA7L,EAAA,GAAA8gB,EAAA,UAAA,CAAAjV,EAAA,IAAA7L,EAAA,IAAA,CAAA6L,EAAA,KAAA7L,EAAA,GAAA8gB,EAAA,QAAA,CAAAjV,EAAA,IAAA7L,EAAA,IAAA,CAAA6L,EAAA,KAAA7L,EAAA,GAAA8gB,EAAA,OAAA,CAAAjV,EAAA,IAAA7L,EAAA,IAAA,CAAA6L,EAAA,KAAA7L,EAAA,GAAA8gB,EAAA,SAAA,CAAAjV,EAAA,IAAA7L,EAAA,IAAA,CAAA6L,EAAA,KAAAiV,EAAA,SAAArO,EAAAoO,EAAAzf,OAAA0D,EAAA,EAAAA,EAAA2N,EAAA3N,GAAA,EAAA,CAAA,IAAA2G,EAAAoV,EAAA/b,GAAA2G,EAAAqV,IAAA1c,EAAA0c,EAAAtgB,EAAAa,GAAAikB,KAAAtiB,EAAAyI,EAAAqV,GAAA,GAAA9d,EAAAsiB,KAAAjkB,EAAAoK,EAAAqV,GAAA,IAAA,IAAA3e,GAAAnC,EAAAmnB,UAAA3f,KAAAkD,OAAAlD,KAAA+D,IAAAnH,IAAA,GAAAiH,EAAAjH,EAAA,EAAAjC,GAAAsJ,EAAAzL,IAAAyL,EAAAzL,EAAA,CAAAmC,GAAA,GAAA2C,EAAA,IAAA2G,EAAAoV,EAAA/b,EAAA,IAAA,IAAAsc,EAAAvV,EAAAJ,EAAAI,GAAA7G,IAAA7C,EAAA6C,EAAA,GAAA7C,IAAA7B,EAAA,iBAAA8gB,EAAAA,EAAAtS,QAAA,KAAA3M,GAAAif,EAAAjf,EAAAb,EAAAmK,EAAAI,EAAAR,GAAA,KAAA,CAAA,CAAA,GAAA/J,EAAA,OAAAhB,EAAA,IAAA0gB,EAAA3V,EAAAQ,EAAA4a,OAAA5a,EAAA6a,KAAA,MAAA,mBAAA1F,EAAAA,EAAA1gB,GAAA0gB,EAAAlS,QAAA,KAAAxO,EAAA,EAAAgB,EAAA8lB,GAAA,SAAApnB,EAAAqB,GAAA,OAAA2B,EAAAhD,EAAAqB,EAAAuD,MAAA,EAAA,EAAAtD,EAAAP,KAAA,SAAAf,EAAAqB,GAAA,OAAA2B,EAAAhD,EAAAqB,EAAAuD,KAAA,EAAA,IAAAkc,EAAA,SAAA9gB,GAAA,OAAAA,EAAAuiB,GAAA/hB,EAAA8hB,MAAA9hB,GAAA,EAAAc,EAAA+lB,MAAA,SAAArnB,GAAA,OAAA4E,KAAAwiB,GAAAtG,EAAAlc,MAAA5E,EAAA,EAAAsB,EAAAgmB,QAAA,SAAAtnB,GAAA,OAAA4E,KAAA7D,KAAA+f,EAAAlc,MAAA5E,EAAA,CAAA,CAAA,EAAA,UAAAkD,QAAAmB,SAAA,IAAAC,EAAAA,EAAAD,QAAAhD,KAAArB,EAAA,oBAAA8lB,WAAAA,WAAA9lB,GAAA2E,MAAA4iB,0BAAAlmB,G9B8hIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS0D,EAAQT,EAAOD,G+B9hIlC,IAAA7D,EAAAa,EAAAb,EAAAoE,KAAAvD,EAAA,WAAA,IAAAb,EAAA,CAAAghB,KAAA,EAAAC,MAAA,EAAA8E,IAAA,EAAAiB,KAAA,EAAAC,OAAA,EAAAC,OAAA,GAAArmB,EAAA,CAAA,EAAA,OAAA,SAAAC,EAAA0B,EAAAR,GAAA,IAAAxC,EAAAM,EAAA,SAAAE,EAAAc,EAAA0B,QAAA,IAAAA,IAAAA,EAAA,CAAA,GAAA,IAAAR,EAAA,IAAA4Z,KAAA5b,GAAAR,EAAA,SAAAQ,EAAAc,QAAA,IAAAA,IAAAA,EAAA,CAAA,GAAA,IAAA0B,EAAA1B,EAAAqmB,cAAA,QAAAnlB,EAAAhC,EAAA,IAAAwC,EAAAhD,EAAAqB,EAAAmB,GAAA,OAAAxC,IAAAA,EAAA,IAAA4nB,KAAAC,eAAA,QAAA,CAAAC,QAAA,EAAAC,SAAAvnB,EAAAghB,KAAA,UAAAC,MAAA,UAAA8E,IAAA,UAAAiB,KAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,aAAA3kB,IAAA3B,EAAAmB,GAAAxC,GAAAA,CAAA,CAAA,CAAAsB,EAAA0B,GAAA,OAAAhD,EAAAgoB,cAAAxlB,EAAA,EAAAwC,EAAA,SAAA3D,EAAAC,GAAA,IAAA,IAAA0B,EAAA1C,EAAAe,EAAAC,GAAAtB,EAAA,GAAAgF,EAAA,EAAAA,EAAAhC,EAAA5B,OAAA4D,GAAA,EAAA,CAAA,IAAAZ,EAAApB,EAAAgC,GAAAqG,EAAAjH,EAAAmN,KAAAkB,EAAArO,EAAAzC,MAAAmD,EAAAtE,EAAA6K,GAAAvG,GAAA,IAAA9E,EAAA8E,GAAA6O,SAAAlB,EAAA,IAAA,CAAA,IAAAqO,EAAA9gB,EAAA,GAAA6L,EAAA,KAAAiV,EAAA,EAAAA,EAAAD,EAAA7gB,EAAA,GAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,GAAA,IAAA6L,EAAA,IAAA7L,EAAA,GAAA,IAAAA,EAAA,GAAA,OAAAohB,GAAA/f,EAAA,OAAAmB,EAAA8f,IAAAzB,GAAAhd,WAAAud,GAAAA,EAAA,MAAA,GAAA,EAAAhd,EAAApB,EAAAD,UAAAqB,EAAA6jB,GAAA,SAAAznB,EAAAa,QAAA,IAAAb,IAAAA,EAAAR,GAAA,IAAAsB,EAAAsD,KAAA0c,YAAAte,EAAA4B,KAAA6f,SAAAnkB,EAAA0C,EAAAwT,eAAA,QAAA,CAAAuR,SAAAvnB,IAAAwE,EAAAwC,KAAAkD,OAAA1H,EAAA,IAAAoZ,KAAA9b,IAAA,IAAA,IAAA8D,EAAA5B,EAAAlC,EAAA,CAAA8hB,OAAAxd,KAAAyd,KAAAuC,KAAA,cAAAhgB,KAAAif,KAAAvC,UAAA,IAAA9Z,KAAAkD,MAAA1H,EAAAqiB,oBAAA,IAAArgB,GAAA,GAAA,GAAA3D,EAAA,CAAA,IAAAgK,EAAAjH,EAAAkd,YAAAld,EAAAA,EAAAyJ,IAAAvM,EAAA+J,EAAA,SAAA,CAAA,OAAAjH,EAAAoe,GAAA0F,UAAA1nB,EAAA4D,CAAA,EAAAA,EAAAgiB,WAAA,SAAA5lB,GAAA,IAAAa,EAAAuD,KAAA4d,GAAA0F,WAAA1lB,EAAAylB,GAAAE,QAAA7mB,EAAAhB,EAAAsE,KAAAf,UAAAxC,EAAA,CAAAsmB,aAAAnnB,IAAA4nB,MAAA,SAAA5nB,GAAA,MAAA,iBAAAA,EAAA+Q,KAAAS,aAAA,IAAA,OAAA1Q,GAAAA,EAAAK,KAAA,EAAA,IAAA0J,EAAAjH,EAAA8f,QAAA9f,EAAA8f,QAAA,SAAA1jB,EAAAa,GAAA,IAAAuD,KAAA4d,KAAA5d,KAAA4d,GAAA0F,UAAA,OAAA7c,EAAA3K,KAAAkE,KAAApE,EAAAa,GAAA,IAAAC,EAAAkB,EAAAoC,KAAAmgB,OAAA,2BAAA,CAAA3C,OAAAxd,KAAAyd,KAAA,OAAAhX,EAAA3K,KAAAY,EAAAd,EAAAa,GAAA4mB,GAAArjB,KAAA4d,GAAA0F,WAAA,EAAA,EAAA1lB,EAAAylB,GAAA,SAAAznB,EAAAa,EAAAC,GAAA,IAAA0B,EAAA1B,GAAAD,EAAAf,EAAAgB,GAAAD,GAAArB,EAAAoE,EAAAY,GAAAxC,IAAAlC,GAAA,GAAA,iBAAAE,EAAA,OAAAgC,EAAAhC,GAAAynB,GAAA3nB,GAAA,IAAA+K,EAAA,SAAA7K,EAAAa,EAAAC,GAAA,IAAA0B,EAAAxC,EAAA,GAAAa,EAAA,IAAAmB,EAAAwC,EAAAhC,EAAA1B,GAAA,GAAAD,IAAAmB,EAAA,MAAA,CAAAQ,EAAA3B,GAAA,IAAArB,EAAAgF,EAAAhC,GAAA,IAAAR,EAAAnB,GAAA,IAAAC,GAAA,OAAAkB,IAAAxC,EAAA,CAAAgD,EAAAR,GAAA,CAAAhC,EAAA,GAAAgH,KAAAkN,IAAAlS,EAAAxC,GAAA,IAAAwH,KAAAC,IAAAjF,EAAAxC,GAAA,CAAA,CAAAwC,EAAA8f,IAAA9hB,EAAAwC,GAAAa,UAAAO,EAAA9D,GAAAmS,EAAApH,EAAA,GAAAvG,EAAAuG,EAAA,GAAAyV,EAAAte,EAAAiQ,GAAA6O,UAAAxc,GAAA,OAAAgc,EAAA0B,GAAA0F,UAAA5nB,EAAAwgB,CAAA,EAAAte,EAAAylB,GAAAE,MAAA,WAAA,OAAAP,KAAAC,iBAAAQ,kBAAAN,QAAA,EAAAvlB,EAAAylB,GAAAK,WAAA,SAAA9nB,GAAAR,EAAAQ,CAAA,CAAA,CAAA,EAAA,UAAA0C,QAAAmB,SAAA,IAAAC,EAAAA,EAAAD,QAAAhD,KAAAb,EAAA,oBAAAslB,WAAAA,WAAAtlB,GAAAmE,MAAA4jB,sBAAAlnB,G/BgiIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS0D,EAAQT,EAAOD,GgChiIlC,IAAA7D,EAAAwC,EAAAxC,EAAAoE,KAAA5B,EAAA,WAAA,IAAAxC,EAAA,SAAAwC,EAAA,uBAAA3B,EAAA,eAAA,OAAA,SAAAgK,EAAAjH,EAAA9C,GAAA,IAAA0D,EAAAZ,EAAArB,UAAAzB,EAAAghB,IAAA,SAAA9hB,GAAA,OAAA,IAAA4D,EAAA,CAAAmd,KAAA/gB,EAAA8hB,KAAA,EAAA5b,KAAApE,WAAA,EAAA0C,EAAAsd,IAAA,SAAAtf,GAAA,IAAA3B,EAAAC,EAAAsD,KAAA6f,SAAA,CAAArC,OAAAxd,KAAAyd,GAAAC,KAAA,IAAA,OAAAtf,EAAA3B,EAAAwM,IAAAjJ,KAAA0c,YAAA9gB,GAAAa,CAAA,EAAA2D,EAAAwjB,MAAA,WAAA,OAAAlnB,EAAAsD,KAAA6f,SAAA,CAAArC,OAAAxd,KAAAyd,GAAAC,KAAA,GAAA,EAAA,IAAA9f,EAAAwC,EAAAiK,MAAAjK,EAAAiK,MAAA,SAAAzO,GAAAA,EAAA8hB,MAAA1d,KAAA2d,IAAA,GAAA3d,KAAAmf,SAAA/e,EAAAxE,EAAAiiB,WAAA7d,KAAA6d,QAAAjiB,EAAAiiB,SAAAjgB,EAAA9B,KAAAkE,KAAApE,EAAA,EAAA,IAAAR,EAAAgF,EAAA8d,KAAA9d,EAAA8d,KAAA,WAAA,GAAAle,KAAA2d,GAAA,CAAA,IAAA/hB,EAAAoE,KAAA8d,GAAA9d,KAAAme,GAAAviB,EAAAioB,iBAAA7jB,KAAAqe,GAAAziB,EAAAkoB,cAAA9jB,KAAAue,GAAA3iB,EAAAmoB,aAAA/jB,KAAAye,GAAA7iB,EAAAooB,YAAAhkB,KAAA2e,GAAA/iB,EAAAqoB,cAAAjkB,KAAA6e,GAAAjjB,EAAAsoB,gBAAAlkB,KAAA+e,GAAAnjB,EAAAuoB,gBAAAnkB,KAAAif,IAAArjB,EAAAwoB,oBAAA,MAAAhpB,EAAAU,KAAAkE,KAAA,EAAA,IAAAtE,EAAA0E,EAAAsc,UAAAtc,EAAAsc,UAAA,SAAAjW,EAAAjH,GAAA,IAAA9C,EAAAsD,KAAAmf,SAAA/e,EAAA,GAAA1D,EAAA+J,GAAA,OAAAzG,KAAA2d,GAAA,EAAAjhB,EAAAsD,KAAA6d,SAAAniB,EAAAI,KAAAkE,MAAAA,KAAA6d,QAAA,GAAA,iBAAApX,IAAAA,EAAA,SAAA7K,QAAA,IAAAA,IAAAA,EAAA,IAAA,IAAA6K,EAAA7K,EAAAoiB,MAAA5f,GAAA,IAAAqI,EAAA,OAAA,KAAA,IAAAjH,GAAA,GAAAiH,EAAA,IAAAuX,MAAAvhB,IAAA,CAAA,IAAA,EAAA,GAAAC,EAAA8C,EAAA,GAAAY,EAAA,IAAAZ,EAAA,KAAAA,EAAA,GAAA,OAAA,IAAAY,EAAA,EAAA,MAAA1D,EAAA0D,GAAAA,CAAA,CAAA,CAAAqG,GAAA,OAAAA,GAAA,OAAAzG,KAAA,IAAAI,EAAAwC,KAAA+D,IAAAF,IAAA,GAAA,GAAAA,EAAAA,EAAA7I,EAAAoC,KAAA,GAAAR,EAAA,OAAA5B,EAAAigB,QAAAzd,EAAAxC,EAAA+f,GAAA,IAAAlX,EAAA7I,EAAA,GAAA,IAAA6I,EAAA,CAAA,IAAArL,EAAA4E,KAAA2d,GAAA3d,KAAA6f,SAAAY,qBAAA,EAAAzgB,KAAA0c,aAAA9e,EAAAoC,KAAA4jB,QAAA3a,IAAA7I,EAAAhF,EAAAQ,IAAAiiB,QAAAzd,EAAAxC,EAAAggB,GAAAyG,aAAAjpB,CAAA,MAAAwC,EAAAoC,KAAA0d,MAAA,OAAA9f,CAAA,EAAA,IAAAqe,EAAA7b,EAAA+f,OAAA/f,EAAA+f,OAAA,SAAAvkB,GAAA,IAAAwC,EAAAxC,IAAAoE,KAAA2d,GAAA,yBAAA,IAAA,OAAA1B,EAAAngB,KAAAkE,KAAA5B,EAAA,EAAAgC,EAAAnB,QAAA,WAAA,IAAArD,EAAAoE,KAAAmf,SAAA/e,EAAAJ,KAAA6d,SAAA,EAAA7d,KAAA6d,SAAA7d,KAAA4d,GAAAyG,cAAArkB,KAAA8d,GAAA2C,qBAAA,OAAAzgB,KAAA8d,GAAA7e,UAAA,IAAArD,CAAA,EAAAwE,EAAAkkB,MAAA,WAAA,QAAAtkB,KAAA2d,EAAA,EAAAvd,EAAAugB,YAAA,WAAA,OAAA3gB,KAAA6f,SAAAc,aAAA,EAAAvgB,EAAAvE,SAAA,WAAA,OAAAmE,KAAA6f,SAAApE,aAAA,EAAA,IAAAxU,EAAA7G,EAAAyf,OAAAzf,EAAAyf,OAAA,SAAAjkB,GAAA,MAAA,MAAAA,GAAAoE,KAAA6d,QAAAnhB,EAAAsD,KAAAmgB,OAAA,4BAAAN,SAAA5Y,EAAAnL,KAAAkE,KAAA,EAAA,IAAAE,EAAAE,EAAAsgB,KAAAtgB,EAAAsgB,KAAA,SAAA9kB,EAAAwC,EAAA3B,GAAA,GAAAb,GAAAoE,KAAA2d,KAAA/hB,EAAA+hB,GAAA,OAAAzd,EAAApE,KAAAkE,KAAApE,EAAAwC,EAAA3B,GAAA,IAAAgK,EAAAzG,KAAA4jB,QAAApkB,EAAA9C,EAAAd,GAAAgoB,QAAA,OAAA1jB,EAAApE,KAAA2K,EAAAjH,EAAApB,EAAA3B,EAAA,CAAA,CAAA,EAAA,UAAA6B,QAAAmB,SAAA,IAAAC,EAAAA,EAAAD,QAAArB,KAAAxC,EAAA,oBAAAslB,WAAAA,WAAAtlB,GAAAmE,MAAAwkB,iBAAAnmB,GhCkiIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS+B,EAAQT,EAAOD,GiCliIlC,IAAAhD,EAAAb,EAAAa,EAAAuD,KAAApE,EAAA,WAAA,IAAAa,EAAA,OAAAb,EAAA,OAAA,OAAA,SAAAwC,EAAA1B,EAAAtB,GAAA,IAAAoE,EAAA9C,EAAAyB,UAAAqB,EAAA8hB,KAAA,SAAAljB,GAAA,QAAA,IAAAA,IAAAA,EAAA,MAAA,OAAAA,EAAA,OAAA4B,KAAAiJ,IAAA,GAAA7K,EAAA4B,KAAAshB,QAAA,OAAA,IAAA5kB,EAAAsD,KAAA8f,UAAA0E,WAAA,EAAA,GAAA,KAAAxkB,KAAA6c,SAAA7c,KAAA2c,OAAA,GAAA,CAAA,IAAAnd,EAAApE,EAAA4E,MAAAsf,QAAA1jB,GAAAqN,IAAA,EAAArN,GAAA+gB,KAAAjgB,GAAA+J,EAAArL,EAAA4E,MAAAuf,MAAA9iB,GAAA,GAAA+C,EAAAigB,SAAAhZ,GAAA,OAAA,CAAA,CAAA,IAAA/K,EAAAN,EAAA4E,MAAAsf,QAAA1jB,GAAA+gB,KAAAjgB,GAAA4iB,QAAA7iB,GAAAyjB,SAAA,EAAA,eAAAtiB,EAAAoC,KAAA0gB,KAAAhlB,EAAAe,GAAA,GAAA,OAAAmB,EAAA,EAAAxC,EAAA4E,MAAAsf,QAAA,QAAAgC,OAAA1e,KAAAma,KAAAnf,EAAA,EAAA4B,EAAAilB,MAAA,SAAAhoB,GAAA,YAAA,IAAAA,IAAAA,EAAA,MAAAuD,KAAAshB,KAAA7kB,EAAA,CAAA,CAAA,EAAA,UAAA6B,QAAAmB,SAAA,IAAAC,EAAAA,EAAAD,QAAA7D,KAAAa,EAAA,oBAAAykB,WAAAA,WAAAzkB,GAAAsD,MAAA2kB,wBAAA9oB,GjCoiIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASuE,EAAQT,EAAOD,GkCpiIlC,IAAAhD,IAAAuD,KAAA,UAAA1B,QAAAmB,SAAA,IAAAC,EAAAA,EAAAD,QAAA,SAAAhD,EAAAb,GAAAA,EAAAuC,UAAAwmB,QAAA,SAAAloB,GAAA,IAAAb,EAAAoE,KAAA8f,UAAAC,WAAA,EAAA3hB,EAAA4B,KAAAye,GAAA/hB,GAAA0B,EAAAxC,EAAAwC,EAAA,EAAAA,GAAAxC,EAAA,OAAAoE,KAAAmf,SAAA/e,EAAA3D,GAAAC,EAAAsD,KAAAkgB,SAAAxjB,EAAA,OAAAuM,IAAAxM,EAAA,MAAA,CAAA,GAAAA,EAAA,oBAAAykB,WAAAA,WAAAzkB,GAAAsD,MAAA6kB,qBAAA,SAAAnoB,EAAAb,GAAAA,EAAAuC,UAAAwmB,QAAA,SAAAloB,GAAA,IAAAb,EAAAoE,KAAA8f,UAAAC,WAAA,EAAA3hB,EAAA4B,KAAAye,GAAA/hB,GAAA0B,EAAAxC,EAAAwC,EAAA,EAAAA,GAAAxC,EAAA,OAAAoE,KAAAmf,SAAA/e,EAAA3D,GAAAC,EAAAsD,KAAAkgB,SAAAxjB,EAAA,OAAAuM,IAAAxM,EAAA,MAAA,CAAA,ClCsiIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS0D,EAAQT,EAAOD,GmCpiIlC,IAAA0a,EAAAha,EAAA,sBAEA0kB,EAAA1kB,EAAA,oBACA4Z,EAAA5Z,EAAA,kBAEA2kB,EAAA3kB,EAAA,QAGAT,EAAAD,QAAA,SACA4B,EACA0jB,EACAhoB,GAEA,IAAAsE,GAAA,WAAA/C,QAAA+C,IAAA,mBAAAA,EACA,MAAA,IAAA0Y,EAAA,0CAEA,GAAA,iBAAAgL,GAAA,WAAAzmB,QAAAymB,GACA,MAAA,IAAAhL,EAAA,4CAEA,GAAArc,UAAAlB,OAAA,GAAA,kBAAAkB,UAAA,IAAA,OAAAA,UAAA,GACA,MAAA,IAAAqc,EAAA,2DAEA,GAAArc,UAAAlB,OAAA,GAAA,kBAAAkB,UAAA,IAAA,OAAAA,UAAA,GACA,MAAA,IAAAqc,EAAA,yDAEA,GAAArc,UAAAlB,OAAA,GAAA,kBAAAkB,UAAA,IAAA,OAAAA,UAAA,GACA,MAAA,IAAAqc,EAAA,6DAEA,GAAArc,UAAAlB,OAAA,GAAA,kBAAAkB,UAAA,GACA,MAAA,IAAAqc,EAAA,2CAGA,IAAAiL,EAAAtnB,UAAAlB,OAAA,EAAAkB,UAAA,GAAA,KACAunB,EAAAvnB,UAAAlB,OAAA,EAAAkB,UAAA,GAAA,KACAwnB,EAAAxnB,UAAAlB,OAAA,EAAAkB,UAAA,GAAA,KACAynB,EAAAznB,UAAAlB,OAAA,GAAAkB,UAAA,GAGA0nB,IAAAN,GAAAA,EAAAzjB,EAAA0jB,GAEA,GAAA5K,EACAA,EAAA9Y,EAAA0jB,EAAA,CACA9nB,aAAA,OAAAioB,GAAAE,EAAAA,EAAAnoB,cAAAioB,EACAloB,WAAA,OAAAgoB,GAAAI,EAAAA,EAAApoB,YAAAgoB,EACAjoB,MAAAA,EACAG,SAAA,OAAA+nB,GAAAG,EAAAA,EAAAloB,UAAA+nB,QAEA,KAAAE,IAAAH,GAAAC,GAAAC,GAIA,MAAA,IAAAL,EAAA,+GAFAxjB,EAAA0jB,GAAAhoB,CAGA,CACA,CnCyiIA,EAAE,CAAC,qBAAqB,GAAG,mBAAmB,GAAG,iBAAiB,GAAG+nB,KAAO,KAAK,GAAG,CAAC,SAAS3kB,EAAQT,EAAOD,GoC9lI7G,IAGA0a,EAHAha,EAAA,gBAGAsZ,CAAA,2BAAA,KAAA,EACA,GAAAU,EACA,IACAA,EAAA,CAAA,EAAA,IAAA,CAAApd,MAAA,GACA,CAAA,MAAAN,GAEA0d,GAAA,CACA,CAGAza,EAAAD,QAAA0a,CpCmmIA,EAAE,CAAC,gBAAgB,KAAK,GAAG,CAAC,SAASha,EAAQT,EAAOD,GqC/mIpDC,EAAAD,QAAA4lB,SrCqnIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASllB,EAAQT,EAAOD,GsCrnIlCC,EAAAD,QAAAY,KtC2nIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASF,EAAQT,EAAOD,GuC3nIlCC,EAAAD,QAAA0L,UvCioIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAShL,EAAQT,EAAOD,GwCjoIlCC,EAAAD,QAAAV,cxCuoIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASoB,EAAQT,EAAOD,GyCvoIlCC,EAAAD,QAAA6lB,WzC6oIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASnlB,EAAQT,EAAOD,G0C7oIlCC,EAAAD,QAAAhE,S1CmpIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS0E,EAAQT,EAAOD,G2CnpIlCC,EAAAD,QAAA8lB,Q3CypIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASplB,EAAQT,EAAOD,G4CroIlC,IAOA+lB,EAPAC,EAAA,YAAA,oBAAAroB,QAAA,YAAAkB,QAAAlB,UAAAA,QAAA,KACAsoB,EAAAD,GAAA,mBAAAA,EAAA9nB,MACA8nB,EAAA9nB,MACA,SAAAqU,EAAA2T,EAAA7jB,GACA,OAAA8jB,SAAAznB,UAAAR,MAAA7B,KAAAkW,EAAA2T,EAAA7jB,EACA,EAIA0jB,EADAC,GAAA,mBAAAA,EAAAI,QACAJ,EAAAI,QACAhpB,OAAAipB,sBACA,SAAA9T,GACA,OAAAnV,OAAAkpB,oBAAA/T,GACA3O,OAAAxG,OAAAipB,sBAAA9T,GACA,EAEA,SAAAA,GACA,OAAAnV,OAAAkpB,oBAAA/T,EACA,EAOA,IAAAgU,EAAAvnB,OAAAyc,OAAA,SAAAne,GACA,OAAAA,GAAAA,CACA,EAEA,SAAAkpB,IACAA,EAAA/H,KAAApiB,KAAAkE,KACA,CACAN,EAAAD,QAAAwmB,EACAvmB,EAAAD,QAAAwB,KAwYA,SAAAilB,EAAAjqB,GACA,OAAA,IAAAkqB,SAAA,SAAAC,EAAAC,GACA,SAAAC,EAAA3kB,GACAukB,EAAAK,eAAAtqB,EAAAuqB,GACAH,EAAA1kB,EACA,CAEA,SAAA6kB,IACA,mBAAAN,EAAAK,gBACAL,EAAAK,eAAA,QAAAD,GAEAF,EAAA,GAAArqB,MAAAD,KAAA4B,WACA,CAEA+oB,EAAAP,EAAAjqB,EAAAuqB,EAAA,CAAAvlB,MAAA,IACA,UAAAhF,GAMA,SAAAiqB,EAAAQ,EAAAC,GACA,mBAAAT,EAAAU,IACAH,EAAAP,EAAA,QAAAQ,EAAAC,EAEA,CATAE,CAAAX,EAAAI,EAAA,CAAArlB,MAAA,GAEA,GACA,EAxZAglB,EAAAA,aAAAA,EAEAA,EAAA9nB,UAAA2oB,aAAAza,EACA4Z,EAAA9nB,UAAA4oB,aAAA,EACAd,EAAA9nB,UAAA6oB,mBAAA3a,EAIA,IAAA4a,EAAA,GAEA,SAAAC,EAAAC,GACA,GAAA,mBAAAA,EACA,MAAA,IAAA1rB,UAAA,mEAAA6C,QAAA6oB,GAEA,CAoCA,SAAAC,EAAAC,GACA,YAAAhb,IAAAgb,EAAAL,cACAf,EAAAgB,oBACAI,EAAAL,aACA,CAkDA,SAAAM,EAAAtV,EAAArF,EAAAwa,EAAAI,GACA,IAAA1Z,EACA2Z,EACAC,EA1HAC,EAgJA,GApBAR,EAAAC,QAGA9a,KADAmb,EAAAxV,EAAA8U,UAEAU,EAAAxV,EAAA8U,QAAAjqB,OAAAyC,OAAA,MACA0S,EAAA+U,aAAA,SAIA1a,IAAAmb,EAAAG,cACA3V,EAAA4V,KAAA,cAAAjb,EACAwa,EAAAA,SAAAA,EAAAA,SAAAA,GAIAK,EAAAxV,EAAA8U,SAEAW,EAAAD,EAAA7a,SAGAN,IAAAob,EAEAA,EAAAD,EAAA7a,GAAAwa,IACAnV,EAAA+U,kBAeA,GAbA,mBAAAU,EAEAA,EAAAD,EAAA7a,GACA4a,EAAA,CAAAJ,EAAAM,GAAA,CAAAA,EAAAN,GAEAI,EACAE,EAAAphB,QAAA8gB,GAEAM,EAAAxlB,KAAAklB,IAIAtZ,EAAAuZ,EAAApV,IACA,GAAAyV,EAAAjrB,OAAAqR,IAAA4Z,EAAAI,OAAA,CACAJ,EAAAI,QAAA,EAGA,IAAA7K,EAAA,IAAA3c,MAAA,+CACAonB,EAAAjrB,OAAA,IAAAgC,OAAAmO,GADA,qEAIAqQ,EAAA/gB,KAAA,8BACA+gB,EAAAkJ,QAAAlU,EACAgL,EAAArQ,KAAAA,EACAqQ,EAAA8K,MAAAL,EAAAjrB,OA7KAkrB,EA8KA1K,EA7KAjM,SAAAA,QAAAgX,MAAAhX,QAAAgX,KAAAL,EA8KA,CAGA,OAAA1V,CACA,CAaA,SAAAgW,IACA,IAAAhoB,KAAAioB,MAGA,OAFAjoB,KAAAgS,OAAAuU,eAAAvmB,KAAA2M,KAAA3M,KAAAkoB,QACAloB,KAAAioB,OAAA,EACA,IAAAvqB,UAAAlB,OACAwD,KAAAmnB,SAAArrB,KAAAkE,KAAAgS,QACAhS,KAAAmnB,SAAAxpB,MAAAqC,KAAAgS,OAAAtU,UAEA,CAEA,SAAAyqB,EAAAnW,EAAArF,EAAAwa,GACA,IAAAiB,EAAA,CAAAH,OAAA,EAAAC,YAAA7b,EAAA2F,OAAAA,EAAArF,KAAAA,EAAAwa,SAAAA,GACAkB,EAAAL,EAAA1qB,KAAA8qB,GAGA,OAFAC,EAAAlB,SAAAA,EACAiB,EAAAF,OAAAG,EACAA,CACA,CAyHA,SAAAC,EAAAtW,EAAArF,EAAA4b,GACA,IAAAf,EAAAxV,EAAA8U,QAEA,QAAAza,IAAAmb,EACA,MAAA,GAEA,IAAAgB,EAAAhB,EAAA7a,GACA,YAAAN,IAAAmc,EACA,GAEA,mBAAAA,EACAD,EAAA,CAAAC,EAAArB,UAAAqB,GAAA,CAAAA,GAEAD,EAsDA,SAAA9nB,GAEA,IADA,IAAA+R,EAAA,IAAAtW,MAAAuE,EAAAjE,QACA4B,EAAA,EAAAA,EAAAoU,EAAAhW,SAAA4B,EACAoU,EAAApU,GAAAqC,EAAArC,GAAA+oB,UAAA1mB,EAAArC,GAEA,OAAAoU,CACA,CA3DAiW,CAAAD,GAAAE,EAAAF,EAAAA,EAAAhsB,OACA,CAmBA,SAAAmsB,EAAAhc,GACA,IAAA6a,EAAAxnB,KAAA8mB,QAEA,QAAAza,IAAAmb,EAAA,CACA,IAAAgB,EAAAhB,EAAA7a,GAEA,GAAA,mBAAA6b,EACA,OAAA,EACA,QAAAnc,IAAAmc,EACA,OAAAA,EAAAhsB,MAEA,CAEA,OAAA,CACA,CAMA,SAAAksB,EAAAjoB,EAAA/D,GAEA,IADA,IAAA+P,EAAA,IAAAvQ,MAAAQ,GACA0B,EAAA,EAAAA,EAAA1B,IAAA0B,EACAqO,EAAArO,GAAAqC,EAAArC,GACA,OAAAqO,CACA,CA2CA,SAAAga,EAAAP,EAAAjqB,EAAAkrB,EAAAR,GACA,GAAA,mBAAAT,EAAAU,GACAD,EAAA1lB,KACAilB,EAAAjlB,KAAAhF,EAAAkrB,GAEAjB,EAAAU,GAAA3qB,EAAAkrB,OAEA,IAAA,mBAAAjB,EAAA0C,iBAYA,MAAA,IAAAntB,UAAA,sEAAA6C,QAAA4nB,IATAA,EAAA0C,iBAAA3sB,GAAA,SAAA4sB,EAAAxd,GAGAsb,EAAA1lB,MACAilB,EAAA4C,oBAAA7sB,EAAA4sB,GAEA1B,EAAA9b,EACA,GAGA,CACA,CAraAxO,OAAAC,eAAAmpB,EAAA,sBAAA,CACAjpB,YAAA,EACAK,IAAA,WACA,OAAA4pB,CACA,EACAtR,IAAA,SAAAtK,GACA,GAAA,iBAAAA,GAAAA,EAAA,GAAA2a,EAAA3a,GACA,MAAA,IAAAF,WAAA,kGAAAE,EAAA,KAEA4b,EAAA5b,CACA,IAGA4a,EAAA/H,KAAA,gBAEA7R,IAAArM,KAAA8mB,SACA9mB,KAAA8mB,UAAAjqB,OAAAsC,eAAAa,MAAA8mB,UACA9mB,KAAA8mB,QAAAjqB,OAAAyC,OAAA,MACAU,KAAA+mB,aAAA,GAGA/mB,KAAAgnB,cAAAhnB,KAAAgnB,oBAAA3a,CACA,EAIA4Z,EAAA9nB,UAAA4qB,gBAAA,SAAArsB,GACA,GAAA,iBAAAA,GAAAA,EAAA,GAAAspB,EAAAtpB,GACA,MAAA,IAAAyO,WAAA,gFAAAzO,EAAA,KAGA,OADAsD,KAAAgnB,cAAAtqB,EACAsD,IACA,EAQAimB,EAAA9nB,UAAA6qB,gBAAA,WACA,OAAA5B,EAAApnB,KACA,EAEAimB,EAAA9nB,UAAAypB,KAAA,SAAAjb,GAEA,IADA,IAAA7K,EAAA,GACA1D,EAAA,EAAAA,EAAAV,UAAAlB,OAAA4B,IAAA0D,EAAAG,KAAAvE,UAAAU,IACA,IAAA6qB,EAAA,UAAAtc,EAEA6a,EAAAxnB,KAAA8mB,QACA,QAAAza,IAAAmb,EACAyB,EAAAA,QAAA5c,IAAAmb,EAAAxW,WACA,IAAAiY,EACA,OAAA,EAGA,GAAAA,EAAA,CACA,IAAAC,EAGA,GAFApnB,EAAAtF,OAAA,IACA0sB,EAAApnB,EAAA,IACAonB,aAAA7oB,MAGA,MAAA6oB,EAGA,IAAAvnB,EAAA,IAAAtB,MAAA,oBAAA6oB,EAAA,KAAAA,EAAAC,QAAA,IAAA,KAEA,MADAxnB,EAAAynB,QAAAF,EACAvnB,CACA,CAEA,IAAA+kB,EAAAc,EAAA7a,GAEA,QAAAN,IAAAqa,EACA,OAAA,EAEA,GAAA,mBAAAA,EACAhB,EAAAgB,EAAA1mB,KAAA8B,OAEA,KAAAS,EAAAmkB,EAAAlqB,OACA6sB,EAAAX,EAAAhC,EAAAnkB,GACA,IAAAnE,EAAA,EAAAA,EAAAmE,IAAAnE,EACAsnB,EAAA2D,EAAAjrB,GAAA4B,KAAA8B,EAHA,CAMA,OAAA,CACA,EAgEAmkB,EAAA9nB,UAAAmrB,YAAA,SAAA3c,EAAAwa,GACA,OAAAG,EAAAtnB,KAAA2M,EAAAwa,GAAA,EACA,EAEAlB,EAAA9nB,UAAAyoB,GAAAX,EAAA9nB,UAAAmrB,YAEArD,EAAA9nB,UAAAorB,gBACA,SAAA5c,EAAAwa,GACA,OAAAG,EAAAtnB,KAAA2M,EAAAwa,GAAA,EACA,EAoBAlB,EAAA9nB,UAAA8C,KAAA,SAAA0L,EAAAwa,GAGA,OAFAD,EAAAC,GACAnnB,KAAA4mB,GAAAja,EAAAwb,EAAAnoB,KAAA2M,EAAAwa,IACAnnB,IACA,EAEAimB,EAAA9nB,UAAAqrB,oBACA,SAAA7c,EAAAwa,GAGA,OAFAD,EAAAC,GACAnnB,KAAAupB,gBAAA5c,EAAAwb,EAAAnoB,KAAA2M,EAAAwa,IACAnnB,IACA,EAGAimB,EAAA9nB,UAAAooB,eACA,SAAA5Z,EAAAwa,GACA,IAAA5V,EAAAiW,EAAAiC,EAAArrB,EAAAsrB,EAKA,GAHAxC,EAAAC,QAGA9a,KADAmb,EAAAxnB,KAAA8mB,SAEA,OAAA9mB,KAGA,QAAAqM,KADAkF,EAAAiW,EAAA7a,IAEA,OAAA3M,KAEA,GAAAuR,IAAA4V,GAAA5V,EAAA4V,WAAAA,EACA,KAAAnnB,KAAA+mB,aACA/mB,KAAA8mB,QAAAjqB,OAAAyC,OAAA,cAEAkoB,EAAA7a,GACA6a,EAAAjB,gBACAvmB,KAAA4nB,KAAA,iBAAAjb,EAAA4E,EAAA4V,UAAAA,SAEA,GAAA,mBAAA5V,EAAA,CAGA,IAFAkY,GAAA,EAEArrB,EAAAmT,EAAA/U,OAAA,EAAA4B,GAAA,EAAAA,IACA,GAAAmT,EAAAnT,KAAA+oB,GAAA5V,EAAAnT,GAAA+oB,WAAAA,EAAA,CACAuC,EAAAnY,EAAAnT,GAAA+oB,SACAsC,EAAArrB,EACA,KACA,CAGA,GAAAqrB,EAAA,EACA,OAAAzpB,KAEA,IAAAypB,EACAlY,EAAAvJ,QAiIA,SAAAuJ,EAAAzQ,GACA,KAAAA,EAAA,EAAAyQ,EAAA/U,OAAAsE,IACAyQ,EAAAzQ,GAAAyQ,EAAAzQ,EAAA,GACAyQ,EAAAvP,KACA,CAnIA2nB,CAAApY,EAAAkY,GAGA,IAAAlY,EAAA/U,SACAgrB,EAAA7a,GAAA4E,EAAA,SAEAlF,IAAAmb,EAAAjB,gBACAvmB,KAAA4nB,KAAA,iBAAAjb,EAAA+c,GAAAvC,EACA,CAEA,OAAAnnB,IACA,EAEAimB,EAAA9nB,UAAAyrB,IAAA3D,EAAA9nB,UAAAooB,eAEAN,EAAA9nB,UAAA0rB,mBACA,SAAAld,GACA,IAAA0c,EAAA7B,EAAAppB,EAGA,QAAAiO,KADAmb,EAAAxnB,KAAA8mB,SAEA,OAAA9mB,KAGA,QAAAqM,IAAAmb,EAAAjB,eAUA,OATA,IAAA7oB,UAAAlB,QACAwD,KAAA8mB,QAAAjqB,OAAAyC,OAAA,MACAU,KAAA+mB,aAAA,QACA1a,IAAAmb,EAAA7a,KACA,KAAA3M,KAAA+mB,aACA/mB,KAAA8mB,QAAAjqB,OAAAyC,OAAA,aAEAkoB,EAAA7a,IAEA3M,KAIA,GAAA,IAAAtC,UAAAlB,OAAA,CACA,IACAyB,EADAuE,EAAA3F,OAAA2F,KAAAglB,GAEA,IAAAppB,EAAA,EAAAA,EAAAoE,EAAAhG,SAAA4B,EAEA,oBADAH,EAAAuE,EAAApE,KAEA4B,KAAA6pB,mBAAA5rB,GAKA,OAHA+B,KAAA6pB,mBAAA,kBACA7pB,KAAA8mB,QAAAjqB,OAAAyC,OAAA,MACAU,KAAA+mB,aAAA,EACA/mB,IACA,CAIA,GAAA,mBAFAqpB,EAAA7B,EAAA7a,IAGA3M,KAAAumB,eAAA5Z,EAAA0c,QACA,QAAAhd,IAAAgd,EAEA,IAAAjrB,EAAAirB,EAAA7sB,OAAA,EAAA4B,GAAA,EAAAA,IACA4B,KAAAumB,eAAA5Z,EAAA0c,EAAAjrB,IAIA,OAAA4B,IACA,EAmBAimB,EAAA9nB,UAAAkrB,UAAA,SAAA1c,GACA,OAAA2b,EAAAtoB,KAAA2M,GAAA,EACA,EAEAsZ,EAAA9nB,UAAA2rB,aAAA,SAAAnd,GACA,OAAA2b,EAAAtoB,KAAA2M,GAAA,EACA,EAEAsZ,EAAA0C,cAAA,SAAAzC,EAAAvZ,GACA,MAAA,mBAAAuZ,EAAAyC,cACAzC,EAAAyC,cAAAhc,GAEAgc,EAAA7sB,KAAAoqB,EAAAvZ,EAEA,EAEAsZ,EAAA9nB,UAAAwqB,cAAAA,EAiBA1C,EAAA9nB,UAAA4rB,WAAA,WACA,OAAA/pB,KAAA+mB,aAAA,EAAAvB,EAAAxlB,KAAA8mB,SAAA,EACA,C5CsuIA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS3mB,EAAQT,EAAOD,G6CxoJlC,IAEAuqB,EAAA,SAAAC,GAEA,SAAAD,EAAAE,EAAAC,GACA,IAAAC,EAsBA,OAtBArsB,iBAAAiC,KAAAgqB,IACAI,EAAA1rB,WAAAsB,KAAAgqB,EAAA,CAAAE,EAAAC,KAEAE,UAAA,UAAA/rB,QAAA4rB,GAAAA,EAAA,CAAA,EAEAE,EAAAzT,YAAA,mBAKAyT,EAAAE,WAAAF,EAAAG,uBAIAH,EAAAI,OACA,CACA,QACA,QACA,OACA,OACA,QACA,SACAJ,CACA,CAEA,OAAA/qB,UAAA2qB,EAAAC,GAAA/rB,cAAA8rB,EAAA,CAAA,CAAA/rB,IAAA,uBAAAlB,MACA,WAEA,IAAA0tB,GAAA,IAAAjT,MAAAoI,UAWA,MAVA,0BAAA1V,QAAA,SACA,SAAAwgB,GAIA,IAAAC,GAAAF,EAAA,GAAA7nB,KAAAgoB,UAAA,GAAA,EAGA,OAFAH,EAAA7nB,KAAAuY,MAAAsP,EAAA,KAEA,KAAAC,EAAAC,EAAA,EAAAA,EAAA,GAAA9uB,SAAA,GACA,GAEA,GAAA,CAAAoC,IAAA,aAAAlB,MAEA,WAEA,GACA,CAAAkB,IAAA,QAAAlB,MAEA,SAAA8tB,EAAAC,GAEA9qB,KAAA4L,MAAA,QAAAif,EAAAC,EACA,GAAA,CAAA7sB,IAAA,QAAAlB,MAEA,SAAA8tB,EAAAC,GAEA9qB,KAAA4L,MAAA,QAAAif,EAAAC,EACA,GAAA,CAAA7sB,IAAA,OAAAlB,MAEA,SAAA8tB,EAAAC,GAEA9qB,KAAA4L,MAAA,OAAAif,EAAAC,EACA,GAAA,CAAA7sB,IAAA,OAAAlB,MAEA,SAAA8tB,EAAAC,GAEA9qB,KAAA4L,MAAA,OAAAif,EAAAC,EACA,GAAA,CAAA7sB,IAAA,QAAAlB,MAEA,SAAA8tB,EAAAC,GAEA9qB,KAAA4L,MAAA,QAAAif,EAAAC,EACA,GAAA,CAAA7sB,IAAA,QAAAlB,MAEA,SAAA8tB,EAAAC,GAEA9qB,KAAA4L,MAAA,QAAAif,EAAAC,EACA,GAAA,CAAA7sB,IAAA,QAAAlB,MAEA,SAAAguB,EAAAF,EAAAC,GAGA,OAAA,CACA,IAAA,CApFA,CAFA3qB,EAAA,6BAAA6qB,yBAyFAtrB,EAAAD,QAAAuqB,C7CkpJA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAAS7pB,EAAQT,EAAOD,G8C1uJhE,IAEAwrB,EASAvrB,EAAAD,UATAwrB,EAAA,CAAA,GAEAla,QAAA5Q,EAAA,iCAEA8qB,EAAA,QAAAA,EAAAla,QAEAka,E9CuvJA,EAAE,CAAC,gCAAgC,KAAK,GAAG,CAAC,SAAS9qB,EAAQT,EAAOD,G+CvwJpEC,EAAAD,QAAA,CACA,CACAyrB,WAAA,UACAC,WAAA,UACAC,MAAA,S/C2wJA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASjrB,EAAQT,EAAOD,GgD/wJlC,IAEA4rB,EAAA,SAAAC,GAEA,SAAAD,EAAAnB,EAAAqB,GACA,IAAAC,EAAAztB,iBAAAiC,KAAAqrB,IACAG,EAAA9sB,WAAAsB,KAAAqrB,EAAA,CAAAnB,KAEAuB,iBAAAD,EAAAnB,UAAAxsB,eAAA,mBAAA,GAAA2tB,EAAAnB,UAAAqB,eACAF,EAAAG,sBAAAH,EAAAnB,UAAAxsB,eAAA,wBAAA,GAAA2tB,EAAAnB,UAAAuB,oBAEAJ,EAAAK,gBAAAL,EAAAnB,UAAAxsB,eAAA,WAAA,IAAAwF,OAAAmoB,EAAAnB,UAAAyB,QAAA,KACAP,EAAAlB,UAAAxsB,eAAA,WAAA,IAAAwF,OAAAkoB,EAAAlB,UAAA0B,QAAA,KACA,sBAGAP,EAAAQ,0BAAAR,EAAAnB,UAAAxsB,eAAA,4BAAA2tB,EAAAnB,UAAA4B,wBACAT,EAAAU,yBAAAV,EAAAnB,UAAAxsB,eAAA,2BAAA2tB,EAAAnB,UAAA8B,uBAGAX,EAAAY,YAAA,CAAA,EACA,IAAA,IAAAhuB,EAAA,EAAAA,GAAAotB,EAAAhB,OAAAhuB,OAAA4B,IAEAotB,EAAAY,YAAAZ,EAAAhB,OAAApsB,IAAA,IAAAiF,OAAAmoB,EAAAhB,OAAApsB,GAAA,MAAAiF,OAAAmoB,EAAAK,gBAAA,MAEAL,EAAAC,kBAGAD,EAAAY,YAAAZ,EAAAhB,OAAApsB,IAAA,IAAAotB,EAAAY,YAAAZ,EAAAhB,OAAApsB,KAEA,OAAAotB,CACA,CAAA,OAAAnsB,UAAAgsB,EAAAC,GAAAptB,cAAAmtB,EAAA,CAAA,CAAAptB,IAAA,QAAAlB,MAEA,SAAAsvB,EAAAxB,EAAAyB,GAEA,IAAAC,EAAA,GACAvsB,KAAAyrB,iBAAAzrB,KAAA2rB,qBAEAY,GAAA,IAAA/U,MAAAmJ,cAEA3gB,KAAAyrB,kBAEAc,GAAA,IAAA/U,MAGA,IAAAgV,EAAA,GAAAnpB,OAAAkpB,GAAAlpB,OAAArD,KAAAosB,YAAAC,IAAAhpB,OAAAwnB,GAcA,OAZA7qB,KAAAgsB,0BAEAjb,QAAA0b,IAAAD,GAIAxsB,KAAAksB,8BAAA,IAAAI,GAEAvb,QAAA0b,IAAAC,KAAApmB,UAAAgmB,EAAA,KAAA,IAIAE,CACA,IAAA,CA1DA,CAFArsB,EAAA,8BA+DAT,EAAAD,QAAA4rB,ChDixJA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAASlrB,EAAQT,EAAOD,GiDh1JhE,IAAAktB,EAAAxsB,EAAA,iCACAysB,EAAAzsB,EAAA,MACA0sB,EAAA1sB,EAAA,QAEA2sB,EAAA,SAAAC,GAEA,SAAAD,EAAA5C,EAAAqB,GACA,IAAAyB,EAqBA,OArBAjvB,iBAAAiC,KAAA8sB,IACAE,EAAAtuB,WAAAsB,KAAA8sB,EAAA,CAAA5C,EAAAqB,KAGA0B,eAAAD,EAAA3C,UAAAxsB,eAAA,QAAAmvB,EAAA3C,UAAAhP,KAAA,KAAAhY,OAAA2pB,EAAAnB,gBAAA,QACAmB,EAAAE,YAAAL,EAAAM,UAAAH,EAAAC,gBAEAD,EAAAI,qBAAAJ,EAAA3C,UAAAxsB,eAAA,qBAAAmvB,EAAA3C,UAAAgD,kBACA,CACA1G,MAAA,IACAlb,SAAA,QAGAuhB,EAAAM,WAAAV,EAAAW,kBAAAP,EAAAE,YAAAF,EAAAI,sBAEAJ,EAAAQ,iBAAA,EAEAR,EAAAS,eAAA,GACAT,EAAAU,iBAAA,GAEAV,EAAAW,6BAAA,WAAA,EACAX,EAAAY,2BAAA,WAAA,EAAAZ,CACA,CAAA,OAAA3tB,UAAAytB,EAAAC,GAAA7uB,cAAA4uB,EAAA,CAAA,CAAA7uB,IAAA,cAAAlB,MAEA,SAAA8wB,GAEA,IAAAC,EAAA,mBAAAD,EAAAA,EAAA,WAAA,EACA,GAAA7tB,KAAAstB,WAGA,OADAttB,KAAAstB,WAAAvoB,IAAA,MACA/E,KAAAstB,WAAArsB,KAAA,SAAA6sB,EAAAxwB,KAAA0C,MAEA,GAAA,CAAA/B,IAAA,+BAAAlB,MAEA,SAAAgxB,GAEA/tB,KAAAwtB,iBAAA,EACA,IAAAQ,EAAA,mBAAAD,EAAAA,EAAA/tB,KAAA4tB,2BAEA,KAAA5tB,KAAAytB,eAAAjxB,OAAA,GAMA,OAAAwxB,IAJAhuB,KAAAiuB,qBAAAD,EAMA,GAAA,CAAA/vB,IAAA,uBAAAlB,MAEA,SAAAgxB,GAEA,IAAA/tB,KAAAwtB,gBACA,CAEAxtB,KAAAwtB,iBAAA,EAEA,IAAAQ,EAAA,mBAAAD,EAAAA,EAAA/tB,KAAA4tB,2BAGAM,EAAAluB,KAAAytB,eACAU,EAAAnuB,KAAA0tB,iBAGA1tB,KAAAytB,eAAA,GACAztB,KAAA0tB,iBAAA,GAKA,IAFA,IAAAU,EAAA,GAEAhwB,EAAA,EAAAA,EAAA8vB,EAAA1xB,OAAA4B,IAGAgwB,GAAA,GAAA/qB,OAAA6qB,EAAA9vB,GAAA,OACA,IAAA+vB,EAAA/vB,KAEAgwB,GAAA,GAAA/qB,OAAA8qB,EAAA/vB,GAAA,OAIA,GAAA4B,KAAAstB,WAAA1hB,MAAAwiB,EAAA,QAOA,OAAApuB,KAAAquB,6BAAAL,GAJAhuB,KAAAstB,WAAArsB,KAAA,QAAAjB,KAAAquB,6BAAA/wB,KAAA0C,KAAAguB,GAMA,CACA,GAAA,CAAA/vB,IAAA,QAAAlB,MAEA,SAAAsvB,EAAAxB,EAAAyB,GAEA,IAAAE,EAAArvB,KAAAW,gBAAAgvB,EAAA3uB,WAAA,QAAA6B,MAAAlE,KAAAkE,KAAAqsB,EAAAxB,EAAAyB,GAGAtsB,KAAAytB,eAAAxrB,KAAAuqB,QAGA,IAAAF,EAEAtsB,KAAA0tB,iBAAAzrB,KAAAyqB,KAAApmB,UAAAgmB,EAAA,KAAA,IAIAtsB,KAAA0tB,iBAAAzrB,MAAA,GAGAjC,KAAAiuB,sBACA,IAAA,CAhHA,CAAAtB,GAmHAjtB,EAAAD,QAAAqtB,CjDk1JA,EAAE,CAAC,gCAAgC,GAAGwB,GAAK,GAAGjT,KAAO,MAAM,GAAG,CAAC,SAASlb,EAAQT,EAAOD,GkDr8JvF,IAEA8uB,EAAA,SAAAC,GAEA,SAAAD,EAAAE,EAAAhY,GACA,IAAAiY,EAAA3wB,iBAAAiC,KAAAuuB,IACAG,EAAAhwB,WAAAsB,KAAAuuB,EAAA,CAAAE,EAAAhY,KAEAE,YAAA,UAEA,IAAAgY,EAAA,WAAArwB,QAAAmwB,GAAAA,EAAA,CAAA,EAyBA,OAxBAC,EAAArE,UAAAsE,EAEAD,EAAAE,WAAAzuB,EAAA,wCAEAuuB,EAAAG,mBAAAF,EAAA9wB,eAAA,cAAA8wB,EAAAG,WAAA3uB,EAAA,mCAEAuuB,EAAAK,WAAA,GAIAL,EAAAM,aAAA,CAAA,EAGAN,EAAAO,iBAAA,CAAA,EAEAP,EAAAQ,gBAAA,GACAR,EAAAS,gBAAA,GACAT,EAAAU,eAAA,GACAV,EAAAW,eAAA,GACAX,EAAAY,gBAAA,GACAZ,EAAAa,gBAAA,GAEAb,EAAAc,eAAA,SAAAzW,GAAA,OAAAA,CAAA,EAEA2V,EAAAe,KAAA,iBAAAd,EAAA5C,QAAA4C,EAAA5C,QAAA,UAAA2C,CACA,CAAA,OAAArvB,UAAAkvB,EAAAC,GAAAtwB,cAAAqwB,EAAA,CAAA,CAAAtwB,IAAA,YAAAlB,MAEA,SAAA2yB,EAAArD,GAGA,GAAArsB,KAAAivB,iBAAApxB,eAAA6xB,EAAApF,YAEA,OAAA,EAQA,OAJAtqB,KAAA+uB,WAAA9sB,KAAAytB,GACA1vB,KAAAivB,iBAAAS,EAAApF,aAAA,EAGA+B,GAEA,IAAA,QACArsB,KAAAkvB,gBAAAjtB,KAAAytB,GACA,IAAA,QACA1vB,KAAAmvB,gBAAAltB,KAAAytB,GACA,IAAA,OACA1vB,KAAAovB,eAAAntB,KAAAytB,GACA,IAAA,OACA1vB,KAAAqvB,eAAAptB,KAAAytB,GACA,IAAA,QACA1vB,KAAAsvB,gBAAArtB,KAAAytB,GACA,IAAA,QACA1vB,KAAAuvB,gBAAAttB,KAAAytB,GAIA,OAAA,CACA,GAAA,CAAAzxB,IAAA,oBAAAlB,MAEA,SAAA4yB,GAIA3vB,KAAAwvB,eAFA,mBAAAG,EAEAA,EAIA,SAAA5W,GAAA,OAAAA,CAAA,CAEA,GAAA,CAAA9a,IAAA,QAAAlB,MAEA,SAAA6yB,EAAA7W,GAGA,IADA,IAAA8W,EAAA7vB,KAAAwvB,eAAAzW,GACA3a,EAAA,EAAAA,EAAA4B,KAAAkvB,gBAAA1yB,OAAA4B,IAEA4B,KAAAkvB,gBAAA9wB,GAAA0xB,MAAAF,EAAAC,EAEA,GAAA,CAAA5xB,IAAA,QAAAlB,MAEA,SAAA6yB,EAAA7W,GAGA,IADA,IAAA8W,EAAA7vB,KAAAwvB,eAAAzW,GACA3a,EAAA,EAAAA,EAAA4B,KAAAmvB,gBAAA3yB,OAAA4B,IAEA4B,KAAAmvB,gBAAA/wB,GAAA2xB,MAAAH,EAAAC,EAEA,GAAA,CAAA5xB,IAAA,OAAAlB,MAEA,SAAA6yB,EAAA7W,GAGA,IADA,IAAA8W,EAAA7vB,KAAAwvB,eAAAzW,GACA3a,EAAA,EAAAA,EAAA4B,KAAAovB,eAAA5yB,OAAA4B,IAEA4B,KAAAovB,eAAAhxB,GAAA4xB,KAAAJ,EAAAC,EAEA,GAAA,CAAA5xB,IAAA,OAAAlB,MAEA,SAAA6yB,EAAA7W,GAGA,IADA,IAAA8W,EAAA7vB,KAAAwvB,eAAAzW,GACA3a,EAAA,EAAAA,EAAA4B,KAAAqvB,eAAA7yB,OAAA4B,IAEA4B,KAAAqvB,eAAAjxB,GAAA2pB,KAAA6H,EAAAC,EAEA,GAAA,CAAA5xB,IAAA,QAAAlB,MAEA,SAAA6yB,EAAA7W,GAGA,IADA,IAAA8W,EAAA7vB,KAAAwvB,eAAAzW,GACA3a,EAAA,EAAAA,EAAA4B,KAAAsvB,gBAAA9yB,OAAA4B,IAEA4B,KAAAsvB,gBAAAlxB,GAAA4S,MAAA4e,EAAAC,EAEA,GAAA,CAAA5xB,IAAA,QAAAlB,MAEA,SAAA6yB,EAAA7W,GAGA,IADA,IAAA8W,EAAA7vB,KAAAwvB,eAAAzW,GACA3a,EAAA,EAAAA,EAAA4B,KAAAuvB,gBAAA/yB,OAAA4B,IAEA4B,KAAAuvB,gBAAAnxB,GAAA6xB,MAAAL,EAAAC,EAEA,GAAA,CAAA5xB,IAAA,aAAAlB,MAEA,WAGA,IAAA,IAAAqB,EAAA,EAAAA,EAAA4B,KAAA6uB,mBAAAryB,OAAA4B,IACA,CACA,IAAA8xB,EAAArzB,OAAAszB,OAAA,CAAAjF,WAAA,UAAAC,WAAA,UAAAC,MAAA,QAAAprB,KAAA6uB,mBAAAzwB,IAEA4B,KAAA4uB,WAAA/wB,eAAAqyB,EAAAhF,YAMAlrB,KAAAowB,UAAA,IAAApwB,KAAA4uB,WAAAsB,EAAAhF,YAAAgF,EAAAlwB,MAAAkwB,EAAA9E,OAJAra,QAAA0b,IAAA,sEAAAppB,OAAAqpB,KAAApmB,UAAA4pB,IAMA,CAGA,IAAA,IAAA9xB,EAAA,EAAAA,EAAA4B,KAAA+uB,WAAAvyB,OAAA4B,IAEA4B,KAAA+uB,WAAA3wB,GAAAiyB,YAEA,GAAA,CAAApyB,IAAA,UAAAlB,MAEA,SAAA6yB,EAAA7W,GAEA,IAAAuX,OAAA,IAAAV,EAAAA,EAAA,OACAW,EAAA,IAAA/Y,KACAxX,KAAAgwB,KAAA,GAAA3sB,OAAAitB,EAAA,KAAAjtB,OAAAktB,EAAA,YAAAltB,QAAAktB,EAAA,KAAAxX,EACA,GAEA,CAAA9a,IAAA,eAAAlB,MACA,WAEA,OAAA,IAAAya,IACA,GAAA,CAAAvZ,IAAA,eAAAlB,MAEA,SAAAyzB,GAGA,OADA,IAAAhZ,KACAgZ,CACA,GAEA,CAAAvyB,IAAA,eAAAlB,MACA,SAAA0zB,EAAAb,EAAA7W,GAEA,IAAAuX,OAAA,IAAAV,EAAAA,EAAA,mBAGAc,GAFApyB,QAAAya,IAEA,IAAAvB,MAEAxX,KAAAgwB,KAAA,GAAA3sB,OAAAitB,EAAA,sBAAAjtB,QAAAqtB,EAAA,YAAArtB,OAAAotB,EAAA,OAAA1X,EACA,GAAA,CAAA9a,IAAA,oBAAAlB,MAEA,SAAA0zB,EAAAb,EAAA7W,GAEA,IAAAuX,OAAA,IAAAV,EAAAA,EAAA,mBAEAc,GAAA,IAAAlZ,KAEAmZ,EAAA5hB,SAAA0hB,EAAA,KACAG,EAAA7hB,SAAA0hB,EAAA,IAAA,IACAI,EAAA9hB,SAAA0hB,EAAA,IAAA,IACAK,EAAA/hB,SAAA0hB,EAAA,MAEAE,EAAAA,EAAA,GAAA,KAAAA,EAAAA,EAAA,IAAA,IAAAA,EAAAA,EACAC,EAAAA,EAAA,GAAA,IAAAA,EAAAA,EACAC,EAAAA,EAAA,GAAA,IAAAA,EAAAA,EACAC,EAAAA,EAAA,GAAA,IAAAA,EAAAA,EAEA9wB,KAAAgwB,KAAA,GAAA3sB,OAAAitB,EAAA,sBAAAjtB,QAAAqtB,EAAA,YAAArtB,OAAAotB,EAAA,YAAAptB,OAAAytB,EAAA,KAAAztB,OAAAwtB,EAAA,KAAAxtB,OAAAutB,EAAA,KAAAvtB,OAAAstB,EAAA,KAAA5X,EACA,GAAA,CAAA9a,IAAA,uBAAAlB,MAEA,SAAAg0B,EAAAnB,EAAA7W,GAEA/Y,KAAAgxB,aAAAhxB,KAAAixB,aAAAF,GAAAnB,EAAA7W,EACA,GAAA,CAAA9a,IAAA,4BAAAlB,MAEA,SAAAg0B,EAAAnB,EAAA7W,GAEA/Y,KAAAkxB,kBAAAlxB,KAAAixB,aAAAF,GAAAnB,EAAA7W,EACA,IAAA,CAxNA,CAFA5Y,EAAA,6BAAA6qB,yBA6NAtrB,EAAAD,QAAA8uB,EACA7uB,EAAAD,QAAA0xB,gBAAAhxB,EAAA,6BACAT,EAAAD,QAAA2xB,mBAAAjxB,EAAA,iCACAT,EAAAD,QAAA4xB,oBAAAlxB,EAAA,uClD48JA,EAAE,CAAC,4BAA4B,GAAG,uCAAuC,GAAG,kCAAkC,GAAG,gCAAgC,GAAG,uCAAuC,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAASA,EAAQT,EAAOD,GmDhrK3P,IAKA6xB,EAAA,WAyCA,OAAApzB,eApCA,SAAAozB,EAAA/a,EAAAgb,EAAA9a,GACA1Y,iBAAAiC,KAAAsxB,GAEA,WAAAhzB,QAAAiY,IAAAA,EAAAib,QAEAxxB,KAAAyxB,aAAAlb,GAIAvW,KAAA0xB,OAAA,EAIA1xB,KAAA0xB,OAEA1xB,KAAA2xB,KAAApb,EAAAqb,UACA5xB,KAAAua,QAAA,WAAAjc,QAAAizB,GAAAA,EACA,CAAA,IAMAvxB,KAAAua,QAAA,WAAAjc,QAAAiY,IAAAA,EAAAib,QACA,WAAAlzB,QAAAizB,GAAAA,EACA,CAAA,EAFAhb,EAGAvW,KAAA2xB,KAAA,YAAAtuB,OAAAT,KAAAuY,MAAA,MAAAvY,KAAAgoB,SAAA,OAIA5qB,KAAA2W,YAAA,WAAAtT,OAAArD,KAAA2xB,MAGA3xB,KAAAqX,KAAA,iBAAAZ,EAAAA,EACAzW,KAAA0xB,OAAA,iBAAAH,EAAA,GAAAluB,OACArD,KAAA2xB,MADAJ,CAEA,GAAA,CAAA,CAAAtzB,IAAA,eAAAlB,MAEA,SAAAwZ,GAEA,GAAA,WAAAjY,QAAAiY,KAAAA,EAAAib,QACA,CACA,IAAAK,EAAA,sHAAAxuB,OAAA/E,QAAAiY,GAAA,OAEA,OADAxF,QAAA0b,IAAAoF,GACA,IAAAxxB,MAAAwxB,EACA,CAqBA,OAnBA7xB,KAAA0xB,QAEA1xB,KAAA0xB,MAAAnb,GAGAvW,KAAAysB,MAEAzsB,KAAAysB,IAAAzsB,KAAA0xB,MAAAI,SAEA9xB,KAAA+xB,WAEA/xB,KAAA+xB,SAAA/xB,KAAA0xB,MAAAK,UAGA/xB,KAAAgyB,cAEAhyB,KAAAgyB,YAAAhyB,KAAA0xB,MAAAM,cAGA,CACA,IAAA,CAxEA,GAwEAr1B,iBAxEA20B,EAAA,kBA0EA,GAGA5xB,EAAAD,QAAA6xB,EAGA5xB,EAAAD,QAAAurB,wBAAAsG,CnDkrKA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASnxB,EAAQT,EAAOD,GoDvwKlCC,EAAAD,QAAA,CACAssB,QAAA,sBACAkG,eAAA,QAEAC,YAAA,EAEApD,WACA,CACA,CACA1D,MAAA,UpD6wKA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASjrB,EAAQT,EAAOD,IAClC,SAAW0yB,IAAS,WqD9wKpB,IAAAC,EAAAjyB,EAAA,aAEAkyB,EAAA,WA4BA,OAAAn0B,eA1BA,SAAAm0B,EAAAC,GACAv0B,iBAAAiC,KAAAqyB,GAEAryB,KAAAuyB,kBAAA,IAAAH,EAGApyB,KAAAuyB,kBAAAC,WAAA,KAAA,KACA,SAAAC,GAEA,IAAAC,EAAAD,EAAA1gB,OAEA4gB,EAAAD,EAAA7tB,QAAA,KAEA+tB,EAAAD,GAAA,EAAAD,EAAAtoB,UAAAuoB,EAAA,GAAA,GAEAE,EAAAF,GAAA,EAAAD,EAAAtoB,UAAA,EAAAuoB,GAAAD,EAEA,OAAAP,EAAAW,IAAAj1B,eAAAg1B,GAEAV,EAAAW,IAAAD,GAIAD,CAEA,GACA,GAAA,CAAA,CAAA30B,IAAA,eAAAlB,MAEA,SAAAg2B,GAEA,OAAA/yB,KAAAuyB,kBAAAS,YAAAD,EACA,IAAA,CAjCA,GAoCArzB,EAAAD,QAAA4yB,CrD0xKC,GAAEv2B,KAAKkE,KAAM,GAAElE,KAAKkE,KAAKG,EAAQ,YAElC,EAAE,CAAC8yB,SAAW,IAAIC,UAAY,MAAM,GAAG,CAAC,SAAS/yB,EAAQT,EAAOD,GsDn0KhE,IAAA0W,EAAAhW,EAAA,6BAAA6qB,wBAEAmI,EAAAhzB,EAAA,yCAEAizB,EAAA,SAAAC,GAEA,SAAAD,EAAA3E,EAAAhY,GACA,IAAA6c,EAAAv1B,iBAAAiC,KAAAozB,IACAE,EAAA50B,WAAAsB,KAAAozB,EAAA,CAAA3E,EAAAhY,KAEAE,YAAA,kBAGA2c,EAAAC,0BAAA,IAAAJ,EAGAG,EAAAE,wBAAA/E,GAEA6E,EAAA,QAAAA,EAAAG,uBAGA,IAAA9E,EAAA2E,EAAAI,MAAAjF,EAAA6E,EAAAG,wBAKA,GAFAH,EAAAK,KAAAjH,KAAAriB,MAAAqiB,KAAApmB,UAAAqoB,IAEAA,EAAAiF,kBAEA,IAGAjF,EAAA2E,EAAAI,MAAAvzB,EAAAwuB,EAAAiF,mBAAAjF,EACA,CACA,MAAAkF,GAIA9iB,QAAA0b,IAAA,2HACA1b,QAAA0b,IAAA,2BAAAoH,EACA,CAGA,GAAAlF,EAAAuD,WAEA,IAGAvD,EAAA2E,EAAAI,MAAAvzB,EAAAwuB,EAAAuD,YAAAvD,EACA,CACA,MAAAkF,GAIA9iB,QAAA0b,IAAA,mHACA1b,QAAA0b,IAAA,2BAAAoH,EACA,CAGA,OAAAP,EAAAQ,SAAAnF,EAAA2E,CACA,CAEA,OAAAj0B,UAAA+zB,EAAAC,GAAAn1B,cAAAk1B,EAAA,CAAA,CAAAn1B,IAAA,uBAAAlB,MACA,WAEA,OAAA2vB,KAAAriB,MAAAqiB,KAAApmB,UAAAnG,EAAA,6BACA,GAEA,CAAAlC,IAAA,0BAAAlB,MACA,SAAA0xB,GAGAzuB,KAAA+zB,uBAAAtF,IAAA,IAAAA,EAAAuF,gBACA,GAEA,CAAA/1B,IAAA,cAAAlB,MACA,SAAA0xB,GAEA,IAAA,IAAAwF,KAAAxF,EAEA,WAAAnwB,QAAAmwB,EAAAwF,IAEAj0B,KAAAk0B,YAAAzF,EAAAwF,IAEA,iBAAAxF,EAAAwF,KAEAxF,EAAAwF,GAAAj0B,KAAAuzB,0BAAAY,aAAA1F,EAAAwF,IAGA,GAEA,CAAAh2B,IAAA,YAAAlB,MAGA,SAAAA,GAEA,MAAA,WAAAuB,QAAAvB,KAAAb,MAAAK,QAAAQ,EACA,GAEA,CAAAkB,IAAA,oBAAAlB,MAGA,SAAAq3B,EAAAvnB,GACA,IAAAwnB,EAAAr0B,KACA,GAAA6M,GAAA7M,KAAAs0B,UAAAznB,GAmBA,OAfAhQ,OAAA2F,KAAAqK,GAAA+T,SAAA,SAAA3iB,GAEA,IAAAs2B,EAAA1nB,EAAA5O,GACA,GAAAo2B,EAAAC,UAAAC,GACA,CACA,IAAAC,EAAAJ,EAAAn2B,GACA,GAAAu2B,GAAAH,EAAAC,UAAAE,GAIA,YADAH,EAAAI,kBAAAD,EAAAD,EAGA,CACAH,EAAAn2B,GAAAs2B,CACA,IACAH,CACA,GAEA,CAAAn2B,IAAA,QAAAlB,MACA,SAAA23B,EAAAC,GAGA,IAAAC,EAAA,WAAAt2B,QAAAo2B,GAAAA,EAAA,CAAA,EAEAG,EAAA,WAAAv2B,QAAAq2B,GAAAA,EAAA30B,KAAA8zB,SAGAgB,EAAApI,KAAAriB,MAAAqiB,KAAApmB,UAAAsuB,IAUA,OATAC,EAAA70B,KAAAy0B,kBAAAI,EAAAC,GAEA90B,KAAA+zB,uBAEA/zB,KAAAk0B,YAAAW,GAGA70B,KAAAwzB,wBAAAqB,GAEAA,CACA,GAEA,CAAA52B,IAAA,OAAAlB,MACA,SAAA23B,GAGA,IAAAE,EAAA,WAAAt2B,QAAAo2B,GAAAA,EAAA,CAAA,EAGAI,EAAApI,KAAAriB,MAAAqiB,KAAApmB,UAAAsuB,IAIA,OAFA50B,KAAA8zB,SAAA9zB,KAAAy0B,kBAAAK,EAAA90B,KAAA8zB,UAEA9zB,KAAA8zB,QACA,IAAA,CA3JA,CAAA3d,GAoKAzW,EAAAD,QAAA2zB,EACA1zB,EAAAD,QAAA,IANA,SAAAgvB,GAEA,OAAA,IAAA2E,EAAA3E,EACA,CtDg1KA,EAAE,CAAC,2BAA2B,GAAG,wCAAwC,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAAStuB,EAAQT,EAAOD,GuDn/KzI,IACAs1B,EAAA,WAWA,OAAA72B,eATA,SAAA62B,IACAh3B,iBAAAiC,KAAA+0B,GAIA/0B,KAAAg1B,gBAAA,oBAAAC,QAAAA,OAAAD,iBAAAC,OAAAD,gBAAA13B,KAAA23B,SACA,oBAAAC,UAAA,mBAAAr1B,OAAAq1B,SAAAF,iBAAAE,SAAAF,gBAAA13B,KAAA43B,SACA,GAEA,CAAA,CAAAj3B,IAAA,sBAAAlB,MACA,WAEA,IAAAo4B,EAAA,IAAAvwB,WAAA,IAGA,OADA5E,KAAAg1B,gBAAAG,GACAA,CACA,GAEA,CAAAl3B,IAAA,sBAAAlB,MACA,WAMA,IAFA,IAEAq4B,EAFAD,EAAA,IAAAvwB,WAAA,IAEAxG,EAAA,EAAAA,EAAA,GAAAA,IAEA,EAAAA,IAEAg3B,EAAA,WAAAxyB,KAAAgoB,UAGAuK,EAAA/2B,GAAAg3B,MAAA,EAAAh3B,IAAA,GAAA,IAGA,OAAA+2B,CACA,GAAA,CAAAl3B,IAAA,WAAAlB,MAEA,WAEA,OAAAiD,KAAAg1B,gBAEAh1B,KAAAq1B,sBAIAr1B,KAAAs1B,qBAEA,IAAA,CAlDA,GAqDA51B,EAAAD,QAAAs1B,CvDigLA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS50B,EAAQT,EAAOD,GwD9jLlC,IAAA0W,EAAAhW,EAAA,6BAAA6qB,wBAEAuK,EAAAp1B,EAAA,0BAEAq1B,EAAA,SAAAC,GAEA,SAAAD,EAAA/G,EAAAhY,GACA,IAAAif,EAAA33B,iBAAAiC,KAAAw1B,IACAE,EAAAh3B,WAAAsB,KAAAw1B,EAAA,CAAA/G,EAAAhY,KAEAE,YAAA,OAIA+e,EAAAC,kBAAA,WAAAr3B,QAAAmwB,KAAAA,EAAA5wB,eAAA,oBAAA,GAAA4wB,EAAAmH,eAGAF,EAAAG,YAAA,WAAAv3B,QAAAmwB,IAAAA,EAAA5wB,eAAA,cAAA4wB,EAAAqH,WAAA,EAAA,EAEAJ,EAAAK,sBAAA,WAAAz3B,QAAAmwB,IAAAA,EAAA5wB,eAAA,kBAAA4wB,EAAAuH,eAAA,EAAA,iEAEAN,EAAAO,oBAAA,IAAAV,EAGAG,EAAAQ,WAAA,GACA,IAAA,IAAA93B,EAAA,EAAAA,EAAA,MAAAA,EAEAs3B,EAAAQ,WAAA93B,IAAAA,EAAA,KAAAvC,SAAA,IAAAmT,OAAA,GACA,OAAA0mB,CACA,CAEA,OAAAr2B,UAAAm2B,EAAAC,GAAAv3B,cAAAs3B,EAAA,CAAA,CAAAv3B,IAAA,cAAAlB,MACA,SAAAo5B,GAEA,IAAA/3B,EAAA,EAEA,MAAA,CACA4B,KAAAk2B,WAAAC,EAAA/3B,MAAA4B,KAAAk2B,WAAAC,EAAA/3B,MACA4B,KAAAk2B,WAAAC,EAAA/3B,MAAA4B,KAAAk2B,WAAAC,EAAA/3B,MAAA,IACA4B,KAAAk2B,WAAAC,EAAA/3B,MAAA4B,KAAAk2B,WAAAC,EAAA/3B,MAAA,IACA4B,KAAAk2B,WAAAC,EAAA/3B,MAAA4B,KAAAk2B,WAAAC,EAAA/3B,MAAA,IACA4B,KAAAk2B,WAAAC,EAAA/3B,MAAA4B,KAAAk2B,WAAAC,EAAA/3B,MAAA,IACA4B,KAAAk2B,WAAAC,EAAA/3B,MAAA4B,KAAAk2B,WAAAC,EAAA/3B,MAAA4B,KAAAk2B,WAAAC,EAAA/3B,MAAA4B,KAAAk2B,WAAAC,EAAA/3B,MAAA4B,KAAAk2B,WAAAC,EAAA/3B,MAAA4B,KAAAk2B,WAAAC,EAAA/3B,OACAuG,KAAA,GACA,GAEA,CAAA1G,IAAA,iBAAAlB,MACA,WAEA,IAAAb,MAAA,IAAA,IACAk6B,EAAAp2B,KAAAi2B,oBAAAI,WAMA,OAHAD,EAAA,GAAA,GAAAA,EAAA,GAAA,GACAA,EAAA,GAAA,GAAAA,EAAA,GAAA,IAEAp2B,KAAAs2B,YAAAF,EACA,GAEA,CAAAn4B,IAAA,iBAAAlB,MACA,WAIA,IAFA,IAAAw5B,EAAA,GAEAn4B,EAAA,EAAAA,EAAA4B,KAAA61B,YAAAz3B,IAEAm4B,GAAAv2B,KAAA+1B,sBAAArvB,OAAA9D,KAAAuY,MAAAvY,KAAAgoB,UAAA5qB,KAAA+1B,sBAAAv5B,OAAA,KAGA,OAAA+5B,CACA,GAEA,CAAAt4B,IAAA,UAAAlB,MACA,WAEA,OAAAiD,KAAA21B,gBAEA31B,KAAAw2B,iBAIAx2B,KAAAy2B,gBAEA,IAAA,CA/EA,CAAAtgB,GAyFAzW,EAAAD,QAAA+1B,EACA91B,EAAAD,QAAA,IAPA,SAAAgvB,GAEA,OAAA,IAAA+G,EAAA/G,EACA,CxDykLA,EAAE,CAAC,yBAAyB,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAAStuB,EAAQT,EAAOD,GyDlqL5F,IAAAi3B,EAAAv2B,EAAA,kBACAw2B,EAAAx2B,EAAA,cACAy2B,EAAAz2B,EAAA,aAEA02B,EAAA12B,EAAA,6BAEA22B,EAAA,SAAAC,GAEA,SAAAD,EAAArI,GACA,IAAAuI,EAoEA,OApEAj5B,iBAAAiC,KAAA82B,IACAE,EAAAt4B,WAAAsB,KAAA82B,EAAA,CAAArI,KAGA9X,YAAA,iBAGAqgB,EAAAC,aAAA,GAEAD,EAAAhF,YAAA,CAAA,EAEAgF,EAAAjF,SAAA,CAAA,EAGAiF,EAAAE,eAAA,CAAA,EAGAF,EAAAG,4BAAA,EAGAH,EAAAI,aAAA,EAMAJ,EAAAK,gBAAA,IAAAX,EAAAjI,GACAuI,EAAAK,gBAAAL,EAAAK,gBAEAL,EAAArF,KAAA,IAAAgF,EAAAK,EAAAK,gBAAAvD,UAEAkD,EAAAlF,QAAA,IAAA8E,EAAAI,EAAAK,gBAAAvD,UACAkD,EAAAlF,QAAAzB,aAKA2G,EAAAM,eAAAN,EAEAA,EAAAO,eAAAP,EAEAA,EAAAvF,aAAAuF,GAKAA,EAAAQ,sCAAAR,EAAArF,MACAqF,EAAAQ,sCAAAR,EAAAlF,SACAkF,EAAAQ,sCAAAR,EAAAK,iBAGAL,EAAAS,6BAAA,kBAAAt3B,EAAA,gDACA62B,EAAAU,eAAA,WAAAv3B,EAAA,yCACA62B,EAAAU,eAAA,eAAAv3B,EAAA,6CACA62B,EAAAU,eAAA,aAAAv3B,EAAA,2CACA62B,EAAAS,6BAAA,QAAAt3B,EAAA,iDACA62B,EAAAS,6BAAA,aAAAt3B,EAAA,2CACA62B,EAAAS,6BAAA,iBAAAt3B,EAAA,+CACA62B,EAAAS,6BAAA,UAAAt3B,EAAA,wCACA62B,EAAAS,6BAAA,OAAAt3B,EAAA,qCACA62B,EAAAU,eAAA,mBAAAv3B,EAAA,iDACA62B,EAAAU,eAAA,aAAAv3B,EAAA,2CACA62B,EAAAU,eAAA,WAAAv3B,EAAA,aACA62B,EAAAU,eAAA,cAAAv3B,EAAA,cACA62B,EAAAS,6BAAA,eAAAt3B,EAAA,6CACA62B,EAAAU,eAAA,qBAAAv3B,EAAA,mDACA62B,EAAAU,eAAA,YAAAv3B,EAAA,0CACA62B,EAAAU,eAAA,YAAAv3B,EAAA,0CACA62B,EAAAU,eAAA,kBAAAv3B,EAAA,gDAAA62B,CACA,CAEA,OAAA33B,UAAAy3B,EAAAC,GAAA74B,cAAA44B,EAAA,CAAA,CAAA74B,IAAA,UAAAZ,IACA,WAEA,OAAA,CACA,GAAA,CAAAY,IAAA,WAAAZ,IAEA,WAEA,OAAA2C,KAAAq3B,gBAAAvD,QACA,GAAA,CAAA71B,IAAA,kBAAAZ,IAEA,WAEA,OAAA2C,KAAAq3B,eACA,GAEA,CAAAp5B,IAAA,UAAAlB,MACA,WAEA,OAAAiD,KAAA2xB,KAAAC,SACA,GAAA,CAAA3zB,IAAA,gBAAAlB,MAEA,WAEA,OAAAiD,KAAA23B,8CAAA,aACA,GAAA,CAAA15B,IAAA,cAAAlB,MAEA,SAAA66B,GAEA,OAAA53B,KAAA23B,8CAAA,WAAAC,EACA,GAEA,CAAA35B,IAAA,iBAAAlB,MACA,SAAA86B,EAAAC,GA6BA,OA3BA93B,KAAAgyB,YAAAn0B,eAAAg6B,GAGA73B,KAAAysB,IAAA1E,KAAA,0BAAA1kB,OAAAw0B,EAAA,4FAKA73B,KAAAgyB,YAAA6F,GAAA,CAAA,EAGA73B,KAAAi3B,aAAAh1B,KAAA41B,IAIA,mBAAAC,GAAAA,EAAAC,eAGA/3B,KAAAk3B,eAAAW,GAAAC,GAKA93B,KAAAysB,IAAAzb,MAAA,kCAAA3N,OAAAw0B,EAAA,oHACA73B,KAAAk3B,eAAAW,GAAAhB,GAGA72B,KAAAk3B,eAAAW,EACA,GAAA,CAAA55B,IAAA,4BAAAlB,MAEA,SAAA86B,EAAAC,GAEA,OAAA93B,KAAAgyB,YAAAn0B,eAAAg6B,GAMA73B,KAAAk3B,eAAAW,GAJA73B,KAAA03B,eAAAG,EAAAC,EAMA,GAEA,CAAA75B,IAAA,+BAAAlB,MACA,SAAA86B,EAAAC,GAGA,OADA93B,KAAA03B,eAAAG,EAAAC,GACA93B,KAAAg4B,2BAAAH,EAAA,CAAA,EAAA,GAAAx0B,OAAAw0B,EAAA,YACA,GAAA,CAAA55B,IAAA,0CAAAlB,MAEA,SAAA86B,EAAAC,GAEA,OAAA93B,KAAAgyB,YAAAn0B,eAAAg6B,GAMA73B,KAAAk3B,eAAAW,GAJA73B,KAAAg4B,2BAAAH,EAAA,CAAA,EAAA,GAAAx0B,OAAAw0B,EAAA,YAMA,GAEA,CAAA55B,IAAA,0CAAAlB,MACA,SAAA86B,EAAAtG,EAAA0G,EAAAC,GAGA,IAAAC,EAAA,IAAAD,EAAAl4B,KAAAuxB,EAAA0G,GAgBA,OAdAj4B,KAAAm3B,6BAEAgB,EAAAn4B,KAAAm3B,2BAAAgB,IAIAn4B,KAAAgyB,YAAA6F,GAAAM,EAAA9gB,MAAA8gB,EAGAn4B,KAAA+xB,SAAAl0B,eAAAg6B,IAEA73B,KAAAo4B,+BAAAP,EAAAM,EAAA9gB,MAGA8gB,CACA,GAAA,CAAAl6B,IAAA,6BAAAlB,MAEA,SAAA86B,EAAAtG,EAAA0G,GAGA,IAAAE,EAAAn4B,KAAA23B,8CAAAE,EAAAtG,EAAA0G,GAWA,OARAj4B,KAAAgyB,YAAA6F,GAAAM,EAAA9gB,MAAA8gB,EAGAn4B,KAAA+xB,SAAAl0B,eAAAg6B,IAEA73B,KAAAo4B,+BAAAP,EAAAM,EAAA9gB,MAGA8gB,CACA,GAAA,CAAAl6B,IAAA,wCAAAlB,MAEA,SAAA86B,EAAAtG,EAAA0G,GAEA,OAAAj4B,KAAA+xB,SAAAl0B,eAAAg6B,GAEA73B,KAAA+xB,SAAA8F,GAIA73B,KAAAg4B,2BAAAH,EAAAtG,EAAA0G,EAEA,GAEA,CAAAh6B,IAAA,gDAAAlB,MACA,SAAA86B,EAAAtG,EAAA0G,GAGA,IAAAE,EAAA,IAAAn4B,KAAAk3B,eAAAW,GAAA73B,KAAAuxB,EAAA0G,GAKA,OAJAj4B,KAAAm3B,6BAEAgB,EAAAn4B,KAAAm3B,2BAAAgB,IAEAA,CACA,GAEA,CAAAl6B,IAAA,wCAAAlB,MACA,SAAAs7B,GAEA,IAAAC,EAAAD,EAAA1hB,YACA4hB,EAAAF,EAAAhhB,KAqBA,OAlBAghB,EAAA5G,aAAAzxB,MAGAA,KAAAgyB,YAAAn0B,eAAAy6B,KAIAt4B,KAAAgyB,YAAAsG,GAAA,CAAA,GAGAt4B,KAAAgyB,YAAAsG,GAAAC,GAAAF,EAGAr4B,KAAA+xB,SAAAl0B,eAAAy6B,IAEAt4B,KAAAo4B,+BAAAE,EAAAC,GAAA,GAGAF,CACA,GAAA,CAAAp6B,IAAA,iCAAAlB,MAEA,SAAA86B,EAAAphB,EAAA+hB,GAGA,IAAAC,OAAA,IAAAD,GAAAA,EAEA,QAAAx4B,KAAAgyB,YAAA6F,GAAAh6B,eAAA4Y,KAEAzW,KAAAnC,eAAAg6B,KAAAY,IAEAz4B,KAAA63B,GAAA73B,KAAAgyB,YAAA6F,GAAAphB,IAEAzW,KAAA+xB,SAAAl0B,eAAAg6B,KAAAY,IAEAz4B,KAAA+xB,SAAA8F,GAAA73B,KAAAgyB,YAAA6F,GAAAphB,KAEA,EAIA,IAAA,CAzRA,CAAAogB,EAAA7L,yBAkSAtrB,EAAAD,QAAAq3B,EACAp3B,EAAAD,QAAA,IANA,SAAAgvB,GAEA,OAAA,IAAAqI,EAAArI,EACA,EAKA/uB,EAAAD,QAAA0xB,gBAAAyF,EAAAzF,gBACAzxB,EAAAD,QAAAi5B,oBAAA7B,EACAn3B,EAAAD,QAAAurB,wBAAA6L,EAAA7L,wBAEAtrB,EAAAD,QAAAyzB,UAAAwD,EAAAxD,SzD0qLA,EAAE,CAAC,yCAAyC,GAAG,wCAAwC,GAAG,yCAAyC,GAAG,6CAA6C,GAAG,+CAA+C,GAAG,8CAA8C,GAAG,+CAA+C,GAAG,8CAA8C,GAAG,mCAAmC,GAAG,2CAA2C,GAAG,wCAAwC,GAAG,2CAA2C,GAAG,iDAAiD,GAAG,yCAAyC,GAAG,uCAAuC,GAAG,sCAAsC,GAAGyF,UAAY,GAAG,YAAY,GAAG,4BAA4B,GAAG,iBAAiB,GAAG,aAAa,GAAGC,SAAW,MAAM,GAAG,CAAC,SAASz4B,EAAQT,EAAOD,G0D99L12B,IAEAo5B,EAAA,SAAAC,GAEA,SAAAD,EAAAtiB,EAAAgb,EAAA9a,GACA,IAAAsiB,EAiBA,OAjBAh7B,iBAAAiC,KAAA64B,IACAE,EAAAr6B,WAAAsB,KAAA64B,EAAA,CAAAtiB,EAAAgb,EAAA9a,KAEAE,YAAA,kBAGAoiB,EAAAC,eAAA,GACAD,EAAAE,kBAAA,GAEAF,EAAAG,wBAAA,EACAH,EAAAI,wBAAA,EAEAJ,EAAAK,UAAA,EAEAL,EAAAM,cAAA,EAEAN,EAAAO,eAAAjtB,EACA0sB,EAAAQ,iBAAA,GAAAR,CACA,CAAA,OAAA15B,UAAAw5B,EAAAC,GAAA56B,cAAA26B,EAAA,CAAA,CAAA56B,IAAA,aAAAlB,MAEA,WAGA,GAAAiD,KAAAs5B,UACA,CAEA,IAAA,IAAAl7B,EAAA,EAAAA,EAAA4B,KAAAu5B,iBAAA/8B,OAAA4B,IAGA4B,KAAAu5B,iBAAAn7B,GAAA4B,KAAAs5B,WAGAt5B,KAAAs5B,eAAAjtB,EACArM,KAAAu5B,iBAAA,EACA,MAEA,GAAAv5B,KAAAg5B,eAAAx8B,OAAA,GAAAwD,KAAAk5B,wBAAAl5B,KAAAq5B,cACA,CACA,IAAAG,EAAAx5B,KAAAg5B,eAAAhxB,QACAhI,KAAAk5B,yBAAA,EACAM,EAAAx5B,KAAAy5B,2BACA,MACA,GAAAz5B,KAAAu5B,iBAAA/8B,OAAA,GAAAwD,KAAAk5B,wBAAA,EACA,CAEA,IAAA,IAAA96B,EAAA,EAAAA,EAAA4B,KAAAu5B,iBAAA/8B,OAAA4B,IAGA4B,KAAAu5B,iBAAAn7B,GAAA4B,KAAAs5B,WAGAt5B,KAAAs5B,eAAAjtB,EACArM,KAAAu5B,iBAAA,EACA,CACA,GAEA,CAAAt7B,IAAA,aAAAlB,MACA,SAAA28B,GAGA15B,KAAAg5B,eAAA/2B,KAAAy3B,GACA15B,KAAA25B,YACA,GAAA,CAAA17B,IAAA,2BAAAlB,MAEA,WAGA,IAAA68B,EACA,CACAC,QAAA,EACAx5B,WAAAgM,EACAytB,aAAA95B,MAEA,OACA,SAAAuZ,GAEA,GAAAqgB,EAAAC,OAGA,MAAA,IAAAx5B,MAAA,+CAEAu5B,EAAAC,QAAA,EACA75B,KAAAs5B,UAAA/f,EAEAqgB,EAAAE,aAAAZ,yBAAA,EACAU,EAAAE,aAAAX,yBAAA,EAEAS,EAAAE,aAAAV,YAGAQ,EAAAE,aAAAV,UAAA,KAEAQ,EAAAE,aAAAV,UAAA,EACAn2B,WAAA22B,EAAAE,aAAAH,WAAAr8B,KAAA0C,MAAA,IAIA45B,EAAAE,aAAAH,YAEA,EA1BAr8B,KAAA0C,KA2BA,GAAA,CAAA/B,IAAA,OAAAlB,MAEA,SAAAg9B,GAEA/5B,KAAAu5B,iBAAAt3B,KAAA83B,GACA/5B,KAAA25B,YACA,IAAA,CA7GA,CAFAx5B,EAAA,8BAkHAT,EAAAD,QAAAo5B,C1Dg+LA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAAS14B,EAAQT,EAAOD,G2DllMhE,IAcAu6B,EAAA,SAAAC,GAEA,SAAAD,EAAAzjB,EAAAgb,EAAA9a,GACA,IAAAyjB,EA8BA,OA9BAn8B,iBAAAiC,KAAAg6B,IACAE,EAAAx7B,WAAAsB,KAAAg6B,EAAA,CAAAzjB,EAAAgb,EAAA9a,KAEAE,YAAA,YAEAujB,EAAAC,OAAA,GACAD,EAAAE,iBAAA,GAEAF,EAAAG,UAAA,IACAH,EAAAI,eAAA,IAEAJ,EAAAK,gBAAA,CAAA,MAEAL,EAAAM,gBAAA,EACAN,EAAAO,WAAA,EACAP,EAAAQ,cAAA,EACAR,EAAAS,YAAA,EAEAT,EAAAU,UAAA,EAEAV,EAAAW,mBAAA,SAGAX,EAAAY,YAAA,GACAZ,EAAAa,cAAA,GAEAb,EAAAc,SAAA,EACAd,EAAAe,gBAAA,EAEAf,EAAAgB,YAAA,EACAhB,EAAAiB,YAAA,EAAAjB,CACA,CAAA,OAAA76B,UAAA26B,EAAAC,GAAA/7B,cAAA87B,EAAA,CAAA,CAAA/7B,IAAA,mBAAAlB,MAEA,SAAAq+B,GAEA,IAAAl/B,MAAAK,QAAA6+B,GAEA,OAAA,EAGA,IAAA,IAAAh9B,EAAA4B,KAAAo6B,iBAAA59B,OAAA4B,EAAAg9B,EAAA5+B,OAAA4B,IAEA4B,KAAAo6B,iBAAAh8B,GAAA,GAAAiF,OAAAjF,GAKA,IAFA,IAAAi9B,EAAA,CAAA,EAEAj9B,EAAA,EAAAA,EAAAg9B,EAAA5+B,OAAA4B,IAEAi9B,EAAAr7B,KAAAo6B,iBAAAh8B,IAAAg9B,EAAAh9B,GAGA,OAAAi9B,CACA,GAEA,CAAAp9B,IAAA,YAAAlB,MACA,SAAAu+B,GAEAt7B,KAAAm6B,OAAAmB,EAEA,IAAA,IAAAl9B,EAAA,EAAAA,EAAA4B,KAAAm6B,OAAA39B,OAAA4B,SAEA,IAAA4B,KAAAm6B,OAAA/7B,GAEA4B,KAAAo6B,iBAAAh8B,GAAA,GAAAiF,OAAAjF,GAIA4B,KAAAo6B,iBAAAh8B,GAAA4B,KAAAm6B,OAAA/7B,GAAAvC,WAAAkW,MAGA,GAAA,CAAA9T,IAAA,gBAAAlB,MAEA,WAEAiD,KAAA+6B,cAAA,EACA,GAAA,CAAA98B,IAAA,WAAAlB,MAEA,WAEA,IAAA,IAAAqB,EAAA,EAAAA,EAAA4B,KAAAu6B,gBAAA/9B,OAAA4B,IAEA4B,KAAA86B,YAAA96B,KAAA86B,YAAA5wB,QAAAlK,KAAAu6B,gBAAAn8B,GAAA,IAEA4B,KAAA+6B,cAAA94B,KAAAjC,KAAA86B,aACA96B,KAAA86B,YAAA,EACA,GAAA,CAAA78B,IAAA,UAAAlB,MAEA,SAAAw+B,GAEA,IAAAC,OAAA,IAAAD,EAAAv7B,KAAA46B,SAAAW,EAEAv7B,KAAAm7B,cACA,IAAAM,EAAAz7B,KAAA+6B,cAGA,OAFA/6B,KAAA+6B,cAAA,GAEAS,EAEAx7B,KAAA07B,iBAAAD,GAIAA,CAEA,GAAA,CAAAx9B,IAAA,eAAAlB,MAEA,SAAA4+B,GAEA37B,KAAAk7B,cAEA,IAAA,IAAA98B,EAAA,EAAAA,EAAAu9B,EAAAn/B,OAAA4B,IAEA4B,KAAAg7B,SAAAW,EAAAv9B,IAAA4B,KAAAq6B,UAIAsB,EAAAv9B,IAAA4B,KAAAs6B,eAGAt6B,KAAAi7B,eAEAj7B,KAAAi7B,gBAAA,EAGAj7B,KAAAg7B,QAKA58B,EAAAu9B,EAAAn/B,QAAAm/B,EAAAv9B,EAAA,IAAA4B,KAAAs6B,gBAEAt6B,KAAA86B,aAAA96B,KAAA66B,mBACA76B,KAAAi7B,gBAAA,GAKAj7B,KAAAg7B,SAAA,EAXAh7B,KAAAg7B,SAAA,EAgBAh7B,KAAA86B,aAAAa,EAAAv9B,GA5BA4B,KAAA47B,WAiCA,OAAA57B,KAAAg7B,UAGAh7B,KAAA47B,WAGA57B,KAAAy6B,YAAAz6B,KAAA06B,cAAA16B,KAAAm7B,aAAAn7B,KAAAw6B,iBAEAx6B,KAAA06B,cAAA,EAEA16B,KAAA67B,UAAA77B,KAAA87B,SAAA,MAGA97B,KAAA26B,YAEA36B,KAAAm6B,QASAn6B,KAAA87B,UAOA,IAAA,CArLA,CAdA37B,EAAA,8BAsMAT,EAAAD,QAAAu6B,C3DolMA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAAS75B,EAAQT,EAAOD,G4D1xMhE,IAMAs8B,EAAA,SAAAC,GAEA,SAAAD,EAAAxlB,EAAAgb,EAAA9a,GACA,IAAAwlB,EA0BA,OA1BAl+B,iBAAAiC,KAAA+7B,GA4UAp/B,iBA3UAs/B,EAAAv9B,WAAAsB,KAAA+7B,EAAA,CAAAxlB,EAAAgb,EAAA9a,IA2UA,kBAOA,SAAAsc,EAAAmJ,EAAAC,GAEA,IAAAC,EAAArJ,EAAAl3B,WACA,OAAAmE,KAAAq8B,4BAAAD,EAAAF,EAAAC,GAAAC,CACA,IAEAz/B,iBAAAs/B,EAAA,gBAOA,SAAAlJ,EAAAmJ,EAAAC,GAEA,IAAAC,EAAArJ,EAAAl3B,WACA,OAAAugC,EAAAp8B,KAAAq8B,4BAAAD,EAAAF,EAAAC,EACA,IAjWAF,EAAAtlB,YAAA,iBAIAslB,EAAAK,6BAAA,UAIAL,EAAAM,kCAAA,+BACAN,EAAAO,oCAAA,MACAP,EAAAQ,kCAAA,cACAR,EAAAS,mCAAA,eAIAT,EAAAU,0BAAA,IACAV,EAAAW,oBAAA,KACAX,EAAAY,6BAAA,IAEAZ,EAAAa,yBAAA,MACAb,EAAAc,oCAAA,GAEAd,EAAAe,2BAAA,mBAAAx+B,OAAAL,UAAA8+B,WACAhB,EAAAiB,yBAAA,mBAAA1+B,OAAAL,UAAAg/B,SAAAlB,CACA,CAOA,OAAA58B,UAAA08B,EAAAC,GAAA99B,cAAA69B,EAAA,CAAA,CAAA99B,IAAA,gBAAAlB,MAMA,SAAAg2B,GAIA,OAAAA,EAAAhd,MAAA,IAAAnN,UAAAjE,KAAA,GACA,GAEA,CAAA1G,IAAA,mBAAAlB,MAQA,SAAAg2B,EAAAqK,EAAAC,GAEA,OAAAr9B,KAAAg9B,2BAEAjK,EAAAkK,WAAAG,EAAAC,GAIAr9B,KAAAs9B,0BAAAxhC,KAAAi3B,EAAAqK,EAAAC,EAEA,GAEA,CAAAp/B,IAAA,4BAAAlB,MAOA,SAAAqgC,EAAAC,GAEA,OAAAr9B,KAAAjE,MAAAshC,GAAA,EAAAD,EAAA5gC,UAAA4gC,CACA,GAEA,CAAAn/B,IAAA,iBAAAlB,MAQA,SAAAg2B,EAAAqK,EAAAG,GAEA,OAAAv9B,KAAAk9B,yBAEAnK,EAAAoK,SAAAC,EAAAG,GAIAv9B,KAAAw9B,wBAAA1hC,KAAAi3B,EAAAqK,EAAAG,EAEA,GAEA,CAAAt/B,IAAA,0BAAAlB,MAOA,SAAAqgC,EAAAG,GAYA,OARAA,EAAAv9B,KAAAxD,OAMA+gC,GAAA,EAJAA,EAAAv9B,KAAAxD,OAMAwD,KAAAgP,OAAAuuB,EAAAH,EAAA5gC,OAAA4gC,EAAA5gC,UAAA4gC,CACA,GAEA,CAAAn/B,IAAA,qBAAAlB,MAMA,SAAAg2B,GAMA,IAJA,IAAA/Z,EAAA,EACAykB,EAAA1K,EAAAv2B,OACAkhC,EAAA,EAEAA,EAAAD,GAEAzkB,GAAAA,GAAA,GAAAA,EAAA+Z,EAAA7uB,WAAAw5B,KAAA,EAGA,MAAA,GAAAr6B,OAAArD,KAAA88B,0BAAAz5B,OAAA2V,EACA,GAAA,CAAA/a,IAAA,qBAAAlB,MAEA,SAAAg2B,GAEA,OAAAA,EAAA7oB,QAAAlK,KAAA08B,oCACA,SAAAiB,GAEA,OAAAA,EAAAj3B,OAAA,GAAAk3B,cAAAD,EAAA3uB,OAAA,EACA,GACA,GAEA,CAAA/Q,IAAA,+BAAAlB,MAOA,SAAA8gC,EAAA9K,GAcA,OAAAA,EAAAkK,WAAAY,IAAA9K,EAAAoK,SAAAU,GAEA9K,EAAA3oB,UAAA,EAAA2oB,EAAAv2B,OAAA,GAIAu2B,CAEA,GAEA,CAAA90B,IAAA,0BAAAlB,MAMA,SAAAg2B,GAEA,MAAA,iBAAAA,GAAA,IAAAA,EAEAA,EAAA7oB,QAAAlK,KAAAy8B,kCAAAz8B,KAAA+8B,qCAGA,EACA,GAOA,CAAA9+B,IAAA,wBAAAlB,MAMA,SAAAg2B,GAGA,IAEA+K,EAFA99B,KAAA+9B,cAAAhL,GAEA/U,MAAAhe,KAAAs8B,8BAAA33B,KAAA,KAEA,OAAA3E,KAAA+9B,cAAAD,EACA,GAAA,CAAA7/B,IAAA,gCAAAlB,MAEA,SAAA4gC,EAAAK,EAAAC,EAAAC,EAAAC,EAAAC,GAIA,OAAAJ,GAAAG,EAAAn+B,KAAAq+B,sBAAAH,GAAAC,EAAAC,EAAAp+B,KAAAq+B,sBAAAH,EAAAE,GACA,GAEA,CAAAngC,IAAA,6BAAAlB,MAMA,SAAAuhC,GAGA,OAAAA,EAAAziC,WAAAqO,QAEAlK,KAAAu8B,kCACAv8B,KAAAu+B,8BAAAjhC,KAAA0C,MAEA,GAEA,CAAA/B,IAAA,mBAAAlB,MAMA,SAAAyhC,EAAAC,EAAAC,GAEA,GAAAxjB,MAAAsjB,GAEA,OAAAx+B,KAAA48B,oBAGA,GAAA4B,QAEA,OAAAx+B,KAAA48B,oBAGA,IAAA+B,EAAA3+B,KAAA0xB,MAAA9uB,KAAAg8B,aAAAJ,GACAK,OAAA,IAAAJ,EAAA,EAAAA,EACAK,EAAA9+B,KAAA0xB,MAAA9uB,KAAAm8B,eAAAJ,EAAAE,EAAAH,GAGA,MAAA,IAAAr7B,OAAArD,KAAAg/B,2BAAAF,GACA,GAEA,CAAA7gC,IAAA,uBAAAlB,MAOA,SAAAyhC,EAAAS,GAEA,IAAAC,OAAA,IAAAD,EAAA,EAAAA,EAEA,GAAA/jB,MAAAsjB,GACA,CAEA,OADA,GACA/0B,QAAAy1B,EACA,CAEA,GAAAV,QAEA,MAAA,GAGA,IACApJ,EADAp1B,KAAA0xB,MAAAyN,QAAAC,UAAAZ,GACA/0B,QAAAy1B,GAEA,GAAAhkB,MAAAka,GACA,CAEA,OADA,GACA3rB,QAAAy1B,EACA,CAGA,OAAA9J,CAEA,GAGA,CAAAn3B,IAAA,8BAAAlB,MAQA,SAAAg2B,EAAAmJ,EAAAC,GAEA,IAAAkD,EAAAnD,EAAA,EACAoD,EAAA9gC,YAAA,IAAA29B,EAAAA,EAAA,KACA,GAAApJ,EAAAv2B,OAAA0/B,EAGA,MAAA,GAIA,IAAAqD,EAAArD,EAAAnJ,EAAAv2B,OAKA,OAJA+iC,EAAAD,EAAA9iC,SAEA8iC,GAAAA,EAAAE,OAAAH,EAAAC,EAAA9iC,SAEA8iC,EAAAvjC,MAAA,EAAAwjC,EAEA,GAAA,CAAAthC,IAAA,iBAAAlB,MAqCA,SAAA0iC,GAEA,GAAA,iBAAAA,EAEA,MAAA,GAGA,IAAA9O,EAAA5hB,SAAA0wB,EAAA,KACA7O,EAAA7hB,SAAA0wB,EAAA,IAAA,IACA5O,EAAA9hB,SAAA0wB,EAAA,IAAA,IACA3O,EAAA/hB,SAAA0wB,EAAA,MAEA,MAAA,GAAAp8B,OAAArD,KAAA0/B,eAAA5O,EAAA,EAAA,KAAA,KAAAztB,OAAArD,KAAA0/B,eAAA7O,EAAA,EAAA,KAAA,KAAAxtB,OAAArD,KAAA0/B,eAAA9O,EAAA,EAAA,KAAA,KAAAvtB,OAAArD,KAAA0/B,eAAA/O,EAAA,EAAA,KACA,GAEA,CAAA1yB,IAAA,kBAAAlB,MAOA,SAAA4iC,EAAAC,GAEA,MAAA,iBAAAD,GAAA,iBAAAC,EAEA,GAGA5/B,KAAA6/B,eAAAD,EAAAD,EACA,GAEA,CAAA1hC,IAAA,mBAAAlB,MACA,SAAA+iC,GAGA,MADA,CAAA,UAAA,WAAA,QAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,UAAA,WAAA,YACAA,EAAAxhB,WACA,GAAA,CAAArgB,IAAA,8BAAAlB,MAEA,SAAA+iC,GAGA,MADA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAA,EAAAxhB,WACA,GAAA,CAAArgB,IAAA,6BAAAlB,MAEA,SAAA+iC,EAAAC,GAEA,IAAAC,OAAA,IAAAD,GAAAA,EAEAE,EAAAH,EAAAxhB,WAAA,EACA4hB,EAAAJ,EAAAthB,UACA2hB,EAAAL,EAAA1hB,cASA,OAPA4hB,IAEAC,EAAAjgC,KAAA0/B,eAAAO,EAAA,EAAA,KACAC,EAAAlgC,KAAA0/B,eAAAQ,EAAA,EAAA,KACAC,EAAAngC,KAAA0/B,eAAAS,EAAA,EAAA,MAGA,GAAA98B,OAAA48B,EAAA,KAAA58B,OAAA68B,EAAA,KAAA78B,OAAA88B,EACA,GAAA,CAAAliC,IAAA,+BAAAlB,MAEA,SAAAqjC,GAEA,OAAAA,EAAAhiB,cAAApe,KAAA0/B,eAAAU,EAAA9hB,WAAA,EAAA,KAAAte,KAAA0/B,eAAAU,EAAA5hB,UAAA,EAAA,IACA,GAMA,CAAAvgB,IAAA,oBAAAlB,MASA,SAAAg2B,EAAA4K,GAEA,OAAA5K,EAAAhd,MAAA4nB,GAAA,EACA,GAEA,CAAA1/B,IAAA,mBAAAlB,MASA,SAAAg2B,EAAA4K,GAEA,IAAA0C,EAAAtN,EAAAluB,QAAA84B,GAEA,OAAA0C,EAAA,GAAAA,EAAA1C,EAAAnhC,QAAAu2B,EAAAv2B,OAEA,GAGAu2B,EAAA3oB,UAAAi2B,EAAA1C,EAAAnhC,OACA,GAEA,CAAAyB,IAAA,sBAAAlB,MASA,SAAAg2B,EAAAuN,EAAAC,EAAAC,GAEA,IAAApE,EAAA,iBAAArJ,EAAAA,EAAA,GAEA0N,EAAA,iBAAAH,EAAAA,EAAA,IAEAI,EAAA,UAAApiC,QAAAiiC,GAAAI,gBAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,GACAC,EAAA,UAAAtiC,QAAAkiC,GAAAK,cAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,GAEA,GAAA9N,EAAAv2B,OAAA,EAEA,OAAA,EAMA,IAHA,IAAAskC,EAAA,EACAC,EAAA,GAEA3iC,EAAA,EAAAA,EAAAg+B,EAAA5/B,OAAA4B,IAGAg+B,EAAAh+B,IAAAqiC,GAEA,GAAAM,EAAAvkC,OAGAskC,IAGAJ,EAAA7iC,eAAAu+B,EAAAh+B,IAGA2iC,EAAA9+B,KAAAy+B,EAAAtE,EAAAh+B,KAGAwiC,EAAA/iC,eAAAu+B,EAAAh+B,KAEAwiC,EAAAxE,EAAAh+B,KAAA2iC,EAAAA,EAAAvkC,OAAA,IAGAukC,EAAA/+B,MAIA,OAAA8+B,CACA,GAEA,CAAA7iC,IAAA,oBAAAlB,MASA,SAAAg2B,EAAAuN,EAAAC,EAAAC,GAEA,IAAApE,EAAA,iBAAArJ,EAAAA,EAAA,GAEA0N,EAAA,iBAAAH,EAAAA,EAAA,IAEAI,EAAA,UAAApiC,QAAAiiC,GAAAI,gBAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,GACAC,EAAA,UAAAtiC,QAAAkiC,GAAAK,cAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,GAEAG,EAAA,EACAC,EAAA,GAEA,GAAAlO,EAAAv2B,OAAA,EAEA,OAAAykC,EAKA,IAFA,IAAAF,EAAA,GAEA3iC,EAAA,EAAAA,EAAAg+B,EAAA5/B,OAAA4B,IAGAg+B,EAAAh+B,IAAAqiC,GAEA,GAAAM,EAAAvkC,QAGAykC,EAAAh/B,KAAAm6B,EAAAhyB,UAAA42B,EAAA5iC,IACA4iC,EAAA5iC,EAAA,GAGAsiC,EAAA7iC,eAAAu+B,EAAAh+B,IAGA2iC,EAAA9+B,KAAAy+B,EAAAtE,EAAAh+B,KAGAwiC,EAAA/iC,eAAAu+B,EAAAh+B,KAEAwiC,EAAAxE,EAAAh+B,KAAA2iC,EAAAA,EAAAvkC,OAAA,IAGAukC,EAAA/+B,MASA,OALAg/B,EAAA5E,EAAA5/B,QAEAykC,EAAAh/B,KAAAm6B,EAAAhyB,UAAA42B,IAGAC,CACA,GAEA,CAAAhjC,IAAA,wBAAAlB,MASA,SAAAg2B,EAAAuN,EAAAC,EAAAC,GAEA,IAAApE,EAAA,iBAAArJ,EAAAA,EAAA,GAEA0N,EAAA,iBAAAH,EAAAA,EAAA,IAEAI,EAAA,UAAApiC,QAAAiiC,GAAAI,gBAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,GACAC,EAAA,UAAAtiC,QAAAkiC,GAAAK,cAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,GAEA,GAAA9N,EAAAv2B,OAAA,EAEA,OAAA,EAKA,IAFA,IAAAukC,EAAA,GAEA3iC,EAAA,EAAAA,EAAAg+B,EAAA5/B,OAAA4B,IACA,CAEA,GAAAg+B,EAAAh+B,IAAAqiC,GAEA,GAAAM,EAAAvkC,OAGA,OAAA4/B,EAAAhyB,UAAA,EAAAhM,GAGAsiC,EAAA7iC,eAAAu+B,EAAAh+B,IAGA2iC,EAAA9+B,KAAAy+B,EAAAtE,EAAAh+B,KAGAwiC,EAAA/iC,eAAAu+B,EAAAh+B,KAEAwiC,EAAAxE,EAAAh+B,KAAA2iC,EAAAA,EAAAvkC,OAAA,IAGAukC,EAAA/+B,KAEA,CAEA,OAAAo6B,CACA,GAEA,CAAAn+B,IAAA,wBAAAlB,MAUA,SAAAg2B,EAAA4N,EAAAE,GAQA,IANA,IAAAzE,EAAA,iBAAArJ,EAAAA,EAAA,GACAmO,EAAA,iBAAAP,EAAAA,EAAA,IACAQ,EAAA,iBAAAN,EAAAA,EAAA,IAEAO,EAAA,EACAC,EAAA,EACAjjC,EAAA,EAAAA,EAAAg+B,EAAA5/B,OAAA4B,IAGAg+B,EAAAh+B,IAAA8iC,GAEA,GAAAG,GAEAD,IAEAC,KAEAjF,EAAAh+B,IAAA+iC,GAEAE,IAIA,OAAAD,CACA,GAGA,CAAAnjC,IAAA,iCAAAlB,MAWA,SAAAg2B,EAAAuO,EAAAX,EAAAE,GAcA,IAZA,IAAAzE,EAAA,iBAAArJ,EAAAA,EAAA,GACAwO,EAAA,iBAAAD,EAAAA,EAAA,EACAJ,EAAA,iBAAAP,EAAAA,EAAA,IACAQ,EAAA,iBAAAN,EAAAA,EAAA,IAEAO,EAAA,EACAC,EAAA,EAEAG,GAAA,EACAC,EAAA,EACAC,EAAA,EAEAtjC,EAAA,EAAAA,EAAAg+B,EAAA5/B,OAAA4B,IAGAg+B,EAAAh+B,IAAA8iC,EAKA,KAHAG,GAMAE,KADAH,EACA,IAGAI,GAAA,EACAC,EAAArjC,GAKAg+B,EAAAh+B,IAAA+iC,GAKA,KAHAE,GAIAG,GACAE,GAAAD,IAEAC,EAAAtjC,EACAojC,GAAA,GAKA,OAAAJ,GAAAG,EAGA,GAGAG,EAAA,GAAAA,EAAAD,EAEArF,EAAAhyB,UAAAq3B,EAAA,EAAAC,GAIAtF,EAAAhyB,UAAAq3B,EAAA,EAEA,GAGA,CAAAxjC,IAAA,+BAAAlB,MASA,SAAAg2B,EAAA4O,EAAAhB,EAAAE,GAcA,IAZA,IAAAzE,EAAA,iBAAArJ,EAAAA,EAAA,GACA6O,EAAA,iBAAAD,EAAAA,EAAA,EACAT,EAAA,iBAAAP,EAAAA,EAAA,IACAQ,EAAA,iBAAAN,EAAAA,EAAA,IAEAO,EAAA,EACAC,EAAA,EAEAG,GAAA,EACAK,EAAA,EACAC,EAAA,EAEA1jC,EAAA,EAAAA,EAAAg+B,EAAA5/B,OAAA4B,IAGAg+B,EAAAh+B,IAAA8iC,EAIA,KAFAG,GAKAO,KADAR,EACA,IAEAI,GAAA,EACAK,EAAAzjC,GAIAg+B,EAAAh+B,IAAA+iC,GAIA,KAFAE,GAGAG,GACAM,GAAAD,IAEAC,EAAA1jC,EACAojC,GAAA,GAKA,GAAAJ,GAAAQ,EAEA,OAAAxF,EAGA,IAAA2F,EAAA,GAYA,OAVAF,EAAA,IAEAE,EAAA3F,EAAAhyB,UAAA,EAAAy3B,IAGAzF,EAAA5/B,OAAAslC,EAAA,GAAAA,EAAAD,IAEAE,GAAA3F,EAAAhyB,UAAA03B,EAAA,IAGAC,CACA,IAAA,CAr0BA,CANA5hC,EAAA,8BA80BAT,EAAAD,QAAAs8B,C5D4xMA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAAS57B,EAAQT,EAAOD,G6D1mOhEC,EAAAD,QAAA,CACAuiC,sBAAA,EACAC,sBAAA,QAEAC,2BAAA,GAEAC,SAAA,CAAA,UAAA,WAAA,QAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,UAAA,WAAA,YAEAC,WAAA,CAAA,SAAA,SAAA,UAAA,YAAA,WAAA,SAAA,YAEAC,SACA,CACA,MAAA,SAAA,SAAA,QAAA,OAAA,SAAA,SAAA,OAAA,SAAA,YAAA,OACA,OAAA,SAAA,OAAA,QAAA,OAAA,QAAA,QAAA,QAAA,MAAA,QACA,OAAA,QAAA,SAAA,YAGAC,WACA,CACA,QAAA,UAAA,WAAA,QAAA,QAAA,SAAA,QAAA,SAAA,YAAA,SACA,WAAA,WAAA,SAAA,SAAA,YAAA,QAAA,SAAA,UAAA,WAAA,QACA,QAAA,MAAA,WAAA,SAAA,QAAA,QAAA,WAAA,SAAA,QAAA,OACA,QAAA,QAAA,UAAA,SAAA,OAAA,QAAA,QAAA,QAAA,QAAA,SACA,OAAA,UAAA,WAAA,WAAA,UAAA,SAAA,WAAA,QAAA,SAAA,SACA,SAAA,UAAA,UAAA,UAAA,SAAA,SAAA,SAAA,SAAA,SAAA,OACA,SAAA,SAAA,WAAA,SAAA,OAAA,SAAA,OAAA,QAAA,QAAA,SACA,OAAA,MAAA,OAAA,aAAA,OAAA,SAAA,SAAA,UAAA,OAAA,QACA,QAAA,OAAA,SAAA,QAAA,QAAA,OAAA,SAAA,UAAA,OAAA,UACA,SAAA,WAAA,UAAA,QAAA,UAAA,YAAA,QAAA,SAAA,SAAA,UAGAC,QACA,CACA,OAAA,WAAA,WAAA,QAAA,YAAA,UAAA,QAAA,UAAA,QAAA,QACA,OAAA,QAAA,QAAA,SAAA,WAAA,SAAA,WAAA,QAAA,QAAA,WACA,QAAA,SAAA,UAAA,UAAA,YAAA,UAAA,UAAA,SAAA,QAAA,UACA,MAAA,WAAA,SAAA,UAAA,SAAA,OAAA,OAAA,SAAA,SAAA,WACA,YAAA,YAAA,QAAA,QAAA,SAAA,UAAA,QAAA,QAAA,YAAA,UACA,QAAA,SAAA,QAAA,QAAA,WAAA,OAAA,WAAA,SAAA,QAAA,YACA,OAAA,SAAA,SAAA,SAAA,SAAA,QAAA,SAAA,aAAA,SAAA,UACA,SAAA,SAAA,OAAA,SAAA,MAAA,UAAA,UAAA,SAAA,UAAA,OACA,QAAA,OAAA,WAAA,QAAA,QAAA,QAAA,SAAA,WAAA,UAAA,UACA,YAAA,UAAA,UAAA,QAAA,WAAA,QAAA,QAAA,SAAA,OAAA,QACA,QAAA,SAAA,OAAA,UAAA,QAAA,UAAA,UAAA,SAAA,SAAA,cACA,UAAA,SAAA,UAAA,UAAA,OAAA,SAAA,SAAA,SAAA,OAAA,SACA,UAAA,QAAA,QAAA,SAAA,UAAA,SAAA,QAAA,SAAA,UAAA,OACA,QAAA,OAAA,WAAA,OAAA,WAAA,UAAA,QAAA,SAAA,QAAA,UACA,WAAA,SAAA,UAAA,YAAA,UAAA,QAAA,UAAA,OAAA,SAAA,QACA,QAAA,QAAA,OAAA,OAAA,SAAA,QAAA,UAAA,UAAA,QAAA,OACA,OAAA,QAAA,SAAA,SAAA,YAAA,QAAA,QAAA,QAAA,SAAA,OACA,SAAA,OAAA,SAAA,QAAA,SAAA,WAAA,SAAA,QAAA,QAAA,QACA,QAAA,UAAA,MAAA,QAAA,OAAA,OAAA,SAAA,SAAA,SAAA,QACA,QAAA,UAAA,QAAA,MAAA,QAAA,QAAA,UAAA,UAAA,SAAA,U7D8mOA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASpiC,EAAQT,EAAOD,G8DlqOlC,IAEA+iC,EAAA,SAAAC,GAEA,SAAAD,EAAAjsB,EAAAgb,EAAA9a,GACA,IAAAisB,EAKA,OALA3kC,iBAAAiC,KAAAwiC,IACAE,EAAAhkC,WAAAsB,KAAAwiC,EAAA,CAAAjsB,EAAAgb,EAAA9a,KAEAE,YAAA,iBAEA+rB,EAAAC,YAAAxiC,EAAA,qDAAAuiC,CACA,CAEA,OAAArjC,UAAAmjC,EAAAC,GAAAvkC,cAAAskC,EAAA,CAAA,CAAAvkC,IAAA,uBAAAlB,MACA,SAAA6lC,EAAAC,GAEA,OAAAjgC,KAAAuY,MAAAvY,KAAAgoB,UAAAiY,EAAAD,IAAAA,CACA,GACA,CAAA3kC,IAAA,oBAAAlB,MACA,SAAA8lC,GAEA,OAAA7iC,KAAA8iC,qBAAA,EAAAD,EACA,GACA,CAAA5kC,IAAA,gBAAAlB,MACA,WAEA,OAAA6F,KAAAuY,MAAAvY,KAAAgoB,SAAA5qB,KAAA2iC,YAAAV,sBACA,GAAA,CAAAhkC,IAAA,sBAAAlB,MAGA,SAAAgmC,EAAAC,GAEA,IACAC,OAAA,IAAAD,EAAA,WAAAA,EAEA,OAAAhjC,KAAA+xB,SAAAgK,WAAA2D,eAAA1/B,KAAAkjC,kBAAAD,GAAAF,EAAA,IACA,GAAA,CAAA9kC,IAAA,cAAAlB,MAGA,WAEA,OAAAiD,KAAA2iC,YAAAR,SAAAniC,KAAAkjC,kBAAAljC,KAAA2iC,YAAAR,SAAA3lC,OAAA,GACA,GAAA,CAAAyB,IAAA,kBAAAlB,MACA,WAEA,OAAAiD,KAAA2iC,YAAAP,WAAApiC,KAAAkjC,kBAAAljC,KAAA2iC,YAAAP,WAAA5lC,OAAA,GACA,GAAA,CAAAyB,IAAA,cAAAlB,MAGA,WAEA,OAAAiD,KAAA2iC,YAAAN,SAAAriC,KAAAkjC,kBAAAljC,KAAA2iC,YAAAN,SAAA7lC,OAAA,GACA,GAAA,CAAAyB,IAAA,aAAAlB,MAGA,WAEA,OAAAiD,KAAA2iC,YAAAJ,QAAAviC,KAAAkjC,kBAAAljC,KAAA2iC,YAAAJ,QAAA/lC,OAAA,GACA,GAAA,CAAAyB,IAAA,gBAAAlB,MACA,WAEA,OAAAiD,KAAA2iC,YAAAL,WAAAtiC,KAAAkjC,kBAAAljC,KAAA2iC,YAAAL,WAAA9lC,OAAA,GACA,IAAA,CA5DA,CAFA2D,EAAA,8BAiEAT,EAAAD,QAAA+iC,C9DoqOA,EAAE,CAAC,oDAAoD,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAASriC,EAAQT,EAAOD,G+DruOvH,IAMA0jC,EAAA,SAAAC,GAEA,SAAAD,EAAA5sB,EAAAgb,EAAA9a,GACA,IAAA4sB,EAgCA,OAhCAtlC,iBAAAiC,KAAAmjC,IACAE,EAAA3kC,WAAAsB,KAAAmjC,EAAA,CAAA5sB,EAAAgb,EAAA9a,KAEAE,YAAA,QAEA0sB,EAAAC,MAAAnjC,EAAA,SAGAkjC,EAAAE,kBAAApjC,EAAA,2BACAkjC,EAAAC,MAAAziB,OAAAwiB,EAAAE,mBAEAF,EAAAG,eAAArjC,EAAA,wBACAkjC,EAAAC,MAAAziB,OAAAwiB,EAAAG,gBAEAH,EAAAI,eAAAtjC,EAAA,wBACAkjC,EAAAC,MAAAziB,OAAAwiB,EAAAI,gBAEAJ,EAAAK,gBAAAvjC,EAAA,yBACAkjC,EAAAC,MAAAziB,OAAAwiB,EAAAK,iBAEAL,EAAAM,oBAAAxjC,EAAA,6BACAkjC,EAAAC,MAAAziB,OAAAwiB,EAAAM,qBAEAN,EAAAO,WAAAzjC,EAAA,oBACAkjC,EAAAC,MAAAziB,OAAAwiB,EAAAO,YAEAP,EAAAQ,sBAAA1jC,EAAA,+BACAkjC,EAAAC,MAAAziB,OAAAwiB,EAAAQ,uBAKAR,CACA,CAAA,OAAAhkC,UAAA8jC,EAAAC,GAAAllC,cAAAilC,EAAA,CApCA,CANAhjC,EAAA,8BA6CAT,EAAAD,QAAA0jC,C/DuuOA,EAAE,CAAChiB,MAAQ,GAAG,8BAA8B,GAAG,uBAAuB,GAAG,4BAA4B,GAAG,wBAAwB,GAAG,mBAAmB,GAAG,0BAA0B,GAAG,uBAAuB,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAAShhB,EAAQT,EAAOD,GgEpxO7Q,IAEAqkC,EAAA,SAAAC,GAEA,SAAAD,EAAAvtB,EAAAgb,EAAA9a,GACA,IAAAutB,EAKA,OALAjmC,iBAAAiC,KAAA8jC,IACAE,EAAAtlC,WAAAsB,KAAA8jC,EAAA,CAAAvtB,EAAAgb,EAAA9a,KAEAE,YAAA,kBAEAqtB,EAAAC,YAAA,UAAAD,CACA,CAAA,OAAA3kC,UAAAykC,EAAAC,GAAA7lC,cAAA4lC,EAAA,CATA,CAFA3jC,EAAA,8BAcAT,EAAAD,QAAAqkC,ChEsxOA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAAS3jC,EAAQT,EAAOD,GiEpyOhEU,EAAA,UAAAyJ,GAAA,IA2BAs6B,EAAA,SAAAC,GAEA,SAAAD,EAAA3tB,EAAAgb,EAAA9a,GACA,IAAA2tB,EAyBA,OAzBArmC,iBAAAiC,KAAAkkC,IACAE,EAAA1lC,WAAAsB,KAAAkkC,EAAA,CAAA3tB,EAAAgb,EAAA9a,KAEA4tB,SAAAlkC,EAAA,iFAEAikC,EAAAE,mBAAA,EAEAF,EAAAG,YAAApkC,EAAA,oFAEAikC,EAAAztB,YAAA,mBAEAytB,EAAA1S,MAAA8S,0BAAA,6BAAArkC,EAAA,2FACAikC,EAAA1S,MAAA8S,0BAAA,0BAAArkC,EAAA,8EACAikC,EAAA1S,MAAA8S,0BAAA,2BAAArkC,EAAA,+EACAikC,EAAA1S,MAAA8S,0BAAA,0BAAArkC,EAAA,gGAEAikC,EAAAK,UAAAL,EAAA1S,MAAAiG,8CAAA,8BACAyM,EAAAM,OAAAN,EAAA1S,MAAAiG,8CAAA,2BACAyM,EAAAO,QAAAP,EAAA1S,MAAAiG,8CAAA,4BACAyM,EAAAQ,OAAAR,EAAA1S,MAAAiG,8CAAA,2BAGAyM,EAAAK,UAAAI,wBAAAT,GACAA,EAAAM,OAAAG,wBAAAT,GACAA,EAAAO,QAAAE,wBAAAT,GACAA,EAAAQ,OAAAC,wBAAAT,GAAAA,CACA,CAAA,OAAA/kC,UAAA6kC,EAAAC,GAAAjmC,cAAAgmC,EAAA,CAAA,CAAAjmC,IAAA,qCAAAlB,MAEA,SAAA+nC,EAAAC,EAAAC,EAAAxuB,GAEA,IAAAyuB,EAAA,WAAA3mC,QAAA0mC,GAAAA,EAAA,CAAAE,oBAAA,IAEA,IAAAhpC,MAAAK,QAAAuoC,GAIA,OAFAG,EAAAC,oBAAAjjC,KAAA,4GACAjC,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAsoC,EAEA,GAAA,WAAAxmC,QAAAymC,GAIA,OAFAE,EAAAC,oBAAAjjC,KAAA,wIACAjC,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAsoC,EAOA,IAJA,IAAAK,EAAAJ,EAEAK,EAAA,UAAA9mC,QAAAkY,GAAAA,EAAAxW,KAAA0xB,MAAA2T,YAAA7uB,GAEApY,EAAA,EAAAA,EAAA0mC,EAAAtoC,OAAA4B,IAEA,GAAA,WAAAE,QAAAwmC,EAAA1mC,IAAA,CAMA,IAAAknC,EAAAR,EAAA1mC,GACA,GAAA,iBAAA0mC,EAAA1mC,GAAAmnC,OAAAD,EAAAE,SACA,CAEA,IAAApQ,EAAAgQ,EAAAK,eAAAN,EAAAG,EAAAI,OAMA,IAAAtQ,EACA,CACA6P,EAAAC,oBAAAjjC,KAAA,8GAAAoB,OAAAiiC,EAAAI,MAAA,cAAAriC,OAAAjF,IACA4B,KAAAysB,IAAA1E,KAAAkd,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACA,QACA,CAGAyoC,EAAAC,oBAAAjjC,KAAA,4EAAAoB,OAAA+xB,EAAA,4BAAA/xB,OAAAiiC,EAAAI,MAAA,cAAAriC,OAAAjF,IACA4B,KAAAysB,IAAAuD,KAAAiV,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACA,IAEA,IAAAmpC,EAAA,IAAA3lC,KAAA0xB,MAAAyN,QAAAC,UAAAhK,GACAkQ,EAAAE,UAAA,EACAF,EAAAM,MAAAD,EAAA9pC,UACA,CACA,MAAA0d,GAEA0rB,EAAAC,oBAAAjjC,KAAA,8GAAAoB,OAAAiiC,EAAAI,MAAA,cAAAriC,OAAAjF,IACA4B,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACA8oC,EAAAE,UAAA,CACA,CAEA,CACA,GAAA,uBAAAV,EAAA1mC,GAAAmnC,OAAAD,EAAAE,SACA,CAEA,IAAApQ,EAAAgQ,EAAAS,kBAAAV,EAAAG,EAAAI,OACA,IAAAtQ,EACA,CACA6P,EAAAC,oBAAAjjC,KAAA,qGAAAoB,OAAAiiC,EAAAI,MAAA,cAAAriC,OAAAjF,IACA4B,KAAAysB,IAAA1E,KAAAkd,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACA,QACA,CAGAyoC,EAAAC,oBAAAjjC,KAAA,4EAAAoB,OAAA+xB,EAAA,4BAAA/xB,OAAAiiC,EAAAI,MAAA,cAAAriC,OAAAjF,IACA4B,KAAAysB,IAAAuD,KAAAiV,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACA,IAEA,IAAAmpC,EAAA,IAAA3lC,KAAA0xB,MAAAyN,QAAAC,UAAAhK,GACAkQ,EAAAE,UAAA,EACAF,EAAAM,MAAAD,EAAA9pC,UACA,CACA,MAAA0d,GAEA0rB,EAAAC,oBAAAjjC,KAAA,8GAAAoB,OAAAiiC,EAAAI,MAAA,cAAAriC,OAAAjF,IACA4B,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACA8oC,EAAAE,UAAA,CACA,CAEA,CACA,GAAA,mBAAAV,EAAA1mC,GAAAmnC,OAAAD,EAAAE,SACA,CACAP,EAAAC,oBAAAjjC,KAAA,4EAAAoB,OAAAiiC,EAAAI,MAAA,uBAAAriC,OAAAiiC,EAAAI,MAAA,cAAAriC,OAAAjF,IACA4B,KAAAysB,IAAAuD,KAAAiV,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACA,IAEA,IAAAmpC,EAAA,IAAA3lC,KAAA0xB,MAAAyN,QAAAC,UAAAkG,EAAAI,OACAJ,EAAAE,UAAA,EACAF,EAAAM,MAAAD,EAAA9pC,UACA,CACA,MAAA0d,GAGA0rB,EAAAC,oBAAAjjC,KAAA,8GAAAoB,OAAAiiC,EAAAI,MAAA,cAAAriC,OAAAjF,IACA4B,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACA8oC,EAAAE,UAAA,CACA,CACA,CAhFA,MAHAP,EAAAC,oBAAAjjC,KAAA,6GAAAoB,OAAAjF,IACA4B,KAAAysB,IAAA1E,KAAAkd,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IAqFA,OAAAsoC,CACA,GAAA,CAAA7mC,IAAA,WAAAlB,MAEA,SAAA+oC,EAAAd,GAEA,OAAAhlC,KAAAykC,UAAAsB,SAAAD,EAAAd,EACA,GAAA,CAAA/mC,IAAA,0BAAAlB,MAEA,SAAAipC,EAAAhB,GAEA,OAAAhlC,KAAA0kC,OAAAuB,wBAAAD,EAAAhB,EACA,GAAA,CAAA/mC,IAAA,0BAAAlB,MAEA,SAAAipC,EAAAhB,GAEA,OAAAhlC,KAAA2kC,QAAAuB,wBAAAF,EAAAhB,EACA,GAAA,CAAA/mC,IAAA,2BAAAlB,MAEA,SAAAopC,EAAAC,EAAApB,EAAAxuB,GAEA,OAAAxW,KAAA4kC,OAAAyB,yBAAAF,EAAAC,EAAApB,EAAAxuB,EACA,GAAA,CAAAvY,IAAA,QAAAlB,MAEA,SAAA+oC,EAAAQ,EAAAtB,EAAAxuB,EAAA4vB,GAEA,IAAAG,EAAA,WAAAjoC,QAAA0mC,GAAAA,EAAA,CAAA,EACAwB,EAAA,WAAAloC,QAAAgoC,GAAAA,EAAA,CAAA,EACAG,EAAA,WAAAnoC,QAAA8nC,GAAAA,EAAA,CAAA,EAOA,OALApmC,KAAA+lC,SAAAD,EAAAS,GACAvmC,KAAAimC,wBAAAM,EAAAG,UAAAH,GACAvmC,KAAAkmC,wBAAAK,EAAAG,UAAAH,GAEAvmC,KAAA2mC,mCAAAJ,EAAAK,oBAAAJ,EAAAD,EAAA/vB,GACAxW,KAAAqmC,yBAAAE,EAAAM,iBAAAJ,EAAAF,EAAA/vB,EACA,IAAA,CAjLA,CA1BArW,EAAA,8BA8MAT,EAAAD,QAAAykC,CjEsyOA,EAAE,CAAC,yFAAyF,GAAG,mFAAmF,GAAG,4EAA4E,GAAG,6EAA6E,GAAG,8FAA8F,GAAG,gFAAgF,GAAG,SAAS,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAAS/jC,EAAQT,EAAOD,GkEr/OjlB,IAEAqnC,EAAA,SAAAC,GAEA,SAAAD,EAAAvwB,EAAAgb,EAAA9a,GACA,IAAAuwB,EAOA,OAPAjpC,iBAAAiC,KAAA8mC,IACAE,EAAAtoC,WAAAsB,KAAA8mC,EAAA,CAAAvwB,EAAAgb,EAAA9a,KAEAE,YAAA,gCAEAqwB,EAAAC,WAAA,wBAEAD,EAAAE,kBAAA,EAAAF,CACA,CAAA,OAAA3nC,UAAAynC,EAAAC,GAAA7oC,cAAA4oC,EAAA,CAAA,CAAA7oC,IAAA,0BAAAlB,MAEA,SAAAoqC,GAEAnnC,KAAAknC,iBAAAC,CACA,GAAA,CAAAlpC,IAAA,eAAAlB,MAEA,SAAAqqC,GAEA,OAAApnC,KAAAknC,iBAAA7C,SAAAxmC,eAAAupC,GAEA,SAAA/jC,OAAArD,KAAAknC,iBAAA7C,SAAA+C,GAAA7B,MAEA6B,EAAA5qC,OAAA,GAAA,MAAA4qC,EAAA,IAAA,MAAAA,EAAAA,EAAA5qC,OAAA,GAEA,qBAEAwD,KAAAinC,WAAA7qC,KAAAgrC,GAEA,iBAIA,cAKA,GAAA,CAAAnpC,IAAA,0BAAAlB,MAEA,SAAAqqC,EAAAC,GAEA,MACA,CACA3B,MAAA0B,EACA7B,UAAA,IAAA8B,EAAArnC,KAAAsnC,aAAAF,GAAAC,EACAE,aAAAvnC,KAAAknC,iBAAA7C,SAAAxmC,eAAAupC,IAAApnC,KAAAknC,iBAAA7C,SAAA+C,GAEA,IAAA,CAjDA,CAFAjnC,EAAA,8BAsDAT,EAAAD,QAAAqnC,ClEu/OA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAAS3mC,EAAQT,EAAOD,GmE7iPhE,IAEA+nC,EAAA,SAAAC,GAEA,SAAAD,EAAAjxB,EAAAgb,EAAA9a,GACA,IAAAixB,EAGA,OAHA3pC,iBAAAiC,KAAAwnC,IACAE,EAAAhpC,WAAAsB,KAAAwnC,EAAA,CAAAjxB,EAAAgb,EAAA9a,KAEAE,YAAA,6BAAA+wB,CACA,CAAA,OAAAroC,UAAAmoC,EAAAC,GAAAvpC,cAAAspC,EAAA,CAAA,CAAAvpC,IAAA,WAAAlB,MAEA,SAAA+oC,EAAAd,GAEA,IAAAC,EAAA,WAAA3mC,QAAA0mC,GAAAA,EAAA,CAAAE,oBAAA,IAMA,GAJAD,EAAA0C,cAAA7B,EACAb,EAAAyB,UAAA,GACAzB,EAAAC,oBAAA,GAEA,iBAAAY,EAGA,OADA9lC,KAAAysB,IAAA1E,KAAA,iEACAkd,EAAAyB,UAmBA,IAFA,IAAAkB,GAAA,EACAC,EAAA,GACAzpC,EAAA,EAAAA,EAAA0nC,EAAAtpC,OAAA4B,IACA,CACA,IAAA0pC,EAAAhC,EAAA1nC,GAIA,MAAA0pC,GAAA,iBAAAF,EAaA,iBAAAA,GAAA,MAAAE,EAMA,iBAAAF,GAAA,MAAAE,EAUA,KAAAA,EAaA,KAAAA,EAaA9nC,KAAAknC,iBAAA7C,SAAAxmC,eAAAiqC,IAEAD,EAAArrC,OAAA,GAEAyoC,EAAAyB,UAAAzkC,KAAA4lC,GAEAA,EAAA,GACAD,GAAA,EACA3C,EAAAyB,UAAAzkC,KAAA6lC,KA6BAF,EAAA,QACAC,GAAAC,IAjDAD,EAAArrC,OAAA,GAEAyoC,EAAAyB,UAAAzkC,KAAA4lC,GAEAA,EAAA,GACAD,EAAA,eACAC,EAAAC,IAnBAD,EAAArrC,OAAA,GAEAyoC,EAAAyB,UAAAzkC,KAAA4lC,GAEAA,EAAA,GACAD,GAAA,EACA3C,EAAAC,oBAAAjjC,KAAA,+FAAAoB,OAAAyiC,EAAA,wBAAAziC,OAAAjF,IACA4B,KAAAysB,IAAA1E,KAAAkd,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,MAjBAqrC,GAAAC,EACA7C,EAAAyB,UAAAzkC,KAAA4lC,GACAA,EAAA,GACAD,GAAA,GATAC,GAAAC,GAbAD,EAAArrC,OAAA,GAEAyoC,EAAAyB,UAAAzkC,KAAA4lC,GAEAA,EAAA,GACAD,GAAA,EA4FA,CAOA,OALAA,GAAAC,EAAArrC,OAAA,GAEAyoC,EAAAyB,UAAAzkC,KAAA4lC,GAGA5C,EAAAyB,SACA,IAAA,CAxJA,CAFAvmC,EAAA,6CA6JAT,EAAAD,QAAA+nC,CnE+iPA,EAAE,CAAC,2CAA2C,KAAK,GAAG,CAAC,SAASrnC,EAAQT,EAAOD,GoE5sP/EC,EAAAD,QAAA,CACA4J,KACA,CACA0+B,KAAA,cACAC,QAAA,0BAEArhC,IACA,CACAohC,KAAA,iBACAC,QAAA,yBAEAC,IACA,CACAF,KAAA,qBACAC,QAAA,yBAEAE,IACA,CACAH,KAAA,OACAC,QAAA,kBpEgtPA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS7nC,EAAQT,EAAOD,GqEnuPlC,IAEA0oC,EAAA,SAAAC,GAEA,SAAAD,EAAA5xB,EAAAgb,EAAA9a,GACA,IAAA4xB,EAGA,OAHAtqC,iBAAAiC,KAAAmoC,IACAE,EAAA3pC,WAAAsB,KAAAmoC,EAAA,CAAA5xB,EAAAgb,EAAA9a,KAEAE,YAAA,0BAAA0xB,CACA,CAAA,OAAAhpC,UAAA8oC,EAAAC,GAAAlqC,cAAAiqC,EAAA,CAAA,CAAAlqC,IAAA,0BAAAlB,MAEA,SAAAipC,EAAAhB,GAEA,IAAAC,EAAA,WAAA3mC,QAAA0mC,GAAAA,EAAA,CAAAE,oBAAA,IAKA,GAHAD,EAAAqD,cAAA,IAGApsC,MAAAK,QAAAypC,GAKA,OAHAf,EAAAC,oBAAAjjC,KAAA,gGACAgjC,EAAAqD,cAAArmC,KAAAgjC,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAwD,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAwpC,EAEA,GAAAA,EAAAxpC,OAAA,EAKA,OAHAyoC,EAAAC,oBAAAjjC,KAAA,6FACAgjC,EAAAqD,cAAArmC,KAAAgjC,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAwD,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAwpC,EAQA,IAJA,IAAAuC,EAAA,EAGAC,GAAA,EACApqC,EAAA,EAAAA,EAAA4nC,EAAAxpC,OAAA4B,IAEA,MAAA4nC,EAAA5nC,IAAAoqC,GAEAD,IAEA,MAAAvC,EAAA5nC,IAAAoqC,GAEAD,IAGA,MAAAvC,EAAA5nC,KAEAoqC,GAAA,GAEA,MAAAxC,EAAA5nC,KAEAoqC,GAAA,GAGAD,EAAA,IAEAtD,EAAAC,oBAAAjjC,KAAA,8HAAAoB,OAAAjF,IACA6mC,EAAAqD,cAAArmC,KAAAgjC,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAwD,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,KAGA+rC,EAAA,IAGAtD,EAAAC,oBAAAjjC,KAAA,mNACAgjC,EAAAqD,cAAArmC,KAAAgjC,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAwD,KAAAysB,IAAA1E,KAAAkd,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,KAIAgsC,GAAA,EAEA,IAAA,IAAApqC,EAAA,EAAAA,EAAA4nC,EAAAxpC,OAAA4B,IAEA,MAAA4nC,EAAA5nC,KAEAoqC,GAAA,GAEA,MAAAxC,EAAA5nC,IAAAoqC,IAEAA,GAAA,GAEA,MAAAxC,EAAA5nC,IAAAoqC,IAEAvD,EAAAC,oBAAAjjC,KAAA,6IAAAoB,OAAAjF,IACA6mC,EAAAqD,cAAArmC,KAAAgjC,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAwD,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,KAGAgsC,IAEAvD,EAAAC,oBAAAjjC,KAAA,uHAAAoB,OAAAjF,IACA6mC,EAAAqD,cAAArmC,KAAAgjC,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAwD,KAAAysB,IAAA1E,KAAAkd,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,KAOA,IAFA,IAAAisC,EAAA,EAEArqC,EAAA,EAAAA,EAAA4nC,EAAAxpC,OAAA4B,IAEA,MAAA4nC,EAAA5nC,OAEAqqC,EAGA,IAEAxD,EAAAC,oBAAAjjC,KAAA,yIAAAoB,OAAAolC,EAAA,oBAAAplC,OAAAjF,EAAA,MACA6mC,EAAAqD,cAAArmC,KAAAgjC,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAwD,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,MAIAisC,EAAA,IAEAxD,EAAAC,oBAAAjjC,KAAA,+JACAgjC,EAAAqD,cAAArmC,KAAAgjC,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAwD,KAAAysB,IAAA1E,KAAAkd,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,KAMA,IAAAisC,GAIA,IAAAzC,EAAAxpC,SAIA,uBAAAwD,KAAAsnC,aAAAtB,EAAA,KAAA,iBAAAhmC,KAAAsnC,aAAAtB,EAAA,MAMAf,EAAAC,oBAAAjjC,KAAA,mLACAgjC,EAAAqD,cAAArmC,KAAAgjC,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAwD,KAAAysB,IAAA1E,KAAAkd,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,MAQA,IADA,IAAAksC,GAAA,EACAtqC,EAAA,EAAAA,EAAA4nC,EAAAxpC,OAAA,EAAA4B,IAEA4B,KAAAknC,iBAAA7C,SAAAxmC,eAAAmoC,EAAA5nC,KAAA,eAAA4B,KAAAknC,iBAAA7C,SAAA2B,EAAA5nC,IAAAmnC,OAAAmD,EAEAA,GAAA,EAEA1oC,KAAAknC,iBAAA7C,SAAAxmC,eAAAmoC,EAAA5nC,KAAA,eAAA4B,KAAAknC,iBAAA7C,SAAA2B,EAAA5nC,IAAAmnC,KAGA,MAAAS,EAAA5nC,IAAA,MAAA4nC,EAAA5nC,KAEA6mC,EAAAC,oBAAAjjC,KAAA,4DAAAoB,OAAA2iC,EAAA5nC,GAAA,sFAAAiF,OAAAjF,IACA6mC,EAAAqD,cAAArmC,KAAAgjC,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAwD,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,KAKAksC,GAAA,EAIA,OAAAzD,EAAAqD,aACA,IAAA,CA9KA,CAFAnoC,EAAA,6CAmLAT,EAAAD,QAAA0oC,CrEsuPA,EAAE,CAAC,2CAA2C,KAAK,GAAG,CAAC,SAAShoC,EAAQT,EAAOD,GsEz5P/E,IAEAkpC,EAAA,SAAAC,GAEA,SAAAD,EAAApyB,EAAAgb,EAAA9a,GACA,IAAAoyB,EAGA,OAHA9qC,iBAAAiC,KAAA2oC,IACAE,EAAAnqC,WAAAsB,KAAA2oC,EAAA,CAAApyB,EAAAgb,EAAA9a,KAEAE,YAAA,2BAAAkyB,CACA,CAAA,OAAAxpC,UAAAspC,EAAAC,GAAA1qC,cAAAyqC,EAAA,CAAA,CAAA1qC,IAAA,8BAAAlB,MAEA,SAAA+rC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAAA1P,EAAA,CACA2P,kBAAAL,EAAAK,kBACAC,UAAAN,EACAO,UAAAN,EACAO,WAAAN,GAGAO,IAAArtC,MAAAK,QAAA0sC,IAAAA,EA+BA,GAAAzP,EAAA6P,UAAAF,mBASA,GAFA3P,EAAA6P,UAAArpC,KAAAwpC,wBAAAhQ,EAAA6P,UAAAF,kBAAA,uBAEAI,EAEA,IAAA,IAAAnrC,EAAA8qC,EAAA,EAAA9qC,GAAA,EAAAA,IAEA,GAAA,mBAAAmrC,EAAAnrC,GAAAmnC,OAAAgE,EAAAnrC,GAAAqrC,QAEAF,EAAAnrC,GAAAP,eAAA,eAAA27B,EAAA4P,UAAAvrC,eAAA,eAEA0rC,EAAAnrC,GAAAmpC,WAAAmC,WAAA,EACA,CAEAH,EAAAnrC,EAAA,GAAA+qC,oBAAA3P,EAAA2P,oBAGAI,EAAAnrC,EAAA,GAAA+qC,kBAAA3P,EAAA2P,mBAEA,KACA,OAxBA3P,EAAA6P,UAAAF,kBAAA3P,EAAA2P,kBA4BA,GAAA3P,EAAA8P,WAAAH,mBASA,GAFA3P,EAAA8P,WAAAtpC,KAAAwpC,wBAAAhQ,EAAA8P,WAAAH,kBAAA,uBAEAI,EAEA,IAAA,IAAAnrC,EAAA8qC,EAAA,EAAA9qC,EAAAmrC,EAAA/sC,OAAA4B,IACA,CACA,GAAA,mBAAAmrC,EAAAnrC,GAAAmnC,OAAAgE,EAAAnrC,GAAAqrC,QAEAF,EAAAnrC,GAAAP,eAAA,eAAA27B,EAAA4P,UAAAvrC,eAAA,eAEA0rC,EAAAnrC,GAAAmpC,WAAAmC,WAAA,EACA,CAEAH,EAAAnrC,EAAA,GAAA+qC,oBAAA3P,EAAA2P,oBAGAI,EAAAnrC,EAAA,GAAA+qC,kBAAA3P,EAAA2P,mBAEA,KACA,CACA,GAAA,mBAAAI,EAAAnrC,GAAAmnC,OAAAgE,EAAAnrC,GAAAqrC,OAEA,KAEA,OA7BAjQ,EAAA8P,WAAAH,kBAAA3P,EAAA2P,kBAmCA,OAFA3P,EAAA4P,UAAAK,QAAA,EAEAjQ,CACA,GAAA,CAAAv7B,IAAA,0BAAAlB,MAEA,SAAAipC,EAAAhB,GAEA,IAAAC,EAAA,WAAA3mC,QAAA0mC,GAAAA,EAAA,CAAAE,oBAAA,IAMA,GAJAD,EAAA0E,2BAAA,SACA1E,EAAA2B,oBAAA,GACA3B,EAAA4B,iBAAA,GAEAb,EAAAxpC,OAAA,EAIA,OAFAyoC,EAAAC,oBAAAjjC,KAAA,kHACAjC,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAyoC,EAAA2B,oBAKA,IADA,IAAAgD,GAAA,EACAxrC,EAAA,EAAAA,EAAA4nC,EAAAxpC,OAAA4B,IAEA,GAAA,MAAA4nC,EAAA5nC,IAAAwrC,EAAA,EAEAA,EAAAxrC,OAGA,GAAA,MAAA4nC,EAAA5nC,GAIA,OAFA6mC,EAAAC,oBAAAjjC,KAAA,yIAAAoB,OAAAumC,EAAA,oBAAAvmC,OAAAjF,EAAA,MACA4B,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAyoC,EAAA2B,qBAIA,GAAAgD,GAEA3E,EAAAC,oBAAAjjC,KAAA,oIACAjC,KAAAysB,IAAA1E,KAAAkd,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,KAEAotC,EAAA,GAEA3E,EAAAC,oBAAAjjC,KAAA,qJAAAoB,OAAAumC,EAAA,wCACA5pC,KAAAysB,IAAA1E,KAAAkd,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,KAEA,IAAAotC,IAOA3E,EAAA0E,2BAAA3D,EAAA,IAIA,IAAA,IAAA5nC,EAAAwrC,EAAA,EAAAxrC,EAAA4nC,EAAAxpC,OAAA4B,IAEA6mC,EAAA2B,oBAAA3kC,KAAAjC,KAAAwpC,wBAAAxD,EAAA5nC,KAMA,IAAAyrC,EAAA,EAEAC,EAAA,EACAC,EAAA,GAEAA,EAAA9nC,KAAA,YAAAoB,OAAAymC,EAAA,OAAAzmC,OAAAwmC,IACA,IAAA,IAAAzrC,EAAA,EAAAA,EAAA6mC,EAAA2B,oBAAApqC,OAAA4B,IAGA,MAAA6mC,EAAA2B,oBAAAxoC,GAAAsnC,OAGAT,EAAA2B,oBAAAxoC,GAAA4rC,MAAAH,EAEA5E,EAAA2B,oBAAAxoC,GAAA+qC,kBAAA,MAAA9lC,OAAAymC,EAAA,OAAAzmC,OAAAwmC,GAIAzrC,EAAA,GAEA,iBAAA6mC,EAAA2B,oBAAAxoC,EAAA,GAAAmnC,OAGAN,EAAA2B,oBAAAxoC,EAAA,GAAAmnC,KAAA,kBAWAN,EAAA2B,oBAAAxoC,GAAA6rC,gBAAAF,EAAAA,EAAAvtC,OAAA,GACAutC,EAAA9nC,KAAAgjC,EAAA2B,oBAAAxoC,GAAA+qC,mBAEAW,IACAD,KAIA,MAAA5E,EAAA2B,oBAAAxoC,GAAAsnC,OAEAmE,IAEA5E,EAAA2B,oBAAAxoC,GAAA4rC,MAAAH,EAGAA,EAAA,IAEA5E,EAAAC,oBAAAjjC,KAAA,8FAAAoB,OAAAjF,EAAA,gDACA4B,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,KAOAyoC,EAAA2B,oBAAAxoC,GAAA+qC,kBAAAY,EAAA/nC,MACAijC,EAAA2B,oBAAAxoC,GAAA6rC,gBAAAF,EAAAA,EAAAvtC,OAAA,KAMAyoC,EAAA2B,oBAAAxoC,GAAAmnC,KAGAN,EAAA2B,oBAAAxoC,GAAA4rC,MAAAH,EACA5E,EAAA2B,oBAAAxoC,GAAA6rC,gBAAAF,EAAAA,EAAAvtC,OAAA,IAqBA,IAFA,IAAA0tC,EAAA,CAAA,EACAC,EAAA,EACA/rC,EAAA,EAAAA,EAAA6mC,EAAA2B,oBAAApqC,OAAA4B,IAEA8rC,EAAArsC,eAAAonC,EAAA2B,oBAAAxoC,GAAA6rC,mBAEAC,EAAAjF,EAAA2B,oBAAAxoC,GAAA6rC,iBAAA,IAEAC,EAAAjF,EAAA2B,oBAAAxoC,GAAA6rC,iBAAAhoC,KAAAgjC,EAAA2B,oBAAAxoC,IAIA6mC,EAAA2B,oBAAAxoC,GAAA4rC,MAAAG,IAEAA,EAAAlF,EAAA2B,oBAAAxoC,GAAA4rC,OAIA,IAAAI,EAAAvtC,OAAA2F,KAAA0nC,GAEAG,EAAA,EACAD,EAAAE,MAEA,SAAAC,EAAAC,GAIA,OAAAN,EAAAK,GAAA,GAAAP,MAAAE,EAAAM,GAAA,GAAAR,MAEA,EAEAE,EAAAK,GAAA,GAAAP,MAAAE,EAAAM,GAAA,GAAAR,OAEA,EAEA,CACA,IAUA/E,EAAAwF,qBAAA,CAAA,EACA,IAAA,IAAAC,EAAA,EAAAA,EAAAN,EAAA5tC,OAAAkuC,IAIA,IAFA,IAAAC,EAAAT,EAAAE,EAAAM,IAEAE,EAAA,EAAAA,GAAA5qC,KAAAknC,iBAAA5C,mBAAAsG,IAIA,IAAA,IAAAxsC,EAAA,EAAAA,EAAAusC,EAAAnuC,OAAA4B,IAGA,GAAA,mBAAAusC,EAAAvsC,GAAAmnC,MACAoF,EAAAvsC,GAAAmpC,WAAAmC,aAAAkB,EACA,CACA,IAAAtF,EAAAqF,EAAAvsC,GAEA,GAAA,IAAAusC,EAAAnuC,OAIA,OAFAyoC,EAAAC,oBAAAjjC,KAAA,sHAAAoB,OAAAjF,IACA4B,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAyoC,EAAA4B,iBAGA,GAAA,GAAAzoC,IAAA,KAAAknC,EAAAI,OAAA,KAAAJ,EAAAI,OAIA,OAFAT,EAAAC,oBAAAjjC,KAAA,iIAAAoB,OAAAjF,IACA4B,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAyoC,EAAA4B,iBAGA,GAAAzoC,GAAAusC,EAAAnuC,OAAA,EAIA,OAFAyoC,EAAAC,oBAAAjjC,KAAA,2HAAAoB,OAAAjF,IACA4B,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAyoC,EAAA4B,iBAIA,GAAA,GAAAzoC,GAAA,KAAAknC,EAAAI,MAEAJ,EAAA6D,kBAAA,KAAA9lC,OAAAgnC,GACApF,EAAAwF,qBAAAnF,EAAA2E,iBAAA3E,EAAA6D,kBACAkB,SAGA,GAAAjsC,EAAA,GAAA,KAAAknC,EAAAI,QAAA,mBAAAiF,EAAAvsC,EAAA,GAAAmnC,MAAA,MAAAoF,EAAAvsC,EAAA,GAAAsnC,OAGAJ,EAAA6D,kBAAA,KAAA9lC,OAAAgnC,GACAA,QAGA,IAAA,GAAAjsC,GAAA,KAAAknC,EAAAI,MAEA,SAGA,GAAAtnC,EAAA,GAAA,KAAAknC,EAAAI,QAAA,mBAAAiF,EAAAvsC,EAAA,GAAAmnC,MAAA,MAAAoF,EAAAvsC,EAAA,GAAAsnC,OAEA,SAIA,GAAA,mBAAAiF,EAAAvsC,EAAA,GAAAmnC,MAAA,mBAAAoF,EAAAvsC,EAAA,GAAAmnC,KAIA,OAFAN,EAAAC,oBAAAjjC,KAAA,oFAAAoB,OAAAjF,EAAA,2CACA4B,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,IACAyoC,EAAA4B,iBAMAvB,EAAA6D,kBAAA,KAAA9lC,OAAAgnC,GACApF,EAAAwF,qBAAAnF,EAAA2E,iBAAA3E,EAAA6D,kBACAkB,GACA,CACA,MACA,GAAA,mBAAAM,EAAAvsC,GAAAmnC,MAAA,IAAAqF,EACA,CACA,IAAAtF,EAAAqF,EAAAvsC,GACAknC,EAAA6D,kBAAA,KAAA9lC,OAAAgnC,GACAA,IACApF,EAAAwF,qBAAAnF,EAAA2E,iBAAA3E,EAAA6D,iBACA,CAQA,IADA,IAAA0B,EAAA,GACAzsC,EAAA,EAAAA,EAAA6mC,EAAA2B,oBAAApqC,OAAA4B,IACA,CACA,IAAA0sC,EAAA7F,EAAA2B,oBAAAxoC,GAEA,GAAA,sBAAA0sC,EAAAvF,KACA,CAIA,GAFAuF,EAAAC,iBAAAD,EAAA3B,kBAEA,MAAA2B,EAAApF,MACA,CAEA,GAAAtnC,EAAA,GAEA,GAAA,mBAAA6mC,EAAA2B,oBAAAxoC,EAAA,GAAAmnC,KAEAuF,EAAAE,mBAAA/F,EAAA2B,oBAAAxoC,EAAA,GAAAmpC,WAAAmC,WACAoB,EAAAG,YAAA,EACAH,EAAAI,0BAAAjG,EAAA2B,oBAAAxoC,EAAA,GAAA+qC,kBACA2B,EAAA3B,kBAAAlE,EAAAwF,qBAAAK,EAAA3B,wBAGA,GAAA,mBAAAlE,EAAA2B,oBAAAxoC,EAAA,GAAAmnC,KACA,CACAuF,EAAAE,mBAAA,EACAF,EAAAG,YAAA,EACAH,EAAAI,0BAAAjG,EAAA2B,oBAAAxoC,EAAA,GAAA+qC,kBACA,IAAAgC,EAAAlG,EAAAwF,qBAAAK,EAAA3B,mBASA,GARAgC,IAGAA,EAAA,KAAA9nC,OAAAgnC,GACAA,KAEAS,EAAA3B,kBAAAgC,EAEA/sC,EAAA,EAIA,mBADA6mC,EAAA2B,oBAAAxoC,EAAA,GACAmnC,OAEAuF,EAAAI,0BAAAjG,EAAA2B,oBAAAxoC,EAAA,GAAA+qC,kBACA2B,EAAAE,mBAAA/F,EAAA2B,oBAAAxoC,EAAA,GAAAmpC,WAAAmC,WAGA,OAIAoB,EAAA3B,kBAAAlE,EAAAwF,qBAAAK,EAAA3B,mBAEA0B,EAAA5oC,KAAA6oC,EACA,CACA,GAAA,MAAAA,EAAApF,MACA,CAEA,IAAA0F,EAAAP,EAAA7oC,MAEA,GAAA5D,GAAA6mC,EAAA2B,oBAAApqC,OAAA,EAEA4uC,EAAAH,WAEAH,EAAA3B,kBAAAiC,EAAAF,0BAIAJ,EAAA3B,kBAAAiC,EAAAjC,sBAIA,CAEA,IAAAkC,EAAApG,EAAA2B,oBAAAxoC,EAAA,GACA,kBAAAitC,EAAA9F,MAAA6F,EAAAH,WAUAI,EAAA9D,WAAAmC,WAAA0B,EAAAJ,oBAEAI,EAAAjC,kBAAAkC,EAAAlC,kBACA2B,EAAA3B,kBAAAlE,EAAAwF,qBAAAK,EAAA3B,oBAKA2B,EAAA3B,kBAAAiC,EAAAF,0BAIA,kBAAAG,EAAA9F,MAAA6F,EAAAvtC,eAAA,sBAKAwtC,EAAA9D,WAAAmC,YAAA0B,EAAAJ,mBAEAF,EAAA3B,kBAAAiC,EAAAF,2BAKAJ,EAAA3B,kBAAAlE,EAAAwF,qBAAAK,EAAA3B,mBACAiC,EAAAjC,kBAAAkC,EAAAlC,mBAMAiC,EAAAH,WAEAH,EAAA3B,kBAAAiC,EAAAF,0BAIAJ,EAAA3B,kBAAAlE,EAAAwF,qBAAAK,EAAA3B,kBAGA,CAGAlE,EAAAwF,qBAAAW,EAAAL,oBAEA9F,EAAAwF,qBAAAW,EAAAL,kBAAAK,EAAAjC,kBAEA,CACA,CACA,CAEA,IAAA,IAAAuB,EAAA,EAAAA,EAAAN,EAAA5tC,OAAAkuC,IACA,CACA,IAAAC,EAAAT,EAAAE,EAAAM,IAEA,GAAA,IAAAC,EAAAnuC,OACA,CAGA,IAAA8uC,EAAAtrC,KAAAwpC,wBAAA,KAEA8B,EAAAnC,kBAAAlE,EAAAwF,qBAAAE,EAAA,GAAAV,iBACAhF,EAAA4B,iBAAA5kC,KAAAjC,KAAAurC,4BAAAD,EAAAtrC,KAAAwpC,wBAAA,OAAAmB,EAAA,IACA,CACA,CAGA,IAAA,IAAAD,EAAA,EAAAA,EAAAN,EAAA5tC,OAAAkuC,IAKA,IAHA,IAAAC,EAAAT,EAAAE,EAAAM,IAGAE,EAAA,EAAAA,GAAA5qC,KAAAknC,iBAAA5C,mBAAAsG,IAIA,IAAA,IAAAxsC,EAAA,EAAAA,EAAAusC,EAAAnuC,OAAA4B,IAGA,GAAA,mBAAAusC,EAAAvsC,GAAAmnC,MACAoF,EAAAvsC,GAAAmpC,WAAAmC,aAAAkB,EACA,CACA,IAAAtF,EAAAqF,EAAAvsC,GAEA,GAAA,GAAAA,GAAA,KAAAknC,EAAAI,MACA,CAGA,IAAA8F,EAAAxrC,KAAAyrC,wBAAA,KACAD,EAAArC,kBAAA7D,EAAA6D,kBACAlE,EAAA4B,iBAAA5kC,KAAAjC,KAAAurC,4BAAAC,EAAAxrC,KAAAwpC,wBAAA,QAAAmB,EAAAvsC,EAAA,IACA,MAEA,GAAAA,EAAA,GAAA,KAAAknC,EAAAI,QAAA,mBAAAiF,EAAAvsC,EAAA,GAAAmnC,MAAA,MAAAoF,EAAAvsC,EAAA,GAAAsnC,OACA,CAEA,IAAA8F,EAAAxrC,KAAAyrC,wBAAA,KACAD,EAAArC,kBAAA7D,EAAA6D,kBACAlE,EAAA4B,iBAAA5kC,KAAAjC,KAAAurC,4BAAAC,EAAAxrC,KAAAwpC,wBAAA,QAAAmB,EAAAvsC,EAAA,IACA,KAEA,IAAA,GAAAA,GAAA,KAAAknC,EAAAI,MAEA,SAGA,GAAAtnC,EAAA,GAAA,KAAAknC,EAAAI,QAAA,mBAAAiF,EAAAvsC,EAAA,GAAAmnC,MAAA,MAAAoF,EAAAvsC,EAAA,GAAAsnC,OAEA,SAMAT,EAAA4B,iBAAA5kC,KAAAjC,KAAAurC,4BAAAjG,EAAAqF,EAAAvsC,EAAA,GAAAusC,EAAAvsC,EAAA,GAAAusC,EAAAvsC,GACA,CACA,MACA,GAAA,mBAAAusC,EAAAvsC,GAAAmnC,MAAA,IAAAqF,EACA,CACA,IAAAtF,EAAAqF,EAAAvsC,GAEA6mC,EAAA4B,iBAAA5kC,KAAAjC,KAAAurC,4BAAAjG,EAAAqF,EAAAvsC,EAAA,GAAA4B,KAAAwpC,wBAAA,QACA,CAMA,IAAAkC,EAAA1rC,KAAAurC,4BAAAvrC,KAAAwpC,wBAAA,SAAA,2BAAAxpC,KAAAwpC,wBAAA,kBAAA,2BAAAxpC,KAAAwpC,wBAAA,YAAA,4BAIA,OAHAkC,EAAAvC,kBAAAlE,EAAA0E,2BACA1E,EAAA4B,iBAAA5kC,KAAAypC,GAEAzG,EAAA4B,gBACA,IAAA,CAjnBA,CAFA1mC,EAAA,6CAsnBAT,EAAAD,QAAAkpC,CtE45PA,EAAE,CAAC,2CAA2C,KAAK,GAAG,CAAC,SAASxoC,EAAQT,EAAOD,GuElhR/E,IAEAksC,EAAA,SAAAC,GAEA,SAAAD,EAAAp1B,EAAAgb,EAAA9a,GACA,IAAAo1B,EAGA,OAHA9tC,iBAAAiC,KAAA2rC,IACAE,EAAAntC,WAAAsB,KAAA2rC,EAAA,CAAAp1B,EAAAgb,EAAA9a,KAEAE,YAAA,0BAAAk1B,CACA,CAAA,OAAAxsC,UAAAssC,EAAAC,GAAA1tC,cAAAytC,EAAA,CAAA,CAAA1tC,IAAA,2BAAAlB,MAEA,SAAAopC,EAAAC,EAAApB,EAAAxuB,GAEA,IAAAyuB,EAAA,WAAA3mC,QAAA0mC,GAAAA,EAAA,CAAAE,oBAAA,IAEAE,EAAA,WAAA9mC,QAAAkY,GAAAA,EAAAxW,KAAA0xB,MAAA2T,cAEAoB,EAAA,WAAAnoC,QAAA8nC,GAAAA,EAAA,CAAA,EAGA0F,EAAA7G,EAAApnC,eAAA,SAMA,GALAiuC,IAEA7G,EAAAvT,MAAA1xB,KAAA0xB,QAGAx1B,MAAAK,QAAA4pC,GAIA,OAFAlB,EAAAC,oBAAAjjC,KAAA,iGACAjC,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,KACA,EAEA,GAAA2pC,EAAA3pC,OAAA,EAIA,OAFAyoC,EAAAC,oBAAAjjC,KAAA,8FACAjC,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,KACA,EAIAyoC,EAAA8G,eAAA,CAAA,EAEA,IAAA,IAAA3tC,EAAA,EAAAA,EAAA+nC,EAAA3pC,OAAA4B,IAEA,GAAA,4BAAA+nC,EAAA/nC,GAAAgrC,UAAA7D,KAAA,CAIA,IAAAyG,EAAA,CAAAC,eAAA9F,EAAA/nC,GAAA8tC,oBAAA9tC,EAAA+tC,cAAAlH,EAAAmH,SAAAhH,GAsBA,GAnBA,wBAAA4G,EAAAC,eAAA5C,UAAA9D,OAEAyG,EAAAC,eAAA5C,UAAAzD,MAAAR,EAAAS,kBAAAZ,EAAA8G,eAAAC,EAAAC,eAAA5C,UAAA3D,QAEA,wBAAAsG,EAAAC,eAAA3C,WAAA/D,OAEAyG,EAAAC,eAAA3C,WAAA1D,MAAAR,EAAAS,kBAAAZ,EAAA8G,eAAAC,EAAAC,eAAA3C,WAAA5D,QAIA,sBAAAsG,EAAAC,eAAA5C,UAAA9D,OAEAyG,EAAAC,eAAA5C,UAAAzD,MAAAR,EAAAS,kBAAAZ,EAAA8G,eAAAC,EAAAC,eAAA5C,UAAAF,oBAEA,sBAAA6C,EAAAC,eAAA3C,WAAA/D,OAEAyG,EAAAC,eAAA3C,WAAA1D,MAAAR,EAAAS,kBAAAZ,EAAA8G,eAAAC,EAAAC,eAAA3C,WAAAH,oBAGA6C,EAAAC,eAAA7C,UAAA7D,KAAA,WACA,CAGA,IAAA8G,GAAA,EACArsC,KAAAknC,iBAAA7C,SAAAxmC,eAAAmuC,EAAAC,eAAA7C,UAAA1D,OAEA2G,EAAA,iBAAAhpC,OAAA2oC,EAAAC,eAAA7C,UAAA7B,WAAA3hB,UAEA5lB,KAAAknC,iBAAA3C,YAAA1mC,eAAAmuC,EAAAC,eAAA7C,UAAA1D,MAAAt4B,iBAEAi/B,EAAA,iBAAAhpC,OAAArD,KAAAknC,iBAAA3C,YAAAyH,EAAAC,eAAA7C,UAAA1D,MAAAt4B,eAAA46B,UAGA,IAEAhoC,KAAAysB,IAAAqD,MAAA,gBAAAzsB,OAAAjF,EAAA,MAAAiF,OAAA2oC,EAAAC,eAAA9C,kBAAA,cAAA9lC,OAAA2oC,EAAAC,eAAA7C,UAAA1D,MAAA,SAAAriC,OAAA2oC,EAAAC,eAAA5C,UAAAzD,MAAA,OAAAviC,OAAA2oC,EAAAC,eAAA3C,WAAA1D,MAAA,OACAX,EAAA8G,eAAAC,EAAAC,eAAA9C,mBAAA/D,EAAAS,kBAAAmG,EAAA,GAAA3oC,OAAAgpC,EAAA,qEACArsC,KAAAysB,IAAAqD,MAAA,mBAAAzsB,OAAAjF,EAAA,MAAAiF,OAAA4hC,EAAA8G,eAAAC,EAAAC,eAAA9C,oBACA,CACA,MAAA5vB,GAIA,OAFA0rB,EAAAC,oBAAAjjC,KAAA,yEAAAoB,OAAAjF,EAAA,mBAAAiF,OAAA2oC,EAAAC,eAAA7C,UAAA1D,MAAA,MACA1lC,KAAAysB,IAAAzb,MAAAi0B,EAAAC,oBAAAD,EAAAC,oBAAA1oC,OAAA,KACA,CACA,CAGAyoC,EAAAqH,yBAAAN,EAAAC,eAAA9C,iBACA,CApDA,CA0DA,IAHA,IAAAoD,EAAAnH,EAAAS,kBAAAZ,EAAA,kBAAA5hC,OAAA4hC,EAAAqH,2BAGAluC,EAAA,EAAAA,EAAA+nC,EAAA3pC,OAAA4B,IAEA,4BAAA+nC,EAAA/nC,GAAAgrC,UAAA7D,MAAA,UAAAY,EAAA/nC,GAAAgrC,UAAA1D,QAEAN,EAAAoH,kBAAAvH,EAAA8G,eAAA5F,EAAA/nC,GAAA+qC,kBAAAoD,GACAnH,EAAAqH,eAAAhG,EAAAN,EAAA/nC,GAAA+qC,kBAAAoD,IAUA,OALAT,UAEA7G,EAAAvT,MAGA6a,EAAA1wC,UACA,IAAA,CAvHA,CAFAsE,EAAA,6CA4HAT,EAAAD,QAAAksC,CvEqhRA,EAAE,CAAC,2CAA2C,KAAK,GAAG,CAAC,SAASxrC,EAAQT,EAAOD,GwEjpR/EC,EAAAD,QAAA,CACA,IACA,CACAsoC,KAAA,SACArC,MAAA,IACAgE,WAAA,EACAnE,KAAA,cAGA,IACA,CACAwC,KAAA,mBACArC,MAAA,IACAgE,WAAA,EACAnE,KAAA,eAEA,IACA,CACAwC,KAAA,oBACArC,MAAA,IACAgE,WAAA,EACAnE,KAAA,eAGA,IACA,CACAwC,KAAA,WACArC,MAAA,IACA9f,SAAA,6BACA8jB,WAAA,EACAnE,KAAA,YAEA,IACA,CACAwC,KAAA,SACArC,MAAA,IACA9f,SAAA,2BACA8jB,WAAA,EACAnE,KAAA,YAGA,IACA,CACAwC,KAAA,WACArC,MAAA,IACA9f,SAAA,0BACA8jB,WAAA,EACAnE,KAAA,YAEA,IACA,CACAwC,KAAA,UACArC,MAAA,IACA9f,SAAA,wBACA8jB,WAAA,EACAnE,KAAA,YAGA,IACA,CACAwC,KAAA,MACArC,MAAA,IACA9f,SAAA,wBACA8jB,WAAA,EACAnE,KAAA,YAEA,IACA,CACAwC,KAAA,WACArC,MAAA,IACA9f,SAAA,6BACA8jB,WAAA,EACAnE,KAAA,YxEqpRA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASplC,EAAQT,EAAOD,IAClC,SAAW0yB,IAAS,WyE9tRpB,IAAA0E,EAAA12B,EAAA,6BAEAysB,EAAAzsB,EAAA,MACA0sB,EAAA1sB,EAAA,QACAusC,EAAAvsC,EAAA,YAGAwsC,EAAA,SAAAC,GAEA,SAAAD,EAAAp2B,EAAAgb,EAAA9a,GACA,IAAAo2B,EAYA,OAZA9uC,iBAAAiC,KAAA2sC,IACAE,EAAAnuC,WAAAsB,KAAA2sC,EAAA,CAAAp2B,EAAAgb,EAAA9a,KAEAE,YAAA,kBAEAk2B,EAAAtyB,QAAA1c,eAAA,UAEAgvC,EAAAtyB,QAAAuyB,KAAA/9B,SAAA,OAAA,IAAAojB,EAAA4a,SAGAF,EAAAjgB,MAAAA,EACAigB,EAAAhgB,QAAAA,EACAggB,EAAAH,YAAAA,EAAAG,CACA,CAAA,OAAAxtC,UAAAstC,EAAAC,GAAA1uC,cAAAyuC,EAAA,CAAA,CAAA1uC,IAAA,WAAAlB,MAEA,WAEA,OAAA8vB,EAAAzG,QAAAzoB,MAAAkvB,EAAAnvB,UACA,GAAA,CAAAO,IAAA,aAAAlB,MAEA,SAAAiwC,GAEA,OAAApgB,EAAAqgB,WAAAD,EACA,GAAA,CAAA/uC,IAAA,SAAAlB,MAEA,SAAAiwC,EAAAjT,GAIA,OAAAA,EAAA,KAFA/5B,KAAAitC,WAAAD,GAGA,GAAA,CAAA/uC,IAAA,iBAAAlB,MAEA,SAAAmwC,EAAAC,EAAA5b,GAEA,IAAA6b,OAAA,IAAA7b,EAAA,OAAAA,EACA,OAAA3E,EAAAygB,eAAAH,EAAAC,EAAAC,EACA,GAAA,CAAAnvC,IAAA,iBAAAlB,MAEA,SAAAmwC,GAEA,OAAAtgB,EAAA0gB,WAAAJ,EACA,GAAA,CAAAjvC,IAAA,mBAAAlB,MAEA,SAAAmwC,GAEA,OAAAtgB,EAAA2gB,UAAAL,EACA,GAAA,CAAAjvC,IAAA,eAAAlB,MAEA,SAAAywC,EAAAjc,GAEA,IAAA6b,OAAA,IAAA7b,EAAA,OAAAA,EACA,OAAA3E,EAAA6gB,aAAAD,EAAAJ,EACA,GAAA,CAAAnvC,IAAA,WAAAlB,MAEA,SAAAywC,EAAAjc,EAAAwI,GAEA,IAAAqT,OAAA,IAAA7b,EAAA,OAAAA,EACA,OAAA3E,EAAA8gB,SAAAF,EAAAJ,EAAArT,EACA,GAAA,CAAA97B,IAAA,gBAAAlB,MAEA,SAAAmwC,EAAAS,EAAApc,GAEA,IAAA6b,OAAA,IAAA7b,EAAA,OAAAA,EACA,OAAA3E,EAAAghB,cAAAV,EAAAS,EAAAP,EACA,GAAA,CAAAnvC,IAAA,0BAAAlB,MAEA,SAAAmwC,EAAA5gB,GAEA,OAAAtsB,KAAA4tC,cAAAV,EAAAxgB,KAAApmB,UAAAgmB,EAAA,KAAA,GACA,GAAA,CAAAruB,IAAA,yBAAAlB,MAEA,SAAAmwC,EAAAW,GAEA,IAAA3xC,MAAAK,QAAAsxC,GAGA,OADA7tC,KAAAysB,IAAAzb,MAAA,+CAAA3N,OAAA6pC,EAAA,kEAAA7pC,OAAA/E,QAAAuvC,GAAA,OACAxtC,MAAA,wHAIA,IAAA,IAAAjC,EAAA,EAAAA,EAAAyvC,EAAArxC,OAAA4B,IAEA,OAAA4B,KAAAqtC,eAAAH,EAAA,GAAA7pC,OAAAwqC,EAAAzvC,GAAA,MAGA,GAAA,CAAAH,IAAA,YAAAlB,MAEA,SAAAmwC,EAAAS,EAAApc,EAAAwI,GAEA,IAAAqT,OAAA,IAAA7b,EAAA,OAAAA,EACA,OAAA3E,EAAAkhB,UAAAZ,EAAAS,EAAAP,EAAArT,EACA,GAAA,CAAA97B,IAAA,oBAAAlB,MAEA,SAAAywC,EAAAO,EAAAC,EAAAC,GAEA,IAAAC,EAAA,CAAA,EAEA,MAAA,iBAAAV,IAKAU,EAAAC,SAAAX,EAEAU,EAAAE,WAAAxhB,EAAAyhB,iBAAAH,EAAAC,UAEAD,EAAAI,OAAA5B,EAAA6B,gBAAA,CAAAC,MAAAN,EAAAE,WAAAK,UAAA54B,MAEA,mBAAAo4B,GAEAC,EAAAI,OAAA1nB,GAAA,QAAAqnB,GAGAC,EAAAI,OAAA1nB,GAAA,OAAA,mBAAAmnB,EAAAA,EAAA,WAAA,GAEA,mBAAAC,GAEAE,EAAAI,OAAA1nB,GAAA,QAAAonB,GAGAE,EACA,GAEA,CAAAjwC,IAAA,sBAAAlB,MACA,SAAA2xC,EAAA3U,GACA,IAAA4U,EAAA3uC,KACA4uC,EAAAF,EAEA,GAAA,iBAAAA,EAEAE,EAAA,CAAAC,KAAAH,QAEA,GAAA,WAAApwC,QAAAowC,GAGA,OADA3U,EAAA,IAAA15B,MAAA,iFACA,EAGA,MAAA,iBAAAuuC,EAAAC,MAEA9U,EAAA,IAAA15B,MAAA,wEACA,IAGAuuC,EAAA/wC,eAAA,UAEA+wC,EAAA9B,KAAA9sC,KAAAua,QAAAuyB,WAIA,IAAA8B,EAAAE,kBAGAF,EAAAG,WAAAliB,EAAAM,UAAAyhB,EAAAC,MACAD,EAAAI,gBAAAJ,EAAAG,WAAAh5B,MAAA8W,EAAAoiB,KACAL,EAAAE,iBAAA,EACAF,EAAAM,YAAA,KAMAN,EAAAM,aAAAriB,EAAAoiB,IAEAL,EAAAM,YAAAN,EAAAM,YAAAN,EAAAI,gBAAAJ,EAAAE,kBAIAF,EAAAM,YAAAN,EAAAM,YAAAriB,EAAAoiB,IAAAL,EAAAI,gBAAAJ,EAAAE,kBAIAF,EAAAE,oBAIAF,EAAAE,kBAAAF,EAAAI,gBAAAxyC,OAEAu9B,EAAA,WAIAnN,EAAAuiB,KAAAP,EAAAM,YAAAriB,EAAAoiB,IAAAL,EAAAI,gBAAAJ,EAAAE,kBAAA,KACA,SAAAv1B,EAAA61B,GAOA,GALAA,GAEAxiB,EAAAyiB,UAAAD,IAGA71B,GAAA,UAAAA,EAAAjZ,KAyBA,OAAAquC,EAAAW,oBAAAV,EAAA7U,GAtBAnN,EAAA2iB,MAAAX,EAAAM,YAAAriB,EAAAoiB,IAAAL,EAAAI,gBAAAJ,EAAAE,kBAAAF,EAAA9B,MACA,SAAA0C,GAEA,OAAAA,EAKA,UAAAA,EAAAlvC,KAGAquC,EAAAW,oBAAAV,EAAA7U,IAIAhpB,QAAA0b,IAAA+iB,EAAAlvC,MACAy5B,EAAAyV,IAVAb,EAAAW,oBAAAV,EAAA7U,EAYA,GAMA,IACA,IAAA,CA7NA,CAAAlD,GAgOAn3B,EAAAD,QAAAktC,CzEguRC,GAAE7wC,KAAKkE,KAAM,GAAElE,KAAKkE,KAAKG,EAAQ,YAElC,EAAE,CAAC8yB,SAAW,IAAI,4BAA4B,GAAG3E,GAAK,GAAGjT,KAAO,IAAIo0B,SAAW,KAAK,GAAG,CAAC,SAAStvC,EAAQT,EAAOD,G0Ez8RhH,IASAiwC,EAAA,SAAAC,GAEA,SAAAD,EAAAn5B,EAAAgb,EAAA9a,GACA,IAAAm5B,EAGA,OAHA7xC,iBAAAiC,KAAA0vC,IACAE,EAAAlxC,WAAAsB,KAAA0vC,EAAA,CAAAn5B,EAAAgb,EAAA9a,KAEAE,YAAA,OAAAi5B,CACA,CAEA,OAAAvwC,UAAAqwC,EAAAC,GAAAzxC,cAAAwxC,EAAA,CAAA,CAAAzxC,IAAA,YAAAZ,IAUA,WAAA,OAAA2C,KAAA0xB,MAAAyN,QAAAC,UAAA90B,SAAA,GAAA,CAAArM,IAAA,cAAAZ,IACA,WAAA,OAAA2C,KAAA0xB,MAAAyN,QAAAC,UAAA70B,WAAA,GAAA,CAAAtM,IAAA,gBAAAZ,IACA,WAAA,OAAA2C,KAAA0xB,MAAAyN,QAAAC,UAAA50B,aAAA,GAAA,CAAAvM,IAAA,UAAAZ,IACA,WAAA,OAAA2C,KAAA0xB,MAAAyN,QAAAC,UAAA30B,OAAA,GAAA,CAAAxM,IAAA,eAAAlB,MAEA,SAAAyhC,EAAAqR,GAEA,IAAAC,EAEA,IAEAA,EAAA,IAAA9vC,KAAA0xB,MAAAyN,QAAAC,UAAAZ,EACA,CACA,MAAAjlB,GAEAvZ,KAAAysB,IAAA1E,KAAA,8BAAA1kB,OAAA/E,QAAAkgC,GAAA,OAAAn7B,OAAAkW,IACAu2B,OAAA,IAAAD,EAAA,MAAAA,CACA,CAEA,OAAAC,EAAAj0C,UACA,GAAA,CAAAoC,IAAA,oBAAAlB,MAEA,SAAAgzC,EAAAC,GAEA,IAAAC,EAAA/0B,MAAA60B,GAAA,EAAAA,EACAG,EAAAh1B,MAAA80B,GAAA,EAAAA,EAEA,GAAA,GAAAE,EAEA,MAAA,IAGA,IACAC,EADA,IAAAnwC,KAAA0xB,MAAAyN,QAAAC,UAAA6Q,GACA/oC,IAAAgpC,GAEA,OADAC,EAAAA,EAAApnC,MAAA,MACAlN,UACA,GAAA,CAAAoC,IAAA,eAAAlB,MAEA,SAAAyhC,EAAA4R,EAAA1R,GAEA,IAAAtJ,EAAAla,MAAAsjB,GAAA,EAAAA,EACA6R,EAAAn1B,MAAAk1B,GAAA,EAAAA,EACAE,OAAA,IAAA5R,EAAA1+B,KAAAuK,YAAAm0B,EAIA,OAFA,IAAA1+B,KAAA0xB,MAAAyN,QAAAC,UAAAhK,GACAtvB,MAAAuqC,EAAAC,GACAz0C,UACA,GAAA,CAAAoC,IAAA,iBAAAlB,MAEA,SAAAyhC,EAAA4R,EAAA1R,GAEA,IAAAtJ,EAAAla,MAAAsjB,GAAA,EAAAA,EACA6R,EAAAn1B,MAAAk1B,GAAA,EAAAA,EACAE,OAAA,IAAA5R,EAAA1+B,KAAAuK,YAAAm0B,EAKA,OAHA,IAAA1+B,KAAA0xB,MAAAyN,QAAAC,UAAAhK,GACA3rB,QAAA4mC,EAAAC,GAEAz0C,UACA,GAAA,CAAAoC,IAAA,aAAAlB,MAEA,SAAAgsC,EAAAC,GAEA,IAAAiH,EAAA/0B,MAAA6tB,GAAA,EAAAA,EACAmH,EAAAh1B,MAAA8tB,GAAA,EAAAA,EAIA,OAFA,IAAAhpC,KAAA0xB,MAAAyN,QAAAC,UAAA6Q,GACAxnC,KAAAynC,GACAr0C,UACA,GAAA,CAAAoC,IAAA,kBAAAlB,MAEA,SAAAgsC,EAAAC,GAEA,IAAAiH,EAAA/0B,MAAA6tB,GAAA,EAAAA,EACAmH,EAAAh1B,MAAA8tB,GAAA,EAAAA,EAIA,OAFA,IAAAhpC,KAAA0xB,MAAAyN,QAAAC,UAAA6Q,GACA3nC,MAAA4nC,GACAr0C,UACA,GAEA,CAAAoC,IAAA,eAAAlB,MACA,SAAAgsC,EAAAC,GAEA,IAAAiH,EAAA/0B,MAAA6tB,GAAA,EAAAA,EACAmH,EAAAh1B,MAAA8tB,GAAA,EAAAj6B,SAAAi6B,GAIA,OAFA,IAAAhpC,KAAA0xB,MAAAyN,QAAAC,UAAA6Q,GACA/mC,IAAAgnC,GACAr0C,UACA,GAAA,CAAAoC,IAAA,kBAAAlB,MAEA,SAAAgsC,EAAAC,GAEA,IAAAiH,EAAA/0B,MAAA6tB,GAAA,EAAAA,EACAmH,EAAAh1B,MAAA8tB,GAAA,EAAAA,EAIA,OAFA,IAAAhpC,KAAA0xB,MAAAyN,QAAAC,UAAA6Q,GACAlnC,MAAAmnC,GACAr0C,UACA,GAAA,CAAAoC,IAAA,gBAAAlB,MAEA,SAAAgsC,EAAAC,GAEA,IAAAiH,EAAA/0B,MAAA6tB,GAAA,EAAAA,EACAmH,EAAAh1B,MAAA8tB,GAAA,EAAAA,EAIA,OAFA,IAAAhpC,KAAA0xB,MAAAyN,QAAAC,UAAA6Q,GACA/oC,IAAAgpC,GACAr0C,UACA,GAAA,CAAAoC,IAAA,aAAAlB,MAEA,SAAAgsC,EAAAC,GAEA,IAAAiH,EAAA/0B,MAAA6tB,GAAA,EAAAA,EACAmH,EAAAh1B,MAAA8tB,GAAA,EAAAA,EAIA,OAFA,IAAAhpC,KAAA0xB,MAAAyN,QAAAC,UAAA6Q,GACApnC,IAAAqnC,GACAr0C,UACA,GAAA,CAAAoC,IAAA,cAAAlB,MAEA,SAAAyhC,GAEA,IAAApJ,EAAAla,MAAAsjB,GAAA,EAAAA,EAIA,OAFA,IAAAx+B,KAAA0xB,MAAAyN,QAAAC,UAAAhK,GACA/rB,OACAxN,UACA,GAAA,CAAAoC,IAAA,aAAAlB,MAEA,SAAAyhC,GAEA,IAAApJ,EAAAla,MAAAsjB,GAAA,EAAAA,EAIA,OAFA,IAAAx+B,KAAA0xB,MAAAyN,QAAAC,UAAAhK,GACAzuB,MACA9K,UACA,GAAA,CAAAoC,IAAA,iBAAAlB,MAEA,SAAAgsC,EAAAC,GAEA,IAAAiH,EAAA/0B,MAAA6tB,GAAA,EAAAA,EACAmH,EAAAh1B,MAAA8tB,GAAA,EAAAA,EAGA,OADA,IAAAhpC,KAAA0xB,MAAAyN,QAAAC,UAAA6Q,GACArpC,IAAAspC,EACA,GAAA,CAAAjyC,IAAA,YAAAlB,MAEA,SAAAgsC,EAAAC,GAEA,IAAAiH,EAAA/0B,MAAA6tB,GAAA,EAAAA,EACAmH,EAAAh1B,MAAA8tB,GAAA,EAAAA,EAGA,OADA,IAAAhpC,KAAA0xB,MAAAyN,QAAAC,UAAA6Q,GACA/nC,GAAAgoC,EACA,GAAA,CAAAjyC,IAAA,aAAAlB,MAEA,SAAAgsC,EAAAC,GAEA,IAAAiH,EAAA/0B,MAAA6tB,GAAA,EAAAA,EACAmH,EAAAh1B,MAAA8tB,GAAA,EAAAA,EAGA,OADA,IAAAhpC,KAAA0xB,MAAAyN,QAAAC,UAAA6Q,GACA9nC,IAAA+nC,EACA,GAAA,CAAAjyC,IAAA,YAAAlB,MAEA,SAAAgsC,EAAAC,GAEA,IAAAiH,EAAA/0B,MAAA6tB,GAAA,EAAAA,EACAmH,EAAAh1B,MAAA8tB,GAAA,EAAAA,EAGA,OADA,IAAAhpC,KAAA0xB,MAAAyN,QAAAC,UAAA6Q,GACA7nC,GAAA8nC,EACA,GAAA,CAAAjyC,IAAA,aAAAlB,MAEA,SAAAgsC,EAAAC,GAEA,IAAAiH,EAAA/0B,MAAA6tB,GAAA,EAAAA,EACAmH,EAAAh1B,MAAA8tB,GAAA,EAAAA,EAGA,OADA,IAAAhpC,KAAA0xB,MAAAyN,QAAAC,UAAA6Q,GACA7nC,GAAA8nC,EACA,GAAA,CAAAjyC,IAAA,aAAAlB,MAEA,SAAAwzC,GAEA,IAAAC,EAAAt1B,MAAAq1B,GAAA,EAAAA,EAKA,OAHA,IAAAvwC,KAAA0xB,MAAAyN,QAAAC,UAAAoR,GAEAznC,MAAAnG,KAAA6tC,IAAAvpC,IAAA,KACArL,UACA,GAAA,CAAAoC,IAAA,MAAAlB,MAEA,SAAA2zC,GAEA,IAAAC,EAAAz1B,MAAAw1B,GAAA,EAAAA,EACA,OAAA9tC,KAAAslC,IAAAyI,EACA,GAAA,CAAA1yC,IAAA,MAAAlB,MAEA,SAAA2zC,GAEA,IAAAC,EAAAz1B,MAAAw1B,GAAA,EAAAA,EACA,OAAA9tC,KAAAguC,IAAAD,EACA,GAAA,CAAA1yC,IAAA,MAAAlB,MAEA,SAAA2zC,GAEA,IAAAC,EAAAz1B,MAAAw1B,GAAA,EAAAA,EACA,OAAA9tC,KAAAiuC,IAAAF,EACA,IAAA,CAtOA,CATAxwC,EAAA,8BAkPAT,EAAAD,QAAAiwC,C1E48RA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAASvvC,EAAQT,EAAOD,G2E9rShE,IAAAo3B,EAAA12B,EAAA,6BAOA2wC,EAAA3wC,EAAA,yDACA4wC,EAAA5wC,EAAA,6DAGA6wC,EAAA,SAAAC,GAEA,SAAAD,EAAAz6B,EAAAgb,EAAA9a,GACA,IAAAy6B,EASA,OATAnzC,iBAAAiC,KAAAgxC,IACAE,EAAAxyC,WAAAsB,KAAAgxC,EAAA,CAAAz6B,EAAAgb,EAAA9a,KAEAE,YAAA,eAEAu6B,EAAAC,SAAA,IAAAL,EAEAI,EAAAE,aAAA,IAAAL,EAAAG,EAAAxf,OAEAwf,EAAAG,UAAAH,EAAAC,SAAAE,UAAAH,CACA,CAGA,OAAA7xC,UAAA2xC,EAAAC,GAAA/yC,cAAA8yC,EAAA,CAAA,CAAA/yC,IAAA,aAAAlB,MAQA,SAAAu0C,EAAAC,EAAAC,GAEA,OAAAxxC,KAAAmxC,SAAA3e,WAAA8e,EAAAC,EAAAC,EACA,GAAA,CAAAvzC,IAAA,kBAAAlB,MAEA,SAAAu0C,EAAAC,EAAAE,GAEA,OAAAzxC,KAAAmxC,SAAAO,gBAAAJ,EAAAC,EAAAE,EACA,GAAA,CAAAxzC,IAAA,iBAAAlB,MAEA,SAAAu0C,EAAAC,EAAAC,EAAAC,GAEA,OAAAzxC,KAAAmxC,SAAAQ,eAAAL,EAAAC,EAAAC,EAAAC,EACA,GAEA,CAAAxzC,IAAA,cAAAlB,MASA,SAAAg2B,EAAA9b,EAAA8iB,EAAA6X,GAMA,OAJA5xC,KAAAo3B,aAAA,GAEAp3B,KAAA0xB,MAAAjF,IAAAqD,MAAA,yCAAAzsB,OAAA0vB,EAAA,8BAAA1vB,OAAA/E,QAAAy7B,IAAA,CAAA8X,aAAA56B,IAEAjX,KAAAoxC,aAAApe,YAAAD,EAAA/yB,KAAAqxC,UAAAp6B,EAAA8iB,EAAA6X,EACA,IAAA,CAvDA,CAAA/a,GA0DAn3B,EAAAD,QAAAuxC,C3EgsSA,EAAE,CAAC,4DAA4D,GAAG,wDAAwD,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAAS7wC,EAAQT,EAAOD,G4ErwS1L,IAMA2xC,EAAA,WAUA,OAAAlzC,eALA,SAAAkzC,EAAA76B,GACAxY,iBAAAiC,KAAAoxC,GACApxC,KAAA0xB,MAAAnb,CACA,GAEA,CAAA,CAAAtY,IAAA,iBAAAlB,MAOA,SAAA+0C,GAEA,MACA,CACAT,UAAAS,EAEAC,cAAA,EAEAC,OAAA,GACAC,aAAA,GAEAC,QAAA,CAAA,EAEAC,cAAA,EACAC,iBAAA,EAEA,GAEA,CAAAn0C,IAAA,qBAAAlB,MAQA,SAAA2tB,EAAA2nB,GAEAA,EAAAJ,cAAAvnB,CACA,GAEA,CAAAzsB,IAAA,oBAAAlB,MAMA,SAAAs1C,GAEAA,EAAAL,QAAAK,EAAAJ,aACAI,EAAAJ,aAAA,EACA,GAAA,CAAAh0C,IAAA,oBAAAlB,MAEA,SAAAs1C,GAWA,OARAryC,KAAAsyC,kBAAAD,GAEAA,EAAAH,SAAA,EACAG,EAAAE,kBAAA,EACAF,EAAAG,2BAAA,EACAH,EAAAI,sBAAA,EACAJ,EAAAF,cAAA,GAEA,CACA,GAEA,CAAAl0C,IAAA,iBAAAlB,MAOA,SAAA2tB,EAAA2nB,EAAAp7B,EAAA26B,GAGA,GAAAS,EAAAF,aAGA,IAAAE,EAAAG,2BAAAH,EAAAH,QAAAr0C,eAAA6sB,GAEA2nB,EAAAH,QAAAG,EAAAH,QAAAxnB,GACA1qB,KAAA0yC,mBAAAhoB,EAAA2nB,QAEA,GAAAA,EAAAI,qBACA,CACA,GAAAJ,EAAAH,QAAAS,WAAA90C,eAAA6sB,GAOA,OAJA2nB,EAAAH,QAAAG,EAAAH,QAAAS,WAAAjoB,GAEA1qB,KAAA0yC,mBAAAhoB,EAAA2nB,IAEAA,EAAAH,QAAAr0C,eAAA,UAAAw0C,EAAAH,QAAAU,UAAAP,EAAAH,QAAAW,QAQA7yC,KAAA0xB,MAAAjF,IAAAuD,KAAA,6BAAA3sB,OAAAgvC,EAAAH,QAAAY,mBAAA,iEACA9yC,KAAA+yC,kBAAAV,KANAA,EAAAJ,aAAAI,EAAAH,QAAAc,MAAAX,EAAAJ,aAAAjjC,OAAAqjC,EAAAH,QAAAY,mBAAAt2C,OAAA61C,EAAAJ,aAAAz1C,QAAA61C,EAAAH,QAAAY,mBAAAt2C,OAAA61C,EAAAH,QAAAe,iBAAAz2C,SAAAya,EAAA26B,GACA5xC,KAAA+yC,kBAAAV,IAQAA,EAAAE,iBAAAI,WAAA90C,eAAA6sB,IAGA2nB,EAAAH,QAAAG,EAAAE,iBAAAI,WAAAjoB,GACA1qB,KAAA0yC,mBAAAhoB,EAAA2nB,KAIAA,EAAAI,sBAAA,EACAzyC,KAAA0yC,mBAAAhoB,EAAA2nB,GAEA,MACA,GAAAA,EAAAH,QAAAr0C,eAAA,eAUA,GARAw0C,EAAAG,4BAEAH,EAAAG,2BAAA,EACAH,EAAAE,iBAAAF,EAAAH,SAGAlyC,KAAA0yC,mBAAAhoB,EAAA2nB,GAEAA,EAAAH,QAAAS,WAAA90C,eAAA6sB,KAGA2nB,EAAAI,sBAAA,EAEAJ,EAAAH,QAAAG,EAAAH,QAAAS,WAAAjoB,GAEA2nB,EAAAH,QAAAr0C,eAAA,UACA,CACA,IAAAw0C,EAAAH,QAAAU,SAAAP,EAAAH,QAAAW,OASA,OADAR,EAAAJ,aAAAI,EAAAH,QAAAc,MAAAX,EAAAJ,aAAAjjC,OAAAqjC,EAAAH,QAAAY,mBAAAt2C,OAAA61C,EAAAJ,aAAAz1C,QAAA61C,EAAAH,QAAAY,mBAAAt2C,OAAA61C,EAAAH,QAAAe,iBAAAz2C,SAAAya,EAAA26B,GACA5xC,KAAA+yC,kBAAAV,GAPAryC,KAAA0xB,MAAAjF,IAAAuD,KAAA,6BAAA3sB,OAAAgvC,EAAAH,QAAAY,mBAAA,iEACA9yC,KAAA+yC,kBAAAV,EAQA,OAMAryC,KAAA+yC,kBAAAV,GAIA,IAAAA,EAAAF,aACA,CAEA,GAAAE,EAAAhB,UAAAxzC,eAAA6sB,GAOA,OAJA1qB,KAAA+yC,kBAAAV,GACAryC,KAAA0yC,mBAAAhoB,EAAA2nB,GACAA,EAAAH,QAAAG,EAAAhB,UAAA3mB,GACA2nB,EAAAF,cAAA,GACA,EAIAnyC,KAAA0yC,mBAAAhoB,EAAA2nB,EAEA,CACA,OAAA,CACA,GAAA,CAAAp0C,IAAA,sBAAAlB,MAEA,SAAAs1C,EAAAp7B,EAAA8iB,EAAA6X,GACA,IAAAsB,EAAAlzC,KAGA,OAAAqyC,EAAAH,QAAAU,UAAAP,EAAAH,QAAAW,OAGAR,EAAAH,QAAAc,MAAAX,EAAAJ,aAAAjjC,OAAAqjC,EAAAH,QAAAY,mBAAAt2C,OAAA61C,EAAAJ,aAAAz1C,QAAA61C,EAAAH,QAAAY,mBAAAt2C,OAAA61C,EAAAH,QAAAe,iBAAAz2C,SAAAya,GACA,SAAAsC,EAAA45B,GASA,OAPA55B,GAEA25B,EAAAxhB,MAAAjF,IAAAuD,KAAA,0DAAA3sB,OAAAgvC,EAAAH,QAAAkB,aAAA,SAAA/vC,OAAAgvC,EAAAH,QAAAS,WAAA,MAAAtvC,OAAAkW,IAGA84B,EAAAJ,aAAAkB,EACAD,EAAAH,kBAAAV,GACAtY,GACA,GAAA6X,GAEAS,EAAAH,QAAAU,SAAAP,EAAAH,QAAAW,OAGAR,EAAAH,QAAAmB,WAAAhB,EAAAJ,aAAAjjC,OAAAqjC,EAAAH,QAAAY,mBAAAt2C,OAAA61C,EAAAJ,aAAAz1C,QAAA61C,EAAAH,QAAAY,mBAAAt2C,OAAA61C,EAAAH,QAAAe,iBAAAz2C,SAAAya,GACA,SAAAsC,EAAA45B,GASA,OAPA55B,GAEA25B,EAAAxhB,MAAAjF,IAAAuD,KAAA,0DAAA3sB,OAAAgvC,EAAAH,QAAAkB,aAAA,SAAA/vC,OAAAgvC,EAAAH,QAAAS,WAAA,MAAAtvC,OAAAkW,IAGA84B,EAAAJ,aAAAkB,EACAD,EAAAH,kBAAAV,GACAtY,GACA,GAAA6X,IAKAS,EAAAJ,aAAAI,EAAAH,QAAAc,MAAAX,EAAAJ,aAAAjjC,OAAAqjC,EAAAH,QAAAY,mBAAAt2C,OAAA61C,EAAAJ,aAAAz1C,QAAA61C,EAAAH,QAAAY,mBAAAt2C,OAAA61C,EAAAH,QAAAe,iBAAAz2C,SAAAya,EAAA26B,GACA5xC,KAAA+yC,kBAAAV,GACAtY,IAEA,GAGA,CAAA97B,IAAA,sBAAAlB,MAUA,SAAA2tB,EAAA2nB,EAAAp7B,EAAA8iB,EAAA6X,GAGA,GAAAS,EAAAF,aAGA,IAAAE,EAAAG,2BAAAH,EAAAH,QAAAr0C,eAAA6sB,GAEA2nB,EAAAH,QAAAG,EAAAH,QAAAxnB,GACA1qB,KAAA0yC,mBAAAhoB,EAAA2nB,QAEA,GAAAA,EAAAI,qBAEA,GAAAJ,EAAAH,QAAAS,WAAA90C,eAAA6sB,IAOA,GAJA2nB,EAAAH,QAAAG,EAAAH,QAAAS,WAAAjoB,GAEA1qB,KAAA0yC,mBAAAhoB,EAAA2nB,GAEAA,EAAAH,QAAAr0C,eAAA,SAEA,OAAAmC,KAAAszC,oBAAAjB,EAAAp7B,EAAA8iB,EAAA6X,QAGAS,EAAAE,iBAAAI,WAAA90C,eAAA6sB,IAGA2nB,EAAAH,QAAAG,EAAAE,iBAAAI,WAAAjoB,GACA1qB,KAAA0yC,mBAAAhoB,EAAA2nB,KAIAA,EAAAI,sBAAA,EACAzyC,KAAA0yC,mBAAAhoB,EAAA2nB,SAGA,GAAAA,EAAAH,QAAAr0C,eAAA,eAUA,GARAw0C,EAAAG,4BAEAH,EAAAG,2BAAA,EACAH,EAAAE,iBAAAF,EAAAH,SAGAlyC,KAAA0yC,mBAAAhoB,EAAA2nB,GAEAA,EAAAH,QAAAS,WAAA90C,eAAA6sB,KAGA2nB,EAAAI,sBAAA,EAEAJ,EAAAH,QAAAG,EAAAH,QAAAS,WAAAjoB,GAEA2nB,EAAAH,QAAAr0C,eAAA,UAEA,OAAAmC,KAAAszC,oBAAAjB,EAAAp7B,EAAA8iB,EAAA6X,QAOA5xC,KAAA+yC,kBAAAV,QAOAA,EAAAhB,UAAAxzC,eAAA6sB,IAGA1qB,KAAA+yC,kBAAAV,GACAryC,KAAA0yC,mBAAAhoB,EAAA2nB,GACAA,EAAAH,QAAAG,EAAAhB,UAAA3mB,GACA2nB,EAAAF,cAAA,GAIAnyC,KAAA0yC,mBAAAhoB,EAAA2nB,GAKA,OAAAtY,GACA,GAEA,CAAA97B,IAAA,cAAAlB,MASA,SAAAg2B,EAAA+e,EAAA76B,EAAA8iB,EAAA6X,GACA,IAAA2B,EAAAvzC,KAEAwzC,EAAAt3C,MAAAK,QAAAq1C,GAAAA,EAAA,GACA6B,EAAAv3C,MAAAC,KAAAq3C,GAGA,GAFAC,EAAAxxC,KAAAgV,GAEA,mBAAA8iB,EACA,CAGA,IAFA,IAAA2Z,EAAA1zC,KAAA2zC,eAAA7B,GAEA1zC,EAAA,EAAAA,EAAA20B,EAAAv2B,OAAA4B,IAGA4B,KAAA4zC,eAAA7gB,EAAA30B,GAAAs1C,EAAAz8B,EAAAw8B,GAKA,OAFAzzC,KAAAsyC,kBAAAoB,GAEAA,EAAA1B,MACA,CAIA,IAAA0B,EAAA1zC,KAAA2zC,eAAA7B,GACA4B,EAAA3B,cAAA,EAIA,IAFA,IAAA8B,EAAA7zC,KAAA0xB,MAAAiG,8CAAA,cAAAmc,EAAA,SAAAC,GAIAF,EAAAG,YACA,SAAAja,GAEAwZ,EAAAU,oBAAAlhB,EAAA30B,GAAAs1C,EAAAz8B,EAAA8iB,EAAA0Z,EACA,GACA,EAPAr1C,EAAA,EAAAA,EAAA20B,EAAAv2B,OAAA4B,IAAA01C,EAAAC,GASAF,EAAAK,MACA,SAAA36B,GAIA,OADAg6B,EAAAjB,kBAAAoB,GACA3Z,EAAAxgB,EAAAm6B,EAAA1B,OACA,GAEA,IAAA,CAhYA,GAmYAtyC,EAAAD,QAAA2xC,C5EwwSA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASjxC,EAAQT,EAAOD,G6EjpTlC,IAMA0xC,EAAA,WAUA,OAAAjzC,eALA,SAAAizC,IACApzC,iBAAAiC,KAAAmxC,GACAnxC,KAAAqxC,UAAA,CAAA,CACA,GAEA,CAAA,CAAApzC,IAAA,WAAAlB,MAQA,SAAAo3C,EAAAC,GAOA,OALAD,EAAAt2C,eAAAu2C,KAEAD,EAAAC,GAAA,CAAA,GAGAD,EAAAC,EACA,GAEA,CAAAn2C,IAAA,cAAAlB,MAQA,SAAAo3C,EAAAC,GASA,OAPAD,EAAAt2C,eAAA,gBAEAs2C,EAAAxB,WAAA,CAAA,GAGAwB,EAAAxB,WAAAyB,GAAA,CAAA,EAEAD,EAAAxB,WAAAyB,EACA,GAEA,CAAAn2C,IAAA,aAAAlB,MAOA,SAAAu0C,EAAAC,EAAA8C,GAEA,GAAA/C,EAAA90C,OAAA,EAEA,OAAA,EAGA,GAAA,iBAAA+0C,GAAAA,EAAA/0C,OAAA,EAEA,OAAA,EAMA,IAHA,IAAA83C,EAAAt0C,KAAAqxC,UAGAjzC,EAAA,EAAAA,EAAAkzC,EAAA90C,OAAA4B,IAEAk2C,EAAAt0C,KAAAu0C,SAAAD,EAAAhD,EAAAlzC,GAAAA,GAGAk2C,EAAAz2C,eAAA,gBAEAy2C,EAAA3B,WAAA,CAAA,GAIA,IADA,IAAA6B,EAAA,iBAAAjD,EAAAA,EAAAD,EACAlzC,EAAA,EAAAA,EAAAo2C,EAAAh4C,OAAA4B,IAEAk2C,EAAAt0C,KAAAy0C,YAAAH,EAAAE,EAAAp2C,GAAAA,GASA,OANAk2C,EAAAxB,mBAAAxB,EACAgD,EAAArB,iBAAAuB,EACAF,EAAAtB,MAAA,mBAAAqB,EAAAA,EACA,iBAAAA,EAAA,WAAA,OAAAA,CAAA,EACA,SAAAp9B,GAAA,OAAAA,CAAA,EAEAq9B,CACA,GAGA,CAAAr2C,IAAA,kBAAAlB,MAOA,SAAAu0C,EAAAC,EAAAmD,GAEA,IAAAJ,EAAAt0C,KAAAwyB,WAAA8e,EAAAC,EAAAmD,GACAJ,IAEAA,EAAA1B,SAAA,EAEA,GAEA,CAAA30C,IAAA,iBAAAlB,MAOA,SAAAu0C,EAAAC,EAAA8C,EAAAK,GAEA,IAAAJ,EAAAt0C,KAAAwyB,WAAA8e,EAAAC,EAAA8C,GACAC,IAEAA,EAAA1B,SAAA,EACA0B,EAAAzB,QAAA,EAEAyB,EAAAjB,WAAAqB,EAEA,IAAA,CAjIA,GAoIAh1C,EAAAD,QAAA0xC,C7EopTA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAShxC,EAAQT,EAAOD,G8E9xTlCC,EAAAD,QACA,CACA6X,SAAA,CACAqa,MAAA,EACAta,MAAA,EAEA0wB,KAAA,GACA4M,QAAA,GAEAC,QAAA,GAEAC,OAAA,CACAC,WAAA,EACAC,UAAA,GAEAC,MAAA,GACAC,OAAA,GACAC,IAAA,G9EkyTA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS/0C,EAAQT,EAAOD,G+EnzTlCU,EAAA,UAAAyJ,GAAA,IACAitB,EAAA12B,EAAA,6BAEAg1C,EAAAzoB,KAAApmB,UAAAnG,EAAA,iDAEAi1C,EAAA,SAAAC,GAGA,SAAAD,EAAA7+B,EAAAgb,EAAA9a,GACA,IAAA6+B,EAyBA,OAzBAv3C,iBAAAiC,KAAAo1C,IACAE,EAAA52C,WAAAsB,KAAAo1C,EAAA,CAAA7+B,EAAAgb,EAAA9a,KAGA8+B,WAAA,CAAA,EAEAD,EAAA3+B,YAAA,kBAEA2+B,EAAAltB,MAAAsE,KAAAriB,MAAA8qC,GAEAG,EAAAE,QAAA,CAAA,EACAF,EAAAG,cAAA,CAAA,EAGAH,EAAAltB,MAAA9Q,SAAAD,KAAAi+B,EAAAj+B,KACAi+B,EAAAltB,MAAA9Q,SAAAqa,KAAA2jB,EAAA3jB,KAEA2jB,EAAAltB,MAAA9Q,SAAAywB,KAAA,iBAAAuN,EAAA/6B,QAAAwtB,KAAAuN,EAAA/6B,QAAAwtB,KAAA,qBAAA1kC,OAAAiyC,EAAAltB,MAAA9Q,SAAAqa,MACA2jB,EAAAr5C,KAAAq5C,EAAAltB,MAAA9Q,SAAAywB,KAEAuN,EAAAI,mBAAAJ,EAAA5jB,MAAAiG,8CAAA,sBAEA2d,EAAAltB,MAAAutB,uBAAAL,EAAAI,mBAAAE,sBAAA,WAAAvyC,OAAAiyC,EAAAltB,MAAA9Q,SAAAqa,OAGA2jB,EAAA7oB,IAAA6oB,EAAAA,CACA,CAAA,OAAAj2C,UAAA+1C,EAAAC,GAAAn3C,cAAAk3C,EAAA,CAAA,CAAAn3C,IAAA,UAAAlB,MAEA,SAAA84C,GACA,IAAAC,EAAA91C,KAEA,GAAAA,KAAAooB,MAAAutB,uBAAAI,eAAA,EAEA,OAAAF,EAAA,IAAAx1C,MAAA,cAAAgD,OAAArD,KAAAooB,MAAA9Q,SAAAqa,KAAA,MAAAtuB,OAAArD,KAAAooB,MAAA9Q,SAAAywB,KAAA,iCAGA,IAAA8L,EAAA7zC,KAAA0xB,MAAAiG,8CAAA,cAEA33B,KAAA01C,mBAAAM,kCAAAh2C,KAAAooB,MAAAutB,uBAAAt+B,KAAArX,KAAAooB,MAAAysB,OAAAE,WACA/0C,KAAA01C,mBAAAO,qBAAAj2C,KAAAooB,MAAAutB,uBAAAt+B,MACArX,KAAAgwB,KAAA,cAAA3sB,OAAArD,KAAAooB,MAAA9Q,SAAAqa,KAAA,MAAAtuB,OAAArD,KAAAooB,MAAA9Q,SAAAywB,KAAA,iBAEA,IAFA,IAAAmO,EAAA,SAAA93C,GAIAy1C,EAAAG,WACA,SAAAmC,GAIA,OAFAn2C,KAAA0xB,MAAAjF,IAAAuD,KAAA,SAAA3sB,OAAAjF,EAAA,MAAAiF,OAAArD,KAAAooB,MAAA4sB,MAAA52C,GAAAg4C,SAAA,MAAA/yC,OAAArD,KAAAooB,MAAA4sB,MAAA52C,GAAA2pC,KAAA,iBACA/nC,KAAA01C,mBAAAO,qBAAAj2C,KAAAooB,MAAA4sB,MAAA52C,GAAAi4C,gBAAAh/B,MACA8+B,GACA,EAAA74C,KAAAw4C,IAEAjC,EAAAG,WAAA8B,EAAAL,cAAAK,EAAA1tB,MAAA4sB,MAAA52C,GAAAg4C,UAAA94C,KACA,CACAmvB,IAAAqpB,EACApkB,MAAAokB,EAAApkB,MACAnX,QAAAu7B,EAAA1tB,MAAA4sB,MAAA52C,GAAAkZ,SACAg/B,SAAAR,EAAA1tB,MAAA4sB,MAAA52C,GAAAkZ,SACA++B,gBAAAP,EAAAJ,mBAAAa,mBAAAT,EAAA1tB,MAAA4sB,MAAA52C,GAAAi4C,gBAAAh/B,MACAm/B,yBAAA,WAEA,OAAAx2C,KAAAysB,IAAAuD,KAAA,SAAA3sB,OAAAjF,EAAA,MAAAiF,OAAArD,KAAAooB,MAAA4sB,MAAA52C,GAAAg4C,SAAA,OAAA/yC,OAAArD,KAAA01C,mBAAAe,+BAAAz2C,KAAAooB,MAAA4sB,MAAA52C,GAAAi4C,gBAAAh/B,OACA,EAAA/Z,KAAAw4C,GACAY,eAAAZ,EAAA1tB,MACAuuB,UAAAb,EAAA1tB,MAAA4sB,MAAA52C,MAEAy1C,EAAAG,WACA,SAAAmC,GAEAn2C,KAAA01C,mBAAAkB,mBAAA52C,KAAAooB,MAAA4sB,MAAA52C,GAAAi4C,gBAAAh/B,MACA,IAAAw/B,EAAA72C,KAAA01C,mBAAAe,+BAAAz2C,KAAAooB,MAAA4sB,MAAA52C,GAAAi4C,gBAAAh/B,MACArX,KAAA0xB,MAAAjF,IAAAuD,KAAA,SAAA3sB,OAAAjF,EAAA,MAAAiF,OAAArD,KAAAooB,MAAA4sB,MAAA52C,GAAAg4C,SAAA,MAAA/yC,OAAArD,KAAAooB,MAAA4sB,MAAA52C,GAAA2pC,KAAA,eACA/nC,KAAA0xB,MAAAjF,IAAAuD,KAAA,SAAA3sB,OAAAjF,EAAA,MAAAiF,OAAArD,KAAAooB,MAAA4sB,MAAA52C,GAAAg4C,SAAA,MAAA/yC,OAAArD,KAAAooB,MAAA4sB,MAAA52C,GAAA2pC,KAAA,KAAA1kC,OAAAwzC,EAAA,MAEA72C,KAAA01C,mBAAAoB,yBAAA92C,KAAAooB,MAAAutB,uBAAAt+B,KAAA,GACA,IAAA0/B,EAAA/2C,KAAA01C,mBAAAe,+BAAAz2C,KAAAooB,MAAAutB,uBAAAt+B,MAEA,OADArX,KAAA0xB,MAAAjF,IAAAuD,KAAA,cAAA3sB,OAAArD,KAAAooB,MAAA9Q,SAAAqa,KAAA,MAAAtuB,OAAA0zC,EAAA,MACAZ,GACA,EAAA74C,KAAAw4C,GACA,EArCA13C,EAAA,EAAAA,EAAA4B,KAAAooB,MAAA4sB,MAAAx4C,OAAA4B,IAAA83C,EAAA93C,GAwCAy1C,EAAAK,MACA,SAAA36B,GAEA,GAAAA,EAGA,OADAu8B,EAAApkB,MAAAjF,IAAAzb,MAAA,cAAA3N,OAAAyyC,EAAA1tB,MAAA9Q,SAAAqa,KAAA,MAAAtuB,OAAAyyC,EAAA1tB,MAAA9Q,SAAAywB,KAAA,mBAAA1kC,OAAAkW,GAAAA,GACAs8B,EAAAt8B,GAEAu8B,EAAA9lB,KAAA,cAAA3sB,OAAAyyC,EAAA1tB,MAAA9Q,SAAAqa,KAAA,MAAAtuB,OAAAyyC,EAAA1tB,MAAA9Q,SAAAywB,KAAA,eACA,IAAAgP,EAAAjB,EAAAJ,mBAAAe,+BAAAX,EAAA1tB,MAAAutB,uBAAAt+B,MAGA,OAFAy+B,EAAAJ,mBAAAkB,mBAAAd,EAAA1tB,MAAAutB,uBAAAt+B,MACAy+B,EAAApkB,MAAAjF,IAAAuD,KAAA,cAAA3sB,OAAAyyC,EAAA1tB,MAAA9Q,SAAAqa,KAAA,MAAAtuB,OAAA0zC,EAAA,MACAlB,GACA,GACA,GAOA,CAAA53C,IAAA,UAAAlB,MAEA,SAAAi6C,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAAAC,EAAA,CAAA,EAuBA,OApBAA,EAAAjB,cAAA,IAAAgB,EAAAA,EAAA,QAAA/zC,OAAArD,KAAAooB,MAAA4sB,MAAAx4C,OAAA,KAAA6G,OAAArD,KAAA0xB,MAAA4lB,eAAAC,uBAIAF,EAAAtP,UAAA,IAAAmP,EAAAA,EAAA,SAAA7zC,OAAAg0C,EAAAjB,SAAA,KACAiB,EAAAG,iBAAA,IAAAL,EAAAA,EAAA,qBAAA9zC,OAAAg0C,EAAAtP,KAAA,KAEAsP,EAAAhB,gBAAAr2C,KAAA01C,mBAAAE,sBAAAyB,EAAAjB,UAEAiB,EAAA//B,SAAA,WAAAhZ,QAAA24C,GAAAA,EAAA,CAAA,EAGAj3C,KAAAooB,MAAA4sB,MAAA/yC,KAAAo1C,GAEAr3C,KAAAw1C,QAAA6B,EAAAjB,UAAAiB,EAEAr3C,KAAAy1C,cAAA4B,EAAAjB,UAAA,mBAAAY,EAAAA,EAAA,SAAAS,GAAA,OAAAA,GAAA,EAEAz3C,KAAAooB,MAAAysB,OAAAE,YAEAsC,CACA,GAAA,CAAAp5C,IAAA,yBAAAlB,MAEA,SAAAq6C,EAAAM,GAEA,IAAA13C,KAAAw1C,QAAA33C,eAAAu5C,GAEA,OAAA,IAAA/2C,MAAA,SAAAgD,OAAA+zC,EAAA,mCAAA/zC,OAAArD,KAAAooB,MAAA9Q,SAAAqa,KAAA,MAAAtuB,OAAArD,KAAAooB,MAAA9Q,SAAAywB,KAAA,gDAAA1kC,OAAAq0C,EAAA,MAGA13C,KAAA01C,mBAAAM,kCAAAh2C,KAAAw1C,QAAA4B,GAAAf,gBAAAh/B,KAAAqgC,EACA,GAAA,CAAAz5C,IAAA,oBAAAlB,MAEA,SAAAguB,EAAAF,EAAAC,GAEA9qB,KAAAooB,MAAA8sB,IAAAjzC,KAAA,IAAAoB,QAAA,IAAAmU,MAAAiE,cAAA,OAAApY,OAAA0nB,EAAA,OAAA1nB,OAAAwnB,IAEA,UAAAvsB,QAAAwsB,IAEA9qB,KAAAooB,MAAA8sB,IAAAjzC,KAAAyqB,KAAApmB,UAAAwkB,GAEA,GAAA,CAAA7sB,IAAA,uBAAAlB,MAEA,SAAA8tB,EAAAC,GAEA9qB,KAAAooB,MAAA6sB,OAAAhzC,KAAA,GAAAoB,OAAAwnB,IAEA,UAAAvsB,QAAAwsB,IAEA9qB,KAAAooB,MAAA6sB,OAAAhzC,KAAAyqB,KAAApmB,UAAAwkB,GAEA,GAAA,CAAA7sB,IAAA,QAAAlB,MAEA,SAAA8tB,EAAAC,GAEA9qB,KAAA23C,kBAAA,QAAA9sB,EAAAC,GACA9qB,KAAA0xB,MAAAjF,IAAAqD,MAAAjF,EAAAC,EACA,GAAA,CAAA7sB,IAAA,QAAAlB,MAEA,SAAA8tB,EAAAC,GAEA9qB,KAAA23C,kBAAA,QAAA9sB,EAAAC,GACA9qB,KAAA0xB,MAAAjF,IAAAsD,MAAAlF,EAAAC,EACA,GAAA,CAAA7sB,IAAA,OAAAlB,MAEA,SAAA8tB,EAAAC,GAEA9qB,KAAA23C,kBAAA,OAAA9sB,EAAAC,GACA9qB,KAAA0xB,MAAAjF,IAAAuD,KAAAnF,EAAAC,EACA,GAAA,CAAA7sB,IAAA,OAAAlB,MAEA,SAAA8tB,EAAAC,GAEA9qB,KAAA23C,kBAAA,OAAA9sB,EAAAC,GACA9qB,KAAA0xB,MAAAjF,IAAA1E,KAAA8C,EAAAC,EACA,GAAA,CAAA7sB,IAAA,QAAAlB,MAEA,SAAA8tB,EAAAC,GAEA9qB,KAAA23C,kBAAA,QAAA9sB,EAAAC,GACA9qB,KAAA43C,qBAAA/sB,EAAAC,GACA9qB,KAAA0xB,MAAAjF,IAAAzb,MAAA6Z,EAAAC,EACA,GAAA,CAAA7sB,IAAA,QAAAlB,MAEA,SAAA8tB,EAAAC,GAEA9qB,KAAA23C,kBAAA,QAAA9sB,EAAAC,GACA9qB,KAAA43C,qBAAA/sB,EAAAC,GACA9qB,KAAA0xB,MAAAjF,IAAAwD,MAAApF,EAAAC,EACA,IAAA,CA3MA,CAAA+L,GA8MAn3B,EAAAD,QAAA21C,C/EqzTA,EAAE,CAAC,+CAA+C,GAAG,SAAS,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAASj1C,EAAQT,EAAOD,GgFxgU9H,IAEAo4C,EAAA,SAAAC,GAEA,SAAAD,EAAAthC,EAAAgb,EAAA9a,GACA,IAAAshC,EAKA,OALAh6C,iBAAAiC,KAAA63C,IACAE,EAAAr5C,WAAAsB,KAAA63C,EAAA,CAAAthC,EAAAgb,EAAA9a,KAEAE,YAAA,eAEAohC,EAAAxC,WAAA,CAAA,EAAAwC,CACA,CAAA,OAAA14C,UAAAw4C,EAAAC,GAAA55C,cAAA25C,EAAA,CAAA,CAAA55C,IAAA,qBAAAlB,MAEA,SAAAi7C,GAEA,IAAAC,EAAA,iBAAAD,EAAAA,EAAA,EAEA,GAAAA,EAAA,EAEA,MAAA,UAGA,IAAAE,EAAA,GAkBA,OAjBAD,EAAA,OAEAC,GAAAt1C,KAAAuY,MAAA88B,EAAA,MAAA,KACAA,GAAA,MAEAA,EAAA,MAEAC,GAAAt1C,KAAAuY,MAAA88B,EAAA,KAAA,KACAA,GAAA,KAEAA,EAAA,MAEAC,GAAAt1C,KAAAuY,MAAA88B,EAAA,KAAA,KACAA,GAAA,KAEAC,GAAAt1C,KAAAkD,MAAAmyC,GAAA,IAGA,GAAA,CAAAh6C,IAAA,kBAAAlB,MAEA,SAAAo7C,GAEA,IAAAC,EAAA,iBAAAD,EAAAA,EAAA,UAEA,OADAn4C,KAAAu1C,WAAA6C,IAAA,IAAA5gC,KACAxX,KAAAu1C,WAAA6C,EACA,GAAA,CAAAn6C,IAAA,oBAAAlB,MAEA,SAAAo7C,GAEA,IAAAC,EAAA,iBAAAD,EAAAA,EAAA,UACA,OAAAn4C,KAAAu1C,WAAA13C,eAAAu6C,GAAAp4C,KAAAu1C,WAAA6C,IAAA,CACA,GAAA,CAAAn6C,IAAA,uBAAAlB,MAEA,SAAAo7C,EAAAE,GAEA,IAAAD,EAAA,iBAAAD,EAAAA,EAAA,UACAG,GAAA,EAgBA,OAXAA,EAFA,iBAAAD,IAEAr4C,KAAAu1C,WAAA13C,eAAA06C,eAAAv4C,KAAAu1C,WAAAgD,cAEA,iBAAAF,EAEAA,GAIA,IAAA7gC,KAGAxX,KAAAu1C,WAAA13C,eAAAu6C,IAAAE,GAEAt4C,KAAAu1C,WAAA6C,GAAAE,EACAt4C,KAAAu1C,WAAA6C,KAIA,CAEA,GAAA,CAAAn6C,IAAA,kBAAAlB,MAEA,SAAAo7C,GAEA,IAAAC,EAAA,iBAAAD,EAAAA,EAAA,UACA,QAAAn4C,KAAAu1C,WAAA13C,eAAAu6C,YAEAp4C,KAAAu1C,WAAA6C,IACA,EAMA,GAAA,CAAAn6C,IAAA,oBAAAlB,MAEA,SAAAo7C,EAAAE,GAEA,IAAAD,EAAA,iBAAAD,EAAAA,EAAA,UACAG,GAAA,EAgBA,OAXAA,EAFA,iBAAAD,IAEAr4C,KAAAu1C,WAAA13C,eAAA06C,eAAAv4C,KAAAu1C,WAAAgD,cAEA,iBAAAF,EAEAA,GAIA,IAAA7gC,KAGAxX,KAAAu1C,WAAA13C,eAAAu6C,IAAAE,EAEAA,EAAAt4C,KAAAu1C,WAAA6C,IAIA,CAEA,GAAA,CAAAn6C,IAAA,+BAAAlB,MAEA,SAAAy7C,EAAAC,GAEA,IAAAC,EAAA,iBAAAF,EAAAA,EAAA,UACAG,EAAA,iBAAAF,EAAAA,EAAA,UACA,OAAAz4C,KAAAu1C,WAAA13C,eAAA66C,IAAA14C,KAAAu1C,WAAA13C,eAAA86C,GAEA34C,KAAAu1C,WAAAoD,GAAA34C,KAAAu1C,WAAAmD,IAIA,CAEA,GAAA,CAAAz6C,IAAA,2BAAAlB,MAEA,SAAAo7C,EAAAvoB,EAAAyoB,GAEA,IAAAD,EAAA,iBAAAD,EAAAA,EAAA,UACA7nB,OAAA,IAAAV,EAAAA,EAAA,eAAAvsB,OAAA+0C,EAAA,MACAQ,EAAA54C,KAAA64C,kBAAAT,EAAAC,GAEA,MAAA,GAAAh1C,OAAAitB,EAAA,KAAAjtB,OAAArD,KAAA84C,mBAAAF,GACA,GAAA,CAAA36C,IAAA,oBAAAlB,MAEA,SAAAo7C,EAAAvoB,EAAAyoB,GAEAr4C,KAAA0xB,MAAAjF,IAAAuD,KAAAhwB,KAAA+4C,yBAAAZ,EAAAvoB,EAAAyoB,GACA,IAAA,CAzJA,CAFAl4C,EAAA,8BA8JAT,EAAAD,QAAAo4C,ChF0gUA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAAS13C,EAAQT,EAAOD,GAAQ,IiFxqUxE42C,EAAA,WAQA,OAAAn4C,eANA,SAAAm4C,EAAA2C,EAAAC,GACAl7C,iBAAAiC,KAAAq2C,GACAr2C,KAAA01C,mBAAAsD,EACAh5C,KAAAk5C,oBAAAD,EAEAj5C,KAAA4M,KAAA5M,KAAA01C,mBAAAyD,uBAAAn5C,KAAAk5C,oBACA,GAAA,CAAA,CAAAj7C,IAAA,wBAAAlB,MAEA,SAAAq8C,GAEA,OAAAp5C,KAAA01C,mBAAA2D,sBAAAr5C,KAAAk5C,oBAAAE,EACA,GAAA,CAAAn7C,IAAA,2BAAAlB,MAEA,SAAAu8C,GAEA,OAAAt5C,KAAA01C,mBAAAoB,yBAAA92C,KAAAk5C,oBAAAI,EACA,GAAA,CAAAr7C,IAAA,oCAAAlB,MAEA,SAAA26C,GAEA,OAAA13C,KAAA01C,mBAAAM,kCAAAh2C,KAAAk5C,oBAAAxB,EACA,GAAA,CAAAz5C,IAAA,iCAAAlB,MAEA,WAEA,OAAAiD,KAAA01C,mBAAAe,+BAAAz2C,KAAAk5C,oBACA,IAAA,CA5BA,GA+BAx5C,EAAAD,QAAA42C,CjF0qUA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASl2C,EAAQT,EAAOD,GkFzsUlC,IAAAo3B,EAAA12B,EAAA,6BAEAo5C,EAAAp5C,EAAA,sDAEAq5C,EAAA,SAAAC,GAEA,SAAAD,EAAAjjC,EAAAgb,EAAA9a,GACA,IAAAijC,EAWA,OAXA37C,iBAAAiC,KAAAw5C,IACAE,EAAAh7C,WAAAsB,KAAAw5C,EAAA,CAAAjjC,EAAAgb,EAAA9a,KAEAE,YAAA,qBAEA+iC,EAAAC,iBAAA,CAAA,EAGAD,EAAAE,cAAAF,EAAAhoB,MAAAiG,8CAAA,gBAGA+hB,EAAAE,cAAAC,gBAAA,eAAAH,CACA,CAAA,OAAAr6C,UAAAm6C,EAAAC,GAAAv7C,cAAAs7C,EAAA,CAAA,CAAAv7C,IAAA,qBAAAlB,MAEA,SAAAk8C,GAEA,IAAAa,EAAA,iBAAAb,EAAAA,EAAA,UAQA,OANAj5C,KAAA25C,iBAAA97C,eAAAi8C,KAEA95C,KAAA0xB,MAAAjF,IAAA1E,KAAA,mBAAA1kB,OAAAy2C,EAAA,gDACA95C,KAAA41C,sBAAAkE,EAAA,MAGA,IAAAP,EAAAv5C,KAAAi5C,EACA,GAAA,CAAAh7C,IAAA,yBAAAlB,MAEA,SAAAk8C,GAEA,IAAAa,EAAA,iBAAAb,EAAAA,EAAA,UAQA,OANAj5C,KAAA25C,iBAAA97C,eAAAi8C,KAEA95C,KAAA0xB,MAAAjF,IAAA1E,KAAA,mBAAA1kB,OAAAy2C,EAAA,gDACA95C,KAAA41C,sBAAAkE,EAAA,MAGA95C,KAAA25C,iBAAAG,EACA,GAAA,CAAA77C,IAAA,wBAAAlB,MAEA,SAAAk8C,EAAAc,GAEA,IAAAD,EAAA,iBAAAb,EAAAA,EAAA,UACAe,EAAA,iBAAAD,EAAAA,EAAA,IAEAE,EACA,CACA5iC,KAAAyiC,EAEAI,cAAA,GAAA72C,OAAAy2C,EAAA,UACA/D,gBAAA,EACAoE,kBAAA,EACAC,YAAA,GAAA/2C,OAAAy2C,EAAA,QACAO,cAAA,EAEAC,iBAAA,EAEAC,0BAAA,EAEAC,aAAA,EACAC,sBAAA,EACAC,yBAAA,EAEAC,WAAAX,EAEAY,cAAA,GAYA,OATA56C,KAAA25C,iBAAA97C,eAAAi8C,KAEA95C,KAAA0xB,MAAAjF,IAAA1E,KAAA,mBAAA1kB,OAAAy2C,EAAA,wDACA95C,KAAA45C,cAAAiB,gBAAAZ,EAAAC,eACAl6C,KAAA45C,cAAAiB,gBAAAZ,EAAAG,cAGAp6C,KAAA25C,iBAAAG,GAAAG,EAEAA,CACA,GAAA,CAAAh8C,IAAA,oCAAAlB,MAEA,SAAAk8C,EAAAc,GAEA,IAAAD,EAAA,iBAAAb,EAAAA,EAAA,UACAe,EAAA,iBAAAD,EAAAA,EAAA,IAUA,OARA/5C,KAAA25C,iBAAA97C,eAAAi8C,KAEA95C,KAAA0xB,MAAAjF,IAAA1E,KAAA,4DAAA1kB,OAAAy2C,EAAA,uDACA95C,KAAA41C,sBAAAkE,EAAAE,IAGAh6C,KAAA25C,iBAAAG,GAAAa,WAAAX,EAEAh6C,KAAA25C,iBAAAG,EACA,GAAA,CAAA77C,IAAA,uBAAAlB,MAEA,SAAAk8C,GAEA,IAAAa,EAAA,iBAAAb,EAAAA,EAAA,UAGAj5C,KAAA25C,iBAAA97C,eAAAi8C,IAEA95C,KAAA41C,sBAAAkE,EAAA,KAGA,IAAAG,EAAAj6C,KAAA25C,iBAAAG,GASA,OAPA95C,KAAA45C,cAAAC,gBAAA75C,KAAA25C,iBAAAG,GAAAI,eACAD,EAAAlE,eAAA/1C,KAAA45C,cAAAkB,kBAAA96C,KAAA25C,iBAAAG,GAAAI,eACAD,EAAAW,aAAA,IAEAX,EAAAW,aAAA,GAGA56C,KAAA+6C,2BAAAjB,EACA,GAAA,CAAA77C,IAAA,qBAAAlB,MAEA,SAAAk8C,GAEA,IAAAa,EAAA,iBAAAb,EAAAA,EAAA,UAEA,IAAAj5C,KAAA25C,iBAAA97C,eAAAi8C,GAGA,OADA95C,KAAA0xB,MAAAjF,IAAAzb,MAAA,oCAAA3N,OAAAy2C,EAAA,2BACA,EAGA,IAAAG,EAAAj6C,KAAA25C,iBAAAG,GAKA,OAHA95C,KAAA45C,cAAAC,gBAAA75C,KAAA25C,iBAAAG,GAAAM,aACAH,EAAAI,aAAAr6C,KAAA45C,cAAAkB,kBAAA96C,KAAA25C,iBAAAG,GAAAM,aAEAp6C,KAAA+6C,2BAAAjB,EACA,GAAA,CAAA77C,IAAA,6BAAAlB,MAEA,SAAAk8C,GAEA,IAAAa,EAAA,iBAAAb,EAAAA,EAAA,UAEA,IAAAj5C,KAAA25C,iBAAA97C,eAAAi8C,GAGA,OADA95C,KAAA0xB,MAAAjF,IAAAzb,MAAA,sCAAA3N,OAAAy2C,EAAA,2BACA,EAGA,IAAAG,EAAAj6C,KAAA25C,iBAAAG,GAoDA,OAlDAG,EAAAU,WAAA,GAAAz/B,MAAA++B,EAAAU,eAEA36C,KAAA0xB,MAAAjF,IAAAzb,MAAA,mBAAA3N,OAAA42C,EAAA5iC,KAAA,+CAAAhU,OAAA42C,EAAAU,WAAA,2CACAV,EAAAU,WAAA,KAIAV,EAAAW,aAAA,EAEAX,EAAAK,gBAAA,EAIAL,EAAAK,gBAAAL,EAAAW,aAAAX,EAAAU,WAAA,KAGAV,EAAAM,0BAAAN,EAAAK,gBAAA,MAEAL,EAAAK,gBAAA,KAIAt6C,KAAA45C,cAAAoB,qBAAA,eACAf,EAAAE,iBAAAn6C,KAAA45C,cAAAkB,kBAAA,eACAb,EAAAO,YAAAP,EAAAE,iBAAAF,EAAAlE,eAEAkE,EAAAI,aAAA,IAEAJ,EAAAO,YAAAP,EAAAI,aAAAJ,EAAAlE,gBAGAkE,EAAAW,aAAA,EAEAX,EAAAQ,sBAAAR,EAAAE,iBAAAF,EAAAlE,gBAAAkE,EAAAW,aAIAX,EAAAQ,sBAAA,EAIAR,EAAAQ,qBAAA,EAEAR,EAAAS,wBAAA93C,KAAAC,IAAAo3C,EAAAU,WAAAV,EAAAW,aAAA,GAAAX,EAAAQ,qBAIAR,EAAAS,yBAAA,EAGAT,CACA,GAAA,CAAAh8C,IAAA,wBAAAlB,MAEA,SAAAk8C,EAAAgC,GAEA,IAAAnB,EAAA,iBAAAb,EAAAA,EAAA,UACAiC,EAAAnsC,SAAAksC,GAEA,OAAA//B,MAAAggC,IAEAl7C,KAAA0xB,MAAAjF,IAAA1E,KAAA,uCAAA1kB,OAAAy2C,EAAA,4CACA,IAGA95C,KAAA25C,iBAAA97C,eAAAi8C,IAEA95C,KAAA41C,sBAAA,IAAAkE,GAGA95C,KAAA25C,iBAAAG,GAAAc,aAAAM,EAEAl7C,KAAA+6C,2BAAAjB,GACA,GAAA,CAAA77C,IAAA,2BAAAlB,MAEA,SAAAk8C,EAAAkC,GAEA,IAAArB,EAAA,iBAAAb,EAAAA,EAAA,UACAmC,EAAArsC,SAAAosC,GAOA,OALAjgC,MAAAkgC,KAEAA,EAAA,GAGAp7C,KAAA25C,iBAAA97C,eAAAi8C,IAMA95C,KAAA25C,iBAAAG,GAAA/D,eAAA,IAEA/1C,KAAA0xB,MAAAjF,IAAA1E,KAAA,0CAAA1kB,OAAAy2C,EAAA,4CACA95C,KAAAi2C,qBAAA6D,IAGA95C,KAAA25C,iBAAAG,GAAAc,aAAA56C,KAAA25C,iBAAAG,GAAAc,aAAAQ,EAEAp7C,KAAA+6C,2BAAAjB,KAZA95C,KAAA0xB,MAAAjF,IAAA1E,KAAA,0CAAA1kB,OAAAy2C,EAAA,4BACA,EAYA,GAAA,CAAA77C,IAAA,kDAAAlB,MAEA,SAAAk8C,GAEA,IAAAa,EAAA,iBAAAb,EAAAA,EAAA,UAGAgB,EAAAj6C,KAAA25C,iBAAAG,GAGA,OAAAG,EAAAW,aAAA,EAEA,OAEAX,EAAAW,aAAA,EAEA,IAIA,GAAAv3C,OAAA42C,EAAAW,aAEA,GAAA,CAAA38C,IAAA,0CAAAlB,MAEA,SAAAk8C,GAEA,IAAAa,EAAA,iBAAAb,EAAAA,EAAA,UAMA,GAFAj5C,KAAA+6C,2BAAAjB,GAEA95C,KAAA25C,iBAAA97C,eAAAi8C,GAKA,CACA,IAAAG,EAAAj6C,KAAA25C,iBAAAG,GAIA,OAAAG,EAAAlE,eAAA,GAMAkE,EAAAW,aAAA,EAJA,MASAX,EAAAI,aAEA,GAAAh3C,OAAA42C,EAAAK,gBAAA7wC,QAAA,GAAA,KAOA,CA5BA,MAAA,mBAAApG,OAAAy2C,EAAA,yCA6BA,GAAA,CAAA77C,IAAA,iCAAAlB,MAEA,SAAAk8C,GAEA,IAAAa,EAAA,iBAAAb,EAAAA,EAAA,UAMA,GAFAj5C,KAAA+6C,2BAAAjB,GAEA95C,KAAA25C,iBAAA97C,eAAAi8C,GAKA,CACA,IAAAG,EAAAj6C,KAAA25C,iBAAAG,GAIA,OAAAG,EAAAlE,eAAA,EAEA,mBAAA1yC,OAAA42C,EAAA5iC,KAAA,8BAIA4iC,EAAAW,aAAA,GAAAX,EAAAI,aAAA,EAEA,mBAAAh3C,OAAA42C,EAAA5iC,KAAA,mCAAAhU,OAAArD,KAAA45C,cAAAd,mBAAAmB,EAAAO,aAAA,uCAGAP,EAAAI,aAAA,EAEA,mBAAAh3C,OAAA42C,EAAA5iC,KAAA,QAAAhU,OAAA42C,EAAAK,gBAAA7wC,QAAA,GAAA,kBAAApG,OAAA42C,EAAAW,aAAA,OAAAv3C,OAAA42C,EAAAU,WAAA,qBAAAt3C,OAAArD,KAAA45C,cAAAd,mBAAAmB,EAAAO,aAAA,aAAAn3C,OAAArD,KAAA45C,cAAAd,mBAAAmB,EAAAQ,sBAAA,kCAAAp3C,OAAArD,KAAA45C,cAAAd,mBAAAmB,EAAAS,0BAIA,mBAAAr3C,OAAA42C,EAAA5iC,KAAA,eAAAhU,OAAA42C,EAAAW,aAAA,OAAAv3C,OAAA42C,EAAAU,WAAA,kCAAAt3C,OAAArD,KAAA45C,cAAAd,mBAAAmB,EAAAO,aAAA,aAAAn3C,OAAArD,KAAA45C,cAAAd,mBAAAmB,EAAAQ,sBAAA,SAEA,CA3BA,MAAA,mBAAAp3C,OAAAy2C,EAAA,yCA4BA,GAAA,CAAA77C,IAAA,2BAAAlB,MAEA,SAAAk8C,GAEAj5C,KAAA0xB,MAAAjF,IAAAuD,KAAAhwB,KAAAy2C,+BAAAwC,GACA,IAAA,CAtWA,CAAApiB,GAyWAn3B,EAAAD,QAAA+5C,ClF2sUA,EAAE,CAAC,qDAAqD,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAASr5C,EAAQT,EAAOD,IACxH,SAAWkL,IAAQ,WmFzjVnB,IAAAksB,EAAA12B,EAAA,6BAEAk7C,EAAAl7C,EAAA,cACAm7C,EAAAn7C,EAAA,UAEAo7C,EAAA,SAAAC,GAEA,SAAAD,EAAAhlC,EAAAgb,EAAA9a,GACA,IAAAglC,EAiBA,OAjBA19C,iBAAAiC,KAAAu7C,IACAE,EAAA/8C,WAAAsB,KAAAu7C,EAAA,CAAAhlC,EAAAgb,EAAA9a,KAEAilC,UAAA,GACAD,EAAAlhC,QAAAmhC,UAAAD,EAAA/pB,MAAAgqB,YAEAD,EAAAC,UAAA,GAGAD,EAAAE,WAAAF,EAAA/pB,MAAAK,SAAAgK,WAEA0f,EAAA9kC,YAAA,aAEA8kC,EAAAG,QAAA,EAIAH,EAAAI,sBAAA,SAAAtqB,GAAA,OAAAA,CAAA,EAAAkqB,CACA,CAAA,OAAAp8C,UAAAk8C,EAAAC,GAAAt9C,cAAAq9C,EAAA,CAAA,CAAAt9C,IAAA,YAAAZ,IAEA,WAEA,OAAAg+C,CACA,GAAA,CAAAp9C,IAAA,iBAAAlB,MAEA,SAAA++C,GAEA,GAAA97C,KAAA47C,OACA,CACA,IAAAG,EAAA/7C,KAAA47C,OACAE,EAAAj+C,eAAA,aAEAi+C,EAAAE,QAAA,CAAA,GAEA,IAAAC,EAAAp/C,OAAA2F,KAAAu5C,GACAE,EAAAz/C,OAAA,IAGAs/C,EAAAE,QAAAJ,OAAAN,EAAAzgC,UAAAohC,EAAA,GAAAF,EAAAE,EAAA,KAEA,CACA,OAAAH,CACA,GAAA,CAAA79C,IAAA,aAAAlB,MAEA,SAAAw0B,GAGA,IAAA6b,EAAAptC,KAAAk8C,eAAA3qB,GAQA,OALAvxB,KAAA0xB,MAAAoC,SAAAj2B,eAAA,yBAEAuvC,EAAA+O,IAAAn8C,KAAA0xB,MAAAoC,SAAAsoB,oBAAAhP,EAAA+O,KAGAn8C,KAAA67C,sBAAAzO,EACA,GAAA,CAAAnvC,IAAA,wBAAAlB,MAEA,SAAAw0B,EAAAwI,GACA,IAAAsiB,EAAAr8C,KACAotC,EAAAptC,KAAAs8C,WAAA/qB,GASA,OAPA6b,EAAAmP,iBAAAv8C,KAAA0xB,MAAAjF,IAAA+vB,eAEAx8C,KAAA07C,UAEA17C,KAAA0xB,MAAAjF,IAAAsD,MAAA,aAAA1sB,OAAA+pC,EAAAqP,OAAA,gBAAAp5C,OAAA+pC,EAAA+O,IAAA,QAAA94C,OAAA+pC,EAAAmP,mBAGAlB,EAAAjO,GACA,SAAA7zB,EAAAmjC,GAEA,GAAAnjC,EAEA,OAAAwgB,EAAAxgB,EAAAmjC,GAGA,GAAAL,EAAAX,SACA,CACA,IAAAiB,EAAAN,EAAA3qB,MAAAjF,IAAA+vB,eACAH,EAAA3qB,MAAAjF,IAAAsD,MAAA,UAAA1sB,OAAA+pC,EAAAqP,OAAA,kBAAAp5C,OAAAg5C,EAAAV,WAAAiB,gBAAAxP,EAAAmP,iBAAAI,GAAA,YAAAt5C,OAAAq5C,EAAAG,YACA,CAEA,IAAAC,EAAA,GAEAJ,EAAA91B,GAAA,QAAA,SAAAm2B,GAGA,GAAAV,EAAAX,SACA,CACA,IAAAsB,EAAAX,EAAA3qB,MAAAjF,IAAA+vB,eACAH,EAAA3qB,MAAAjF,IAAAsD,MAAA,UAAA1sB,OAAA+pC,EAAAqP,OAAA,qBAAAp5C,OAAA05C,EAAAvgD,OAAA,kBAAA6G,OAAAg5C,EAAAV,WAAAiB,gBAAAxP,EAAAmP,iBAAAS,GAAA,MACA,CACAF,GAAAC,CACA,IAEAL,EAAA91B,GAAA,OAAA,WAEA,GAAAy1B,EAAAX,SACA,CACA,IAAAuB,EAAAZ,EAAA3qB,MAAAjF,IAAA+vB,eACAH,EAAA3qB,MAAAjF,IAAAsD,MAAA,OAAA1sB,OAAA+pC,EAAAqP,OAAA,yBAAAp5C,OAAAy5C,EAAAtgD,OAAA,kBAAA6G,OAAAg5C,EAAAV,WAAAiB,gBAAAxP,EAAAmP,iBAAAU,GAAA,MACA,CACA,OAAAljB,EAAAxgB,EAAAmjC,EAAAI,EACA,GACA,GACA,GAAA,CAAA7+C,IAAA,8BAAAlB,MAEA,SAAAw0B,EAAAwI,GACA,IAAAmjB,EAAAl9C,KACAotC,EAAAptC,KAAAs8C,WAAA/qB,GAYA,OAVA6b,EAAAmP,iBAAAv8C,KAAA0xB,MAAAjF,IAAA+vB,eAEAx8C,KAAA07C,UAEA17C,KAAA0xB,MAAAjF,IAAAsD,MAAA,aAAA1sB,OAAA+pC,EAAAqP,OAAA,gBAAAp5C,OAAA+pC,EAAA+O,IAAA,QAAA94C,OAAA+pC,EAAAmP,mBAGAnP,EAAA+P,MAAA,EACA/P,EAAA3hC,SAAA,KAEA4vC,EAAAjO,GACA,SAAA7zB,EAAAmjC,GAEA,GAAAnjC,EAEA,OAAAwgB,EAAAxgB,EAAAmjC,GAGA,GAAAQ,EAAAxB,SACA,CACA,IAAAiB,EAAAO,EAAAxrB,MAAAjF,IAAA+vB,eACAU,EAAAxrB,MAAAjF,IAAAsD,MAAA,UAAA1sB,OAAA+pC,EAAAqP,OAAA,kBAAAp5C,OAAA65C,EAAAvB,WAAAiB,gBAAAxP,EAAAmP,iBAAAI,GAAA,YAAAt5C,OAAAq5C,EAAAG,YACA,CAEA,IAAAO,GAAA,EAEAV,EAAA91B,GAAA,QAAA,SAAAm2B,GAGA,GAAAG,EAAAxB,SACA,CACA,IAAAsB,EAAAE,EAAAxrB,MAAAjF,IAAA+vB,eACAU,EAAAxrB,MAAAjF,IAAAsD,MAAA,UAAA1sB,OAAA+pC,EAAAqP,OAAA,qBAAAp5C,OAAA05C,EAAAvgD,OAAA,kBAAA6G,OAAA65C,EAAAvB,WAAAiB,gBAAAxP,EAAAmP,iBAAAS,GAAA,MACA,CAQAI,EANAA,EAMAzyC,EAAAtH,OAAA,CAAA+5C,EAAAL,IAJApyC,EAAAxO,KAAA4gD,EAMA,IAEAL,EAAA91B,GAAA,OAAA,WAEA,GAAAs2B,EAAAxB,SACA,CACA,IAAAuB,EAAAC,EAAAxrB,MAAAjF,IAAA+vB,eACAU,EAAAxrB,MAAAjF,IAAAsD,MAAA,OAAA1sB,OAAA+pC,EAAAqP,OAAA,yBAAAp5C,OAAA+5C,EAAA5gD,OAAA,kBAAA6G,OAAA65C,EAAAvB,WAAAiB,gBAAAxP,EAAAmP,iBAAAU,GAAA,MACA,CACA,OAAAljB,EAAAxgB,EAAAmjC,EAAAU,EACA,GACA,GACA,GAAA,CAAAn/C,IAAA,qBAAAlB,MAEA,SAAAw0B,EAAAwI,GACA,IAAAsjB,EAAAr9C,KACAuxB,EAAA4rB,MAAA,EAEA,IAAA/P,EAAAptC,KAAAs8C,WAAA/qB,GAoBA,OAlBA6b,EAAAvvC,eAAA,aAEAuvC,EAAA4O,QAAA,CAAA,GASA5O,EAAAmP,iBAAAv8C,KAAA0xB,MAAAjF,IAAA+vB,eAEAx8C,KAAA07C,UAEA17C,KAAA0xB,MAAAjF,IAAAsD,MAAA,aAAA1sB,OAAA+pC,EAAAqP,OAAA,qBAAAp5C,OAAA+pC,EAAA+O,IAAA,QAAA94C,OAAA+pC,EAAAmP,mBAGAlB,EAAAjO,GACA,SAAA7zB,EAAAmjC,GAEA,GAAAnjC,EAEA,OAAAwgB,EAAAxgB,EAAAmjC,GAGA,GAAAW,EAAA3B,SACA,CACA,IAAAiB,EAAAU,EAAA3rB,MAAAjF,IAAA+vB,eACAa,EAAA3rB,MAAAjF,IAAAsD,MAAA,eAAA1sB,OAAA+pC,EAAAqP,OAAA,kBAAAp5C,OAAAg6C,EAAA1B,WAAAiB,gBAAAxP,EAAAmP,iBAAAI,GAAA,YAAAt5C,OAAAq5C,EAAAG,YACA,CAEA,IAAAS,EAAA,GAEAZ,EAAA91B,GAAA,QAAA,SAAAm2B,GAEA,GAAAM,EAAA3B,SACA,CACA,IAAAsB,EAAAK,EAAA3rB,MAAAjF,IAAA+vB,eACAa,EAAA3rB,MAAAjF,IAAAsD,MAAA,eAAA1sB,OAAA+pC,EAAAqP,OAAA,qBAAAp5C,OAAA05C,EAAAvgD,OAAA,kBAAA6G,OAAAg6C,EAAA1B,WAAAiB,gBAAAxP,EAAAmP,iBAAAS,GAAA,MACA,CACAM,GAAAP,CACA,IAEAL,EAAA91B,GAAA,OAAA,WAEA,GAAAy2B,EAAA3B,SACA,CACA,IAAAuB,EAAAI,EAAA3rB,MAAAjF,IAAA+vB,eACAa,EAAA3rB,MAAAjF,IAAAsD,MAAA,YAAA1sB,OAAA+pC,EAAAqP,OAAA,6BAAAp5C,OAAAg6C,EAAA1B,WAAAiB,gBAAAxP,EAAAmP,iBAAAU,GAAA,MACA,CACA,OAAAljB,EAAAxgB,EAAAmjC,EAAAhwB,KAAAriB,MAAAizC,GACA,GACA,GACA,GAAA,CAAAr/C,IAAA,UAAAlB,MAEA,SAAAwgD,EAAAxjB,GAEA,IAAAyjB,EAAA,UAAAl/C,QAAAi/C,GAAAA,EAAA,CAAA,EAQA,MAPA,iBAAAA,IAEAC,EAAArB,IAAAoB,GAGAC,EAAAf,OAAA,MAEAz8C,KAAAy9C,mBAAAD,EAAAzjB,EACA,GAAA,CAAA97B,IAAA,UAAAlB,MAEA,SAAAw0B,EAAAwI,GAEA,MAAA,UAAAz7B,QAAAizB,EAAAmsB,MAEA3jB,EAAA,IAAA15B,MAAA,2CAGAkxB,EAAAkrB,OAAA,MAEAz8C,KAAAy9C,mBAAAlsB,EAAAwI,GACA,GAAA,CAAA97B,IAAA,WAAAlB,MAEA,SAAAw0B,EAAAwI,GAEA,MAAA,UAAAz7B,QAAAizB,EAAAmsB,MAEA3jB,EAAA,IAAA15B,MAAA,4CAGAkxB,EAAAkrB,OAAA,OAEAz8C,KAAAy9C,mBAAAlsB,EAAAwI,GACA,GAAA,CAAA97B,IAAA,YAAAlB,MAEA,SAAAw0B,EAAAwI,GAEA,MAAA,UAAAz7B,QAAAizB,EAAAmsB,MAEA3jB,EAAA,IAAA15B,MAAA,6CAGAkxB,EAAAkrB,OAAA,QAEAz8C,KAAAy9C,mBAAAlsB,EAAAwI,GACA,GAAA,CAAA97B,IAAA,WAAAlB,MAEA,SAAAw0B,EAAAwI,GAEA,MAAA,UAAAz7B,QAAAizB,EAAAmsB,MAEA3jB,EAAA,IAAA15B,MAAA,4CAGAkxB,EAAAkrB,OAAA,OAEAz8C,KAAAy9C,mBAAAlsB,EAAAwI,GACA,GAAA,CAAA97B,IAAA,UAAAlB,MAEA,SAAAw0B,EAAAwI,GAIA,OAFAxI,EAAAkrB,OAAA,SAEAz8C,KAAAy9C,mBAAAlsB,EAAAwI,EACA,GAAA,CAAA97B,IAAA,aAAAlB,MAEA,SAAAwgD,EAAAxjB,GAEA,IAAAyjB,EAAA,UAAAl/C,QAAAi/C,GAAAA,EAAA,CAAA,EAQA,MAPA,iBAAAA,IAEAC,EAAArB,IAAAoB,GAGAC,EAAAf,OAAA,MAEAz8C,KAAA29C,sBAAAH,EAAAzjB,EACA,IAAA,CAzTA,CAAAlD,GA4TAn3B,EAAAD,QAAA87C,CnF2jVC,GAAEz/C,KAAKkE,KAAM,GAAElE,KAAKkE,KAAKG,EAAQ,UAAUwK,OAE5C,EAAE,CAACuB,OAAS,GAAG0vC,OAAS,GAAG,4BAA4B,GAAG,aAAa,MAAM,GAAG,CAAC,SAASz7C,EAAQT,EAAOD,GoF93VzG,IAEAm+C,EAAA,SAAAC,GAWA,SAAAD,EAAArnC,EAAAgb,EAAA9a,GACA,IAAAqnC,EAqCA,OArCA//C,iBAAAiC,KAAA49C,IACAE,EAAAp/C,WAAAsB,KAAA49C,EAAA,CAAArnC,EAAAgb,EAAA9a,KAEAE,YAAA,WAIAmnC,EAAAC,SACA,CACAC,SAAA,kBACAC,YAAA,mBACAC,QAAA,+BACAC,UAAA,8BAEAC,mBAAA,MAKAN,EAAAO,gBAAA,CACA,KAAA,KACA,IAAA,IACAjjD,EAAA,KACA,KAAA,IACAsB,EAAA,KACA,KAAA,IACAd,EAAA,KACA,KAAA,IACA0iD,MAAA,SACA,SAAA,QACAC,MAAA,SACA,SAAA,SAKAT,EAAAU,gBAAA,EACAV,EAAAW,gBAAA,EAAAX,CACA,CAAA,OAAAz+C,UAAAu+C,EAAAC,GAAA3/C,cAAA0/C,EAAA,CAAA,CAAA3/C,IAAA,iBAAAlB,MAEA,SAAAka,GAEA,OAAAjX,KAAAw+C,eAAAvnC,EACA,GAAA,CAAAhZ,IAAA,mBAAAlB,MAEA,WAGA,OADAiD,KAAA0+C,eAAAphD,KAAA0C,KAEA,GAAA,CAAA/B,IAAA,wBAAAlB,MAEA,SAAA4hD,EAAA1nC,GACA,IAAA2nC,EAAA5+C,KA0BA,OAvBAA,KAAA6+C,eAAA,SAAAF,EACAz0C,QAAAlK,KAAA+9C,SAAAG,SACA,SAAAvgB,GAEA,MAAA,KAAAt6B,OAAAu7C,EAAAP,gBAAA1gB,GACA,IACAzzB,QAAAlK,KAAA+9C,SAAAE,aAAAj+C,KAAA+9C,SAAAK,oBACA,SAAAzgB,EAAAmhB,GAEA,MAAA,QAAAz7C,OAAA0Y,mBAAA+iC,GAAA,QACA,IACA50C,QAAAlK,KAAA+9C,SAAAC,UAAAh+C,KAAA+9C,SAAAK,oBACA,SAAAzgB,EAAAmhB,GAEA,MAAA,OAAAz7C,OAAA0Y,mBAAA+iC,GAAA,YACA,IAAA,OAGA9+C,KAAA6+C,eAAA,mCAAAx7C,OAAArD,KAAA6+C,eAAA,OACA7+C,KAAA6+C,eAAA,oFAAAx7C,OAAArD,KAAA6+C,eAAA,iBAEA7+C,KAAAw+C,eAAA,IAAA54B,SAAA,sBAAA5lB,KAAA6+C,qBAEA,IAAA5nC,EAEAjX,KAAAw+C,eAAAvnC,IAKAjX,KAAA++C,uBAAA,mBAAA/+C,KAAA6+C,eAAA,IAEA7+C,KAAAg/C,mBACA,IAAA,CApGA,CAFA7+C,EAAA,8BAyGAT,EAAAD,QAAAm+C,CpFg4VA,EAAE,CAAC,4BAA4B,KAAK,GAAG,CAAC,SAASz9C,EAAQT,EAAOD,GqFz+VhE,IAAAo3B,EAAA12B,EAAA,6BAGA8+C,EAAA9+C,EAAA,mBACA++C,EAAA/+C,EAAA,mBAEAg/C,EAAAh/C,EAAA,UAEAi/C,EAAA,SAAAC,GAWA,SAAAD,EAAA7oC,EAAAgb,EAAA9a,GACA,IAAA6oC,EASA,OATAvhD,iBAAAiC,KAAAo/C,IACAE,EAAA5gD,WAAAsB,KAAAo/C,EAAA,CAAA7oC,EAAAgb,EAAA9a,KAEA8oC,UAAA,CAAA,EAGAD,EAAAE,UAAAP,EACAK,EAAAG,UAAAP,EAEAI,EAAAlgB,UAAA+f,EAAAG,CACA,CAKA,OAAAjgD,UAAA+/C,EAAAC,GAAAnhD,cAAAkhD,EAAA,CAAA,CAAAnhD,IAAA,SAAAlB,MACA,SAAA2iD,GAEA,IAAA,IAAAthD,EAAA,EAAAA,GAAAV,UAAAlB,QAAA,EAAA,EAAAkB,UAAAlB,OAAA,GAAA4B,IACA,CACA,IAAAuhD,EAAAvhD,EAAA,EAAA,GAAAV,UAAAlB,QAAA4B,EAAA,OAAAiO,EAAA3O,UAAAU,EAAA,GACA,GAAA,WAAAE,QAAAqhD,GAGA,IADA,IAAAC,EAAA/iD,OAAA2F,KAAAm9C,GACAl9C,EAAA,EAAAA,EAAAm9C,EAAApjD,OAAAiG,IAEAi9C,EAAAE,EAAAn9C,IAAAk9C,EAAAC,EAAAn9C,GAGA,CACA,OAAAi9C,CACA,GAIA,CAAAzhD,IAAA,WAAAlB,MACA,SAAA4hD,EAAA1nC,GAGA,OADAjX,KAAA0xB,MAAAiG,8CAAA,YACAkoB,sBAAAlB,EAAA1nC,EACA,GAEA,CAAAhZ,IAAA,sBAAAlB,MACA,SAAA+iD,EAAAnB,EAAA1nC,GAEA,IAAA8oC,EAAA//C,KAAA0xB,MAAAsG,2BAAA,WAAA,CAAA,EAAA8nB,GAEA,OADA9/C,KAAAu/C,UAAAO,GAAAC,EAAAF,sBAAAlB,EAAA1nC,GACAjX,KAAAu/C,UAAAO,EACA,GAMA,CAAA7hD,IAAA,QAAAlB,MACA,SAAAijD,EAAAC,EAAAC,GAEA,IAAAC,EAAAhlD,mBAAA6kD,GAEAI,EAAA,iBAAAH,EAAAA,EAAA,EACAI,OAAA,IAAAH,EAAAA,EAAA,GAEA,GAAAE,GAAA,EAEA,OAAAC,EAGA,KAAAF,EAAA3jD,QAEA6jD,EAAAp+C,KAAAk+C,EAAAG,OAAA,EAAAF,IAGA,OAAAC,CACA,GAWA,CAAApiD,IAAA,kBAAAlB,MACA,SAAAwjD,GAEAvgD,KAAA0xB,MAAA7zB,eAAA,UAEAmC,KAAA0xB,MAAAsG,2BAAA,SAGA,IAAAvN,GAAA,EAEA,IAEAA,EAAAzqB,KAAA0xB,MAAA8uB,MAAAld,MAAA5lB,IAAA6iC,EACA,CACA,MAAAhnC,GAIA,OADAvZ,KAAA0xB,MAAAjF,IAAAzb,MAAA,+BAAA3N,OAAAk9C,EAAA,kBACA,CACA,CAEA,QAAA91B,GAEAA,EAAA5K,QAMA,IAAA,CA7HA,CAAAgX,GAgIAn3B,EAAAD,QAAA2/C,CrF2+VA,EAAE,CAAC,kBAAkB,EAAE,kBAAkB,GAAG,SAAS,GAAG,4BAA4B,KAAK,GAAG,CAAC,SAASj/C,EAAQT,EAAOD,GsF/mWrH,IACAghD,EAAA5jD,OAAAsB,UAAAtC,SACAgH,EAAAD,KAAAC,IAGA69C,EAAA,SAAAhlD,EAAAyL,GAGA,IAFA,IAAA1G,EAAA,GAEArC,EAAA,EAAAA,EAAA1C,EAAAc,OAAA4B,GAAA,EACAqC,EAAArC,GAAA1C,EAAA0C,GAEA,IAAA,IAAA4I,EAAA,EAAAA,EAAAG,EAAA3K,OAAAwK,GAAA,EACAvG,EAAAuG,EAAAtL,EAAAc,QAAA2K,EAAAH,GAGA,OAAAvG,CACA,EAqBAf,EAAAD,QAAA,SAAA4nB,GACA,IAAArV,EAAAhS,KACA,GAAA,mBAAAgS,GApCA,sBAoCAyuC,EAAA9iD,MAAAqU,GACA,MAAA,IAAAvW,UAxCA,kDAwCAuW,GAyBA,IAvBA,IAEA2uC,EAFA7+C,EAxBA,SAAA8+C,EAAAjyC,GAEA,IADA,IAAAlO,EAAA,GACArC,EAAAuQ,GAAA,EAAA3H,EAAA,EAAA5I,EAAAwiD,EAAApkD,OAAA4B,GAAA,EAAA4I,GAAA,EACAvG,EAAAuG,GAAA45C,EAAAxiD,GAEA,OAAAqC,CACA,CAkBAogD,CAAAnjD,UAAA,GAqBAojD,EAAAj+C,EAAA,EAAAmP,EAAAxV,OAAAsF,EAAAtF,QACAukD,EAAA,GACA3iD,EAAA,EAAAA,EAAA0iD,EAAA1iD,IACA2iD,EAAA3iD,GAAA,IAAAA,EAKA,GAFAuiD,EAAA/6B,SAAA,SAAA,oBA3CA,SAAAnlB,EAAAugD,GAEA,IADA,IAAA5xC,EAAA,GACAhR,EAAA,EAAAA,EAAAqC,EAAAjE,OAAA4B,GAAA,EACAgR,GAAA3O,EAAArC,GACAA,EAAA,EAAAqC,EAAAjE,SACA4S,GAAA4xC,GAGA,OAAA5xC,CACA,CAkCA6xC,CAAAF,EAAA,KAAA,4CAAAn7B,EAxBA,WACA,GAAA5lB,gBAAA2gD,EAAA,CACA,IAAAO,EAAAlvC,EAAArU,MACAqC,KACA0gD,EAAA5+C,EAAApE,YAEA,OAAAb,OAAAqkD,KAAAA,EACAA,EAEAlhD,IACA,CACA,OAAAgS,EAAArU,MACA0pB,EACAq5B,EAAA5+C,EAAApE,WAGA,IAUAsU,EAAA7T,UAAA,CACA,IAAAgjD,EAAA,WAAA,EACAA,EAAAhjD,UAAA6T,EAAA7T,UACAwiD,EAAAxiD,UAAA,IAAAgjD,EACAA,EAAAhjD,UAAA,IACA,CAEA,OAAAwiD,CACA,CtFsnWA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASxgD,EAAQT,EAAOD,GuFvsWlC,IAAA2hD,EAAAjhD,EAAA,oBAEAT,EAAAD,QAAAmmB,SAAAznB,UAAAb,MAAA8jD,CvF4sWA,EAAE,CAAC,mBAAmB,KAAK,GAAG,CAAC,SAASjhD,EAAQT,EAAOD,GwF9sWvD,IAAA4M,EAEAg1C,EAAAlhD,EAAA,aACAmhD,EAAAnhD,EAAA,kBACAohD,EAAAphD,EAAA,mBACAqhD,EAAArhD,EAAA,iBACA0kB,EAAA1kB,EAAA,oBACA4Z,EAAA5Z,EAAA,kBACAshD,EAAAthD,EAAA,iBAEAuhD,EAAA97B,SAGA+7B,EAAA,SAAAC,GACA,IACA,OAAAF,EAAA,yBAAAE,EAAA,iBAAAF,EACA,CAAA,MAAAjlD,GAAA,CACA,EAEAolD,EAAAhlD,OAAAY,yBACA,GAAAokD,EACA,IACAA,EAAA,CAAA,EAAA,GACA,CAAA,MAAAplD,GACAolD,EAAA,IACA,CAGA,IAAAC,EAAA,WACA,MAAA,IAAA/nC,CACA,EACAgoC,EAAAF,EACA,WACA,IAGA,OAAAC,CACA,CAAA,MAAAE,GACA,IAEA,OAAAH,EAAAnkD,UAAA,UAAAL,GACA,CAAA,MAAA4kD,GACA,OAAAH,CACA,CACA,CACA,CAbA,GAcAA,EAEAI,EAAA/hD,EAAA,cAAAA,GACAgiD,EAAAhiD,EAAA,YAAAA,GAEAiiD,EAAAvlD,OAAAsC,iBACAgjD,EACA,SAAAp8C,GAAA,OAAAA,EAAA3G,SAAA,EACA,MAGAijD,EAAA,CAAA,EAEAC,EAAA,oBAAA19C,YAAAw9C,EAAAA,EAAAx9C,YAAAyH,EAEAk2C,EAAA,CACAnjD,UAAA,KACA,mBAAA,oBAAAojD,eAAAn2C,EAAAm2C,eACA,UAAAtmD,MACA,gBAAA,oBAAA4P,YAAAO,EAAAP,YACA,2BAAAo2C,GAAAE,EAAAA,EAAA,GAAA/lD,OAAAC,aAAA+P,EACA,mCAAAA,EACA,kBAAAg2C,EACA,mBAAAA,EACA,2BAAAA,EACA,2BAAAA,EACA,YAAA,oBAAAI,QAAAp2C,EAAAo2C,QACA,WAAA,oBAAAC,OAAAr2C,EAAAq2C,OACA,kBAAA,oBAAAC,cAAAt2C,EAAAs2C,cACA,mBAAA,oBAAAC,eAAAv2C,EAAAu2C,eACA,YAAA5jD,QACA,aAAA,oBAAA6jD,SAAAx2C,EAAAw2C,SACA,SAAArrC,KACA,cAAAsrC,UACA,uBAAA/mC,mBACA,cAAAgnC,UACA,uBAAA/mC,mBACA,UAAAqlC,EACA,SAAA2B,KACA,cAAA1B,EACA,iBAAA,oBAAA2B,aAAA52C,EAAA42C,aACA,iBAAA,oBAAAC,aAAA72C,EAAA62C,aACA,yBAAA,oBAAAC,qBAAA92C,EAAA82C,qBACA,aAAAzB,EACA,sBAAAW,EACA,cAAA,oBAAAe,UAAA/2C,EAAA+2C,UACA,eAAA,oBAAAC,WAAAh3C,EAAAg3C,WACA,eAAA,oBAAAC,WAAAj3C,EAAAi3C,WACA,aAAAhxC,SACA,UAAA4I,MACA,sBAAAgnC,GAAAE,EAAAA,EAAAA,EAAA,GAAA/lD,OAAAC,cAAA+P,EACA,SAAA,YAAA,oBAAAqgB,KAAA,YAAApuB,QAAAouB,OAAAA,KAAArgB,EACA,QAAA,oBAAAk3C,IAAAl3C,EAAAk3C,IACA,yBAAA,oBAAAA,KAAArB,GAAAE,EAAAA,GAAA,IAAAmB,KAAAlnD,OAAAC,aAAA+P,EACA,SAAAzJ,KACA,WAAAnE,OACA,WAAA5B,OACA,eAAA2mD,WACA,aAAAz0C,SACA,YAAA,oBAAAoX,QAAA9Z,EAAA8Z,QACA,UAAA,oBAAAs9B,MAAAp3C,EAAAo3C,MACA,eAAAlC,EACA,mBAAAC,EACA,YAAA,oBAAApkD,QAAAiP,EAAAjP,QACA,WAAAsmD,OACA,QAAA,oBAAAC,IAAAt3C,EAAAs3C,IACA,yBAAA,oBAAAA,KAAAzB,GAAAE,EAAAA,GAAA,IAAAuB,KAAAtnD,OAAAC,aAAA+P,EACA,sBAAA,oBAAAu3C,kBAAAv3C,EAAAu3C,kBACA,WAAAplD,OACA,4BAAA0jD,GAAAE,EAAAA,EAAA,GAAA/lD,OAAAC,aAAA+P,EACA,WAAA61C,EAAA7lD,OAAAgQ,EACA,gBAAAwY,EACA,mBAAAk9B,EACA,eAAAO,EACA,cAAAvoC,EACA,eAAA,oBAAAnV,WAAAyH,EAAAzH,WACA,sBAAA,oBAAAi/C,kBAAAx3C,EAAAw3C,kBACA,gBAAA,oBAAAC,YAAAz3C,EAAAy3C,YACA,gBAAA,oBAAAC,YAAA13C,EAAA03C,YACA,aAAAtC,EACA,YAAA,oBAAAuC,QAAA33C,EAAA23C,QACA,YAAA,oBAAAC,QAAA53C,EAAA43C,QACA,YAAA,oBAAAC,QAAA73C,EAAA63C,SAGA,GAAA9B,EACA,IACA,KAAApxC,KACA,CAAA,MAAAvU,GAEA,IAAA0nD,EAAA/B,EAAAA,EAAA3lD,IACA8lD,EAAA,qBAAA4B,CACA,CAGA,IAAAC,EAAA,SAAAA,EAAAnoD,GACA,IAAAc,EACA,GAAA,oBAAAd,EACAc,EAAA4kD,EAAA,6BACA,GAAA,wBAAA1lD,EACAc,EAAA4kD,EAAA,wBACA,GAAA,6BAAA1lD,EACAc,EAAA4kD,EAAA,8BACA,GAAA,qBAAA1lD,EAAA,CACA,IAAA8E,EAAAqjD,EAAA,4BACArjD,IACAhE,EAAAgE,EAAA5C,UAEA,MAAA,GAAA,6BAAAlC,EAAA,CACA,IAAAooD,EAAAD,EAAA,oBACAC,GAAAjC,IACArlD,EAAAqlD,EAAAiC,EAAAlmD,WAEA,CAIA,OAFAokD,EAAAtmD,GAAAc,EAEAA,CACA,EAEAunD,EAAA,CACAllD,UAAA,KACA,yBAAA,CAAA,cAAA,aACA,mBAAA,CAAA,QAAA,aACA,uBAAA,CAAA,QAAA,YAAA,WACA,uBAAA,CAAA,QAAA,YAAA,WACA,oBAAA,CAAA,QAAA,YAAA,QACA,sBAAA,CAAA,QAAA,YAAA,UACA,2BAAA,CAAA,gBAAA,aACA,mBAAA,CAAA,yBAAA,aACA,4BAAA,CAAA,yBAAA,YAAA,aACA,qBAAA,CAAA,UAAA,aACA,sBAAA,CAAA,WAAA,aACA,kBAAA,CAAA,OAAA,aACA,mBAAA,CAAA,QAAA,aACA,uBAAA,CAAA,YAAA,aACA,0BAAA,CAAA,eAAA,aACA,0BAAA,CAAA,eAAA,aACA,sBAAA,CAAA,WAAA,aACA,cAAA,CAAA,oBAAA,aACA,uBAAA,CAAA,oBAAA,YAAA,aACA,uBAAA,CAAA,YAAA,aACA,wBAAA,CAAA,aAAA,aACA,wBAAA,CAAA,aAAA,aACA,cAAA,CAAA,OAAA,SACA,kBAAA,CAAA,OAAA,aACA,iBAAA,CAAA,MAAA,aACA,oBAAA,CAAA,SAAA,aACA,oBAAA,CAAA,SAAA,aACA,sBAAA,CAAA,SAAA,YAAA,YACA,qBAAA,CAAA,SAAA,YAAA,WACA,qBAAA,CAAA,UAAA,aACA,sBAAA,CAAA,UAAA,YAAA,QACA,gBAAA,CAAA,UAAA,OACA,mBAAA,CAAA,UAAA,UACA,oBAAA,CAAA,UAAA,WACA,wBAAA,CAAA,aAAA,aACA,4BAAA,CAAA,iBAAA,aACA,oBAAA,CAAA,SAAA,aACA,iBAAA,CAAA,MAAA,aACA,+BAAA,CAAA,oBAAA,aACA,oBAAA,CAAA,SAAA,aACA,oBAAA,CAAA,SAAA,aACA,yBAAA,CAAA,cAAA,aACA,wBAAA,CAAA,aAAA,aACA,uBAAA,CAAA,YAAA,aACA,wBAAA,CAAA,aAAA,aACA,+BAAA,CAAA,oBAAA,aACA,yBAAA,CAAA,cAAA,aACA,yBAAA,CAAA,cAAA,aACA,sBAAA,CAAA,WAAA,aACA,qBAAA,CAAA,UAAA,aACA,qBAAA,CAAA,UAAA,cAGA9B,EAAA6C,EAAA,iBACAokD,EAAApkD,EAAA,UACAqkD,EAAAlnD,EAAAxB,KAAA8pB,SAAA9pB,KAAAI,MAAAiC,UAAAkF,QACAohD,EAAAnnD,EAAAxB,KAAA8pB,SAAAjoB,MAAAzB,MAAAiC,UAAAmiD,QACAoE,EAAApnD,EAAAxB,KAAA8pB,SAAA9pB,KAAA0C,OAAAL,UAAA+L,SACAy6C,EAAArnD,EAAAxB,KAAA8pB,SAAA9pB,KAAA0C,OAAAL,UAAApC,OACA6oD,EAAAtnD,EAAAxB,KAAA8pB,SAAA9pB,KAAA4nD,OAAAvlD,UAAA0mD,MAGAC,EAAA,qGACAC,EAAA,WAiBAC,EAAA,SAAA/oD,EAAA2d,GACA,IACAqrC,EADAC,EAAAjpD,EAOA,GALAsoD,EAAAD,EAAAY,KAEAA,EAAA,KADAD,EAAAX,EAAAY,IACA,GAAA,KAGAX,EAAAhC,EAAA2C,GAAA,CACA,IAAAnoD,EAAAwlD,EAAA2C,GAIA,GAHAnoD,IAAAslD,IACAtlD,EAAAqnD,EAAAc,SAEA,IAAAnoD,IAAA6c,EACA,MAAA,IAAAG,EAAA,aAAA9d,EAAA,wDAGA,MAAA,CACAgpD,MAAAA,EACAhpD,KAAAipD,EACAnoD,MAAAA,EAEA,CAEA,MAAA,IAAA8nB,EAAA,aAAA5oB,EAAA,mBACA,EAEAyD,EAAAD,QAAA,SAAAxD,EAAA2d,GACA,GAAA,iBAAA3d,GAAA,IAAAA,EAAAO,OACA,MAAA,IAAAud,EAAA,6CAEA,GAAArc,UAAAlB,OAAA,GAAA,kBAAAod,EACA,MAAA,IAAAG,EAAA,6CAGA,GAAA,OAAA6qC,EAAA,cAAA3oD,GACA,MAAA,IAAA4oB,EAAA,sFAEA,IAAAvgB,EAtDA,SAAAkH,GACA,IAAA25C,EAAAR,EAAAn5C,EAAA,EAAA,GACA45C,EAAAT,EAAAn5C,GAAA,GACA,GAAA,MAAA25C,GAAA,MAAAC,EACA,MAAA,IAAAvgC,EAAA,kDACA,GAAA,MAAAugC,GAAA,MAAAD,EACA,MAAA,IAAAtgC,EAAA,kDAEA,IAAAq8B,EAAA,GAIA,OAHAwD,EAAAl5C,EAAAs5C,GAAA,SAAA9mC,EAAAqnC,EAAAC,EAAAC,GACArE,EAAAA,EAAA1kD,QAAA8oD,EAAAZ,EAAAa,EAAAR,EAAA,MAAAM,GAAArnC,CACA,IACAkjC,CACA,CAyCAsE,CAAAvpD,GACAwpD,EAAAnhD,EAAA9H,OAAA,EAAA8H,EAAA,GAAA,GAEAuV,EAAAmrC,EAAA,IAAAS,EAAA,IAAA7rC,GACA8rC,EAAA7rC,EAAA5d,KACAc,EAAA8c,EAAA9c,MACA4oD,GAAA,EAEAV,EAAAprC,EAAAorC,MACAA,IACAQ,EAAAR,EAAA,GACAR,EAAAngD,EAAAkgD,EAAA,CAAA,EAAA,GAAAS,KAGA,IAAA,IAAA7mD,EAAA,EAAAwnD,GAAA,EAAAxnD,EAAAkG,EAAA9H,OAAA4B,GAAA,EAAA,CACA,IAAAynD,EAAAvhD,EAAAlG,GACA+mD,EAAAR,EAAAkB,EAAA,EAAA,GACAT,EAAAT,EAAAkB,GAAA,GACA,IAEA,MAAAV,GAAA,MAAAA,GAAA,MAAAA,GACA,MAAAC,GAAA,MAAAA,GAAA,MAAAA,IAEAD,IAAAC,EAEA,MAAA,IAAAvgC,EAAA,wDASA,GAPA,gBAAAghC,GAAAD,IACAD,GAAA,GAMApB,EAAAhC,EAFAmD,EAAA,KADAD,GAAA,IAAAI,GACA,KAGA9oD,EAAAwlD,EAAAmD,QACA,GAAA,MAAA3oD,EAAA,CACA,KAAA8oD,KAAA9oD,GAAA,CACA,IAAA6c,EACA,MAAA,IAAAG,EAAA,sBAAA9d,EAAA,+CAEA,MACA,CACA,GAAA4lD,GAAAzjD,EAAA,GAAAkG,EAAA9H,OAAA,CACA,IAAA4oB,EAAAy8B,EAAA9kD,EAAA8oD,GAWA9oD,GAVA6oD,IAAAxgC,IASA,QAAAA,KAAA,kBAAAA,EAAA/nB,KACA+nB,EAAA/nB,IAEAN,EAAA8oD,EAEA,MACAD,EAAArB,EAAAxnD,EAAA8oD,GACA9oD,EAAAA,EAAA8oD,GAGAD,IAAAD,IACApD,EAAAmD,GAAA3oD,EAEA,CACA,CACA,OAAAA,CACA,CxFmtWA,EAAE,CAAC,YAAY,GAAG,iBAAiB,GAAG,kBAAkB,GAAG,gBAAgB,GAAG,mBAAmB,GAAG,iBAAiB,GAAG,gBAAgB,GAAG,gBAAgB,GAAG,YAAY,GAAG,cAAc,GAAG+oD,OAAS,KAAK,GAAG,CAAC,SAAS3lD,EAAQT,EAAOD,GyFvjXxO,IAEAoiD,EAFA1hD,EAAA,gBAEAsZ,CAAA,qCAAA,GAEA,GAAAooC,EACA,IACAA,EAAA,GAAA,SACA,CAAA,MAAAplD,GAEAolD,EAAA,IACA,CAGAniD,EAAAD,QAAAoiD,CzF4jXA,EAAE,CAAC,gBAAgB,KAAK,GAAG,CAAC,SAAS1hD,EAAQT,EAAOD,G0FzkXpD,IAAA0a,EAAAha,EAAA,sBAEA4lD,EAAA,WACA,QAAA5rC,CACA,EAEA4rC,EAAAC,wBAAA,WAEA,IAAA7rC,EACA,OAAA,KAEA,IACA,OAAA,IAAAA,EAAA,GAAA,SAAA,CAAApd,MAAA,IAAAP,MACA,CAAA,MAAAC,GAEA,OAAA,CACA,CACA,EAEAiD,EAAAD,QAAAsmD,C1F8kXA,EAAE,CAAC,qBAAqB,KAAK,GAAG,CAAC,SAAS5lD,EAAQT,EAAOD,G2FjmXzD,IAAArD,EAAA,CACAgD,UAAA,KACAyR,IAAA,CAAA,GAGAo1C,EAAAppD,OAGA6C,EAAAD,QAAA,WAEA,MAAA,CAAAL,UAAAhD,GAAAyU,MAAAzU,EAAAyU,OACAzU,aAAA6pD,EACA,C3FsmXA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS9lD,EAAQT,EAAOD,G4FlnXlC,IAAAymD,EAAA,oBAAA7pD,QAAAA,OACA8pD,EAAAhmD,EAAA,WAEAT,EAAAD,QAAA,WACA,MAAA,mBAAAymD,IACA,mBAAA7pD,SACA,WAAAiC,QAAA4nD,EAAA,UACA,WAAA5nD,QAAAjC,OAAA,SAEA8pD,MACA,C5FunXA,EAAE,CAAC,UAAU,KAAK,GAAG,CAAC,SAAShmD,EAAQT,EAAOD,G6FhoX9CC,EAAAD,QAAA,WACA,GAAA,mBAAApD,QAAA,mBAAAQ,OAAAipB,sBAAA,OAAA,EACA,GAAA,WAAAxnB,QAAAjC,OAAAC,UAAA,OAAA,EAEA,IAAA+E,EAAA,CAAA,EACA+kD,EAAA/pD,OAAA,QACAgqD,EAAAxpD,OAAAupD,GACA,GAAA,iBAAAA,EAAA,OAAA,EAEA,GAAA,oBAAAvpD,OAAAsB,UAAAtC,SAAAC,KAAAsqD,GAAA,OAAA,EACA,GAAA,oBAAAvpD,OAAAsB,UAAAtC,SAAAC,KAAAuqD,GAAA,OAAA,EAYA,IAAAD,KADA/kD,EAAA+kD,GADA,GAEA/kD,EAAA,OAAA,EACA,GAAA,mBAAAxE,OAAA2F,MAAA,IAAA3F,OAAA2F,KAAAnB,GAAA7E,OAAA,OAAA,EAEA,GAAA,mBAAAK,OAAAkpB,qBAAA,IAAAlpB,OAAAkpB,oBAAA1kB,GAAA7E,OAAA,OAAA,EAEA,IAAA8pD,EAAAzpD,OAAAipB,sBAAAzkB,GACA,GAAA,IAAAilD,EAAA9pD,QAAA8pD,EAAA,KAAAF,EAAA,OAAA,EAEA,IAAAvpD,OAAAsB,UAAAooD,qBAAAzqD,KAAAuF,EAAA+kD,GAAA,OAAA,EAEA,GAAA,mBAAAvpD,OAAAY,yBAAA,CACA,IAAA+oD,EAAA3pD,OAAAY,yBAAA4D,EAAA+kD,GACA,GAdA,KAcAI,EAAAzpD,QAAA,IAAAypD,EAAAxpD,WAAA,OAAA,CACA,CAEA,OAAA,CACA,C7FsoXA,EAAE,CAAC,GAAG,GAAG,CAAC,SAASmD,EAAQT,EAAOD,G8F7qXlC,IAAA3D,EAAA8pB,SAAAznB,UAAArC,KACA2qD,EAAA5pD,OAAAsB,UAAAN,eACAP,EAAA6C,EAAA,iBAGAT,EAAAD,QAAAnC,EAAAxB,KAAAA,EAAA2qD,E9FkrXA,EAAE,CAAC,gBAAgB,KAAK,GAAG,CAAC,SAAStmD,EAAQT,EAAOD,G+FzrXpD,IAAAinD,EAAAvmD,EAAA,QACAg8C,EAAAh8C,EAAA,OAEAwmD,EAAAjnD,EAAAD,QAEA,IAAA,IAAAxB,KAAAyoD,EACAA,EAAA7oD,eAAAI,KAAA0oD,EAAA1oD,GAAAyoD,EAAAzoD,IAaA,SAAA2oD,EAAAC,GAOA,GANA,iBAAAA,IACAA,EAAA1K,EAAA9xC,MAAAw8C,IAEAA,EAAAC,WACAD,EAAAC,SAAA,UAEA,WAAAD,EAAAC,SACA,MAAA,IAAAzmD,MAAA,aAAAwmD,EAAAC,SAAA,sCAEA,OAAAD,CACA,CArBAF,EAAAI,QAAA,SAAAF,EAAAlmD,GAEA,OADAkmD,EAAAD,EAAAC,GACAH,EAAAK,QAAAjrD,KAAAkE,KAAA6mD,EAAAlmD,EACA,EAEAgmD,EAAAtpD,IAAA,SAAAwpD,EAAAlmD,GAEA,OADAkmD,EAAAD,EAAAC,GACAH,EAAArpD,IAAAvB,KAAAkE,KAAA6mD,EAAAlmD,EACA,C/FysXA,EAAE,CAAC+lD,KAAO,IAAIvK,IAAM,MAAM,GAAG,CAAC,SAASh8C,EAAQT,EAAOD,4FgGztXtDA,EAAA6O,KAAA,SAAApC,EAAAyC,EAAAq4C,EAAAC,EAAAC,GACA,IAAAzqD,EAAAoR,EACAs5C,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,GAAA,EACAlpD,EAAA4oD,EAAAE,EAAA,EAAA,EACAhrC,EAAA8qC,GAAA,EAAA,EACAvgD,EAAAyF,EAAAyC,EAAAvQ,GAOA,IALAA,GAAA8d,EAEAzf,EAAAgK,GAAA,IAAA6gD,GAAA,EACA7gD,KAAA6gD,EACAA,GAAAH,EACAG,EAAA,EAAA7qD,EAAA,IAAAA,EAAAyP,EAAAyC,EAAAvQ,GAAAA,GAAA8d,EAAAorC,GAAA,GAKA,IAHAz5C,EAAApR,GAAA,IAAA6qD,GAAA,EACA7qD,KAAA6qD,EACAA,GAAAL,EACAK,EAAA,EAAAz5C,EAAA,IAAAA,EAAA3B,EAAAyC,EAAAvQ,GAAAA,GAAA8d,EAAAorC,GAAA,GAEA,GAAA,IAAA7qD,EACAA,EAAA,EAAA4qD,MACA,IAAA5qD,IAAA2qD,EACA,OAAAv5C,EAAAkQ,IAAAlI,KAAApP,GAAA,EAAA,GAEAoH,GAAAjL,KAAAsG,IAAA,EAAA+9C,GACAxqD,GAAA4qD,CACA,CACA,OAAA5gD,GAAA,EAAA,GAAAoH,EAAAjL,KAAAsG,IAAA,EAAAzM,EAAAwqD,EACA,EAEAxnD,EAAAmM,MAAA,SAAAM,EAAAnP,EAAA4R,EAAAq4C,EAAAC,EAAAC,GACA,IAAAzqD,EAAAoR,EAAA3N,EACAinD,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAG,EAAA,KAAAN,EAAArkD,KAAAsG,IAAA,GAAA,IAAAtG,KAAAsG,IAAA,GAAA,IAAA,EACA9K,EAAA4oD,EAAA,EAAAE,EAAA,EACAhrC,EAAA8qC,EAAA,GAAA,EACAvgD,EAAA1J,EAAA,GAAA,IAAAA,GAAA,EAAAA,EAAA,EAAA,EAAA,EAmCA,IAjCAA,EAAA6F,KAAA+D,IAAA5J,GAEAme,MAAAne,IAAAA,IAAA8Y,KACAhI,EAAAqN,MAAAne,GAAA,EAAA,EACAN,EAAA2qD,IAEA3qD,EAAAmG,KAAAuY,MAAAvY,KAAA6pB,IAAA1vB,GAAA6F,KAAA4kD,KACAzqD,GAAAmD,EAAA0C,KAAAsG,IAAA,GAAAzM,IAAA,IACAA,IACAyD,GAAA,IAGAnD,GADAN,EAAA4qD,GAAA,EACAE,EAAArnD,EAEAqnD,EAAA3kD,KAAAsG,IAAA,EAAA,EAAAm+C,IAEAnnD,GAAA,IACAzD,IACAyD,GAAA,GAGAzD,EAAA4qD,GAAAD,GACAv5C,EAAA,EACApR,EAAA2qD,GACA3qD,EAAA4qD,GAAA,GACAx5C,GAAA9Q,EAAAmD,EAAA,GAAA0C,KAAAsG,IAAA,EAAA+9C,GACAxqD,GAAA4qD,IAEAx5C,EAAA9Q,EAAA6F,KAAAsG,IAAA,EAAAm+C,EAAA,GAAAzkD,KAAAsG,IAAA,EAAA+9C,GACAxqD,EAAA,IAIAwqD,GAAA,EAAA/6C,EAAAyC,EAAAvQ,GAAA,IAAAyP,EAAAzP,GAAA8d,EAAArO,GAAA,IAAAo5C,GAAA,GAIA,IAFAxqD,EAAAA,GAAAwqD,EAAAp5C,EACAs5C,GAAAF,EACAE,EAAA,EAAAj7C,EAAAyC,EAAAvQ,GAAA,IAAA3B,EAAA2B,GAAA8d,EAAAzf,GAAA,IAAA0qD,GAAA,GAEAj7C,EAAAyC,EAAAvQ,EAAA8d,IAAA,IAAAzV,CACA,ChG6tXA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAStG,EAAQT,EAAOD,GiGjzXlC,mBAAA5C,OAAAyC,OAEAI,EAAAD,QAAA,SAAAgoD,EAAAC,GACAA,IACAD,EAAAE,OAAAD,EACAD,EAAAtpD,UAAAtB,OAAAyC,OAAAooD,EAAAvpD,UAAA,CACAnC,YAAA,CACAe,MAAA0qD,EACAzqD,YAAA,EACAE,UAAA,EACAD,cAAA,KAIA,EAGAyC,EAAAD,QAAA,SAAAgoD,EAAAC,GACA,GAAAA,EAAA,CACAD,EAAAE,OAAAD,EACA,IAAAE,EAAA,WAAA,EACAA,EAAAzpD,UAAAupD,EAAAvpD,UACAspD,EAAAtpD,UAAA,IAAAypD,EACAH,EAAAtpD,UAAAnC,YAAAyrD,CACA,CACA,CjGqzXA,EAAE,CAAC,GAAG,GAAG,CAAC,SAAStnD,EAAQT,EAAOD,GkGnzXlCC,EAAAD,QAZA,SAAAirB,EAAAqI,GAEA,OAAAA,EAAAkK,WAAAvS,IAAAqI,EAAAoK,SAAAzS,GAEAqI,EAAA3oB,UAAA,EAAA2oB,EAAAv2B,OAAA,GAIAu2B,CAEA,ClGk1XA,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS5yB,EAAQT,EAAOD,GmGx2XnC,IAAAooD,EAAA1nD,EAAA,8BAiBA2nD,EAAA,WASA,OAAA5pD,eAPA,SAAA4pD,EAAAC,EAAAC,GACAjqD,iBAAAiC,KAAA8nD,GAEA9nD,KAAAioD,QAAA,mBAAAF,EAAAA,EAAAF,EACA7nD,KAAAkoD,SAAA,mBAAAF,EAAAA,EAAAH,EAEA7nD,KAAAmoD,iBAAA,CAAA,CACA,GAAA,CAAA,CAAAlqD,IAAA,mBAAAlB,MAEA,WAEA,OAAAF,OAAA2F,KAAAxC,KAAAmoD,kBAAA3rD,MACA,GAAA,CAAAyB,IAAA,iBAAAlB,MAEA,SAAAqrD,GACA,IAAAC,EAAAroD,KAGA,GAAA,UAAA1B,QAAA8pD,GAGA,OADApoD,KAAAkoD,SAAA,2FAAA7kD,OAAA/E,QAAA8pD,MACA,EAGAvrD,OAAA2F,KAAA4lD,GAEAxnC,SACA,SAAA0nC,GAEA,iBAAAF,EAAAE,GAEAD,EAAAH,SAAA,gFAAA7kD,OAAAilD,EAAA,6CAAAjlD,OAAA/E,QAAA8pD,EAAAE,MAIAD,EAAAF,iBAAAG,GAAAF,EAAAE,EAEA,GACA,GAAA,CAAArqD,IAAA,wBAAAlB,MAEA,SAAAwrD,GAEAvoD,KAAAmoD,iBAAAtqD,eAAA0qD,WAEAvoD,KAAAmoD,iBAAAI,EAEA,GAIA,CAAAtqD,IAAA,oBAAAlB,MACA,SAAAqrD,GACA,IAAAI,EAAAxoD,KACA,MAAA,iBAAAooD,GAEApoD,KAAAyoD,sBAAAL,IACA,GAEA,UAAA9pD,QAAA8pD,IAEAvrD,OAAA2F,KAAA4lD,GAEAxnC,SACA,SAAA0nC,GAEAE,EAAAE,kBAAAJ,EACA,KACA,IAIAtoD,KAAAkoD,SAAA,mHAAA7kD,OAAA/E,QAAA8pD,MACA,EAEA,GAAA,CAAAnqD,IAAA,oBAAAlB,MAEA,WAEAiD,KAAAmoD,iBAAA,CAAA,CACA,GAAA,CAAAlqD,IAAA,YAAAlB,MAEA,SAAAqrD,GAEA,OAAApoD,KAAAmoD,iBAAAtqD,eAAAuqD,GAEApoD,KAAAmoD,iBAAAC,GAIAA,CAEA,IAAA,CA7FA,GAgGA1oD,EAAAD,QAAAqoD,CnG62XA,EAAE,CAAC,6BAA6B,MAAM,IAAI,CAAC,SAAS3nD,EAAQT,EAAOD,GoGh9XnEC,EAAAD,QATA,SAAAkpD,EAAA79B,GAEA,IAAA0B,EAAA,iBAAAm8B,EAAAA,EAAA,GAEA53C,QAAA0b,IAAA,cAAAppB,OAAAmpB,IAEA1B,GAAA/Z,QAAA0b,IAAAC,KAAApmB,UAAAwkB,GACA,CpGq+XA,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS3qB,EAAQT,EAAOD,GqGj/XnC,IAAAooD,EAAA1nD,EAAA,8BAEAyoD,EAAAzoD,EAAA,wCAGA0oD,EAAA,CAAA9sB,WAAA57B,EAAA,uCAoBA2oD,EAAA,WAYA,OAAA5qD,eAVA,SAAA4qD,IACA/qD,iBAAAiC,KAAA8oD,GACA9oD,KAAA+oD,oBAAA,IAAAH,EAAAf,EAAAA,EACA,GAOA,CAAA,CAAA5pD,IAAA,qBAAAlB,MACA,SAAAuvB,EAAA08B,EAAAC,GAIA,GAAA,UAAA3qD,QAAAguB,GAAA,OAAA,EAEA,GAAA,iBAAA08B,EAAA,OAAA,EAIA,IAAAE,OAAA,IAAAD,EAAA38B,EAAA28B,EAGAE,EAAAN,EAAA9sB,WAAAqtB,sBAAAJ,GAGA,GAAAG,EAAA3sD,QAAAwsD,EAAAxsD,OACA,CAEA,IAAA6sD,EAAAL,EAAAnkD,QAAA,KACAykD,EAAAN,EAAAnkD,QAAA,KAGA0kD,EAAAP,EAAAnkD,QAAA,KAcA,GAAA0kD,EAAA,GAEAV,EAAA9sB,WAAAytB,sBAAAR,GAAA,EACA,CACA,IAAA3c,EAAA2c,EAAA5+C,UAAA,EAAAm/C,GAAAx3C,OAEA,SAAAua,EAAAzuB,eAAAwuC,IAAA,mBAAA/f,EAAA+f,GASA,CAUA,GAAAgd,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CAEA,IAAAI,EAAAT,EAAA5+C,UAAA,EAAAi/C,GAAAt3C,OAIA,GAAA,WAAAzT,QAAAguB,EAAAm9B,IAEA,OAAA,EAIA,IAAAC,EAAAV,EAAA5+C,UAAAi/C,EAAA,EAAAC,GAAAv3C,OAEA43C,EAAA56C,SAAA26C,EAAA,IAOA,OAAAxtD,MAAAK,QAAA+vB,EAAAm9B,KAAAvuC,MAAAyuC,KAOAzuC,MAAAyuC,IAIAD,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GACAA,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GACAA,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GAGAp9B,EAAAm9B,GAAA5rD,eAAA6rD,IAKAC,KAAAr9B,EAAAm9B,GAEA,CAIA,OAAAn9B,EAAAzuB,eAAAmrD,EAEA,CAGA,IAAAa,EAAAV,EACAW,EAAAd,EAAA5+C,UAAA++C,EAAA3sD,OAAA,GAIA6sD,EAAAQ,EAAAhlD,QAAA,KACAykD,EAAAO,EAAAhlD,QAAA,KAGA0kD,EAAAM,EAAAhlD,QAAA,KAcA,GAAA0kD,EAAA,GAEAV,EAAA9sB,WAAAytB,sBAAAK,GAAA,EACA,CACA,IAAAxd,EAAAwd,EAAAz/C,UAAA,EAAAm/C,GAAAx3C,OAGA,GAAA,aAAAzT,QAAAguB,EAAA+f,IAGA,OAAA,EAKA,IAAA0d,EAAAlB,EAAA9sB,WAAAiuB,kBAAAnB,EAAA9sB,WAAAkuB,+BAAAJ,EAAAz/C,UAAAiiC,EAAA7vC,QAAA,GAAA,KACA,GAAA,GAAAutD,EAAAvtD,QAAA,IAAAutD,EAAA,GAGA,OAAA/pD,KAAAkqD,mBAAA59B,EAAA+f,GAAA1uC,MAAA2uB,GAAAw9B,EAAAZ,GASA,IALA,IAAAiB,EAAA,GAEAjB,OAAA,IAAAD,EAAA38B,EAAA28B,EAGA7qD,EAAA,EAAAA,EAAA2rD,EAAAvtD,OAAA4B,IAIA+rD,EAAAloD,KAAAjC,KAAA+oD,oBAAAljB,kBAAAqjB,EAAAa,EAAA3rD,KAGA,OAAA4B,KAAAkqD,mBAAA59B,EAAA+f,GAAA1uC,MAAA2uB,EAAA69B,GAAAL,EAAAZ,EAEA,CAUA,GAAAG,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CACA,IAAAI,EAAAI,EAAAz/C,UAAA,EAAAi/C,GAAAt3C,OAEA23C,EAAAG,EAAAz/C,UAAAi/C,EAAA,EAAAC,GAAAv3C,OAEA43C,EAAA56C,SAAA26C,EAAA,IAgBA,OAAAxtD,MAAAK,QAAA+vB,EAAAm9B,KAAAvuC,MAAAyuC,KAUAzuC,MAAAyuC,IAGAD,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GACAA,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GACAA,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GAGA1pD,KAAAkqD,mBAAA59B,EAAAm9B,GAAAC,GAAAI,EAAAZ,IAKAlpD,KAAAkqD,mBAAA59B,EAAAm9B,GAAAE,GAAAG,EAAAZ,GAEA,CAIA,QAAA58B,EAAAzuB,eAAAgsD,IAAA,WAAAvrD,QAAAguB,EAAAu9B,OAIAv9B,EAAAzuB,eAAAgsD,KAQAv9B,EAAAu9B,GAAA,CAAA,GALA7pD,KAAAkqD,mBAAA59B,EAAAu9B,GAAAC,EAAAZ,GASA,IAAA,CAlRA,GAqRAxpD,EAAAD,QAAAqpD,CrGs/XA,EAAE,CAAC,6BAA6B,IAAI,uCAAuC,IAAI,qCAAqC,MAAM,IAAI,CAAC,SAAS3oD,EAAQT,EAAOD,GsGpyYvJ,IAAAooD,EAAA1nD,EAAA,8BACAiqD,EAAAjqD,EAAA,qCACAkqD,EAAAlqD,EAAA,2CAsBAmqD,EAAA,WAWA,OAAApsD,eATA,SAAAosD,EAAAvC,EAAAC,GACAjqD,iBAAAiC,KAAAsqD,GAEAtqD,KAAAioD,QAAA,mBAAAF,EAAAA,EAAAF,EACA7nD,KAAAkoD,SAAA,mBAAAF,EAAAA,EAAAH,EAEA7nD,KAAA4pD,oBAAAQ,CACA,GAEA,CAAA,CAAAnsD,IAAA,qBAAAlB,MACA,SAAAisD,EAAAuB,GAEA,OAAAF,EAAArqD,KAAAgpD,EAAAuB,EACA,GAEA,CAAAtsD,IAAA,uBAAAlB,MACA,SAAAuvB,EAAA08B,EAAAwB,GAGA,GAAA,UAAAlsD,QAAAguB,IAEA,iBAAA08B,EAAA,CAEA,IAAAyB,EAAA,GACA,iBAAAD,IAEAC,EAAAD,GAIA,IAAA73B,EAAAq2B,EAAAnkD,QAAA,KAGA,IAAA,GAAA8tB,EACA,CAEA,IAAA02B,EAAAL,EAAAnkD,QAAA,KACAykD,EAAAN,EAAAnkD,QAAA,KAIA6lD,EAAA1B,EAAAnkD,QAAA,MAWA,GAAAwkD,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CAEA,IAAAI,EAAAT,EAAA5+C,UAAA,EAAAi/C,GAAAt3C,OAIA,GAAA,WAAAzT,QAAAguB,EAAAm9B,IAEA,OAAA,EAIA,IAAAC,EAAAV,EAAA5+C,UAAAi/C,EAAA,EAAAC,GAAAv3C,OAEA43C,EAAA56C,SAAA26C,EAAA,IAOA,OAAAxtD,MAAAK,QAAA+vB,EAAAm9B,KAAAvuC,MAAAyuC,KAOAzuC,MAAAyuC,IAIAD,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GACAA,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GACAA,EAAA1pD,KAAA4pD,oBAAA,IAAAF,UAGAp9B,EAAAm9B,GAAAC,IACA,WAIAp9B,EAAAm9B,GAAAE,IACA,GAEA,CAGA,GAAAN,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,GAAA,EACA,CACA,IAAAI,EAAAT,EAAA5+C,UAAA,EAAAi/C,GAAAt3C,OAEA,IAAA7V,MAAAK,QAAA+vB,EAAAm9B,IAGA,OAAA,EAKA,IAFA,IAAAtJ,EAAA7zB,EAAAm9B,GAEArrD,EAAA+hD,EAAA3jD,OAAA,EAAA4B,GAAA,EAAAA,IACA,CAEA4B,KAAA2qD,mBAAA3B,EAAA7I,EAAA/hD,KAIA+hD,EAAAG,OAAAliD,EAAA,EAEA,CACA,OAAA,CACA,CAEA,GAAAssD,EAAA,EACA,CACA,IAAAE,EAAA5B,EAAA5+C,UAAA,EAAAsgD,GAAA34C,OAEA,MAAA,UAAAzT,QAAAguB,EAAAs+B,aAMAt+B,EAAAs+B,IACA,EACA,CAKA,cADAt+B,EAAA08B,IACA,CAEA,CAGA,IAAAa,EAAAb,EAAA5+C,UAAA,EAAAuoB,GACAm3B,EAAAd,EAAA5+C,UAAAuoB,EAAA,GAKA02B,EAAAQ,EAAAhlD,QAAA,KACAykD,EAAAO,EAAAhlD,QAAA,KAUA,GAAAwkD,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CACA,IAAAI,EAAAI,EAAAz/C,UAAA,EAAAi/C,GAAAt3C,OAEA23C,EAAAG,EAAAz/C,UAAAi/C,EAAA,EAAAC,GAAAv3C,OAEA43C,EAAA56C,SAAA26C,EAAA,IAgBA,OAAAxtD,MAAAK,QAAA+vB,EAAAm9B,KAAAvuC,MAAAyuC,KAKA,UAAArrD,QAAAguB,EAAAm9B,MAOAvuC,MAAAyuC,IAGAD,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GACAA,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GACAA,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GAGAe,EAAA,GAAApnD,OAAAonD,GAAApnD,OAAAonD,EAAAjuD,OAAA,EAAA,IAAA,IAAA6G,OAAAwmD,GAEA7pD,KAAA6qD,qBAAAv+B,EAAAm9B,GAAAC,GAAAI,EAAAW,KAKAA,EAAA,GAAApnD,OAAAonD,GAAApnD,OAAAonD,EAAAjuD,OAAA,EAAA,IAAA,IAAA6G,OAAAwmD,GAEA7pD,KAAA6qD,qBAAAv+B,EAAAm9B,GAAAE,GAAAG,EAAAW,KAEA,CAGA,GAAApB,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,GAAA,EACA,CACA,IAAAI,EAAAT,EAAA5+C,UAAA,EAAAi/C,GAAAt3C,OAEA,IAAA7V,MAAAK,QAAA+vB,EAAAm9B,IAGA,OAAA,EAIA,IAAAqB,EAAAx+B,EAAAm9B,GAEAgB,EAAA,GAAApnD,OAAAonD,GAAApnD,OAAAonD,EAAAjuD,OAAA,EAAA,IAAA,IAAA6G,OAAAomD,GAGA,IADA,IAAAsB,EAAA,CAAA,EACA3sD,EAAA,EAAAA,EAAA0sD,EAAAtuD,OAAA4B,IACA,CACA,IAAA4sD,EAAA,GAAA3nD,OAAAonD,EAAA,KAAApnD,OAAAjF,EAAA,KACAg3B,EAAAp1B,KAAA6qD,qBAAAv+B,EAAAm9B,GAAArrD,GAAA0rD,EAAAkB,GAEAD,EAAA,GAAA1nD,OAAA2nD,EAAA,KAAA3nD,OAAAymD,IAAA10B,CACA,CAEA,OAAA21B,CACA,CAIA,IAAAL,EAAA1B,EAAAnkD,QAAA,MACA,GAAA6lD,EAAA,EACA,CACA,IAAAE,EAAA5B,EAAA5+C,UAAA,EAAAsgD,GAAA34C,OAEA,GAAA,UAAAzT,QAAAguB,EAAAs+B,IAGA,OAAA,EAIA,IAAAK,EAAA3+B,EAAAs+B,GACAM,EAAAruD,OAAA2F,KAAAyoD,GAEAR,EAAA,GAAApnD,OAAAonD,GAAApnD,OAAAonD,EAAAjuD,OAAA,EAAA,IAAA,IAAA6G,OAAAunD,GAGA,IADA,IAAAG,EAAA,CAAA,EACA3sD,EAAA,EAAAA,EAAA8sD,EAAA1uD,OAAA4B,IACA,CACA,IAAA4sD,EAAA,GAAA3nD,OAAAonD,EAAA,KAAApnD,OAAA6nD,EAAA9sD,IACAg3B,EAAAp1B,KAAA6qD,qBAAAv+B,EAAAs+B,GAAAM,EAAA9sD,IAAA0rD,EAAAkB,GAGAhrD,KAAA2qD,mBAAA3B,EAAA5zB,KAGA21B,EAAA,GAAA1nD,OAAA2nD,EAAA,KAAA3nD,OAAAymD,IAAA10B,EAEA,CAEA,OAAA21B,CACA,CAIA,OAAAz+B,EAAAzuB,eAAAgsD,IAAA,WAAAvrD,QAAAguB,EAAAu9B,SAEA,EAEAv9B,EAAAzuB,eAAAgsD,IAIAY,EAAA,GAAApnD,OAAAonD,GAAApnD,OAAAonD,EAAAjuD,OAAA,EAAA,IAAA,IAAA6G,OAAAwmD,GACA7pD,KAAA6qD,qBAAAv+B,EAAAu9B,GAAAC,EAAAW,KAMAA,EAAA,GAAApnD,OAAAonD,GAAApnD,OAAAonD,EAAAjuD,OAAA,EAAA,IAAA,IAAA6G,OAAAwmD,GACAv9B,EAAAu9B,GAAA,CAAA,EACA7pD,KAAA6qD,qBAAAv+B,EAAAu9B,GAAAC,EAAAW,GA1SA,CA6SA,IAAA,CApUA,GAuUA/qD,EAAAD,QAAA6qD,CtGyyYA,EAAE,CAAC,0CAA0C,IAAI,oCAAoC,GAAG,6BAA6B,MAAM,IAAI,CAAC,SAASnqD,EAAQT,EAAOD,GuGxoZxJ,IAAAooD,EAAA1nD,EAAA,8BACAiqD,EAAAjqD,EAAA,qCACAkqD,EAAAlqD,EAAA,2CAEA0oD,EAAA,CAAA9sB,WAAA57B,EAAA,uCAsBAgrD,EAAA,WASA,OAAAjtD,eAPA,SAAAitD,EAAApD,EAAAC,GACAjqD,iBAAAiC,KAAAmrD,GAEAnrD,KAAAioD,QAAA,mBAAAF,EAAAA,EAAAF,EACA7nD,KAAAkoD,SAAA,mBAAAF,EAAAA,EAAAH,EAEA7nD,KAAA4pD,oBAAAQ,CACA,GAAA,CAAA,CAAAnsD,IAAA,qBAAAlB,MAEA,SAAAisD,EAAAuB,GAEA,OAAAF,EAAArqD,KAAAgpD,EAAAuB,EACA,GAEA,CAAAtsD,IAAA,oBAAAlB,MACA,SAAAuvB,EAAA08B,EAAAwB,EAAAvB,GAGA,GAAA,UAAA3qD,QAAAguB,IAEA,iBAAA08B,EAAA,CAEA,IAAAyB,EAAA,GACA,iBAAAD,IAEAC,EAAAD,GAIA,IAAAtB,OAAA,IAAAD,EAAA38B,EAAA28B,EAGAE,EAAAN,EAAA9sB,WAAAqtB,sBAAAJ,GAGA,GAAA,IAAAG,EACA,CAQA,IALA,IAAAiC,EAAAvC,EAAA9sB,WAAAiuB,kBAAAS,GAEAY,EAAA,EAGAjtD,EAAA,EAAAA,EAAA4qD,EAAAxsD,QAEA,KAAAwsD,EAAAtiD,OAAAtI,GAFAA,IAMAitD,IAGA,IAAAC,EAAAF,EAAA5uD,OAAA6uD,EAEA,GAAAC,EAAA,EAKA,OAMA,IAAAC,EAAAvC,EAAAjtD,MAAAsvD,GAMA,OALAC,EAAA,IAEAC,EAAA,GAAAloD,OAAA+nD,EAAArvD,MAAA,EAAAuvD,GAAA3mD,KAAA,KAAA,KAAAtB,OAAAkoD,IAEAvrD,KAAAioD,QAAA,yDAAA5kD,OAAAkoD,EAAA,MACAvrD,KAAA6lC,kBAAAqjB,EAAAqC,EAEA,CAGA,GAAApC,EAAA3sD,QAAAwsD,EAAAxsD,OACA,CAIA,IAAA6sD,EAAAL,EAAAnkD,QAAA,KACAykD,EAAAN,EAAAnkD,QAAA,KAIA6lD,EAAA1B,EAAAnkD,QAAA,MAIA0kD,EAAAP,EAAAnkD,QAAA,KAcA,GAAA0kD,EAAA,GAEAV,EAAA9sB,WAAAytB,sBAAAR,GAAA,EACA,CACA,IAAA3c,EAAA2c,EAAA5+C,UAAA,EAAAm/C,GAAAx3C,OAEA,GAAA,aAAAzT,QAAAguB,EAAA+f,IAGA,OAAA,EAKA,IAAA0d,EAAAlB,EAAA9sB,WAAAiuB,kBAAAnB,EAAA9sB,WAAAkuB,+BAAAjB,EAAA5+C,UAAAiiC,EAAA7vC,QAAA,GAAA,KACA,GAAA,GAAAutD,EAAAvtD,QAAA,IAAAutD,EAAA,GAGA,OAAAz9B,EAAA+f,GAAA1uC,MAAA2uB,GASA,IALA,IAAA69B,EAAA,GAEAjB,OAAA,IAAAD,EAAA38B,EAAA28B,EAGA7qD,EAAA,EAAAA,EAAA2rD,EAAAvtD,OAAA4B,IAEA,KAAA2rD,EAAA3rD,GAAA,IAAA,KAAA2rD,EAAA3rD,GAAA2rD,EAAA3rD,GAAA5B,OAAA,IAIA,KAAAutD,EAAA3rD,GAAA,IAAA,KAAA2rD,EAAA3rD,GAAA2rD,EAAA3rD,GAAA5B,OAAA,IAIA,KAAAutD,EAAA3rD,GAAA,IAAA,KAAA2rD,EAAA3rD,GAAA2rD,EAAA3rD,GAAA5B,OAAA,GANA2tD,EAAAloD,KAAA8nD,EAAA3rD,GAAAgM,UAAA,EAAA2/C,EAAA3rD,GAAA5B,OAAA,IAYA2tD,EAAAloD,KAAAjC,KAAA6lC,kBAAAqjB,EAAAa,EAAA3rD,KAIA,OAAAkuB,EAAA+f,GAAA1uC,MAAA2uB,EAAA69B,EAEA,CAUA,GAAAd,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CAEA,IAAAI,EAAAT,EAAA5+C,UAAA,EAAAi/C,GAAAt3C,OAIA,GAAA,WAAAzT,QAAAguB,EAAAm9B,IAEA,OAIA,IAAAC,EAAAV,EAAA5+C,UAAAi/C,EAAA,EAAAC,GAAAv3C,OAEA43C,EAAA56C,SAAA26C,EAAA,IAOA,GAAAxtD,MAAAK,QAAA+vB,EAAAm9B,KAAAvuC,MAAAyuC,GAEA,OAKA,OAAAzuC,MAAAyuC,IAIAD,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GACAA,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GACAA,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GAGAp9B,EAAAm9B,GAAAC,IAIAp9B,EAAAm9B,GAAAE,EAEA,CAGA,GAAAN,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,GAAA,EACA,CACA,IAAAI,EAAAT,EAAA5+C,UAAA,EAAAi/C,GAAAt3C,OAEA,IAAA7V,MAAAK,QAAA+vB,EAAAm9B,IAGA,OAAA,EAKA,IAFA,IAAAtJ,EAAA7zB,EAAAm9B,GACA+B,EAAA,GACAptD,EAAA,EAAAA,EAAA+hD,EAAA3jD,OAAA4B,IACA,CAEA4B,KAAA2qD,mBAAA3B,EAAA7I,EAAA/hD,KAGAotD,EAAAvpD,KAAAk+C,EAAA/hD,GAGA,CAEA,OAAAotD,CACA,CAEA,GAAAd,EAAA,EACA,CACA,IAAAE,EAAA5B,EAAA5+C,UAAA,EAAAsgD,GAAA34C,OAEA,MAAA,UAAAzT,QAAAguB,EAAAs+B,KAMAt+B,EAAAs+B,EACA,CAIA,OAAA,MAAAtsD,QAAAguB,EAAA08B,IAEA18B,EAAA08B,QAIA,CAGA,CAKA,IAAAa,EAAAV,EACAW,EAAAd,EAAA5+C,UAAA++C,EAAA3sD,OAAA,GAKA6sD,EAAAQ,EAAAhlD,QAAA,KACAykD,EAAAO,EAAAhlD,QAAA,KAGA0kD,EAAAM,EAAAhlD,QAAA,KAcA,GAAA0kD,EAAA,GAEAV,EAAA9sB,WAAAytB,sBAAAK,GAAA,EACA,CACA,IAAAxd,EAAAwd,EAAAz/C,UAAA,EAAAm/C,GAAAx3C,OAGA,GAFA04C,EAAA,GAAApnD,OAAAonD,GAAApnD,OAAAonD,EAAAjuD,OAAA,EAAA,IAAA,IAAA6G,OAAAwmD,GAEA,aAAAvrD,QAAAguB,EAAA+f,IAGA,OAAA,EAKA,IAAA0d,EAAAlB,EAAA9sB,WAAAiuB,kBAAAnB,EAAA9sB,WAAAkuB,+BAAAJ,EAAAz/C,UAAAiiC,EAAA7vC,QAAA,GAAA,KACA,GAAA,GAAAutD,EAAAvtD,QAAA,IAAAutD,EAAA,GAGA,OAAA/pD,KAAA6lC,kBAAAvZ,EAAA+f,GAAA1uC,MAAA2uB,GAAAw9B,EAAAW,EAAAvB,GASA,IALA,IAAAiB,EAAA,GAEAjB,OAAA,IAAAD,EAAA38B,EAAA28B,EAGA7qD,EAAA,EAAAA,EAAA2rD,EAAAvtD,OAAA4B,IAGA+rD,EAAAloD,KAAAjC,KAAA6lC,kBAAAqjB,EAAAa,EAAA3rD,KAGA,OAAA4B,KAAA6lC,kBAAAvZ,EAAA+f,GAAA1uC,MAAA2uB,EAAA69B,GAAAL,EAAAW,EAAAvB,EAEA,CAUA,GAAAG,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CACA,IAAAI,EAAAI,EAAAz/C,UAAA,EAAAi/C,GAAAt3C,OAEA23C,EAAAG,EAAAz/C,UAAAi/C,EAAA,EAAAC,GAAAv3C,OAEA43C,EAAA56C,SAAA26C,EAAA,IAgBA,GAAAxtD,MAAAK,QAAA+vB,EAAAm9B,KAAAvuC,MAAAyuC,GAEA,OAGA,GAAA,UAAArrD,QAAAguB,EAAAm9B,IAEA,OAOA,OAAAvuC,MAAAyuC,IAGAD,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GACAA,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GACAA,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GAGAe,EAAA,GAAApnD,OAAAonD,GAAApnD,OAAAonD,EAAAjuD,OAAA,EAAA,IAAA,IAAA6G,OAAAwmD,GAEA7pD,KAAA6lC,kBAAAvZ,EAAAm9B,GAAAC,GAAAI,EAAAW,EAAAvB,KAKAuB,EAAA,GAAApnD,OAAAonD,GAAApnD,OAAAonD,EAAAjuD,OAAA,EAAA,IAAA,IAAA6G,OAAAwmD,GAEA7pD,KAAA6lC,kBAAAvZ,EAAAm9B,GAAAE,GAAAG,EAAAW,EAAAvB,GAEA,CAGA,GAAAG,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,GAAA,EACA,CACA,IAAAI,EAAAT,EAAA5+C,UAAA,EAAAi/C,GAAAt3C,OAEA,IAAA7V,MAAAK,QAAA+vB,EAAAm9B,IAGA,OAAA,EAIA,IAAAqB,EAAAx+B,EAAAm9B,GAEAgB,EAAA,GAAApnD,OAAAonD,GAAApnD,OAAAonD,EAAAjuD,OAAA,EAAA,IAAA,IAAA6G,OAAAomD,GAGA,IADA,IAAAsB,EAAA,CAAA,EACA3sD,EAAA,EAAAA,EAAA0sD,EAAAtuD,OAAA4B,IACA,CACA,IAAA4sD,EAAA,GAAA3nD,OAAAonD,EAAA,KAAApnD,OAAAjF,EAAA,KACAg3B,EAAAp1B,KAAA6lC,kBAAAvZ,EAAAm9B,GAAArrD,GAAA0rD,EAAAkB,EAAA9B,GAEA6B,EAAA,GAAA1nD,OAAA2nD,EAAA,KAAA3nD,OAAAymD,IAAA10B,CACA,CAEA,OAAA21B,CACA,CAIA,IAAAL,EAAA1B,EAAAnkD,QAAA,MACA,GAAA6lD,EAAA,EACA,CACA,IAAAE,EAAA5B,EAAA5+C,UAAA,EAAAsgD,GAAA34C,OAEA,GAAA,UAAAzT,QAAAguB,EAAAs+B,IAGA,OAAA,EAIA,IAAAK,EAAA3+B,EAAAs+B,GACAM,EAAAruD,OAAA2F,KAAAyoD,GAEAR,EAAA,GAAApnD,OAAAonD,GAAApnD,OAAAonD,EAAAjuD,OAAA,EAAA,IAAA,IAAA6G,OAAAunD,GAGA,IADA,IAAAG,EAAA,CAAA,EACA3sD,GAAA,EAAAA,GAAA8sD,EAAA1uD,OAAA4B,KACA,CACA,IAAA4sD,GAAA,GAAA3nD,OAAAonD,EAAA,KAAApnD,OAAA6nD,EAAA9sD,KACAg3B,GAAAp1B,KAAA6lC,kBAAAvZ,EAAAs+B,GAAAM,EAAA9sD,KAAA0rD,EAAAkB,GAAA9B,GAGAlpD,KAAA2qD,mBAAA3B,EAAA5zB,MAGA21B,EAAA,GAAA1nD,OAAA2nD,GAAA,KAAA3nD,OAAAymD,IAAA10B,GAEA,CAEA,OAAA21B,CACA,CAIA,OAAAz+B,EAAAzuB,eAAAgsD,IAAA,WAAAvrD,QAAAguB,EAAAu9B,SAEA,EAEAv9B,EAAAzuB,eAAAgsD,IAIAY,EAAA,GAAApnD,OAAAonD,GAAApnD,OAAAonD,EAAAjuD,OAAA,EAAA,IAAA,IAAA6G,OAAAwmD,GACA7pD,KAAA6lC,kBAAAvZ,EAAAu9B,GAAAC,EAAAW,EAAAvB,KAMAuB,EAAA,GAAApnD,OAAAonD,GAAApnD,OAAAonD,EAAAjuD,OAAA,EAAA,IAAA,IAAA6G,OAAAwmD,GACAv9B,EAAAu9B,GAAA,CAAA,EACA7pD,KAAA6lC,kBAAAvZ,EAAAu9B,GAAAC,EAAAW,EAAAvB,GAxdA,CA2dA,IAAA,CAjfA,GAofAxpD,EAAAD,QAAA0rD,CvG6oZA,EAAE,CAAC,0CAA0C,IAAI,oCAAoC,GAAG,6BAA6B,IAAI,qCAAqC,MAAM,IAAI,CAAC,SAAShrD,EAAQT,EAAOD,GwGppajMC,EAAAD,QAAA,CAUAgsD,oBAAA,SAAA14B,EAAAuN,EAAAC,EAAAC,GAEA,IAAApE,EAAA,iBAAArJ,EAAAA,EAAA,GAEA0N,EAAA,iBAAAH,EAAAA,EAAA,IAEAI,EAAA,UAAApiC,QAAAiiC,GAAAI,gBAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,GACAC,EAAA,UAAAtiC,QAAAkiC,GAAAK,cAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,GAEA,GAAA9N,EAAAv2B,OAAA,EAEA,OAAA,EAMA,IAHA,IAAAskC,EAAA,EACAC,EAAA,GAEA3iC,EAAA,EAAAA,EAAAg+B,EAAA5/B,OAAA4B,IAGAg+B,EAAAh+B,IAAAqiC,GAEA,GAAAM,EAAAvkC,OAGAskC,IAGAJ,EAAA7iC,eAAAu+B,EAAAh+B,IAGA2iC,EAAA9+B,KAAAy+B,EAAAtE,EAAAh+B,KAGAwiC,EAAA/iC,eAAAu+B,EAAAh+B,KAEAwiC,EAAAxE,EAAAh+B,KAAA2iC,EAAAA,EAAAvkC,OAAA,IAGAukC,EAAA/+B,MAIA,OAAA8+B,CACA,EAWAsoB,sBAAA,SAAAr2B,EAAAuN,EAAAC,EAAAC,GAEA,IAAApE,EAAA,iBAAArJ,EAAAA,EAAA,GAEA0N,EAAA,iBAAAH,EAAAA,EAAA,IAEAI,EAAA,UAAApiC,QAAAiiC,GAAAI,gBAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,GACAC,EAAA,UAAAtiC,QAAAkiC,GAAAK,cAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,GAEA,GAAA9N,EAAAv2B,OAAA,EAEA,OAAA,EAKA,IAFA,IAAAukC,EAAA,GAEA3iC,EAAA,EAAAA,EAAAg+B,EAAA5/B,OAAA4B,IACA,CAEA,GAAAg+B,EAAAh+B,IAAAqiC,GAEA,GAAAM,EAAAvkC,OAGA,OAAA4/B,EAAAhyB,UAAA,EAAAhM,GAGAsiC,EAAA7iC,eAAAu+B,EAAAh+B,IAGA2iC,EAAA9+B,KAAAy+B,EAAAtE,EAAAh+B,KAGAwiC,EAAA/iC,eAAAu+B,EAAAh+B,KAEAwiC,EAAAxE,EAAAh+B,KAAA2iC,EAAAA,EAAAvkC,OAAA,IAGAukC,EAAA/+B,KAEA,CAEA,OAAAo6B,CACA,EAWA4tB,kBAAA,SAAAj3B,EAAAuN,EAAAC,EAAAC,GAEA,IAAApE,EAAA,iBAAArJ,EAAAA,EAAA,GAEA0N,EAAA,iBAAAH,EAAAA,EAAA,IAEAI,EAAA,UAAApiC,QAAAiiC,GAAAI,gBAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,GACAC,EAAA,UAAAtiC,QAAAkiC,GAAAK,cAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,GAEAG,EAAA,EACAC,EAAA,GAEA,GAAAlO,EAAAv2B,OAAA,EAEA,OAAAykC,EAKA,IAFA,IAAAF,EAAA,GAEA3iC,EAAA,EAAAA,EAAAg+B,EAAA5/B,OAAA4B,IAGAg+B,EAAAh+B,IAAAqiC,GAEA,GAAAM,EAAAvkC,QAGAykC,EAAAh/B,KAAAm6B,EAAAhyB,UAAA42B,EAAA5iC,IACA4iC,EAAA5iC,EAAA,GAGAsiC,EAAA7iC,eAAAu+B,EAAAh+B,IAGA2iC,EAAA9+B,KAAAy+B,EAAAtE,EAAAh+B,KAGAwiC,EAAA/iC,eAAAu+B,EAAAh+B,KAEAwiC,EAAAxE,EAAAh+B,KAAA2iC,EAAAA,EAAAvkC,OAAA,IAGAukC,EAAA/+B,MASA,OALAg/B,EAAA5E,EAAA5/B,QAEAykC,EAAAh/B,KAAAm6B,EAAAhyB,UAAA42B,IAGAC,CACA,EAYAuoB,sBAAA,SAAAz2B,EAAA4N,EAAAE,GAQA,IANA,IAAAzE,EAAA,iBAAArJ,EAAAA,EAAA,GACAmO,EAAA,iBAAAP,EAAAA,EAAA,IACAQ,EAAA,iBAAAN,EAAAA,EAAA,IAEAO,EAAA,EACAC,EAAA,EACAjjC,EAAA,EAAAA,EAAAg+B,EAAA5/B,OAAA4B,IAGAg+B,EAAAh+B,IAAA8iC,GAEA,GAAAG,GAEAD,IAEAC,KAEAjF,EAAAh+B,IAAA+iC,GAEAE,IAIA,OAAAD,CACA,EAcA6oB,+BAAA,SAAAl3B,EAAAuO,EAAAX,EAAAE,GAcA,IAZA,IAAAzE,EAAA,iBAAArJ,EAAAA,EAAA,GACAwO,EAAA,iBAAAD,EAAAA,EAAA,EACAJ,EAAA,iBAAAP,EAAAA,EAAA,IACAQ,EAAA,iBAAAN,EAAAA,EAAA,IAEAO,EAAA,EACAC,EAAA,EAEAG,GAAA,EACAC,EAAA,EACAC,EAAA,EAEAtjC,EAAA,EAAAA,EAAAg+B,EAAA5/B,OAAA4B,IAGAg+B,EAAAh+B,IAAA8iC,EAKA,KAHAG,GAMAE,KADAH,EACA,IAGAI,GAAA,EACAC,EAAArjC,GAKAg+B,EAAAh+B,IAAA+iC,GAKA,KAHAE,GAIAG,GACAE,GAAAD,IAEAC,EAAAtjC,EACAojC,GAAA,GAKA,OAAAJ,GAAAG,EAGA,GAGAG,EAAA,GAAAA,EAAAD,EAEArF,EAAAhyB,UAAAq3B,EAAA,EAAAC,GAIAtF,EAAAhyB,UAAAq3B,EAAA,EAEA,ExGiqaA,EAAE,CAAC,GAAG,IAAI,CAAC,SAASthC,EAAQT,EAAOD,GyGt8anC,IAAAooD,EAAA1nD,EAAA,8BACAiqD,EAAAjqD,EAAA,qCAoBAurD,EAAA,WAWA,OAAAxtD,eATA,SAAAwtD,EAAA3D,EAAAC,GACAjqD,iBAAAiC,KAAA0rD,GAEA1rD,KAAAioD,QAAA,mBAAAF,EAAAA,EAAAF,EACA7nD,KAAAkoD,SAAA,mBAAAF,EAAAA,EAAAH,EAEA7nD,KAAA4pD,oBAAAQ,CACA,GAEA,CAAA,CAAAnsD,IAAA,oBAAAlB,MACA,SAAAuvB,EAAA08B,EAAAxqB,GAGA,GAAA,UAAAlgC,QAAAguB,GAAA,OAAA,EAEA,GAAA,iBAAA08B,EAAA,OAAA,EAEA,IAAAr2B,EAAAq2B,EAAAnkD,QAAA,KAEA,IAAA,GAAA8tB,EACA,CAEA,IAAA02B,EAAAL,EAAAnkD,QAAA,KACAykD,EAAAN,EAAAnkD,QAAA,KAUA,GAAAwkD,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CAEA,IAAAI,EAAAT,EAAA5+C,UAAA,EAAAi/C,GAAAt3C,OAIA,GAAA,WAAAzT,QAAAguB,EAAAm9B,IAEA,OAAA,EAIA,IAAAC,EAAAV,EAAA5+C,UAAAi/C,EAAA,EAAAC,GAAAv3C,OAEA43C,EAAA56C,SAAA26C,EAAA,IAOA,OAAAxtD,MAAAK,QAAA+vB,EAAAm9B,KAAAvuC,MAAAyuC,KAOAzuC,MAAAyuC,IAIAD,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GACAA,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GACAA,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GAGAp9B,EAAAm9B,GAAAC,GAAAlrB,GACA,IAIAlS,EAAAm9B,GAAAE,GAAAnrB,GACA,GAEA,CAKA,OADAlS,EAAA08B,GAAAxqB,GACA,CAEA,CAGA,IAAAqrB,EAAAb,EAAA5+C,UAAA,EAAAuoB,GACAm3B,EAAAd,EAAA5+C,UAAAuoB,EAAA,GAIA02B,EAAAQ,EAAAhlD,QAAA,KACAykD,EAAAO,EAAAhlD,QAAA,KAUA,GAAAwkD,EAAA,GAEAC,EAAAD,GAEAC,EAAAD,EAAA,EACA,CACA,IAAAI,EAAAI,EAAAz/C,UAAA,EAAAi/C,GAAAt3C,OAEA23C,EAAAG,EAAAz/C,UAAAi/C,EAAA,EAAAC,GAAAv3C,OAEA43C,EAAA56C,SAAA26C,EAAA,IAgBA,OAAAxtD,MAAAK,QAAA+vB,EAAAm9B,KAAAvuC,MAAAyuC,KAQAzuC,MAAAyuC,IAGAD,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GACAA,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GACAA,EAAA1pD,KAAA4pD,oBAAA,IAAAF,GAGA1pD,KAAAwsC,kBAAAlgB,EAAAm9B,GAAAC,GAAAI,EAAAtrB,IAKAx+B,KAAAwsC,kBAAAlgB,EAAAm9B,GAAAE,GAAAG,EAAAtrB,GAEA,CAIA,OAAAlS,EAAAzuB,eAAAgsD,IAAA,WAAAvrD,QAAAguB,EAAAu9B,KAEAv9B,EAAAzuB,eAAA,aACAyuB,EAAA,QAAA,CAAA,GAEAA,EAAA,QAAA08B,GAAAxqB,GACA,IAEAlS,EAAAzuB,eAAAgsD,KAQAv9B,EAAAu9B,GAAA,CAAA,GALA7pD,KAAAwsC,kBAAAlgB,EAAAu9B,GAAAC,EAAAtrB,GASA,IAAA,CAxLA,GA2LA9+B,EAAAD,QAAAisD,CzG28aA,EAAE,CAAC,oCAAoC,GAAG,6BAA6B,MAAM,IAAI,CAAC,SAASvrD,EAAQT,EAAOD,G0G3pb1G,IAAAooD,EAAA1nD,EAAA,8BAwBAwrD,EAAA,WAiBA,OAAAztD,eAfA,SAAAytD,EAAA5D,EAAAC,GACAjqD,iBAAAiC,KAAA2rD,GAEA3rD,KAAAioD,QAAA,mBAAAF,EAAAA,EAAAF,EACA7nD,KAAAkoD,SAAA,mBAAAF,EAAAA,EAAAH,CACA,GAUA,CAAA,CAAA5pD,IAAA,qBAAAlB,MACA,SAAAuvB,EAAAs/B,EAAAC,GAEA,IAAAC,EAAA,iBAAAF,EAAAA,EAAA,GACAG,EAAA,UAAAztD,QAAAutD,GAAAA,EAAA,CAAA,EAEAG,EAAA1tD,QAAAguB,GAEA2/B,EACA,CACAjkB,QAAA8jB,EACAz0C,KAAAy0C,EACA/jB,KAAA+jB,EAEAI,UAAA,GASA,OALA,UAAAF,GAAA,MAAA1/B,IAEA0/B,EAAA,QAGAA,GAEA,IAAA,SACAC,EAAAE,SAAA,SACAF,EAAAG,QAAA9/B,EACAy/B,EAAAD,GAAAG,EACA,MACA,IAAA,SACA,IAAA,SACAA,EAAAE,SAAA,SACAF,EAAAG,QAAA9/B,EACAy/B,EAAAD,GAAAG,EACA,MACA,IAAA,YACA,IAAA,OACAA,EAAAE,SAAA,MACAF,EAAAG,QAAA9/B,EACAy/B,EAAAD,GAAAG,EACA,MACA,IAAA,SACA,GAAA/vD,MAAAK,QAAA+vB,GACA,CACA2/B,EAAAE,SAAA,QACA,IAAAL,IAEAC,EAAAD,GAAAG,GAGA,IAAA,IAAA7tD,EAAA,EAAAA,EAAAkuB,EAAA9vB,OAAA4B,IAEA4B,KAAAqsD,mBAAA//B,EAAAluB,GAAA,GAAAiF,OAAAyoD,EAAA,KAAAzoD,OAAAjF,EAAA,KAAA2tD,EAEA,KAEA,CACAE,EAAAE,SAAA,SACA,IAAAL,IAEAC,EAAAD,GAAAG,EACAH,GAAA,KAKA,IAFA,IAAAlM,EAAA/iD,OAAA2F,KAAA8pB,GAEAluB,EAAA,EAAAA,EAAAwhD,EAAApjD,OAAA4B,IAEA4B,KAAAqsD,mBAAA//B,EAAAszB,EAAAxhD,IAAA,GAAAiF,OAAAyoD,GAAAzoD,OAAAu8C,EAAAxhD,IAAA2tD,EAEA,EAQA,OAAAA,CACA,IAAA,CAjGA,GAoGArsD,EAAAD,QAAAksD,C1GgqbA,EAAE,CAAC,6BAA6B,MAAM,IAAI,CAAC,SAASxrD,EAAQT,EAAOD,G2GjxbnE,IAAA6sD,EAAA,OAEAC,EAAA,OAOAC,EAAA,SAAAC,EAAAlC,EAAAmC,EAAAC,EAAAnuB,GAEA,OAAAmuB,GAEA,IAAA,OACA,OAAA,IAAAF,EAAA5mB,kBAAA0kB,EAAAmC,GAEA,IAAA,QACA,OAAA,IAAAD,EAAA5mB,kBAAA0kB,EAAAmC,GAEA,IAAA,OACA,IAAA,sBACA,OAAApuD,QAAAmuD,EAAA5mB,kBAAA0kB,EAAAmC,KAEA,IAAA,SAGA,IAAA,SACA,OAAAD,EAAA5mB,kBAAA0kB,EAAAmC,GAAAlwD,OAAAgiC,EAEA,QACA,OAAA,EAGA,MACA,IAAA,OACA,IAAA,mBACA,OAAAlgC,QAAAmuD,EAAA5mB,kBAAA0kB,EAAAmC,KAEA,IAAA,SAGA,IAAA,SACA,OAAAD,EAAA5mB,kBAAA0kB,EAAAmC,GAAAlwD,OAAAgiC,EAEA,QACA,OAAA,EAGA,MAUA,IAAA,KACA,OAAAiuB,EAAA5mB,kBAAA0kB,EAAAmC,IAAAluB,EAEA,IAAA,IACA,OAAAiuB,EAAA5mB,kBAAA0kB,EAAAmC,GAAAluB,EAEA,IAAA,IACA,OAAAiuB,EAAA5mB,kBAAA0kB,EAAAmC,GAAAluB,EAEA,IAAA,KACA,OAAAiuB,EAAA5mB,kBAAA0kB,EAAAmC,IAAAluB,EAEA,IAAA,KACA,OAAAiuB,EAAA5mB,kBAAA0kB,EAAAmC,IAAAluB,EAEA,IAAA,MACA,OAAAiuB,EAAA5mB,kBAAA0kB,EAAAmC,KAAAluB,EAGA,QACA,OAAAiuB,EAAA5mB,kBAAA0kB,EAAAmC,IAAAluB,EAGA,EAsDA9+B,EAAAD,QApDA,SAAAgtD,EAAAzD,EAAAuB,GAaA,IAXA,IAAAqC,GAAA,EASAC,EAAA7D,EAAAnkD,QAAAynD,IAEA,GAAAO,GACA,CACA,IAAAC,EAAA9D,EAAAnkD,QAAA0nD,EAAAM,EAjGAP,GAmGA,IAAA,GAAAQ,EACA,CACA,IAAAC,EAAA/D,EAAA5+C,UAAAyiD,EArGAP,EAqGAQ,GAAA/2C,MAAA,KAGAi3C,EAAAD,EAAA,GAGAE,EAAA,SACAF,EAAAvwD,OAAA,IAEAywD,EAAAF,EAAA,IAIA,IAAAG,GAAA,EACAH,EAAAvwD,OAAA,IAEA0wD,EAAAH,EAAA,IAIAH,EAAAA,GAAAJ,EAAAC,EAAAlC,EAAAyC,EAAAC,EAAAC,GACAL,EAAA7D,EAAAnkD,QAAAynD,EAAAQ,EAxHAP,EAyHA,MAGAM,GAAA,CAGA,CAEA,OAAAD,CACA,C3GmybA,EAAE,CAAC,GAAG,IAAI,CAAC,SAASzsD,EAAQT,EAAOD,G4Gn7bnC,IAAAooD,EAAA1nD,EAAA,8BAOAgtD,EAAA,WA0BA,OAAAjvD,eAxBA,SAAAivD,EAAApF,EAAAC,GACAjqD,iBAAAiC,KAAAmtD,GAEAntD,KAAAioD,QAAA,mBAAAF,EAAAA,EAAAF,EACA7nD,KAAAkoD,SAAA,mBAAAF,EAAAA,EAAAH,CACA,GAmBA,CAAA,CAAA5pD,IAAA,yBAAAlB,MACA,SAAAqwD,EAAAC,GAEA,GAAA,UAAA/uD,QAAA8uD,GAGA,OADAptD,KAAAkoD,SAAA,+EACA,EAGA,GAAA,UAAA5pD,QAAA+uD,GAGA,OAAA,EAIA,IAAAC,EAAAzwD,OAAA2F,KAAA4qD,GACAG,EAAA,CAAA,EA6CA,OA5CAD,EAAA1sC,SACA,SAAAooC,GAEAoE,EAAApE,GAAAnrD,eAAA,UAEA0vD,EAAAH,EAAApE,GAAA3xC,MAAA2xC,EAEA,IAEAnsD,OAAA2F,KAAA6qD,GAEAzsC,SACA,SAAA4sC,GAEA,IAAAC,EAAAJ,EAAAG,GACAE,GAAA,EACAC,GAAA,EAGAP,EAAAvvD,eAAA2vD,GAEAE,EAAAF,EAEAD,EAAA1vD,eAAA2vD,KAEAE,EAAAH,EAAAC,IAIAE,GAEAC,EAAAP,EAAAM,UACAN,EAAAM,IAKAC,EAAA,CAAAt2C,KAAAm2C,GAIAJ,EAAAK,GAAAE,CACA,KAEA,CACA,GAAA,CAAA1vD,IAAA,6BAAAlB,MAEA,SAAAqwD,EAAAC,GAGA,IAAAO,EAAAlhC,KAAAriB,MAAAqiB,KAAApmB,UAAA8mD,IAEA,OADAptD,KAAA6tD,uBAAAD,EAAAP,GACAO,CACA,GAAA,CAAA3vD,IAAA,uBAAAlB,MAEA,SAAA+wD,EAAAC,GAEA,GAAA,UAAAzvD,QAAAyvD,IAAA,UAAAzvD,QAAAwvD,GAGA,OADA9tD,KAAAkoD,SAAA,yEACA,EAGA,IAAA8F,EAAAthC,KAAAriB,MAAAqiB,KAAApmB,UAAAynD,IACAE,EAAAvhC,KAAAriB,MAAAqiB,KAAApmB,UAAAwnD,IAcA,OAXAjxD,OAAA2F,KAAAwrD,GAEAptC,SACA,SAAAstC,GAEAD,EAAApwD,eAAAqwD,KAEAD,EAAAC,GAAAF,EAAAE,GAEA,IAEAD,CACA,IAAA,CA3HA,GA8HAvuD,EAAAD,QAAA0tD,C5Gw7bA,EAAE,CAAC,6BAA6B,MAAM,IAAI,CAAC,SAAShtD,EAAQT,EAAOD,G6G7jcnE,IAAA0W,EAAAhW,EAAA,6BAEA0nD,EAAA1nD,EAAA,8BAEAguD,EAAAhuD,EAAA,iCACAiuD,EAAAjuD,EAAA,kDACAkuD,EAAAluD,EAAA,wCACAmuD,EAAAnuD,EAAA,wCACAouD,EAAApuD,EAAA,2CACAquD,EAAAruD,EAAA,yCACAsuD,EAAAtuD,EAAA,oCAEAuuD,EAAA,CAAAC,MAAA,UAAAC,YAAA,CAAA,GAOAC,EAAA,SAAAC,GAEA,SAAAD,EAAAt4C,EAAAC,EAAAC,GACA,IAAAs4C,EA0DA,OA1DAhxD,iBAAAiC,KAAA6uD,IAGAE,EAAArwD,WAAAsB,KAAA6uD,OAFAxiD,IAAAkK,EAEA,CAAA,CAAA,GAIA,CAAAA,EAAAC,EAAAC,KAGAE,YAAA,WAGAo4C,EAAA9G,QAAAJ,EACAkH,EAAA7G,SAAAL,EAGAkH,EAAAC,gCAAA,IAAAZ,EAAAW,EAAA9G,QAAA8G,EAAA7G,UACA6G,EAAAE,sBAAA,IAAAZ,EAAAU,EAAA9G,QAAA8G,EAAA7G,UACA6G,EAAAG,sBAAA,IAAAZ,EAAAS,EAAA9G,QAAA8G,EAAA7G,UACA6G,EAAAI,yBAAA,IAAAZ,EAAAQ,EAAA9G,QAAA8G,EAAA7G,UAEA6G,EAAAx0C,QAAA1c,eAAA,mBAEAkxD,EAAAx0C,QAAA60C,cACA,CACA5wD,OAAA,GACAC,OAAA,EACA4wD,MAAA,EACAC,QAAA,EACAtwD,SAAA,EACAuwD,OAAA,EACAC,SAAA,EACAtzD,MAAA,GACAW,OAAA,CAAA,EACA4yD,KAAA,OAGAV,EAAAx0C,QAAA1c,eAAA,YAEAkxD,EAAAx0C,QAAAzQ,QAAA,GAGAilD,EAAAW,WAAArjD,EACA0iD,EAAAY,sBAAAtjD,EACA0iD,EAAAa,mBAAAvjD,EACA0iD,EAAAc,wBAAAxjD,EAEA0iD,EAAAe,QAEA,WAAAxxD,QAAAywD,EAAAx0C,UAEAw0C,EAAAgB,aAAAhB,EAAAx0C,SAGAw0C,EAAAiB,oBAAA,IAAAvB,EAAAM,EAAA9G,QAAA8G,EAAA7G,UACA6G,EAAAkB,wBAAA,IAAAzB,EAAAO,EAAA9G,QAAA8G,EAAA7G,UAEA6G,EAAAmB,iBAAA,IAAA/B,EAAAY,EAAA9G,QAAA8G,EAAA7G,UAAAppD,uBAAAiwD,EACA,CAMA,OAAA1vD,UAAAwvD,EAAAC,GAAA5wD,cAAA2wD,EAAA,CAAA,CAAA5wD,IAAA,QAAAlB,MACA,WAEAiD,KAAA0vD,MAAA,UACA1vD,KAAA2vD,iBAAA,GACA3vD,KAAA4vD,cAAA,CAAA,EACA5vD,KAAA6vD,mBAAA,CAAA,CACA,GAAA,CAAA5xD,IAAA,QAAAlB,MAEA,WAGA,IAAAozD,EAAAzjC,KAAAriB,MAAAqiB,KAAApmB,UAAAtG,KAAAua,UAEA61C,EAAA,IAAAvB,EAAA7uD,KAAAqwD,cAAArwD,KAAAioD,QAAAjoD,KAAAkoD,SAAAiI,GAKA,OAFAC,EAAAF,iBAAAI,eAAAtwD,KAAAkwD,iBAAA/H,kBAEAiI,CACA,GAEA,CAAAnyD,IAAA,cAAAlB,MACA,SAAAwzD,GAGA,OAAAvwD,KAAA+vD,aAAArjC,KAAAriB,MAAAkmD,GACA,GAEA,CAAAtyD,IAAA,eAAAlB,MACA,SAAAyZ,GAEA,WAAAlY,QAAAkY,IAEAxW,KAAAkoD,SAAA,IAAA7kD,OAAArD,KAAA0vD,MAAA,yEAAArsD,OAAA/E,QAAAkY,GAAA,MAOA,IAJA,IAAA4uB,EAAA,UAAA9mC,QAAAkY,GAAAA,EAAA,CAAA,EAEAg6C,EAAA3zD,OAAA2F,KAAAksD,GAEAtwD,EAAA,EAAAA,EAAAoyD,EAAAh0D,OAAA4B,IAEAgnC,EAAAvnC,eAAA2yD,EAAApyD,MAEAgnC,EAAAorB,EAAApyD,IAAAsuB,KAAAriB,MAAAqiB,KAAApmB,UAAAooD,EAAA8B,EAAApyD,OAoBA,GAhBAgnC,EAAAvnC,eAAA,SAEA,iBAAAunC,EAAAupB,MAEA3uD,KAAA0vD,MAAAtqB,EAAAupB,MAIA3uD,KAAAkoD,SAAA,IAAA7kD,OAAArD,KAAA0vD,MAAA,kFAAArsD,OAAA/E,QAAA8mC,EAAAupB,OAAA,KAAAvpB,GAKAplC,KAAAkoD,SAAA,IAAA7kD,OAAArD,KAAA0vD,MAAA,2GAAAtqB,GAGAA,EAAAvnC,eAAA,eAEA,GAAA,WAAAS,QAAA8mC,EAAAwpB,aAGA,IADA,IAAA6B,EAAA5zD,OAAA2F,KAAA4iC,EAAAwpB,aACAxwD,EAAA,EAAAA,EAAAqyD,EAAAj0D,OAAA4B,IAEA4B,KAAA0wD,cAAAD,EAAAryD,GAAAgnC,EAAAwpB,YAAA6B,EAAAryD,UAKA4B,KAAAkoD,SAAA,IAAA7kD,OAAArD,KAAA0vD,MAAA,sIAAArsD,OAAA/E,QAAA8mC,EAAAwpB,aAAA,KAAAxpB,QAKAplC,KAAAkoD,SAAA,IAAA7kD,OAAArD,KAAA0vD,MAAA,uIAAAtqB,GAGA,GAAAA,EAAAvnC,eAAA,qBAEA,WAAAS,QAAA8mC,EAAAurB,kBAEA,IAAA,IAAAvyD,EAAA,EAAAA,EAAAgnC,EAAAurB,iBAAAn0D,OAAA4B,KAMA,GAEA,CAAAH,IAAA,YAAAlB,MACA,WAEA,OAAA2vB,KAAApmB,UAAAtG,KAAAqwD,cACA,GAAA,CAAApyD,IAAA,cAAAlB,MAEA,WAEA,MACA,CACA4xD,MAAA3uD,KAAA0vD,MACAd,YAAAliC,KAAAriB,MAAAqiB,KAAApmB,UAAAtG,KAAA6vD,qBACAc,iBAAAjkC,KAAAriB,MAAAqiB,KAAApmB,UAAAtG,KAAAkwD,iBAAA/H,mBAEA,GAEA,CAAAlqD,IAAA,gBAAAlB,MACA,SAAAisD,EAAA4H,GAEA,MAAA,WAAAtyD,QAAAsyD,IAGAA,EAAA/yD,eAAA,aAEA+yD,EAAA5oB,QAAAghB,GAGAhpD,KAAA6vD,mBAAAhyD,eAAAmrD,IAEAhpD,KAAA2vD,iBAAA1tD,KAAA+mD,GAIAhpD,KAAA6vD,mBAAA7G,GAAA4H,EAGA5wD,KAAA4vD,cAAA5G,GAAAA,EAEA4H,EAAA/yD,eAAA,QAIAmC,KAAA4vD,cAAAgB,EAAAv5C,MAAA2xC,EAIA4H,EAAAv5C,KAAA2xC,GAGA,IAIAhpD,KAAAkoD,SAAA,IAAA7kD,OAAArD,KAAA0vD,MAAA,mDAAArsD,OAAA2lD,EAAA,uEAAA3lD,OAAA/E,QAAAsyD,GAAA,OACA,EAEA,GAAA,CAAA3yD,IAAA,sBAAAlB,MAEA,SAAAma,GAEA,OAAAlX,KAAA6wD,cAAA7wD,KAAA8wD,mBAAA55C,GACA,GAAA,CAAAjZ,IAAA,gBAAAlB,MAEA,SAAAisD,GAEA,OAAAhpD,KAAA6vD,mBAAA7G,EACA,GAEA,CAAA/qD,IAAA,iBAAAlB,MACA,SAAAqc,GAGA,IADA,IAAA23C,EAAAl0D,OAAA2F,KAAAxC,KAAA6vD,oBACAzxD,EAAA,EAAAA,EAAA2yD,EAAAv0D,OAAA4B,IAEAgb,EAAApZ,KAAA6vD,mBAAAkB,EAAA3yD,IAGA,GAKA,CAAAH,IAAA,2BAAAlB,MACA,SAAAuvB,EAAApV,GAEA,OAAAlX,KAAAkqD,mBAAA59B,EAAAtsB,KAAA8wD,mBAAA55C,GACA,GAEA,CAAAjZ,IAAA,qBAAAlB,MACA,SAAAuvB,EAAA08B,GAEA,OAAAhpD,KAAAgvD,gCAAA9E,mBAAA59B,EAAA08B,EACA,GAEA,CAAA/qD,IAAA,qBAAAlB,MACA,SAAAma,GAEA,IAEA85C,EAAAhxD,KAAA4vD,cAAA/xD,eAAAqZ,GACA+5C,EAAAjxD,KAAAkwD,iBAAA/H,iBAAAtqD,eAAAqZ,GAwBA,OArBA85C,IAAAC,EAEAjxD,KAAA4vD,cAAA14C,GAGA+5C,GAAAjxD,KAAA4vD,cAAA/xD,eAAAmC,KAAAkwD,iBAAAgB,UAAAh6C,IAEAlX,KAAA4vD,cAAA5vD,KAAAkwD,iBAAAgB,UAAAh6C,IAGA+5C,EAEAjxD,KAAAkwD,iBAAAgB,UAAAh6C,GAMAA,CAIA,GAEA,CAAAjZ,IAAA,iBAAAlB,MACA,SAAAuvB,EAAApV,GAEA,IAAAke,EAAAp1B,KAAA6lC,kBAAAvZ,EAAAtsB,KAAA8wD,mBAAA55C,IAQA,YANA,IAAAke,IAGAA,EAAAp1B,KAAAmxD,gBAAAnxD,KAAAoxD,oBAAAl6C,KAGAke,CACA,GAEA,CAAAn3B,IAAA,oBAAAlB,MACA,SAAAuvB,EAAA08B,GAEA,IAAA5zB,EAAAp1B,KAAAivD,sBAAAppB,kBAAAvZ,EAAA08B,GAQA,YANA,IAAA5zB,IAGAA,EAAAp1B,KAAAmxD,gBAAAnxD,KAAA6wD,cAAA7H,KAGA5zB,CACA,GAEA,CAAAn3B,IAAA,iBAAAlB,MACA,SAAAuvB,EAAApV,EAAAsnB,GAEA,OAAAx+B,KAAAwsC,kBAAAlgB,EAAAtsB,KAAA8wD,mBAAA55C,GAAAsnB,EACA,GAEA,CAAAvgC,IAAA,oBAAAlB,MACA,SAAAuvB,EAAA08B,EAAAxqB,GAEA,OAAAx+B,KAAAkvD,sBAAA1iB,kBAAAlgB,EAAA08B,EAAAxqB,EACA,GAEA,CAAAvgC,IAAA,oBAAAlB,MACA,SAAAuvB,EAAApV,EAAAsnB,GAEA,OAAAx+B,KAAA6qD,qBAAAv+B,EAAAtsB,KAAA8wD,mBAAA55C,GAAAsnB,EACA,GAEA,CAAAvgC,IAAA,uBAAAlB,MACA,SAAAuvB,EAAA08B,EAAAxqB,GAEA,OAAAx+B,KAAAmvD,yBAAAtE,qBAAAv+B,EAAA08B,EAAAxqB,EACA,GAEA,CAAAvgC,IAAA,WAAAlB,MACA,SAAAuvB,GAEA,IAAA+kC,EACA,CACAhxD,MAAA,KACA40C,OAAA,GACAqc,gBAAA,IAGA,WAAAhzD,QAAAguB,KAEA+kC,EAAAhxD,OAAA,EACAgxD,EAAApc,OAAAhzC,KAAA,iEAAAoB,OAAA/E,QAAAguB,MAUA,IAPA,IAAAilC,EAAA,SAAAvI,EAAAwI,GAEAH,EAAAhxD,OAAA,EACAgxD,EAAApc,OAAAhzC,KAAA,uBAAAoB,OAAA2lD,EAAA,MAAA3lD,OAAAmuD,EAAA,KACA,EAGApzD,EAAA,EAAAA,EAAA4B,KAAA2vD,iBAAAnzD,OAAA4B,IACA,CACA,IAAAuvD,EAAA3tD,KAAA6wD,cAAA7wD,KAAA2vD,iBAAAvxD,IACAqzD,EAAAzxD,KAAAkqD,mBAAA59B,EAAAqhC,EAAA3lB,SACA5S,EAAAp1B,KAAA6lC,kBAAAvZ,EAAAqhC,EAAA3lB,SAcA,QAZA,IAAA5S,GAAAq8B,IAIAJ,EAAAC,gBAAArvD,KAAA0rD,EAAA3lB,UACA2lB,EAAA+D,UAAA1xD,KAAAua,QAAAzQ,SAEAynD,EAAA5D,EAAA3lB,QAAA,qDAKA2lB,EAAAxB,SACA,CACA,IAAAwF,EAAArzD,QAAA82B,GACA,OAAAu4B,EAAAxB,SAAAtwD,WAAAkW,OAAA3E,eAEA,IAAA,SACA,UAAAukD,GAEAJ,EAAA5D,EAAA3lB,QAAA,kBAAA3kC,OAAAsqD,EAAAxB,SAAA,wBAAA9oD,OAAAsuD,IAEA,MAEA,IAAA,SACA,UAAAA,GAEAJ,EAAA5D,EAAA3lB,QAAA,kBAAA3kC,OAAAsqD,EAAAxB,SAAA,wBAAA9oD,OAAAsuD,IAEA,MAEA,IAAA,UACA,GAAA,UAAAA,EAEAJ,EAAA5D,EAAA3lB,QAAA,kBAAA3kC,OAAAsqD,EAAAxB,SAAA,wBAAA9oD,OAAAsuD,SAIAv8B,EAAAv5B,WACAgJ,QAAA,MAAA,GAGA0sD,EAAA5D,EAAA3lB,QAAA,kBAAA3kC,OAAAsqD,EAAAxB,SAAA,4CAGA,MAEA,IAAA,QACA,UAAAwF,GAEAJ,EAAA5D,EAAA3lB,QAAA,kBAAA3kC,OAAAsqD,EAAAxB,SAAA,wBAAA9oD,OAAAsuD,IAEA,MAEA,IAAA,WAEA,gBADA,IAAAn6C,KAAA4d,GACAv5B,YAEA01D,EAAA5D,EAAA3lB,QAAA,kBAAA3kC,OAAAsqD,EAAAxB,SAAA,iDAGA,QAGA,UAAAwF,GAEAJ,EAAA5D,EAAA3lB,QAAA,kBAAA3kC,OAAAsqD,EAAAxB,SAAA,qFAAA9oD,OAAAsuD,IAIA,CACA,CAEA,OAAAN,CACA,GAEA,CAAApzD,IAAA,kBAAAlB,MACA,SAAA6zD,GAEA,GAAA,UAAAtyD,QAAAsyD,GAAA,CAKA,GAAAA,EAAA/yD,eAAA,WAEA,OAAA+yD,EAAAxE,QAMA,IAAAwF,EAAAhB,EAAA/yD,eAAA,YAAA+yD,EAAAzE,SAAA,SACA,OAAAnsD,KAAAua,QAAA60C,cAAAvxD,eAAA+zD,GAEA5xD,KAAAua,QAAA60C,cAAAwC,GAKA,IAlBA,CAqBA,GAEA,CAAA3zD,IAAA,mBAAAlB,MACA,SAAAuvB,EAAAulC,GAEA,OAAA7xD,KAAA8xD,eAAAxlC,EAAAulC,GAEA,SAAAjB,GAEA,OAAAA,EAAA/yD,eAAA,UACA,GACA,GAGA,CAAAI,IAAA,iBAAAlB,MACA,SAAAuvB,EAAAulC,EAAAE,GACA,IAAAC,EAAAhyD,KAEAq7B,EAAA,WAAA/8B,QAAAguB,GAAAA,EAAA,CAAA,EAEA2lC,OAAA,IAAAJ,GAAAA,EAGAK,EAAA,mBAAAH,EAAAA,EAAA,SAAAnB,GAAA,OAAA,CAAA,EAiBA,OAfA5wD,KAAA2vD,iBAAA/uC,SACA,SAAAooC,GAEA,IAAA2E,EAAAqE,EAAAnB,cAAA7H,GAEAkJ,EAAAvE,MAGAsE,GAAAD,EAAA9H,mBAAA7uB,EAAA2tB,IAEAgJ,EAAAxlB,kBAAAnR,EAAA2tB,EAAAgJ,EAAAb,gBAAAxD,IAGA,IAEAtyB,CACA,IAAA,CArgBA,CAAAllB,GAwgBAzW,EAAAD,QAAAovD,C7GkkcA,EAAE,CAAC,gCAAgC,IAAI,6BAA6B,IAAI,iDAAiD,IAAI,0CAA0C,IAAI,uCAAuC,IAAI,uCAAuC,IAAI,wCAAwC,IAAI,mCAAmC,IAAI,4BAA4B,KAAK,IAAI,CAAC,SAAS1uD,EAAQT,EAAOD,IAClZ,SAAWK,IAAQ,W8GjmdnB,IAAAqyD,EAAA,mBAAA5O,KAAAA,IAAAplD,UACAi0D,EAAAv1D,OAAAY,0BAAA00D,EAAAt1D,OAAAY,yBAAA8lD,IAAAplD,UAAA,QAAA,KACAk0D,EAAAF,GAAAC,GAAA,mBAAAA,EAAA/0D,IAAA+0D,EAAA/0D,IAAA,KACAi1D,EAAAH,GAAA5O,IAAAplD,UAAAyiB,QACA2xC,EAAA,mBAAA5O,KAAAA,IAAAxlD,UACAq0D,EAAA31D,OAAAY,0BAAA80D,EAAA11D,OAAAY,yBAAAkmD,IAAAxlD,UAAA,QAAA,KACAs0D,EAAAF,GAAAC,GAAA,mBAAAA,EAAAn1D,IAAAm1D,EAAAn1D,IAAA,KACAq1D,EAAAH,GAAA5O,IAAAxlD,UAAAyiB,QAEA+xC,EADA,mBAAA3O,SAAAA,QAAA7lD,UACA6lD,QAAA7lD,UAAAy0D,IAAA,KAEAC,EADA,mBAAA3O,SAAAA,QAAA/lD,UACA+lD,QAAA/lD,UAAAy0D,IAAA,KAEAE,EADA,mBAAA7O,SAAAA,QAAA9lD,UACA8lD,QAAA9lD,UAAA40D,MAAA,KACAC,EAAAh0D,QAAAb,UAAAc,QACAg0D,EAAAp2D,OAAAsB,UAAAtC,SACAq3D,EAAAttC,SAAAznB,UAAAtC,SACAs3D,EAAA30D,OAAAL,UAAA6f,MACAo1C,EAAA50D,OAAAL,UAAApC,MACA2oD,EAAAlmD,OAAAL,UAAA+L,QACAmpD,EAAA70D,OAAAL,UAAAy/B,YACA01B,EAAA90D,OAAAL,UAAAiP,YACAmmD,EAAA7P,OAAAvlD,UAAA/B,KACAooD,EAAAtoD,MAAAiC,UAAAkF,OACAmwD,EAAAt3D,MAAAiC,UAAAwG,KACA8uD,EAAAv3D,MAAAiC,UAAApC,MACA23D,EAAA9wD,KAAAuY,MACAw4C,EAAA,mBAAAjR,OAAAA,OAAAvkD,UAAAc,QAAA,KACA20D,EAAA/2D,OAAAipB,sBACA+tC,EAAA,mBAAAx3D,QAAA,WAAAiC,QAAAjC,OAAAC,UAAAD,OAAA8B,UAAAtC,SAAA,KACAi4D,EAAA,mBAAAz3D,QAAA,WAAAiC,QAAAjC,OAAAC,UAEAy3D,EAAA,mBAAA13D,QAAAA,OAAA03D,cAAAz1D,QAAAjC,OAAA03D,eAAAD,GAAA,UACAz3D,OAAA03D,YACA,KACAC,EAAAn3D,OAAAsB,UAAAooD,qBAEA0N,GAAA,mBAAA72D,QAAAA,QAAA+B,eAAAtC,OAAAsC,kBACA,GAAAC,YAAAlD,MAAAiC,UACA,SAAAof,GACA,OAAAA,EAAAne,SACA,EACA,MAGA,SAAA80D,EAAAlvD,EAAAoK,GACA,GACApK,IAAA6Q,KACA7Q,KAAA6Q,KACA7Q,GAAAA,GACAA,GAAAA,GAAA,KAAAA,EAAA,KACAuuD,EAAAz3D,KAAA,IAAAsT,GAEA,OAAAA,EAEA,IAAA+kD,EAAA,mCACA,GAAA,iBAAAnvD,EAAA,CACA,IAAAovD,EAAApvD,EAAA,GAAA0uD,GAAA1uD,GAAA0uD,EAAA1uD,GACA,GAAAovD,IAAApvD,EAAA,CACA,IAAAqvD,EAAA71D,OAAA41D,GACA55C,EAAA44C,EAAAt3D,KAAAsT,EAAAilD,EAAA73D,OAAA,GACA,OAAAkoD,EAAA5oD,KAAAu4D,EAAAF,EAAA,OAAA,IAAAzP,EAAA5oD,KAAA4oD,EAAA5oD,KAAA0e,EAAA,cAAA,OAAA,KAAA,GACA,CACA,CACA,OAAAkqC,EAAA5oD,KAAAsT,EAAA+kD,EAAA,MACA,CAEA,IAAAG,EAAAn0D,EAAA,kBACAo0D,EAAAD,EAAAE,OACAC,EAAAC,EAAAH,GAAAA,EAAA,KAoMA,SAAAI,EAAAluD,EAAAmuD,EAAAC,GACA,IAAAC,EAAA,YAAAD,EAAAE,YAAAH,GAAA,IAAA,IACA,OAAAE,EAAAruD,EAAAquD,CACA,CAEA,SAAAxP,EAAA7+C,GACA,OAAAi+C,EAAA5oD,KAAA0C,OAAAiI,GAAA,KAAA,SACA,CAEA,SAAAlK,EAAA8E,GAAA,QAAA,mBAAAo/C,EAAAp/C,IAAA0yD,GAAA,WAAAz1D,QAAA+C,IAAA0yD,KAAA1yD,EAAA,CAEA,SAAA2zD,EAAA3zD,GAAA,QAAA,oBAAAo/C,EAAAp/C,IAAA0yD,GAAA,WAAAz1D,QAAA+C,IAAA0yD,KAAA1yD,EAAA,CAOA,SAAAqzD,EAAArzD,GACA,GAAAyyD,EACA,OAAAzyD,GAAA,WAAA/C,QAAA+C,IAAAA,aAAAhF,OAEA,GAAA,WAAAiC,QAAA+C,GACA,OAAA,EAEA,IAAAA,GAAA,WAAA/C,QAAA+C,KAAAwyD,EACA,OAAA,EAEA,IAEA,OADAA,EAAA/3D,KAAAuF,IACA,CACA,CAAA,MAAA5E,GAAA,CACA,OAAA,CACA,CAnOAiD,EAAAD,QAAA,SAAAw1D,EAAA5zD,EAAAkZ,EAAA26C,EAAAC,GACA,IAAAN,EAAAt6C,GAAA,CAAA,EAEA,GAAAq4C,EAAAiC,EAAA,eAAA,WAAAA,EAAAE,YAAA,WAAAF,EAAAE,WACA,MAAA,IAAAt5D,UAAA,oDAEA,GACAm3D,EAAAiC,EAAA,qBAAA,iBAAAA,EAAAO,gBACAP,EAAAO,gBAAA,GAAAP,EAAAO,kBAAAv/C,IACA,OAAAg/C,EAAAO,iBAGA,MAAA,IAAA35D,UAAA,0FAEA,IAAA45D,GAAAzC,EAAAiC,EAAA,kBAAAA,EAAAQ,cACA,GAAA,kBAAAA,GAAA,WAAAA,EACA,MAAA,IAAA55D,UAAA,iFAGA,GACAm3D,EAAAiC,EAAA,WACA,OAAAA,EAAAS,QACA,OAAAT,EAAAS,UACAvmD,SAAA8lD,EAAAS,OAAA,MAAAT,EAAAS,QAAAT,EAAAS,OAAA,GAEA,MAAA,IAAA75D,UAAA,4DAEA,GAAAm3D,EAAAiC,EAAA,qBAAA,kBAAAA,EAAAU,iBACA,MAAA,IAAA95D,UAAA,qEAEA,IAAA85D,EAAAV,EAAAU,iBAEA,QAAA,IAAAl0D,EACA,MAAA,YAEA,GAAA,OAAAA,EACA,MAAA,OAEA,GAAA,kBAAAA,EACA,OAAAA,EAAA,OAAA,QAGA,GAAA,iBAAAA,EACA,OAAAm0D,EAAAn0D,EAAAwzD,GAEA,GAAA,iBAAAxzD,EAAA,CACA,GAAA,IAAAA,EACA,OAAAwU,IAAAxU,EAAA,EAAA,IAAA,KAEA,IAAA+N,EAAA5Q,OAAA6C,GACA,OAAAk0D,EAAArB,EAAA7yD,EAAA+N,GAAAA,CACA,CACA,GAAA,iBAAA/N,EAAA,CACA,IAAAo0D,EAAAj3D,OAAA6C,GAAA,IACA,OAAAk0D,EAAArB,EAAA7yD,EAAAo0D,GAAAA,CACA,CAEA,IAAAC,OAAA,IAAAb,EAAAK,MAAA,EAAAL,EAAAK,MAEA,QADA,IAAAA,IAAAA,EAAA,GACAA,GAAAQ,GAAAA,EAAA,GAAA,WAAAp3D,QAAA+C,GACA,OAAA9E,EAAA8E,GAAA,UAAA,WAGA,IAAAi0D,EA0UA,SAAAT,EAAAK,GACA,IAAAS,EACA,GAAA,OAAAd,EAAAS,OACAK,EAAA,SACA,MAAA,iBAAAd,EAAAS,QAAAT,EAAAS,OAAA,GAGA,OAAA,KAFAK,EAAAnC,EAAA13D,KAAAI,MAAA24D,EAAAS,OAAA,GAAA,IAGA,CACA,MAAA,CACA3hC,KAAAgiC,EACAC,KAAApC,EAAA13D,KAAAI,MAAAg5D,EAAA,GAAAS,GAEA,CAvVAE,CAAAhB,EAAAK,GAEA,QAAA,IAAAC,EACAA,EAAA,QACA,GAAAtwD,EAAAswD,EAAA9zD,IAAA,EACA,MAAA,aAGA,SAAAyQ,EAAA/U,EAAAZ,EAAA25D,GAKA,GAJA35D,IACAg5D,EAAA1B,EAAA33D,KAAAq5D,IACAlzD,KAAA9F,GAEA25D,EAAA,CACA,IAAAC,EAAA,CACAb,MAAAL,EAAAK,OAKA,OAHAtC,EAAAiC,EAAA,gBACAkB,EAAAhB,WAAAF,EAAAE,YAEAE,EAAAl4D,EAAAg5D,EAAAb,EAAA,EAAAC,EACA,CACA,OAAAF,EAAAl4D,EAAA83D,EAAAK,EAAA,EAAAC,EACA,CAEA,GAAA,mBAAA9zD,IAAA2zD,EAAA3zD,GAAA,CACA,IAAApF,EAgKA,SAAAuD,GACA,GAAAA,EAAAvD,KAAA,OAAAuD,EAAAvD,KACA,IAAA4R,EAAAslD,EAAAr3D,KAAAo3D,EAAAp3D,KAAA0D,GAAA,wBACA,GAAAqO,EAAA,OAAAA,EAAA,GACA,OAAA,IACA,CArKAmoD,CAAA30D,GACAmB,GAAAyzD,EAAA50D,EAAAyQ,GACA,MAAA,aAAA7V,EAAA,KAAAA,EAAA,gBAAA,KAAAuG,GAAAhG,OAAA,EAAA,MAAAg3D,EAAA13D,KAAA0G,GAAA,MAAA,KAAA,GACA,CACA,GAAAkyD,EAAArzD,GAAA,CACA,IAAA60D,GAAApC,EAAApP,EAAA5oD,KAAA0C,OAAA6C,GAAA,yBAAA,MAAAwyD,EAAA/3D,KAAAuF,GACA,MAAA,WAAA/C,QAAA+C,IAAAyyD,EAAAoC,GAAAC,EAAAD,GACA,CACA,GAkPA,SAAAnwD,GACA,IAAAA,GAAA,WAAAzH,QAAAyH,GAAA,OAAA,EACA,GAAA,oBAAAqwD,aAAArwD,aAAAqwD,YACA,OAAA,EAEA,MAAA,iBAAArwD,EAAAswD,UAAA,mBAAAtwD,EAAAuwD,YACA,CAxPAC,CAAAl1D,GAAA,CAGA,IAFA,IAAAoF,GAAA,IAAA6sD,EAAAx3D,KAAA0C,OAAA6C,EAAAg1D,WACAG,GAAAn1D,EAAAo1D,YAAA,GACAr4D,GAAA,EAAAA,GAAAo4D,GAAAh6D,OAAA4B,KACAqI,IAAA,IAAA+vD,GAAAp4D,IAAAnC,KAAA,IAAA04D,EAAArP,EAAAkR,GAAAp4D,IAAArB,OAAA,SAAA83D,GAKA,OAHApuD,IAAA,IACApF,EAAAq1D,YAAAr1D,EAAAq1D,WAAAl6D,SAAAiK,IAAA,OACAA,IAAA,KAAA6sD,EAAAx3D,KAAA0C,OAAA6C,EAAAg1D,WAAA,GAEA,CACA,GAAA95D,EAAA8E,GAAA,CACA,GAAA,IAAAA,EAAA7E,OAAA,MAAA,KACA,IAAAm6D,GAAAV,EAAA50D,EAAAyQ,GACA,OAAAwjD,IAiRA,SAAAqB,GACA,IAAA,IAAAv4D,EAAA,EAAAA,EAAAu4D,EAAAn6D,OAAA4B,IACA,GAAAyG,EAAA8xD,EAAAv4D,GAAA,OAAA,EACA,OAAA,EAGA,OAAA,CACA,CAxRAw4D,CAAAD,IACA,IAAAE,EAAAF,GAAArB,GAAA,IAEA,KAAA9B,EAAA13D,KAAA66D,GAAA,MAAA,IACA,CACA,GA0FA,SAAAt1D,GAAA,QAAA,mBAAAo/C,EAAAp/C,IAAA0yD,GAAA,WAAAz1D,QAAA+C,IAAA0yD,KAAA1yD,EAAA,CA1FAy1D,CAAAz1D,GAAA,CACA,IAAAiD,GAAA2xD,EAAA50D,EAAAyQ,GACA,MAAA,UAAAzR,MAAAlC,aAAA,UAAAkD,IAAA2yD,EAAAl4D,KAAAuF,EAAA,SAGA,IAAAiD,GAAA9H,OAAA,IAAAgC,OAAA6C,GAAA,IACA,MAAA7C,OAAA6C,GAAA,KAAAmyD,EAAA13D,KAAAwI,GAAA,MAAA,KAHA,MAAA9F,OAAA6C,GAAA,KAAAmyD,EAAA13D,KAAA0oD,EAAA1oD,KAAA,YAAAgW,EAAAzQ,EAAA01D,OAAAzyD,IAAA,MAAA,IAIA,CACA,GAAA,WAAAhG,QAAA+C,IAAAg0D,EAAA,CACA,GAAAZ,GAAA,mBAAApzD,EAAAozD,IAAAH,EACA,OAAAA,EAAAjzD,EAAA,CAAA6zD,MAAAQ,EAAAR,IACA,GAAA,WAAAG,GAAA,mBAAAh0D,EAAAyQ,QACA,OAAAzQ,EAAAyQ,SAEA,CACA,GAqIA,SAAA/L,GACA,IAAAssD,IAAAtsD,GAAA,WAAAzH,QAAAyH,GACA,OAAA,EAEA,IACAssD,EAAAv2D,KAAAiK,GACA,IACA0sD,EAAA32D,KAAAiK,EACA,CAAA,MAAAU,GACA,OAAA,CACA,CACA,OAAAV,aAAAw9C,GACA,CAAA,MAAA9mD,GAAA,CACA,OAAA,CACA,CAnJAu6D,CAAA31D,GAAA,CACA,IAAA41D,GAAA,GAMA,OALA3E,GACAA,EAAAx2D,KAAAuF,GAAA,SAAAtE,EAAAkB,GACAg5D,GAAAh1D,KAAA6P,EAAA7T,EAAAoD,GAAA,GAAA,OAAAyQ,EAAA/U,EAAAsE,GACA,IAEA61D,EAAA,MAAA7E,EAAAv2D,KAAAuF,GAAA41D,GAAA3B,EACA,CACA,GAuKA,SAAAvvD,GACA,IAAA0sD,IAAA1sD,GAAA,WAAAzH,QAAAyH,GACA,OAAA,EAEA,IACA0sD,EAAA32D,KAAAiK,GACA,IACAssD,EAAAv2D,KAAAiK,EACA,CAAA,MAAA8H,GACA,OAAA,CACA,CACA,OAAA9H,aAAA49C,GACA,CAAA,MAAAlnD,GAAA,CACA,OAAA,CACA,CArLA06D,CAAA91D,GAAA,CACA,IAAA+1D,GAAA,GAMA,OALA1E,GACAA,EAAA52D,KAAAuF,GAAA,SAAAtE,GACAq6D,GAAAn1D,KAAA6P,EAAA/U,EAAAsE,GACA,IAEA61D,EAAA,MAAAzE,EAAA32D,KAAAuF,GAAA+1D,GAAA9B,EACA,CACA,GAmIA,SAAAvvD,GACA,IAAA4sD,IAAA5sD,GAAA,WAAAzH,QAAAyH,GACA,OAAA,EAEA,IACA4sD,EAAA72D,KAAAiK,EAAA4sD,GACA,IACAE,EAAA/2D,KAAAiK,EAAA8sD,EACA,CAAA,MAAApsD,GACA,OAAA,CACA,CACA,OAAAV,aAAAi+C,OACA,CAAA,MAAAvnD,GAAA,CACA,OAAA,CACA,CAjJA46D,CAAAh2D,GACA,OAAAi2D,EAAA,WAEA,GA2KA,SAAAvxD,GACA,IAAA8sD,IAAA9sD,GAAA,WAAAzH,QAAAyH,GACA,OAAA,EAEA,IACA8sD,EAAA/2D,KAAAiK,EAAA8sD,GACA,IACAF,EAAA72D,KAAAiK,EAAA4sD,EACA,CAAA,MAAAlsD,GACA,OAAA,CACA,CACA,OAAAV,aAAAm+C,OACA,CAAA,MAAAznD,GAAA,CACA,OAAA,CACA,CAzLA86D,CAAAl2D,GACA,OAAAi2D,EAAA,WAEA,GA6IA,SAAAvxD,GACA,IAAA+sD,IAAA/sD,GAAA,WAAAzH,QAAAyH,GACA,OAAA,EAEA,IAEA,OADA+sD,EAAAh3D,KAAAiK,IACA,CACA,CAAA,MAAAtJ,GAAA,CACA,OAAA,CACA,CAtJA+6D,CAAAn2D,GACA,OAAAi2D,EAAA,WAEA,GAkDA,SAAAj2D,GAAA,QAAA,oBAAAo/C,EAAAp/C,IAAA0yD,GAAA,WAAAz1D,QAAA+C,IAAA0yD,KAAA1yD,EAAA,CAlDAo2D,CAAAp2D,GACA,OAAA80D,EAAArkD,EAAArT,OAAA4C,KAEA,GAoEA,SAAAA,GACA,IAAAA,GAAA,WAAA/C,QAAA+C,KAAAsyD,EACA,OAAA,EAEA,IAEA,OADAA,EAAA73D,KAAAuF,IACA,CACA,CAAA,MAAA5E,GAAA,CACA,OAAA,CACA,CA7EAi7D,CAAAr2D,GACA,OAAA80D,EAAArkD,EAAA6hD,EAAA73D,KAAAuF,KAEA,GA6CA,SAAAA,GAAA,QAAA,qBAAAo/C,EAAAp/C,IAAA0yD,GAAA,WAAAz1D,QAAA+C,IAAA0yD,KAAA1yD,EAAA,CA7CAs2D,CAAAt2D,GACA,OAAA80D,EAAAnD,EAAAl3D,KAAAuF,IAEA,GAwCA,SAAAA,GAAA,QAAA,oBAAAo/C,EAAAp/C,IAAA0yD,GAAA,WAAAz1D,QAAA+C,IAAA0yD,KAAA1yD,EAAA,CAxCAu2D,CAAAv2D,GACA,OAAA80D,EAAArkD,EAAAtT,OAAA6C,KAIA,GAAA,oBAAAxB,QAAAwB,IAAAxB,OACA,MAAA,sBAEA,GAAAwB,IAAAvB,EACA,MAAA,0BAEA,IA0BA,SAAAuB,GAAA,QAAA,kBAAAo/C,EAAAp/C,IAAA0yD,GAAA,WAAAz1D,QAAA+C,IAAA0yD,KAAA1yD,EAAA,CA1BAma,CAAAna,KAAA2zD,EAAA3zD,GAAA,CACA,IAAAw2D,GAAA5B,EAAA50D,EAAAyQ,GACAgmD,GAAA7D,EAAAA,EAAA5yD,KAAAxE,OAAAsB,UAAAkD,aAAAxE,QAAAwE,EAAArF,cAAAa,OACAk7D,GAAA12D,aAAAxE,OAAA,GAAA,iBACAm7D,IAAAF,IAAA/D,GAAAl3D,OAAAwE,KAAAA,GAAA0yD,KAAA1yD,EAAA+xD,EAAAt3D,KAAA2kD,EAAAp/C,GAAA,GAAA,GAAA02D,GAAA,SAAA,GAEAE,IADAH,IAAA,mBAAAz2D,EAAArF,YAAA,GAAAqF,EAAArF,YAAAC,KAAAoF,EAAArF,YAAAC,KAAA,IAAA,KACA+7D,IAAAD,GAAA,IAAAvE,EAAA13D,KAAA0oD,EAAA1oD,KAAA,GAAAk8D,IAAA,GAAAD,IAAA,IAAA,MAAA,KAAA,IACA,OAAA,IAAAF,GAAAr7D,OAAAy7D,GAAA,KACA3C,EACA2C,GAAA,IAAApB,EAAAgB,GAAAvC,GAAA,IAEA2C,GAAA,KAAAzE,EAAA13D,KAAA+7D,GAAA,MAAA,IACA,CACA,OAAAr5D,OAAA6C,EACA,EAgDA,IAAAkjD,EAAA1nD,OAAAsB,UAAAN,gBAAA,SAAAI,GAAA,OAAAA,KAAA+B,IAAA,EACA,SAAA4yD,EAAAvxD,EAAApD,GACA,OAAAsmD,EAAAzoD,KAAAuF,EAAApD,EACA,CAEA,SAAAwiD,EAAAp/C,GACA,OAAA4xD,EAAAn3D,KAAAuF,EACA,CASA,SAAAwD,EAAA8xD,EAAA5wD,GACA,GAAA4wD,EAAA9xD,QAAA,OAAA8xD,EAAA9xD,QAAAkB,GACA,IAAA,IAAA3H,EAAA,EAAA6I,EAAA0vD,EAAAn6D,OAAA4B,EAAA6I,EAAA7I,IACA,GAAAu4D,EAAAv4D,KAAA2H,EAAA,OAAA3H,EAEA,OAAA,CACA,CAqFA,SAAAo3D,EAAApmD,EAAAylD,GACA,GAAAzlD,EAAA5S,OAAAq4D,EAAAO,gBAAA,CACA,IAAAxmD,EAAAQ,EAAA5S,OAAAq4D,EAAAO,gBACA8C,EAAA,OAAAtpD,EAAA,mBAAAA,EAAA,EAAA,IAAA,IACA,OAAA4mD,EAAApC,EAAAt3D,KAAAsT,EAAA,EAAAylD,EAAAO,iBAAAP,GAAAqD,CACA,CAGA,OAAAvD,EADAjQ,EAAA5oD,KAAA4oD,EAAA5oD,KAAAsT,EAAA,WAAA,QAAA,eAAA+oD,GACA,SAAAtD,EACA,CAEA,SAAAsD,EAAAj4D,GACA,IAAAxD,EAAAwD,EAAAgE,WAAA,GACA6B,EAAA,CACA,EAAA,IACA,EAAA,IACA,GAAA,IACA,GAAA,IACA,GAAA,KACArJ,GACA,OAAAqJ,EAAA,KAAAA,EACA,OAAArJ,EAAA,GAAA,IAAA,IAAA22D,EAAAv3D,KAAAY,EAAAb,SAAA,IACA,CAEA,SAAAs6D,EAAA/mD,GACA,MAAA,UAAAA,EAAA,GACA,CAEA,SAAAkoD,EAAA3qD,GACA,OAAAA,EAAA,QACA,CAEA,SAAAuqD,EAAAvqD,EAAAI,EAAAqrD,EAAA9C,GAEA,OAAA3oD,EAAA,KAAAI,EAAA,OADAuoD,EAAAuB,EAAAuB,EAAA9C,GAAA9B,EAAA13D,KAAAs8D,EAAA,OACA,GACA,CA0BA,SAAAvB,EAAAF,EAAArB,GACA,GAAA,IAAAqB,EAAAn6D,OAAA,MAAA,GACA,IAAA67D,EAAA,KAAA/C,EAAAM,KAAAN,EAAA3hC,KACA,OAAA0kC,EAAA7E,EAAA13D,KAAA66D,EAAA,IAAA0B,GAAA,KAAA/C,EAAAM,IACA,CAEA,SAAAK,EAAA50D,EAAAyQ,GACA,IAAAwmD,EAAA/7D,EAAA8E,GACAs1D,EAAA,GACA,GAAA2B,EAAA,CACA3B,EAAAn6D,OAAA6E,EAAA7E,OACA,IAAA,IAAA4B,EAAA,EAAAA,EAAAiD,EAAA7E,OAAA4B,IACAu4D,EAAAv4D,GAAAw0D,EAAAvxD,EAAAjD,GAAA0T,EAAAzQ,EAAAjD,GAAAiD,GAAA,EAEA,CACA,IACAk3D,EADAjS,EAAA,mBAAAsN,EAAAA,EAAAvyD,GAAA,GAEA,GAAAyyD,EAAA,CACAyE,EAAA,CAAA,EACA,IAAA,IAAA91D,EAAA,EAAAA,EAAA6jD,EAAA9pD,OAAAiG,IACA81D,EAAA,IAAAjS,EAAA7jD,IAAA6jD,EAAA7jD,EAEA,CAEA,IAAA,IAAAxE,KAAAoD,EACAuxD,EAAAvxD,EAAApD,KACAq6D,GAAA95D,OAAAC,OAAAR,MAAAA,GAAAA,EAAAoD,EAAA7E,QACAs3D,GAAAyE,EAAA,IAAAt6D,aAAA5B,SAGAk3D,EAAAz3D,KAAA,SAAAmC,GACA04D,EAAA10D,KAAA6P,EAAA7T,EAAAoD,GAAA,KAAAyQ,EAAAzQ,EAAApD,GAAAoD,IAEAs1D,EAAA10D,KAAAhE,EAAA,KAAA6T,EAAAzQ,EAAApD,GAAAoD,MAGA,GAAA,mBAAAuyD,EACA,IAAA,IAAA5sD,EAAA,EAAAA,EAAAs/C,EAAA9pD,OAAAwK,IACAgtD,EAAAl4D,KAAAuF,EAAAilD,EAAAt/C,KACA2vD,EAAA10D,KAAA,IAAA6P,EAAAw0C,EAAAt/C,IAAA,MAAA8K,EAAAzQ,EAAAilD,EAAAt/C,IAAA3F,IAIA,OAAAs1D,CACA,C9GomdC,GAAE76D,KAAKkE,KAAM,GAAElE,KAAKkE,KAAuB,oBAAXF,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAElJ,EAAE,CAAC,iBAAiB,KAAK,IAAI,CAAC,SAASM,EAAQT,EAAOD,G+GjnetD,IAAA+4D,EAAAr4D,EAAA,UAoBA,SAAAc,EAAAF,GACA,IAAAvB,EAAA,SAAAA,IACA,OAAAA,EAAAi5D,OAAAj5D,EAAAzC,OACAyC,EAAAi5D,QAAA,EACAj5D,EAAAzC,MAAAgE,EAAApD,MAAAqC,KAAAtC,WACA,EAEA,OADA8B,EAAAi5D,QAAA,EACAj5D,CACA,CAEA,SAAAk5D,EAAA33D,GACA,IAAAvB,EAAA,SAAAA,IACA,GAAAA,EAAAi5D,OACA,MAAA,IAAAp4D,MAAAb,EAAAm5D,WAEA,OADAn5D,EAAAi5D,QAAA,EACAj5D,EAAAzC,MAAAgE,EAAApD,MAAAqC,KAAAtC,UACA,EACAzB,EAAA8E,EAAA9E,MAAA,+BAGA,OAFAuD,EAAAm5D,UAAA18D,EAAA,sCACAuD,EAAAi5D,QAAA,EACAj5D,CACA,CAxCAE,EAAAD,QAAA+4D,EAAAv3D,GACAvB,EAAAD,QAAAqK,OAAA0uD,EAAAE,GAEAz3D,EAAA23D,MAAA33D,GAAA,WACApE,OAAAC,eAAA8oB,SAAAznB,UAAA,OAAA,CACApB,MAAA,WACA,OAAAkE,EAAAjB,KACA,EACA/C,cAAA,IAGAJ,OAAAC,eAAA8oB,SAAAznB,UAAA,aAAA,CACApB,MAAA,WACA,OAAA27D,EAAA14D,KACA,EACA/C,cAAA,GAEA,G/G2oeA,EAAE,CAACu7D,OAAS,MAAM,IAAI,CAAC,SAASr4D,EAAQT,EAAOD,IAC/C,SAAW0yB,IAAS,WgHpoepB,SAAA0mC,EAAAx9C,GACA,GAAA,iBAAAA,EACA,MAAA,IAAA5f,UAAA,mCAAAixB,KAAApmB,UAAA+U,GAEA,CAGA,SAAAy9C,EAAAz9C,EAAA09C,GAMA,IALA,IAIAz4D,EAJAyP,EAAA,GACAipD,EAAA,EACAC,GAAA,EACAC,EAAA,EAEA96D,EAAA,EAAAA,GAAAid,EAAA7e,SAAA4B,EAAA,CACA,GAAAA,EAAAid,EAAA7e,OACA8D,EAAA+a,EAAAnX,WAAA9F,OACA,IAAA,KAAAkC,EACA,MAEAA,EAAA,EAAA,CACA,GAAA,KAAAA,EAAA,CACA,GAAA24D,IAAA76D,EAAA,GAAA,IAAA86D,QAEA,GAAAD,IAAA76D,EAAA,GAAA,IAAA86D,EAAA,CACA,GAAAnpD,EAAAvT,OAAA,GAAA,IAAAw8D,GAAA,KAAAjpD,EAAA7L,WAAA6L,EAAAvT,OAAA,IAAA,KAAAuT,EAAA7L,WAAA6L,EAAAvT,OAAA,GACA,GAAAuT,EAAAvT,OAAA,EAAA,CACA,IAAA28D,EAAAppD,EAAA7B,YAAA,KACA,GAAAirD,IAAAppD,EAAAvT,OAAA,EAAA,EACA,IAAA28D,GACAppD,EAAA,GACAipD,EAAA,GAGAA,GADAjpD,EAAAA,EAAAhU,MAAA,EAAAo9D,IACA38D,OAAA,EAAAuT,EAAA7B,YAAA,KAEA+qD,EAAA76D,EACA86D,EAAA,EACA,QACA,CACA,MAAA,GAAA,IAAAnpD,EAAAvT,QAAA,IAAAuT,EAAAvT,OAAA,CACAuT,EAAA,GACAipD,EAAA,EACAC,EAAA76D,EACA86D,EAAA,EACA,QACA,CAEAH,IACAhpD,EAAAvT,OAAA,EACAuT,GAAA,MAEAA,EAAA,KACAipD,EAAA,EAEA,MACAjpD,EAAAvT,OAAA,EACAuT,GAAA,IAAAsL,EAAAtf,MAAAk9D,EAAA,EAAA76D,GAEA2R,EAAAsL,EAAAtf,MAAAk9D,EAAA,EAAA76D,GACA46D,EAAA56D,EAAA66D,EAAA,EAEAA,EAAA76D,EACA86D,EAAA,CACA,MAAA,KAAA54D,IAAA,IAAA44D,IACAA,EAEAA,GAAA,CAEA,CACA,OAAAnpD,CACA,CAcA,IAAAqpD,EAAA,CAEAhzC,QAAA,WAKA,IAJA,IAEAizC,EAFAC,EAAA,GACAC,GAAA,EAGAn7D,EAAAV,UAAAlB,OAAA,EAAA4B,IAAA,IAAAm7D,EAAAn7D,IAAA,CACA,IAAAid,EACAjd,GAAA,EACAid,EAAA3d,UAAAU,SAEAiO,IAAAgtD,IACAA,EAAAlnC,EAAAknC,OACAh+C,EAAAg+C,GAGAR,EAAAx9C,GAGA,IAAAA,EAAA7e,SAIA88D,EAAAj+C,EAAA,IAAAi+C,EACAC,EAAA,KAAAl+C,EAAAnX,WAAA,GACA,CAQA,OAFAo1D,EAAAR,EAAAQ,GAAAC,GAEAA,EACAD,EAAA98D,OAAA,EACA,IAAA88D,EAEA,IACAA,EAAA98D,OAAA,EACA88D,EAEA,GAEA,EAEAnsC,UAAA,SAAA9R,GAGA,GAFAw9C,EAAAx9C,GAEA,IAAAA,EAAA7e,OAAA,MAAA,IAEA,IAAAg9D,EAAA,KAAAn+C,EAAAnX,WAAA,GACAu1D,EAAA,KAAAp+C,EAAAnX,WAAAmX,EAAA7e,OAAA,GAQA,OAHA,KAFA6e,EAAAy9C,EAAAz9C,GAAAm+C,IAEAh9D,QAAAg9D,IAAAn+C,EAAA,KACAA,EAAA7e,OAAA,GAAAi9D,IAAAp+C,GAAA,KAEAm+C,EAAA,IAAAn+C,EACAA,CACA,EAEAm+C,WAAA,SAAAn+C,GAEA,OADAw9C,EAAAx9C,GACAA,EAAA7e,OAAA,GAAA,KAAA6e,EAAAnX,WAAA,EACA,EAEAS,KAAA,WACA,GAAA,IAAAjH,UAAAlB,OACA,MAAA,IAEA,IADA,IAAAk9D,EACAt7D,EAAA,EAAAA,EAAAV,UAAAlB,SAAA4B,EAAA,CACA,IAAAiN,EAAA3N,UAAAU,GACAy6D,EAAAxtD,GACAA,EAAA7O,OAAA,SACA6P,IAAAqtD,EACAA,EAAAruD,EAEAquD,GAAA,IAAAruD,EAEA,CACA,YAAAgB,IAAAqtD,EACA,IACAN,EAAAjsC,UAAAusC,EACA,EAEAC,SAAA,SAAAx9D,EAAAqmB,GAIA,GAHAq2C,EAAA18D,GACA08D,EAAAr2C,GAEArmB,IAAAqmB,EAAA,MAAA,GAKA,IAHArmB,EAAAi9D,EAAAhzC,QAAAjqB,OACAqmB,EAAA42C,EAAAhzC,QAAA5D,IAEA,MAAA,GAIA,IADA,IAAAo3C,EAAA,EACAA,EAAAz9D,EAAAK,QACA,KAAAL,EAAA+H,WAAA01D,KADAA,GASA,IALA,IAAAC,EAAA19D,EAAAK,OACAs9D,EAAAD,EAAAD,EAGAG,EAAA,EACAA,EAAAv3C,EAAAhmB,QACA,KAAAgmB,EAAAte,WAAA61D,KADAA,GAWA,IAPA,IACAC,EADAx3C,EAAAhmB,OACAu9D,EAGAv9D,EAAAs9D,EAAAE,EAAAF,EAAAE,EACAC,GAAA,EACA77D,EAAA,EACAA,GAAA5B,IAAA4B,EAAA,CACA,GAAAA,IAAA5B,EAAA,CACA,GAAAw9D,EAAAx9D,EAAA,CACA,GAAA,KAAAgmB,EAAAte,WAAA61D,EAAA37D,GAGA,OAAAokB,EAAAzmB,MAAAg+D,EAAA37D,EAAA,GACA,GAAA,IAAAA,EAGA,OAAAokB,EAAAzmB,MAAAg+D,EAAA37D,EAEA,MAAA07D,EAAAt9D,IACA,KAAAL,EAAA+H,WAAA01D,EAAAx7D,GAGA67D,EAAA77D,EACA,IAAAA,IAGA67D,EAAA,IAGA,KACA,CACA,IAAAC,EAAA/9D,EAAA+H,WAAA01D,EAAAx7D,GAEA,GAAA87D,IADA13C,EAAAte,WAAA61D,EAAA37D,GAEA,MACA,KAAA87D,IACAD,EAAA77D,EACA,CAEA,IAAAqU,EAAA,GAGA,IAAArU,EAAAw7D,EAAAK,EAAA,EAAA77D,GAAAy7D,IAAAz7D,EACAA,IAAAy7D,GAAA,KAAA19D,EAAA+H,WAAA9F,KACA,IAAAqU,EAAAjW,OACAiW,GAAA,KAEAA,GAAA,OAMA,OAAAA,EAAAjW,OAAA,EACAiW,EAAA+P,EAAAzmB,MAAAg+D,EAAAE,IAEAF,GAAAE,EACA,KAAAz3C,EAAAte,WAAA61D,MACAA,EACAv3C,EAAAzmB,MAAAg+D,GAEA,EAEAI,UAAA,SAAA9+C,GACA,OAAAA,CACA,EAEA++C,QAAA,SAAA/+C,GAEA,GADAw9C,EAAAx9C,GACA,IAAAA,EAAA7e,OAAA,MAAA,IAKA,IAJA,IAAA8D,EAAA+a,EAAAnX,WAAA,GACAm2D,EAAA,KAAA/5D,EACAyE,GAAA,EACAu1D,GAAA,EACAl8D,EAAAid,EAAA7e,OAAA,EAAA4B,GAAA,IAAAA,EAEA,GAAA,MADAkC,EAAA+a,EAAAnX,WAAA9F,KAEA,IAAAk8D,EAAA,CACAv1D,EAAA3G,EACA,KACA,OAGAk8D,GAAA,EAIA,OAAA,IAAAv1D,EAAAs1D,EAAA,IAAA,IACAA,GAAA,IAAAt1D,EAAA,KACAsW,EAAAtf,MAAA,EAAAgJ,EACA,EAEAw1D,SAAA,SAAAl/C,EAAAxI,GACA,QAAAxG,IAAAwG,GAAA,iBAAAA,EAAA,MAAA,IAAApX,UAAA,mCACAo9D,EAAAx9C,GAEA,IAGAjd,EAHA0G,EAAA,EACAC,GAAA,EACAu1D,GAAA,EAGA,QAAAjuD,IAAAwG,GAAAA,EAAArW,OAAA,GAAAqW,EAAArW,QAAA6e,EAAA7e,OAAA,CACA,GAAAqW,EAAArW,SAAA6e,EAAA7e,QAAAqW,IAAAwI,EAAA,MAAA,GACA,IAAAm/C,EAAA3nD,EAAArW,OAAA,EACAi+D,GAAA,EACA,IAAAr8D,EAAAid,EAAA7e,OAAA,EAAA4B,GAAA,IAAAA,EAAA,CACA,IAAAkC,EAAA+a,EAAAnX,WAAA9F,GACA,GAAA,KAAAkC,GAGA,IAAAg6D,EAAA,CACAx1D,EAAA1G,EAAA,EACA,KACA,OAEA,IAAAq8D,IAGAH,GAAA,EACAG,EAAAr8D,EAAA,GAEAo8D,GAAA,IAEAl6D,IAAAuS,EAAA3O,WAAAs2D,IACA,KAAAA,IAGAz1D,EAAA3G,IAKAo8D,GAAA,EACAz1D,EAAA01D,GAIA,CAGA,OADA31D,IAAAC,EAAAA,EAAA01D,GAAA,IAAA11D,IAAAA,EAAAsW,EAAA7e,QACA6e,EAAAtf,MAAA+I,EAAAC,EACA,CACA,IAAA3G,EAAAid,EAAA7e,OAAA,EAAA4B,GAAA,IAAAA,EACA,GAAA,KAAAid,EAAAnX,WAAA9F,IAGA,IAAAk8D,EAAA,CACAx1D,EAAA1G,EAAA,EACA,KACA,OACA,IAAA2G,IAGAu1D,GAAA,EACAv1D,EAAA3G,EAAA,GAIA,OAAA,IAAA2G,EAAA,GACAsW,EAAAtf,MAAA+I,EAAAC,EAEA,EAEA21D,QAAA,SAAAr/C,GACAw9C,EAAAx9C,GAQA,IAPA,IAAAs/C,GAAA,EACAC,EAAA,EACA71D,GAAA,EACAu1D,GAAA,EAGAO,EAAA,EACAz8D,EAAAid,EAAA7e,OAAA,EAAA4B,GAAA,IAAAA,EAAA,CACA,IAAAkC,EAAA+a,EAAAnX,WAAA9F,GACA,GAAA,KAAAkC,GASA,IAAAyE,IAGAu1D,GAAA,EACAv1D,EAAA3G,EAAA,GAEA,KAAAkC,GAEA,IAAAq6D,EACAA,EAAAv8D,EACA,IAAAy8D,IACAA,EAAA,IACA,IAAAF,IAGAE,GAAA,QArBA,IAAAP,EAAA,CACAM,EAAAx8D,EAAA,EACA,KACA,CAoBA,CAEA,OAAA,IAAAu8D,IAAA,IAAA51D,GAEA,IAAA81D,GAEA,IAAAA,GAAAF,IAAA51D,EAAA,GAAA41D,IAAAC,EAAA,EACA,GAEAv/C,EAAAtf,MAAA4+D,EAAA51D,EACA,EAEAob,OAAA,SAAA26C,GACA,GAAA,OAAAA,GAAA,WAAAx8D,QAAAw8D,GACA,MAAA,IAAAr/D,UAAA,mEAAA6C,QAAAw8D,IAEA,OAvVA,SAAA7rB,EAAA6rB,GACA,IAAA9sD,EAAA8sD,EAAA9sD,KAAA8sD,EAAAC,KACApnC,EAAAmnC,EAAAnnC,OAAAmnC,EAAA7+D,MAAA,KAAA6+D,EAAAjoD,KAAA,IACA,OAAA7E,EAGAA,IAAA8sD,EAAAC,KACA/sD,EAAA2lB,EAEA3lB,EAAAihC,EAAAtb,EALAA,CAMA,CA6UAqnC,CAAA,IAAAF,EACA,EAEAzwD,MAAA,SAAAgR,GACAw9C,EAAAx9C,GAEA,IAAA7I,EAAA,CAAAuoD,KAAA,GAAA/sD,IAAA,GAAA2lB,KAAA,GAAA9gB,IAAA,GAAA5W,KAAA,IACA,GAAA,IAAAof,EAAA7e,OAAA,OAAAgW,EACA,IAEA1N,EAFAxE,EAAA+a,EAAAnX,WAAA,GACAs1D,EAAA,KAAAl5D,EAEAk5D,GACAhnD,EAAAuoD,KAAA,IACAj2D,EAAA,GAEAA,EAAA,EAaA,IAXA,IAAA61D,GAAA,EACAC,EAAA,EACA71D,GAAA,EACAu1D,GAAA,EACAl8D,EAAAid,EAAA7e,OAAA,EAIAq+D,EAAA,EAGAz8D,GAAA0G,IAAA1G,EAEA,GAAA,MADAkC,EAAA+a,EAAAnX,WAAA9F,KAUA,IAAA2G,IAGAu1D,GAAA,EACAv1D,EAAA3G,EAAA,GAEA,KAAAkC,GAEA,IAAAq6D,EAAAA,EAAAv8D,EAAA,IAAAy8D,IAAAA,EAAA,IACA,IAAAF,IAGAE,GAAA,QAlBA,IAAAP,EAAA,CACAM,EAAAx8D,EAAA,EACA,KACA,CAwCA,OArBA,IAAAu8D,IAAA,IAAA51D,GAEA,IAAA81D,GAEA,IAAAA,GAAAF,IAAA51D,EAAA,GAAA41D,IAAAC,EAAA,GACA,IAAA71D,IACAyN,EAAAmhB,KAAAnhB,EAAAvW,KAAA,IAAA2+D,GAAApB,EAAAn+C,EAAAtf,MAAA,EAAAgJ,GAAAsW,EAAAtf,MAAA6+D,EAAA71D,KAGA,IAAA61D,GAAApB,GACAhnD,EAAAvW,KAAAof,EAAAtf,MAAA,EAAA4+D,GACAnoD,EAAAmhB,KAAAtY,EAAAtf,MAAA,EAAAgJ,KAEAyN,EAAAvW,KAAAof,EAAAtf,MAAA6+D,EAAAD,GACAnoD,EAAAmhB,KAAAtY,EAAAtf,MAAA6+D,EAAA71D,IAEAyN,EAAAK,IAAAwI,EAAAtf,MAAA4+D,EAAA51D,IAGA61D,EAAA,EAAApoD,EAAAxE,IAAAqN,EAAAtf,MAAA,EAAA6+D,EAAA,GAAApB,IAAAhnD,EAAAxE,IAAA,KAEAwE,CACA,EAEAy8B,IAAA,IACAgsB,UAAA,IACAC,MAAA,KACA9B,MAAA,MAGAA,EAAAA,MAAAA,EAEA15D,EAAAD,QAAA25D,ChHiqeC,GAAEt9D,KAAKkE,KAAM,GAAElE,KAAKkE,KAAKG,EAAQ,YAElC,EAAE,CAAC8yB,SAAW,MAAM,IAAI,CAAC,SAAS9yB,EAAQT,EAAOD,GiHnrfjD,IAAAo3B,EAAA12B,EAAA,6BAEAg7D,EACA,CACApzB,KAAA,yBAGAqzB,2BAAA,eACAC,4BAAA,EACAC,gCAAA,EACAC,gCAAA,EAGAC,0BAAA,EACAC,2CAAA,EACAC,gCAAA,EAEAC,UAAA,CAAA,EAEAC,wBAAA,SAGAC,EAAA,SAAAC,GAEA,SAAAD,EAAAtlD,EAAAgb,EAAA9a,GACA,IAAAslD,EAAAh+D,iBAAAiC,KAAA67D,IAEAE,EAAAr9D,WAAAsB,KAAA67D,EAAA,CAAAtlD,EADA1Z,OAAAszB,OAAA,CAAA,EAAAzD,KAAAriB,MAAAqiB,KAAApmB,UAAA60D,IAAA5pC,GACA9a,KACAE,YAAA,kBAGAolD,EAAAC,KAAAD,EAAArqC,MAEAqqC,EAAAE,QAAAF,EAAArqC,MAAAuqC,QAEAF,EAAAG,qBAAA,EACAH,EAAAI,qBAAA,EACAJ,EAAAK,+BAAA,EACAL,EAAAM,6BAAA,EACAN,EAAAO,yBAAA,EAGA,IAAAC,EAAA1/D,OAAA2F,KAAAu5D,EAAAxhD,QAAAohD,WACA,GAAAY,EAAA//D,OAAA,EAEA,IAAA,IAAA4B,EAAA,EAAAA,EAAAm+D,EAAA//D,OAAA4B,IACA,CAEA,IAAAo+D,EAAAD,EAAAn+D,GACA29D,EAAArqC,MAAAsG,2BAAA,WAAA+jC,EAAAxhD,QAAAohD,UAAAa,GAAAA,EACA,CACA,OAAAT,CACA,CAIA,OAAA18D,UAAAw8D,EAAAC,GAAA59D,cAAA29D,EAAA,CAAA,CAAA59D,IAAA,aAAAlB,MACA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,kBAEA,CACA,GAAA,CAAA9pC,IAAA,kBAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAy8D,aACA1iC,GACA,GAAA,CAAA97B,IAAA,gBAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,qBAEA,CACA,GAAA,CAAA9pC,IAAA,qBAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAA08D,gBACA3iC,GACA,GAAA,CAAA97B,IAAA,UAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,eAEA,CACA,GAAA,CAAA9pC,IAAA,eAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAA28D,UACA5iC,GACA,GAAA,CAAA97B,IAAA,QAAAlB,MAEA,WAEAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,mCAMA,IAFA,IAAA60B,EAAA//D,OAAA2F,KAAAxC,KAAAg8D,KAAAa,WACAC,EAAA,GACA1+D,EAAA,EAAAA,EAAAw+D,EAAApgE,OAAA4B,IACA,CACA,IAAA2+D,EAAA/8D,KAAAg8D,KAAAa,UAAAD,EAAAx+D,IACA2+D,EAAAxiD,QAAAyiD,kBAEAF,EAAA76D,KAAA86D,EAEA,CAEAD,EAAAxyB,MAAA,SAAA5uC,EAAAyL,GAAA,OAAAzL,EAAA6e,QAAA0iD,iBAAA91D,EAAAoT,QAAA0iD,gBAAA,IACA,IAAA,IAAA7+D,EAAA,EAAAA,EAAA0+D,EAAAtgE,OAAA4B,IAEA0+D,EAAA1+D,GAAA8+D,MAAAJ,EAAA1+D,IAGA4B,KAAA08D,gBAIA,IAFA,IAAAS,EAAAtgE,OAAA2F,KAAAxC,KAAAg8D,KAAAoB,OACAC,EAAA,GACAj/D,EAAA,EAAAA,EAAA++D,EAAA3gE,OAAA4B,IACA,CACA,IAAAk/D,EAAAt9D,KAAAg8D,KAAAoB,MAAAD,EAAA/+D,IACAk/D,EAAA/iD,QAAAgjD,gBAEAF,EAAAp7D,KAAAq7D,EAEA,CAEAD,EAAA/yB,MAAA,SAAA5uC,EAAAyL,GAAA,OAAAzL,EAAA6e,QAAAijD,sBAAAr2D,EAAAoT,QAAAijD,qBAAA,IACA,IAAA,IAAAp/D,EAAA,EAAAA,EAAAi/D,EAAA7gE,OAAA4B,IAEAi/D,EAAAj/D,GAAA8+D,QAKA,OAHAl9D,KAAA28D,UACA38D,KAAAy9D,eACAz9D,KAAAm8D,oBAAAn8D,KAAA0xB,MAAAjF,IAAA+vB,gBACA,CACA,GAAA,CAAAv+C,IAAA,aAAAlB,MACA,SAAAg9B,GACA,IAAA2jC,EAAA19D,KACA6zC,EAAA7zC,KAAA0xB,MAAAiG,8CAAA,cAEAkc,EAAAG,WAAAh0C,KAAA29D,mBAAArgE,KAAA0C,OAIA,IAAA49D,EAAA,mBAAA7jC,GAAAA,EAEA6jC,IAEA59D,KAAAysB,IAAA1E,KAAA,YAAA1kB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,2HACA61B,EAAA,SAAArkD,GAEAA,GAEAmkD,EAAAjxC,IAAAzb,MAAA,YAAA3N,OAAAq6D,EAAA/rC,KAAA,QAAAtuB,OAAAq6D,EAAArmD,KAAA,MAAAhU,OAAAq6D,EAAAnjD,QAAAwtB,KAAA,qCAAA1kC,OAAAkW,GAAAA,EAEA,GAKA,IAFA,IAAAqjD,EAAA//D,OAAA2F,KAAAxC,KAAAg8D,KAAAa,WACAC,EAAA,GACA1+D,EAAA,EAAAA,EAAAw+D,EAAApgE,OAAA4B,IACA,CACA,IAAA2+D,EAAA/8D,KAAAg8D,KAAAa,UAAAD,EAAAx+D,IACA2+D,EAAAxiD,QAAAyiD,kBAEAF,EAAA76D,KAAA86D,EAEA,CAEAD,EAAAxyB,MAAA,SAAA5uC,EAAAyL,GAAA,OAAAzL,EAAA6e,QAAA0iD,iBAAA91D,EAAAoT,QAAA0iD,gBAAA,IACA,IAAA,IAAA7+D,EAAA,EAAAA,EAAA0+D,EAAAtgE,OAAA4B,IAEAy1C,EAAAG,WAAA8oB,EAAA1+D,GAAAy/D,WAAAvgE,KAAAw/D,EAAA1+D,KAMA,IAFA,IAAA++D,EAAAtgE,OAAA2F,KAAAxC,KAAAg8D,KAAAoB,OACAC,EAAA,GACAj/D,EAAA,EAAAA,EAAA++D,EAAA3gE,OAAA4B,IACA,CACA,IAAAk/D,EAAAt9D,KAAAg8D,KAAAoB,MAAAD,EAAA/+D,IACAk/D,EAAA/iD,QAAAyiD,kBAEAK,EAAAp7D,KAAAq7D,EAEA,CAEAD,EAAA/yB,MAAA,SAAA5uC,EAAAyL,GAAA,OAAAzL,EAAA6e,QAAA0iD,iBAAA91D,EAAAoT,QAAA0iD,gBAAA,IACA,IAAA,IAAA7+D,EAAA,EAAAA,EAAAi/D,EAAA7gE,OAAA4B,IAEAy1C,EAAAG,WAAAqpB,EAAAj/D,GAAAy/D,WAAAvgE,KAAA+/D,EAAAj/D,KAGAy1C,EAAAG,WAAAh0C,KAAA89D,aAAAxgE,KAAA0C,OACA6zC,EAAAG,WAAAh0C,KAAA+9D,kBAAAzgE,KAAA0C,OAEA6zC,EAAAK,MACA,SAAA36B,GAOA,OALAmkD,EAAA1B,KAAA5kC,aAAA,GAEAsmC,EAAAjxC,IAAAqD,MAAA,YAAAzsB,OAAAq6D,EAAA/rC,KAAA,QAAAtuB,OAAAq6D,EAAArmD,KAAA,MAAAhU,OAAAq6D,EAAAnjD,QAAAwtB,KAAA,4BAEA21B,EAAAvB,oBAAAuB,EAAAhsC,MAAAjF,IAAA+vB,eACAohB,EAAArkD,EACA,GACA,GAAA,CAAAtb,IAAA,eAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,oBAEA,CACA,GAAA,CAAA9pC,IAAA,oBAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAy9D,eACA1jC,GACA,GAIA,CAAA97B,IAAA,qBAAAlB,MACA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,0BAEA,CACA,GAAA,CAAA9pC,IAAA,0BAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAg+D,qBACAjkC,GACA,GAAA,CAAA97B,IAAA,eAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,oBAEA,CACA,GAAA,CAAA9pC,IAAA,oBAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAi+D,eACAlkC,GACA,GAAA,CAAA97B,IAAA,aAAAlB,MAEA,WAOA,GALAiD,KAAAg8D,KAAAkC,gBAEAl+D,KAAAysB,IAAAqD,MAAA,iCAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,iBAGA/nC,KAAAk8D,oBAmEA,OADAl8D,KAAAysB,IAAA1E,KAAA,YAAA1kB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,4EACA,EAjEA/nC,KAAAg+D,qBACAh+D,KAAAi+D,eAKA,IAFA,IAAArB,EAAA//D,OAAA2F,KAAAxC,KAAAg8D,KAAAa,WACAsB,EAAA,GACA//D,EAAA,EAAAA,EAAAw+D,EAAApgE,OAAA4B,IACA,CACA,IAAA2+D,EAAA/8D,KAAAg8D,KAAAa,UAAAD,EAAAx+D,IACA2+D,EAAAxiD,QAAAgjD,gBAEAY,EAAAl8D,KAAA86D,EAEA,CAEAoB,EAAA7zB,MAAA,SAAA5uC,EAAAyL,GAAA,OAAAzL,EAAA6e,QAAAijD,sBAAAr2D,EAAAoT,QAAAijD,qBAAA,IACA,IAAA,IAAAp/D,EAAA,EAAAA,EAAA+/D,EAAA3hE,OAAA4B,IAEA+/D,EAAA//D,GAAAiyB,aAMA,IAFA,IAAA8sC,EAAAtgE,OAAA2F,KAAAxC,KAAAg8D,KAAAoB,OACAgB,EAAA,GACAhgE,EAAA,EAAAA,EAAA++D,EAAA3gE,OAAA4B,IACA,CACA,IAAAk/D,EAAAt9D,KAAAg8D,KAAAoB,MAAAD,EAAA/+D,IACAk/D,EAAA/iD,QAAAgjD,gBAEAa,EAAAn8D,KAAAq7D,EAEA,CAEAc,EAAA9zB,MAAA,SAAA5uC,EAAAyL,GAAA,OAAAzL,EAAA6e,QAAAijD,sBAAAr2D,EAAAoT,QAAAijD,qBAAA,IACA,IAAA,IAAAp/D,EAAA,EAAAA,EAAAggE,EAAA5hE,OAAA4B,IAEAggE,EAAAhgE,GAAAiyB,aAwBA,OArBArwB,KAAAq+D,oBACAr+D,KAAAua,QAAAihD,2BAEAx7D,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,0CAGA/nC,KAAAk9D,SAGAl9D,KAAAua,QAAAkhD,4CAEAz7D,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,4CAGA/nC,KAAAs+D,UAEAt+D,KAAAk8D,oBAAAl8D,KAAA0xB,MAAAjF,IAAA+vB,gBACA,CAOA,GAAA,CAAAv+C,IAAA,kBAAAlB,MACA,SAAAg9B,GACA,IAAAwkC,EAAAv+D,KACAA,KAAAg8D,KAAAkC,gBAEAl+D,KAAAysB,IAAAqD,MAAA,iCAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,sBAIA,IAAA61B,EAAA,mBAAA7jC,GAAAA,EAcA,GAZA6jC,IAEA59D,KAAAysB,IAAA1E,KAAA,YAAA1kB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,gIACA61B,EAAA,SAAArkD,GAEAA,GAEAglD,EAAA9xC,IAAAzb,MAAA,YAAA3N,OAAAk7D,EAAA5sC,KAAA,QAAAtuB,OAAAk7D,EAAAlnD,KAAA,MAAAhU,OAAAk7D,EAAAhkD,QAAAwtB,KAAA,0CAAA1kC,OAAAkW,GAAAA,EAEA,GAGAvZ,KAAAk8D,oBAsFA,OAFAl8D,KAAAysB,IAAA1E,KAAA,YAAA1kB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,iFAEA61B,IApFA,IAAA/pB,EAAA7zC,KAAA0xB,MAAAiG,8CAAA,cAEA33B,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,iCAGA8L,EAAAG,WAAAh0C,KAAAw+D,wBAAAlhE,KAAA0C,OACA6zC,EAAAG,WAAAh0C,KAAAy+D,kBAAAnhE,KAAA0C,OAKA,IAFA,IAAA48D,EAAA//D,OAAA2F,KAAAxC,KAAAg8D,KAAAa,WACAsB,EAAA,GACA//D,EAAA,EAAAA,EAAAw+D,EAAApgE,OAAA4B,IACA,CACA,IAAA2+D,EAAA/8D,KAAAg8D,KAAAa,UAAAD,EAAAx+D,IACA2+D,EAAAxiD,QAAAgjD,gBAEAY,EAAAl8D,KAAA86D,EAEA,CAEAoB,EAAA7zB,MAAA,SAAA5uC,EAAAyL,GAAA,OAAAzL,EAAA6e,QAAAijD,sBAAAr2D,EAAAoT,QAAAijD,qBAAA,IACA,IAAA,IAAAp/D,EAAA,EAAAA,EAAA+/D,EAAA3hE,OAAA4B,IAEAy1C,EAAAG,WAAAmqB,EAAA//D,GAAAsgE,gBAAAphE,KAAA6gE,EAAA//D,KAOA,IAFA,IAAA++D,EAAAtgE,OAAA2F,KAAAxC,KAAAg8D,KAAAoB,OACAgB,EAAA,GACAhgE,EAAA,EAAAA,EAAA++D,EAAA3gE,OAAA4B,IACA,CACA,IAAAk/D,EAAAt9D,KAAAg8D,KAAAoB,MAAAD,EAAA/+D,IACAk/D,EAAA/iD,QAAAgjD,gBAEAa,EAAAn8D,KAAAq7D,EAEA,CAGAc,EAAA9zB,MAAA,SAAA5uC,EAAAyL,GAAA,OAAAzL,EAAA6e,QAAAijD,sBAAAr2D,EAAAoT,QAAAijD,qBAAA,IACA,IAAA,IAAAp/D,EAAA,EAAAA,EAAAggE,EAAA5hE,OAAA4B,IACA,CACA,IAAAk/D,EAAAc,EAAAhgE,GACAy1C,EAAAG,WAAAspB,EAAAoB,gBAAAphE,KAAAggE,GACA,CAEAzpB,EAAAG,WAAAh0C,KAAA2+D,uBAAArhE,KAAA0C,OAEAA,KAAAua,QAAAihD,2BAEAx7D,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,2DAEA8L,EAAAG,WAAAh0C,KAAA69D,WAAAvgE,KAAA0C,QAGAA,KAAAua,QAAAkhD,4CAEAz7D,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,6DAEA8L,EAAAG,WAAAh0C,KAAA4+D,wBAAAthE,KAAA0C,QAGA6zC,EAAAK,MACA,SAAA36B,GAOA,OALAglD,EAAArC,oBAAAqC,EAAA7sC,MAAAjF,IAAA+vB,eACA+hB,EAAAvC,KAAA5kC,aAAA,GAEAmnC,EAAA9xC,IAAAqD,MAAA,YAAAzsB,OAAAk7D,EAAA5sC,KAAA,QAAAtuB,OAAAk7D,EAAAlnD,KAAA,MAAAhU,OAAAk7D,EAAAhkD,QAAAwtB,KAAA,8BAEA61B,GACA,GAQA,GAAA,CAAA3/D,IAAA,oBAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,yBAEA,CACA,GAAA,CAAA9pC,IAAA,yBAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAq+D,oBACAtkC,GACA,GAIA,CAAA97B,IAAA,2BAAAlB,MACA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,gCAEA,CACA,GAAA,CAAA9pC,IAAA,gCAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAA6+D,2BACA9kC,GACA,GAAA,CAAA97B,IAAA,qBAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,0BAEA,CACA,GAAA,CAAA9pC,IAAA,0BAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAA8+D,qBACA/kC,GACA,GAAA,CAAA97B,IAAA,mBAAAlB,MAEA,WAEAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,8CAEA/nC,KAAA6+D,2BAIA,IAFA,IAAA1B,EAAAtgE,OAAA2F,KAAAxC,KAAAg8D,KAAAoB,OACA2B,EAAA,GACA3gE,EAAA,EAAAA,EAAA++D,EAAA3gE,OAAA4B,IACA,CACA,IAAAk/D,EAAAt9D,KAAAg8D,KAAAoB,MAAAD,EAAA/+D,IACA2gE,EAAA98D,KAAAq7D,EACA,CACA,IAAA,IAAAl/D,EAAA,EAAAA,EAAA2gE,EAAAviE,OAAA4B,IAEA2gE,EAAA3gE,GAAA4gE,kBAKA,OAHAh/D,KAAA8+D,qBACA9+D,KAAAi/D,0BACAj/D,KAAAo8D,8BAAAp8D,KAAA0xB,MAAAjF,IAAA+vB,gBACA,CACA,GAAA,CAAAv+C,IAAA,wBAAAlB,MACA,SAAAg9B,GACA,IAAAmlC,EAAAl/D,KACA6zC,EAAA7zC,KAAA0xB,MAAAiG,8CAAA,cAGAimC,EAAA,mBAAA7jC,GAAAA,EAEA6jC,IAEA59D,KAAAysB,IAAA1E,KAAA,YAAA1kB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,sIACA61B,EAAA,SAAArkD,GAEAA,GAEA2lD,EAAAzyC,IAAAzb,MAAA,YAAA3N,OAAA67D,EAAAvtC,KAAA,QAAAtuB,OAAA67D,EAAA7nD,KAAA,MAAAhU,OAAA67D,EAAA3kD,QAAAwtB,KAAA,gDAAA1kC,OAAAkW,GAAAA,EAEA,GAGAs6B,EAAAG,WAAAh0C,KAAAm/D,8BAAA7hE,KAAA0C,OAIA,IAFA,IAAAm9D,EAAAtgE,OAAA2F,KAAAxC,KAAAg8D,KAAAoB,OACA2B,EAAA,GACA3gE,EAAA,EAAAA,EAAA++D,EAAA3gE,OAAA4B,IACA,CACA,IAAAk/D,EAAAt9D,KAAAg8D,KAAAoB,MAAAD,EAAA/+D,IACA2gE,EAAA98D,KAAAq7D,EACA,CACA,IAAA,IAAAl/D,EAAA,EAAAA,EAAA2gE,EAAAviE,OAAA4B,IAEAy1C,EAAAG,WAAA+qB,EAAA3gE,GAAAghE,qBAAA9hE,KAAAyhE,EAAA3gE,KAEAy1C,EAAAG,WAAAh0C,KAAAq/D,wBAAA/hE,KAAA0C,OACA6zC,EAAAG,WAAAh0C,KAAAs/D,6BAAAhiE,KAAA0C,OAEA6zC,EAAAK,MACA,SAAA36B,GAOA,OALA2lD,EAAAlD,KAAA5kC,aAAA,GAEA8nC,EAAAzyC,IAAAqD,MAAA,YAAAzsB,OAAA67D,EAAAvtC,KAAA,QAAAtuB,OAAA67D,EAAA7nD,KAAA,MAAAhU,OAAA67D,EAAA3kD,QAAAwtB,KAAA,uCAEAm3B,EAAA9C,8BAAA8C,EAAAxtC,MAAAjF,IAAA+vB,eACAohB,EAAArkD,EACA,GACA,GAAA,CAAAtb,IAAA,0BAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,+BAEA,CACA,GAAA,CAAA9pC,IAAA,+BAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAi/D,0BACAllC,GACA,GAIA,CAAA97B,IAAA,yBAAAlB,MACA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,8BAEA,CACA,GAAA,CAAA9pC,IAAA,8BAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAu/D,yBACAxlC,GACA,GAAA,CAAA97B,IAAA,mBAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,wBAEA,CACA,GAAA,CAAA9pC,IAAA,wBAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAw/D,mBACAzlC,GACA,GAAA,CAAA97B,IAAA,iBAAAlB,MAEA,WAEAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,4CAEA/nC,KAAAu/D,yBAIA,IAFA,IAAApC,EAAAtgE,OAAA2F,KAAAxC,KAAAg8D,KAAAoB,OACAqC,EAAA,GACArhE,EAAA,EAAAA,EAAA++D,EAAA3gE,OAAA4B,IACA,CACA,IAAAk/D,EAAAt9D,KAAAg8D,KAAAoB,MAAAD,EAAA/+D,IACAqhE,EAAAx9D,KAAAq7D,EACA,CACA,IAAA,IAAAl/D,EAAA,EAAAA,EAAAqhE,EAAAjjE,OAAA4B,IAEAqhE,EAAArhE,GAAAshE,gBAKA,OAHA1/D,KAAAw/D,mBACAx/D,KAAA2/D,wBACA3/D,KAAAq8D,4BAAAr8D,KAAA0xB,MAAAjF,IAAA+vB,gBACA,CACA,GAAA,CAAAv+C,IAAA,sBAAAlB,MACA,SAAAg9B,GACA,IAAA6lC,EAAA5/D,KACA6zC,EAAA7zC,KAAA0xB,MAAAiG,8CAAA,cAGAimC,EAAA,mBAAA7jC,GAAAA,EAEA6jC,IAEA59D,KAAAysB,IAAA1E,KAAA,YAAA1kB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,oIACA61B,EAAA,SAAArkD,GAEAA,GAEAqmD,EAAAnzC,IAAAzb,MAAA,YAAA3N,OAAAu8D,EAAAjuC,KAAA,QAAAtuB,OAAAu8D,EAAAvoD,KAAA,MAAAhU,OAAAu8D,EAAArlD,QAAAwtB,KAAA,8CAAA1kC,OAAAkW,GAAAA,EAEA,GAGAs6B,EAAAG,WAAAh0C,KAAA6/D,4BAAAviE,KAAA0C,OAIA,IAFA,IAAAm9D,EAAAtgE,OAAA2F,KAAAxC,KAAAg8D,KAAAoB,OACAqC,EAAA,GACArhE,EAAA,EAAAA,EAAA++D,EAAA3gE,OAAA4B,IACA,CACA,IAAAk/D,EAAAt9D,KAAAg8D,KAAAoB,MAAAD,EAAA/+D,IACAqhE,EAAAx9D,KAAAq7D,EACA,CACA,IAAA,IAAAl/D,EAAA,EAAAA,EAAAqhE,EAAAjjE,OAAA4B,IAEAy1C,EAAAG,WAAAyrB,EAAArhE,GAAA0hE,mBAAAxiE,KAAAmiE,EAAArhE,KAEAy1C,EAAAG,WAAAh0C,KAAA+/D,sBAAAziE,KAAA0C,OACA6zC,EAAAG,WAAAh0C,KAAAggE,2BAAA1iE,KAAA0C,OAEA6zC,EAAAK,MACA,SAAA36B,GAOA,OALAqmD,EAAA5D,KAAA5kC,aAAA,GAEAwoC,EAAAnzC,IAAAqD,MAAA,YAAAzsB,OAAAu8D,EAAAjuC,KAAA,QAAAtuB,OAAAu8D,EAAAvoD,KAAA,MAAAhU,OAAAu8D,EAAArlD,QAAAwtB,KAAA,qCAEA63B,EAAAvD,4BAAAuD,EAAAluC,MAAAjF,IAAA+vB,eACAohB,EAAArkD,EACA,GACA,GAAA,CAAAtb,IAAA,wBAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,6BAEA,CACA,GAAA,CAAA9pC,IAAA,6BAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAA2/D,wBACA5lC,GACA,GAIA,CAAA97B,IAAA,SAAAlB,MACA,SAAAkjE,EAAAC,EAAAC,EAAAC,GAEA,IAAAC,EAAA,iBAAAJ,EAAAjgE,KAAAua,QAAA6gD,2BAAA6E,EACAK,EAAA,iBAAAJ,EAAAlgE,KAAAua,QAAA8gD,2BAAA6E,EACAK,EAAA,iBAAAJ,EAAAngE,KAAAua,QAAA+gD,+BAAA6E,EACAK,EAAA,iBAAAJ,EAAApgE,KAAAua,QAAAghD,+BAAA6E,EAEApgE,KAAAg8D,KAAAkC,gBAEAl+D,KAAAysB,IAAAqD,MAAA,iCAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,qBAAA1kC,OAAAi9D,EAAA,kBAAAj9D,OAAAk9D,EAAA,0BAAAl9D,OAAAm9D,EAAA,cAIA,IAAAlD,EAAA,iBAAA+C,GAAArgE,KAAAgyB,YAAAyuC,SAAAJ,GACA,OAAA/C,EAMAA,EAAAgB,OAAAgC,EAAAC,EAAAC,IAJAxgE,KAAAysB,IAAAzb,MAAA,YAAA3N,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,gCAAA1kC,OAAAg9D,EAAA,sCACA,EAIA,GAAA,CAAApiE,IAAA,qBAAAlB,MACA,WAOA,OALAiD,KAAAg8D,KAAAkC,gBAEAl+D,KAAAysB,IAAAqD,MAAA,iCAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,yBAGA/nC,KAAAs+D,QACA,GAAA,CAAArgE,IAAA,cAAAlB,MAEA,SAAAkjE,EAAAC,EAAAC,EAAAC,EAAArmC,GACA,IAAA2mC,EAAA1gE,KACAqgE,EAAA,iBAAAJ,EAAAjgE,KAAAua,QAAA6gD,2BAAA6E,EACAK,EAAA,iBAAAJ,EAAAlgE,KAAAua,QAAA8gD,2BAAA6E,EACAK,EAAA,iBAAAJ,EAAAngE,KAAAua,QAAA+gD,+BAAA6E,EACAK,EAAA,iBAAAJ,EAAApgE,KAAAua,QAAAghD,+BAAA6E,EAGAxC,EAAA,mBAAA7jC,EAAAA,EACA,mBAAAqmC,EAAAA,EACA,mBAAAD,EAAAA,EACA,mBAAAD,EAAAA,EACA,mBAAAD,GAAAA,EAGArC,IAEA59D,KAAAysB,IAAA1E,KAAA,YAAA1kB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,4HACA61B,EAAA,SAAArkD,GAEAA,GAEAmnD,EAAAj0C,IAAAzb,MAAA,YAAA3N,OAAAq9D,EAAA/uC,KAAA,QAAAtuB,OAAAq9D,EAAArpD,KAAA,MAAAhU,OAAAq9D,EAAAnmD,QAAAwtB,KAAA,sCAAA1kC,OAAAkW,GAAAA,EAEA,GAGAvZ,KAAAg8D,KAAAkC,gBAEAl+D,KAAAysB,IAAAqD,MAAA,iCAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,qBAAA1kC,OAAAi9D,EAAA,kBAAAj9D,OAAAk9D,EAAA,0BAAAl9D,OAAAm9D,EAAA,mBAGA,IAAAlD,EAAA,iBAAA+C,GAAArgE,KAAAgyB,YAAAyuC,SAAAJ,GACA,IAAA/C,EACA,CACA,IAAAzrC,EAAA,YAAAxuB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,+CAAA1kC,OAAAg9D,EAAA,oCAKA,OAJArgE,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAzb,MAAA6gB,GAEA+rC,EAAA,IAAAv9D,MAAAwxB,GACA,CAEA,OAAAyrC,EAAAqD,YAAAL,EAAAC,EAAAC,EAAA5C,EACA,GAAA,CAAA3/D,IAAA,0BAAAlB,MACA,SAAAg9B,GAOA,OALA/5B,KAAAg8D,KAAAkC,gBAEAl+D,KAAAysB,IAAAqD,MAAA,iCAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,8BAGA/nC,KAAA2gE,YAAA5mC,EACA,GAAA,CAAA97B,IAAA,kBAAAlB,MAEA,WACA,IAAA6jE,EAAA5gE,KACAA,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,kCAGA,IAAAo1B,EAAAtgE,OAAA2F,KAAAxC,KAAAg8D,KAAAoB,OAGAD,EAAA7yB,MAAA,SAAA5uC,EAAAyL,GAEA,OAAAy5D,EAAA5E,KAAAoB,MAAA1hE,GAAA6e,QAAAsmD,kBAAAD,EAAA5E,KAAAoB,MAAAj2D,GAAAoT,QAAAsmD,iBACA,IACA,IAAA,IAAAziE,EAAA,EAAAA,EAAA++D,EAAA3gE,OAAA4B,IACA,CACA,IAAAk/D,EAAAt9D,KAAAg8D,KAAAoB,MAAAD,EAAA/+D,IACAk/D,EAAA/iD,QAAAumD,YAEAxD,EAAAgB,QAEA,CACAt+D,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,mCAEA,GAAA,CAAA9pC,IAAA,uBAAAlB,MACA,SAAAg9B,GACA,IAAAgnC,EAAA/gE,KACA6zC,EAAA7zC,KAAA0xB,MAAAiG,8CAAA,cAGAimC,EAAA,mBAAA7jC,EAAAA,EACA,mBAAAqmC,qBAAAA,qBACA,mBAAAD,0BAAAA,0BACA,mBAAAD,gBAAAA,gBACA,mBAAAD,iBAAAA,gBAGArC,IAEA59D,KAAAysB,IAAA1E,KAAA,YAAA1kB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,qIACA61B,EAAA,SAAArkD,GAEAA,GAEAwnD,EAAAt0C,IAAAzb,MAAA,YAAA3N,OAAA09D,EAAApvC,KAAA,QAAAtuB,OAAA09D,EAAA1pD,KAAA,MAAAhU,OAAA09D,EAAAxmD,QAAAwtB,KAAA,+CAAA1kC,OAAAkW,GAAAA,EAEA,GAGAvZ,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,YAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,uCAKA,IAAAo1B,EAAAtgE,OAAA2F,KAAAxC,KAAAg8D,KAAAoB,OAGAD,EAAA7yB,MAAA,SAAA5uC,EAAAyL,GAEA,OAAA45D,EAAA/E,KAAAoB,MAAA1hE,GAAA6e,QAAAsmD,kBAAAE,EAAA/E,KAAAoB,MAAAj2D,GAAAoT,QAAAsmD,iBACA,IACA,IAAA,IAAAziE,EAAA,EAAAA,EAAA++D,EAAA3gE,OAAA4B,IACA,CACA,IAAAk/D,EAAAt9D,KAAAg8D,KAAAoB,MAAAD,EAAA/+D,IACAk/D,EAAA/iD,QAAAumD,YAEAjtB,EAAAG,WAAAspB,EAAAqD,YAAArjE,KAAAggE,GAEA,CAEAzpB,EAAAK,MACA,SAAA36B,GAOA,OALAwnD,EAAAzE,wBAAAyE,EAAArvC,MAAAjF,IAAA+vB,eACAukB,EAAA/E,KAAA5kC,aAAA,GAEA2pC,EAAAt0C,IAAAqD,MAAA,YAAAzsB,OAAA09D,EAAApvC,KAAA,QAAAtuB,OAAA09D,EAAA1pD,KAAA,MAAAhU,OAAA09D,EAAAxmD,QAAAwtB,KAAA,oCAEA61B,EAAArkD,EACA,GACA,IAAA,CAn1BA,CAAAsd,GAs1BAn3B,EAAAD,QAAAo8D,CjHqrfA,EAAE,CAAC,4BAA4B,KAAK,IAAI,CAAC,SAAS17D,EAAQT,EAAOD,GkHjihBjE,IAAAo3B,EAAA12B,EAAA,6BAEA6gE,EACA,CACAC,oBAAA,EAIA1D,gBAAA,EACAC,sBAAA,EAEAR,kBAAA,EACAC,iBAAA,EAEAtB,UAAA,CAAA,EAEAuF,UAAA,IAGAC,EAAA,SAAAC,GAEA,SAAAD,EAAA5qD,EAAAgb,EAAA9a,GACA,IAAA4qD,EAAAtjE,iBAAAiC,KAAAmhE,IAGAE,EAAA3iE,WAAAsB,KAAAmhE,EAAA,CAAA5qD,EADA1Z,OAAAszB,OAAA,CAAA,EAAAzD,KAAAriB,MAAAqiB,KAAApmB,UAAA06D,IAAAzvC,GACA9a,KACA8D,QAAA0mD,qBAEAI,EAAA9mD,QAAA0mD,mBAAA,kBAAA59D,OAAAg+D,EAAA3vC,MAAAE,YAGAyvC,EAAA1qD,YAAA,eAGA0qD,EAAArF,KAAAqF,EAAA3vC,MAGA2vC,EAAApF,QAAAoF,EAAArF,KAAAC,QAEAoF,EAAAnF,qBAAA,EACAmF,EAAAlF,qBAAA,EAEA,IAAA,IAAA/9D,EAAA,EAAAA,EAAAijE,EAAA9mD,QAAA2mD,UAAA1kE,OAAA4B,IACA,CACA,IAAAkjE,EAAAD,EAAA9mD,QAAA2mD,UAAA9iE,GAEAkjE,EAAAzjE,eAAA,YAAAyjE,EAAAzjE,eAAA,aAMAyjE,EAAAC,SAEAD,EAAAC,OAAA,iBAAAl+D,OAAAg+D,EAAA1vC,KAAA,QAAAtuB,OAAAg+D,EAAAhqD,KAAA,MAAAhU,OAAAg+D,EAAA9mD,QAAA0mD,mBAAA,qBAEAI,EAAArF,KAAAwF,iBAAAC,mBAAAH,EAAAI,OAAAJ,EAAA38B,QAAA28B,EAAAK,SAAAL,EAAAC,SARAF,EAAA50C,IAAAzb,MAAA,iBAAA3N,OAAAg+D,EAAA1vC,KAAA,QAAAtuB,OAAAg+D,EAAAhqD,KAAA,MAAAhU,OAAAg+D,EAAA9mD,QAAA0mD,mBAAA,qCAAA59D,OAAAjF,EAAA,0BAAAkjE,EAUA,CAAA,OAAAD,CACA,CAIA,OAAAhiE,UAAA8hE,EAAAC,GAAAljE,cAAAijE,EAAA,CAAA,CAAAljE,IAAA,qBAAAlB,MACA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,iBAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA0mD,mBAAA,0BAEA,CACA,GAAA,CAAAhjE,IAAA,0BAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAg+D,qBACAjkC,GACA,GAAA,CAAA97B,IAAA,eAAAlB,MAEA,WAOA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,iBAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA0mD,mBAAA,oBAEA,CACA,GAAA,CAAAhjE,IAAA,oBAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAi+D,eACAlkC,GACA,GAAA,CAAA97B,IAAA,aAAAlB,MAEA,WAOA,OALAiD,KAAAg8D,KAAAkC,gBAEAl+D,KAAAysB,IAAAqD,MAAA,8BAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA0mD,mBAAA,iBAGAjhE,KAAAk8D,qBAUAl8D,KAAAysB,IAAA1E,KAAA,iBAAA1kB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA0mD,mBAAA,4EACA,IATAjhE,KAAAg+D,qBACAh+D,KAAAi+D,eACAj+D,KAAAq+D,oBACAr+D,KAAAk8D,oBAAAl8D,KAAAg8D,KAAAvvC,IAAA+vB,gBACA,EAOA,GAAA,CAAAv+C,IAAA,kBAAAlB,MACA,SAAAg9B,GACA,IAAA6nC,EAAA5hE,KAMA,GALAA,KAAAg8D,KAAAkC,gBAEAl+D,KAAAysB,IAAAqD,MAAA,8BAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA0mD,mBAAA,sBAGAjhE,KAAAk8D,oBA4BA,OAFAl8D,KAAAysB,IAAA1E,KAAA,iBAAA1kB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA0mD,mBAAA,iFAEAlnC,IA1BA,IAAA8Z,EAAA7zC,KAAAg8D,KAAArkC,8CAAA,cAEA33B,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAuD,KAAA,iBAAA3sB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA0mD,mBAAA,iCAGAptB,EAAAG,WAAAh0C,KAAAw+D,wBAAAlhE,KAAA0C,OACA6zC,EAAAG,WAAAh0C,KAAAy+D,kBAAAnhE,KAAA0C,OACA6zC,EAAAG,WAAAh0C,KAAA2+D,uBAAArhE,KAAA0C,OAEA6zC,EAAAK,MACA,SAAA36B,GAOA,OALAqoD,EAAA1F,oBAAA0F,EAAA5F,KAAAvvC,IAAA+vB,eACAolB,EAAA5F,KAAA5kC,aAAA,GAEAwqC,EAAAn1C,IAAAuD,KAAA,iBAAA3sB,OAAAu+D,EAAAjwC,KAAA,QAAAtuB,OAAAu+D,EAAAvqD,KAAA,MAAAhU,OAAAu+D,EAAArnD,QAAA0mD,mBAAA,8BAEAlnC,GACA,GAQA,GAAA,CAAA97B,IAAA,oBAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,iBAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA0mD,mBAAA,yBAEA,CACA,GAAA,CAAAhjE,IAAA,yBAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAq+D,oBACAtkC,GACA,GAAA,CAAA97B,IAAA,cAAAlB,MAGA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,iBAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA0mD,mBAAA,mBAEA,CACA,GAAA,CAAAhjE,IAAA,mBAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAA6hE,cACA9nC,GACA,GAAA,CAAA97B,IAAA,SAAAlB,MACA,WAEA,OAAAiD,KAAA6hE,aACA,GAAA,CAAA5jE,IAAA,cAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAA6hE,cACA9nC,GACA,GAAA,CAAA97B,IAAA,aAAAlB,MAGA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,iBAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA0mD,mBAAA,kBAEA,CACA,GAAA,CAAAhjE,IAAA,kBAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAy8D,aACA1iC,GACA,GAAA,CAAA97B,IAAA,QAAAlB,MACA,WAEA,OAAAiD,KAAAy8D,YACA,GAAA,CAAAx+D,IAAA,aAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAy8D,aACA1iC,GACA,IAAA,CAlMA,CAAAlD,GAqMAn3B,EAAAD,QAAA0hE,ClHmihBA,EAAE,CAAC,4BAA4B,KAAK,IAAI,CAAC,SAAShhE,EAAQT,EAAOD,GmH3vhBjE,IAAAo3B,EAAA12B,EAAA,6BAEA2hE,EACA,CACAC,mBAAA,EACAC,2BAAA,EACAC,8BAAA,EAEAC,gBAAA,EAIA3E,gBAAA,EACAC,sBAAA,EAIAsD,YAAA,EACAD,kBAAA,EAEA7D,kBAAA,EACAC,iBAAA,EAEAkF,SAAA,EACAC,KAAA,EACAC,aAAA,EACAC,YAAA,IAEApB,UAAA,GAEAqB,iBAAA,GAEAC,YAAA,GAEA7G,UAAA,CAAA,GAGA8E,EAAA,SAAAgC,GAEA,SAAAhC,EAAAlqD,EAAAgb,EAAA9a,GACA,IAAAisD,EAAA3kE,iBAAAiC,KAAAygE,IAGAiC,EAAAhkE,WAAAsB,KAAAygE,EAAA,CAAAlqD,EADA1Z,OAAAszB,OAAA,CAAA,EAAAzD,KAAAriB,MAAAqiB,KAAApmB,UAAAw7D,IAAAvwC,GACA9a,KACA8D,QAAA2nD,iBAEAQ,EAAAnoD,QAAA2nD,eAAA,cAAA7+D,OAAAq/D,EAAAhxC,MAAAE,YAEA8wC,EAAA/rD,YAAA,WAEA+rD,EAAA1G,KAAA0G,EAAAhxC,MAEAgxC,EAAAzG,QAAAyG,EAAA1G,KAAAC,QAEAyG,EAAAxG,qBAAA,EACAwG,EAAAvG,qBAAA,EACAuG,EAAAC,uBAAA,EACAD,EAAAE,8BAAA,EACAF,EAAAG,4BAAA,EAIA,IAAA,IAAAzkE,EAAA,EAAAA,EAAAskE,EAAAnoD,QAAA2mD,UAAA1kE,OAAA4B,IACA,CACA,IAAA2hD,EAAA2iB,EAAAnoD,QAAA2mD,UAAA9iE,GAEA2hD,EAAAliD,eAAA,SAAAkiD,EAAAliD,eAAA,aAMAkiD,EAAAwhB,SAEAxhB,EAAAwhB,OAAA,aAAAl+D,OAAAq/D,EAAA/wC,KAAA,QAAAtuB,OAAAq/D,EAAArrD,KAAA,MAAAhU,OAAAq/D,EAAAnoD,QAAA2nD,eAAA,qBAEAQ,EAAA1G,KAAAwF,iBAAAsB,YAAA/iB,EAAA1oC,KAAA0oC,EAAA4hB,SAAA5hB,EAAAwhB,SARAmB,EAAAj2C,IAAAzb,MAAA,aAAA3N,OAAAq/D,EAAA/wC,KAAA,QAAAtuB,OAAAq/D,EAAArrD,KAAA,MAAAhU,OAAAq/D,EAAAnoD,QAAA2nD,eAAA,6BAAA7+D,OAAAjF,EAAA,0BAAA2hD,EAUA,CAIA,IAAA,IAAA3hD,EAAA,EAAAA,EAAAskE,EAAAnoD,QAAAgoD,iBAAA/lE,OAAA4B,IACA,CACA,IAAAkjE,EAAAoB,EAAAnoD,QAAAgoD,iBAAAnkE,GAEAkjE,EAAAzjE,eAAA,YAAAyjE,EAAAzjE,eAAA,aAMAyjE,EAAAC,SAEAD,EAAAC,OAAA,aAAAl+D,OAAAq/D,EAAA/wC,KAAA,QAAAtuB,OAAAq/D,EAAArrD,KAAA,MAAAhU,OAAAq/D,EAAAnoD,QAAA2nD,eAAA,qBAEAQ,EAAA1G,KAAAwF,iBAAAC,mBAAAH,EAAAI,OAAAJ,EAAA38B,QAAA28B,EAAAK,SAAAL,EAAAC,SARAmB,EAAAj2C,IAAAzb,MAAA,aAAA3N,OAAAq/D,EAAA/wC,KAAA,QAAAtuB,OAAAq/D,EAAArrD,KAAA,MAAAhU,OAAAq/D,EAAAnoD,QAAA2nD,eAAA,qCAAA7+D,OAAAjF,EAAA,0BAAAkjE,EAUA,CAGA,GAAAoB,EAAAnoD,QAAA6nD,IACA,CACA,IAAAW,EAAAL,EAAAnoD,QAAA4nD,QAAAO,EAAAnoD,QAAA4nD,QAAA,QAAA9+D,OAAAq/D,EAAAnoD,QAAA2nD,gBACAc,EAAAN,EAAAnoD,QAAA8nD,YAAAK,EAAAnoD,QAAA8nD,YAAAU,EACAL,EAAA1G,KAAAiH,OAAAC,OAAAH,EAAAL,EAAAnoD,QAAA6nD,IAAAY,EAAAN,EAAAnoD,QAAA+nD,YACA,CAOAI,EAAAS,YAAA,CAAA,EACA,IAAA,IAAA/kE,EAAA,EAAAA,EAAAskE,EAAAnoD,QAAAioD,YAAAhmE,OAAA4B,IACA,CACAskE,EAAAnoD,QAAAioD,YAAApkE,GACAskE,EAAAU,cAAAV,EAAAnoD,QAAAioD,YAAApkE,GACA,CAAA,OAAAskE,CACA,CAAA,OAAArjE,UAAAohE,EAAAgC,GAAAvkE,cAAAuiE,EAAA,CAAA,CAAAxiE,IAAA,gBAAAlB,MAEA,SAAAmjE,EAAApgB,EAAAujB,EAAAC,EAAAC,GAEA,IAAAC,GAAA,EAEA,UAAAllE,QAAA4hE,GAIAsD,EAAAtD,EAKAsD,EACA,CACAC,eAAAvD,EACAwD,aAAA5jB,EACA6jB,2BAAAN,EACArB,0BAAAsB,EACAM,aAPA,iBAAAL,EAAAA,EAAA,WAWA,iBAAAC,EAAAC,gBAAA,iBAAAD,EAAAE,aAEA1jE,KAAAysB,IAAAzb,MAAA,aAAA3N,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,2EAAAsB,IAIAxjE,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,wBAAA7+D,OAAAmgE,EAAAC,eAAA,0BAAApgE,OAAAmgE,EAAAE,aAAA,MAGA1jE,KAAAmjE,YAAAK,EAAAC,gBAAAD,EAEA,GAIA,CAAAvlE,IAAA,qBAAAlB,MACA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,0BAEA,CACA,GAAA,CAAAjkE,IAAA,0BAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAg+D,qBACAjkC,GACA,GAAA,CAAA97B,IAAA,eAAAlB,MAEA,WAOA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,oBAEA,CACA,GAAA,CAAAjkE,IAAA,oBAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAi+D,eACAlkC,GACA,GAAA,CAAA97B,IAAA,aAAAlB,MAEA,WAOA,OALAiD,KAAAg8D,KAAAkC,gBAEAl+D,KAAAysB,IAAAqD,MAAA,0BAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,iBAGAliE,KAAAk8D,qBAUAl8D,KAAAysB,IAAA1E,KAAA,aAAA1kB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,4EACA,IATAliE,KAAAg+D,qBACAh+D,KAAAi+D,eACAj+D,KAAAq+D,oBACAr+D,KAAAk8D,oBAAAl8D,KAAAg8D,KAAAvvC,IAAA+vB,gBACA,EAOA,GAAA,CAAAv+C,IAAA,kBAAAlB,MACA,SAAAg9B,GACA,IAAA8pC,EAAA7jE,KAMA,GALAA,KAAAg8D,KAAAkC,gBAEAl+D,KAAAysB,IAAAqD,MAAA,0BAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,sBAGAliE,KAAAk8D,oBA4BA,OAFAl8D,KAAAysB,IAAA1E,KAAA,aAAA1kB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,iFAEAnoC,IA1BA,IAAA8Z,EAAA7zC,KAAAg8D,KAAArkC,8CAAA,cAEA33B,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAuD,KAAA,aAAA3sB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,iCAGAruB,EAAAG,WAAAh0C,KAAAw+D,wBAAAlhE,KAAA0C,OACA6zC,EAAAG,WAAAh0C,KAAAy+D,kBAAAnhE,KAAA0C,OACA6zC,EAAAG,WAAAh0C,KAAA2+D,uBAAArhE,KAAA0C,OAEA6zC,EAAAK,MACA,SAAA36B,GAOA,OALAsqD,EAAA3H,oBAAA2H,EAAA7H,KAAAvvC,IAAA+vB,eACAqnB,EAAA7H,KAAA5kC,aAAA,GAEAysC,EAAAp3C,IAAAuD,KAAA,aAAA3sB,OAAAwgE,EAAAlyC,KAAA,QAAAtuB,OAAAwgE,EAAAxsD,KAAA,MAAAhU,OAAAwgE,EAAAtpD,QAAA2nD,eAAA,8BAEAnoC,GACA,GAQA,GAAA,CAAA97B,IAAA,oBAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,yBAEA,CACA,GAAA,CAAAjkE,IAAA,yBAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAq+D,oBACAtkC,GACA,GAIA,CAAA97B,IAAA,iBAAAlB,MACA,SAAA+mE,EAAA3D,EAAAlpD,GAOA,OAJAjX,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,sBAEA,CACA,GAAA,CAAAjkE,IAAA,sBAAAlB,MACA,SAAAg9B,GAEA,OAAAA,GACA,GAAA,CAAA97B,IAAA,SAAAlB,MAEA,SAAA+mE,EAAA3D,EAAAC,GAEA,IAAAE,EAAA,iBAAAwD,EAAAA,EACA,iBAAA9jE,KAAAua,QAAAwnD,mBAAA/hE,KAAAua,QAAAwnD,kBACA,IAAAzB,EAGA,OADAtgE,KAAAysB,IAAAzb,MAAA,aAAA3N,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,sBAAA7+D,OAAAi9D,EAAA,YAAAj9D,OAAAygE,EAAA,6CACA,EAGA,IAAAN,EAAAxjE,KAAAmjE,YAAA7C,GAEA,IAAAkD,EAGA,OADAxjE,KAAAysB,IAAAzb,MAAA,aAAA3N,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,sBAAA7+D,OAAAi9D,EAAA,YAAAj9D,OAAAygE,EAAA,kCACA,EAGA,IAUAC,EACAjnB,EAXAyjB,EAAA,iBAAAJ,EAAAA,EACA,iBAAAqD,EAAAQ,0BAAAR,EAAAQ,0BACA,iBAAAhkE,KAAAua,QAAAynD,2BAAAhiE,KAAAua,QAAAynD,0BAEA,IAAAzB,EAGA,OADAvgE,KAAAysB,IAAAzb,MAAA,aAAA3N,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,sBAAA7+D,OAAAi9D,EAAA,YAAAj9D,OAAAygE,EAAA,6DACA,EAMA,WAAAxlE,QAAA8hE,IAEAtjB,EAAAsjB,EACA2D,EAAA,uBAQAjnB,EAAA,iBAJAinB,EAAA,iBAAA3D,EAAAA,EACA,iBAAAoD,EAAAvB,6BAAAuB,EAAAvB,6BACA,iBAAAjiE,KAAAua,QAAA0nD,8BAAAjiE,KAAAua,QAAA0nD,8BAEAjiE,KAAAg8D,KAAAiI,aAAAC,iBAAAH,QAAA13D,EAIArM,KAAAmkE,eAAAX,EAAAjD,EAAAzjB,GAEA98C,KAAAg8D,KAAAkC,gBAEAl+D,KAAAysB,IAAAqD,MAAA,0BAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,iBAAAhU,OAAAi9D,EAAA,kBAAAj9D,OAAAk9D,EAAA,0BAAAl9D,OAAA0gE,EAAA,cAEA/jE,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,oCAAA7+D,OAAAi9D,EAAA,sBAAAj9D,OAAAk9D,EAAA,SAGA,IAAA6D,EAAApkE,KAAAg8D,KAAAqI,oBAAAb,EAAAE,aAAA5mB,EAAA,KAAA,CAAA98C,OAQA,OANAA,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,0BAAA7+D,OAAAi9D,EAAA,qBAAAj9D,OAAA+gE,EAAA5nE,OAAA,qBAAA6G,OAAAk9D,EAAA,2BAAAl9D,OAAAmgE,EAAAI,aAAA,OAIAJ,EAAAI,cAEA,IAAA,SACA5jE,KAAAg8D,KAAAsI,kBAAAC,cAAAhE,EAAA6D,GACA,MACA,IAAA,UACApkE,KAAAg8D,KAAAsI,kBAAAE,eAAAjE,EAAA6D,GACA,MACA,IAAA,cAEApkE,KAAAg8D,KAAAsI,kBAAAG,WAAA,IAAAphE,OAAAi9D,IACA9jE,OAAA,GAEAwD,KAAAg8D,KAAAsI,kBAAAC,cAAAhE,EAAA6D,GAEA,MAGA,QACApkE,KAAAg8D,KAAAsI,kBAAAI,cAAAnE,EAAA6D,GASA,OAJApkE,KAAA2kE,cAAAnB,EAAAjD,EAAAzjB,EAAAsnB,GAEApkE,KAAA2iE,sBAAA3iE,KAAAg8D,KAAAvvC,IAAA+vB,gBAEA,CACA,GAAA,CAAAv+C,IAAA,cAAAlB,MACA,SAAAmjE,EAAAC,EAAAC,EAAArmC,GACA,IAAA6qC,EAAA5kE,KACAsgE,EAAA,iBAAAJ,EAAAA,EACA,iBAAAlgE,KAAAua,QAAAwnD,mBAAA/hE,KAAAua,QAAAwnD,kBAGAnE,EAAA,mBAAA7jC,EAAAA,EACA,mBAAAqmC,EAAAA,EACA,mBAAAD,EAAAA,EACA,mBAAAD,GAAAA,EAeA,GAZAtC,IAEA59D,KAAAysB,IAAA1E,KAAA,aAAA1kB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,4HACA61B,EAAA,SAAArkD,GAEAA,GAEAqrD,EAAAn4C,IAAAzb,MAAA,aAAA3N,OAAAuhE,EAAAjzC,KAAA,QAAAtuB,OAAAuhE,EAAAvtD,KAAA,MAAAhU,OAAAuhE,EAAArqD,QAAAwtB,KAAA,sCAAA1kC,OAAAkW,GAAAA,EAEA,IAGA+mD,EAGA,OADAtgE,KAAAysB,IAAAzb,MAAA,aAAA3N,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,qCAAA7+D,OAAAi9D,EAAA,YAAAj9D,OAAA68D,EAAA,0CACAtC,EAAAv9D,MAAA,aAAAgD,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,qCAAA7+D,OAAAi9D,EAAA,YAAAj9D,OAAA68D,EAAA,2CAGA,IAAAsD,EAAAxjE,KAAAmjE,YAAA7C,GAEA,IAAAkD,EAGA,OADAxjE,KAAAysB,IAAAzb,MAAA,aAAA3N,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,sBAAA7+D,OAAAi9D,EAAA,YAAAj9D,OAAA68D,EAAA,iCACAtC,EAAAv9D,MAAA,aAAAgD,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,sBAAA7+D,OAAAi9D,EAAA,YAAAj9D,OAAA68D,EAAA,kCAGA,IAUA6D,EACAjnB,EAXAyjB,EAAA,iBAAAJ,EAAAA,EACA,iBAAAqD,EAAAQ,0BAAAR,EAAAQ,0BACA,iBAAAhkE,KAAAua,QAAAynD,2BAAAhiE,KAAAua,QAAAynD,0BAEA,IAAAzB,EAGA,OADAvgE,KAAAysB,IAAAzb,MAAA,aAAA3N,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,sBAAA7+D,OAAAi9D,EAAA,YAAAj9D,OAAA68D,EAAA,4DACAtC,EAAAv9D,MAAA,oBAAAgD,OAAAi9D,KAMA,WAAAhiE,QAAA8hE,IAEAtjB,EAAAsjB,EACA2D,EAAA,wBAIAA,EAAA,iBAAA3D,EAAAA,EACA,iBAAAoD,EAAAvB,6BAAAuB,EAAAvB,6BACA,iBAAAjiE,KAAAua,QAAA0nD,8BAAAjiE,KAAAua,QAAA0nD,6BAEAnlB,EAAA,iBAAAinB,EAAA/jE,KAAAg8D,KAAAiI,aAAAC,iBAAAH,QAAA13D,GAGArM,KAAAg8D,KAAAkC,gBAEAl+D,KAAAysB,IAAAqD,MAAA,0BAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,iBAAAhU,OAAAi9D,EAAA,kBAAAj9D,OAAAk9D,EAAA,0BAAAl9D,OAAA0gE,EAAA,mBAEA/jE,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,uDAGA,IAAAruB,EAAA7zC,KAAA0xB,MAAAmzC,gBAEAhxB,EAAAG,YACA,SAAA8wB,GAEAF,EAAAT,eAAAX,EAAAjD,EAAAzjB,GACA8nB,EAAAG,oBAAAD,EACA,IAEAjxB,EAAAG,YACA,SAAAgxB,GAGAJ,EAAA5I,KAAAqI,oBAAAb,EAAAE,aAAA5mB,GACA,SAAAvjC,EAAA0rD,GAEA,GAAA1rD,EAGA,OADAqrD,EAAAn4C,IAAAzb,MAAA,aAAA3N,OAAAuhE,EAAAjzC,KAAA,QAAAtuB,OAAAuhE,EAAAvtD,KAAA,MAAAhU,OAAAuhE,EAAArqD,QAAA2nD,eAAA,uCAAA7+D,OAAAi9D,EAAA,YAAAj9D,OAAA68D,EAAA,4CAAA3mD,GACAyrD,EAAAzrD,GASA,OANAqrD,EAAA5I,KAAA5kC,aAAA,GAEAwtC,EAAAn4C,IAAAqD,MAAA,aAAAzsB,OAAAuhE,EAAAjzC,KAAA,QAAAtuB,OAAAuhE,EAAAvtD,KAAA,MAAAhU,OAAAuhE,EAAArqD,QAAA2nD,eAAA,0BAAA7+D,OAAAi9D,EAAA,qBAAAj9D,OAAA4hE,EAAAzoE,OAAA,qBAAA6G,OAAAk9D,EAAA,gCAAAl9D,OAAAmgE,EAAAI,aAAA,MAIAJ,EAAAI,cAEA,IAAA,SACAgB,EAAA5I,KAAAsI,kBAAAC,cAAAhE,EAAA0E,GACA,MACA,IAAA,UACAL,EAAA5I,KAAAsI,kBAAAE,eAAAjE,EAAA0E,GACA,MACA,IAAA,cAEAL,EAAA5I,KAAAsI,kBAAAG,WAAA,IAAAphE,OAAAi9D,IACA9jE,OAAA,GAEAooE,EAAA5I,KAAAsI,kBAAAC,cAAAhE,EAAA0E,GAGA,QACAL,EAAA5I,KAAAsI,kBAAAI,cAAAnE,EAAA0E,GAMA,OADAL,EAAAjC,sBAAAiC,EAAA5I,KAAAvvC,IAAA+vB,eACAwoB,GACA,GAAA,CAAAJ,GACA,IAEA/wB,EAAAG,YACA,SAAAkxB,GAEAN,EAAAD,cAAAnB,EAAAjD,EAAAzjB,GACA8nB,EAAAO,mBAAAD,EACA,IAEArxB,EAAAK,KAAA0pB,EACA,GAAA,CAAA3/D,IAAA,qBAAAlB,MACA,SAAAg9B,GAGA/5B,KAAA2gE,YAAA5mC,EACA,GAAA,CAAA97B,IAAA,gBAAAlB,MACA,SAAA+mE,EAAA3D,EAAAlpD,GAMA,OAJAjX,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,qBAEA,CACA,GAAA,CAAAjkE,IAAA,qBAAAlB,MACA,SAAAg9B,GAEA,OAAAA,GACA,GAIA,CAAA97B,IAAA,gBAAAlB,MACA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,qBAEA,CACA,GAAA,CAAAjkE,IAAA,qBAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAA08D,gBACA3iC,GACA,GAAA,CAAA97B,IAAA,UAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,eAEA,CACA,GAAA,CAAAjkE,IAAA,eAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAA28D,UACA5iC,GACA,GAAA,CAAA97B,IAAA,QAAAlB,MAEA,WAUA,OARAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,mCAEAliE,KAAA08D,gBACA18D,KAAA28D,UACA38D,KAAAy9D,eACAz9D,KAAAm8D,oBAAAn8D,KAAAg8D,KAAAvvC,IAAA+vB,gBACA,CACA,GAAA,CAAAv+C,IAAA,aAAAlB,MAEA,SAAAg9B,GACA,IAAAqrC,EAAAplE,KACA6zC,EAAA7zC,KAAAg8D,KAAArkC,8CAAA,cAEAimC,EAAA,mBAAA7jC,GAAAA,EACA6jC,IAEA59D,KAAAysB,IAAA1E,KAAA,aAAA1kB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,2HACA61B,EAAA,SAAArkD,GAEAA,GAEA6rD,EAAA34C,IAAAzb,MAAA,aAAA3N,OAAA+hE,EAAAzzC,KAAA,QAAAtuB,OAAA+hE,EAAA/tD,KAAA,MAAAhU,OAAA+hE,EAAA7qD,QAAAwtB,KAAA,qCAAA1kC,OAAAkW,GAAAA,EAEA,GAGAs6B,EAAAG,WAAAh0C,KAAA29D,mBAAArgE,KAAA0C,OACA6zC,EAAAG,WAAAh0C,KAAA89D,aAAAxgE,KAAA0C,OACA6zC,EAAAG,WAAAh0C,KAAA+9D,kBAAAzgE,KAAA0C,OAEA6zC,EAAAK,MACA,SAAA36B,GAOA,OALA6rD,EAAApJ,KAAA5kC,aAAA,GAEAguC,EAAA34C,IAAAqD,MAAA,aAAAzsB,OAAA+hE,EAAAzzC,KAAA,QAAAtuB,OAAA+hE,EAAA/tD,KAAA,MAAAhU,OAAA+hE,EAAA7qD,QAAA2nD,eAAA,4BAEAkD,EAAAjJ,oBAAAiJ,EAAApJ,KAAAvvC,IAAA+vB,eACAohB,EAAArkD,EACA,GACA,GAAA,CAAAtb,IAAA,eAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,oBAEA,CACA,GAAA,CAAAjkE,IAAA,oBAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAy9D,eACA1jC,GACA,GAIA,CAAA97B,IAAA,0BAAAlB,MACA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,+BAEA,CACA,GAAA,CAAAjkE,IAAA,+BAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAqlE,0BACAtrC,GACA,GAAA,CAAA97B,IAAA,oBAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,yBAEA,CACA,GAAA,CAAAjkE,IAAA,yBAAAlB,MACA,SAAAg9B,GAIA,OADA/5B,KAAAslE,oBACAvrC,GACA,GAAA,CAAA97B,IAAA,kBAAAlB,MAEA,WAUA,OARAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,mCAEAliE,KAAAqlE,0BACArlE,KAAAslE,oBACAtlE,KAAAulE,yBACAvlE,KAAA4iE,6BAAA5iE,KAAAg8D,KAAAvvC,IAAA+vB,gBACA,CACA,GAAA,CAAAv+C,IAAA,uBAAAlB,MAEA,SAAAg9B,GACA,IAAAyrC,EAAAxlE,KACA6zC,EAAA7zC,KAAAg8D,KAAArkC,8CAAA,cAEAimC,EAAA,mBAAA7jC,GAAAA,EACA6jC,IAEA59D,KAAAysB,IAAA1E,KAAA,aAAA1kB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,qIACA61B,EAAA,SAAArkD,GAEAA,GAEAisD,EAAA/4C,IAAAzb,MAAA,aAAA3N,OAAAmiE,EAAA7zC,KAAA,QAAAtuB,OAAAmiE,EAAAnuD,KAAA,MAAAhU,OAAAmiE,EAAAjrD,QAAAwtB,KAAA,+CAAA1kC,OAAAkW,GAAAA,EAEA,GAGAs6B,EAAAG,WAAAh0C,KAAAylE,6BAAAnoE,KAAA0C,OACA6zC,EAAAG,WAAAh0C,KAAA0lE,uBAAApoE,KAAA0C,OACA6zC,EAAAG,WAAAh0C,KAAA2lE,4BAAAroE,KAAA0C,OAEA6zC,EAAAK,MACA,SAAA36B,GAOA,OALAisD,EAAAxJ,KAAA5kC,aAAA,GAEAouC,EAAA/4C,IAAAqD,MAAA,aAAAzsB,OAAAmiE,EAAA7zC,KAAA,QAAAtuB,OAAAmiE,EAAAnuD,KAAA,MAAAhU,OAAAmiE,EAAAjrD,QAAA2nD,eAAA,sCAEAsD,EAAA5C,6BAAA4C,EAAAxJ,KAAAvvC,IAAA+vB,eACAohB,EAAArkD,EACA,GACA,GAAA,CAAAtb,IAAA,yBAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,8BAEA,CACA,GAAA,CAAAjkE,IAAA,8BAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAAulE,yBACAxrC,GACA,GAIA,CAAA97B,IAAA,wBAAAlB,MACA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,6BAEA,CACA,GAAA,CAAAjkE,IAAA,6BAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAA4lE,wBACA7rC,GACA,GAAA,CAAA97B,IAAA,kBAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,uBAEA,CACA,GAAA,CAAAjkE,IAAA,uBAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAA6lE,kBACA9rC,GACA,GAAA,CAAA97B,IAAA,gBAAAlB,MAEA,WAUA,OARAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,mCAEAliE,KAAA4lE,wBACA5lE,KAAA6lE,kBACA7lE,KAAA8lE,uBACA9lE,KAAA6iE,2BAAA7iE,KAAAg8D,KAAAvvC,IAAA+vB,gBACA,CACA,GAAA,CAAAv+C,IAAA,qBAAAlB,MAEA,SAAAg9B,GACA,IAAAgsC,EAAA/lE,KACA6zC,EAAA7zC,KAAAg8D,KAAArkC,8CAAA,cAGAimC,EAAA,mBAAA7jC,GAAAA,EACA6jC,IAEA59D,KAAAysB,IAAA1E,KAAA,aAAA1kB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAAwtB,KAAA,mIACA61B,EAAA,SAAArkD,GAEAA,GAEAwsD,EAAAt5C,IAAAzb,MAAA,aAAA3N,OAAA0iE,EAAAp0C,KAAA,QAAAtuB,OAAA0iE,EAAA1uD,KAAA,MAAAhU,OAAA0iE,EAAAxrD,QAAAwtB,KAAA,6CAAA1kC,OAAAkW,GAAAA,EAEA,GAEAs6B,EAAAG,WAAAh0C,KAAAgmE,2BAAA1oE,KAAA0C,OACA6zC,EAAAG,WAAAh0C,KAAAimE,qBAAA3oE,KAAA0C,OACA6zC,EAAAG,WAAAh0C,KAAAkmE,0BAAA5oE,KAAA0C,OAEA6zC,EAAAK,MACA,SAAA36B,GAOA,OALAwsD,EAAA/J,KAAA5kC,aAAA,GAEA2uC,EAAAt5C,IAAAqD,MAAA,aAAAzsB,OAAA0iE,EAAAp0C,KAAA,QAAAtuB,OAAA0iE,EAAA1uD,KAAA,MAAAhU,OAAA0iE,EAAAxrD,QAAA2nD,eAAA,oCAEA6D,EAAAlD,2BAAAkD,EAAA/J,KAAAvvC,IAAA+vB,eACAohB,EAAArkD,EACA,GACA,GAAA,CAAAtb,IAAA,uBAAAlB,MAEA,WAMA,OAJAiD,KAAAg8D,KAAA5kC,aAAA,GAEAp3B,KAAAysB,IAAAqD,MAAA,aAAAzsB,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAAAhU,OAAArD,KAAAua,QAAA2nD,eAAA,4BAEA,CACA,GAAA,CAAAjkE,IAAA,4BAAAlB,MACA,SAAAg9B,GAGA,OADA/5B,KAAA8lE,uBACA/rC,GACA,IAAA,CAhwBA,CAAAlD,GAmwBAn3B,EAAAD,QAAAghE,CnH6vhBA,EAAE,CAAC,4BAA4B,KAAK,IAAI,CAAC,SAAStgE,EAAQT,EAAOD;;;;;;;;;;AoH5hjBjE,IAAAqxC,EAAA3wC,EAAA,iBACA4wC,EAAA5wC,EAAA,qBAEAgmE,EAAA,WAcA,OAAAjoE,eATA,SAAAioE,IACApoE,iBAAAiC,KAAAmmE,GACAnmE,KAAAmxC,SAAA,IAAAL,EAEA9wC,KAAAoxC,aAAA,IAAAL,EAEA/wC,KAAAqxC,UAAArxC,KAAAmxC,SAAAE,SACA,GAEA,CAAA,CAAApzC,IAAA,aAAAlB,MAQA,SAAAu0C,EAAAC,EAAAC,GAEA,OAAAxxC,KAAAmxC,SAAA3e,WAAA8e,EAAAC,EAAAC,EACA,GAEA,CAAAvzC,IAAA,cAAAlB,MAOA,SAAAg2B,EAAA9b,GAEA,OAAAjX,KAAAoxC,aAAApe,YAAAD,EAAA/yB,KAAAqxC,UAAAp6B,EACA,IAAA,CArCA,GAwCAvX,EAAAD,QAAA0mE,CpHwijBA,EAAE,CAAC,oBAAoB,IAAI,gBAAgB,MAAM,IAAI,CAAC,SAAShmE,EAAQT,EAAOD,GqH5ljB9E,IAMA2xC,EAAA,WASA,OAAAlzC,eAJA,SAAAkzC,IACArzC,iBAAAiC,KAAAoxC,EACA,GAEA,CAAA,CAAAnzC,IAAA,iBAAAlB,MAOA,SAAA+0C,GAEA,MACA,CACAT,UAAAS,EAEAC,cAAA,EAEAC,OAAA,GACAC,aAAA,GAEAC,QAAA,CAAA,EAEAC,cAAA,EACAC,iBAAA,EAEA,GAEA,CAAAn0C,IAAA,qBAAAlB,MAQA,SAAA2tB,EAAA2nB,GAEAA,EAAAJ,cAAAvnB,CACA,GAEA,CAAAzsB,IAAA,oBAAAlB,MAMA,SAAAs1C,GAEAA,EAAAL,QAAAK,EAAAJ,aACAI,EAAAJ,aAAA,EACA,GAAA,CAAAh0C,IAAA,oBAAAlB,MAEA,SAAAs1C,GAWA,OARAryC,KAAAsyC,kBAAAD,GAEAA,EAAAH,SAAA,EACAG,EAAAE,kBAAA,EACAF,EAAAG,2BAAA,EACAH,EAAAI,sBAAA,EACAJ,EAAAF,cAAA,GAEA,CACA,GAEA,CAAAl0C,IAAA,iBAAAlB,MAOA,SAAA2tB,EAAA2nB,EAAAp7B,GAGA,GAAAo7B,EAAAF,aAGA,IAAAE,EAAAG,2BAAAH,EAAAH,QAAAr0C,eAAA6sB,GAEA2nB,EAAAH,QAAAG,EAAAH,QAAAxnB,GACA1qB,KAAA0yC,mBAAAhoB,EAAA2nB,QAEA,GAAAA,EAAAI,qBAEA,GAAAJ,EAAAH,QAAAS,WAAA90C,eAAA6sB,IAOA,GAJA2nB,EAAAH,QAAAG,EAAAH,QAAAS,WAAAjoB,GAEA1qB,KAAA0yC,mBAAAhoB,EAAA2nB,GAEAA,EAAAH,QAAAr0C,eAAA,SAIA,OADAw0C,EAAAJ,aAAAI,EAAAH,QAAAc,MAAAX,EAAAJ,aAAAjjC,OAAAqjC,EAAAH,QAAAY,mBAAAt2C,OAAA61C,EAAAJ,aAAAz1C,QAAA61C,EAAAH,QAAAY,mBAAAt2C,OAAA61C,EAAAH,QAAAe,iBAAAz2C,SAAAya,GACAjX,KAAA+yC,kBAAAV,QAGAA,EAAAE,iBAAAI,WAAA90C,eAAA6sB,IAGA2nB,EAAAH,QAAAG,EAAAE,iBAAAI,WAAAjoB,GACA1qB,KAAA0yC,mBAAAhoB,EAAA2nB,KAIAA,EAAAI,sBAAA,EACAzyC,KAAA0yC,mBAAAhoB,EAAA2nB,SAGA,GAAAA,EAAAH,QAAAr0C,eAAA,eAUA,GARAw0C,EAAAG,4BAEAH,EAAAG,2BAAA,EACAH,EAAAE,iBAAAF,EAAAH,SAGAlyC,KAAA0yC,mBAAAhoB,EAAA2nB,GAEAA,EAAAH,QAAAS,WAAA90C,eAAA6sB,KAGA2nB,EAAAI,sBAAA,EAEAJ,EAAAH,QAAAG,EAAAH,QAAAS,WAAAjoB,GAEA2nB,EAAAH,QAAAr0C,eAAA,UAIA,OADAw0C,EAAAJ,aAAAI,EAAAH,QAAAc,MAAAX,EAAAJ,aAAAjjC,OAAAqjC,EAAAH,QAAAY,mBAAAt2C,OAAA61C,EAAAJ,aAAAz1C,QAAA61C,EAAAH,QAAAY,mBAAAt2C,OAAA61C,EAAAH,QAAAe,iBAAAz2C,SAAAya,GACAjX,KAAA+yC,kBAAAV,QAOAryC,KAAA+yC,kBAAAV,GAIA,IAAAA,EAAAF,aACA,CAEA,GAAAE,EAAAhB,UAAAxzC,eAAA6sB,GAOA,OAJA1qB,KAAA+yC,kBAAAV,GACAryC,KAAA0yC,mBAAAhoB,EAAA2nB,GACAA,EAAAH,QAAAG,EAAAhB,UAAA3mB,GACA2nB,EAAAF,cAAA,GACA,EAIAnyC,KAAA0yC,mBAAAhoB,EAAA2nB,EAEA,CACA,OAAA,CACA,GAEA,CAAAp0C,IAAA,cAAAlB,MAOA,SAAAg2B,EAAA+e,EAAA76B,GAIA,IAFA,IAAAy8B,EAAA1zC,KAAA2zC,eAAA7B,GAEA1zC,EAAA,EAAAA,EAAA20B,EAAAv2B,OAAA4B,IAEA4B,KAAA4zC,eAAA7gB,EAAA30B,GAAAs1C,EAAAz8B,GAKA,OAFAjX,KAAAsyC,kBAAAoB,GAEAA,EAAA1B,MACA,IAAA,CA9LA,GAiMAtyC,EAAAD,QAAA2xC,CrH+ljBA,EAAE,CAAC,GAAG,IAAI,CAAC,SAASjxC,EAAQT,EAAOD,GsHtyjBnC,IAMA0xC,EAAA,WAUA,OAAAjzC,eALA,SAAAizC,IACApzC,iBAAAiC,KAAAmxC,GACAnxC,KAAAqxC,UAAA,CAAA,CACA,GAEA,CAAA,CAAApzC,IAAA,WAAAlB,MAQA,SAAAo3C,EAAAC,GAOA,OALAD,EAAAt2C,eAAAu2C,KAEAD,EAAAC,GAAA,CAAA,GAGAD,EAAAC,EACA,GAEA,CAAAn2C,IAAA,cAAAlB,MAQA,SAAAo3C,EAAAC,GASA,OAPAD,EAAAt2C,eAAA,gBAEAs2C,EAAAxB,WAAA,CAAA,GAGAwB,EAAAxB,WAAAyB,GAAA,CAAA,EAEAD,EAAAxB,WAAAyB,EACA,GAEA,CAAAn2C,IAAA,aAAAlB,MAOA,SAAAu0C,EAAAC,EAAA8C,GAEA,GAAA/C,EAAA90C,OAAA,EAEA,OAAA,EAGA,GAAA,iBAAA+0C,GAAAA,EAAA/0C,OAAA,EAEA,OAAA,EAMA,IAHA,IAAA83C,EAAAt0C,KAAAqxC,UAGAjzC,EAAA,EAAAA,EAAAkzC,EAAA90C,OAAA4B,IAEAk2C,EAAAt0C,KAAAu0C,SAAAD,EAAAhD,EAAAlzC,GAAAA,GAGAk2C,EAAAz2C,eAAA,gBAEAy2C,EAAA3B,WAAA,CAAA,GAIA,IADA,IAAA6B,EAAA,iBAAAjD,EAAAA,EAAAD,EACAlzC,EAAA,EAAAA,EAAAo2C,EAAAh4C,OAAA4B,IAEAk2C,EAAAt0C,KAAAy0C,YAAAH,EAAAE,EAAAp2C,GAAAA,GASA,OANAk2C,EAAAxB,mBAAAxB,EACAgD,EAAArB,iBAAAuB,EACAF,EAAAtB,MAAA,mBAAAqB,EAAAA,EACA,iBAAAA,EAAA,WAAA,OAAAA,CAAA,EACA,SAAAp9B,GAAA,OAAAA,CAAA,GAEA,CACA,IAAA,CA7FA,GAgGAvX,EAAAD,QAAA0xC,CtHyyjBA,EAAE,CAAC,GAAG,IAAI,CAAC,SAAShxC,EAAQT,EAAOD,GuH94jBnC,IAOA2mE,EACAC,EARAl0C,EAAAzyB,EAAAD,QAAA,CAAA,EAUA,SAAA6mE,IACA,MAAA,IAAAjmE,MAAA,kCACA,CACA,SAAAkmE,IACA,MAAA,IAAAlmE,MAAA,oCACA,CAqBA,SAAAmmE,EAAAC,GACA,GAAAL,IAAAnjE,WAEA,OAAAA,WAAAwjE,EAAA,GAGA,IAAAL,IAAAE,IAAAF,IAAAnjE,WAEA,OADAmjE,EAAAnjE,WACAA,WAAAwjE,EAAA,GAEA,IAEA,OAAAL,EAAAK,EAAA,EACA,CAAA,MAAAhqE,GACA,IAEA,OAAA2pE,EAAAtqE,KAAA,KAAA2qE,EAAA,EACA,CAAA,MAAAhqE,GAEA,OAAA2pE,EAAAtqE,KAAAkE,KAAAymE,EAAA,EACA,CACA,CAGA,EA5CA,WACA,IAEAL,EADA,mBAAAnjE,WACAA,WAEAqjE,CAEA,CAAA,MAAA7pE,GACA2pE,EAAAE,CACA,CACA,IAEAD,EADA,mBAAAK,aACAA,aAEAH,CAEA,CAAA,MAAA9pE,GACA4pE,EAAAE,CACA,CACA,CAnBA,GAwEA,IAEAI,EAFAC,EAAA,GACAC,GAAA,EAEAC,GAAA,EAEA,SAAAC,IACAF,GAAAF,IAGAE,GAAA,EACAF,EAAAnqE,OACAoqE,EAAAD,EAAAtjE,OAAAujE,GAEAE,GAAA,EAEAF,EAAApqE,QACAwqE,IAEA,CAEA,SAAAA,IACA,IAAAH,EAAA,CAGA,IAAAI,EAAAT,EAAAO,GACAF,GAAA,EAGA,IADA,IAAAtkE,EAAAqkE,EAAApqE,OACA+F,GAAA,CAGA,IAFAokE,EAAAC,EACAA,EAAA,KACAE,EAAAvkE,GACAokE,GACAA,EAAAG,GAAAI,MAGAJ,GAAA,EACAvkE,EAAAqkE,EAAApqE,MACA,CACAmqE,EAAA,KACAE,GAAA,EAnEA,SAAAM,GACA,GAAAd,IAAAK,aAEA,OAAAA,aAAAS,GAGA,IAAAd,IAAAE,IAAAF,IAAAK,aAEA,OADAL,EAAAK,aACAA,aAAAS,GAEA,IAEA,OAAAd,EAAAc,EACA,CAAA,MAAA1qE,GACA,IAEA,OAAA4pE,EAAAvqE,KAAA,KAAAqrE,EACA,CAAA,MAAA1qE,GAGA,OAAA4pE,EAAAvqE,KAAAkE,KAAAmnE,EACA,CACA,CAIA,CA0CAC,CAAAH,EAlBA,CAmBA,CAgBA,SAAAI,EAAAZ,EAAAt6D,GACAnM,KAAAymE,IAAAA,EACAzmE,KAAAmM,MAAAA,CACA,CAWA,SAAAjL,IAAA,CA5BAixB,EAAAm1C,SAAA,SAAAb,GACA,IAAA3kE,EAAA,IAAA5F,MAAAwB,UAAAlB,OAAA,GACA,GAAAkB,UAAAlB,OAAA,EACA,IAAA,IAAA4B,EAAA,EAAAA,EAAAV,UAAAlB,OAAA4B,IACA0D,EAAA1D,EAAA,GAAAV,UAAAU,GAGAwoE,EAAA3kE,KAAA,IAAAolE,EAAAZ,EAAA3kE,IACA,IAAA8kE,EAAApqE,QAAAqqE,GACAL,EAAAQ,EAEA,EAOAK,EAAAlpE,UAAA+oE,IAAA,WACAlnE,KAAAymE,IAAA9oE,MAAA,KAAAqC,KAAAmM,MACA,EACAgmB,EAAAo1C,MAAA,UACAp1C,EAAAq1C,SAAA,EACAr1C,EAAAW,IAAA,CAAA,EACAX,EAAAs1C,KAAA,GACAt1C,EAAAu1C,QAAA,GACAv1C,EAAAw1C,SAAA,CAAA,EAIAx1C,EAAAvL,GAAA1lB,EACAixB,EAAA7I,YAAApoB,EACAixB,EAAAlxB,KAAAC,EACAixB,EAAAvI,IAAA1oB,EACAixB,EAAA5L,eAAArlB,EACAixB,EAAAtI,mBAAA3oB,EACAixB,EAAAvK,KAAA1mB,EACAixB,EAAA5I,gBAAAroB,EACAixB,EAAA3I,oBAAAtoB,EAEAixB,EAAA9I,UAAA,SAAAptB,GAAA,MAAA,EAAA,EAEAk2B,EAAAy1C,QAAA,SAAA3rE,GACA,MAAA,IAAAoE,MAAA,mCACA,EAEA8xB,EAAAknC,IAAA,WAAA,MAAA,GAAA,EACAlnC,EAAA01C,MAAA,SAAA75D,GACA,MAAA,IAAA3N,MAAA,iCACA,EACA8xB,EAAA4a,MAAA,WAAA,OAAA,CAAA,CvHk5jBA,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS5sC,EAAQT,EAAOD,IACnC,SAAWK,IAAQ,YwHzkkBnB,SAAAi7D,GAGA,IAAA+M,EAAA,UAAAxpE,QAAAmB,IAAAA,IACAA,EAAAsoE,UAAAtoE,EACAuoE,EAAA,UAAA1pE,QAAAoB,IAAAA,IACAA,EAAAqoE,UAAAroE,EACAuoE,EAAA,UAAA3pE,QAAAwB,IAAAA,EAEAmoE,EAAAnoE,SAAAmoE,GACAA,EAAApoE,SAAAooE,GACAA,EAAAloE,OAAAkoE,IAEAlN,EAAAkN,GAQA,IAAAC,EAiCAjqE,EA9BAkqE,EAAA,WAGAx0C,EAAA,GACAy0C,EAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAA,IACAC,EAAA,GACAC,EAAA,IACAxN,EAAA,IAGAyN,EAAA,QACAC,EAAA,eACAC,EAAA,4BAGAC,EAAA,CACAC,SAAA,kDACA,YAAA,iDACA,gBAAA,iBAIAC,EAAAp1C,EAAAy0C,EACAjtD,EAAAvY,KAAAuY,MACA6tD,EAAAxqE,OAAAiS,aAaA,SAAAO,EAAArE,GACA,MAAA,IAAAxB,WAAA09D,EAAAl8D,GACA,CAUA,SAAAs8D,EAAA98D,EAAApL,GAGA,IAFA,IAAAvE,EAAA2P,EAAA3P,OACA0kD,EAAA,GACA1kD,KACA0kD,EAAA1kD,GAAAuE,EAAAoL,EAAA3P,IAEA,OAAA0kD,CACA,CAYA,SAAAgoB,EAAA19D,EAAAzK,GACA,IAAAuD,EAAAkH,EAAAuK,MAAA,KACAmrC,EAAA,GAWA,OAVA58C,EAAA9H,OAAA,IAGA0kD,EAAA58C,EAAA,GAAA,IACAkH,EAAAlH,EAAA,IAMA48C,EADA+nB,GAFAz9D,EAAAA,EAAAtB,QAAA0+D,EAAA,MACA7yD,MAAA,KACAhV,GAAA4D,KAAA,IAEA,CAeA,SAAAwkE,EAAA39D,GAMA,IALA,IAGAzO,EACAqsE,EAJAnkE,EAAA,GACAokE,EAAA,EACA7sE,EAAAgP,EAAAhP,OAGA6sE,EAAA7sE,IACAO,EAAAyO,EAAAtH,WAAAmlE,OACA,OAAAtsE,GAAA,OAAAssE,EAAA7sE,EAGA,QAAA,OADA4sE,EAAA59D,EAAAtH,WAAAmlE,OAEApkE,EAAAhD,OAAA,KAAAlF,IAAA,KAAA,KAAAqsE,GAAA,QAIAnkE,EAAAhD,KAAAlF,GACAssE,KAGApkE,EAAAhD,KAAAlF,GAGA,OAAAkI,CACA,CAUA,SAAAqkE,EAAAn9D,GACA,OAAA88D,EAAA98D,GAAA,SAAApP,GACA,IAAAkI,EAAA,GAOA,OANAlI,EAAA,QAEAkI,GAAA+jE,GADAjsE,GAAA,SACA,GAAA,KAAA,OACAA,EAAA,MAAA,KAAAA,GAEAkI,GAAA+jE,EAAAjsE,EAEA,IAAA4H,KAAA,GACA,CAmCA,SAAA4kE,EAAAC,EAAAC,GAGA,OAAAD,EAAA,GAAA,IAAAA,EAAA,MAAA,GAAAC,IAAA,EACA,CAOA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAApnE,EAAA,EAGA,IAFAknE,EAAAE,EAAA1uD,EAAAwuD,EAAApB,GAAAoB,GAAA,EACAA,GAAAxuD,EAAAwuD,EAAAC,GACAD,EAAAZ,EAAAV,GAAA,EAAA5lE,GAAAkxB,EACAg2C,EAAAxuD,EAAAwuD,EAAAZ,GAEA,OAAA5tD,EAAA1Y,GAAAsmE,EAAA,GAAAY,GAAAA,EAAArB,GACA,CASA,SAAA7tD,EAAA+zB,GAEA,IAEA/7B,EAIAq3D,EACA9iE,EACAlG,EACAipE,EACA/sD,EACAva,EACA+mE,EACA5tE,EAEAouE,EArEA35D,EAsDApL,EAAA,GACAglE,EAAAz7B,EAAAhyC,OAEA4B,EAAA,EACA1B,EAAA+rE,EACAyB,EAAA1B,EAqBA,KALAsB,EAAAt7B,EAAAtgC,YAAA+sD,IACA,IACA6O,EAAA,GAGA9iE,EAAA,EAAAA,EAAA8iE,IAAA9iE,EAEAwnC,EAAAtqC,WAAA8C,IAAA,KACAgK,EAAA,aAEA/L,EAAAhD,KAAAusC,EAAAtqC,WAAA8C,IAMA,IAAAlG,EAAAgpE,EAAA,EAAAA,EAAA,EAAA,EAAAhpE,EAAAmpE,GAAA,CAOA,IAAAF,EAAA3rE,EAAA4e,EAAA,EAAAva,EAAAkxB,EAEA7yB,GAAAmpE,GACAj5D,EAAA,mBAGAw4D,GAxGAn5D,EAwGAm+B,EAAAtqC,WAAApD,MAvGA,GAAA,GACAuP,EAAA,GAEAA,EAAA,GAAA,GACAA,EAAA,GAEAA,EAAA,GAAA,GACAA,EAAA,GAEAsjB,IAgGAA,GAAA61C,EAAAruD,GAAAgtD,EAAA/pE,GAAA4e,KACAhM,EAAA,YAGA5S,GAAAorE,EAAAxsD,IAGAwsD,GAFA5tE,EAAA6G,GAAAynE,EAAA9B,EAAA3lE,GAAAynE,EAAA7B,EAAAA,EAAA5lE,EAAAynE,IAbAznE,GAAAkxB,EAoBA3W,EAAA7B,EAAAgtD,GADA6B,EAAAr2C,EAAA/3B,KAEAoV,EAAA,YAGAgM,GAAAgtD,EAKAE,EAAAR,EAAAtrE,EAAA2rE,EADAt3D,EAAAxN,EAAAzI,OAAA,EACA,GAAAutE,GAIA5uD,EAAA/c,EAAAqU,GAAA01D,EAAAzrE,GACAsU,EAAA,YAGAtU,GAAAye,EAAA/c,EAAAqU,GACArU,GAAAqU,EAGAxN,EAAAq7C,OAAAliD,IAAA,EAAA1B,EAEA,CAEA,OAAA4sE,EAAArkE,EACA,CASA,SAAA+V,EAAAwzB,GACA,IAAA9xC,EACAitE,EACAQ,EACAC,EACAF,EACAljE,EACA6G,EACAhG,EACApF,EACA7G,EACAyuE,EAGAJ,EAEAK,EACAN,EACAO,EANAtlE,EAAA,GAoBA,IARAglE,GAHAz7B,EAAA26B,EAAA36B,IAGAhyC,OAGAE,EAAA+rE,EACAkB,EAAA,EACAO,EAAA1B,EAGAxhE,EAAA,EAAAA,EAAAijE,IAAAjjE,GACAqjE,EAAA77B,EAAAxnC,IACA,KACA/B,EAAAhD,KAAA+mE,EAAAqB,IAeA,IAXAF,EAAAC,EAAAnlE,EAAAzI,OAMA4tE,GACAnlE,EAAAhD,KAAAg5D,GAIAkP,EAAAF,GAAA,CAIA,IAAAp8D,EAAAs6D,EAAAnhE,EAAA,EAAAA,EAAAijE,IAAAjjE,GACAqjE,EAAA77B,EAAAxnC,KACAtK,GAAA2tE,EAAAx8D,IACAA,EAAAw8D,GAcA,IAPAx8D,EAAAnR,EAAAye,GAAAgtD,EAAAwB,IADAW,EAAAH,EAAA,KAEAn5D,EAAA,YAGA24D,IAAA97D,EAAAnR,GAAA4tE,EACA5tE,EAAAmR,EAEA7G,EAAA,EAAAA,EAAAijE,IAAAjjE,EAOA,IANAqjE,EAAA77B,EAAAxnC,IAEAtK,KAAAitE,EAAAxB,GACAn3D,EAAA,YAGAq5D,GAAA3tE,EAAA,CAEA,IAAAmL,EAAA8hE,EAAAlnE,EAAAkxB,IAEA9rB,GADAjM,EAAA6G,GAAAynE,EAAA9B,EAAA3lE,GAAAynE,EAAA7B,EAAAA,EAAA5lE,EAAAynE,IADAznE,GAAAkxB,EAKA42C,EAAA1iE,EAAAjM,EACAouE,EAAAr2C,EAAA/3B,EACAqJ,EAAAhD,KACA+mE,EAAAO,EAAA3tE,EAAA2uE,EAAAP,EAAA,KAEAniE,EAAAsT,EAAAovD,EAAAP,GAGA/kE,EAAAhD,KAAA+mE,EAAAO,EAAA1hE,EAAA,KACAqiE,EAAAR,EAAAC,EAAAW,EAAAH,GAAAC,GACAT,EAAA,IACAQ,CACA,GAGAR,IACAjtE,CAEA,CACA,OAAAuI,EAAAN,KAAA,GACA,CA8EA,GAnCAujE,EAAA,CAMAR,QAAA,QAQA8C,KAAA,CACA/vD,OAAA0uD,EACAnuD,OAAAsuD,GAEA7uD,OAAAA,EACAO,OAAAA,EACAyvD,QA/BA,SAAAj8B,GACA,OAAA06B,EAAA16B,GAAA,SAAAhjC,GACA,OAAAm9D,EAAAvsE,KAAAoP,GACA,OAAAwP,EAAAxP,GACAA,CACA,GACA,EA0BAk/D,UAnDA,SAAAl8B,GACA,OAAA06B,EAAA16B,GAAA,SAAAhjC,GACA,OAAAk9D,EAAAtsE,KAAAoP,GACAiP,EAAAjP,EAAAzP,MAAA,GAAAqR,eACA5B,CACA,GACA,GA2DAs8D,GAAAE,EACA,GAAAtoE,EAAAD,SAAAqoE,EAEAE,EAAAvoE,QAAAyoE,OAGA,IAAAjqE,KAAAiqE,EACAA,EAAArqE,eAAAI,KAAA6pE,EAAA7pE,GAAAiqE,EAAAjqE,SAKA88D,EAAAmN,SAAAA,CAGA,CAnhBA,CAmhBAloE,KxH6kkBC,GAAElE,KAAKkE,KAAM,GAAElE,KAAKkE,KAAuB,oBAAXF,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAElJ,EAAE,CAAC,GAAG,IAAI,CAAC,SAASM,EAAQT,EAAOD,GyHjmlBnC,IAAAyK,EAAA1L,OAAAL,UAAA+L,QACAygE,EAAA,OAEAC,EACA,UADAA,EAEA,UAGAlrE,EAAAD,QAAA,CACAorE,QAAAD,EACAE,WAAA,CACAC,QAAA,SAAAhuE,GACA,OAAAmN,EAAApO,KAAAiB,EAAA4tE,EAAA,IACA,EACAK,QAAA,SAAAjuE,GACA,OAAAyB,OAAAzB,EACA,GAEAguE,QAAAH,EACAI,QAAAJ,EzHumlBA,EAAE,CAAC,GAAG,IAAI,CAAC,SAASzqE,EAAQT,EAAOD,G0H1nlBnC,IAAA6G,EAAAnG,EAAA,eACAkK,EAAAlK,EAAA,WACA8qE,EAAA9qE,EAAA,aAEAT,EAAAD,QAAA,CACAwrE,QAAAA,EACA5gE,MAAAA,EACA/D,UAAAA,E1HgolBA,EAAE,CAAC,YAAY,IAAI,UAAU,IAAI,cAAc,MAAM,IAAI,CAAC,SAASnG,EAAQT,EAAOD,G2HvolBlF,IAAAyrE,EAAA/qE,EAAA,WAEAyyD,EAAA/1D,OAAAsB,UAAAN,eACAtB,EAAAL,MAAAK,QAEA4uE,EAAA,CACAC,WAAA,EACAC,kBAAA,EACAC,iBAAA,EACAC,aAAA,EACAC,WAAA,GACAC,QAAA,QACAC,iBAAA,EACAC,OAAA,EACAC,iBAAA,EACAC,QAAAX,EAAAzwD,OACAwgD,UAAA,IACA/F,MAAA,EACA4W,WAAA,UACAC,mBAAA,EACAC,0BAAA,EACAC,eAAA,IACAC,aAAA,EACAC,cAAA,EACAC,oBAAA,GAGAJ,EAAA,SAAA58D,GACA,OAAAA,EAAAlF,QAAA,aAAA,SAAAmiE,EAAAC,GACA,OAAA9tE,OAAAiS,aAAA1B,SAAAu9D,EAAA,IACA,GACA,EAEAC,EAAA,SAAAx+D,EAAAwM,GACA,OAAAxM,GAAA,iBAAAA,GAAAwM,EAAAoxD,OAAA59D,EAAAlJ,QAAA,MAAA,EACAkJ,EAAAgI,MAAA,KAGAhI,CACA,EAkHAy+D,EAAA,SAAAC,EAAA1+D,EAAAwM,EAAAmyD,GACA,GAAAD,EAAA,CAKA,IAAAxuE,EAAAsc,EAAA6wD,UAAAqB,EAAAviE,QAAA,cAAA,QAAAuiE,EAKAE,EAAA,gBAIAC,EAAAryD,EAAA26C,MAAA,GALA,eAKArQ,KAAA5mD,GACA4uE,EAAAD,EAAA3uE,EAAAlC,MAAA,EAAA6wE,EAAA9rE,OAAA7C,EAIAuE,EAAA,GACA,GAAAqqE,EAAA,CAEA,IAAAtyD,EAAA4xD,cAAAvZ,EAAA92D,KAAAe,OAAAsB,UAAA0uE,KACAtyD,EAAA+wD,gBACA,OAIA9oE,EAAAP,KAAA4qE,EACA,CAKA,IADA,IAAAzuE,EAAA,EACAmc,EAAA26C,MAAA,GAAA,QAAA0X,EAAAD,EAAA9nB,KAAA5mD,KAAAG,EAAAmc,EAAA26C,OAAA,CAEA,GADA92D,GAAA,GACAmc,EAAA4xD,cAAAvZ,EAAA92D,KAAAe,OAAAsB,UAAAyuE,EAAA,GAAA7wE,MAAA,GAAA,MACAwe,EAAA+wD,gBACA,OAGA9oE,EAAAP,KAAA2qE,EAAA,GACA,CAQA,OAJAA,GACApqE,EAAAP,KAAA,IAAAhE,EAAAlC,MAAA6wE,EAAA9rE,OAAA,KApFA,SAAAgsE,EAAA/+D,EAAAwM,EAAAmyD,GAGA,IAFA,IAAAK,EAAAL,EAAA3+D,EAAAw+D,EAAAx+D,EAAAwM,GAEAnc,EAAA0uE,EAAAtwE,OAAA,EAAA4B,GAAA,IAAAA,EAAA,CACA,IAAAiD,EACA05D,EAAA+R,EAAA1uE,GAEA,GAAA,OAAA28D,GAAAxgD,EAAA2xD,YACA7qE,EAAAkZ,EAAA8wD,kBAAA,KAAA0B,EAAA,GAAA,GAAA1pE,OAAA0pE,OACA,CACA1rE,EAAAkZ,EAAA4xD,aAAAtvE,OAAAyC,OAAA,MAAA,CAAA,EACA,IAAA0tE,EAAA,MAAAjS,EAAAr0D,OAAA,IAAA,MAAAq0D,EAAAr0D,OAAAq0D,EAAAv+D,OAAA,GAAAu+D,EAAAh/D,MAAA,GAAA,GAAAg/D,EACAkS,EAAA1yD,EAAAqxD,gBAAAoB,EAAA9iE,QAAA,OAAA,KAAA8iE,EACAlsE,EAAAiO,SAAAk+D,EAAA,IACA1yD,EAAA2xD,aAAA,KAAAe,GAGA/xD,MAAApa,IACAi6D,IAAAkS,GACAzuE,OAAAsC,KAAAmsE,GACAnsE,GAAA,GACAyZ,EAAA2xD,aAAAprE,GAAAyZ,EAAAixD,YAEAnqE,EAAA,IACAP,GAAAisE,EACA,cAAAE,IACA5rE,EAAA4rE,GAAAF,GAXA1rE,EAAA,CAAA,EAAA0rE,EAaA,CAEAA,EAAA1rE,CACA,CAEA,OAAA0rE,CACA,CAqDAG,CAAA1qE,EAAAuL,EAAAwM,EAAAmyD,EAhDA,CAiDA,EAwDAhtE,EAAAD,QAAA,SAAA2P,EAAAylD,GACA,IAAAt6C,EAvDA,SAAAs6C,GACA,IAAAA,EACA,OAAAsW,EAGA,QAAA,IAAAtW,EAAAwW,kBAAA,kBAAAxW,EAAAwW,iBACA,MAAA,IAAA5vE,UAAA,0EAGA,QAAA,IAAAo5D,EAAA+W,iBAAA,kBAAA/W,EAAA+W,gBACA,MAAA,IAAAnwE,UAAA,yEAGA,GAAA,OAAAo5D,EAAAgX,cAAA,IAAAhX,EAAAgX,SAAA,mBAAAhX,EAAAgX,QACA,MAAA,IAAApwE,UAAA,iCAGA,QAAA,IAAAo5D,EAAA4W,SAAA,UAAA5W,EAAA4W,SAAA,eAAA5W,EAAA4W,QACA,MAAA,IAAAhwE,UAAA,qEAEA,IAAAgwE,OAAA,IAAA5W,EAAA4W,QAAAN,EAAAM,QAAA5W,EAAA4W,QAEAK,OAAA,IAAAjX,EAAAiX,WAAAX,EAAAW,WAAAjX,EAAAiX,WAEA,GAAA,YAAAA,GAAA,UAAAA,GAAA,SAAAA,EACA,MAAA,IAAArwE,UAAA,gEAKA,MAAA,CACA2vE,eAHA,IAAAvW,EAAAuW,WAAA,IAAAvW,EAAA+W,iBAAAT,EAAAC,YAAAvW,EAAAuW,UAIAC,iBAAA,kBAAAxW,EAAAwW,mBAAAxW,EAAAwW,iBAAAF,EAAAE,iBACAC,gBAAA,kBAAAzW,EAAAyW,gBAAAzW,EAAAyW,gBAAAH,EAAAG,gBACAC,YAAA,kBAAA1W,EAAA0W,YAAA1W,EAAA0W,YAAAJ,EAAAI,YACAC,WAAA,iBAAA3W,EAAA2W,WAAA3W,EAAA2W,WAAAL,EAAAK,WACAC,QAAAA,EACAC,gBAAA,kBAAA7W,EAAA6W,gBAAA7W,EAAA6W,gBAAAP,EAAAO,gBACAC,MAAA,kBAAA9W,EAAA8W,MAAA9W,EAAA8W,MAAAR,EAAAQ,MACAC,gBAAA,kBAAA/W,EAAA+W,gBAAA/W,EAAA+W,gBAAAT,EAAAS,gBACAC,QAAA,mBAAAhX,EAAAgX,QAAAhX,EAAAgX,QAAAV,EAAAU,QACA5Q,UAAA,iBAAApG,EAAAoG,WAAAiQ,EAAAlW,SAAAH,EAAAoG,WAAApG,EAAAoG,UAAAkQ,EAAAlQ,UAEA/F,MAAA,iBAAAL,EAAAK,QAAA,IAAAL,EAAAK,OAAAL,EAAAK,MAAAiW,EAAAjW,MACA4W,WAAAA,EACAC,mBAAA,IAAAlX,EAAAkX,kBACAC,yBAAA,kBAAAnX,EAAAmX,yBAAAnX,EAAAmX,yBAAAb,EAAAa,yBACAC,eAAA,iBAAApX,EAAAoX,eAAApX,EAAAoX,eAAAd,EAAAc,eACAC,aAAA,IAAArX,EAAAqX,YACAC,aAAA,kBAAAtX,EAAAsX,aAAAtX,EAAAsX,aAAAhB,EAAAgB,aACAC,mBAAA,kBAAAvX,EAAAuX,mBAAAvX,EAAAuX,mBAAAjB,EAAAiB,mBAEA,CAGAe,CAAAtY,GAEA,GAAA,KAAAzlD,SAAAA,EACA,OAAAmL,EAAA4xD,aAAAtvE,OAAAyC,OAAA,MAAA,CAAA,EASA,IANA,IAAA8tE,EAAA,iBAAAh+D,EAzNA,SAAAA,EAAAmL,GACA,IAMAnc,EANAiD,EAAA,CAAAjC,UAAA,MAEAiuE,EAAA9yD,EAAAwxD,kBAAA38D,EAAAlF,QAAA,MAAA,IAAAkF,EACA1O,EAAA6Z,EAAA0xD,iBAAAp2D,SAAAxJ,EAAAkO,EAAA0xD,eACA3nE,EAAA+oE,EAAAt3D,MAAAwE,EAAA0gD,UAAAv6D,GACA4sE,GAAA,EAGA7B,EAAAlxD,EAAAkxD,QACA,GAAAlxD,EAAAmxD,gBACA,IAAAttE,EAAA,EAAAA,EAAAkG,EAAA9H,SAAA4B,EACA,IAAAkG,EAAAlG,GAAAyG,QAAA,WAdA,mBAeAP,EAAAlG,GACAqtE,EAAA,QAnBA,wBAoBAnnE,EAAAlG,KACAqtE,EAAA,cAEA6B,EAAAlvE,EACAA,EAAAkG,EAAA9H,QAKA,IAAA4B,EAAA,EAAAA,EAAAkG,EAAA9H,SAAA4B,EACA,GAAAA,IAAAkvE,EAAA,CAGA,IAKArvE,EAAA8P,EALA83C,EAAAvhD,EAAAlG,GAEAmvE,EAAA1nB,EAAAhhD,QAAA,MACA2M,GAAA,IAAA+7D,EAAA1nB,EAAAhhD,QAAA,KAAA0oE,EAAA,GAGA,IAAA/7D,GACAvT,EAAAsc,EAAAsxD,QAAAhmB,EAAAslB,EAAAU,QAAAJ,EAAA,OACA19D,EAAAwM,EAAA6xD,mBAAA,KAAA,KAEAnuE,EAAAsc,EAAAsxD,QAAAhmB,EAAA9pD,MAAA,EAAAyV,GAAA25D,EAAAU,QAAAJ,EAAA,OACA19D,EAAAm9D,EAAAsC,SACAjB,EAAA1mB,EAAA9pD,MAAAyV,EAAA,GAAA+I,IACA,SAAAkzD,GACA,OAAAlzD,EAAAsxD,QAAA4B,EAAAtC,EAAAU,QAAAJ,EAAA,QACA,KAIA19D,GAAAwM,EAAAyxD,0BAAA,eAAAP,IACA19D,EAAAi+D,EAAAj+D,IAGA83C,EAAAhhD,QAAA,QAAA,IACAkJ,EAAAxR,EAAAwR,GAAA,CAAAA,GAAAA,GAGA,IAAA0Z,EAAAmrC,EAAA92D,KAAAuF,EAAApD,GACAwpB,GAAA,YAAAlN,EAAAuxD,WACAzqE,EAAApD,GAAAitE,EAAAwC,QAAArsE,EAAApD,GAAA8P,GACA0Z,GAAA,SAAAlN,EAAAuxD,aACAzqE,EAAApD,GAAA8P,EAhCA,CAoCA,OAAA1M,CACA,CAyJAssE,CAAAv+D,EAAAmL,GAAAnL,EACA/N,EAAAkZ,EAAA4xD,aAAAtvE,OAAAyC,OAAA,MAAA,CAAA,EAIAkD,EAAA3F,OAAA2F,KAAA4qE,GACAhvE,EAAA,EAAAA,EAAAoE,EAAAhG,SAAA4B,EAAA,CACA,IAAAH,EAAAuE,EAAApE,GACAwvE,EAAApB,EAAAvuE,EAAAmvE,EAAAnvE,GAAAsc,EAAA,iBAAAnL,GACA/N,EAAA6pE,EAAAx3C,MAAAryB,EAAAusE,EAAArzD,EACA,CAEA,OAAA,IAAAA,EAAAgxD,YACAlqE,EAGA6pE,EAAA2C,QAAAxsE,EACA,C3H4olBA,EAAE,CAAC,UAAU,MAAM,IAAI,CAAC,SAASlB,EAAQT,EAAOD,G4Hz6lBhD,IAAAquE,EAAA3tE,EAAA,gBACA+qE,EAAA/qE,EAAA,WACA8qE,EAAA9qE,EAAA,aACAyyD,EAAA/1D,OAAAsB,UAAAN,eAEAkwE,EAAA,CACAC,SAAA,SAAAC,GACA,OAAAA,EAAA,IACA,EACAtC,MAAA,QACAuC,QAAA,SAAAD,EAAAhwE,GACA,OAAAgwE,EAAA,IAAAhwE,EAAA,GACA,EACAuhC,OAAA,SAAAyuC,GACA,OAAAA,CACA,GAGA1xE,EAAAL,MAAAK,QACA0F,EAAA/F,MAAAiC,UAAA8D,KACAksE,EAAA,SAAA1tE,EAAA2tE,GACAnsE,EAAAtE,MAAA8C,EAAAlE,EAAA6xE,GAAAA,EAAA,CAAAA,GACA,EAEAC,EAAA72D,KAAArZ,UAAAwiB,YAEA2tD,EAAArD,EAAA,QACAE,EAAA,CACAoD,gBAAA,EACAnD,WAAA,EACAC,kBAAA,EACAmD,YAAA,UACA/C,QAAA,QACAC,iBAAA,EACAzQ,UAAA,IACAjgD,QAAA,EACAyzD,iBAAA,EACAC,QAAAxD,EAAAlwD,OACA2zD,kBAAA,EACAxuD,OAAAmuD,EACAM,UAAA3D,EAAAH,WAAAwD,GAEAJ,SAAA,EACAW,cAAA,SAAAlyD,GACA,OAAA0xD,EAAAvyE,KAAA6gB,EACA,EACAmyD,WAAA,EACA1C,oBAAA,GAWA2C,EAAA,CAAA,EAEAzoE,EAAA,SAAAA,EACA0oE,EACAf,EACAgB,EACAC,EACA7D,EACAe,EACA0C,EACAL,EACAC,EACAS,EACA7kC,EACA8gC,EACAyD,EACA1uD,EACAyuD,EACAD,EACAlD,EACA2D,GAOA,IALA,IA9BA5yD,EA8BAnb,EAAA2tE,EAEAK,EAAAD,EACAE,EAAA,EACAC,GAAA,OACA,KAAAF,EAAAA,EAAAhyE,IAAA0xE,MAAAQ,GAAA,CAEA,IAAA/9D,EAAA69D,EAAAhyE,IAAA2xE,GAEA,GADAM,GAAA,OACA,IAAA99D,EAAA,CACA,GAAAA,IAAA89D,EACA,MAAA,IAAAnkE,WAAA,uBAEAokE,GAAA,CAEA,MACA,IAAAF,EAAAhyE,IAAA0xE,KACAO,EAAA,EAEA,CAeA,GAbA,mBAAAH,EACA9tE,EAAA8tE,EAAAlB,EAAA5sE,GACAA,aAAAmW,KACAnW,EAAAwtE,EAAAxtE,GACA,UAAA4tE,GAAA1yE,EAAA8E,KACAA,EAAA6pE,EAAAsC,SAAAnsE,GAAA,SAAAtE,GACA,OAAAA,aAAAya,KACAq3D,EAAA9xE,GAEAA,CACA,KAGA,OAAAsE,EAAA,CACA,GAAA+qE,EACA,OAAAsC,IAAAC,EAAAD,EAAAT,EAAA9C,EAAAuD,QAAAjD,EAAA,MAAAtrD,GAAA8tD,EAGA5sE,EAAA,EACA,CAEA,GAvEA,iBADAmb,EAwEAnb,IAtEA,iBAAAmb,GACA,kBAAAA,GACA,WAAAle,QAAAke,IACA,iBAAAA,GAmEA0uD,EAAA3+D,SAAAlL,GACA,OAAAqtE,EAEA,CAAAE,EADAD,EAAAV,EAAAS,EAAAT,EAAA9C,EAAAuD,QAAAjD,EAAA,MAAAtrD,IACA,IAAAyuD,EAAAF,EAAArtE,EAAA8pE,EAAAuD,QAAAjD,EAAA,QAAAtrD,KAEA,CAAAyuD,EAAAX,GAAA,IAAAW,EAAApwE,OAAA6C,KAGA,IAMAmuE,EANAC,EAAA,GAEA,QAAA,IAAApuE,EACA,OAAAouE,EAIA,GAAA,UAAAR,GAAA1yE,EAAA8E,GAEAstE,GAAAD,IACArtE,EAAA6pE,EAAAsC,SAAAnsE,EAAAqtE,IAEAc,EAAA,CAAA,CAAAzyE,MAAAsE,EAAA7E,OAAA,EAAA6E,EAAAsD,KAAA,MAAA,UAAA,SACA,GAAApI,EAAA4yE,GACAK,EAAAL,MACA,CACA,IAAA3sE,EAAA3F,OAAA2F,KAAAnB,GACAmuE,EAAAllC,EAAA9nC,EAAA8nC,KAAAA,GAAA9nC,CACA,CAEA,IAAAktE,EAAAjB,EAAAR,EAAA/jE,QAAA,MAAA,OAAA+jE,EAEA0B,EAAAT,GAAA3yE,EAAA8E,IAAA,IAAAA,EAAA7E,OAAAkzE,EAAA,KAAAA,EAEA,GAAArE,GAAA9uE,EAAA8E,IAAA,IAAAA,EAAA7E,OACA,OAAAmzE,EAAA,KAGA,IAAA,IAAA3oE,EAAA,EAAAA,EAAAwoE,EAAAhzE,SAAAwK,EAAA,CACA,IAAA/I,EAAAuxE,EAAAxoE,GACAjK,EAAA,WAAAuB,QAAAL,SAAA,IAAAA,EAAAlB,MAAAkB,EAAAlB,MAAAsE,EAAApD,GAEA,IAAA6wE,GAAA,OAAA/xE,EAAA,CAIA,IAAA6yE,EAAAxE,GAAAqD,EAAAxwE,EAAAiM,QAAA,MAAA,OAAAjM,EACA4xE,EAAAtzE,EAAA8E,GACA,mBAAA4tE,EAAAA,EAAAU,EAAAC,GAAAD,EACAA,GAAAvE,EAAA,IAAAwE,EAAA,IAAAA,EAAA,KAEAR,EAAAz5D,IAAAq5D,EAAAM,GACA,IAAAQ,EAAAhC,IACAgC,EAAAn6D,IAAAo5D,EAAAK,GACAjB,EAAAsB,EAAAnpE,EACAvJ,EACA8yE,EACAZ,EACAC,EACA7D,EACAe,EACA0C,EACAL,EACA,UAAAQ,GAAAN,GAAApyE,EAAA8E,GAAA,KAAAqtE,EACAS,EACA7kC,EACA8gC,EACAyD,EACA1uD,EACAyuD,EACAD,EACAlD,EACAqE,GA5BA,CA8BA,CAEA,OAAAL,CACA,EA4EA/vE,EAAAD,QAAA,SAAAuvE,EAAAna,GACA,IAGA2a,EAHAnuE,EAAA2tE,EACAz0D,EA5EA,SAAAs6C,GACA,IAAAA,EACA,OAAAsW,EAGA,QAAA,IAAAtW,EAAAwW,kBAAA,kBAAAxW,EAAAwW,iBACA,MAAA,IAAA5vE,UAAA,0EAGA,QAAA,IAAAo5D,EAAA4Z,iBAAA,kBAAA5Z,EAAA4Z,gBACA,MAAA,IAAAhzE,UAAA,yEAGA,GAAA,OAAAo5D,EAAA6Z,cAAA,IAAA7Z,EAAA6Z,SAAA,mBAAA7Z,EAAA6Z,QACA,MAAA,IAAAjzE,UAAA,iCAGA,IAAAgwE,EAAA5W,EAAA4W,SAAAN,EAAAM,QACA,QAAA,IAAA5W,EAAA4W,SAAA,UAAA5W,EAAA4W,SAAA,eAAA5W,EAAA4W,QACA,MAAA,IAAAhwE,UAAA,qEAGA,IAAA0kB,EAAA8qD,EAAA,QACA,QAAA,IAAApW,EAAA10C,OAAA,CACA,IAAAyyC,EAAA92D,KAAAmvE,EAAAH,WAAAjW,EAAA10C,QACA,MAAA,IAAA1kB,UAAA,mCAEA0kB,EAAA00C,EAAA10C,MACA,CACA,IAOAquD,EAPAI,EAAA3D,EAAAH,WAAA3qD,GAEAgvD,EAAAhE,EAAAgE,OAcA,IAbA,mBAAAta,EAAAsa,QAAA5yE,EAAAs4D,EAAAsa,WACAA,EAAAta,EAAAsa,QAKAX,EADA3Z,EAAA2Z,eAAAT,EACAlZ,EAAA2Z,YACA,YAAA3Z,EACAA,EAAAqZ,QAAA,UAAA,SAEA/C,EAAAqD,YAGA,mBAAA3Z,GAAA,kBAAAA,EAAAqa,eACA,MAAA,IAAAzzE,UAAA,iDAGA,IAAA2vE,OAAA,IAAAvW,EAAAuW,WAAA,IAAAvW,EAAA4Z,iBAAAtD,EAAAC,YAAAvW,EAAAuW,UAEA,MAAA,CACAmD,eAAA,kBAAA1Z,EAAA0Z,eAAA1Z,EAAA0Z,eAAApD,EAAAoD,eACAnD,UAAAA,EACAC,iBAAA,kBAAAxW,EAAAwW,mBAAAxW,EAAAwW,iBAAAF,EAAAE,iBACAmD,YAAAA,EACA/C,QAAAA,EACAC,gBAAA,kBAAA7W,EAAA6W,gBAAA7W,EAAA6W,gBAAAP,EAAAO,gBACAwD,eAAAra,EAAAqa,eACAjU,eAAA,IAAApG,EAAAoG,UAAAkQ,EAAAlQ,UAAApG,EAAAoG,UACAjgD,OAAA,kBAAA65C,EAAA75C,OAAA65C,EAAA75C,OAAAmwD,EAAAnwD,OACAyzD,gBAAA,kBAAA5Z,EAAA4Z,gBAAA5Z,EAAA4Z,gBAAAtD,EAAAsD,gBACAC,QAAA,mBAAA7Z,EAAA6Z,QAAA7Z,EAAA6Z,QAAAvD,EAAAuD,QACAC,iBAAA,kBAAA9Z,EAAA8Z,iBAAA9Z,EAAA8Z,iBAAAxD,EAAAwD,iBACAQ,OAAAA,EACAhvD,OAAAA,EACAyuD,UAAAA,EACAC,cAAA,mBAAAha,EAAAga,cAAAha,EAAAga,cAAA1D,EAAA0D,cACAC,UAAA,kBAAAja,EAAAia,UAAAja,EAAAia,UAAA3D,EAAA2D,UACAxkC,KAAA,mBAAAuqB,EAAAvqB,KAAAuqB,EAAAvqB,KAAA,KACA8hC,mBAAA,kBAAAvX,EAAAuX,mBAAAvX,EAAAuX,mBAAAjB,EAAAiB,mBAEA,CAIA2D,CAAAlb,GAKA,mBAAAt6C,EAAA40D,OAEA9tE,GADA8tE,EAAA50D,EAAA40D,QACA,GAAA9tE,GACA9E,EAAAge,EAAA40D,UAEAK,EADAj1D,EAAA40D,QAIA,IAAA3sE,EAAA,GAEA,GAAA,WAAAlE,QAAA+C,IAAA,OAAAA,EACA,MAAA,GAGA,IAAA4tE,EAAAlB,EAAAxzD,EAAAi0D,aACAU,EAAA,UAAAD,GAAA10D,EAAA20D,eAEAM,IACAA,EAAA3yE,OAAA2F,KAAAnB,IAGAkZ,EAAA+vB,MACAklC,EAAAllC,KAAA/vB,EAAA+vB,MAIA,IADA,IAAA8kC,EAAAtB,IACA1vE,EAAA,EAAAA,EAAAoxE,EAAAhzE,SAAA4B,EAAA,CACA,IAAAH,EAAAuxE,EAAApxE,GAEAmc,EAAAu0D,WAAA,OAAAztE,EAAApD,IAGAkwE,EAAA3rE,EAAA8D,EACAjF,EAAApD,GACAA,EACAgxE,EACAC,EACA30D,EAAA8wD,iBACA9wD,EAAA6xD,mBACA7xD,EAAAu0D,UACAv0D,EAAAk0D,gBACAl0D,EAAAS,OAAAT,EAAAm0D,QAAA,KACAn0D,EAAA40D,OACA50D,EAAA+vB,KACA/vB,EAAA6wD,UACA7wD,EAAAs0D,cACAt0D,EAAA4F,OACA5F,EAAAq0D,UACAr0D,EAAAo0D,iBACAp0D,EAAAkxD,QACA2D,GAEA,CAEA,IAAA1V,EAAAl3D,EAAAmC,KAAA4V,EAAA0gD,WACAgT,GAAA,IAAA1zD,EAAAg0D,eAAA,IAAA,GAYA,OAVAh0D,EAAAmxD,kBACA,eAAAnxD,EAAAkxD,QAEAwC,GAAA,uBAGAA,GAAA,mBAIAvU,EAAAl9D,OAAA,EAAAyxE,EAAAvU,EAAA,EACA,C5H86lBA,EAAE,CAAC,YAAY,IAAI,UAAU,IAAI,eAAe,MAAM,IAAI,CAAC,SAASv5D,EAAQT,EAAOD,G6H1wmBnF,IAAAwrE,EAAA9qE,EAAA,aAEAyyD,EAAA/1D,OAAAsB,UAAAN,eACAtB,EAAAL,MAAAK,QAEAyzE,EAAA,WAEA,IADA,IAAA7jE,EAAA,GACA/N,EAAA,EAAAA,EAAA,MAAAA,EACA+N,EAAAlK,KAAA,MAAA7D,EAAA,GAAA,IAAA,IAAAA,EAAAvC,SAAA,KAAA+hC,eAGA,OAAAzxB,CACA,CAPA,GA4BA8jE,EAAA,SAAAC,EAAA31D,GAEA,IADA,IAAAlZ,EAAAkZ,GAAAA,EAAA4xD,aAAAtvE,OAAAyC,OAAA,MAAA,CAAA,EACAlB,EAAA,EAAAA,EAAA8xE,EAAA1zE,SAAA4B,OACA,IAAA8xE,EAAA9xE,KACAiD,EAAAjD,GAAA8xE,EAAA9xE,IAIA,OAAAiD,CACA,EAgFAX,EAAA,KAiIAhB,EAAAD,QAAA,CACAwwE,cAAAA,EACA9/C,OAxJA,SAAAne,EAAAk+D,GACA,OAAArzE,OAAA2F,KAAA0tE,GAAAC,QAAA,SAAAC,EAAAnyE,GAEA,OADAmyE,EAAAnyE,GAAAiyE,EAAAjyE,GACAmyE,CACA,GAAAp+D,EACA,EAoJA07D,QAlBA,SAAAhyE,EAAAyL,GACA,MAAA,GAAA9D,OAAA3H,EAAAyL,EACA,EAiBA0mE,QAvDA,SAAA9wE,GAIA,IAHA,IAAA6pE,EAAA,CAAA,CAAAvlE,IAAA,CAAAzD,EAAAb,GAAAszE,KAAA,MACAC,EAAA,GAEAlyE,EAAA,EAAAA,EAAAwoE,EAAApqE,SAAA4B,EAKA,IAJA,IAAAmyE,EAAA3J,EAAAxoE,GACAiD,EAAAkvE,EAAAlvE,IAAAkvE,EAAAF,MAEA7tE,EAAA3F,OAAA2F,KAAAnB,GACA2F,EAAA,EAAAA,EAAAxE,EAAAhG,SAAAwK,EAAA,CACA,IAAA/I,EAAAuE,EAAAwE,GACA+G,EAAA1M,EAAApD,GACA,WAAAK,QAAAyP,IAAA,OAAAA,IAAA,IAAAuiE,EAAAzrE,QAAAkJ,KACA64D,EAAA3kE,KAAA,CAAAZ,IAAAA,EAAAgvE,KAAApyE,IACAqyE,EAAAruE,KAAA8L,GAEA,CAKA,OA/MA,SAAA64D,GACA,KAAAA,EAAApqE,OAAA,GAAA,CACA,IAAA+zE,EAAA3J,EAAA5kE,MACAX,EAAAkvE,EAAAlvE,IAAAkvE,EAAAF,MAEA,GAAA9zE,EAAA8E,GAAA,CAGA,IAFA,IAAAmvE,EAAA,GAEAxpE,EAAA,EAAAA,EAAA3F,EAAA7E,SAAAwK,OACA,IAAA3F,EAAA2F,IACAwpE,EAAAvuE,KAAAZ,EAAA2F,IAIAupE,EAAAlvE,IAAAkvE,EAAAF,MAAAG,CACA,CACA,CACA,CA4LAC,CAAA7J,GAEA7pE,CACA,EAkCA0d,OApJA,SAAArL,EAAAy8D,EAAAJ,GACA,IAAAiF,EAAAthE,EAAAlF,QAAA,MAAA,KACA,GAAA,eAAAuhE,EAEA,OAAAiF,EAAAxmE,QAAA,iBAAAymE,UAGA,IACA,OAAA50D,mBAAA20D,EACA,CAAA,MAAAj0E,GACA,OAAAi0E,CACA,CACA,EAyIA11D,OAnIA,SAAA5L,EAAAwhE,EAAAnF,EAAAoF,EAAA1wD,GAGA,GAAA,IAAA/Q,EAAA5S,OACA,OAAA4S,EAGA,IAAA5D,EAAA4D,EAOA,GANA,WAAA9Q,QAAA8Q,GACA5D,EAAAnP,OAAA8B,UAAAtC,SAAAC,KAAAsT,GACA,iBAAAA,IACA5D,EAAAhN,OAAA4Q,IAGA,eAAAq8D,EACA,OAAAqF,OAAAtlE,GAAAtB,QAAA,mBAAA,SAAAmiE,GACA,MAAA,SAAAt9D,SAAAs9D,EAAAtwE,MAAA,GAAA,IAAA,KACA,IAIA,IADA,IAAA0W,EAAA,GACAzL,EAAA,EAAAA,EAAAwE,EAAAhP,OAAAwK,GAAAtG,EAAA,CAIA,IAHA,IAAAksE,EAAAphE,EAAAhP,QAAAkE,EAAA8K,EAAAzP,MAAAiL,EAAAA,EAAAtG,GAAA8K,EACA/K,EAAA,GAEArC,EAAA,EAAAA,EAAAwuE,EAAApwE,SAAA4B,EAAA,CACA,IAAA8B,EAAA0sE,EAAA1oE,WAAA9F,GAEA,KAAA8B,GACA,KAAAA,GACA,KAAAA,GACA,MAAAA,GACAA,GAAA,IAAAA,GAAA,IACAA,GAAA,IAAAA,GAAA,IACAA,GAAA,IAAAA,GAAA,KACAigB,IAAA8qD,EAAAF,UAAA,KAAA7qE,GAAA,KAAAA,GAEAO,EAAAA,EAAAjE,QAAAowE,EAAAlmE,OAAAtI,GAIA8B,EAAA,IACAO,EAAAA,EAAAjE,QAAAwzE,EAAA9vE,GAIAA,EAAA,KACAO,EAAAA,EAAAjE,QAAAwzE,EAAA,IAAA9vE,GAAA,GACA8vE,EAAA,IAAA,GAAA9vE,GAIAA,EAAA,OAAAA,GAAA,MACAO,EAAAA,EAAAjE,QAAAwzE,EAAA,IAAA9vE,GAAA,IACA8vE,EAAA,IAAA9vE,GAAA,EAAA,IACA8vE,EAAA,IAAA,GAAA9vE,IAIA9B,GAAA,EACA8B,EAAA,QAAA,KAAAA,IAAA,GAAA,KAAA0sE,EAAA1oE,WAAA9F,IAEAqC,EAAAA,EAAAjE,QAAAwzE,EAAA,IAAA9vE,GAAA,IACA8vE,EAAA,IAAA9vE,GAAA,GAAA,IACA8vE,EAAA,IAAA9vE,GAAA,EAAA,IACA8vE,EAAA,IAAA,GAAA9vE,GACA,CAEAuS,GAAAhS,EAAAkE,KAAA,GACA,CAEA,OAAA8N,CACA,EA4DAlG,SA9BA,SAAAlL,GACA,SAAAA,GAAA,WAAA/C,QAAA+C,QAIAA,EAAArF,aAAAqF,EAAArF,YAAAuQ,UAAAlL,EAAArF,YAAAuQ,SAAAlL,GACA,EAyBA2zD,SAnCA,SAAA3zD,GACA,MAAA,oBAAAxE,OAAAsB,UAAAtC,SAAAC,KAAAuF,EACA,EAkCAmsE,SApBA,SAAAz/D,EAAAhN,GACA,GAAAxE,EAAAwR,GAAA,CAEA,IADA,IAAAgjE,EAAA,GACA3yE,EAAA,EAAAA,EAAA2P,EAAAvR,OAAA4B,GAAA,EACA2yE,EAAA9uE,KAAAlB,EAAAgN,EAAA3P,KAEA,OAAA2yE,CACA,CACA,OAAAhwE,EAAAgN,EACA,EAYA2lB,MAzNA,SAAAA,EAAA1hB,EAAAk+D,EAAA31D,GAEA,IAAA21D,EACA,OAAAl+D,EAGA,GAAA,WAAA1T,QAAA4xE,GAAA,CACA,GAAA3zE,EAAAyV,GACAA,EAAA/P,KAAAiuE,OACA,KAAAl+D,GAAA,WAAA1T,QAAA0T,GAKA,MAAA,CAAAA,EAAAk+D,IAJA31D,IAAAA,EAAA4xD,cAAA5xD,EAAA+wD,mBAAA1Y,EAAA92D,KAAAe,OAAAsB,UAAA+xE,MACAl+D,EAAAk+D,IAAA,EAIA,CAEA,OAAAl+D,CACA,CAEA,IAAAA,GAAA,WAAA1T,QAAA0T,GACA,MAAA,CAAAA,GAAA3O,OAAA6sE,GAGA,IAAAc,EAAAh/D,EAKA,OAJAzV,EAAAyV,KAAAzV,EAAA2zE,KACAc,EAAAf,EAAAj+D,EAAAuI,IAGAhe,EAAAyV,IAAAzV,EAAA2zE,IACAA,EAAAtvD,SAAA,SAAA2vD,EAAAnyE,GACA,GAAAw0D,EAAA92D,KAAAkW,EAAA5T,GAAA,CACA,IAAA6yE,EAAAj/D,EAAA5T,GACA6yE,GAAA,WAAA3yE,QAAA2yE,IAAAV,GAAA,WAAAjyE,QAAAiyE,GACAv+D,EAAA5T,GAAAs1B,EAAAu9C,EAAAV,EAAAh2D,GAEAvI,EAAA/P,KAAAsuE,EAEA,MACAv+D,EAAA5T,GAAAmyE,CAEA,IACAv+D,GAGAnV,OAAA2F,KAAA0tE,GAAAC,QAAA,SAAAC,EAAAnyE,GACA,IAAAlB,EAAAmzE,EAAAjyE,GAOA,OALA20D,EAAA92D,KAAAs0E,EAAAnyE,GACAmyE,EAAAnyE,GAAAy1B,EAAA08C,EAAAnyE,GAAAlB,EAAAwd,GAEA61D,EAAAnyE,GAAAlB,EAEAqzE,CACA,GAAAY,EACA,E7Hk7mBA,EAAE,CAAC,YAAY,MAAM,IAAI,CAAC,SAAS7wE,EAAQT,EAAOD,G8H7/mBlD,SAAA5B,EAAAwD,EAAAgvE,GACA,OAAAxzE,OAAAsB,UAAAN,eAAA/B,KAAAuF,EAAAgvE,EACA,CAEA3wE,EAAAD,QAAA,SAAAyxE,EAAAjiC,EAAAhnC,EAAAsS,GACA00B,EAAAA,GAAA,IACAhnC,EAAAA,GAAA,IACA,IAAA5G,EAAA,CAAA,EAEA,GAAA,iBAAA6vE,GAAA,IAAAA,EAAA10E,OACA,OAAA6E,EAGA,IAAA8vE,EAAA,MACAD,EAAAA,EAAAn7D,MAAAk5B,GAEA,IAAAmiC,EAAA,IACA72D,GAAA,iBAAAA,EAAA62D,UACAA,EAAA72D,EAAA62D,SAGA,IAAA7uE,EAAA2uE,EAAA10E,OAEA40E,EAAA,GAAA7uE,EAAA6uE,IACA7uE,EAAA6uE,GAGA,IAAA,IAAAhzE,EAAA,EAAAA,EAAAmE,IAAAnE,EAAA,CACA,IAEAizE,EAAAC,EAAA7uE,EAAA+Z,EAFAzW,EAAAmrE,EAAA9yE,GAAA8L,QAAAinE,EAAA,OACAI,EAAAxrE,EAAAlB,QAAAoD,GAGAspE,GAAA,GACAF,EAAAtrE,EAAAiJ,OAAA,EAAAuiE,GACAD,EAAAvrE,EAAAiJ,OAAAuiE,EAAA,KAEAF,EAAAtrE,EACAurE,EAAA,IAGA7uE,EAAAsZ,mBAAAs1D,GACA70D,EAAAT,mBAAAu1D,GAEAzzE,EAAAwD,EAAAoB,GAEAlG,EAAA8E,EAAAoB,IACApB,EAAAoB,GAAAR,KAAAua,GAEAnb,EAAAoB,GAAA,CAAApB,EAAAoB,GAAA+Z,GAJAnb,EAAAoB,GAAA+Z,CAMA,CAEA,OAAAnb,CACA,EAEA,IAAA9E,EAAAL,MAAAK,SAAA,SAAAo6D,GACA,MAAA,mBAAA95D,OAAAsB,UAAAtC,SAAAC,KAAA66D,EACA,C9H0hnBA,EAAE,CAAC,GAAG,IAAI,CAAC,SAASx2D,EAAQT,EAAOD,G+HtlnBnC,IAAA+xE,EAAA,SAAAh1D,GACA,OAAAle,QAAAke,IACA,IAAA,SACA,OAAAA,EAEA,IAAA,UACA,OAAAA,EAAA,OAAA,QAEA,IAAA,SACA,OAAAlK,SAAAkK,GAAAA,EAAA,GAEA,QACA,MAAA,GAEA,EAEA9c,EAAAD,QAAA,SAAA4B,EAAA4tC,EAAAhnC,EAAAhM,GAOA,OANAgzC,EAAAA,GAAA,IACAhnC,EAAAA,GAAA,IACA,OAAA5G,IACAA,OAAAgL,GAGA,WAAA/N,QAAA+C,GACA4nE,EAAAwI,EAAApwE,IAAA,SAAAoB,GACA,IAAAivE,EAAA11D,mBAAAw1D,EAAA/uE,IAAAwF,EACA,OAAA1L,EAAA8E,EAAAoB,IACAwmE,EAAA5nE,EAAAoB,IAAA,SAAA+Z,GACA,OAAAk1D,EAAA11D,mBAAAw1D,EAAAh1D,GACA,IAAA7X,KAAAsqC,GAEAyiC,EAAA11D,mBAAAw1D,EAAAnwE,EAAAoB,IAEA,IAAAkC,KAAAsqC,GAIAhzC,EACA+f,mBAAAw1D,EAAAv1E,IAAAgM,EACA+T,mBAAAw1D,EAAAnwE,IAFA,EAGA,EAEA,IAAA9E,EAAAL,MAAAK,SAAA,SAAAo6D,GACA,MAAA,mBAAA95D,OAAAsB,UAAAtC,SAAAC,KAAA66D,EACA,EAEA,SAAAsS,EAAAtS,EAAAn3D,GACA,GAAAm3D,EAAAsS,IAAA,OAAAtS,EAAAsS,IAAAzpE,GAEA,IADA,IAAAuQ,EAAA,GACA3R,EAAA,EAAAA,EAAAu4D,EAAAn6D,OAAA4B,IACA2R,EAAA9N,KAAAzC,EAAAm3D,EAAAv4D,GAAAA,IAEA,OAAA2R,CACA,CAEA,IAAA0hE,EAAA50E,OAAA2F,MAAA,SAAAnB,GACA,IAAA0O,EAAA,GACA,IAAA,IAAA9R,KAAAoD,EACAxE,OAAAsB,UAAAN,eAAA/B,KAAAuF,EAAApD,IAAA8R,EAAA9N,KAAAhE,GAEA,OAAA8R,CACA,C/HgnnBA,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS5P,EAAQT,EAAOD,GgIlsnBnCA,EAAAgb,OAAAhb,EAAA4K,MAAAlK,EAAA,YACAV,EAAAub,OAAAvb,EAAA6G,UAAAnG,EAAA,WhIusnBA,EAAE,CAAC,WAAW,IAAI,WAAW,MAAM,IAAI,CAAC,SAASA,EAAQT,EAAOD,uFiIxsnBhE,IAAAyM,EAAA/L,EAAA,UACAwK,EAAAuB,EAAAvB,OAGA,SAAAgnE,EAAA17D,EAAAC,GACA,IAAA,IAAAjY,KAAAgY,EACAC,EAAAjY,GAAAgY,EAAAhY,EAEA,CASA,SAAA2zE,EAAAvmE,EAAAC,EAAA9O,GACA,OAAAmO,EAAAU,EAAAC,EAAA9O,EACA,CAVAmO,EAAAxO,MAAAwO,EAAAI,OAAAJ,EAAAY,aAAAZ,EAAAyG,gBACA1R,EAAAD,QAAAyM,GAGAylE,EAAAzlE,EAAAzM,GACAA,EAAAkL,OAAAinE,GAOAA,EAAAzzE,UAAAtB,OAAAyC,OAAAqL,EAAAxM,WAGAwzE,EAAAhnE,EAAAinE,GAEAA,EAAAz1E,KAAA,SAAAkP,EAAAC,EAAA9O,GACA,GAAA,iBAAA6O,EACA,MAAA,IAAA5P,UAAA,iCAEA,OAAAkP,EAAAU,EAAAC,EAAA9O,EACA,EAEAo1E,EAAA7mE,MAAA,SAAAgC,EAAAoE,EAAA1F,GACA,GAAA,iBAAAsB,EACA,MAAA,IAAAtR,UAAA,6BAEA,IAAA2P,EAAAT,EAAAoC,GAUA,YATAV,IAAA8E,EACA,iBAAA1F,EACAL,EAAA+F,KAAAA,EAAA1F,GAEAL,EAAA+F,KAAAA,GAGA/F,EAAA+F,KAAA,GAEA/F,CACA,EAEAwmE,EAAArmE,YAAA,SAAAwB,GACA,GAAA,iBAAAA,EACA,MAAA,IAAAtR,UAAA,6BAEA,OAAAkP,EAAAoC,EACA,EAEA6kE,EAAAxgE,gBAAA,SAAArE,GACA,GAAA,iBAAAA,EACA,MAAA,IAAAtR,UAAA,6BAEA,OAAAyQ,EAAApB,WAAAiC,EACA,CjI6snBA,EAAE,CAACb,OAAS,KAAK,IAAI,CAAC,SAAS/L,EAAQT,EAAOD,GkI3wnB9C,IAAAga,EAAAtZ,EAAA,iBACAR,EAAAQ,EAAA,wBACA0xE,EAAA1xE,EAAA,2BAAAA,GACA2xE,EAAA3xE,EAAA,QAEA4Z,EAAA5Z,EAAA,kBACAuzD,EAAAj6C,EAAA,gBAGA/Z,EAAAD,QAAA,SAAAsB,EAAAvE,GACA,GAAA,mBAAAuE,EACA,MAAA,IAAAgZ,EAAA,0BAEA,GAAA,iBAAAvd,GAAAA,EAAA,GAAAA,EAAA,YAAAk3D,EAAAl3D,KAAAA,EACA,MAAA,IAAAud,EAAA,8CAGA,IAAAoL,EAAAznB,UAAAlB,OAAA,KAAAkB,UAAA,GAEAq0E,GAAA,EACAC,GAAA,EACA,GAAA,WAAAjxE,GAAA+wE,EAAA,CACA,IAAA1sD,EAAA0sD,EAAA/wE,EAAA,UACAqkB,IAAAA,EAAAnoB,eACA80E,GAAA,GAEA3sD,IAAAA,EAAAloB,WACA80E,GAAA,EAEA,CASA,OAPAD,GAAAC,IAAA7sD,KACA0sD,EACAlyE,EAAAoB,EAAA,SAAAvE,GAAA,GAAA,GAEAmD,EAAAoB,EAAA,SAAAvE,IAGAuE,CACA,ClIgxnBA,EAAE,CAAC,uBAAuB,GAAG,iBAAiB,GAAG,gBAAgB,GAAG+jB,KAAO,GAAG,2BAA2B,KAAK,IAAI,CAAC,SAAS3kB,EAAQT,EAAOD,GmIvznB3I,IAAAga,EAAAtZ,EAAA,iBACA8xE,EAAA9xE,EAAA,uBACA2R,EAAA3R,EAAA,kBAEA4Z,EAAA5Z,EAAA,kBACA+xE,EAAAz4D,EAAA,aAAA,GACA04D,EAAA14D,EAAA,SAAA,GAEA24D,EAAAH,EAAA,yBAAA,GACAI,EAAAJ,EAAA,yBAAA,GACAK,EAAAL,EAAA,yBAAA,GACAM,EAAAN,EAAA,qBAAA,GACAO,EAAAP,EAAA,qBAAA,GACAQ,EAAAR,EAAA,qBAAA,GAQAS,EAAA,SAAAnhE,EAAAtT,GAKA,IAHA,IAEA00E,EAFA/c,EAAArkD,EAGA,QAAAohE,EAAA/c,EAAA50D,MAAA40D,EAAA+c,EACA,GAAAA,EAAA10E,MAAAA,EAKA,OAJA23D,EAAA50D,KAAA2xE,EAAA3xE,KAEA2xE,EAAA3xE,KAAAuQ,EAAAvQ,KACAuQ,EAAAvQ,KAAA2xE,EACAA,CAGA,EA2BAjzE,EAAAD,QAAA,WACA,IAAAmzE,EACA/zD,EACAg0D,EAGAC,EAAA,CACAC,OAAA,SAAA90E,GACA,IAAA60E,EAAAlgB,IAAA30D,GACA,MAAA,IAAA8b,EAAA,iCAAAjI,EAAA7T,GAEA,EACAZ,IAAA,SAAAY,GACA,GAAAi0E,GAAAj0E,IAAA,WAAAK,QAAAL,IAAA,mBAAAA,IACA,GAAA20E,EACA,OAAAR,EAAAQ,EAAA30E,QAEA,GAAAk0E,GACA,GAAAtzD,EACA,OAAA0zD,EAAA1zD,EAAA5gB,QAGA,GAAA40E,EACA,OA/CA,SAAAG,EAAA/0E,GACA,IAAAg1E,EAAAP,EAAAM,EAAA/0E,GACA,OAAAg1E,GAAAA,EAAAl2E,KACA,CA4CAm2E,CAAAL,EAAA50E,EAGA,EACA20D,IAAA,SAAA30D,GACA,GAAAi0E,GAAAj0E,IAAA,WAAAK,QAAAL,IAAA,mBAAAA,IACA,GAAA20E,EACA,OAAAN,EAAAM,EAAA30E,QAEA,GAAAk0E,GACA,GAAAtzD,EACA,OAAA4zD,EAAA5zD,EAAA5gB,QAGA,GAAA40E,EACA,OA3CA,SAAAG,EAAA/0E,GACA,QAAAy0E,EAAAM,EAAA/0E,EACA,CAyCAk1E,CAAAN,EAAA50E,GAGA,OAAA,CACA,EACA0X,IAAA,SAAA1X,EAAAlB,GACAm1E,GAAAj0E,IAAA,WAAAK,QAAAL,IAAA,mBAAAA,IACA20E,IACAA,EAAA,IAAAV,GAEAG,EAAAO,EAAA30E,EAAAlB,IACAo1E,GACAtzD,IACAA,EAAA,IAAAszD,GAEAK,EAAA3zD,EAAA5gB,EAAAlB,KAEA81E,IAEAA,EAAA,CAAA50E,IAAA,CAAA,EAAA+C,KAAA,OA5EA,SAAAgyE,EAAA/0E,EAAAlB,GACA,IAAAk2E,EAAAP,EAAAM,EAAA/0E,GACAg1E,EACAA,EAAAl2E,MAAAA,EAGAi2E,EAAAhyE,KAAA,CACA/C,IAAAA,EACA+C,KAAAgyE,EAAAhyE,KACAjE,MAAAA,EAGA,CAkEAq2E,CAAAP,EAAA50E,EAAAlB,GAEA,GAEA,OAAA+1E,CACA,CnI4znBA,EAAE,CAAC,sBAAsB,GAAG,iBAAiB,GAAG,gBAAgB,GAAG,iBAAiB,MAAM,IAAI,CAAC,SAAS3yE,EAAQT,EAAOD,IACvH,SAAWkL,IAAQ,iGoI57nBnBjL,EAAAD,QAAA,SAAA4zE,EAAA1yE,GACA,IAAA2yE,EAAA,GACAD,EAAAzsD,GAAA,QAAA,SAAA2sD,GACAD,EAAArxE,KAAAsxE,EACA,IACAF,EAAApyE,KAAA,OAAA,WACAN,GAAAA,EAAA,KAAAgK,EAAAtH,OAAAiwE,IACA3yE,EAAA,IACA,IACA0yE,EAAApyE,KAAA,SAAA,SAAAU,GACAhB,GAAAA,EAAAgB,GACAhB,EAAA,IACA,GACA,CpIg8nBC,GAAE7E,KAAKkE,KAAM,GAAElE,KAAKkE,KAAKG,EAAQ,UAAUwK,OAE5C,EAAE,CAACuB,OAAS,KAAK,IAAI,CAAC,SAAS/L,EAAQT,EAAOD,IAC9C,SAAWkL,IAAQ,8FqIh9nBnBjL,EAAAD,QAAA+zE,EAEA,IAAAnwE,EAAAlD,EAAA,iBACAszE,EAAAtzE,EAAA,uBACAumD,EAAAvmD,EAAA,QACAwmD,EAAAxmD,EAAA,SACAc,EAAAd,EAAA,QACAuzE,EAAAvzE,EAAA,eACAg8C,EAAAh8C,EAAA,OAEAwzE,EAAA,SAAA/1E,GAAA,OAAA,OAAAA,GAAA,WAAAU,QAAAV,IAAA,mBAAAA,EAAAg2E,IAAA,EAEA,SAAAJ,EAAA3e,EAAAl0D,GAIA,GAHAk0D,EAAAh4D,OAAAszB,OAAA,CAAA0jD,aAAA,IAAA,iBAAAhf,EAAA,CAAA1Y,IAAA0Y,GAAAA,GACAl0D,EAAAM,EAAAN,GAEAk0D,EAAA1Y,IAAA,CACA,IAAA23B,EAAA33B,EAAA9xC,MAAAwqD,EAAA1Y,KAAA43B,EAAAD,EAAAC,SAAAC,EAAAF,EAAAE,KAAAltB,EAAAgtB,EAAAhtB,SAAAmtB,EAAAH,EAAAG,KAAA54D,EAAAy4D,EAAAz4D,YACAw5C,EAAA1Y,IACA43B,GAAAC,GAAAltB,GAAAmtB,EACAp3E,OAAAszB,OAAA0kC,EAAA,CAAAkf,SAAAA,EAAAC,KAAAA,EAAAltB,SAAAA,EAAAmtB,KAAAA,EAAA54D,KAAAA,IADAw5C,EAAAx5C,KAAAA,CAEA,CAEA,IAIAqiC,EAJA1B,EAAA,CAAA,kBAAA,iBACA6Y,EAAA7Y,SAAAn/C,OAAA2F,KAAAqyD,EAAA7Y,SAAAp7B,SAAA,SAAAne,GAAA,OAAAu5C,EAAAv5C,EAAA2K,eAAAynD,EAAA7Y,QAAAv5C,EAAA,IACAoyD,EAAA7Y,QAAAA,EAGA6Y,EAAAnX,KACAA,EAAAmX,EAAA1X,OAAAw2B,EAAA9e,EAAAnX,MAAAhxB,KAAApmB,UAAAuuD,EAAAnX,MAAAmX,EAAAnX,KACAmX,EAAAqf,OACAx2B,EAAA,iBAAAmX,EAAAqf,KAAArf,EAAAqf,KAAAR,EAAAptE,UAAAuuD,EAAAqf,MACArf,EAAA7Y,QAAA,gBAAA,qCAGA0B,IACAmX,EAAApY,SAAAoY,EAAApY,OAAA,QACAk3B,EAAAj2B,KAAAmX,EAAA7Y,QAAA,kBAAArxC,EAAArH,WAAAo6C,IACAmX,EAAA1X,OAAA0X,EAAAqf,OAAArf,EAAA7Y,QAAA,gBAAA,4BAEA6Y,EAAAnX,YAAAmX,EAAAqf,KAEArf,EAAA1X,OAAA0X,EAAA7Y,QAAAm4B,OAAA,oBACAtf,EAAApY,SAAAoY,EAAApY,OAAAoY,EAAApY,OAAA7e,eAEA,IAAAw2C,EAAAvf,EAAAkf,SAEAM,GADA,WAAAxf,EAAA/N,SAAAH,EAAAD,GACAK,QAAA8N,GAAA,SAAA9kD,GACA,IAAA,IAAA8kD,EAAAyf,iBAAAvkE,EAAA8sC,YAAA,KAAA9sC,EAAA8sC,WAAA,KAAA9sC,EAAAisC,QAAAu4B,SAAA,CACA1f,EAAA1Y,IAAApsC,EAAAisC,QAAAu4B,gBACA1f,EAAA7Y,QAAAw4B,KACAzkE,EAAA0kE,SAEA,IAAAC,EAAAv4B,EAAA9xC,MAAAwqD,EAAA1Y,KAAA43B,SAYA,OAVA,OAAAW,GAAAA,IAAAN,WACAvf,EAAA7Y,QAAAJ,cACAiZ,EAAA7Y,QAAA24B,eAGA,SAAA9f,EAAApY,QAAA,CAAA,IAAA,KAAApqC,SAAAtC,EAAA8sC,cACAgY,EAAApY,OAAA,aACAoY,EAAA7Y,QAAA,yBAAA6Y,EAAA7Y,QAAA,iBAGA,GAAA6Y,EAAAgf,eAAAlzE,EAAA,IAAAN,MAAA,uBACAmzE,EAAA3e,EAAAl0D,EACA,CAEA,IAAAi0E,EAAA,mBAAAnB,GAAA,SAAA5e,EAAApY,OACA97C,EAAA,KAAAi0E,EAAAnB,EAAA1jE,GAAAA,EACA,IAUA,OATAskE,EAAAztD,GAAA,WAAA,WACAytD,EAAAQ,QACAl0E,EAAA,IAAAN,MAAA,qBACA,IACAg0E,EAAAztD,GAAA,QAAAjmB,GAEAgzE,EAAAj2B,GAAAA,EAAA92B,GAAA,QAAAjmB,GAAAizE,KAAAS,GACAA,EAAAtvE,IAAA24C,GAEA22B,CACA,CAEAb,EAAAnwE,OAAA,SAAAwxD,EAAAl0D,GACA,OAAA6yE,EAAA3e,GAAA,SAAAlzD,EAAAoO,GACA,GAAApO,EAAA,OAAAhB,EAAAgB,GACA0B,EAAA0M,GAAA,SAAApO,EAAAiL,GACA,GAAAjL,EAAA,OAAAhB,EAAAgB,GACA,GAAAkzD,EAAA1X,KACA,IACAvwC,EAAA8f,KAAAriB,MAAAuC,EAAA/Q,WACA,CAAA,MAAA8F,GACA,OAAAhB,EAAAgB,EAAAoO,EAAAnD,EACA,CAEAjM,EAAA,KAAAoP,EAAAnD,EACA,GACA,GACA,EAEA,CAAA,MAAA,OAAA,MAAA,QAAA,OAAA,UAAAgU,SAAA,SAAA67B,GACA+2B,EAAA/2B,GAAA,SAAAoY,EAAAl0D,GAEA,MADA,iBAAAk0D,IAAAA,EAAA,CAAA1Y,IAAA0Y,IACA2e,EAAA32E,OAAAszB,OAAA,CAAAssB,OAAAA,EAAA7e,eAAAi3B,GAAAl0D,EACA,CACA,GrIo9nBC,GAAE7E,KAAKkE,KAAM,GAAElE,KAAKkE,KAAKG,EAAQ,UAAUwK,OAE5C,EAAE,CAACuB,OAAS,GAAG,sBAAsB,GAAGw6C,KAAO,IAAIC,MAAQ,GAAG1lD,KAAO,IAAIyyE,YAAc,IAAI,gBAAgB,IAAIv3B,IAAM,MAAM,IAAI,CAAC,SAASh8C,EAAQT,EAAOD,IACxJ,SAAWK,IAAQ,WsIlkoBnB,IAAAg1E,EAAA30E,EAAA,iBACA40E,EAAA50E,EAAA,kBACA0gB,EAAA1gB,EAAA,SACA60E,EAAA70E,EAAA,wBACAg8C,EAAAh8C,EAAA,OAEAumD,EAAAjnD,EAEAinD,EAAAK,QAAA,SAAA8N,EAAAl0D,GAEAk0D,EADA,iBAAAA,EACA1Y,EAAA9xC,MAAAwqD,GAEAh0C,EAAAg0C,GAKA,IAAAogB,GAAA,IAAAn1E,EAAAy0E,SAAAztB,SAAA38C,OAAA,aAAA,QAAA,GAEA28C,EAAA+N,EAAA/N,UAAAmuB,EACAT,EAAA3f,EAAAkf,UAAAlf,EAAA2f,KACAR,EAAAnf,EAAAmf,KACA34D,EAAAw5C,EAAAx5C,MAAA,IAGAm5D,IAAA,IAAAA,EAAA3vE,QAAA,OACA2vE,EAAA,IAAAA,EAAA,KAGA3f,EAAA1Y,KAAAq4B,EAAA1tB,EAAA,KAAA0tB,EAAA,KAAAR,EAAA,IAAAA,EAAA,IAAA34D,EACAw5C,EAAApY,QAAAoY,EAAApY,QAAA,OAAA7e,cACAi3B,EAAA7Y,QAAA6Y,EAAA7Y,SAAA,CAAA,EAIA,IAAAq4B,EAAA,IAAAS,EAAAjgB,GAGA,OAFAl0D,GACA0zE,EAAAztD,GAAA,WAAAjmB,GACA0zE,CACA,EAEA3tB,EAAArpD,IAAA,SAAAw3D,EAAAl0D,GACA,IAAA0zE,EAAA3tB,EAAAK,QAAA8N,EAAAl0D,GAEA,OADA0zE,EAAAtvE,MACAsvE,CACA,EAEA3tB,EAAAouB,cAAAA,EACApuB,EAAAwuB,gBAAAH,EAAAG,gBAEAxuB,EAAAyuB,MAAA,WAAA,EACAzuB,EAAAyuB,MAAAC,kBAAA,EAEA1uB,EAAA2uB,YAAA,IAAA3uB,EAAAyuB,MAEAzuB,EAAA4uB,aAAAN,EAEAtuB,EAAA6uB,QAAA,CACA,WACA,UACA,OACA,SACA,MACA,OACA,OACA,WACA,QACA,aACA,QACA,OACA,SACA,UACA,QACA,OACA,WACA,YACA,QACA,MACA,SACA,SACA,YACA,QACA,SACA,ctIqkoBC,GAAEz5E,KAAKkE,KAAM,GAAElE,KAAKkE,KAAuB,oBAAXF,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAElJ,EAAE,CAAC,gBAAgB,IAAI,iBAAiB,IAAI,uBAAuB,GAAGs8C,IAAM,IAAIq5B,MAAQ,MAAM,IAAI,CAAC,SAASr1E,EAAQT,EAAOD,IAC3H,SAAWK,IAAQ,WuIlpoBnB,IAAA21E,EACA,SAAAC,IAEA,QAAArpE,IAAAopE,EAAA,OAAAA,EAEA,GAAA31E,EAAA61E,eAAA,CACAF,EAAA,IAAA31E,EAAA61E,eAIA,IACAF,EAAAtmC,KAAA,MAAArvC,EAAA81E,eAAA,IAAA,sBACA,CAAA,MAAAn5E,GACAg5E,EAAA,IACA,CACA,MAEAA,EAAA,KAEA,OAAAA,CACA,CAEA,SAAAI,EAAAlpE,GACA,IAAA8oE,EAAAC,IACA,IAAAD,EAAA,OAAA,EACA,IAEA,OADAA,EAAAK,aAAAnpE,EACA8oE,EAAAK,eAAAnpE,CACA,CAAA,MAAAlQ,GAAA,CACA,OAAA,CACA,CAeA,SAAAs5E,EAAAh5E,GACA,MAAA,mBAAAA,CACA,CAxDA0C,EAAAu2E,MAAAD,EAAAj2E,EAAAk2E,QAAAD,EAAAj2E,EAAAm2E,gBAEAx2E,EAAAy2E,eAAAH,EAAAj2E,EAAAq2E,gBAEA12E,EAAA22E,gBAAAL,EAAAj2E,EAAAu2E,iBAuCA52E,EAAA62E,YAAA72E,EAAAu2E,OAAAH,EAAA,eAIAp2E,EAAA82E,UAAA92E,EAAAu2E,OAAAH,EAAA,aACAp2E,EAAA+2E,uBAAA/2E,EAAAu2E,OAAAH,EAAA,2BAIAp2E,EAAAg3E,iBAAAh3E,EAAAu2E,SAAAN,KAAAK,EAAAL,IAAAe,kBAMAhB,EAAA,IvI8poBC,GAAE35E,KAAKkE,KAAM,GAAElE,KAAKkE,KAAuB,oBAAXF,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAElJ,EAAE,CAAC,GAAG,IAAI,CAAC,SAASM,EAAQT,EAAOD,IACnC,SAAW0yB,EAAQryB,EAAO6K,IAAQ,WwI3toBlC,IAAA+rE,EAAAv2E,EAAA,gBACAw2E,EAAAx2E,EAAA,YACA40E,EAAA50E,EAAA,cACAkzE,EAAAlzE,EAAA,mBAEA+0E,EAAAH,EAAAG,gBACA0B,EAAA7B,EAAA8B,YAgBA,IAAA/B,EAAAp1E,EAAAD,QAAA,SAAAo1D,GACA,IAYAiiB,EAZA/2E,EAAAC,KACAqzE,EAAA0D,SAAAj7E,KAAAiE,GAEAA,EAAAi3E,MAAAniB,EACA90D,EAAAk3E,MAAA,GACAl3E,EAAAm3E,SAAA,CAAA,EACAriB,EAAAof,MACAl0E,EAAA87B,UAAA,gBAAA,SAAAlxB,EAAAxO,KAAA04D,EAAAof,MAAAp4E,SAAA,WACAgB,OAAA2F,KAAAqyD,EAAA7Y,SAAAp7B,SAAA,SAAA3kB,GACA8D,EAAA87B,UAAA5/B,EAAA44D,EAAA7Y,QAAA//C,GACA,IAGA,IAAAk7E,GAAA,EACA,GAAA,kBAAAtiB,EAAAuiB,MAAA,mBAAAviB,IAAA6hB,EAAAN,gBAEAe,GAAA,EACAL,GAAA,OACA,GAAA,qBAAAjiB,EAAAuiB,KAGAN,GAAA,OACA,GAAA,6BAAAjiB,EAAAuiB,KAEAN,GAAAJ,EAAAD,qBACA,IAAA5hB,EAAAuiB,MAAA,YAAAviB,EAAAuiB,MAAA,gBAAAviB,EAAAuiB,KAIA,MAAA,IAAA/2E,MAAA,+BAFAy2E,GAAA,CAGA,CACA/2E,EAAAs3E,MA9CA,SAAAP,EAAAK,GACA,OAAAT,EAAAV,OAAAmB,EACA,QACAT,EAAAF,sBACA,0BACAE,EAAAH,SACA,YACAG,EAAAJ,aAAAQ,EACA,cAEA,MAEA,CAkCAQ,CAAAR,EAAAK,GACAp3E,EAAAw3E,YAAA,KACAx3E,EAAAy3E,eAAA,KACAz3E,EAAA03E,aAAA,KAEA13E,EAAA6mB,GAAA,UAAA,WACA7mB,EAAA23E,WACA,GACA,EAEAf,EAAA7B,EAAAzB,EAAA0D,UAEAjC,EAAA32E,UAAA09B,UAAA,SAAA5/B,EAAAc,GACA,IACA46E,EAAA17E,EAAAmR,eAIA,IAAAwqE,EAAA/yE,QAAA8yE,KALA33E,KAQAk3E,SAAAS,GAAA,CACA17E,KAAAA,EACAc,MAAAA,GAEA,EAEA+3E,EAAA32E,UAAA05E,UAAA,SAAA57E,GACA,IAAA67E,EAAA93E,KAAAk3E,SAAAj7E,EAAAmR,eACA,OAAA0qE,EACAA,EAAA/6E,MACA,IACA,EAEA+3E,EAAA32E,UAAA45E,aAAA,SAAA97E,UACA+D,KACAk3E,SAAAj7E,EAAAmR,cACA,EAEA0nE,EAAA32E,UAAAu5E,UAAA,WACA,IAAA33E,EAAAC,KAEA,IAAAD,EAAAi4E,WAAA,CAEA,IAAAnjB,EAAA90D,EAAAi3E,MAEA,YAAAniB,GAAA,IAAAA,EAAAoS,SACAlnE,EAAAkD,WAAA4xD,EAAAoS,SAGA,IAAAgR,EAAAl4E,EAAAm3E,SACAx5B,EAAA,KACA,QAAAmX,EAAApY,QAAA,SAAAoY,EAAApY,SACAiB,EAAA,IAAAw6B,KAAAn4E,EAAAk3E,MAAA,CACAtqE,MAAAsrE,EAAA,iBAAA,CAAA,GAAAl7E,OAAA,MAKA,IAAAo7E,EAAA,GAaA,GAZAt7E,OAAA2F,KAAAy1E,GAAAr3D,SAAA,SAAAw3D,GACA,IAAAn8E,EAAAg8E,EAAAG,GAAAn8E,KACAc,EAAAk7E,EAAAG,GAAAr7E,MACAb,MAAAK,QAAAQ,GACAA,EAAA6jB,SAAA,SAAApE,GACA27D,EAAAl2E,KAAA,CAAAhG,EAAAugB,GACA,IAEA27D,EAAAl2E,KAAA,CAAAhG,EAAAc,GAEA,IAEA,UAAAgD,EAAAs3E,MAAA,CACA,IAAAgB,EAAA,KACA,GAAA3B,EAAAN,gBAAA,CACA,IAAAkC,EAAA,IAAAjC,gBACAgC,EAAAC,EAAAD,OACAt4E,EAAAw4E,sBAAAD,EAEA,mBAAAzjB,GAAA,IAAAA,EAAA2jB,iBACAz4E,EAAAw3E,YAAAz3E,EAAAmD,YAAA,WACAlD,EAAA6nB,KAAA,kBACA7nB,EAAAw4E,uBACAx4E,EAAAw4E,sBAAA1D,OACA,GAAAhgB,EAAA2jB,gBAEA,CAEA14E,EAAAk2E,MAAAj2E,EAAAi3E,MAAA76B,IAAA,CACAM,OAAA18C,EAAAi3E,MAAAv6B,OACAT,QAAAm8B,EACAz6B,KAAAA,QAAArxC,EACA+qE,KAAA,OACAqB,YAAA5jB,EAAA6jB,gBAAA,UAAA,cACAL,OAAAA,IACAM,MAAA,SAAA5D,GACAh1E,EAAA64E,eAAA7D,EACAh1E,EAAA84E,cAAA,GACA94E,EAAA+4E,UACA,IAAA,SAAAC,GACAh5E,EAAA84E,cAAA,GACA94E,EAAAi4E,YACAj4E,EAAA6nB,KAAA,QAAAmxD,EACA,GACA,KAAA,CACA,IAAAtD,EAAA11E,EAAAi5E,KAAA,IAAAl5E,EAAA61E,eACA,IACAF,EAAAtmC,KAAApvC,EAAAi3E,MAAAv6B,OAAA18C,EAAAi3E,MAAA76B,KAAA,EACA,CAAA,MAAAx6C,GAIA,YAHAwwB,EAAAm1C,UAAA,WACAvnE,EAAA6nB,KAAA,QAAAjmB,EACA,GAEA,CAGA,iBAAA8zE,IACAA,EAAAK,aAAA/1E,EAAAs3E,OAEA,oBAAA5B,IACAA,EAAAiD,kBAAA7jB,EAAA6jB,iBAEA,SAAA34E,EAAAs3E,OAAA,qBAAA5B,GACAA,EAAAgB,iBAAA,sCAEA,mBAAA5hB,IACA4gB,EAAAxO,QAAApS,EAAA2jB,eACA/C,EAAAwD,UAAA,WACAl5E,EAAA6nB,KAAA,iBACA,GAGAuwD,EAAAv3D,SAAA,SAAAk3D,GACArC,EAAAyD,iBAAApB,EAAA,GAAAA,EAAA,GACA,IAEA/3E,EAAAo5E,UAAA,KACA1D,EAAA2D,mBAAA,WACA,OAAA3D,EAAA4D,YACA,KAAAzC,EAAA0C,QACA,KAAA1C,EAAA2C,KACAx5E,EAAAy5E,iBAGA,EAGA,4BAAAz5E,EAAAs3E,QACA5B,EAAAgE,WAAA,WACA15E,EAAAy5E,gBACA,GAGA/D,EAAAiE,QAAA,WACA35E,EAAAi4E,aAEAj4E,EAAA84E,cAAA,GACA94E,EAAA6nB,KAAA,QAAA,IAAAvnB,MAAA,cACA,EAEA,IACAo1E,EAAAkE,KAAAj8B,EACA,CAAA,MAAA/7C,GAIA,YAHAwwB,EAAAm1C,UAAA,WACAvnE,EAAA6nB,KAAA,QAAAjmB,EACA,GAEA,CACA,CA7HA,CA8HA,EAgBAmzE,EAAA32E,UAAAq7E,eAAA,WACA,IAAAz5E,EAAAC,KAEAD,EAAA84E,cAAA,GAZA,SAAApD,GACA,IACA,IAAAmE,EAAAnE,EAAAmE,OACA,OAAA,OAAAA,GAAA,IAAAA,CACA,CAAA,MAAAn9E,GACA,OAAA,CACA,CACA,CAOAo9E,CAAA95E,EAAAi5E,QAAAj5E,EAAAi4E,aAGAj4E,EAAAo5E,WACAp5E,EAAA+4E,WAEA/4E,EAAAo5E,UAAAK,eAAAz5E,EAAA84E,aAAAv7E,KAAAyC,IACA,EAEA+0E,EAAA32E,UAAA26E,SAAA,WACA,IAAA/4E,EAAAC,KAEAD,EAAAi4E,aAGAj4E,EAAAo5E,UAAA,IAAAjE,EAAAn1E,EAAAi5E,KAAAj5E,EAAA64E,eAAA74E,EAAAs3E,MAAAt3E,EAAA84E,aAAAv7E,KAAAyC,IACAA,EAAAo5E,UAAAvyD,GAAA,SAAA,SAAAjlB,GACA5B,EAAA6nB,KAAA,QAAAjmB,EACA,IAEA5B,EAAA6nB,KAAA,WAAA7nB,EAAAo5E,WACA,EAEArE,EAAA32E,UAAA27E,OAAA,SAAAvG,EAAA9nE,EAAA9K,GACAX,KAEAi3E,MAAAh1E,KAAAsxE,GACA5yE,GACA,EAEAm0E,EAAA32E,UAAA06E,aAAA,SAAAt3E,GACA,IAAAxB,EAAAC,KAEAF,EAAA4mE,aAAA3mE,EAAA03E,cACA13E,EAAA03E,aAAA,KAEAl2E,GACAzB,EAAA4mE,aAAA3mE,EAAAw3E,aACAx3E,EAAAw3E,YAAA,MACAx3E,EAAAy3E,iBACAz3E,EAAA03E,aAAA33E,EAAAmD,YAAA,WACAlD,EAAA6nB,KAAA,UACA,GAAA7nB,EAAAy3E,gBAEA,EAEA1C,EAAA32E,UAAA02E,MAAAC,EAAA32E,UAAA47E,QAAA,SAAAp4E,GACA,IAAA5B,EAAAC,KACAD,EAAAi4E,YAAA,EACAj4E,EAAA84E,cAAA,GACA94E,EAAAo5E,YACAp5E,EAAAo5E,UAAAnB,YAAA,GACAj4E,EAAAi5E,KACAj5E,EAAAi5E,KAAAnE,QACA90E,EAAAw4E,uBACAx4E,EAAAw4E,sBAAA1D,QAEAlzE,GACA5B,EAAA6nB,KAAA,QAAAjmB,EACA,EAEAmzE,EAAA32E,UAAA4G,IAAA,SAAA6H,EAAAnB,EAAA9K,GAEA,mBAAAiM,IACAjM,EAAAiM,EACAA,OAAAP,GAGAgnE,EAAA0D,SAAA54E,UAAA4G,IAAAjJ,KANAkE,KAMA4M,EAAAnB,EAAA9K,EACA,EAEAm0E,EAAA32E,UAAA8E,WAAA,SAAAgkE,EAAAtmE,GACA,IAAAZ,EAAAC,KAEAW,GACAZ,EAAAkB,KAAA,UAAAN,GAEAZ,EAAAy3E,eAAAvQ,EACAlnE,EAAA84E,cAAA,EACA,EAEA/D,EAAA32E,UAAA67E,aAAA,WAAA,EACAlF,EAAA32E,UAAA87E,WAAA,WAAA,EACAnF,EAAA32E,UAAA+7E,mBAAA,WAAA,EAGA,IAAAtC,EAAA,CACA,iBACA,kBACA,iCACA,gCACA,aACA,iBACA,SACA,UACA,OACA,MACA,SACA,OACA,aACA,SACA,UACA,KACA,UACA,oBACA,UACA,MxI+toBC,GAAE97E,KAAKkE,KAAM,GAAElE,KAAKkE,KAAKG,EAAQ,YAA8B,oBAAXL,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAAEM,EAAQ,UAAUwK,OAE1L,EAAE,CAAC,eAAe,IAAI,aAAa,IAAIsoB,SAAW,IAAI/mB,OAAS,GAAGyqE,SAAW,GAAG,kBAAkB,MAAM,IAAI,CAAC,SAASx2E,EAAQT,EAAOD,IACrI,SAAW0yB,EAAQryB,EAAO6K,IAAQ,WyIhkpBlC,IAAA+rE,EAAAv2E,EAAA,gBACAw2E,EAAAx2E,EAAA,YACAkzE,EAAAlzE,EAAA,mBAEAy2E,EAAAn3E,EAAAo3E,YAAA,CACAsD,OAAA,EACAC,OAAA,EACAC,iBAAA,EACAf,QAAA,EACAC,KAAA,GAGArE,EAAAz1E,EAAAy1E,gBAAA,SAAAO,EAAAV,EAAAqC,EAAAkD,GACA,IAAAv6E,EAAAC,KAiBA,GAhBAqzE,EAAAkH,SAAAz+E,KAAAiE,GAEAA,EAAAs3E,MAAAD,EACAr3E,EAAAi8C,QAAA,CAAA,EACAj8C,EAAAy6E,WAAA,GACAz6E,EAAA06E,SAAA,CAAA,EACA16E,EAAA26E,YAAA,GAGA36E,EAAA6mB,GAAA,OAAA,WAEAuL,EAAAm1C,UAAA,WACAvnE,EAAA6nB,KAAA,QACA,GACA,IAEA,UAAAwvD,EAAA,CAYA,GAXAr3E,EAAA64E,eAAA7D,EAEAh1E,EAAAo8C,IAAA44B,EAAA54B,IACAp8C,EAAA88C,WAAAk4B,EAAA6E,OACA75E,EAAA46E,cAAA5F,EAAA6F,WAEA7F,EAAA/4B,QAAAp7B,SAAA,SAAAk3D,EAAA75E,GACA8B,EAAAi8C,QAAA/9C,EAAAmP,eAAA0qE,EACA/3E,EAAAy6E,WAAAv4E,KAAAhE,EAAA65E,EACA,IAEApB,EAAAR,eAAA,CACA,IAAAh5E,EAAA,IAAAi5E,eAAA,CACAvqE,MAAA,SAAA2nE,GAEA,OADA+G,GAAA,GACA,IAAAn0D,SAAA,SAAAC,EAAAC,GACAtmB,EAAAi4E,WACA3xD,IACAtmB,EAAAkC,KAAA0I,EAAAxO,KAAAo3E,IACAntD,IAEArmB,EAAA86E,aAAAz0D,CAEA,GACA,EACA00D,MAAA,WACAR,GAAA,GACAv6E,EAAAi4E,YACAj4E,EAAAkC,KAAA,KACA,EACA4yE,MAAA,SAAAlzE,GACA24E,GAAA,GACAv6E,EAAAi4E,YACAj4E,EAAA6nB,KAAA,QAAAjmB,EACA,IAGA,IAMA,YALAozE,EAAAr3B,KAAAq9B,OAAA79E,GAAA,OAAA,SAAAyE,GACA24E,GAAA,GACAv6E,EAAAi4E,YACAj4E,EAAA6nB,KAAA,QAAAjmB,EACA,GAEA,CAAA,MAAAlF,GAAA,CACA,CAEA,IAAA6xC,EAAAymC,EAAAr3B,KAAAs9B,aACA,SAAA1sE,IACAggC,EAAAhgC,OAAAqqE,MAAA,SAAAz3B,GACAnhD,EAAAi4E,aAEAsC,EAAAp5B,EAAA3/C,MACA2/C,EAAA3/C,KACAxB,EAAAkC,KAAA,OAGAlC,EAAAkC,KAAA0I,EAAAxO,KAAA+kD,EAAAnkD,QACAuR,KACA,IAAA,OAAA,SAAA3M,GACA24E,GAAA,GACAv6E,EAAAi4E,YACAj4E,EAAA6nB,KAAA,QAAAjmB,EACA,GACA,CACA2M,EACA,KAAA,CA2BA,GA1BAvO,EAAAi5E,KAAAvD,EACA11E,EAAAk7E,KAAA,EAEAl7E,EAAAo8C,IAAAs5B,EAAAyF,YACAn7E,EAAA88C,WAAA44B,EAAAmE,OACA75E,EAAA46E,cAAAlF,EAAAmF,WACAnF,EAAA0F,wBAAAplE,MAAA,SACA6K,SAAA,SAAAk3D,GACA,IAAAsD,EAAAtD,EAAA95D,MAAA,oBACA,GAAAo9D,EAAA,CACA,IAAAn9E,EAAAm9E,EAAA,GAAAhuE,cACA,eAAAnP,QACAoO,IAAAtM,EAAAi8C,QAAA/9C,KACA8B,EAAAi8C,QAAA/9C,GAAA,IAEA8B,EAAAi8C,QAAA/9C,GAAAgE,KAAAm5E,EAAA,UACA/uE,IAAAtM,EAAAi8C,QAAA/9C,GACA8B,EAAAi8C,QAAA/9C,IAAA,KAAAm9E,EAAA,GAEAr7E,EAAAi8C,QAAA/9C,GAAAm9E,EAAA,GAEAr7E,EAAAy6E,WAAAv4E,KAAAm5E,EAAA,GAAAA,EAAA,GACA,CACA,IAEAr7E,EAAAs7E,SAAA,kBACA3E,EAAAD,iBAAA,CACA,IAAA6E,EAAAv7E,EAAAy6E,WAAA,aACA,GAAAc,EAAA,CACA,IAAAC,EAAAD,EAAAt9D,MAAA,2BACAu9D,IACAx7E,EAAAs7E,SAAAE,EAAA,GAAAnuE,cAEA,CACArN,EAAAs7E,WACAt7E,EAAAs7E,SAAA,QACA,CACA,CACA,EAEA1E,EAAAzB,EAAA7B,EAAAkH,UAEArF,EAAA/2E,UAAAq9E,MAAA,WACA,IAEAp1D,EAFApmB,KAEA66E,aACAz0D,IAHApmB,KAIA66E,aAAA,KACAz0D,IAEA,EAEA8uD,EAAA/2E,UAAAq7E,eAAA,SAAAc,GACA,IAAAv6E,EAAAC,KAEAy1E,EAAA11E,EAAAi5E,KAEAjE,EAAA,KACA,OAAAh1E,EAAAs3E,OACA,IAAA,OAEA,IADAtC,EAAAU,EAAAgG,cACAj/E,OAAAuD,EAAAk7E,KAAA,CACA,IAAAS,EAAA3G,EAAA/lE,OAAAjP,EAAAk7E,MACA,GAAA,mBAAAl7E,EAAAs7E,SAAA,CAEA,IADA,IAAAnvE,EAAAvB,EAAAI,MAAA2wE,EAAAl/E,QACA4B,EAAA,EAAAA,EAAAs9E,EAAAl/E,OAAA4B,IACA8N,EAAA9N,GAAA,IAAAs9E,EAAAx3E,WAAA9F,GAEA2B,EAAAkC,KAAAiK,EACA,MACAnM,EAAAkC,KAAAy5E,EAAA37E,EAAAs7E,UAEAt7E,EAAAk7E,KAAAlG,EAAAv4E,MACA,CACA,MACA,IAAA,cACA,GAAAi5E,EAAA4D,aAAAzC,EAAA2C,OAAA9D,EAAAV,SACA,MACAA,EAAAU,EAAAV,SACAh1E,EAAAkC,KAAA0I,EAAAxO,KAAA,IAAAyI,WAAAmwE,KACA,MACA,IAAA,0BAEA,GADAA,EAAAU,EAAAV,SACAU,EAAA4D,aAAAzC,EAAA0C,UAAAvE,EACA,MACAh1E,EAAAkC,KAAA0I,EAAAxO,KAAA,IAAAyI,WAAAmwE,KACA,MACA,IAAA,YAEA,GADAA,EAAAU,EAAAV,SACAU,EAAA4D,aAAAzC,EAAA0C,QACA,MACA,IAAAhrC,EAAA,IAAAxuC,EAAA67E,eACArtC,EAAAmrC,WAAA,WACAnrC,EAAA4S,OAAA59C,WAAAvD,EAAAk7E,OACAl7E,EAAAkC,KAAA0I,EAAAxO,KAAA,IAAAyI,WAAA0pC,EAAA4S,OAAAnlD,MAAAgE,EAAAk7E,SACAl7E,EAAAk7E,KAAA3sC,EAAA4S,OAAA59C,WAEA,EACAgrC,EAAAstC,OAAA,WACAtB,GAAA,GACAv6E,EAAAkC,KAAA,KACA,EAEAqsC,EAAAutC,kBAAA9G,GAKAh1E,EAAAi5E,KAAAK,aAAAzC,EAAA2C,MAAA,cAAAx5E,EAAAs3E,QACAiD,GAAA,GACAv6E,EAAAkC,KAAA,MAEA,CzImkpBC,GAAEnG,KAAKkE,KAAM,GAAElE,KAAKkE,KAAKG,EAAQ,YAA8B,oBAAXL,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAAEM,EAAQ,UAAUwK,OAE1L,EAAE,CAAC,eAAe,IAAIsoB,SAAW,IAAI/mB,OAAS,GAAGyqE,SAAW,GAAG,kBAAkB,MAAM,IAAI,CAAC,SAASx2E,EAAQT,EAAOD,G0InxpBpH,IAAAq8E,EAAA,CAAA,EAEA,SAAAC,EAAAz7E,EAAA6oB,EAAA6yD,GACAA,IACAA,EAAA37E,OAWA,IAAA47E,EAEA,SAAAC,GAnBA,IAAAC,EAAAC,EAsBA,SAAAH,EAAAI,EAAAC,EAAAC,GACA,OAAAL,EAAApgF,KAAAkE,KAdA,SAAAq8E,EAAAC,EAAAC,GACA,MAAA,iBAAApzD,EACAA,EAEAA,EAAAkzD,EAAAC,EAAAC,EAEA,CAQAC,CAAAH,EAAAC,EAAAC,KAAAv8E,IACA,CAEA,OA1BAo8E,EAoBAF,GApBAC,EAoBAF,GApBA99E,UAAAtB,OAAAyC,OAAA88E,EAAAj+E,WAAAg+E,EAAAh+E,UAAAnC,YAAAmgF,EAAAA,EAAA/8E,UAAAg9E,EA0BAH,CACA,CARA,CAQAD,GAEAC,EAAA99E,UAAAlC,KAAA+/E,EAAA//E,KACAggF,EAAA99E,UAAAmC,KAAAA,EACAw7E,EAAAx7E,GAAA27E,CACA,CAGA,SAAAQ,EAAAC,EAAAC,GACA,GAAAzgF,MAAAK,QAAAmgF,GAAA,CACA,IAAAn6E,EAAAm6E,EAAAlgF,OAKA,OAJAkgF,EAAAA,EAAAzT,KAAA,SAAA7qE,GACA,OAAAI,OAAAJ,EACA,IAEAmE,EAAA,EACA,UAAAc,OAAAs5E,EAAA,KAAAt5E,OAAAq5E,EAAA3gF,MAAA,EAAAwG,EAAA,GAAAoC,KAAA,MAAA,SAAA+3E,EAAAn6E,EAAA,GACA,IAAAA,EACA,UAAAc,OAAAs5E,EAAA,KAAAt5E,OAAAq5E,EAAA,GAAA,QAAAr5E,OAAAq5E,EAAA,IAEA,MAAAr5E,OAAAs5E,EAAA,KAAAt5E,OAAAq5E,EAAA,GAEA,CACA,MAAA,MAAAr5E,OAAAs5E,EAAA,KAAAt5E,OAAA7E,OAAAk+E,GAEA,CA6BAX,EAAA,yBAAA,SAAA9/E,EAAAc,GACA,MAAA,cAAAA,EAAA,4BAAAd,EAAA,GACA,GAAAR,WACAsgF,EAAA,wBAAA,SAAA9/E,EAAAygF,EAAA/wE,GAEA,IAAAixE,EA/BAzyE,EAAAqH,EAwCAqrE,EAEA,GATA,iBAAAH,IAjCAvyE,EAiCA,OAAAuyE,EAhCA1tE,QAAAwC,GAAAA,EAAA,EAAA,GAAAA,EAAArH,EAAA3N,UAAA2N,IAiCAyyE,EAAA,cACAF,EAAAA,EAAAxyE,QAAA,QAAA,KAEA0yE,EAAA,UAhCA,SAAAxtE,EAAAjF,EAAA2yE,GAKA,YAJAzwE,IAAAywE,GAAAA,EAAA1tE,EAAA5S,UACAsgF,EAAA1tE,EAAA5S,QAGA4S,EAAAhF,UAAA0yE,EAAA3yE,EAAA3N,OAAAsgF,KAAA3yE,CACA,CA+BAgzB,CAAAlhC,EAAA,aAEA4gF,EAAA,OAAAx5E,OAAApH,EAAA,KAAAoH,OAAAu5E,EAAA,KAAAv5E,OAAAo5E,EAAAC,EAAA,aACA,CACA,IAAA/vE,EAhCA,SAAAyC,EAAAjF,EAAArF,GAKA,MAJA,iBAAAA,IACAA,EAAA,KAGAA,EAAAqF,EAAA3N,OAAA4S,EAAA5S,UAGA,IAAA4S,EAAAvK,QAAAsF,EAAArF,EAEA,CAsBAuN,CAAApW,EAAA,KAAA,WAAA,WACA4gF,EAAA,QAAAx5E,OAAApH,EAAA,MAAAoH,OAAAsJ,EAAA,KAAAtJ,OAAAu5E,EAAA,KAAAv5E,OAAAo5E,EAAAC,EAAA,QACA,CAGA,OADAG,GAAA,mBAAAx5E,OAAA/E,QAAAqN,GAEA,GAAAlQ,WACAsgF,EAAA,4BAAA,2BACAA,EAAA,8BAAA,SAAA9/E,GACA,MAAA,OAAAA,EAAA,4BACA,IACA8/E,EAAA,6BAAA,mBACAA,EAAA,wBAAA,SAAA9/E,GACA,MAAA,eAAAA,EAAA,+BACA,IACA8/E,EAAA,wBAAA,kCACAA,EAAA,yBAAA,6BACAA,EAAA,6BAAA,mBACAA,EAAA,yBAAA,sCAAAtgF,WACAsgF,EAAA,wBAAA,SAAA1wE,GACA,MAAA,qBAAAA,CACA,GAAA5P,WACAsgF,EAAA,qCAAA,oCACAr8E,EAAAD,QAAAq8E,MAAAA,C1I0xpBA,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS37E,EAAQT,EAAOD,IACnC,SAAW0yB,IAAS,W2I53pBpB,IAAAs/C,EAAA50E,OAAA2F,MAAA,SAAAnB,GACA,IAAAmB,EAAA,GACA,IAAA,IAAAvE,KAAAoD,EAAAmB,EAAAP,KAAAhE,GACA,OAAAuE,CACA,EAGA9C,EAAAD,QAAAs9E,EACA,IAAAxC,EAAAp6E,EAAA,sBACA42E,EAAA52E,EAAA,sBACAA,EAAA,WAAAA,CAAA48E,EAAAxC,GAIA,IADA,IAAA/3E,EAAAivE,EAAAsF,EAAA54E,WACAqe,EAAA,EAAAA,EAAAha,EAAAhG,OAAAggB,IAAA,CACA,IAAAigC,EAAAj6C,EAAAga,GACAugE,EAAA5+E,UAAAs+C,KAAAsgC,EAAA5+E,UAAAs+C,GAAAs6B,EAAA54E,UAAAs+C,GACA,CAEA,SAAAsgC,EAAAxiE,GACA,KAAAva,gBAAA+8E,GAAA,OAAA,IAAAA,EAAAxiE,GACAggE,EAAAz+E,KAAAkE,KAAAua,GACAw8D,EAAAj7E,KAAAkE,KAAAua,GACAva,KAAAg9E,eAAA,EACAziE,KACA,IAAAA,EAAA0iE,WAAAj9E,KAAAi9E,UAAA,IACA,IAAA1iE,EAAArd,WAAA8C,KAAA9C,UAAA,IACA,IAAAqd,EAAAyiE,gBACAh9E,KAAAg9E,eAAA,EACAh9E,KAAAiB,KAAA,MAAAi8E,IAGA,CA8BA,SAAAA,IAEAl9E,KAAAm9E,eAAAC,OAIAjrD,EAAAm1C,SAAA+V,EAAAr9E,KACA,CACA,SAAAq9E,EAAAt9E,GACAA,EAAAgF,KACA,CAvCAlI,OAAAC,eAAAigF,EAAA5+E,UAAA,wBAAA,CAIAnB,YAAA,EACAK,IAAA,WACA,OAAA2C,KAAAm9E,eAAAG,aACA,IAEAzgF,OAAAC,eAAAigF,EAAA5+E,UAAA,iBAAA,CAIAnB,YAAA,EACAK,IAAA,WACA,OAAA2C,KAAAm9E,gBAAAn9E,KAAAm9E,eAAAI,WACA,IAEA1gF,OAAAC,eAAAigF,EAAA5+E,UAAA,iBAAA,CAIAnB,YAAA,EACAK,IAAA,WACA,OAAA2C,KAAAm9E,eAAA3gF,MACA,IAeAK,OAAAC,eAAAigF,EAAA5+E,UAAA,YAAA,CAIAnB,YAAA,EACAK,IAAA,WACA,YAAAgP,IAAArM,KAAAw9E,qBAAAnxE,IAAArM,KAAAm9E,iBAGAn9E,KAAAw9E,eAAAC,WAAAz9E,KAAAm9E,eAAAM,UACA,EACA9nE,IAAA,SAAA5Y,QAGAsP,IAAArM,KAAAw9E,qBAAAnxE,IAAArM,KAAAm9E,iBAMAn9E,KAAAw9E,eAAAC,UAAA1gF,EACAiD,KAAAm9E,eAAAM,UAAA1gF,EACA,G3I45pBC,GAAEjB,KAAKkE,KAAM,GAAElE,KAAKkE,KAAKG,EAAQ,YAElC,EAAE,CAAC,qBAAqB,IAAI,qBAAqB,IAAI8yB,SAAW,IAAI0jD,SAAW,KAAK,IAAI,CAAC,SAASx2E,EAAQT,EAAOD,G4I//pBjHC,EAAAD,QAAAi+E,EACA,IAAAC,EAAAx9E,EAAA,uBAEA,SAAAu9E,EAAAnjE,GACA,KAAAva,gBAAA09E,GAAA,OAAA,IAAAA,EAAAnjE,GACAojE,EAAA7hF,KAAAkE,KAAAua,EACA,CAJApa,EAAA,WAAAA,CAAAu9E,EAAAC,GAKAD,EAAAv/E,UAAAy/E,WAAA,SAAArK,EAAA9nE,EAAA9K,GACAA,EAAA,KAAA4yE,EACA,C5I4hqBA,EAAE,CAAC,sBAAsB,IAAIoD,SAAW,KAAK,IAAI,CAAC,SAASx2E,EAAQT,EAAOD,IAC1E,SAAW0yB,EAAQryB,IAAQ,W6IviqB3B,IAAAi9E,EAHAr9E,EAAAD,QAAA86E,EAMAA,EAAAsD,cAAAA,EAGA19E,EAAA,UAAA8lB,aAAA,IACA63D,EAAA,SAAA53D,EAAAvZ,GACA,OAAAuZ,EAAAmD,UAAA1c,GAAAnQ,MACA,EAIAuhF,EAAA59E,EAAA,6BAGAwK,EAAAxK,EAAA,UAAAwK,OACAqzE,QAAA,IAAAl+E,EAAAA,EAAA,oBAAAD,OAAAA,OAAA,oBAAAE,KAAAA,KAAA,CAAA,GAAA6E,YAAA,WAAA,EASA,IACAmrB,EADAkuD,EAAA99E,EAAA,QAGA4vB,EADAkuD,GAAAA,EAAAC,SACAD,EAAAC,SAAA,UAEA,WAAA,EAIA,IAWAC,EACAC,EACAjiF,EAbAkiF,EAAAl+E,EAAA,kCACAm+E,EAAAn+E,EAAA,8BAEAo+E,EADAp+E,EAAA,4BACAo+E,iBACAC,EAAAr+E,EAAA,aAAA27E,MACA2C,EAAAD,EAAAC,qBACAC,EAAAF,EAAAE,0BACAC,EAAAH,EAAAG,2BACAC,EAAAJ,EAAAI,mCAMAz+E,EAAA,WAAAA,CAAAo6E,EAAAwD,GACA,IAAAc,EAAAP,EAAAO,eACAC,EAAA,CAAA,QAAA,QAAA,UAAA,QAAA,UAYA,SAAAjB,EAAAtjE,EAAA84D,EAAA0L,GACAhC,EAAAA,GAAA58E,EAAA,oBACAoa,EAAAA,GAAA,CAAA,EAOA,kBAAAwkE,IAAAA,EAAA1L,aAAA0J,GAIA/8E,KAAAg/E,aAAAzkE,EAAAykE,WACAD,IAAA/+E,KAAAg/E,WAAAh/E,KAAAg/E,cAAAzkE,EAAA0kE,oBAIAj/E,KAAAs9E,cAAAiB,EAAAv+E,KAAAua,EAAA,wBAAAwkE,GAKA/+E,KAAAkM,OAAA,IAAAmyE,EACAr+E,KAAAxD,OAAA,EACAwD,KAAAk/E,MAAA,KACAl/E,KAAAm/E,WAAA,EACAn/E,KAAAo/E,QAAA,KACAp/E,KAAAo9E,OAAA,EACAp9E,KAAAq/E,YAAA,EACAr/E,KAAAs/E,SAAA,EAMAt/E,KAAAmC,MAAA,EAIAnC,KAAAu/E,cAAA,EACAv/E,KAAAw/E,iBAAA,EACAx/E,KAAAy/E,mBAAA,EACAz/E,KAAA0/E,iBAAA,EACA1/E,KAAA2/E,QAAA,EAGA3/E,KAAA4/E,WAAA,IAAArlE,EAAAqlE,UAGA5/E,KAAA6/E,cAAAtlE,EAAAslE,YAGA7/E,KAAAy9E,WAAA,EAKAz9E,KAAA8/E,gBAAAvlE,EAAAulE,iBAAA,OAGA9/E,KAAA+/E,WAAA,EAGA//E,KAAAggF,aAAA,EACAhgF,KAAA6rE,QAAA,KACA7rE,KAAAyL,SAAA,KACA8O,EAAA9O,WACA0yE,IAAAA,EAAAh+E,EAAA,mBAAAg+E,eACAn+E,KAAA6rE,QAAA,IAAAsS,EAAA5jE,EAAA9O,UACAzL,KAAAyL,SAAA8O,EAAA9O,SAEA,CACA,SAAA8uE,EAAAhgE,GAEA,GADAwiE,EAAAA,GAAA58E,EAAA,sBACAH,gBAAAu6E,GAAA,OAAA,IAAAA,EAAAhgE,GAIA,IAAAwkE,EAAA/+E,gBAAA+8E,EACA/8E,KAAAw9E,eAAA,IAAAK,EAAAtjE,EAAAva,KAAA++E,GAGA/+E,KAAAi9E,UAAA,EACA1iE,IACA,mBAAAA,EAAAjM,OAAAtO,KAAAw7E,MAAAjhE,EAAAjM,MACA,mBAAAiM,EAAAw/D,UAAA/5E,KAAAigF,SAAA1lE,EAAAw/D,UAEAgE,EAAAjiF,KAAAkE,KACA,CAwDA,SAAAkgF,EAAA7M,EAAAE,EAAA9nE,EAAA00E,EAAAC,GACArwD,EAAA,mBAAAwjD,GACA,IAKArqD,EALAd,EAAAirD,EAAAmK,eACA,GAAA,OAAAjK,EACAnrD,EAAAk3D,SAAA,EAuNA,SAAAjM,EAAAjrD,GAEA,GADA2H,EAAA,cACA3H,EAAAg1D,MAAA,OACA,GAAAh1D,EAAAyjD,QAAA,CACA,IAAA0H,EAAAnrD,EAAAyjD,QAAA9mE,MACAwuE,GAAAA,EAAA/2E,SACA4rB,EAAAlc,OAAAjK,KAAAsxE,GACAnrD,EAAA5rB,QAAA4rB,EAAA42D,WAAA,EAAAzL,EAAA/2E,OAEA,CACA4rB,EAAAg1D,OAAA,EACAh1D,EAAAjmB,KAIAk+E,EAAAhN,IAGAjrD,EAAAm3D,cAAA,EACAn3D,EAAAo3D,kBACAp3D,EAAAo3D,iBAAA,EACAc,EAAAjN,IAGA,CA9OAkN,CAAAlN,EAAAjrD,QAIA,GADAg4D,IAAAl3D,EA6CA,SAAAd,EAAAmrD,GACA,IAAArqD,EAjPA7nB,EAkPAkyE,EAjPA5oE,EAAA4B,SAAAlL,IAAAA,aAAA28E,GAiPA,iBAAAzK,QAAAlnE,IAAAknE,GAAAnrD,EAAA42D,aACA91D,EAAA,IAAAu1D,EAAA,QAAA,CAAA,SAAA,SAAA,cAAAlL,IAnPA,IAAAlyE,EAqPA,OAAA6nB,CACA,CAnDAs3D,CAAAp4D,EAAAmrD,IACArqD,EACA21D,EAAAxL,EAAAnqD,QACA,GAAAd,EAAA42D,YAAAzL,GAAAA,EAAA/2E,OAAA,EAIA,GAHA,iBAAA+2E,GAAAnrD,EAAA42D,YAAAniF,OAAAsC,eAAAo0E,KAAA5oE,EAAAxM,YACAo1E,EA3MA,SAAAA,GACA,OAAA5oE,EAAAxO,KAAAo3E,EACA,CAyMAkN,CAAAlN,IAEA4M,EACA/3D,EAAAi3D,WAAAR,EAAAxL,EAAA,IAAAuL,GAAA8B,EAAArN,EAAAjrD,EAAAmrD,GAAA,QACA,GAAAnrD,EAAAg1D,MACAyB,EAAAxL,EAAA,IAAAqL,OACA,IAAAt2D,EAAAq1D,UACA,OAAA,EAEAr1D,EAAAk3D,SAAA,EACAl3D,EAAAyjD,UAAApgE,GACA8nE,EAAAnrD,EAAAyjD,QAAAjgE,MAAA2nE,GACAnrD,EAAA42D,YAAA,IAAAzL,EAAA/2E,OAAAkkF,EAAArN,EAAAjrD,EAAAmrD,GAAA,GAAAoN,EAAAtN,EAAAjrD,IAEAs4D,EAAArN,EAAAjrD,EAAAmrD,GAAA,EAEA,MACA4M,IACA/3D,EAAAk3D,SAAA,EACAqB,EAAAtN,EAAAjrD,IAOA,OAAAA,EAAAg1D,QAAAh1D,EAAA5rB,OAAA4rB,EAAAk1D,eAAA,IAAAl1D,EAAA5rB,OACA,CACA,SAAAkkF,EAAArN,EAAAjrD,EAAAmrD,EAAA4M,GACA/3D,EAAAg3D,SAAA,IAAAh3D,EAAA5rB,SAAA4rB,EAAAjmB,MACAimB,EAAA23D,WAAA,EACA1M,EAAAzrD,KAAA,OAAA2rD,KAGAnrD,EAAA5rB,QAAA4rB,EAAA42D,WAAA,EAAAzL,EAAA/2E,OACA2jF,EAAA/3D,EAAAlc,OAAA7F,QAAAktE,GAAAnrD,EAAAlc,OAAAjK,KAAAsxE,GACAnrD,EAAAm3D,cAAAc,EAAAhN,IAEAsN,EAAAtN,EAAAjrD,EACA,CA3GAvrB,OAAAC,eAAAy9E,EAAAp8E,UAAA,YAAA,CAIAnB,YAAA,EACAK,IAAA,WACA,YAAAgP,IAAArM,KAAAw9E,gBAGAx9E,KAAAw9E,eAAAC,SACA,EACA9nE,IAAA,SAAA5Y,GAGAiD,KAAAw9E,iBAMAx9E,KAAAw9E,eAAAC,UAAA1gF,EACA,IAEAw9E,EAAAp8E,UAAA47E,QAAAuE,EAAAvE,QACAQ,EAAAp8E,UAAAyiF,WAAAtC,EAAAuC,UACAtG,EAAAp8E,UAAA8hF,SAAA,SAAAt+E,EAAAhB,GACAA,EAAAgB,EACA,EAMA44E,EAAAp8E,UAAA8D,KAAA,SAAAsxE,EAAA9nE,GACA,IACA20E,EADAh4D,EAAApoB,KAAAw9E,eAcA,OAZAp1D,EAAA42D,WAUAoB,GAAA,EATA,iBAAA7M,KACA9nE,EAAAA,GAAA2c,EAAA03D,mBACA13D,EAAA3c,WACA8nE,EAAA5oE,EAAAxO,KAAAo3E,EAAA9nE,GACAA,EAAA,IAEA20E,GAAA,GAKAF,EAAAlgF,KAAAuzE,EAAA9nE,GAAA,EAAA20E,EACA,EAGA7F,EAAAp8E,UAAAkI,QAAA,SAAAktE,GACA,OAAA2M,EAAAlgF,KAAAuzE,EAAA,MAAA,GAAA,EACA,EA6DAgH,EAAAp8E,UAAA2iF,SAAA,WACA,OAAA,IAAA9gF,KAAAw9E,eAAA4B,OACA,EAGA7E,EAAAp8E,UAAA4iF,YAAA,SAAAhmE,GACAojE,IAAAA,EAAAh+E,EAAA,mBAAAg+E,eACA,IAAAtS,EAAA,IAAAsS,EAAApjE,GACA/a,KAAAw9E,eAAA3R,QAAAA,EAEA7rE,KAAAw9E,eAAA/xE,SAAAzL,KAAAw9E,eAAA3R,QAAApgE,SAKA,IAFA,IAAAlO,EAAAyC,KAAAw9E,eAAAtxE,OAAA2M,KACAmoE,EAAA,GACA,OAAAzjF,GACAyjF,GAAAnV,EAAAjgE,MAAArO,EAAAqP,MACArP,EAAAA,EAAAyD,KAKA,OAHAhB,KAAAw9E,eAAAtxE,OAAA+0E,QACA,KAAAD,GAAAhhF,KAAAw9E,eAAAtxE,OAAAjK,KAAA++E,GACAhhF,KAAAw9E,eAAAhhF,OAAAwkF,EAAAxkF,OACAwD,IACA,EAGA,IAAAkhF,EAAA,WAqBA,SAAAC,EAAAzkF,EAAA0rB,GACA,OAAA1rB,GAAA,GAAA,IAAA0rB,EAAA5rB,QAAA4rB,EAAAg1D,MAAA,EACAh1D,EAAA42D,WAAA,EACAtiF,GAAAA,EAEA0rB,EAAAg3D,SAAAh3D,EAAA5rB,OAAA4rB,EAAAlc,OAAA2M,KAAAjM,KAAApQ,OAAA4rB,EAAA5rB,QAGAE,EAAA0rB,EAAAk1D,gBAAAl1D,EAAAk1D,cA5BA,SAAA5gF,GAeA,OAdAA,GAAAwkF,EAEAxkF,EAAAwkF,GAIAxkF,IACAA,GAAAA,IAAA,EACAA,GAAAA,IAAA,EACAA,GAAAA,IAAA,EACAA,GAAAA,IAAA,EACAA,GAAAA,IAAA,GACAA,KAEAA,CACA,CAYA0kF,CAAA1kF,IACAA,GAAA0rB,EAAA5rB,OAAAE,EAEA0rB,EAAAg1D,MAIAh1D,EAAA5rB,QAHA4rB,EAAAm3D,cAAA,EACA,GAGA,CA6HA,SAAAc,EAAAhN,GACA,IAAAjrD,EAAAirD,EAAAmK,eACAztD,EAAA,eAAA3H,EAAAm3D,aAAAn3D,EAAAo3D,iBACAp3D,EAAAm3D,cAAA,EACAn3D,EAAAo3D,kBACAzvD,EAAA,eAAA3H,EAAAg3D,SACAh3D,EAAAo3D,iBAAA,EACArtD,EAAAm1C,SAAAgZ,EAAAjN,GAEA,CACA,SAAAiN,EAAAjN,GACA,IAAAjrD,EAAAirD,EAAAmK,eACAztD,EAAA,gBAAA3H,EAAAq1D,UAAAr1D,EAAA5rB,OAAA4rB,EAAAg1D,OACAh1D,EAAAq1D,YAAAr1D,EAAA5rB,SAAA4rB,EAAAg1D,QACA/J,EAAAzrD,KAAA,YACAQ,EAAAo3D,iBAAA,GASAp3D,EAAAm3D,cAAAn3D,EAAAg3D,UAAAh3D,EAAAg1D,OAAAh1D,EAAA5rB,QAAA4rB,EAAAk1D,cACA+D,EAAAhO,EACA,CAQA,SAAAsN,EAAAtN,EAAAjrD,GACAA,EAAA43D,cACA53D,EAAA43D,aAAA,EACA7tD,EAAAm1C,SAAAga,EAAAjO,EAAAjrD,GAEA,CACA,SAAAk5D,EAAAjO,EAAAjrD,GAwBA,MAAAA,EAAAk3D,UAAAl3D,EAAAg1D,QAAAh1D,EAAA5rB,OAAA4rB,EAAAk1D,eAAAl1D,EAAAg3D,SAAA,IAAAh3D,EAAA5rB,SAAA,CACA,IAAA+F,EAAA6lB,EAAA5rB,OAGA,GAFAuzB,EAAA,wBACAsjD,EAAA/kE,KAAA,GACA/L,IAAA6lB,EAAA5rB,OAEA,KACA,CACA4rB,EAAA43D,aAAA,CACA,CAgPA,SAAAuB,EAAAxhF,GACA,IAAAqoB,EAAAroB,EAAAy9E,eACAp1D,EAAAq3D,kBAAA1/E,EAAA4oB,cAAA,YAAA,EACAP,EAAAs3D,kBAAAt3D,EAAAu3D,OAGAv3D,EAAAg3D,SAAA,EAGAr/E,EAAA4oB,cAAA,QAAA,GACA5oB,EAAA00E,QAEA,CACA,SAAA+M,EAAAzhF,GACAgwB,EAAA,4BACAhwB,EAAAuO,KAAA,EACA,CAuBA,SAAAmzE,EAAApO,EAAAjrD,GACA2H,EAAA,SAAA3H,EAAAk3D,SACAl3D,EAAAk3D,SACAjM,EAAA/kE,KAAA,GAEA8Z,EAAAs3D,iBAAA,EACArM,EAAAzrD,KAAA,UACAy5D,EAAAhO,GACAjrD,EAAAg3D,UAAAh3D,EAAAk3D,SAAAjM,EAAA/kE,KAAA,EACA,CAWA,SAAA+yE,EAAAhO,GACA,IAAAjrD,EAAAirD,EAAAmK,eAEA,IADAztD,EAAA,OAAA3H,EAAAg3D,SACAh3D,EAAAg3D,SAAA,OAAA/L,EAAA/kE,SACA,CAmHA,SAAAozE,EAAAhlF,EAAA0rB,GAEA,OAAA,IAAAA,EAAA5rB,OAAA,MAEA4rB,EAAA42D,WAAAxsE,EAAA4V,EAAAlc,OAAAlE,SAAAtL,GAAAA,GAAA0rB,EAAA5rB,QAEAgW,EAAA4V,EAAAyjD,QAAAzjD,EAAAlc,OAAAvH,KAAA,IAAA,IAAAyjB,EAAAlc,OAAA1P,OAAA4rB,EAAAlc,OAAAi5C,QAAA/8B,EAAAlc,OAAA7I,OAAA+kB,EAAA5rB,QACA4rB,EAAAlc,OAAA+0E,SAGAzuE,EAAA4V,EAAAlc,OAAAy1E,QAAAjlF,EAAA0rB,EAAAyjD,SAEAr5D,GATA,IAAAA,CAUA,CACA,SAAAovE,EAAAvO,GACA,IAAAjrD,EAAAirD,EAAAmK,eACAztD,EAAA,cAAA3H,EAAAi3D,YACAj3D,EAAAi3D,aACAj3D,EAAAg1D,OAAA,EACAjrD,EAAAm1C,SAAAua,EAAAz5D,EAAAirD,GAEA,CACA,SAAAwO,EAAAz5D,EAAAirD,GAIA,GAHAtjD,EAAA,gBAAA3H,EAAAi3D,WAAAj3D,EAAA5rB,SAGA4rB,EAAAi3D,YAAA,IAAAj3D,EAAA5rB,SACA4rB,EAAAi3D,YAAA,EACAhM,EAAA4J,UAAA,EACA5J,EAAAzrD,KAAA,OACAQ,EAAAy3D,aAAA,CAGA,IAAAiC,EAAAzO,EAAA8J,iBACA2E,GAAAA,EAAAjC,aAAAiC,EAAAC,WACA1O,EAAA0G,SAEA,CAEA,CASA,SAAAl1E,EAAA8xD,EAAA5wD,GACA,IAAA,IAAA3H,EAAA,EAAA6I,EAAA0vD,EAAAn6D,OAAA4B,EAAA6I,EAAA7I,IACA,GAAAu4D,EAAAv4D,KAAA2H,EAAA,OAAA3H,EAEA,OAAA,CACA,CA1pBAm8E,EAAAp8E,UAAAmQ,KAAA,SAAA5R,GACAqzB,EAAA,OAAArzB,GACAA,EAAAqS,SAAArS,EAAA,IACA,IAAA0rB,EAAApoB,KAAAw9E,eACAwE,EAAAtlF,EAMA,GALA,IAAAA,IAAA0rB,EAAAo3D,iBAAA,GAKA,IAAA9iF,GAAA0rB,EAAAm3D,gBAAA,IAAAn3D,EAAAk1D,cAAAl1D,EAAA5rB,QAAA4rB,EAAAk1D,cAAAl1D,EAAA5rB,OAAA,IAAA4rB,EAAAg1D,OAGA,OAFArtD,EAAA,qBAAA3H,EAAA5rB,OAAA4rB,EAAAg1D,OACA,IAAAh1D,EAAA5rB,QAAA4rB,EAAAg1D,MAAAwE,EAAA5hF,MAAAqgF,EAAArgF,MACA,KAKA,GAAA,KAHAtD,EAAAykF,EAAAzkF,EAAA0rB,KAGAA,EAAAg1D,MAEA,OADA,IAAAh1D,EAAA5rB,QAAAolF,EAAA5hF,MACA,KA0BA,IA2BAwS,EA3BAyvE,EAAA75D,EAAAm3D,aA6CA,OA5CAxvD,EAAA,gBAAAkyD,IAGA,IAAA75D,EAAA5rB,QAAA4rB,EAAA5rB,OAAAE,EAAA0rB,EAAAk1D,gBAEAvtD,EAAA,6BADAkyD,GAAA,GAMA75D,EAAAg1D,OAAAh1D,EAAAk3D,QAEAvvD,EAAA,mBADAkyD,GAAA,GAEAA,IACAlyD,EAAA,WACA3H,EAAAk3D,SAAA,EACAl3D,EAAAjmB,MAAA,EAEA,IAAAimB,EAAA5rB,SAAA4rB,EAAAm3D,cAAA,GAEAv/E,KAAAw7E,MAAApzD,EAAAk1D,eACAl1D,EAAAjmB,MAAA,EAGAimB,EAAAk3D,UAAA5iF,EAAAykF,EAAAa,EAAA55D,KAIA,QADA5V,EAAA9V,EAAA,EAAAglF,EAAAhlF,EAAA0rB,GAAA,OAEAA,EAAAm3D,aAAAn3D,EAAA5rB,QAAA4rB,EAAAk1D,cACA5gF,EAAA,IAEA0rB,EAAA5rB,QAAAE,EACA0rB,EAAA23D,WAAA,GAEA,IAAA33D,EAAA5rB,SAGA4rB,EAAAg1D,QAAAh1D,EAAAm3D,cAAA,GAGAyC,IAAAtlF,GAAA0rB,EAAAg1D,OAAAwE,EAAA5hF,OAEA,OAAAwS,GAAAxS,KAAA4nB,KAAA,OAAApV,GACAA,CACA,EA6GA+nE,EAAAp8E,UAAAq9E,MAAA,SAAA9+E,GACAmiF,EAAA7+E,KAAA,IAAA2+E,EAAA,WACA,EACApE,EAAAp8E,UAAAy1E,KAAA,SAAAsO,EAAAC,GACA,IAAAlsE,EAAAjW,KACAooB,EAAApoB,KAAAw9E,eACA,OAAAp1D,EAAA+2D,YACA,KAAA,EACA/2D,EAAA82D,MAAAgD,EACA,MACA,KAAA,EACA95D,EAAA82D,MAAA,CAAA92D,EAAA82D,MAAAgD,GACA,MACA,QACA95D,EAAA82D,MAAAj9E,KAAAigF,GAGA95D,EAAA+2D,YAAA,EACApvD,EAAA,wBAAA3H,EAAA+2D,WAAAgD,GACA,IACAC,IADAD,IAAA,IAAAA,EAAAp9E,MAAAm9E,IAAA/vD,EAAAkwD,QAAAH,IAAA/vD,EAAAmwD,OACApF,EAAAqF,EAGA,SAAAC,EAAAvF,EAAAwF,GACA1yD,EAAA,YACAktD,IAAAhnE,GACAwsE,IAAA,IAAAA,EAAAC,aACAD,EAAAC,YAAA,EAkBA3yD,EAAA,WAEAmyD,EAAA37D,eAAA,QAAAo8D,GACAT,EAAA37D,eAAA,SAAAq8D,GACAV,EAAA37D,eAAA,QAAAs8D,GACAX,EAAA37D,eAAA,QAAAmzD,GACAwI,EAAA37D,eAAA,SAAAi8D,GACAvsE,EAAAsQ,eAAA,MAAA22D,GACAjnE,EAAAsQ,eAAA,MAAAg8D,GACAtsE,EAAAsQ,eAAA,OAAAu8D,GACAC,GAAA,GAOA36D,EAAA23D,YAAAmC,EAAA/E,iBAAA+E,EAAA/E,eAAA6F,WAAAH,IA/BA,CACA,SAAA3F,IACAntD,EAAA,SACAmyD,EAAAn9E,KACA,CAdAqjB,EAAAi3D,WAAAltD,EAAAm1C,SAAA8a,GAAAnsE,EAAAhV,KAAA,MAAAmhF,GACAF,EAAAt7D,GAAA,SAAA47D,GAmBA,IAAAK,EAgFA,SAAA5sE,GACA,OAAA,WACA,IAAAmS,EAAAnS,EAAAunE,eACAztD,EAAA,cAAA3H,EAAA23D,YACA33D,EAAA23D,YAAA33D,EAAA23D,aACA,IAAA33D,EAAA23D,YAAAjC,EAAA7nE,EAAA,UACAmS,EAAAg3D,SAAA,EACAiC,EAAAprE,GAEA,CACA,CA1FAgtE,CAAAhtE,GACAisE,EAAAt7D,GAAA,QAAAi8D,GACA,IAAAE,GAAA,EAsBA,SAAAD,EAAAvP,GACAxjD,EAAA,UACA,IAAAvd,EAAA0vE,EAAAt2E,MAAA2nE,GACAxjD,EAAA,aAAAvd,IACA,IAAAA,KAKA,IAAA4V,EAAA+2D,YAAA/2D,EAAA82D,QAAAgD,GAAA95D,EAAA+2D,WAAA,IAAA,IAAAt6E,EAAAujB,EAAA82D,MAAAgD,MAAAa,IACAhzD,EAAA,8BAAA3H,EAAA23D,YACA33D,EAAA23D,cAEA9pE,EAAAitE,QAEA,CAIA,SAAAxJ,EAAAxwD,GACA6G,EAAA,UAAA7G,GACAq5D,IACAL,EAAA37D,eAAA,QAAAmzD,GACA,IAAAoE,EAAAoE,EAAA,UAAArD,EAAAqD,EAAAh5D,EACA,CAMA,SAAAy5D,IACAT,EAAA37D,eAAA,SAAAq8D,GACAL,GACA,CAEA,SAAAK,IACA7yD,EAAA,YACAmyD,EAAA37D,eAAA,QAAAo8D,GACAJ,GACA,CAEA,SAAAA,IACAxyD,EAAA,UACA9Z,EAAAssE,OAAAL,EACA,CAUA,OAvDAjsE,EAAA2Q,GAAA,OAAAk8D,GAniBA,SAAA58D,EAAAi9D,EAAApiF,GAGA,GAAA,mBAAAmlB,EAAAqD,gBAAA,OAAArD,EAAAqD,gBAAA45D,EAAApiF,GAMAmlB,EAAAY,SAAAZ,EAAAY,QAAAq8D,GAAAjnF,MAAAK,QAAA2pB,EAAAY,QAAAq8D,IAAAj9D,EAAAY,QAAAq8D,GAAA98E,QAAAtF,GAAAmlB,EAAAY,QAAAq8D,GAAA,CAAApiF,EAAAmlB,EAAAY,QAAAq8D,IAAAj9D,EAAAU,GAAAu8D,EAAApiF,EACA,CAqjBAwoB,CAAA24D,EAAA,QAAAxI,GAOAwI,EAAAjhF,KAAA,QAAA0hF,GAMAT,EAAAjhF,KAAA,SAAA2hF,GAOAV,EAAAt6D,KAAA,OAAA3R,GAGAmS,EAAAg3D,UACArvD,EAAA,eACA9Z,EAAAw+D,UAEAyN,CACA,EAYA3H,EAAAp8E,UAAAokF,OAAA,SAAAL,GACA,IAAA95D,EAAApoB,KAAAw9E,eACAiF,EAAA,CACAC,YAAA,GAIA,GAAA,IAAAt6D,EAAA+2D,WAAA,OAAAn/E,KAGA,GAAA,IAAAooB,EAAA+2D,WAEA,OAAA+C,GAAAA,IAAA95D,EAAA82D,QACAgD,IAAAA,EAAA95D,EAAA82D,OAGA92D,EAAA82D,MAAA,KACA92D,EAAA+2D,WAAA,EACA/2D,EAAAg3D,SAAA,EACA8C,GAAAA,EAAAt6D,KAAA,SAAA5nB,KAAAyiF,IAPAziF,KAaA,IAAAkiF,EAAA,CAEA,IAAAkB,EAAAh7D,EAAA82D,MACA38E,EAAA6lB,EAAA+2D,WACA/2D,EAAA82D,MAAA,KACA92D,EAAA+2D,WAAA,EACA/2D,EAAAg3D,SAAA,EACA,IAAA,IAAAhhF,EAAA,EAAAA,EAAAmE,EAAAnE,IAAAglF,EAAAhlF,GAAAwpB,KAAA,SAAA5nB,KAAA,CACA0iF,YAAA,IAEA,OAAA1iF,IACA,CAGA,IAAAc,EAAA+D,EAAAujB,EAAA82D,MAAAgD,GACA,OAAA,IAAAphF,IACAsnB,EAAA82D,MAAA5+B,OAAAx/C,EAAA,GACAsnB,EAAA+2D,YAAA,EACA,IAAA/2D,EAAA+2D,aAAA/2D,EAAA82D,MAAA92D,EAAA82D,MAAA,IACAgD,EAAAt6D,KAAA,SAAA5nB,KAAAyiF,IAJAziF,IAMA,EAIAu6E,EAAAp8E,UAAAyoB,GAAA,SAAAy8D,EAAAtiF,GACA,IAAAgP,EAAAguE,EAAA5/E,UAAAyoB,GAAA9qB,KAAAkE,KAAAqjF,EAAAtiF,GACAqnB,EAAApoB,KAAAw9E,eAqBA,MApBA,SAAA6F,GAGAj7D,EAAAq3D,kBAAAz/E,KAAA2oB,cAAA,YAAA,GAGA,IAAAP,EAAAg3D,SAAAp/E,KAAAy0E,UACA,aAAA4O,IACAj7D,EAAAi3D,YAAAj3D,EAAAq3D,oBACAr3D,EAAAq3D,kBAAAr3D,EAAAm3D,cAAA,EACAn3D,EAAAg3D,SAAA,EACAh3D,EAAAo3D,iBAAA,EACAzvD,EAAA,cAAA3H,EAAA5rB,OAAA4rB,EAAAk3D,SACAl3D,EAAA5rB,OACA6jF,EAAArgF,MACAooB,EAAAk3D,SACAntD,EAAAm1C,SAAAka,EAAAxhF,QAIA+P,CACA,EACAwqE,EAAAp8E,UAAAmrB,YAAAixD,EAAAp8E,UAAAyoB,GACA2zD,EAAAp8E,UAAAooB,eAAA,SAAA88D,EAAAtiF,GACA,IAAAgP,EAAAguE,EAAA5/E,UAAAooB,eAAAzqB,KAAAkE,KAAAqjF,EAAAtiF,GAUA,MATA,aAAAsiF,GAOAlxD,EAAAm1C,SAAAia,EAAAvhF,MAEA+P,CACA,EACAwqE,EAAAp8E,UAAA0rB,mBAAA,SAAAw5D,GACA,IAAAtzE,EAAAguE,EAAA5/E,UAAA0rB,mBAAAlsB,MAAAqC,KAAAtC,WAUA,MATA,aAAA2lF,QAAAh3E,IAAAg3E,GAOAlxD,EAAAm1C,SAAAia,EAAAvhF,MAEA+P,CACA,EAqBAwqE,EAAAp8E,UAAAs2E,OAAA,WACA,IAAArsD,EAAApoB,KAAAw9E,eAUA,OATAp1D,EAAAg3D,UACArvD,EAAA,UAIA3H,EAAAg3D,SAAAh3D,EAAAq3D,kBAMA,SAAApM,EAAAjrD,GACAA,EAAAs3D,kBACAt3D,EAAAs3D,iBAAA,EACAvtD,EAAAm1C,SAAAma,EAAApO,EAAAjrD,GAEA,CAVAqsD,CAAAz0E,KAAAooB,IAEAA,EAAAu3D,QAAA,EACA3/E,IACA,EAiBAu6E,EAAAp8E,UAAA+kF,MAAA,WAQA,OAPAnzD,EAAA,wBAAA/vB,KAAAw9E,eAAA4B,UACA,IAAAp/E,KAAAw9E,eAAA4B,UACArvD,EAAA,SACA/vB,KAAAw9E,eAAA4B,SAAA,EACAp/E,KAAA4nB,KAAA,UAEA5nB,KAAAw9E,eAAAmC,QAAA,EACA3/E,IACA,EAUAu6E,EAAAp8E,UAAAmlF,KAAA,SAAAjQ,GACA,IAAAkQ,EAAAvjF,KACAooB,EAAApoB,KAAAw9E,eACAmC,GAAA,EAwBA,IAAA,IAAAvhF,KAvBAi1E,EAAAzsD,GAAA,OAAA,WAEA,GADAmJ,EAAA,eACA3H,EAAAyjD,UAAAzjD,EAAAg1D,MAAA,CACA,IAAA7J,EAAAnrD,EAAAyjD,QAAA9mE,MACAwuE,GAAAA,EAAA/2E,QAAA+mF,EAAAthF,KAAAsxE,EACA,CACAgQ,EAAAthF,KAAA,KACA,IACAoxE,EAAAzsD,GAAA,QAAA,SAAA2sD,IACAxjD,EAAA,gBACA3H,EAAAyjD,UAAA0H,EAAAnrD,EAAAyjD,QAAAjgE,MAAA2nE,IAGAnrD,EAAA42D,YAAA,MAAAzL,KAAAnrD,EAAA42D,YAAAzL,GAAAA,EAAA/2E,UACA+mF,EAAAthF,KAAAsxE,KAEAoM,GAAA,EACAtM,EAAA6P,SAEA,IAIA7P,OACAhnE,IAAArM,KAAA5B,IAAA,mBAAAi1E,EAAAj1E,KACA4B,KAAA5B,GAAA,SAAAq+C,GACA,OAAA,WACA,OAAA42B,EAAA52B,GAAA9+C,MAAA01E,EAAA31E,UACA,CACA,CAJA,CAIAU,IAKA,IAAA,IAAA1B,EAAA,EAAAA,EAAAoiF,EAAAtiF,OAAAE,IACA22E,EAAAzsD,GAAAk4D,EAAApiF,GAAAsD,KAAA4nB,KAAAtqB,KAAA0C,KAAA8+E,EAAApiF,KAYA,OAPAsD,KAAAw7E,MAAA,SAAA9+E,GACAqzB,EAAA,gBAAArzB,GACAijF,IACAA,GAAA,EACAtM,EAAAoB,SAEA,EACAz0E,IACA,EACA,mBAAA3D,SACAk+E,EAAAp8E,UAAA9B,OAAAmnF,eAAA,WAIA,YAHAn3E,IAAA+xE,IACAA,EAAAj+E,EAAA,sCAEAi+E,EAAAp+E,KACA,GAEAnD,OAAAC,eAAAy9E,EAAAp8E,UAAA,wBAAA,CAIAnB,YAAA,EACAK,IAAA,WACA,OAAA2C,KAAAw9E,eAAAF,aACA,IAEAzgF,OAAAC,eAAAy9E,EAAAp8E,UAAA,iBAAA,CAIAnB,YAAA,EACAK,IAAA,WACA,OAAA2C,KAAAw9E,gBAAAx9E,KAAAw9E,eAAAtxE,MACA,IAEArP,OAAAC,eAAAy9E,EAAAp8E,UAAA,kBAAA,CAIAnB,YAAA,EACAK,IAAA,WACA,OAAA2C,KAAAw9E,eAAA4B,OACA,EACAzpE,IAAA,SAAAyS,GACApoB,KAAAw9E,iBACAx9E,KAAAw9E,eAAA4B,QAAAh3D,EAEA,IAIAmyD,EAAAkJ,UAAA/B,EACA7kF,OAAAC,eAAAy9E,EAAAp8E,UAAA,iBAAA,CAIAnB,YAAA,EACAK,IAAA,WACA,OAAA2C,KAAAw9E,eAAAhhF,MACA,IA+CA,mBAAAH,SACAk+E,EAAAp+E,KAAA,SAAAunF,EAAA7uB,GAIA,YAHAxoD,IAAAlQ,IACAA,EAAAgE,EAAA,4BAEAhE,EAAAo+E,EAAAmJ,EAAA7uB,EACA,E7I0kqBC,GAAE/4D,KAAKkE,KAAM,GAAElE,KAAKkE,KAAKG,EAAQ,YAA8B,oBAAXL,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAEtK,EAAE,CAAC,YAAY,IAAI,mBAAmB,IAAI,oCAAoC,IAAI,iCAAiC,IAAI,6BAA6B,IAAI,0BAA0B,IAAI,2BAA2B,IAAI,4BAA4B,IAAIozB,SAAW,IAAI/mB,OAAS,GAAGsb,OAAS,GAAGmvD,SAAW,GAAG,kBAAkB,IAAIgN,KAAO,KAAK,IAAI,CAAC,SAASxjF,EAAQT,EAAOD,G8ItgsBzWC,EAAAD,QAAAk+E,EACA,IAAAa,EAAAr+E,EAAA,aAAA27E,MACA6C,EAAAH,EAAAG,2BACAiF,EAAApF,EAAAoF,sBACAC,EAAArF,EAAAqF,mCACAC,EAAAtF,EAAAsF,4BACA/G,EAAA58E,EAAA,oBAEA,SAAA4jF,EAAA76D,EAAAtc,GACA,IAAAo3E,EAAAhkF,KAAAikF,gBACAD,EAAAE,cAAA,EACA,IAAAvjF,EAAAqjF,EAAAG,QACA,GAAA,OAAAxjF,EACA,OAAAX,KAAA4nB,KAAA,QAAA,IAAAg8D,GAEAI,EAAAI,WAAA,KACAJ,EAAAG,QAAA,KACA,MAAAv3E,GAEA5M,KAAAiC,KAAA2K,GACAjM,EAAAuoB,GACA,IAAAm7D,EAAArkF,KAAAw9E,eACA6G,EAAA/E,SAAA,GACA+E,EAAA9E,cAAA8E,EAAA7nF,OAAA6nF,EAAA/G,gBACAt9E,KAAAw7E,MAAA6I,EAAA/G,cAEA,CACA,SAAAK,EAAApjE,GACA,KAAAva,gBAAA29E,GAAA,OAAA,IAAAA,EAAApjE,GACAwiE,EAAAjhF,KAAAkE,KAAAua,GACAva,KAAAikF,gBAAA,CACAF,eAAAA,EAAAzmF,KAAA0C,MACAskF,eAAA,EACAJ,cAAA,EACAC,QAAA,KACAC,WAAA,KACAG,cAAA,MAIAvkF,KAAAw9E,eAAA+B,cAAA,EAKAv/E,KAAAw9E,eAAAr7E,MAAA,EACAoY,IACA,mBAAAA,EAAAiqE,YAAAxkF,KAAA49E,WAAArjE,EAAAiqE,WACA,mBAAAjqE,EAAAkqE,QAAAzkF,KAAA0kF,OAAAnqE,EAAAkqE,QAIAzkF,KAAA4mB,GAAA,YAAA+9D,EACA,CACA,SAAAA,IACA,IAAApB,EAAAvjF,KACA,mBAAAA,KAAA0kF,QAAA1kF,KAAAw9E,eAAAC,UAKAl8E,EAAAvB,KAAA,KAAA,MAJAA,KAAA0kF,QAAA,SAAAx7D,EAAAtc,GACArL,EAAAgiF,EAAAr6D,EAAAtc,EACA,GAIA,CAiDA,SAAArL,EAAA8xE,EAAAnqD,EAAAtc,GACA,GAAAsc,EAAA,OAAAmqD,EAAAzrD,KAAA,QAAAsB,GAQA,GAPA,MAAAtc,GAEAymE,EAAApxE,KAAA2K,GAKAymE,EAAA8J,eAAA3gF,OAAA,MAAA,IAAAsnF,EACA,GAAAzQ,EAAA4Q,gBAAAC,aAAA,MAAA,IAAAL,EACA,OAAAxQ,EAAApxE,KAAA,KACA,CArHA9B,EAAA,WAAAA,CAAAw9E,EAAAZ,GAyDAY,EAAAx/E,UAAA8D,KAAA,SAAAsxE,EAAA9nE,GAEA,OADAzL,KAAAikF,gBAAAK,eAAA,EACAvH,EAAA5+E,UAAA8D,KAAAnG,KAAAkE,KAAAuzE,EAAA9nE,EACA,EAYAkyE,EAAAx/E,UAAAy/E,WAAA,SAAArK,EAAA9nE,EAAA9K,GACAA,EAAA,IAAAg+E,EAAA,gBACA,EACAhB,EAAAx/E,UAAA27E,OAAA,SAAAvG,EAAA9nE,EAAA9K,GACA,IAAAqjF,EAAAhkF,KAAAikF,gBAIA,GAHAD,EAAAG,QAAAxjF,EACAqjF,EAAAI,WAAA7Q,EACAyQ,EAAAO,cAAA94E,GACAu4E,EAAAE,aAAA,CACA,IAAAG,EAAArkF,KAAAw9E,gBACAwG,EAAAM,eAAAD,EAAA9E,cAAA8E,EAAA7nF,OAAA6nF,EAAA/G,gBAAAt9E,KAAAw7E,MAAA6I,EAAA/G,cACA,CACA,EAKAK,EAAAx/E,UAAAq9E,MAAA,SAAA9+E,GACA,IAAAsnF,EAAAhkF,KAAAikF,gBACA,OAAAD,EAAAI,YAAAJ,EAAAE,aAMAF,EAAAM,eAAA,GALAN,EAAAE,cAAA,EACAlkF,KAAA49E,WAAAoG,EAAAI,WAAAJ,EAAAO,cAAAP,EAAAD,gBAMA,EACApG,EAAAx/E,UAAA8hF,SAAA,SAAAt+E,EAAAhB,GACAo8E,EAAA5+E,UAAA8hF,SAAAnkF,KAAAkE,KAAA2B,GAAA,SAAAijF,GACAjkF,EAAAikF,EACA,GACA,C9IslsBA,EAAE,CAAC,YAAY,IAAI,mBAAmB,IAAIjO,SAAW,KAAK,IAAI,CAAC,SAASx2E,EAAQT,EAAOD,IACvF,SAAW0yB,EAAQryB,IAAQ,W+IhusB3B,SAAA+kF,EAAAz8D,GACA,IAAAm7D,EAAAvjF,KACAA,KAAAgB,KAAA,KACAhB,KAAA8kF,MAAA,KACA9kF,KAAA+kF,OAAA,YA6iBA,SAAAC,EAAA58D,EAAAzmB,GACA,IAAAmjF,EAAAE,EAAAF,MACAE,EAAAF,MAAA,KACA,KAAAA,GAAA,CACA,IAAAnkF,EAAAmkF,EAAA/iF,SACAqmB,EAAA68D,YACAtkF,EAAAgB,GACAmjF,EAAAA,EAAA9jF,IACA,CAGAonB,EAAA88D,mBAAAlkF,KAAAgkF,CACA,CAxjBAG,CAAA5B,EAAAn7D,EACA,CACA,CAIA,IAAA20D,EAvBAr9E,EAAAD,QAAAs3E,EA0BAA,EAAAqO,cAAAA,EAGA,IAAAC,EAAA,CACAC,UAAAnlF,EAAA,mBAKA49E,EAAA59E,EAAA,6BAGAwK,EAAAxK,EAAA,UAAAwK,OACAqzE,QAAA,IAAAl+E,EAAAA,EAAA,oBAAAD,OAAAA,OAAA,oBAAAE,KAAAA,KAAA,CAAA,GAAA6E,YAAA,WAAA,EAOA,IA8IA2gF,EA9IAjH,EAAAn+E,EAAA,8BAEAo+E,EADAp+E,EAAA,4BACAo+E,iBACAC,EAAAr+E,EAAA,aAAA27E,MACA2C,EAAAD,EAAAC,qBACAE,EAAAH,EAAAG,2BACAiF,EAAApF,EAAAoF,sBACA4B,EAAAhH,EAAAgH,uBACAC,EAAAjH,EAAAiH,qBACAC,EAAAlH,EAAAkH,uBACAC,EAAAnH,EAAAmH,2BACAC,EAAApH,EAAAoH,qBACA/G,EAAAP,EAAAO,eAEA,SAAAgH,IAAA,CACA,SAAAT,EAAA7qE,EAAA84D,EAAA0L,GACAhC,EAAAA,GAAA58E,EAAA,oBACAoa,EAAAA,GAAA,CAAA,EAOA,kBAAAwkE,IAAAA,EAAA1L,aAAA0J,GAIA/8E,KAAAg/E,aAAAzkE,EAAAykE,WACAD,IAAA/+E,KAAAg/E,WAAAh/E,KAAAg/E,cAAAzkE,EAAAurE,oBAKA9lF,KAAAs9E,cAAAiB,EAAAv+E,KAAAua,EAAA,wBAAAwkE,GAGA/+E,KAAA+lF,aAAA,EAGA/lF,KAAAgjF,WAAA,EAEAhjF,KAAAgmF,QAAA,EAEAhmF,KAAAo9E,OAAA,EAEAp9E,KAAA+hF,UAAA,EAGA/hF,KAAAy9E,WAAA,EAKA,IAAAwI,GAAA,IAAA1rE,EAAA2rE,cACAlmF,KAAAkmF,eAAAD,EAKAjmF,KAAA8/E,gBAAAvlE,EAAAulE,iBAAA,OAKA9/E,KAAAxD,OAAA,EAGAwD,KAAAmmF,SAAA,EAGAnmF,KAAAomF,OAAA,EAMApmF,KAAAmC,MAAA,EAKAnC,KAAAqmF,kBAAA,EAGArmF,KAAAsmF,QAAA,SAAAp9D,IAsQA,SAAAmqD,EAAAnqD,GACA,IAAAd,EAAAirD,EAAA8J,eACAh7E,EAAAimB,EAAAjmB,KACAxB,EAAAynB,EAAA+7D,QACA,GAAA,mBAAAxjF,EAAA,MAAA,IAAAijF,EAEA,GAZA,SAAAx7D,GACAA,EAAA+9D,SAAA,EACA/9D,EAAA+7D,QAAA,KACA/7D,EAAA5rB,QAAA4rB,EAAAm+D,SACAn+D,EAAAm+D,SAAA,CACA,CAMAC,CAAAp+D,GACAc,GAlCA,SAAAmqD,EAAAjrD,EAAAjmB,EAAA+mB,EAAAvoB,KACAynB,EAAA68D,UACA9iF,GAGAgwB,EAAAm1C,SAAA3mE,EAAAuoB,GAGAiJ,EAAAm1C,SAAAmf,EAAApT,EAAAjrD,GACAirD,EAAA8J,eAAAuJ,cAAA,EACA7H,EAAAxL,EAAAnqD,KAIAvoB,EAAAuoB,GACAmqD,EAAA8J,eAAAuJ,cAAA,EACA7H,EAAAxL,EAAAnqD,GAGAu9D,EAAApT,EAAAjrD,GAEA,CAaAu+D,CAAAtT,EAAAjrD,EAAAjmB,EAAA+mB,EAAAvoB,OAAA,CAEA,IAAAohF,EAAA6E,EAAAx+D,IAAAirD,EAAAoK,UACAsE,GAAA35D,EAAAg+D,QAAAh+D,EAAAi+D,mBAAAj+D,EAAAy+D,iBACAC,EAAAzT,EAAAjrD,GAEAjmB,EACAgwB,EAAAm1C,SAAAyf,EAAA1T,EAAAjrD,EAAA25D,EAAAphF,GAEAomF,EAAA1T,EAAAjrD,EAAA25D,EAAAphF,EAEA,CACA,CAvRA2lF,CAAAjT,EAAAnqD,EACA,EAGAlpB,KAAAmkF,QAAA,KAGAnkF,KAAAumF,SAAA,EACAvmF,KAAA6mF,gBAAA,KACA7mF,KAAAgnF,oBAAA,KAIAhnF,KAAAilF,UAAA,EAIAjlF,KAAAinF,aAAA,EAGAjnF,KAAA0mF,cAAA,EAGA1mF,KAAA4/E,WAAA,IAAArlE,EAAAqlE,UAGA5/E,KAAA6/E,cAAAtlE,EAAAslE,YAGA7/E,KAAAknF,qBAAA,EAIAlnF,KAAAklF,mBAAA,IAAAL,EAAA7kF,KACA,CAqCA,SAAA+2E,EAAAx8D,GAaA,IAAAwkE,EAAA/+E,gBAZA+8E,EAAAA,GAAA58E,EAAA,qBAaA,IAAA4+E,IAAAwG,EAAAzpF,KAAAi7E,EAAA/2E,MAAA,OAAA,IAAA+2E,EAAAx8D,GACAva,KAAAm9E,eAAA,IAAAiI,EAAA7qE,EAAAva,KAAA++E,GAGA/+E,KAAA9C,UAAA,EACAqd,IACA,mBAAAA,EAAA3O,QAAA5L,KAAA85E,OAAAv/D,EAAA3O,OACA,mBAAA2O,EAAA4sE,SAAAnnF,KAAAonF,QAAA7sE,EAAA4sE,QACA,mBAAA5sE,EAAAw/D,UAAA/5E,KAAAigF,SAAA1lE,EAAAw/D,SACA,mBAAAx/D,EAAA,QAAAva,KAAAqnF,OAAA9sE,EAAA,QAEAwjE,EAAAjiF,KAAAkE,KACA,CAgIA,SAAAsnF,EAAAjU,EAAAjrD,EAAA++D,EAAA5kF,EAAAgxE,EAAA9nE,EAAA9K,GACAynB,EAAAm+D,SAAAhkF,EACA6lB,EAAA+7D,QAAAxjF,EACAynB,EAAA+9D,SAAA,EACA/9D,EAAAjmB,MAAA,EACAimB,EAAAq1D,UAAAr1D,EAAAk+D,QAAA,IAAAb,EAAA,UAAA0B,EAAA9T,EAAA+T,QAAA7T,EAAAnrD,EAAAk+D,SAAAjT,EAAAyG,OAAAvG,EAAA9nE,EAAA2c,EAAAk+D,SACAl+D,EAAAjmB,MAAA,CACA,CAgDA,SAAA4kF,EAAA1T,EAAAjrD,EAAA25D,EAAAphF,GACAohF,GASA,SAAA1O,EAAAjrD,GACA,IAAAA,EAAA5rB,QAAA4rB,EAAA46D,YACA56D,EAAA46D,WAAA,EACA3P,EAAAzrD,KAAA,SAEA,CAdA2/D,CAAAlU,EAAAjrD,GACAA,EAAA68D,YACAtkF,IACA8lF,EAAApT,EAAAjrD,EACA,CAaA,SAAA0+D,EAAAzT,EAAAjrD,GACAA,EAAAi+D,kBAAA,EACA,IAAAvB,EAAA18D,EAAAy+D,gBACA,GAAAxT,EAAA+T,SAAAtC,GAAAA,EAAA9jF,KAAA,CAEA,IAAAiG,EAAAmhB,EAAA8+D,qBACAh7E,EAAA,IAAAhQ,MAAA+K,GACAugF,EAAAp/D,EAAA88D,mBACAsC,EAAA1C,MAAAA,EAGA,IAFA,IAAAh9D,EAAA,EACA2/D,GAAA,EACA3C,GACA54E,EAAA4b,GAAAg9D,EACAA,EAAA4C,QAAAD,GAAA,GACA3C,EAAAA,EAAA9jF,KACA8mB,GAAA,EAEA5b,EAAAu7E,WAAAA,EACAH,EAAAjU,EAAAjrD,GAAA,EAAAA,EAAA5rB,OAAA0P,EAAA,GAAAs7E,EAAAzC,QAIA38D,EAAA68D,YACA78D,EAAA4+D,oBAAA,KACAQ,EAAAxmF,MACAonB,EAAA88D,mBAAAsC,EAAAxmF,KACAwmF,EAAAxmF,KAAA,MAEAonB,EAAA88D,mBAAA,IAAAL,EAAAz8D,GAEAA,EAAA8+D,qBAAA,CACA,KAAA,CAEA,KAAApC,GAAA,CACA,IAAAvR,EAAAuR,EAAAvR,MACA9nE,EAAAq5E,EAAAr5E,SACA9K,EAAAmkF,EAAA/iF,SASA,GAPAulF,EAAAjU,EAAAjrD,GAAA,EADAA,EAAA42D,WAAA,EAAAzL,EAAA/2E,OACA+2E,EAAA9nE,EAAA9K,GACAmkF,EAAAA,EAAA9jF,KACAonB,EAAA8+D,uBAKA9+D,EAAA+9D,QACA,KAEA,CACA,OAAArB,IAAA18D,EAAA4+D,oBAAA,KACA,CACA5+D,EAAAy+D,gBAAA/B,EACA18D,EAAAi+D,kBAAA,CACA,CAoCA,SAAAO,EAAAx+D,GACA,OAAAA,EAAA49D,QAAA,IAAA59D,EAAA5rB,QAAA,OAAA4rB,EAAAy+D,kBAAAz+D,EAAA25D,WAAA35D,EAAA+9D,OACA,CACA,SAAAwB,EAAAtU,EAAAjrD,GACAirD,EAAAgU,QAAA,SAAA1lF,GACAymB,EAAA68D,YACAtjF,GACAk9E,EAAAxL,EAAA1xE,GAEAymB,EAAA6+D,aAAA,EACA5T,EAAAzrD,KAAA,aACA6+D,EAAApT,EAAAjrD,EACA,GACA,CAaA,SAAAq+D,EAAApT,EAAAjrD,GACA,IAAAw/D,EAAAhB,EAAAx+D,GACA,GAAAw/D,IAdA,SAAAvU,EAAAjrD,GACAA,EAAA6+D,aAAA7+D,EAAA29D,cACA,mBAAA1S,EAAAgU,QAAAj/D,EAAAq1D,WAKAr1D,EAAA6+D,aAAA,EACA5T,EAAAzrD,KAAA,eALAQ,EAAA68D,YACA78D,EAAA29D,aAAA,EACA5zD,EAAAm1C,SAAAqgB,EAAAtU,EAAAjrD,IAMA,CAIAu8D,CAAAtR,EAAAjrD,GACA,IAAAA,EAAA68D,YACA78D,EAAA25D,UAAA,EACA1O,EAAAzrD,KAAA,UACAQ,EAAAy3D,cAAA,CAGA,IAAAgI,EAAAxU,EAAAmK,iBACAqK,GAAAA,EAAAhI,aAAAgI,EAAAxI,aACAhM,EAAA0G,SAEA,CAGA,OAAA6N,CACA,CAxfAznF,EAAA,WAAAA,CAAA42E,EAAAgH,GA4GAqH,EAAAjnF,UAAAo/E,UAAA,WAGA,IAFA,IAAAuK,EAAA9nF,KAAA6mF,gBACAp0E,EAAA,GACAq1E,GACAr1E,EAAAxQ,KAAA6lF,GACAA,EAAAA,EAAA9mF,KAEA,OAAAyR,CACA,EACA,WACA,IACA5V,OAAAC,eAAAsoF,EAAAjnF,UAAA,SAAA,CACAd,IAAAgoF,EAAAC,WAAA,WACA,OAAAtlF,KAAAu9E,WACA,GAAA,6EAAA,YAEA,CAAA,MAAAjgE,GAAA,CACA,CARA,GAaA,mBAAAjhB,QAAAA,OAAA0rF,aAAA,mBAAAniE,SAAAznB,UAAA9B,OAAA0rF,cACAxC,EAAA3/D,SAAAznB,UAAA9B,OAAA0rF,aACAlrF,OAAAC,eAAAi6E,EAAA16E,OAAA0rF,YAAA,CACAhrF,MAAA,SAAAiyE,GACA,QAAAuW,EAAAzpF,KAAAkE,KAAAgvE,IACAhvE,OAAA+2E,IACA/H,GAAAA,EAAAmO,0BAAAiI,EACA,KAGAG,EAAA,SAAAvW,GACA,OAAAA,aAAAhvE,IACA,EA+BA+2E,EAAA54E,UAAAy1E,KAAA,WACAiL,EAAA7+E,KAAA,IAAAwlF,EACA,EAyBAzO,EAAA54E,UAAAyN,MAAA,SAAA2nE,EAAA9nE,EAAA9K,GACA,IAzNAU,EAyNA+mB,EAAApoB,KAAAm9E,eACA3qE,GAAA,EACAk1E,GAAAt/D,EAAA42D,aA3NA39E,EA2NAkyE,EA1NA5oE,EAAA4B,SAAAlL,IAAAA,aAAA28E,GAwOA,OAbA0J,IAAA/8E,EAAA4B,SAAAgnE,KACAA,EAhOA,SAAAA,GACA,OAAA5oE,EAAAxO,KAAAo3E,EACA,CA8NAkN,CAAAlN,IAEA,mBAAA9nE,IACA9K,EAAA8K,EACAA,EAAA,MAEAi8E,EAAAj8E,EAAA,SAAAA,IAAAA,EAAA2c,EAAA03D,iBACA,mBAAAn/E,IAAAA,EAAAklF,GACAz9D,EAAA49D,OArCA,SAAA3S,EAAA1yE,GACA,IAAAuoB,EAAA,IAAAy8D,EAEA9G,EAAAxL,EAAAnqD,GACAiJ,EAAAm1C,SAAA3mE,EAAAuoB,EACA,CAgCA8+D,CAAAhoF,KAAAW,IAAA+mF,GA3BA,SAAArU,EAAAjrD,EAAAmrD,EAAA5yE,GACA,IAAAuoB,EAMA,OALA,OAAAqqD,EACArqD,EAAA,IAAAw8D,EACA,iBAAAnS,GAAAnrD,EAAA42D,aACA91D,EAAA,IAAAu1D,EAAA,QAAA,CAAA,SAAA,UAAAlL,KAEArqD,IACA21D,EAAAxL,EAAAnqD,GACAiJ,EAAAm1C,SAAA3mE,EAAAuoB,IACA,EAGA,CAcA++D,CAAAjoF,KAAAooB,EAAAmrD,EAAA5yE,MACAynB,EAAA68D,YACAzyE,EAiDA,SAAA6gE,EAAAjrD,EAAAs/D,EAAAnU,EAAA9nE,EAAA9K,GACA,IAAA+mF,EAAA,CACA,IAAAQ,EArBA,SAAA9/D,EAAAmrD,EAAA9nE,GACA2c,EAAA42D,aAAA,IAAA52D,EAAA89D,eAAA,iBAAA3S,IACAA,EAAA5oE,EAAAxO,KAAAo3E,EAAA9nE,IAEA,OAAA8nE,CACA,CAgBA4U,CAAA//D,EAAAmrD,EAAA9nE,GACA8nE,IAAA2U,IACAR,GAAA,EACAj8E,EAAA,SACA8nE,EAAA2U,EAEA,CACA,IAAA3lF,EAAA6lB,EAAA42D,WAAA,EAAAzL,EAAA/2E,OACA4rB,EAAA5rB,QAAA+F,EACA,IAAAiQ,EAAA4V,EAAA5rB,OAAA4rB,EAAAk1D,cAEA9qE,IAAA4V,EAAA46D,WAAA,GACA,GAAA56D,EAAA+9D,SAAA/9D,EAAAg+D,OAAA,CACA,IAAAhhC,EAAAh9B,EAAA4+D,oBACA5+D,EAAA4+D,oBAAA,CACAzT,MAAAA,EACA9nE,SAAAA,EACAi8E,MAAAA,EACA3lF,SAAApB,EACAK,KAAA,MAEAokD,EACAA,EAAApkD,KAAAonB,EAAA4+D,oBAEA5+D,EAAAy+D,gBAAAz+D,EAAA4+D,oBAEA5+D,EAAA8+D,sBAAA,CACA,MACAI,EAAAjU,EAAAjrD,GAAA,EAAA7lB,EAAAgxE,EAAA9nE,EAAA9K,GAEA,OAAA6R,CACA,CAlFA41E,CAAApoF,KAAAooB,EAAAs/D,EAAAnU,EAAA9nE,EAAA9K,IAEA6R,CACA,EACAukE,EAAA54E,UAAAkqF,KAAA,WACAroF,KAAAm9E,eAAAiJ,QACA,EACArP,EAAA54E,UAAAmqF,OAAA,WACA,IAAAlgE,EAAApoB,KAAAm9E,eACA/0D,EAAAg+D,SACAh+D,EAAAg+D,SACAh+D,EAAA+9D,SAAA/9D,EAAAg+D,QAAAh+D,EAAAi+D,mBAAAj+D,EAAAy+D,iBAAAC,EAAA9mF,KAAAooB,GAEA,EACA2uD,EAAA54E,UAAAoqF,mBAAA,SAAA98E,GAGA,GADA,iBAAAA,IAAAA,EAAAA,EAAA2B,iBACA,CAAA,MAAA,OAAA,QAAA,QAAA,SAAA,SAAA,OAAA,QAAA,UAAA,WAAA,OAAAvI,SAAA4G,EAAA,IAAA2B,gBAAA,GAAA,MAAA,IAAAw4E,EAAAn6E,GAEA,OADAzL,KAAAm9E,eAAA2C,gBAAAr0E,EACAzL,IACA,EACAnD,OAAAC,eAAAi6E,EAAA54E,UAAA,iBAAA,CAIAnB,YAAA,EACAK,IAAA,WACA,OAAA2C,KAAAm9E,gBAAAn9E,KAAAm9E,eAAAI,WACA,IAQA1gF,OAAAC,eAAAi6E,EAAA54E,UAAA,wBAAA,CAIAnB,YAAA,EACAK,IAAA,WACA,OAAA2C,KAAAm9E,eAAAG,aACA,IAuKAvG,EAAA54E,UAAA27E,OAAA,SAAAvG,EAAA9nE,EAAA9K,GACAA,EAAA,IAAAg+E,EAAA,YACA,EACA5H,EAAA54E,UAAAipF,QAAA,KACArQ,EAAA54E,UAAA4G,IAAA,SAAAwuE,EAAA9nE,EAAA9K,GACA,IAAAynB,EAAApoB,KAAAm9E,eAmBA,MAlBA,mBAAA5J,GACA5yE,EAAA4yE,EACAA,EAAA,KACA9nE,EAAA,MACA,mBAAAA,IACA9K,EAAA8K,EACAA,EAAA,MAEA8nE,SAAAvzE,KAAA4L,MAAA2nE,EAAA9nE,GAGA2c,EAAAg+D,SACAh+D,EAAAg+D,OAAA,EACApmF,KAAAsoF,UAIAlgE,EAAA49D,QAyDA,SAAA3S,EAAAjrD,EAAAznB,GACAynB,EAAA49D,QAAA,EACAS,EAAApT,EAAAjrD,GACAznB,IACAynB,EAAA25D,SAAA5vD,EAAAm1C,SAAA3mE,GAAA0yE,EAAApyE,KAAA,SAAAN,IAEAynB,EAAAg1D,OAAA,EACA/J,EAAAn2E,UAAA,CACA,CAjEAsrF,CAAAxoF,KAAAooB,EAAAznB,GACAX,IACA,EACAnD,OAAAC,eAAAi6E,EAAA54E,UAAA,iBAAA,CAIAnB,YAAA,EACAK,IAAA,WACA,OAAA2C,KAAAm9E,eAAA3gF,MACA,IAqEAK,OAAAC,eAAAi6E,EAAA54E,UAAA,YAAA,CAIAnB,YAAA,EACAK,IAAA,WACA,YAAAgP,IAAArM,KAAAm9E,gBAGAn9E,KAAAm9E,eAAAM,SACA,EACA9nE,IAAA,SAAA5Y,GAGAiD,KAAAm9E,iBAMAn9E,KAAAm9E,eAAAM,UAAA1gF,EACA,IAEAg6E,EAAA54E,UAAA47E,QAAAuE,EAAAvE,QACAhD,EAAA54E,UAAAyiF,WAAAtC,EAAAuC,UACA9J,EAAA54E,UAAA8hF,SAAA,SAAAt+E,EAAAhB,GACAA,EAAAgB,EACA,C/IywsBC,GAAE7F,KAAKkE,KAAM,GAAElE,KAAKkE,KAAKG,EAAQ,YAA8B,oBAAXL,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAEtK,EAAE,CAAC,YAAY,IAAI,mBAAmB,IAAI,6BAA6B,IAAI,2BAA2B,IAAI,4BAA4B,IAAIozB,SAAW,IAAI/mB,OAAS,GAAGyqE,SAAW,GAAG,iBAAiB,MAAM,IAAI,CAAC,SAASx2E,EAAQT,EAAOD,IACvO,SAAW0yB,IAAS,WgJ14tBpB,IAAAs2D,EACA,SAAAC,EAAArnF,EAAApD,EAAAlB,GAAA,OAAAkB,EACA,SAAAoN,GAAA,IAAApN,EACA,SAAAuwC,EAAAm6C,GAAA,GAAA,WAAArqF,QAAAkwC,IAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAo6C,EAAAp6C,EAAAnyC,OAAAkC,aAAA,QAAA8N,IAAAu8E,EAAA,CAAA,IAAA74E,EAAA64E,EAAA9sF,KAAA0yC,EAAAm6C,GAAA,WAAA,GAAA,WAAArqF,QAAAyR,GAAA,OAAAA,EAAA,MAAA,IAAAtU,UAAA,+CAAA,CAAA,OAAA,WAAAktF,EAAAnqF,OAAAC,QAAA+vC,EAAA,CADAq6C,CAAAx9E,EAAA,UAAA,MAAA,WAAA/M,QAAAL,GAAAA,EAAAO,OAAAP,EAAA,CADA6qF,CAAA7qF,MAAAoD,EAAAxE,OAAAC,eAAAuE,EAAApD,EAAA,CAAAlB,MAAAA,EAAAC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAmE,EAAApD,GAAAlB,EAAAsE,CAAA,CAGA,IAAA0gF,EAAA5hF,EAAA,mBACA4oF,EAAA1sF,OAAA,eACA2sF,EAAA3sF,OAAA,cACA4sF,EAAA5sF,OAAA,SACA6sF,EAAA7sF,OAAA,SACA8sF,EAAA9sF,OAAA,eACA+sF,EAAA/sF,OAAA,iBACAgtF,EAAAhtF,OAAA,UACA,SAAAitF,EAAAvsF,EAAAwE,GACA,MAAA,CACAxE,MAAAA,EACAwE,KAAAA,EAEA,CACA,SAAAgoF,EAAAC,GACA,IAAApjE,EAAAojE,EAAAT,GACA,GAAA,OAAA3iE,EAAA,CACA,IAAAxZ,EAAA48E,EAAAH,GAAA/6E,OAIA,OAAA1B,IACA48E,EAAAL,GAAA,KACAK,EAAAT,GAAA,KACAS,EAAAR,GAAA,KACA5iE,EAAAkjE,EAAA18E,GAAA,IAEA,CACA,CACA,SAAA68E,EAAAD,GAGAr3D,EAAAm1C,SAAAiiB,EAAAC,EACA,CAYA,IAAAE,EAAA7sF,OAAAsC,gBAAA,WAAA,IACAwqF,EAAA9sF,OAAAqC,gBAmDAwpF,EAnDAD,EAAA,CACA,UAAApV,GACA,OAAArzE,KAAAqpF,EACA,EACAroF,KAAA,WACA,IAAAuiF,EAAAvjF,KAGAgR,EAAAhR,KAAAipF,GACA,GAAA,OAAAj4E,EACA,OAAAmV,QAAAE,OAAArV,GAEA,GAAAhR,KAAAkpF,GACA,OAAA/iE,QAAAC,QAAAkjE,OAAAj9E,GAAA,IAEA,GAAArM,KAAAqpF,GAAA5L,UAKA,OAAA,IAAAt3D,SAAA,SAAAC,EAAAC,GACA8L,EAAAm1C,UAAA,WACAic,EAAA0F,GACA5iE,EAAAk9D,EAAA0F,IAEA7iE,EAAAkjE,OAAAj9E,GAAA,GAEA,GACA,IAOA,IACAu9E,EADAC,EAAA7pF,KAAAmpF,GAEA,GAAAU,EACAD,EAAA,IAAAzjE,QAlDA,SAAA0jE,EAAAL,GACA,OAAA,SAAApjE,EAAAC,GACAwjE,EAAAlR,MAAA,WACA6Q,EAAAN,GACA9iE,EAAAkjE,OAAAj9E,GAAA,IAGAm9E,EAAAJ,GAAAhjE,EAAAC,EACA,GAAAA,EACA,CACA,CAwCAyjE,CAAAD,EAAA7pF,WACA,CAGA,IAAA4M,EAAA5M,KAAAqpF,GAAA/6E,OACA,GAAA,OAAA1B,EACA,OAAAuZ,QAAAC,QAAAkjE,EAAA18E,GAAA,IAEAg9E,EAAA,IAAAzjE,QAAAnmB,KAAAopF,GACA,CAEA,OADAppF,KAAAmpF,GAAAS,EACAA,CACA,GACAvtF,OAAAmnF,eAAA,WACA,OAAAxjF,IACA,IAAA0oF,EAAAD,EAAA,UAAA,WACA,IAAAsB,EAAA/pF,KAIA,OAAA,IAAAmmB,SAAA,SAAAC,EAAAC,GACA0jE,EAAAV,GAAAtP,QAAA,MAAA,SAAAp4E,GACAA,EACA0kB,EAAA1kB,GAGAykB,EAAAkjE,OAAAj9E,GAAA,GACA,GACA,GACA,IAAAo8E,GAAAiB,GA4DAhqF,EAAAD,QA3DA,SAAA4zE,GACA,IAAA2W,EACA1tF,EAAAO,OAAAyC,OAAAqqF,GAAAjB,EAAAsB,EAAA,CAAA,EAAAX,EAAA,CACAtsF,MAAAs2E,EACAn2E,UAAA,IACAwrF,EAAAsB,EAAAjB,EAAA,CACAhsF,MAAA,KACAG,UAAA,IACAwrF,EAAAsB,EAAAhB,EAAA,CACAjsF,MAAA,KACAG,UAAA,IACAwrF,EAAAsB,EAAAf,EAAA,CACAlsF,MAAA,KACAG,UAAA,IACAwrF,EAAAsB,EAAAd,EAAA,CACAnsF,MAAAs2E,EAAAmK,eAAA6B,WACAniF,UAAA,IACAwrF,EAAAsB,EAAAZ,EAAA,CACArsF,MAAA,SAAAqpB,EAAAC,GACA,IAAAzZ,EAAAtQ,EAAA+sF,GAAA/6E,OACA1B,GACAtQ,EAAA6sF,GAAA,KACA7sF,EAAAysF,GAAA,KACAzsF,EAAA0sF,GAAA,KACA5iE,EAAAkjE,EAAA18E,GAAA,MAEAtQ,EAAAysF,GAAA3iE,EACA9pB,EAAA0sF,GAAA3iE,EAEA,EACAnpB,UAAA,IACA8sF,IA0BA,OAzBA1tF,EAAA6sF,GAAA,KACApH,EAAA1O,GAAA,SAAA1xE,GACA,GAAAA,GAAA,+BAAAA,EAAArB,KAAA,CACA,IAAA+lB,EAAA/pB,EAAA0sF,GAUA,OAPA,OAAA3iE,IACA/pB,EAAA6sF,GAAA,KACA7sF,EAAAysF,GAAA,KACAzsF,EAAA0sF,GAAA,KACA3iE,EAAA1kB,SAEArF,EAAA2sF,GAAAtnF,EAEA,CACA,IAAAykB,EAAA9pB,EAAAysF,GACA,OAAA3iE,IACA9pB,EAAA6sF,GAAA,KACA7sF,EAAAysF,GAAA,KACAzsF,EAAA0sF,GAAA,KACA5iE,EAAAkjE,OAAAj9E,GAAA,KAEA/P,EAAA4sF,IAAA,CACA,IACA7V,EAAAzsD,GAAA,WAAA6iE,EAAAnsF,KAAA,KAAAhB,IACAA,CACA,ChJ+4tBC,GAAER,KAAKkE,KAAM,GAAElE,KAAKkE,KAAKG,EAAQ,YAElC,EAAE,CAAC,kBAAkB,IAAI8yB,SAAW,MAAM,IAAI,CAAC,SAAS9yB,EAAQT,EAAOD,GiJjkuBvE,SAAAomB,EAAAmpD,EAAAib,GAAA,IAAAznF,EAAA3F,OAAA2F,KAAAwsE,GAAA,GAAAnyE,OAAAipB,sBAAA,CAAA,IAAAokE,EAAArtF,OAAAipB,sBAAAkpD,GAAAib,IAAAC,EAAAA,EAAA/a,QAAA,SAAA/oB,GAAA,OAAAvpD,OAAAY,yBAAAuxE,EAAA5oB,GAAAppD,UAAA,KAAAwF,EAAAP,KAAAtE,MAAA6E,EAAA0nF,EAAA,CAAA,OAAA1nF,CAAA,CACA,SAAA2nF,EAAAn4E,GAAA,IAAA,IAAA5T,EAAA,EAAAA,EAAAV,UAAAlB,OAAA4B,IAAA,CAAA,IAAA8xE,EAAA,MAAAxyE,UAAAU,GAAAV,UAAAU,GAAA,CAAA,EAAAA,EAAA,EAAAynB,EAAAhpB,OAAAqzE,IAAA,GAAAtvD,SAAA,SAAA3iB,GAAAyqF,EAAA12E,EAAA/T,EAAAiyE,EAAAjyE,GAAA,IAAApB,OAAAutF,0BAAAvtF,OAAAwtF,iBAAAr4E,EAAAnV,OAAAutF,0BAAAla,IAAArqD,EAAAhpB,OAAAqzE,IAAAtvD,SAAA,SAAA3iB,GAAApB,OAAAC,eAAAkV,EAAA/T,EAAApB,OAAAY,yBAAAyyE,EAAAjyE,GAAA,GAAA,CAAA,OAAA+T,CAAA,CACA,SAAA02E,EAAArnF,EAAApD,EAAAlB,GAAA,OAAAkB,EAAA6qF,EAAA7qF,MAAAoD,EAAAxE,OAAAC,eAAAuE,EAAApD,EAAA,CAAAlB,MAAAA,EAAAC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAmE,EAAApD,GAAAlB,EAAAsE,CAAA,CAEA,SAAArD,EAAAgU,EAAAs4E,GAAA,IAAA,IAAAlsF,EAAA,EAAAA,EAAAksF,EAAA9tF,OAAA4B,IAAA,CAAA,IAAAooD,EAAA8jC,EAAAlsF,GAAAooD,EAAAxpD,WAAAwpD,EAAAxpD,aAAA,EAAAwpD,EAAAvpD,cAAA,EAAA,UAAAupD,IAAAA,EAAAtpD,UAAA,GAAAL,OAAAC,eAAAkV,EAAA82E,EAAAtiC,EAAAvoD,KAAAuoD,EAAA,CAAA,CAEA,SAAAsiC,EAAAz9E,GAAA,IAAApN,EACA,SAAAuwC,EAAAm6C,GAAA,GAAA,WAAArqF,QAAAkwC,IAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAo6C,EAAAp6C,EAAAnyC,OAAAkC,aAAA,QAAA8N,IAAAu8E,EAAA,CAAA,IAAA74E,EAAA64E,EAAA9sF,KAAA0yC,EAAAm6C,GAAA,WAAA,GAAA,WAAArqF,QAAAyR,GAAA,OAAAA,EAAA,MAAA,IAAAtU,UAAA,+CAAA,CAAA,OAAA,WAAAktF,EAAAnqF,OAAAC,QAAA+vC,EAAA,CADAq6C,CAAAx9E,EAAA,UAAA,MAAA,WAAA/M,QAAAL,GAAAA,EAAAO,OAAAP,EAAA,CAEA,IACA0M,EADAxK,EAAA,UACAwK,OAEAmH,EADA3R,EAAA,QACA2R,QACA0iD,EAAA1iD,GAAAA,EAAA0iD,QAAA,UAIA90D,EAAAD,QAAA,WACA,SAAA4+E,KAdA,SAAAkM,EAAAC,GAAA,KAAAD,aAAAC,GAAA,MAAA,IAAA/uF,UAAA,oCAAA,CAeAgvF,CAAAzqF,KAAAq+E,GACAr+E,KAAA6Y,KAAA,KACA7Y,KAAA8Y,KAAA,KACA9Y,KAAAxD,OAAA,CACA,CAjBA,IAAAguF,EAAAE,EAAAC,EA8KA,OA9KAH,EAkBAnM,GAlBAqM,EAkBA,CAAA,CACAzsF,IAAA,OACAlB,MAAA,SAAAyf,GACA,IAAAsoE,EAAA,CACAl4E,KAAA4P,EACAxb,KAAA,MAEAhB,KAAAxD,OAAA,EAAAwD,KAAA8Y,KAAA9X,KAAA8jF,EAAA9kF,KAAA6Y,KAAAisE,EACA9kF,KAAA8Y,KAAAgsE,IACA9kF,KAAAxD,MACA,GACA,CACAyB,IAAA,UACAlB,MAAA,SAAAyf,GACA,IAAAsoE,EAAA,CACAl4E,KAAA4P,EACAxb,KAAAhB,KAAA6Y,MAEA,IAAA7Y,KAAAxD,SAAAwD,KAAA8Y,KAAAgsE,GACA9kF,KAAA6Y,KAAAisE,IACA9kF,KAAAxD,MACA,GACA,CACAyB,IAAA,QACAlB,MAAA,WACA,GAAA,IAAAiD,KAAAxD,OAAA,CACA,IAAAgW,EAAAxS,KAAA6Y,KAAAjM,KAGA,OAFA,IAAA5M,KAAAxD,OAAAwD,KAAA6Y,KAAA7Y,KAAA8Y,KAAA,KAAA9Y,KAAA6Y,KAAA7Y,KAAA6Y,KAAA7X,OACAhB,KAAAxD,OACAgW,CAJA,CAKA,GACA,CACAvU,IAAA,QACAlB,MAAA,WACAiD,KAAA6Y,KAAA7Y,KAAA8Y,KAAA,KACA9Y,KAAAxD,OAAA,CACA,GACA,CACAyB,IAAA,OACAlB,MAAA,SAAA0J,GACA,GAAA,IAAAzG,KAAAxD,OAAA,MAAA,GAGA,IAFA,IAAAe,EAAAyC,KAAA6Y,KACArG,EAAA,GAAAjV,EAAAqP,KACArP,EAAAA,EAAAyD,MAAAwR,GAAA/L,EAAAlJ,EAAAqP,KACA,OAAA4F,CACA,GACA,CACAvU,IAAA,SACAlB,MAAA,SAAAL,GACA,GAAA,IAAAsD,KAAAxD,OAAA,OAAAmO,EAAAI,MAAA,GAIA,IAHA,IA5DAkL,EAAAjE,EAAArD,EA4DA6D,EAAA7H,EAAAY,YAAA7O,IAAA,GACAa,EAAAyC,KAAA6Y,KACAza,EAAA,EACAb,GA/DA0Y,EAgEA1Y,EAAAqP,KAhEAoF,EAgEAQ,EAhEA7D,EAgEAvQ,EA/DAuM,EAAAxM,UAAAsO,KAAA3Q,KAAAma,EAAAjE,EAAArD,GAgEAvQ,GAAAb,EAAAqP,KAAApQ,OACAe,EAAAA,EAAAyD,KAEA,OAAAwR,CACA,GAGA,CACAvU,IAAA,UACAlB,MAAA,SAAAL,EAAAkuF,GACA,IAAAp4E,EAYA,OAXA9V,EAAAsD,KAAA6Y,KAAAjM,KAAApQ,QAEAgW,EAAAxS,KAAA6Y,KAAAjM,KAAA7Q,MAAA,EAAAW,GACAsD,KAAA6Y,KAAAjM,KAAA5M,KAAA6Y,KAAAjM,KAAA7Q,MAAAW,IAGA8V,EAFA9V,IAAAsD,KAAA6Y,KAAAjM,KAAApQ,OAEAwD,KAAAgI,QAGA4iF,EAAA5qF,KAAA6qF,WAAAnuF,GAAAsD,KAAA8qF,WAAApuF,GAEA8V,CACA,GACA,CACAvU,IAAA,QACAlB,MAAA,WACA,OAAAiD,KAAA6Y,KAAAjM,IACA,GAGA,CACA3O,IAAA,aACAlB,MAAA,SAAAL,GACA,IAAAa,EAAAyC,KAAA6Y,KACA3Y,EAAA,EACAsS,EAAAjV,EAAAqP,KAEA,IADAlQ,GAAA8V,EAAAhW,OACAe,EAAAA,EAAAyD,MAAA,CACA,IAAAoO,EAAA7R,EAAAqP,KACAm+E,EAAAruF,EAAA0S,EAAA5S,OAAA4S,EAAA5S,OAAAE,EAGA,GAFAquF,IAAA37E,EAAA5S,OAAAgW,GAAApD,EAAAoD,GAAApD,EAAArT,MAAA,EAAAW,GAEA,IADAA,GAAAquF,GACA,CACAA,IAAA37E,EAAA5S,UACA0D,EACA3C,EAAAyD,KAAAhB,KAAA6Y,KAAAtb,EAAAyD,KAAAhB,KAAA6Y,KAAA7Y,KAAA8Y,KAAA,OAEA9Y,KAAA6Y,KAAAtb,EACAA,EAAAqP,KAAAwC,EAAArT,MAAAgvF,IAEA,KACA,GACA7qF,CACA,CAEA,OADAF,KAAAxD,QAAA0D,EACAsS,CACA,GAGA,CACAvU,IAAA,aACAlB,MAAA,SAAAL,GACA,IAAA8V,EAAA7H,EAAAY,YAAA7O,GACAa,EAAAyC,KAAA6Y,KACA3Y,EAAA,EAGA,IAFA3C,EAAAqP,KAAAH,KAAA+F,GACA9V,GAAAa,EAAAqP,KAAApQ,OACAe,EAAAA,EAAAyD,MAAA,CACA,IAAAoK,EAAA7N,EAAAqP,KACAm+E,EAAAruF,EAAA0O,EAAA5O,OAAA4O,EAAA5O,OAAAE,EAGA,GAFA0O,EAAAqB,KAAA+F,EAAAA,EAAAhW,OAAAE,EAAA,EAAAquF,GAEA,IADAruF,GAAAquF,GACA,CACAA,IAAA3/E,EAAA5O,UACA0D,EACA3C,EAAAyD,KAAAhB,KAAA6Y,KAAAtb,EAAAyD,KAAAhB,KAAA6Y,KAAA7Y,KAAA8Y,KAAA,OAEA9Y,KAAA6Y,KAAAtb,EACAA,EAAAqP,KAAAxB,EAAArP,MAAAgvF,IAEA,KACA,GACA7qF,CACA,CAEA,OADAF,KAAAxD,QAAA0D,EACAsS,CACA,GAGA,CACAvU,IAAAu2D,EACAz3D,MAAA,SAAAugB,EAAA/C,GACA,OAAAzI,EAAA9R,KAAAmqF,EAAAA,EAAA,CAAA,EAAA5vE,GAAA,CAAA,EAAA,CAEA26C,MAAA,EAEAG,eAAA,IAEA,MA5KAr3D,EAAAwsF,EAAArsF,UAAAusF,GAAAC,GAAA3sF,EAAAwsF,EAAAG,GAAA9tF,OAAAC,eAAA0tF,EAAA,YAAA,CAAAttF,UAAA,IA8KAmhF,CACA,CApKA,EjJyuuBA,EAAE,CAACnyE,OAAS,GAAGy3E,KAAO,KAAK,IAAI,CAAC,SAASxjF,EAAQT,EAAOD,IACxD,SAAW0yB,IAAS,WkJzsuBpB,SAAA64D,EAAAjrF,EAAA4B,GACAspF,EAAAlrF,EAAA4B,GACAupF,EAAAnrF,EACA,CACA,SAAAmrF,EAAAnrF,GACAA,EAAAo9E,iBAAAp9E,EAAAo9E,eAAAyC,WACA7/E,EAAAy9E,iBAAAz9E,EAAAy9E,eAAAoC,WACA7/E,EAAA6nB,KAAA,QACA,CAkBA,SAAAqjE,EAAAlrF,EAAA4B,GACA5B,EAAA6nB,KAAA,QAAAjmB,EACA,CAYAjC,EAAAD,QAAA,CACAs6E,QAzFA,SAAAp4E,EAAAhB,GACA,IAAA4iF,EAAAvjF,KACAmrF,EAAAnrF,KAAAw9E,gBAAAx9E,KAAAw9E,eAAAC,UACA2N,EAAAprF,KAAAm9E,gBAAAn9E,KAAAm9E,eAAAM,UACA,OAAA0N,GAAAC,GACAzqF,EACAA,EAAAgB,GACAA,IACA3B,KAAAm9E,eAEAn9E,KAAAm9E,eAAAuJ,eACA1mF,KAAAm9E,eAAAuJ,cAAA,EACAv0D,EAAAm1C,SAAA2jB,EAAAjrF,KAAA2B,IAHAwwB,EAAAm1C,SAAA2jB,EAAAjrF,KAAA2B,IAMA3B,OAMAA,KAAAw9E,iBACAx9E,KAAAw9E,eAAAC,WAAA,GAIAz9E,KAAAm9E,iBACAn9E,KAAAm9E,eAAAM,WAAA,GAEAz9E,KAAAigF,SAAAt+E,GAAA,MAAA,SAAAA,IACAhB,GAAAgB,EACA4hF,EAAApG,eAEAoG,EAAApG,eAAAuJ,aAIAv0D,EAAAm1C,SAAA4jB,EAAA3H,IAHAA,EAAApG,eAAAuJ,cAAA,EACAv0D,EAAAm1C,SAAA0jB,EAAAzH,EAAA5hF,IAHAwwB,EAAAm1C,SAAA0jB,EAAAzH,EAAA5hF,GAOAhB,GACAwxB,EAAAm1C,SAAA4jB,EAAA3H,GACA5iF,EAAAgB,IAEAwwB,EAAAm1C,SAAA4jB,EAAA3H,EAEA,IACAvjF,KACA,EA2CA6gF,UAjCA,WACA7gF,KAAAw9E,iBACAx9E,KAAAw9E,eAAAC,WAAA,EACAz9E,KAAAw9E,eAAA8B,SAAA,EACAt/E,KAAAw9E,eAAAJ,OAAA,EACAp9E,KAAAw9E,eAAA6B,YAAA,GAEAr/E,KAAAm9E,iBACAn9E,KAAAm9E,eAAAM,WAAA,EACAz9E,KAAAm9E,eAAAC,OAAA,EACAp9E,KAAAm9E,eAAA6I,QAAA,EACAhmF,KAAAm9E,eAAA4I,aAAA,EACA/lF,KAAAm9E,eAAA8J,aAAA,EACAjnF,KAAAm9E,eAAA4E,UAAA,EACA/hF,KAAAm9E,eAAAuJ,cAAA,EAEA,EAkBA7H,eAdA,SAAAxL,EAAA1xE,GAOA,IAAAkmF,EAAAxU,EAAAmK,eACAsE,EAAAzO,EAAA8J,eACA0K,GAAAA,EAAAhI,aAAAiC,GAAAA,EAAAjC,YAAAxM,EAAA0G,QAAAp4E,GAAA0xE,EAAAzrD,KAAA,QAAAjmB,EACA,ElJmwuBC,GAAE7F,KAAKkE,KAAM,GAAElE,KAAKkE,KAAKG,EAAQ,YAElC,EAAE,CAAC8yB,SAAW,MAAM,IAAI,CAAC,SAAS9yB,EAAQT,EAAOD,GmJ11uBjD,IAAA4rF,EAAAlrF,EAAA,mBAAA27E,MAAAuP,2BAYA,SAAAnqF,IAAA,CAoEAxB,EAAAD,QAhEA,SAAA6rF,EAAAjY,EAAAxe,EAAA9yD,GACA,GAAA,mBAAA8yD,EAAA,OAAAy2B,EAAAjY,EAAA,KAAAxe,GACAA,IAAAA,EAAA,CAAA,GACA9yD,EAlBA,SAAAA,GACA,IAAA02D,GAAA,EACA,OAAA,WACA,IAAAA,EAAA,CACAA,GAAA,EACA,IAAA,IAAA8yB,EAAA7tF,UAAAlB,OAAAsF,EAAA,IAAA5F,MAAAqvF,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IACA1pF,EAAA0pF,GAAA9tF,UAAA8tF,GAEAzpF,EAAApE,MAAAqC,KAAA8B,EALA,CAMA,CACA,CAQAb,CAAAc,GAAAb,GACA,IAAA+7E,EAAApoB,EAAAooB,WAAA,IAAApoB,EAAAooB,UAAA5J,EAAA4J,SACA//E,EAAA23D,EAAA33D,WAAA,IAAA23D,EAAA33D,UAAAm2E,EAAAn2E,SACAuuF,EAAA,WACApY,EAAAn2E,UAAA0lF,GACA,EACA8I,EAAArY,EAAA8J,gBAAA9J,EAAA8J,eAAA4E,SACAa,EAAA,WACA1lF,GAAA,EACAwuF,GAAA,EACAzO,GAAAl7E,EAAAjG,KAAAu3E,EACA,EACAsY,EAAAtY,EAAAmK,gBAAAnK,EAAAmK,eAAA6B,WACAnC,EAAA,WACAD,GAAA,EACA0O,GAAA,EACAzuF,GAAA6E,EAAAjG,KAAAu3E,EACA,EACAqG,EAAA,SAAA/3E,GACAI,EAAAjG,KAAAu3E,EAAA1xE,EACA,EACAghF,EAAA,WACA,IAAAhhF,EACA,OAAAs7E,IAAA0O,GACAtY,EAAAmK,gBAAAnK,EAAAmK,eAAAJ,QAAAz7E,EAAA,IAAA0pF,GACAtpF,EAAAjG,KAAAu3E,EAAA1xE,IAEAzE,IAAAwuF,GACArY,EAAA8J,gBAAA9J,EAAA8J,eAAAC,QAAAz7E,EAAA,IAAA0pF,GACAtpF,EAAAjG,KAAAu3E,EAAA1xE,SAFA,CAIA,EACAiqF,EAAA,WACAvY,EAAAgB,IAAAztD,GAAA,SAAAg8D,EACA,EAcA,OAtDA,SAAAvP,GACA,OAAAA,EAAAx3C,WAAA,mBAAAw3C,EAAAwB,KACA,CAuCAgX,CAAAxY,GAIAn2E,IAAAm2E,EAAA8J,iBAEA9J,EAAAzsD,GAAA,MAAA6kE,GACApY,EAAAzsD,GAAA,QAAA6kE,KANApY,EAAAzsD,GAAA,WAAAg8D,GACAvP,EAAAzsD,GAAA,QAAA+7D,GACAtP,EAAAgB,IAAAuX,IAAAvY,EAAAzsD,GAAA,UAAAglE,IAMAvY,EAAAzsD,GAAA,MAAAs2D,GACA7J,EAAAzsD,GAAA,SAAAg8D,IACA,IAAA/tB,EAAA7jD,OAAAqiE,EAAAzsD,GAAA,QAAA8yD,GACArG,EAAAzsD,GAAA,QAAA+7D,GACA,WACAtP,EAAA9sD,eAAA,WAAAq8D,GACAvP,EAAA9sD,eAAA,QAAAo8D,GACAtP,EAAA9sD,eAAA,UAAAqlE,GACAvY,EAAAgB,KAAAhB,EAAAgB,IAAA9tD,eAAA,SAAAq8D,GACAvP,EAAA9sD,eAAA,MAAAklE,GACApY,EAAA9sD,eAAA,QAAAklE,GACApY,EAAA9sD,eAAA,SAAAq8D,GACAvP,EAAA9sD,eAAA,MAAA22D,GACA7J,EAAA9sD,eAAA,QAAAmzD,GACArG,EAAA9sD,eAAA,QAAAo8D,EACA,CACA,CnJk2uBA,EAAE,CAAC,kBAAkB,MAAM,IAAI,CAAC,SAASxiF,EAAQT,EAAOD,GoJt7uBxDC,EAAAD,QAAA,WACA,MAAA,IAAAY,MAAA,gDACA,CpJy7uBA,EAAE,CAAC,GAAG,IAAI,CAAC,SAASF,EAAQT,EAAOD,GqJt7uBnC,IAAA6rF,EASA,IAAA9M,EAAAr+E,EAAA,mBAAA27E,MACAgQ,EAAAtN,EAAAsN,iBACArG,EAAAjH,EAAAiH,qBACA,SAAAvkF,EAAAS,GAEA,GAAAA,EAAA,MAAAA,CACA,CA+BA,SAAA7F,EAAAiF,GACAA,GACA,CACA,SAAA6yE,EAAAz3E,EAAAqmB,GACA,OAAArmB,EAAAy3E,KAAApxD,EACA,CA6BA9iB,EAAAD,QAvBA,WACA,IAAA,IAAA8rF,EAAA7tF,UAAAlB,OAAAuvF,EAAA,IAAA7vF,MAAAqvF,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IACAO,EAAAP,GAAA9tF,UAAA8tF,GAEA,IAKAx6E,EALAjP,EATA,SAAAgqF,GACA,OAAAA,EAAAvvF,OACA,mBAAAuvF,EAAAA,EAAAvvF,OAAA,GAAA0E,EACA6qF,EAAA/pF,MAFAd,CAGA,CAKA8qF,CAAAD,GAEA,GADA7vF,MAAAK,QAAAwvF,EAAA,MAAAA,EAAAA,EAAA,IACAA,EAAAvvF,OAAA,EACA,MAAA,IAAAsvF,EAAA,WAGA,IAAAG,EAAAF,EAAA9iB,KAAA,SAAAoK,EAAAj1E,GACA,IAAAkhF,EAAAlhF,EAAA2tF,EAAAvvF,OAAA,EAEA,OAnDA,SAAA62E,EAAAiM,EAAA6G,EAAApkF,GACAA,EAnBA,SAAAA,GACA,IAAA02D,GAAA,EACA,OAAA,WACAA,IACAA,GAAA,EACA12D,EAAApE,WAAA,EAAAD,WACA,CACA,CAYAuD,CAAAc,GACA,IAAAmqF,GAAA,EACA7Y,EAAAzsD,GAAA,SAAA,WACAslE,GAAA,CACA,SACA7/E,IAAAi/E,IAAAA,EAAAnrF,EAAA,oBACAmrF,EAAAjY,EAAA,CACA4J,SAAAqC,EACApiF,SAAAipF,IACA,SAAAxkF,GACA,GAAAA,EAAA,OAAAI,EAAAJ,GACAuqF,GAAA,EACAnqF,GACA,IACA,IAAA07E,GAAA,EACA,OAAA,SAAA97E,GACA,IAAAuqF,IACAzO,EAIA,OAHAA,GAAA,EAtBA,SAAApK,GACA,OAAAA,EAAAx3C,WAAA,mBAAAw3C,EAAAwB,KACA,CAuBAgX,CAAAxY,GAAAA,EAAAwB,QACA,mBAAAxB,EAAA0G,QAAA1G,EAAA0G,eACAh4E,EAAAJ,GAAA,IAAA8jF,EAAA,QACA,CACA,CAyBA0G,CAAA9Y,EAAAiM,EADAlhF,EAAA,GACA,SAAAuD,GACAqP,IAAAA,EAAArP,GACAA,GAAAsqF,EAAArrE,QAAA9kB,GACAwjF,IACA2M,EAAArrE,QAAA9kB,GACAiG,EAAAiP,GACA,GACA,IACA,OAAA+6E,EAAA5b,OAAAyD,EACA,CrJ87uBA,EAAE,CAAC,kBAAkB,IAAI,kBAAkB,MAAM,IAAI,CAAC,SAASzzE,EAAQT,EAAOD,GsJhhvB9E,IAAA2sF,EAAAjsF,EAAA,mBAAA27E,MAAAsQ,sBAiBA1sF,EAAAD,QAAA,CACA8+E,iBAdA,SAAAn2D,EAAA7N,EAAA8xE,EAAAtN,GACA,IAAAuN,EAJA,SAAA/xE,EAAAwkE,EAAAsN,GACA,OAAA,MAAA9xE,EAAA+iE,cAAA/iE,EAAA+iE,cAAAyB,EAAAxkE,EAAA8xE,GAAA,IACA,CAEAE,CAAAhyE,EAAAwkE,EAAAsN,GACA,GAAA,MAAAC,EAAA,CACA,IAAAh6E,SAAAg6E,IAAA1pF,KAAAuY,MAAAmxE,KAAAA,GAAAA,EAAA,EAEA,MAAA,IAAAF,EADArN,EAAAsN,EAAA,gBACAC,GAEA,OAAA1pF,KAAAuY,MAAAmxE,EACA,CAGA,OAAAlkE,EAAA42D,WAAA,GAAA,KACA,EtJuhvBA,EAAE,CAAC,kBAAkB,MAAM,IAAI,CAAC,SAAS7+E,EAAQT,EAAOD,GuJzivBxDC,EAAAD,QAAAU,EAAA,UAAA8lB,YvJ4ivBA,EAAE,CAACuB,OAAS,KAAK,IAAI,CAAC,SAASrnB,EAAQT,EAAOD,IwJ5ivB9CA,EAAAC,EAAAD,QAAAU,EAAA,8BACA49E,OAAAt+E,EACAA,EAAA86E,SAAA96E,EACAA,EAAAs3E,SAAA52E,EAAA,6BACAV,EAAAs9E,OAAA58E,EAAA,2BACAV,EAAAk+E,UAAAx9E,EAAA,8BACAV,EAAAi+E,YAAAv9E,EAAA,gCACAV,EAAAsiF,SAAA5hF,EAAA,2CACAV,EAAA+sF,SAAArsF,EAAA,qCxJ+ivBA,EAAE,CAAC,0BAA0B,IAAI,+BAA+B,IAAI,4BAA4B,IAAI,6BAA6B,IAAI,4BAA4B,IAAI,0CAA0C,IAAI,qCAAqC,MAAM,IAAI,CAAC,SAASA,EAAQT,EAAOD,GyJ9hvB3R,IAAAkL,EAAAxK,EAAA,eAAAwK,OAGAe,EAAAf,EAAAe,YAAA,SAAAD,GAEA,QADAA,EAAA,GAAAA,IACAA,EAAA2B,eACA,IAAA,MAAA,IAAA,OAAA,IAAA,QAAA,IAAA,QAAA,IAAA,SAAA,IAAA,SAAA,IAAA,OAAA,IAAA,QAAA,IAAA,UAAA,IAAA,WAAA,IAAA,MACA,OAAA,EACA,QACA,OAAA,EAEA,EA0CA,SAAA+wE,EAAA1yE,GAEA,IAAAs/E,EACA,OAFA/qF,KAAAyL,SAXA,SAAAsP,GACA,IAAA0xE,EA/BA,SAAA1xE,GACA,IAAAA,EAAA,MAAA,OAEA,IADA,IAAA2xE,IAEA,OAAA3xE,GACA,IAAA,OACA,IAAA,QACA,MAAA,OACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,MAAA,UACA,IAAA,SACA,IAAA,SACA,MAAA,SACA,IAAA,SACA,IAAA,QACA,IAAA,MACA,OAAAA,EACA,QACA,GAAA2xE,EAAA,OACA3xE,GAAA,GAAAA,GAAA3N,cACAs/E,GAAA,EAGA,CAKAC,CAAA5xE,GACA,GAAA,iBAAA0xE,IAAA9hF,EAAAe,aAAAA,IAAAA,EAAAqP,IAAA,MAAA,IAAA1a,MAAA,qBAAA0a,GACA,OAAA0xE,GAAA1xE,CACA,CAOA6xE,CAAAnhF,GAEAzL,KAAAyL,UACA,IAAA,UACAzL,KAAA6sF,KAAAC,EACA9sF,KAAA+E,IAAAgoF,EACAhC,EAAA,EACA,MACA,IAAA,OACA/qF,KAAAgtF,SAAAC,EACAlC,EAAA,EACA,MACA,IAAA,SACA/qF,KAAA6sF,KAAAK,EACAltF,KAAA+E,IAAAooF,EACApC,EAAA,EACA,MACA,QAGA,OAFA/qF,KAAA4L,MAAAwhF,OACAptF,KAAA+E,IAAAsoF,GAGArtF,KAAAstF,SAAA,EACAttF,KAAAutF,UAAA,EACAvtF,KAAAwtF,SAAA7iF,EAAAY,YAAAw/E,EACA,CAmCA,SAAA0C,EAAAC,GACA,OAAAA,GAAA,IAAA,EAAAA,GAAA,GAAA,EAAA,EAAAA,GAAA,GAAA,GAAA,EAAAA,GAAA,GAAA,GAAA,EACAA,GAAA,GAAA,GAAA,GAAA,CACA,CA0DA,SAAAT,EAAA7hF,GACA,IAAA7N,EAAAyC,KAAAutF,UAAAvtF,KAAAstF,SACAlyF,EAtBA,SAAA2E,EAAAqL,EAAA7N,GACA,GAAA,MAAA,IAAA6N,EAAA,IAEA,OADArL,EAAAutF,SAAA,EACA,IAEA,GAAAvtF,EAAAutF,SAAA,GAAAliF,EAAA5O,OAAA,EAAA,CACA,GAAA,MAAA,IAAA4O,EAAA,IAEA,OADArL,EAAAutF,SAAA,EACA,IAEA,GAAAvtF,EAAAutF,SAAA,GAAAliF,EAAA5O,OAAA,GACA,MAAA,IAAA4O,EAAA,IAEA,OADArL,EAAAutF,SAAA,EACA,GAGA,CACA,CAKAK,CAAA3tF,KAAAoL,GACA,YAAAiB,IAAAjR,EAAAA,EACA4E,KAAAstF,UAAAliF,EAAA5O,QACA4O,EAAAqB,KAAAzM,KAAAwtF,SAAAjwF,EAAA,EAAAyC,KAAAstF,UACAttF,KAAAwtF,SAAA3xF,SAAAmE,KAAAyL,SAAA,EAAAzL,KAAAutF,aAEAniF,EAAAqB,KAAAzM,KAAAwtF,SAAAjwF,EAAA,EAAA6N,EAAA5O,aACAwD,KAAAstF,UAAAliF,EAAA5O,QACA,CA0BA,SAAAswF,EAAA1hF,EAAAhN,GACA,IAAAgN,EAAA5O,OAAA4B,GAAA,GAAA,EAAA,CACA,IAAAhD,EAAAgQ,EAAAvP,SAAA,UAAAuC,GACA,GAAAhD,EAAA,CACA,IAAA8E,EAAA9E,EAAA8I,WAAA9I,EAAAoB,OAAA,GACA,GAAA0D,GAAA,OAAAA,GAAA,MAKA,OAJAF,KAAAstF,SAAA,EACAttF,KAAAutF,UAAA,EACAvtF,KAAAwtF,SAAA,GAAApiF,EAAAA,EAAA5O,OAAA,GACAwD,KAAAwtF,SAAA,GAAApiF,EAAAA,EAAA5O,OAAA,GACApB,EAAAW,MAAA,GAAA,EAEA,CACA,OAAAX,CACA,CAIA,OAHA4E,KAAAstF,SAAA,EACAttF,KAAAutF,UAAA,EACAvtF,KAAAwtF,SAAA,GAAApiF,EAAAA,EAAA5O,OAAA,GACA4O,EAAAvP,SAAA,UAAAuC,EAAAgN,EAAA5O,OAAA,EACA,CAIA,SAAAuwF,EAAA3hF,GACA,IAAAhQ,EAAAgQ,GAAAA,EAAA5O,OAAAwD,KAAA4L,MAAAR,GAAA,GACA,GAAApL,KAAAstF,SAAA,CACA,IAAAvoF,EAAA/E,KAAAutF,UAAAvtF,KAAAstF,SACA,OAAAlyF,EAAA4E,KAAAwtF,SAAA3xF,SAAA,UAAA,EAAAkJ,EACA,CACA,OAAA3J,CACA,CAEA,SAAA8xF,EAAA9hF,EAAAhN,GACA,IAAA1B,GAAA0O,EAAA5O,OAAA4B,GAAA,EACA,OAAA,IAAA1B,EAAA0O,EAAAvP,SAAA,SAAAuC,IACA4B,KAAAstF,SAAA,EAAA5wF,EACAsD,KAAAutF,UAAA,EACA,IAAA7wF,EACAsD,KAAAwtF,SAAA,GAAApiF,EAAAA,EAAA5O,OAAA,IAEAwD,KAAAwtF,SAAA,GAAApiF,EAAAA,EAAA5O,OAAA,GACAwD,KAAAwtF,SAAA,GAAApiF,EAAAA,EAAA5O,OAAA,IAEA4O,EAAAvP,SAAA,SAAAuC,EAAAgN,EAAA5O,OAAAE,GACA,CAEA,SAAAywF,EAAA/hF,GACA,IAAAhQ,EAAAgQ,GAAAA,EAAA5O,OAAAwD,KAAA4L,MAAAR,GAAA,GACA,OAAApL,KAAAstF,SAAAlyF,EAAA4E,KAAAwtF,SAAA3xF,SAAA,SAAA,EAAA,EAAAmE,KAAAstF,UACAlyF,CACA,CAGA,SAAAgyF,EAAAhiF,GACA,OAAAA,EAAAvP,SAAAmE,KAAAyL,SACA,CAEA,SAAA4hF,EAAAjiF,GACA,OAAAA,GAAAA,EAAA5O,OAAAwD,KAAA4L,MAAAR,GAAA,EACA,CA1NA3L,EAAA0+E,cAAAA,EA6BAA,EAAAhgF,UAAAyN,MAAA,SAAAR,GACA,GAAA,IAAAA,EAAA5O,OAAA,MAAA,GACA,IAAApB,EACAgD,EACA,GAAA4B,KAAAstF,SAAA,CAEA,QAAAjhF,KADAjR,EAAA4E,KAAAgtF,SAAA5hF,IACA,MAAA,GACAhN,EAAA4B,KAAAstF,SACAttF,KAAAstF,SAAA,CACA,MACAlvF,EAAA,EAEA,OAAAA,EAAAgN,EAAA5O,OAAApB,EAAAA,EAAA4E,KAAA6sF,KAAAzhF,EAAAhN,GAAA4B,KAAA6sF,KAAAzhF,EAAAhN,GACAhD,GAAA,EACA,EAEA+iF,EAAAhgF,UAAA4G,IAwGA,SAAAqG,GACA,IAAAhQ,EAAAgQ,GAAAA,EAAA5O,OAAAwD,KAAA4L,MAAAR,GAAA,GACA,OAAApL,KAAAstF,SAAAlyF,EAAA,IACAA,CACA,EAzGA+iF,EAAAhgF,UAAA0uF,KA0FA,SAAAzhF,EAAAhN,GACA,IAAAwvF,EArEA,SAAA7tF,EAAAqL,EAAAhN,GACA,IAAA4I,EAAAoE,EAAA5O,OAAA,EACA,GAAAwK,EAAA5I,EAAA,OAAA,EACA,IAAA2sF,EAAA0C,EAAAriF,EAAApE,IACA,GAAA+jF,GAAA,EAEA,OADAA,EAAA,IAAAhrF,EAAAutF,SAAAvC,EAAA,GACAA,EAEA,KAAA/jF,EAAA5I,IAAA,IAAA2sF,EAAA,OAAA,EAEA,GADAA,EAAA0C,EAAAriF,EAAApE,IACA+jF,GAAA,EAEA,OADAA,EAAA,IAAAhrF,EAAAutF,SAAAvC,EAAA,GACAA,EAEA,KAAA/jF,EAAA5I,IAAA,IAAA2sF,EAAA,OAAA,EAEA,GADAA,EAAA0C,EAAAriF,EAAApE,IACA+jF,GAAA,EAIA,OAHAA,EAAA,IACA,IAAAA,EAAAA,EAAA,EAAAhrF,EAAAutF,SAAAvC,EAAA,GAEAA,EAEA,OAAA,CACA,CA8CA8C,CAAA7tF,KAAAoL,EAAAhN,GACA,IAAA4B,KAAAstF,SAAA,OAAAliF,EAAAvP,SAAA,OAAAuC,GACA4B,KAAAutF,UAAAK,EACA,IAAA7oF,EAAAqG,EAAA5O,QAAAoxF,EAAA5tF,KAAAstF,UAEA,OADAliF,EAAAqB,KAAAzM,KAAAwtF,SAAA,EAAAzoF,GACAqG,EAAAvP,SAAA,OAAAuC,EAAA2G,EACA,EA9FAo5E,EAAAhgF,UAAA6uF,SAAA,SAAA5hF,GACA,GAAApL,KAAAstF,UAAAliF,EAAA5O,OAEA,OADA4O,EAAAqB,KAAAzM,KAAAwtF,SAAAxtF,KAAAutF,UAAAvtF,KAAAstF,SAAA,EAAAttF,KAAAstF,UACAttF,KAAAwtF,SAAA3xF,SAAAmE,KAAAyL,SAAA,EAAAzL,KAAAutF,WAEAniF,EAAAqB,KAAAzM,KAAAwtF,SAAAxtF,KAAAutF,UAAAvtF,KAAAstF,SAAA,EAAAliF,EAAA5O,QACAwD,KAAAstF,UAAAliF,EAAA5O,MACA,CzJytvBA,EAAE,CAAC,cAAc,MAAM,IAAI,CAAC,SAAS2D,EAAQT,EAAOD,IACpD,SAAWmC,EAAaksF,IAAgB,W0Jj2vBxC,IAAAxmB,EAAAnnE,EAAA,sBAAAmnE,SACA3pE,EAAAioB,SAAAznB,UAAAR,MACA5B,EAAAG,MAAAiC,UAAApC,MACAgyF,EAAA,CAAA,EACAC,EAAA,EAaA,SAAAC,EAAAC,EAAAC,GACAnuF,KAAAouF,IAAAF,EACAluF,KAAAquF,SAAAF,CACA,CAZA1uF,EAAAwD,WAAA,WACA,OAAA,IAAAgrF,EAAAtwF,EAAA7B,KAAAmH,WAAApD,OAAAnC,WAAAgpE,aACA,EACAjnE,EAAA6uF,YAAA,WACA,OAAA,IAAAL,EAAAtwF,EAAA7B,KAAAwyF,YAAAzuF,OAAAnC,WAAA6wF,cACA,EACA9uF,EAAAinE,aACAjnE,EAAA8uF,cAAA,SAAAtnB,GAAAA,EAAA6T,OAAA,EAMAmT,EAAA9vF,UAAAqwF,MAAAP,EAAA9vF,UAAAswF,IAAA,WAAA,EACAR,EAAA9vF,UAAA28E,MAAA,WACA96E,KAAAquF,SAAAvyF,KAAA+D,OAAAG,KAAAouF,IACA,EAGA3uF,EAAAivF,OAAA,SAAAne,EAAAoe,GACAjoB,aAAA6J,EAAAqe,gBACAre,EAAAse,aAAAF,CACA,EAEAlvF,EAAAqvF,SAAA,SAAAve,GACA7J,aAAA6J,EAAAqe,gBACAre,EAAAse,cAAA,CACA,EAEApvF,EAAAsvF,aAAAtvF,EAAAuvF,OAAA,SAAAze,GACA7J,aAAA6J,EAAAqe,gBAEA,IAAAD,EAAApe,EAAAse,aACAF,GAAA,IACApe,EAAAqe,eAAA3rF,YAAA,WACAstE,EAAA0e,YACA1e,EAAA0e,YACA,GAAAN,GAEA,EAGAlvF,EAAAmC,aAAA,mBAAAA,EAAAA,EAAA,SAAAb,GACA,IAAAmtF,EAAAF,IACAlsF,IAAApE,UAAAlB,OAAA,IAAAT,EAAAD,KAAA4B,UAAA,GAkBA,OAhBAqwF,EAAAG,IAAA,EAEA5mB,GAAA,WACAymB,EAAAG,KAGApsF,EACAf,EAAApD,MAAA,KAAAmE,GAEAf,EAAAjF,KAAA,MAGA2D,EAAAquF,eAAAI,GAEA,IAEAA,CACA,EAEAzuF,EAAAquF,eAAA,mBAAAA,EAAAA,EAAA,SAAAI,UACAH,EAAAG,EACA,C1Jm2vBC,GAAEpyF,KAAKkE,KAAM,GAAElE,KAAKkE,KAAKG,EAAQ,UAAUyB,aAAazB,EAAQ,UAAU2tF,eAE3E,EAAE,CAAC,qBAAqB,IAAI5qF,OAAS,MAAM,IAAI,CAAC,SAAS/C,EAAQT,EAAOD,G2Jv5vBxE,IAAAyoE,EAAA/nE,EAAA,YAEA,SAAA+uF,IACAlvF,KAAA8mD,SAAA,KACA9mD,KAAAmvF,QAAA,KACAnvF,KAAAi0E,KAAA,KACAj0E,KAAAw0E,KAAA,KACAx0E,KAAAg0E,KAAA,KACAh0E,KAAA+zE,SAAA,KACA/zE,KAAAovF,KAAA,KACApvF,KAAAmK,OAAA,KACAnK,KAAAqvF,MAAA,KACArvF,KAAAsvF,SAAA,KACAtvF,KAAAqb,KAAA,KACArb,KAAAuvF,KAAA,IACA,CAQA,IAAAC,EAAA,oBACAC,EAAA,WAGAC,EAAA,oCAWAC,EAAA,CACA,IAAA,IAAA,IAAA,KAAA,IAAA,KACAtsF,OAPA,CACA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,OASAusF,EAAA,CAAA,KAAAvsF,OAAAssF,GAOAE,EAAA,CACA,IAAA,IAAA,IAAA,IAAA,KACAxsF,OAAAusF,GACAE,EAAA,CACA,IAAA,IAAA,KAGAC,EAAA,yBACAC,EAAA,+BAEAC,EAAA,CACAC,YAAA,EACA,eAAA,GAGAC,EAAA,CACAD,YAAA,EACA,eAAA,GAGAE,EAAA,CACA1pC,MAAA,EACAC,OAAA,EACA0pC,KAAA,EACAC,QAAA,EACAC,MAAA,EACA,SAAA,EACA,UAAA,EACA,QAAA,EACA,WAAA,EACA,SAAA,GAEA7c,EAAAvzE,EAAA,MAEA,SAAAqwF,EAAAr0C,EAAAs0C,EAAAC,GACA,GAAAv0C,GAAA,WAAA79C,QAAA69C,IAAAA,aAAA+yC,EAAA,OAAA/yC,EAEA,IAAA/7C,EAAA,IAAA8uF,EAEA,OADA9uF,EAAAiK,MAAA8xC,EAAAs0C,EAAAC,GACAtwF,CACA,CAEA8uF,EAAA/wF,UAAAkM,MAAA,SAAA8xC,EAAAs0C,EAAAC,GACA,GAAA,iBAAAv0C,EACA,MAAA,IAAA1gD,UAAA,yCAAA6C,QAAA69C,IAQA,IAAAw0C,EAAAx0C,EAAAt3C,QAAA,KACA+rF,GAAA,IAAAD,GAAAA,EAAAx0C,EAAAt3C,QAAA,KAAA,IAAA,IACAgsF,EAAA10C,EAAApmC,MAAA66E,GAEAC,EAAA,GAAAA,EAAA,GAAA3mF,QADA,MACA,KAGA,IAAApH,EAFAq5C,EAAA00C,EAAAlsF,KAAAisF,GAUA,GAFA9tF,EAAAA,EAAAiP,QAEA2+E,GAAA,IAAAv0C,EAAApmC,MAAA,KAAAvZ,OAAA,CAEA,IAAAs0F,EAAApB,EAAA7qC,KAAA/hD,GACA,GAAAguF,EAeA,OAdA9wF,KAAAqb,KAAAvY,EACA9C,KAAAuvF,KAAAzsF,EACA9C,KAAAsvF,SAAAwB,EAAA,GACAA,EAAA,IACA9wF,KAAAmK,OAAA2mF,EAAA,GAEA9wF,KAAAqvF,MADAoB,EACA/c,EAAArpE,MAAArK,KAAAmK,OAAA6E,OAAA,IAEAhP,KAAAmK,OAAA6E,OAAA,IAEAyhF,IACAzwF,KAAAmK,OAAA,GACAnK,KAAAqvF,MAAA,CAAA,GAEArvF,IAEA,CAEA,IAAA44D,EAAA42B,EAAA3qC,KAAA/hD,GACA,GAAA81D,EAAA,CAEA,IAAAm4B,GADAn4B,EAAAA,EAAA,IACAxrD,cACApN,KAAA8mD,SAAAiqC,EACAjuF,EAAAA,EAAAkM,OAAA4pD,EAAAp8D,OACA,CAQA,GAAAk0F,GAAA93B,GAAA91D,EAAAkb,MAAA,sBAAA,CACA,IAAAmxE,EAAA,OAAArsF,EAAAkM,OAAA,EAAA,IACAmgF,GAAAv2B,GAAAu3B,EAAAv3B,KACA91D,EAAAA,EAAAkM,OAAA,GACAhP,KAAAmvF,SAAA,EAEA,CAEA,IAAAgB,EAAAv3B,KAAAu2B,GAAAv2B,IAAAw3B,EAAAx3B,IAAA,CAuBA,IADA,IAUAqb,EAAA+c,EAVAC,GAAA,EACA7yF,EAAA,EAAAA,EAAA0xF,EAAAtzF,OAAA4B,IAAA,EAEA,KADA8yF,EAAApuF,EAAA+B,QAAAirF,EAAA1xF,QACA,IAAA6yF,GAAAC,EAAAD,KAAAA,EAAAC,EACA,EAsBA,KAbAF,GAFA,IAAAC,EAEAnuF,EAAAoL,YAAA,KAMApL,EAAAoL,YAAA,IAAA+iF,MAQAhd,EAAAnxE,EAAA/G,MAAA,EAAAi1F,GACAluF,EAAAA,EAAA/G,MAAAi1F,EAAA,GACAhxF,KAAAi0E,KAAAl4D,mBAAAk4D,IAIAgd,GAAA,EACA,IAAA7yF,EAAA,EAAAA,EAAAyxF,EAAArzF,OAAA4B,IAAA,CACA,IAAA8yF,GACA,KADAA,EAAApuF,EAAA+B,QAAAgrF,EAAAzxF,QACA,IAAA6yF,GAAAC,EAAAD,KAAAA,EAAAC,EACA,EAEA,IAAAD,IAAAA,EAAAnuF,EAAAtG,QAEAwD,KAAAw0E,KAAA1xE,EAAA/G,MAAA,EAAAk1F,GACAnuF,EAAAA,EAAA/G,MAAAk1F,GAGAjxF,KAAAmxF,YAMAnxF,KAAA+zE,SAAA/zE,KAAA+zE,UAAA,GAMA,IAAAqd,EAAA,MAAApxF,KAAA+zE,SAAA,IAAA,MAAA/zE,KAAA+zE,SAAA/zE,KAAA+zE,SAAAv3E,OAAA,GAGA,IAAA40F,EAEA,IADA,IAAAC,EAAArxF,KAAA+zE,SAAAh+D,MAAA,MACA9O,GAAA7I,EAAA,EAAAizF,EAAA70F,QAAA4B,EAAA6I,EAAA7I,IAAA,CACA,IAAAynD,EAAAwrC,EAAAjzF,GACA,GAAAynD,IACAA,EAAA7nC,MAAA+xE,GAAA,CAEA,IADA,IAAAuB,EAAA,GACAtqF,EAAA,EAAAvE,EAAAojD,EAAArpD,OAAAwK,EAAAvE,EAAAuE,IACA6+C,EAAA3hD,WAAA8C,GAAA,IAMAsqF,GAAA,IAEAA,GAAAzrC,EAAA7+C,GAIA,IAAAsqF,EAAAtzE,MAAA+xE,GAAA,CACA,IAAAwB,EAAAF,EAAAt1F,MAAA,EAAAqC,GACAozF,EAAAH,EAAAt1F,MAAAqC,EAAA,GACAqzF,EAAA5rC,EAAA7nC,MAAAgyE,GACAyB,IACAF,EAAAtvF,KAAAwvF,EAAA,IACAD,EAAAnrF,QAAAorF,EAAA,KAEAD,EAAAh1F,SACAsG,EAAA,IAAA0uF,EAAA7sF,KAAA,KAAA7B,GAEA9C,KAAA+zE,SAAAwd,EAAA5sF,KAAA,KACA,KACA,CACA,CACA,CAGA3E,KAAA+zE,SAAAv3E,OAjOA,IAkOAwD,KAAA+zE,SAAA,GAGA/zE,KAAA+zE,SAAA/zE,KAAA+zE,SAAA3mE,cAGAgkF,IAOApxF,KAAA+zE,SAAA7L,EAAAuC,QAAAzqE,KAAA+zE,WAGA,IAAAx2E,EAAAyC,KAAAg0E,KAAA,IAAAh0E,KAAAg0E,KAAA,GACA/3D,EAAAjc,KAAA+zE,UAAA,GACA/zE,KAAAw0E,KAAAv4D,EAAA1e,EACAyC,KAAAuvF,MAAAvvF,KAAAw0E,KAMA4c,IACApxF,KAAA+zE,SAAA/zE,KAAA+zE,SAAA/kE,OAAA,EAAAhP,KAAA+zE,SAAAv3E,OAAA,GACA,MAAAsG,EAAA,KACAA,EAAA,IAAAA,GAGA,CAMA,IAAAmtF,EAAAc,GAOA,IAAA3yF,EAAA,EAAA6I,EAAA2oF,EAAApzF,OAAA4B,EAAA6I,EAAA7I,IAAA,CACA,IAAAszF,EAAA9B,EAAAxxF,GACA,IAAA,IAAA0E,EAAA+B,QAAA6sF,GAAA,CACA,IAAAC,EAAA31E,mBAAA01E,GACAC,IAAAD,IACAC,EAAA7gB,OAAA4gB,IAEA5uF,EAAAA,EAAAiT,MAAA27E,GAAA/sF,KAAAgtF,EALA,CAMA,CAIA,IAAAvC,EAAAtsF,EAAA+B,QAAA,MACA,IAAAuqF,IAEApvF,KAAAovF,KAAAtsF,EAAAkM,OAAAogF,GACAtsF,EAAAA,EAAA/G,MAAA,EAAAqzF,IAEA,IAAAwC,EAAA9uF,EAAA+B,QAAA,KAmBA,IAlBA,IAAA+sF,GACA5xF,KAAAmK,OAAArH,EAAAkM,OAAA4iF,GACA5xF,KAAAqvF,MAAAvsF,EAAAkM,OAAA4iF,EAAA,GACAnB,IACAzwF,KAAAqvF,MAAA3b,EAAArpE,MAAArK,KAAAqvF,QAEAvsF,EAAAA,EAAA/G,MAAA,EAAA61F,IACAnB,IAEAzwF,KAAAmK,OAAA,GACAnK,KAAAqvF,MAAA,CAAA,GAEAvsF,IAAA9C,KAAAsvF,SAAAxsF,GACAstF,EAAAW,IAAA/wF,KAAA+zE,WAAA/zE,KAAAsvF,WACAtvF,KAAAsvF,SAAA,KAIAtvF,KAAAsvF,UAAAtvF,KAAAmK,OAAA,CACA5M,EAAAyC,KAAAsvF,UAAA,GAAA,IACA7oF,EAAAzG,KAAAmK,QAAA,GACAnK,KAAAqb,KAAA9d,EAAAkJ,CACA,CAIA,OADAzG,KAAAuvF,KAAAvvF,KAAAmgB,SACAngB,IACA,EAeAkvF,EAAA/wF,UAAAgiB,OAAA,WACA,IAAA8zD,EAAAj0E,KAAAi0E,MAAA,GACAA,IAEAA,GADAA,EAAAj4D,mBAAAi4D,IACA/pE,QAAA,OAAA,KACA+pE,GAAA,KAGA,IAAAntB,EAAA9mD,KAAA8mD,UAAA,GACAwoC,EAAAtvF,KAAAsvF,UAAA,GACAF,EAAApvF,KAAAovF,MAAA,GACA5a,GAAA,EACA6a,EAAA,GAEArvF,KAAAw0E,KACAA,EAAAP,EAAAj0E,KAAAw0E,KACAx0E,KAAA+zE,WACAS,EAAAP,IAAA,IAAAj0E,KAAA+zE,SAAAlvE,QAAA,KAAA7E,KAAA+zE,SAAA,IAAA/zE,KAAA+zE,SAAA,KACA/zE,KAAAg0E,OACAQ,GAAA,IAAAx0E,KAAAg0E,OAIAh0E,KAAAqvF,OAAA,WAAA/wF,QAAA0B,KAAAqvF,QAAAxyF,OAAA2F,KAAAxC,KAAAqvF,OAAA7yF,SACA6yF,EAAA3b,EAAAptE,UAAAtG,KAAAqvF,MAAA,CACA7gB,YAAA,SACAD,gBAAA,KAIA,IAAApkE,EAAAnK,KAAAmK,QAAAklF,GAAA,IAAAA,GAAA,GAuBA,OArBAvoC,GAAA,MAAAA,EAAA93C,QAAA,KAAA83C,GAAA,KAMA9mD,KAAAmvF,WAAAroC,GAAAspC,EAAAtpC,MAAA,IAAA0tB,GACAA,EAAA,MAAAA,GAAA,IACA8a,GAAA,MAAAA,EAAA5oF,OAAA,KAAA4oF,EAAA,IAAAA,IACA9a,IACAA,EAAA,IAGA4a,GAAA,MAAAA,EAAA1oF,OAAA,KAAA0oF,EAAA,IAAAA,GACAjlF,GAAA,MAAAA,EAAAzD,OAAA,KAAAyD,EAAA,IAAAA,GAOA28C,EAAA0tB,GALA8a,EAAAA,EAAAplF,QAAA,SAAA,SAAA8T,GACA,OAAAhC,mBAAAgC,EACA,MACA7T,EAAAA,EAAAD,QAAA,IAAA,QAEAklF,CACA,EAMAF,EAAA/wF,UAAAioB,QAAA,SAAAuzC,GACA,OAAA35D,KAAA6xF,cAAArB,EAAA72B,GAAA,GAAA,IAAAx5C,QACA,EAOA+uE,EAAA/wF,UAAA0zF,cAAA,SAAAl4B,GACA,GAAA,iBAAAA,EAAA,CACA,IAAAm4B,EAAA,IAAA5C,EACA4C,EAAAznF,MAAAsvD,GAAA,GAAA,GACAA,EAAAm4B,CACA,CAIA,IAFA,IAAA5wC,EAAA,IAAAguC,EACA6C,EAAAl1F,OAAA2F,KAAAxC,MACAgyF,EAAA,EAAAA,EAAAD,EAAAv1F,OAAAw1F,IAAA,CACA,IAAAC,EAAAF,EAAAC,GACA9wC,EAAA+wC,GAAAjyF,KAAAiyF,EACA,CASA,GAHA/wC,EAAAkuC,KAAAz1B,EAAAy1B,KAGA,KAAAz1B,EAAA41B,KAEA,OADAruC,EAAAquC,KAAAruC,EAAA/gC,SACA+gC,EAIA,GAAAyY,EAAAw1B,UAAAx1B,EAAA7S,SAAA,CAGA,IADA,IAAAorC,EAAAr1F,OAAA2F,KAAAm3D,GACAw4B,EAAA,EAAAA,EAAAD,EAAA11F,OAAA21F,IAAA,CACA,IAAAC,EAAAF,EAAAC,GACA,aAAAC,IAAAlxC,EAAAkxC,GAAAz4B,EAAAy4B,GACA,CASA,OANAhC,EAAAlvC,EAAA4F,WAAA5F,EAAA6yB,WAAA7yB,EAAAouC,WACApuC,EAAAouC,SAAA,IACApuC,EAAA7lC,KAAA6lC,EAAAouC,UAGApuC,EAAAquC,KAAAruC,EAAA/gC,SACA+gC,CACA,CAEA,GAAAyY,EAAA7S,UAAA6S,EAAA7S,WAAA5F,EAAA4F,SAAA,CAWA,IAAAspC,EAAAz2B,EAAA7S,UAAA,CAEA,IADA,IAAAtkD,EAAA3F,OAAA2F,KAAAm3D,GACAn9C,EAAA,EAAAA,EAAAha,EAAAhG,OAAAggB,IAAA,CACA,IAAA/Z,EAAAD,EAAAga,GACA0kC,EAAAz+C,GAAAk3D,EAAAl3D,EACA,CAEA,OADAy+C,EAAAquC,KAAAruC,EAAA/gC,SACA+gC,CACA,CAGA,GADAA,EAAA4F,SAAA6S,EAAA7S,SACA6S,EAAA6a,MAAA2b,EAAAx2B,EAAA7S,UASA5F,EAAAouC,SAAA31B,EAAA21B,aATA,CAEA,IADA,IAAA+C,GAAA14B,EAAA21B,UAAA,IAAAv5E,MAAA,KACAs8E,EAAA71F,UAAAm9D,EAAA6a,KAAA6d,EAAArqF,WACA2xD,EAAA6a,OAAA7a,EAAA6a,KAAA,IACA7a,EAAAoa,WAAApa,EAAAoa,SAAA,IACA,KAAAse,EAAA,IAAAA,EAAAhsF,QAAA,IACAgsF,EAAA71F,OAAA,GAAA61F,EAAAhsF,QAAA,IACA66C,EAAAouC,SAAA+C,EAAA1tF,KAAA,IACA,CAUA,GAPAu8C,EAAA/2C,OAAAwvD,EAAAxvD,OACA+2C,EAAAmuC,MAAA11B,EAAA01B,MACAnuC,EAAAszB,KAAA7a,EAAA6a,MAAA,GACAtzB,EAAA+yB,KAAAta,EAAAsa,KACA/yB,EAAA6yB,SAAApa,EAAAoa,UAAApa,EAAA6a,KACAtzB,EAAA8yB,KAAAra,EAAAqa,KAEA9yB,EAAAouC,UAAApuC,EAAA/2C,OAAA,CACA,IAAA5M,EAAA2jD,EAAAouC,UAAA,GACA7oF,EAAAy6C,EAAA/2C,QAAA,GACA+2C,EAAA7lC,KAAA9d,EAAAkJ,CACA,CAGA,OAFAy6C,EAAAiuC,QAAAjuC,EAAAiuC,SAAAx1B,EAAAw1B,QACAjuC,EAAAquC,KAAAruC,EAAA/gC,SACA+gC,CACA,CAEA,IAAAoxC,EAAApxC,EAAAouC,UAAA,MAAApuC,EAAAouC,SAAA5oF,OAAA,GACA6rF,EAAA54B,EAAA6a,MAAA7a,EAAA21B,UAAA,MAAA31B,EAAA21B,SAAA5oF,OAAA,GACA8rF,EAAAD,GAAAD,GAAApxC,EAAAszB,MAAA7a,EAAA21B,SACAmD,EAAAD,EACAE,EAAAxxC,EAAAouC,UAAApuC,EAAAouC,SAAAv5E,MAAA,MAAA,GAEA48E,GADAN,EAAA14B,EAAA21B,UAAA31B,EAAA21B,SAAAv5E,MAAA,MAAA,GACAmrC,EAAA4F,WAAAspC,EAAAlvC,EAAA4F,WA2BA,GAlBA6rC,IACAzxC,EAAA6yB,SAAA,GACA7yB,EAAA8yB,KAAA,KACA9yB,EAAAszB,OACA,KAAAke,EAAA,GAAAA,EAAA,GAAAxxC,EAAAszB,KAAAke,EAAArsF,QAAA66C,EAAAszB,OAEAtzB,EAAAszB,KAAA,GACA7a,EAAA7S,WACA6S,EAAAoa,SAAA,KACApa,EAAAqa,KAAA,KACAra,EAAA6a,OACA,KAAA6d,EAAA,GAAAA,EAAA,GAAA14B,EAAA6a,KAAA6d,EAAAhsF,QAAAszD,EAAA6a,OAEA7a,EAAA6a,KAAA,MAEAge,EAAAA,IAAA,KAAAH,EAAA,IAAA,KAAAK,EAAA,KAGAH,EAEArxC,EAAAszB,KAAA7a,EAAA6a,MAAA,KAAA7a,EAAA6a,KAAA7a,EAAA6a,KAAAtzB,EAAAszB,KACAtzB,EAAA6yB,SAAApa,EAAAoa,UAAA,KAAApa,EAAAoa,SAAApa,EAAAoa,SAAA7yB,EAAA6yB,SACA7yB,EAAA/2C,OAAAwvD,EAAAxvD,OACA+2C,EAAAmuC,MAAA11B,EAAA01B,MACAqD,EAAAL,OAEA,GAAAA,EAAA71F,OAKAk2F,IAAAA,EAAA,IACAA,EAAA1wF,MACA0wF,EAAAA,EAAArvF,OAAAgvF,GACAnxC,EAAA/2C,OAAAwvD,EAAAxvD,OACA+2C,EAAAmuC,MAAA11B,EAAA01B,WACA,GAAA,MAAA11B,EAAAxvD,OAAA,CAMA,GAAAwoF,EACAzxC,EAAAszB,KAAAke,EAAA1qF,QACAk5C,EAAA6yB,SAAA7yB,EAAAszB,MAMAoe,KAAA1xC,EAAAszB,MAAAtzB,EAAAszB,KAAA3vE,QAAA,KAAA,IAAAq8C,EAAAszB,KAAAz+D,MAAA,QAEAmrC,EAAA+yB,KAAA2e,EAAA5qF,QACAk5C,EAAA6yB,SAAA6e,EAAA5qF,QACAk5C,EAAAszB,KAAAtzB,EAAA6yB,UAUA,OAPA7yB,EAAA/2C,OAAAwvD,EAAAxvD,OACA+2C,EAAAmuC,MAAA11B,EAAA01B,MAEA,OAAAnuC,EAAAouC,UAAA,OAAApuC,EAAA/2C,SACA+2C,EAAA7lC,MAAA6lC,EAAAouC,SAAApuC,EAAAouC,SAAA,KAAApuC,EAAA/2C,OAAA+2C,EAAA/2C,OAAA,KAEA+2C,EAAAquC,KAAAruC,EAAA/gC,SACA+gC,CACA,CAEA,IAAAwxC,EAAAl2F,OAaA,OARA0kD,EAAAouC,SAAA,KAEApuC,EAAA/2C,OACA+2C,EAAA7lC,KAAA,IAAA6lC,EAAA/2C,OAEA+2C,EAAA7lC,KAAA,KAEA6lC,EAAAquC,KAAAruC,EAAA/gC,SACA+gC,EAgBA,IARA,IAAAkE,EAAAstC,EAAA32F,OAAA,GAAA,GACA82F,GAAA3xC,EAAAszB,MAAA7a,EAAA6a,MAAAke,EAAAl2F,OAAA,KAAA,MAAA4oD,GAAA,OAAAA,IAAA,KAAAA,EAMA0tC,EAAA,EACA10F,EAAAs0F,EAAAl2F,OAAA4B,GAAA,EAAAA,IAEA,OADAgnD,EAAAstC,EAAAt0F,IAEAs0F,EAAApyC,OAAAliD,EAAA,GACA,OAAAgnD,GACAstC,EAAApyC,OAAAliD,EAAA,GACA00F,KACAA,IACAJ,EAAApyC,OAAAliD,EAAA,GACA00F,KAKA,IAAAN,IAAAC,EACA,KAAAK,IAAAA,EACAJ,EAAArsF,QAAA,OAIAmsF,GAAA,KAAAE,EAAA,IAAAA,EAAA,IAAA,MAAAA,EAAA,GAAAhsF,OAAA,IACAgsF,EAAArsF,QAAA,IAGAwsF,GAAA,MAAAH,EAAA/tF,KAAA,KAAAqK,QAAA,IACA0jF,EAAAzwF,KAAA,IAGA,IAWA2wF,EAXAp5B,EAAA,KAAAk5B,EAAA,IAAAA,EAAA,IAAA,MAAAA,EAAA,GAAAhsF,OAAA,GAGAisF,IACAzxC,EAAA6yB,SAAAva,EAAA,GAAAk5B,EAAAl2F,OAAAk2F,EAAA1qF,QAAA,GACAk5C,EAAAszB,KAAAtzB,EAAA6yB,UAMA6e,KAAA1xC,EAAAszB,MAAAtzB,EAAAszB,KAAA3vE,QAAA,KAAA,IAAAq8C,EAAAszB,KAAAz+D,MAAA,QAEAmrC,EAAA+yB,KAAA2e,EAAA5qF,QACAk5C,EAAA6yB,SAAA6e,EAAA5qF,QACAk5C,EAAAszB,KAAAtzB,EAAA6yB,WAwBA,OApBAye,EAAAA,GAAAtxC,EAAAszB,MAAAke,EAAAl2F,UAEAg9D,GACAk5B,EAAArsF,QAAA,IAGAqsF,EAAAl2F,OAAA,EACA0kD,EAAAouC,SAAAoD,EAAA/tF,KAAA,MAEAu8C,EAAAouC,SAAA,KACApuC,EAAA7lC,KAAA,MAIA,OAAA6lC,EAAAouC,UAAA,OAAApuC,EAAA/2C,SACA+2C,EAAA7lC,MAAA6lC,EAAAouC,SAAApuC,EAAAouC,SAAA,KAAApuC,EAAA/2C,OAAA+2C,EAAA/2C,OAAA,KAEA+2C,EAAA+yB,KAAAta,EAAAsa,MAAA/yB,EAAA+yB,KACA/yB,EAAAiuC,QAAAjuC,EAAAiuC,SAAAx1B,EAAAw1B,QACAjuC,EAAAquC,KAAAruC,EAAA/gC,SACA+gC,CACA,EAEAguC,EAAA/wF,UAAAgzF,UAAA,WACA,IAAA3c,EAAAx0E,KAAAw0E,KACAR,EAAAyb,EAAA5qC,KAAA2vB,GACAR,IAEA,OADAA,EAAAA,EAAA,MAEAh0E,KAAAg0E,KAAAA,EAAAhlE,OAAA,IAEAwlE,EAAAA,EAAAxlE,OAAA,EAAAwlE,EAAAh4E,OAAAw3E,EAAAx3E,SAEAg4E,IAAAx0E,KAAA+zE,SAAAS,EACA,EAEA/0E,EAAA4K,MAAAmmF,EACA/wF,EAAA2mB,QA/SA,SAAA8pD,EAAAvW,GACA,OAAA62B,EAAAtgB,GAAA,GAAA,GAAA9pD,QAAAuzC,EACA,EA8SAl6D,EAAAoyF,cAxSA,SAAA3hB,EAAAvW,GACA,OAAAuW,EACAsgB,EAAAtgB,GAAA,GAAA,GAAA2hB,cAAAl4B,GADAA,CAEA,EAsSAl6D,EAAA0gB,OArXA,SAAA9e,GAQA,MADA,iBAAAA,IAAAA,EAAAmvF,EAAAnvF,IACAA,aAAA6tF,EACA7tF,EAAA8e,SADA+uE,EAAA/wF,UAAAgiB,OAAArkB,KAAAuF,EAEA,EA6WA5B,EAAAyvF,IAAAA,C3Jm7vBA,EAAE,CAAChnB,SAAW,IAAIgJ,GAAK,MAAM,IAAI,CAAC,SAAS/wE,EAAQT,EAAOD,IAC1D,SAAWK,IAAQ,W4JnoxBnB,SAAAizF,EAAA92F,GAEA,IACA,IAAA6D,EAAAkzF,aAAA,OAAA,CACA,CAAA,MAAA11E,GACA,OAAA,CACA,CACA,IAAAvP,EAAAjO,EAAAkzF,aAAA/2F,GACA,OAAA,MAAA8R,GACA,SAAAvP,OAAAuP,GAAAX,aACA,CA7DA1N,EAAAD,QAoBA,SAAAsB,EAAA87E,GACA,GAAAkW,EAAA,iBACA,OAAAhyF,EAGA,IAAA8mB,GAAA,EAeA,OAdA,WACA,IAAAA,EAAA,CACA,GAAAkrE,EAAA,oBACA,MAAA,IAAA1yF,MAAAw8E,GACAkW,EAAA,oBACAhiF,QAAA+e,MAAA+sD,GAEA9rE,QAAAgX,KAAA80D,GAEAh1D,GAAA,CACA,CACA,OAAA9mB,EAAApD,MAAAqC,KAAAtC,UACA,CAGA,C5JktxBC,GAAE5B,KAAKkE,KAAM,GAAElE,KAAKkE,KAAuB,oBAAXF,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAyB,oBAAXF,OAAyBA,OAAS,CAAC,EAElJ,EAAE,CAAC,GAAG,IAAI,CAAC,SAASM,EAAQT,EAAOD,G6J7vxBnCC,EAAAD,QACA,SAAA+4D,EAAAz3D,EAAAJ,GACA,GAAAI,GAAAJ,EAAA,OAAA63D,EAAAz3D,EAAAy3D,CAAA73D,GAEA,GAAA,mBAAAI,EACA,MAAA,IAAAtF,UAAA,yBAMA,OAJAoB,OAAA2F,KAAAzB,GAAA6f,SAAA,SAAAne,GACAwwF,EAAAxwF,GAAA1B,EAAA0B,EACA,IAEAwwF,EAEA,SAAAA,IAEA,IADA,IAAAnxF,EAAA,IAAA5F,MAAAwB,UAAAlB,QACA4B,EAAA,EAAAA,EAAA0D,EAAAtF,OAAA4B,IACA0D,EAAA1D,GAAAV,UAAAU,GAEA,IAAAoU,EAAAzR,EAAApD,MAAAqC,KAAA8B,GACAnB,EAAAmB,EAAAA,EAAAtF,OAAA,GAMA,MALA,mBAAAgW,GAAAA,IAAA7R,GACA9D,OAAA2F,KAAA7B,GAAAigB,SAAA,SAAAne,GACA+P,EAAA/P,GAAA9B,EAAA8B,EACA,IAEA+P,CACA,CACA,C7JqwxBA,EAAE,CAAC,GAAG,IAAI,CAAC,SAASrS,EAAQT,EAAOD,G8JryxBnCC,EAAAD,QAIA,WAGA,IAFA,IAAAuS,EAAA,CAAA,EAEA5T,EAAA,EAAAA,EAAAV,UAAAlB,OAAA4B,IAAA,CACA,IAAA8xE,EAAAxyE,UAAAU,GAEA,IAAA,IAAAH,KAAAiyE,EACAryE,EAAA/B,KAAAo0E,EAAAjyE,KACA+T,EAAA/T,GAAAiyE,EAAAjyE,GAGA,CAEA,OAAA+T,CACA,EAhBA,IAAAnU,EAAAhB,OAAAsB,UAAAN,c9JwzxBA,EAAE,CAAC,GAAG,IAAI,CAAC,SAASsC,EAAQT,EAAOD,G+JjzxBnCC,EAAAD,QAAA,SAAAyzF,EAAAC,GAEA,IAAAC,OAAA,IAAAD,EAAA,EAAAA,EAGAD,GAAAA,EAAAr1F,eAAA,0BAAAq1F,EAAAG,sBAAAx1F,eAAA,sBAEAgC,OAAAyzF,MAAA,IAAArzF,KAAAizF,EAAAG,sBAAAE,oBAIA1zF,OAAAyzF,MAAA,IAAArzF,KAGAJ,OAAAyzF,MAAAl8D,aAAAg8D,EAEA,IAAAI,EAAA,qBACAC,EAAA,CAAA,EAEAP,EAAAr1F,eAAA,2BAEA41F,EAAAP,EAAAG,sBAEAH,EAAAG,sBAAAx1F,eAAA,UAEA41F,EAAAP,EAAAG,sBACAG,EAAAN,EAAAG,sBAAAh8E,OAGAi8E,MAAA7mE,IAAAuD,KAAA,iCAAA3sB,OAAAmwF,EAAA,4BAEAF,MAAAI,eAAAF,EAAAC,EAAAP,GAEAI,MAAAz3B,gBAAA6C,iBACA,SAAAnlD,GAEAA,GAEAxI,QAAA0b,IAAA,4CAAAlT,GAEA+5E,MAAA7mE,IAAAuD,KAAA,gDACA,GACA,C/J6zxBA,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS7vB,EAAQT,EAAOD,GgK12xBnCC,EAAAD,QAAA,SAAAs6B,GAEA45D,SAMA,WAAAA,SAAAta,WAAAt/C,IAEA45D,SAAA/qE,iBAAA+qE,SAAA/qE,iBAAA,mBAAAmR,GAEA45D,SAAAC,YAAA,sBAAA,WAAA,YAAAD,SAAAta,YAAAt/C,GAAA,IARAhpB,QAAA0b,IAAA,yDASA,ChKm3xBA,EAAE,CAAC,GAAG,IAAI,CAAC,SAAStsB,EAAQT,EAAOD,GiKt4xBnC,IAAAo3B,EAAA12B,EAAA,SAAAu4B,oBAEAm7D,EAGA,YAIAC,EAAA,SAAAC,GAEA,SAAAD,EAAAv9E,EAAAgb,EAAA9a,GACA,IAAAu9E,EASA,OATAj2F,iBAAAiC,KAAA8zF,QAIA,KAHAE,EAAAt1F,WAAAsB,KAAA8zF,EAAA,CAAAv9E,EAAAgb,EAAA9a,KAGA8D,QAAA05E,oBAEAD,EAAAz5E,QAAA05E,kBAAAJ,GAGAG,EAAAE,aAAA,CAAA,EAAAF,CACA,CAGA,OAAA30F,UAAAy0F,EAAAC,GAAA71F,cAAA41F,EAAA,CAAA,CAAA71F,IAAA,SAAAlB,MACA,SAAAma,EAAA+tD,EAAAkvB,EAAAC,GAEA,IAAAC,OAAA,IAAAF,EAAAA,EAAA,IACAG,EAAA,iBAAAF,EAAAA,EAAA,UACAp0F,KAAAk0F,aAAAh9E,GAAA,CAAAG,KAAAH,EAAAq9E,QAAAtvB,EAAAuvB,SAAAF,EAAAG,SAAAJ,EACA,GAAA,CAAAp2F,IAAA,YAAAlB,MAEA,SAAAma,UAEAlX,KAAAk0F,aAAAh9E,EACA,GAAA,CAAAjZ,IAAA,cAAAlB,MAEA,WACA,IAAA23F,EAAA10F,KACA20F,EAAA,GACAC,EAAA/3F,OAAA2F,KAAAxC,KAAAk0F,cAEAU,EAAAtqD,MAAA,SAAA5uC,EAAAyL,GAAA,OAAAutF,EAAAR,aAAAx4F,GAAA+4F,SAAAC,EAAAR,aAAA/sF,GAAAstF,QAAA,IACA,IAAA,IAAAr2F,EAAA,EAAAA,EAAAw2F,EAAAp4F,OAAA4B,IACA,CACA,IAAAy2F,EAAA70F,KAAAk0F,aAAAU,EAAAx2F,IACA02F,EAAAD,EAAAx9E,KACAw9E,EAAAx9E,MAAAw9E,EAAAL,WAEAM,EAAA,GAAAzxF,OAAAyxF,EAAA,UAAAzxF,OAAAwxF,EAAAL,WAEAG,GAAA,MAAAtxF,OAAAyxF,EAAA,SAAAzxF,OAAAwxF,EAAAN,QAAA,KACA,CACA,OAAAI,CACA,GAEA,CAAA12F,IAAA,YAAAlB,MACA,WAEAiD,KAAA+xB,SAAAuyC,kBAAAI,cAAA1kE,KAAAua,QAAA05E,kBAAAj0F,KAAA+0F,cACA,IAAA,CApDA,CAAAl+D,GAuDAn3B,EAAAD,QAAAq0F,CjKy4xBA,EAAE,CAACpiE,MAAQ,KAAK,IAAI,CAAC,SAASvxB,EAAQT,EAAOD,GkKz8xB7C,IAKAu1F,EAAA,SAAAC,GAOA,SAAAD,EAAAz+E,EAAAgb,EAAA9a,GACA,IAAAy+E,EAgFA,OAhFAn3F,iBAAAiC,KAAAg1F,IACAE,EAAAx2F,WAAAsB,KAAAg1F,EAAA,CAAAz+E,EAAAgb,EAAA9a,KAEAE,YAAA,wBAGAu+E,EAAAC,WAAA,EACAD,EAAAE,aAAA,EACA,WAAA,oBAAAv1F,OAAA,YAAAvB,QAAAuB,WAEAq1F,EAAAC,WAAA,OAEA,IAAAt1F,OAAA8zF,UAAA,mBAAA9zF,OAAA8zF,SAAA0B,mBAEAH,EAAAE,aAAA,IAKAF,EAAAI,WAAA,EACAJ,EAAAK,QAAA,EACAL,EAAAC,gBAAA,IAAAt1F,OAAA01F,SAEAL,EAAAI,WAAA,GAUAJ,EAAAM,sBAAA,EAQAN,EAAAO,uBAAA,EAQAP,EAAAQ,sBAAA,EASAR,EAAAS,oBAAA,EAQAT,EAAAU,0BAAA,EAGAV,EAAAW,6BAAA,EAEAX,EAAAY,4BAAA,EAEAZ,EAAAa,+BAAA,EAGAb,EAAAc,yBAAA,EAEAd,EAAAe,wBAAA,EAEAf,EAAAgB,2BAAA,EAAAhB,CACA,CAEA,OAAA71F,UAAA21F,EAAAC,GAAA/2F,cAAA82F,EAAA,CAAA,CAAA/2F,IAAA,aAAAlB,MAMA,SAAAisD,GAEA,GAAAhpD,KAAA41F,yBAEA,OAAA51F,KAAA41F,yBAAA5sC,GAEA,GAAAhpD,KAAAs1F,UACA,CACA,IAAAa,EAAAt2F,OAAA01F,OAAAvsC,GACA,GAAA,GAAAmtC,EAAA35F,OAEA,MAAA,GAMA,IADA,IAAA45F,EAAA,GACAh4F,EAAA,EAAAA,EAAA+3F,EAAA35F,OAAA4B,IAEAg4F,EAAAn0F,KAAAk0F,EAAA/3F,IAEA,OAAAg4F,CAEA,CACA,OAAAp2F,KAAAm1F,WAAAn1F,KAAAo1F,YAEAv1F,OAAA8zF,SAAA0B,iBAAArsC,IAKAhpD,KAAAysB,IAAAqD,MAAA,iCAAAzsB,OAAA2lD,EAAA,0EACA,GAEA,GAAA,CAAA/qD,IAAA,gBAAAlB,MAEA,SAAAisD,EAAAic,GAEA,GAAAjlE,KAAAw1F,qBAEA,OAAAx1F,KAAAw1F,qBAAAxsC,EAAAic,GAEA,GAAAjlE,KAAAs1F,UAKA,IAFA,IAAAe,EAAAx2F,OAAA01F,OAAAvsC,GAEA5qD,EAAA,EAAAA,EAAAi4F,EAAA75F,OAAA4B,IAEA,OAAAi4F,EAAAj4F,GAAAk4F,SAEA,IAAA,QACA,IAAA,SACA,IAAA,WACAD,EAAAj4F,GAAArB,MAAAkoE,EACA,MACA,IAAA,SACAoxB,EAAAj4F,GAAAyuF,KAAA5nB,EACA,MACA,QACAoxB,EAAAj4F,GAAAm4F,UAAAtxB,OAIA,GAAAjlE,KAAAm1F,WAAAn1F,KAAAo1F,YAKA,IAFA,IAAAiB,EAAAx2F,OAAA8zF,SAAA0B,iBAAArsC,GAEA5qD,EAAA,EAAAA,EAAAi4F,EAAA75F,OAAA4B,IAEA,OAAAi4F,EAAAj4F,GAAAk4F,SAEA,IAAA,QACA,IAAA,SACA,IAAA,WACAD,EAAAj4F,GAAArB,MAAAkoE,EACA,MACA,IAAA,SACAoxB,EAAAj4F,GAAAyuF,KAAA5nB,EACA,MACA,QACAoxB,EAAAj4F,GAAAm4F,UAAAtxB,OAOAjlE,KAAAysB,IAAAqD,MAAA,2BAAAzsB,OAAA2lD,EAAA,MAAAic,EAEA,GAEA,CAAAhnE,IAAA,gBAAAlB,MAMA,SAAAisD,EAAAic,GAEA,GAAAjlE,KAAA01F,qBAEA,OAAA11F,KAAA01F,qBAAA1sC,EAAAic,GAEA,GAAAjlE,KAAAs1F,UAEAz1F,OAAA01F,OAAAvsC,GACA9vC,OAAA+rD,QAEA,GAAAjlE,KAAAm1F,WAAAn1F,KAAAo1F,YAGA,IADA,IAAAiB,EAAAx2F,OAAA8zF,SAAA0B,iBAAArsC,GACA5qD,EAAA,EAAAA,EAAAi4F,EAAA75F,OAAA4B,IAEAi4F,EAAAj4F,GAAAo4F,mBAAA,YAAAvxB,QAMAjlE,KAAAysB,IAAAqD,MAAA,2BAAAzsB,OAAA2lD,EAAA,MAAAic,EAEA,GAEA,CAAAhnE,IAAA,iBAAAlB,MAMA,SAAAisD,EAAAic,GAEA,GAAAjlE,KAAA01F,qBAEA,OAAA11F,KAAAy1F,sBAAAzsC,EAAAic,GAEA,GAAAjlE,KAAAs1F,UAEAz1F,OAAA01F,OAAAvsC,GACAzhC,QAAA09C,QAEA,GAAAjlE,KAAAm1F,WAAAn1F,KAAAo1F,YAGA,IADA,IAAAiB,EAAAx2F,OAAA8zF,SAAA0B,iBAAArsC,GACA5qD,EAAA,EAAAA,EAAAi4F,EAAA75F,OAAA4B,IAEAi4F,EAAAj4F,GAAAo4F,mBAAA,aAAAvxB,QAMAjlE,KAAAysB,IAAAqD,MAAA,4BAAAzsB,OAAA2lD,EAAA,MAAAic,EAEA,GAEA,CAAAhnE,IAAA,cAAAlB,MAOA,SAAAisD,GAEA,GAAAhpD,KAAA21F,mBAEA,OAAA31F,KAAA21F,mBAAA3sC,GAEA,GAAAhpD,KAAAs1F,UACA,CACA,IAAAmB,EAAA52F,OAAA01F,OAAAvsC,GACA,OAAAytC,EAAApmB,KAAA,YAEA,IAAA,QACA,IAAA,SACA,IAAA,WACA,OAAAomB,EAAA1oF,MACA,IAAA,SACA,OAAA0oF,EAAA5J,OACA,QACA,OAAA4J,EAAAC,OAEA,KACA,KAAA12F,KAAAm1F,YAAAn1F,KAAAo1F,YA0BA,OADAp1F,KAAAysB,IAAAqD,MAAA,2BAAAzsB,OAAA2lD,EAAA,SACA,GAxBA,IAAAqtC,EAAAx2F,OAAA8zF,SAAA0B,iBAAArsC,GACA,GAAAqtC,EAAA75F,OAAA,EAEA,OAAA,KAEA,GAAA,GAAA65F,EAAA75F,OAEA,OAAA65F,EAAA,GAAAC,SAEA,IAAA,QACA,IAAA,SACA,IAAA,WACA,OAAAD,EAAA,GAAAt5F,MACA,IAAA,SACA,OAAAs5F,EAAA,GAAAxJ,KACA,QACA,OAAAwJ,EAAA,GAAAE,UASA,CACA,GAEA,CAAAt4F,IAAA,WAAAlB,MAMA,SAAAisD,EAAA2tC,GAEA,GAAA32F,KAAAi2F,uBAEA,OAAAj2F,KAAAi2F,uBAAAjtC,EAAA2tC,GAEA,GAAA32F,KAAAs1F,UAGAz1F,OAAA01F,OAAAvsC,GACA4tC,SAAAD,QAEA,GAAA32F,KAAAm1F,WAAAn1F,KAAAo1F,YAIA,IAFA,IAAAiB,EAAAx2F,OAAA8zF,SAAA0B,iBAAArsC,GAEA5qD,EAAA,EAAAA,EAAAi4F,EAAA75F,OAAA4B,IAEAi4F,EAAAj4F,GAAAy4F,UAAA5tF,IAAA0tF,QAKA32F,KAAAysB,IAAAqD,MAAA,6BAAAzsB,OAAA2lD,EAAA,MAAA2tC,EAEA,GAEA,CAAA14F,IAAA,cAAAlB,MAMA,SAAAisD,EAAA2tC,GAEA,GAAA32F,KAAAk2F,0BAEA,OAAAl2F,KAAAk2F,0BAAAltC,EAAA2tC,GAEA,GAAA32F,KAAAs1F,UAGAz1F,OAAA01F,OAAAvsC,GACA8tC,YAAAH,QAEA,GAAA32F,KAAAm1F,WAAAn1F,KAAAo1F,YAIA,IAFA,IAAAiB,EAAAx2F,OAAA8zF,SAAA0B,iBAAArsC,GAEA5qD,EAAA,EAAAA,EAAAi4F,EAAA75F,OAAA4B,IAEAi4F,EAAAj4F,GAAAy4F,UAAAp/E,OAAAk/E,QAKA32F,KAAAysB,IAAAqD,MAAA,kCAAAzsB,OAAA2lD,EAAA,MAAA2tC,EAEA,GAEA,CAAA14F,IAAA,gBAAAlB,MAMA,SAAAisD,EAAA+tC,GAEA,GAAA/2F,KAAA61F,4BAEA,OAAA71F,KAAA61F,4BAAA7sC,EAAA+tC,GAEA,GAAA/2F,KAAAs1F,UAGA,OADAz1F,OAAA01F,OAAAvsC,GACAguC,KAAAD,GAEA,GAAA/2F,KAAAm1F,WAAAn1F,KAAAo1F,YACA,CAGA,IAFA,IAAAiB,EAAAx2F,OAAA8zF,SAAA0B,iBAAArsC,GAEA5qD,EAAA,EAAAA,EAAAi4F,EAAA75F,OAAA4B,IAEAi4F,EAAAj4F,GAAAk4D,aAAAygC,GAEA,OAAAV,CACA,CAGAr2F,KAAAysB,IAAAqD,MAAA,oCAAAzsB,OAAA2lD,EAAA,MAAA+tC,EAEA,GAEA,CAAA94F,IAAA,eAAAlB,MAOA,SAAAisD,EAAA+tC,EAAAv4D,GAEA,GAAAx+B,KAAA81F,2BAEA,OAAA91F,KAAA81F,2BAAA9sC,EAAA+tC,EAAAv4D,GAEA,GAAAx+B,KAAAs1F,UAEAz1F,OAAA01F,OAAAvsC,GACAguC,KAAAD,EAAAv4D,QAEA,GAAAx+B,KAAAm1F,WAAAn1F,KAAAo1F,YAIA,IAFA,IAAAiB,EAAAx2F,OAAA8zF,SAAA0B,iBAAArsC,GAEA5qD,EAAA,EAAAA,EAAAi4F,EAAA75F,OAAA4B,IAEAi4F,EAAAj4F,GAAA64F,aAAAF,EAAAv4D,QAKAx+B,KAAAysB,IAAAqD,MAAA,kCAAAzsB,OAAA2lD,EAAA,iBAAA3lD,OAAA0zF,EAAA,MAAAv4D,EAEA,GAEA,CAAAvgC,IAAA,kBAAAlB,MAMA,SAAAisD,EAAA+tC,GAEA,GAAA/2F,KAAA+1F,8BAEA,OAAA/1F,KAAA+1F,8BAAA/sC,EAAA+tC,GAEA,GAAA/2F,KAAAs1F,UAEAz1F,OAAA01F,OAAAvsC,GACAkuC,WAAAH,QAEA,GAAA/2F,KAAAm1F,WAAAn1F,KAAAo1F,YAIA,IAFA,IAAAiB,EAAAx2F,OAAA8zF,SAAA0B,iBAAArsC,GAEA5qD,EAAA,EAAAA,EAAAi4F,EAAA75F,OAAA4B,IAEAi4F,EAAAj4F,GAAA+4F,gBAAAJ,QAKA/2F,KAAAysB,IAAAqD,MAAA,qCAAAzsB,OAAA2lD,EAAA,iBAAA3lD,OAAA0zF,EAAA,KAEA,GAEA,CAAA94F,IAAA,WAAAlB,MAQA,SAAAisD,EAAA2tC,GAEA,GAAA32F,KAAAg2F,wBAEA,OAAAh2F,KAAAg2F,wBAAAhtC,EAAA2tC,GAEA,GAAA32F,KAAAs1F,UAGA,OADAz1F,OAAA01F,OAAAvsC,GACAouC,SAAAT,GAEA,GAAA32F,KAAAm1F,WAAAn1F,KAAAo1F,YACA,CAGA,IAFA,IAAAiB,EAAAx2F,OAAA8zF,SAAA0B,iBAAArsC,GAEA5qD,EAAA,EAAAA,EAAAi4F,EAAA75F,OAAA4B,IAEA,GAAAi4F,EAAAj4F,GAAAy4F,UAAAQ,SAAAV,GAEA,OAAA,EAGA,OAAA,CACA,CAGA32F,KAAAysB,IAAAqD,MAAA,8BAAAzsB,OAAA2lD,EAAA,aAAA3lD,OAAAszF,EAAA,MAEA,IAAA,CAhgBA,CALAx2F,EAAA,SAAAu4B,qBAwgBAh5B,EAAAD,QAAAu1F,ClK48xBA,EAAE,CAACtjE,MAAQ,KAAK,IAAI,CAAC,SAASvxB,EAAQT,EAAOD,GmKp9yB7C,IAEA63F,EAAA,SAAAC,GAEA,SAAAD,EAAA/gF,EAAAgb,EAAA9a,GACA,IAAA+gF,EAGA,OAHAz5F,iBAAAiC,KAAAs3F,IACAE,EAAA94F,WAAAsB,KAAAs3F,EAAA,CAAA/gF,EAAAgb,EAAA9a,KAEAE,YAAA,mBAAA6gF,CACA,CAAA,OAAAn4F,UAAAi4F,EAAAC,GAAAr5F,cAAAo5F,EAAA,CAAA,CAAAr5F,IAAA,mBAAAlB,MAEA,SAAAisD,EAAA/xC,GAEA,IAAA6lC,OAAA,IAAA7lC,EAAA,CAAA,EAAAA,EAEA,OAAAjX,KAAA0xB,MAAA+lE,SAAAhyD,eAAA,CAAAw2B,QAAAj8D,KAAAi8D,QAAAy7B,OAAA13F,KAAA03F,OAAAC,OAAA76C,GAAAkM,EACA,IAAA,CAdA,CAFA7oD,EAAA,SAAAu4B,qBAmBAh5B,EAAAD,QAAA63F,CnKu9yBA,EAAE,CAAC5lE,MAAQ,KAAK,IAAI,CAAC,SAASvxB,EAAQT,EAAOD,GoK1+yB7C,IAEAm4F,EAAA,SAAAC,GAEA,SAAAD,EAAArhF,EAAAgb,EAAA9a,GACA,IAAAqhF,EA2BA,OA3BA/5F,iBAAAiC,KAAA43F,IACAE,EAAAp5F,WAAAsB,KAAA43F,EAAA,CAAArhF,EAAAgb,EAAA9a,KAEAE,YAAA,qBAEAmhF,EAAApmE,MAAAoC,SAAAikE,qBAEAD,EAAAv9E,QAAAy9E,UAAAF,EAAApmE,MAAAoC,SAAAikE,qBAEAD,EAAAv9E,QAAAy9E,YAEAF,EAAAv9E,QAAAy9E,UAAA,SAGAF,EAAApmE,MAAAoC,SAAAmkE,6BAEAH,EAAAv9E,QAAA29E,kBAAAJ,EAAApmE,MAAAoC,SAAAmkE,6BAEAH,EAAAv9E,QAAA29E,oBAEAJ,EAAAv9E,QAAA29E,kBAAA,KAGAJ,EAAAK,WAAAL,EAAApmE,MAAAiG,8CAAA,cAEAmgE,EAAAM,MAAA,CAAA,EAEAN,EAAAj8C,sBAAA,SAAAtqB,GAAA,OAAAA,CAAA,EAAAumE,CACA,CAAA,OAAAz4F,UAAAu4F,EAAAC,GAAA35F,cAAA05F,EAAA,CAAA,CAAA35F,IAAA,kBAAAlB,MAEA,SAAAs7F,GAGAr4F,KAAAo4F,MAAAv6F,eAAAw6F,KAEAr4F,KAAAo4F,MAAAC,GAAAr4F,KAAA0xB,MAAAiG,8CAAA,eAGA33B,KAAAo4F,MAAAC,GAAArhF,OAAA,IACAhX,KAAAo4F,MAAAC,GAAAthF,UAAA,IAEA/W,KAAA0xB,MAAAgmE,OAAAW,GAAAr4F,KAAAo4F,MAAAC,GAAAC,UAEA,GAAA,CAAAr6F,IAAA,YAAAlB,MAEA,SAAAs7F,EAAAE,EAAAx+D,GAEA/5B,KAAAw4F,gBAAAH,GAEAr4F,KAAAo4F,MAAAC,GAAAI,MACA,WACA,IAAAC,EAAA14F,KACA24F,EAAA34F,KAAAo4F,MAAAC,GAAA/pF,KAAAiqF,GAEA,GAAAI,EAEA,OAAA5+D,EAAA,KAAA4+D,GAGA,IAAAvrD,EACA,CACA+O,IAAA,GAAA94C,OAAArD,KAAAua,QAAAy9E,WAAA30F,OAAAg1F,EAAA,KAAAh1F,OAAAk1F,IAIA,OAFAnrD,EAAAptC,KAAA67C,sBAAAzO,GAEAptC,KAAAm4F,WAAAS,QAAAxrD,GACA,SAAA7zB,EAAAmjC,EAAAm8C,GAMA,OAJAA,GAEAH,EAAAN,MAAAC,GAAA3gF,IAAAmhF,EAAAN,GAEAx+D,EAAAxgB,EAAAs/E,EACA,GACA,EAAAv7F,KAAA0C,MACA,GAAA,CAAA/B,IAAA,mBAAAlB,MAEA,SAAAs7F,EAAAS,EAAAC,EAAAC,EAAAj/D,GAEA,IAAAk/D,EAAA,GAAA51F,OAAArD,KAAAua,QAAAy9E,WAAA30F,OAAAg1F,EAAA,iBAAAh1F,OAAAy1F,EAAA,KAAAz1F,OAAA01F,EAAA,KAAA11F,OAAA21F,GAEA,OAAAh5F,KAAAm4F,WAAAS,QAAAK,EACA,SAAAC,EAAAC,EAAAC,GAEA,OAAAr/D,EAAAm/D,EAAAE,EACA,EAAA97F,KAAA0C,MACA,GAAA,CAAA/B,IAAA,0BAAAlB,MAEA,SAAAs7F,EAAAS,EAAA/+D,GAEA,IAAAk/D,EAAA,GAAA51F,OAAArD,KAAAua,QAAAy9E,WAAA30F,OAAAg1F,EAAA,uBAAAh1F,OAAAy1F,GAEA,OAAA94F,KAAAm4F,WAAAS,QAAAK,EACA,SAAA1/E,EAAAmjC,EAAAm8C,GAEA,GAAAt/E,EAGA,OADAvZ,KAAAysB,IAAAzb,MAAA,kCAAA3N,OAAAg1F,EAAA,mBAAAh1F,OAAAy1F,EAAA,gBAAAz1F,OAAA41F,EAAA,OAAA51F,OAAAkW,IACAwgB,EAAAxgB,GAEA,IAAA8/E,EAAA,EAKA,OAJAR,EAAAS,QAEAD,EAAAR,EAAAS,OAEAv/D,EAAAxgB,EAAA8/E,EACA,EAAA/7F,KAAA0C,MACA,GAAA,CAAA/B,IAAA,eAAAlB,MAEA,SAAAs7F,EAAAS,EAAA/+D,GAKA/5B,KAAAw4F,gBAAAH,GAEAr4F,KAAAo4F,MAAAC,GAAAI,MACA,WACA,IAAAc,EAAAv5F,KACA,OAAAA,KAAAw5F,wBAAAnB,EAAAS,GACA,SAAAW,EAAAT,GAEA,GAAAS,EAEA,OAAA1/D,EAAA0/D,GAEA,IAAAJ,EAAAL,EAEA,GAAA99E,MAAA89E,GAGA,OADAO,EAAA9sE,IAAAzb,MAAA,6CAAA3N,OAAAg1F,EAAA,mBAAAh1F,OAAAy1F,EAAA,mFACA/+D,EAAA,IAAA15B,MAAA,0DAKA,IAFA,IAAAq5F,EAAA,GACAC,EAAAJ,EAAAh/E,QAAA29E,kBACA95F,EAAA,EAAAA,EAAAi7F,EAAAM,EAAAv7F,IAGAs7F,EAAAz3F,KAAA,GAAAoB,OAAAk2F,EAAAh/E,QAAAy9E,WAAA30F,OAAAg1F,EAAA,iBAAAh1F,OAAAy1F,EAAA,KAAAz1F,OAAAjF,EAAAu7F,EAAA,KAAAt2F,OAAAs2F,IAGA,IAAAC,EAAA,GAGAL,EAAA7nE,MAAAyN,QAAAsgB,UAAAi6C,EAAA,GACA,SAAAG,EAAAC,GAEAP,EAAApB,WAAAS,QAAAiB,GACA,SAAAX,EAAAC,EAAAC,GAIA,OAFAQ,EAAAA,EAAAv2F,OAAA+1F,GAEAU,EAAAZ,EACA,GACA,IACA,SAAAa,GAEA,OAAAhgE,EAAAggE,EAAAH,EACA,GACA,GACA,EAAAt8F,KAAA0C,MACA,IAAA,CArKA,CAFAG,EAAA,SAAAu4B,qBA0KAh5B,EAAAD,QAAAm4F,CpK6+yBA,EAAE,CAAClmE,MAAQ,KAAK,IAAI,CAAC,SAASvxB,EAAQT,EAAOD,GqKvpzB7C,IAEAu6F,EAAA,SAAAC,GAOA,SAAAD,EAAAzjF,EAAAgb,EAAA9a,GACA,IAAAyjF,EAgBA,OAhBAn8F,iBAAAiC,KAAAg6F,IACAE,EAAAx7F,WAAAsB,KAAAg6F,EAAA,CAAAzjF,EAAAgb,EAAA9a,KAEAE,YAAA,uBAEAujF,EAAA36C,UAAA,CAAA,EACA26C,EAAAC,gBAAA,CAAA,EAKAD,EAAAE,iBAAA,GAKAF,EAAAG,qBAAA,WAAA,OAAA,CAAA,EAAAH,CACA,CAEA,OAAA76F,UAAA26F,EAAAC,GAAA/7F,cAAA87F,EAAA,CAAA,CAAA/7F,IAAA,cAAAlB,MAOA,SAAA+iD,EAAAw6C,EAAAC,GAEAv6F,KAAAu/C,UAAAO,GAAAw6C,EAIAt6F,KAAAm6F,gBAAAr6C,GAFA,iBAAAy6C,EAEAA,EAIA,uBAAAl3F,OAAAy8C,EAAA,gDAAAz8C,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,IAEA,GAEA,CAAApZ,IAAA,qBAAAlB,MAQA,SAAAy9F,EAAAC,EAAAH,EAAAI,GAEA,IACAp5B,EAAA,CACA2M,OAAAusB,EACAG,QAAAF,EACAG,SAAAN,EACApqB,OALA,iBAAAwqB,EAAAA,EAAA,8BAAAr3F,OAAAm3F,EAAA,OAAAn3F,OAAAo3F,EAAA,mDAAAp3F,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,MAOA,iBAAAijF,GAEAt6F,KAAAysB,IAAAzb,MAAA,uEAEAhR,KAAAo6F,iBAAAn4F,KAAAq/D,EACA,GAEA,CAAArjE,IAAA,2BAAAlB,MAeA,SAAA+iD,GAEA,IAAA,IAAA1hD,EAAA,EAAAA,EAAA4B,KAAAo6F,iBAAA59F,OAAA4B,IAEA,GAAA0hD,EAAAj7C,QAAA7E,KAAAo6F,iBAAAh8F,GAAAu8F,UAAA76C,EAAAtjD,OAAAwD,KAAAo6F,iBAAAh8F,GAAAu8F,QAAAn+F,QACA,GAAAsjD,EAAAj7C,QAAA7E,KAAAo6F,iBAAAh8F,GAAA6vE,QAIA,OAFAjuE,KAAAu/C,UAAAO,GAAA9/C,KAAAo6F,iBAAAh8F,GAAAw8F,SACA56F,KAAAm6F,gBAAAr6C,GAAA,6CAAAz8C,OAAAy8C,EAAA,yCAAAz8C,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,YAAAhU,OAAArD,KAAAo6F,iBAAAh8F,GAAA6vE,OAAA,SAAA5qE,OAAArD,KAAAo6F,iBAAAh8F,GAAAu8F,QAAA,KACA36F,KAAAu/C,UAAAO,GAGA,OAAA,CACA,GAEA,CAAA7hD,IAAA,cAAAlB,MAMA,SAAA+iD,GAaA,OATA9/C,KAAAu/C,UAAA1hD,eAAAiiD,IAEA9/C,KAAA66F,aAAA/6C,GAGA9/C,KAAAu/C,UAAA1hD,eAAAiiD,IAEA9/C,KAAA86F,yBAAAh7C,KAEA9/C,KAAAu/C,UAAA1hD,eAAAiiD,IAEA9/C,KAAAu/C,UAAAO,EAMA,GAEA,CAAA7hD,IAAA,eAAAlB,MAKA,SAAA+iD,GAEA,IAAAC,EAAA//C,KAAAq6F,qBAAAv6C,GASA,OAPAC,IAEA//C,KAAAu/C,UAAAO,GAAAC,EAAA66C,SACA56F,KAAAm6F,gBAAAr6C,GAAA,2BAAAz8C,OAAAy8C,EAAA,yCAAAz8C,OAAArD,KAAA2xB,KAAA,QAAAtuB,OAAArD,KAAAqX,KAAA,YAAAhU,OAAA08C,EAAAmwB,OAAA,MAIAnwB,CACA,IAAA,CApJA,CAFA5/C,EAAA,SAAAu4B,qBAyJAh5B,EAAAD,QAAAu6F,CrK0pzBA,EAAE,CAACtoE,MAAQ,KAAK,IAAI,CAAC,SAASvxB,EAAQT,EAAOD,GsKhzzB7C,IAAAs7F,EAAA56F,EAAA,SACA65F,EAAA75F,EAAA,+BACA60F,EAAA70F,EAAA,gCACAm3F,EAAAn3F,EAAA,0BACA2zF,EAAA3zF,EAAA,iBACAy3F,EAAAz3F,EAAA,mCAKAF,EAAA,SAAA+6F,GAKA,SAAA/6F,EAAAwuB,GACA,IAAAwsE,EAwEA,OAxEAl9F,iBAAAiC,KAAAC,IACAg7F,EAAAv8F,WAAAsB,KAAAC,EAAA,CAAAwuB,KAEAysE,UAAA,IAAAt1E,SAAA,+DAOAq1E,EAAAz5B,iBAAA,KACAy5B,EAAAxjE,6BAAA,mBAAAuiE,GAMAiB,EAAAE,eAAA,KACAF,EAAAxjE,6BAAA,iBAAAmgE,GAMAqD,EAAAh3B,aAAA,KACAg3B,EAAAxjE,6BAAA,eAAA6/D,GAMA2D,EAAA32B,kBAAA,KACA22B,EAAAxjE,6BAAA,oBAAAu9D,GAOAiG,EAAAh4B,OAAA,KACAg4B,EAAAxjE,6BAAA,SAAAq8D,GAEAmH,EAAAjjE,2BAAA,gBACAijE,EAAAjjE,2BAAA,kBAEAijE,EAAAxD,SAAAwD,EAAAjjE,2BAAA,YAEAijE,EAAAh/B,QAAA,CAAA,EACAg/B,EAAAvD,OAAA,CAAA,EAGAuD,EAAA7jE,aAAA,EAEA6jE,EAAA/8B,gBAAA,EAEA+8B,EAAAG,+BAAA,GAGAH,EAAAnnE,SAAA6nC,WAEAs/B,EAAAI,gBAAAJ,EAAAnnE,SAAA6nC,WAGAs/B,EAAAK,kCAAA,EACAL,EAAAM,+BAEAN,EAAAvjE,eAAA,WAAAv3B,EAAA,cACA86F,EAAAvjE,eAAA,eAAAv3B,EAAA,kBACA86F,EAAAvjE,eAAA,kBAAAv3B,EAAA,qBAGA86F,EAAA79B,MAAA69B,EAAAjpE,YAAAyuC,SACAw6B,EAAAp+B,UAAAo+B,EAAAjpE,YAAAmvC,aAAA85B,CACA,CAEA,OAAA57F,UAAAY,EAAA+6F,GAAA98F,cAAA+B,EAAA,CAAA,CAAAhC,IAAA,kBAAAlB,MAKA,SAAAy+F,GAEA,GAAA,UAAAl9F,QAAAk9F,GAGA,OADAx7F,KAAAysB,IAAA1E,KAAA,SAAA1kB,OAAArD,KAAA2xB,KAAA,oEACA,EAEA,IAAA4qC,EAAA1/D,OAAA2F,KAAAg5F,GACA,GAAAj/B,EAAA//D,OAAA,EAEA,IAAA,IAAA4B,EAAA,EAAAA,EAAAm+D,EAAA//D,OAAA4B,IACA,CAEA,IAAAo+D,EAAAD,EAAAn+D,GACA4B,KAAAg4B,2BAAA,WAAAwjE,EAAAh/B,GAAAA,EACA,CAEA,GAEA,CAAAv+D,IAAA,UAAAlB,MASA,SAAA0+F,EAAAlqE,EAAAmqE,GAEA,IAAAtuD,EAAA,UAAA9uC,QAAAizB,GAAAA,EAAA,CAAA,EACAoqE,EAAA,iBAAAF,EAAAA,EAAAz7F,KAAA0xB,MAAAE,UAcA,OAZA5xB,KAAAk+D,iBAEAl+D,KAAAo3B,aAAA,EAEAp3B,KAAAysB,IAAAuD,KAAA,6BAAA3sB,OAAAs4F,EAAA,MAAA,CAAAC,QAAAxuD,IAIAptC,KAAAysB,IAAAuD,KAAA,6BAAA3sB,OAAAs4F,EAAA,YAIA,IAAAD,GAGAA,EAAA79F,eAAA,2BAEAuvC,EAAAptC,KAAA0xB,MAAAyN,QAAAte,OAAA,CAAA,EAAA6L,KAAAriB,MAAAqiB,KAAApmB,UAAAo1F,EAAArI,wBAAAjmD,IAEAptC,KAAA67F,wCAAA,WAAAzuD,EAAAuuD,EAAAD,IAIA17F,KAAAg4B,2BAAA,WAAAoV,EAAAuuD,EAEA,GAIA,CAAA19F,IAAA,cAAAlB,MACA,SAAA++F,EAAAvqE,EAAAwqE,GAEA,IAAA3uD,EAAA,UAAA9uC,QAAAizB,GAAAA,EAAA,CAAA,EACAyqE,EAAA,iBAAAF,EAAAA,EAAA97F,KAAA0xB,MAAAE,UAcA,OAZA5xB,KAAAk+D,iBAEAl+D,KAAAo3B,aAAA,EAEAp3B,KAAAysB,IAAAuD,KAAA,iCAAA3sB,OAAA24F,EAAA,MAAA,CAAAJ,QAAAxuD,IAIAptC,KAAAysB,IAAAuD,KAAA,iCAAA3sB,OAAA24F,EAAA,YAIA,IAAAD,GAGAA,EAAAl+F,eAAA,2BAEAuvC,EAAAptC,KAAA0xB,MAAAyN,QAAAte,OAAA,CAAA,EAAAk7E,EAAA1I,sBAAAjmD,IAEAptC,KAAA67F,wCAAA,eAAAzuD,EAAA4uD,EAAAD,IAIA/7F,KAAAg4B,2BAAA,eAAAoV,EAAA4uD,EAEA,GAEA,CAAA/9F,IAAA,iBAAAlB,MASA,SAAAk/F,EAAA1qE,EAAA2qE,GAEA,IAAA9uD,EAAA,UAAA9uC,QAAAizB,GAAAA,EAAA,CAAA,EACAiiE,EAAA,iBAAAyI,EAAAA,EAAAj8F,KAAA0xB,MAAAE,UAcA,OAZA5xB,KAAAk+D,iBAEAl+D,KAAAo3B,aAAA,EAEAp3B,KAAAysB,IAAAuD,KAAA,oCAAA3sB,OAAAmwF,EAAA,MAAA,CAAAoI,QAAAxuD,IAIAptC,KAAAysB,IAAAuD,KAAA,oCAAA3sB,OAAAmwF,EAAA,YAIA,IAAA0I,GAGAA,EAAAr+F,eAAA,2BAEAuvC,EAAAptC,KAAA0xB,MAAAyN,QAAAte,OAAA,CAAA,EAAAq7E,EAAA7I,sBAAAjmD,IAGAptC,KAAA67F,wCAAA,kBAAAzuD,EAAAomD,EAAA0I,IAIAl8F,KAAAg4B,2BAAA,kBAAAoV,EAAAomD,EAEA,GAEA,CAAAv1F,IAAA,+BAAAlB,MAKA,WACA,IAAAo/F,EAAAn8F,KAOA,IAAAA,KAAAs7F,iCACA,CAIA,IAAAc,EAAA,SAAAllF,EAAAD,EAAA8iB,EAAAsiE,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EACA2mD,EAAA,mBAAA7jC,EAAAA,EAAA,WAAA,MAAA,EAAA,EAEAoiE,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,mCAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,mCAAAzsB,OAAA2V,EAAA,MAGA,IAAAsjF,EAEAC,EADAC,GAAA,EAIAC,EAAAzjF,EAAAjD,MAAA,KAEA,GAAA0mF,EAAAjgG,OAAA,EAGA,OADA2/F,EAAA1vE,IAAA1E,KAAA,8DAAA1kB,OAAA2V,EAAA,MACA4kD,EAAAv9D,MAAA,8DAAAgD,OAAA2V,EAAA,MAAA,IAOA,GAJAsjF,EAAAG,EAAA,GAAA1qF,OACAyqF,EAAAC,EAAA,GAAA1qF,OACAwqF,EAAAE,EAAA,GAAA1qF,OAEAmJ,MAAAshF,GAeAA,EAAAL,EAAAO,wBAAAF,EAAA1/C,EAAAu/C,QAbA,IAEAG,EAAAztF,SAAAytF,EACA,CACA,MAAAG,GAEAR,EAAA1vE,IAAA1E,KAAA,mDACAy0E,EAAA,CACA,CASA,IAAAF,IAAAE,EAGA,OADAL,EAAA1vE,IAAA1E,KAAA,8DAAA1kB,OAAA2V,EAAA,eAAA3V,OAAAi5F,EAAA,SAAAj5F,OAAAm5F,IACA5+B,EAAAv9D,MAAA,8DAAAgD,OAAA2V,EAAA,eAAA3V,OAAAi5F,EAAA,SAAAj5F,OAAAm5F,IAAA,IAGAL,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,gCAAAzsB,OAAAi5F,EAAA,eAAAj5F,OAAAm5F,EAAA,mBAAAn5F,OAAAk5F,EAAA,YAAAl5F,OAAA2V,EAAA,MAIAmjF,EAAAhB,eAAAyB,UAAAN,EAAAE,EACA,SAAAjjF,EAAAgxC,GAEA,OAAAhxC,GAEAvZ,KAAAysB,IAAAzb,MAAA,8CAAA3N,OAAAi5F,EAAA,eAAAj5F,OAAAm5F,EAAA,WAAAn5F,OAAA2V,EAAA,OAAA3V,OAAAkW,GAAAA,GACAqkD,EAAArkD,EAAA,KAIAgjF,EAEAv8F,KAAAqkE,oBAAAk4B,EAAAhyC,EAAAqT,EAAAy+B,GAIAz+B,EAAA,KAAA,GAEA,EAAAtgE,KAAA6+F,GACA,EACAn8F,KAAA68F,aAAAnrD,gBAAA,OAAA,KAAA0qD,GACAp8F,KAAA68F,aAAAnrD,gBAAA,YAAA,KAAA0qD,GAGA,IAAAU,EAAA,SAAA5lF,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAEAklF,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,qCAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,qCAAAzsB,OAAA2V,EAAA,MAGA,IAAA+jF,GAAA,EACAC,GAAA,EAGAC,EAAAjkF,EAAAnU,QAAA,KAYA,OAXAk4F,EAAA/jF,EAAA5O,UAAA,EAAA6yF,GACAA,GAAA,EAEAD,EAAAhkF,EAAA5O,UAAA6yF,EAAA,GAIAF,EAAA/jF,EAIA+jF,EAMAC,EAOAb,EAAA93B,oBAAA04B,EAAAZ,EAAAO,wBAAAM,EAAAlgD,EAAAu/C,GAAA,KAAAA,GAJAF,EAAA93B,oBAAA04B,EAAA9lF,EAAA,KAAAolF,IAPAF,EAAA1vE,IAAA1E,KAAA,yDAAA1kB,OAAA2V,EAAA,MACA,yDAAA3V,OAAA2V,EAAA,KAYA,EACAkkF,EAAA,SAAAhmF,EAAAD,EAAA8iB,EAAAsiE,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EACA2mD,EAAA,mBAAA7jC,EAAAA,EAAA,WAAA,MAAA,EAAA,EAEAoiE,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,0CAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,0CAAAzsB,OAAA2V,EAAA,MAGA,IAAA+jF,GAAA,EACAC,GAAA,EAGAC,EAAAjkF,EAAAnU,QAAA,KAYA,OAXAk4F,EAAA/jF,EAAA5O,UAAA,EAAA6yF,GACAA,GAAA,EAEAD,EAAAhkF,EAAA5O,UAAA6yF,EAAA,GAIAF,EAAA/jF,EAIA+jF,EAMAC,EAgBAb,EAAA93B,oBAAA04B,EAAAZ,EAAAO,wBAAAM,EAAAlgD,EAAAu/C,IACA,SAAA9iF,EAAAilB,GAEA,OAAAjlB,EAEAqkD,EAAArkD,EAAA,IAEAqkD,EAAA,KAAAp/B,EACA,GAAA69D,GApBAF,EAAA93B,oBAAA04B,EAAA9lF,GACA,SAAAsC,EAAAilB,GAEA,OAAAjlB,EAEAqkD,EAAArkD,EAAA,IAEAqkD,EAAA,KAAAp/B,EACA,GAAA69D,IAhBAF,EAAA1vE,IAAA1E,KAAA,+DAAA1kB,OAAA2V,EAAA,MACA,+DAAA3V,OAAA2V,EAAA,KA6BA,EACAhZ,KAAA68F,aAAAlrD,eAAA,OAAA,KAAAmrD,EAAAI,GACAl9F,KAAA68F,aAAAlrD,eAAA,cAAA,KAAAmrD,EAAAI,GAGA,IAAAC,EAAA,SAAAjmF,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAEAklF,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,wCAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,wCAAAzsB,OAAA2V,EAAA,MAGA,IAAA+jF,GAAA,EACAC,GAAA,EAGAC,EAAAjkF,EAAAnU,QAAA,KAYA,OAXAk4F,EAAA/jF,EAAA5O,UAAA,EAAA6yF,GACAA,GAAA,EAEAD,EAAAhkF,EAAA5O,UAAA6yF,EAAA,GAIAF,EAAA/jF,EAIA+jF,EAMAC,EAOAb,EAAAiB,uBAAAL,EAAAZ,EAAAO,wBAAAM,EAAAlgD,EAAAu/C,GAAAA,GAJAF,EAAAiB,uBAAAL,EAAA9lF,EAAAolF,IAPAF,EAAA1vE,IAAA1E,KAAA,yDAAA1kB,OAAA2V,EAAA,MACA,yDAAA3V,OAAA2V,EAAA,KAYA,EACAqkF,EAAA,SAAAnmF,EAAAD,EAAA8iB,EAAAsiE,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EACA2mD,EAAA,mBAAA7jC,EAAAA,EAAA,WAAA,MAAA,EAAA,EAEAoiE,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,6CAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,6CAAAzsB,OAAA2V,EAAA,MAGA,IAAAskF,EACAN,EAGAO,EAAAvkF,EAAAjD,MAAA,KAEA,OAAAwnF,EAAA/gG,OAAA,GAEA2/F,EAAA1vE,IAAAqD,MAAA,iDAAAzsB,OAAA2V,EAAA,qEAAA3V,OAAA6T,EAAA,MACA6iB,EAAA,KAAA,MAGAujE,EAAAC,EAAA,GACAP,EAAAO,EAAA,GAGAD,GAOAxgD,EAAAq/C,EAAAO,wBAAAM,EAAAlgD,EAAAu/C,IAkBAF,EAAAiB,uBAAAE,EAAAxgD,GACA,SAAAvjC,EAAAilB,GAEA,OAAAjlB,EAEAqkD,EAAArkD,EAAA,IAEAqkD,EAAA,KAAAp/B,EACA,GAAA69D,GApBAF,EAAAiB,uBAAAE,EAAArmF,GACA,SAAAsC,EAAAilB,GAEA,OAAAjlB,EAEAqkD,EAAArkD,EAAA,IAEAqkD,EAAA,KAAAp/B,EACA,GAAA69D,IAnBAF,EAAA1vE,IAAA1E,KAAA,6EAAA1kB,OAAA2V,EAAA,MACA+gB,EAAA,KAAA,KAgCA,EACA/5B,KAAA68F,aAAAlrD,eAAA,QAAA,KAAAwrD,EAAAE,GACAr9F,KAAA68F,aAAAlrD,eAAA,iBAAA,KAAAwrD,EAAAE,GAIA,IAAAG,EAAA,SAAAC,EAAAC,EAAAC,GAEA,OAAAD,GAEA,IAAA,OACA,OAAA,IAAAD,EACA,IAAA,QACA,OAAA,IAAAA,EACA,IAAA,OACA,IAAA,sBACA,OAAAn/F,QAAAm/F,IAEA,IAAA,SAEA,IAAA,SACA,OAAAA,EAAAjhG,OAAAmhG,EACA,QACA,OAAA,EAEA,IAAA,OACA,IAAA,mBACA,OAAAr/F,QAAAm/F,IAEA,IAAA,SAEA,IAAA,SACA,OAAAA,EAAAjhG,OAAAmhG,EACA,QACA,OAAA,EAEA,IAAA,KACA,OAAAF,GAAAE,EACA,IAAA,IACA,OAAAF,EAAAE,EACA,IAAA,IACA,OAAAF,EAAAE,EACA,IAAA,KACA,OAAAF,GAAAE,EACA,IAAA,KACA,OAAAF,GAAAE,EACA,IAAA,MACA,OAAAF,IAAAE,EACA,IAAA,KACA,OAAAF,GAAAE,EACA,QACA,OAAA,EAEA,EACAC,EAAA,SAAA1mF,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAEAklF,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,oDAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,oDAAAzsB,OAAA2V,EAAA,MAGA,IAAA+jF,EACAC,EACAa,GAAA,EAEAC,EAAA9kF,EAAAjD,MAAA,KAEA,GAAA+nF,EAAAthG,OAAA,EAGA,OADA2/F,EAAA1vE,IAAA1E,KAAA,2EAAA1kB,OAAA2V,EAAA,MACA,2EAAA3V,OAAA2V,EAAA,KAQA,GALA+jF,EAAAe,EAAA,GACAd,EAAAc,EAAA,GACAD,EAAAC,EAAA,IAGAf,EAGA,OADAZ,EAAA1vE,IAAA1E,KAAA,yDAAA1kB,OAAA2V,EAAA,MACA,yDAAA3V,OAAA2V,EAAA,KAGA,IAAA6kF,EAGA,OADA1B,EAAA1vE,IAAA1E,KAAA,iEAAA1kB,OAAA2V,EAAA,MACA,iEAAA3V,OAAA2V,EAAA,KAIA,IAAA+kF,EAAAF,EAAA9nF,MAAA,KACA,GAAAgoF,EAAAvhG,OAAA,EAGA,OADA2/F,EAAA1vE,IAAA1E,KAAA,wFAAA1kB,OAAA2V,EAAA,MACA,wFAAA3V,OAAA2V,EAAA,KAIA,IAGA,OADAwkF,EAAArB,EAAAO,wBAAAqB,EAAA,GAAAjhD,EAAAu/C,GAAA0B,EAAA,GAAAA,EAAA,IAOAf,EAOAb,EAAA93B,oBAAA04B,EAAAZ,EAAAO,wBAAAM,EAAAlgD,EAAAu/C,GAAA,KAAAA,GAJAF,EAAA93B,oBAAA04B,EAAA9lF,EAAA,KAAAolF,GAPA,EAcA,CACA,MAAA9iF,GAGA,OADA4iF,EAAA1vE,IAAAzb,MAAA,gEAAA3N,OAAA2V,EAAA,OAAA3V,OAAAkW,GAAAA,GACA,gEAAAlW,OAAA2V,EAAA,OAAA3V,OAAAkW,EACA,CACA,EACAykF,EAAA,SAAA9mF,EAAAD,EAAA8iB,EAAAsiE,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EACA2mD,EAAA,mBAAA7jC,EAAAA,EAAA,WAAA,MAAA,EAAA,EAEAoiE,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,oDAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,oDAAAzsB,OAAA2V,EAAA,MAGA,IAAA+jF,EACAC,EACAa,GAAA,EAEAC,EAAA9kF,EAAAjD,MAAA,KAEA,GAAA+nF,EAAAthG,OAAA,EAGA,OADA2/F,EAAA1vE,IAAA1E,KAAA,2EAAA1kB,OAAA2V,EAAA,MACA4kD,EAAA,IAAAv9D,MAAA,2EAAAgD,OAAA2V,EAAA,OAQA,GALA+jF,EAAAe,EAAA,GACAd,EAAAc,EAAA,GACAD,EAAAC,EAAA,IAGAf,EAGA,OADAZ,EAAA1vE,IAAA1E,KAAA,yDAAA1kB,OAAA2V,EAAA,MACA4kD,EAAA,IAAAv9D,MAAA,yDAAAgD,OAAA2V,EAAA,OAGA,IAAA6kF,EAGA,OADA1B,EAAA1vE,IAAA1E,KAAA,iEAAA1kB,OAAA2V,EAAA,MACA4kD,EAAA,IAAAv9D,MAAA,iEAAAgD,OAAA2V,EAAA,OAIA,IAAA+kF,EAAAF,EAAA9nF,MAAA,KACA,GAAAgoF,EAAAvhG,OAAA,EAGA,OADA2/F,EAAA1vE,IAAA1E,KAAA,wFAAA1kB,OAAA2V,EAAA,MACA4kD,EAAA,IAAAv9D,MAAA,wFAAAgD,OAAA2V,EAAA,OAIA,IAGA,OADAwkF,EAAArB,EAAAO,wBAAAqB,EAAA,GAAAjhD,EAAAu/C,GAAA0B,EAAA,GAAAA,EAAA,IAOAf,EAcAb,EAAA93B,oBAAA04B,EAAAZ,EAAAO,wBAAAM,EAAAlgD,EAAAu/C,IACA,SAAA9iF,EAAAilB,GAEA,OAAAjlB,EAEAqkD,EAAArkD,EAAA,IAEAqkD,EAAA,KAAAp/B,EACA,GAAA69D,GApBAF,EAAA93B,oBAAA04B,EAAA9lF,GACA,SAAAsC,EAAAilB,GAEA,OAAAjlB,EAEAqkD,EAAArkD,EAAA,IAEAqkD,EAAA,KAAAp/B,EACA,GAAA69D,GAdAz+B,EAAA,KAAA,GA6BA,CACA,MAAArkD,GAGA,OADA4iF,EAAA1vE,IAAAzb,MAAA,gEAAA3N,OAAA2V,EAAA,OAAA3V,OAAAkW,GAAAA,GACAqkD,EAAArkD,EAAA,GACA,CACA,EAGAvZ,KAAA68F,aAAAlrD,eAAA,wBAAA,KAAAisD,EAAAI,GACAh+F,KAAA68F,aAAAlrD,eAAA,YAAA,KAAAisD,EAAAI,GAEA,IAAAC,EAAA,SAAA/mF,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAEAklF,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,oDAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,oDAAAzsB,OAAA2V,EAAA,MAGA,IAAA+jF,EACAC,EACAa,GAAA,EAEAC,EAAA9kF,EAAAjD,MAAA,KAEA,GAAA+nF,EAAAthG,OAAA,EAGA,OADA2/F,EAAA1vE,IAAA1E,KAAA,2EAAA1kB,OAAA2V,EAAA,MACA,2EAAA3V,OAAA2V,EAAA,KAQA,GALA+jF,EAAAe,EAAA,GACAd,EAAAc,EAAA,GACAD,EAAAC,EAAA,IAGAf,EAGA,OADAZ,EAAA1vE,IAAA1E,KAAA,yDAAA1kB,OAAA2V,EAAA,MACA,yDAAA3V,OAAA2V,EAAA,KAGA,IAAA6kF,EAGA,OADA1B,EAAA1vE,IAAA1E,KAAA,iEAAA1kB,OAAA2V,EAAA,MACA,iEAAA3V,OAAA2V,EAAA,KAIA,IAAA+kF,EAAAF,EAAA9nF,MAAA,KACA,GAAAgoF,EAAAvhG,OAAA,EAGA,OADA2/F,EAAA1vE,IAAA1E,KAAA,wFAAA1kB,OAAA2V,EAAA,MACA,wFAAA3V,OAAA2V,EAAA,KAIA,IAOA,OALAwkF,EACArB,EAAAO,wBAAAqB,EAAA,GAAAjhD,EAAAu/C,GACA0B,EAAA,GACA5B,EAAAO,wBAAAqB,EAAA,GAAAjhD,EAAAu/C,IAQAW,EAOAb,EAAA93B,oBAAA04B,EAAAZ,EAAAO,wBAAAM,EAAAlgD,EAAAu/C,GAAA,KAAAA,GAJAF,EAAA93B,oBAAA04B,EAAA9lF,EAAA,KAAAolF,GAPA,EAcA,CACA,MAAA9iF,GAGA,OADA4iF,EAAA1vE,IAAAzb,MAAA,gEAAA3N,OAAA2V,EAAA,OAAA3V,OAAAkW,GAAAA,GACA,gEAAAlW,OAAA2V,EAAA,OAAA3V,OAAAkW,EACA,CACA,EACA2kF,EAAA,SAAAhnF,EAAAD,EAAA8iB,EAAAsiE,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EACA2mD,EAAA,mBAAA7jC,EAAAA,EAAA,WAAA,MAAA,EAAA,EAEAoiE,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,oDAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,oDAAAzsB,OAAA2V,EAAA,MAGA,IAAA+jF,EACAC,EACAa,GAAA,EAEAC,EAAA9kF,EAAAjD,MAAA,KAEA,GAAA+nF,EAAAthG,OAAA,EAGA,OADA2/F,EAAA1vE,IAAA1E,KAAA,2EAAA1kB,OAAA2V,EAAA,MACA4kD,EAAA,IAAAv9D,MAAA,2EAAAgD,OAAA2V,EAAA,OAQA,GALA+jF,EAAAe,EAAA,GACAd,EAAAc,EAAA,GACAD,EAAAC,EAAA,IAGAf,EAGA,OADAZ,EAAA1vE,IAAA1E,KAAA,yDAAA1kB,OAAA2V,EAAA,MACA4kD,EAAA,IAAAv9D,MAAA,yDAAAgD,OAAA2V,EAAA,OAGA,IAAA6kF,EAGA,OADA1B,EAAA1vE,IAAA1E,KAAA,iEAAA1kB,OAAA2V,EAAA,MACA4kD,EAAA,IAAAv9D,MAAA,iEAAAgD,OAAA2V,EAAA,OAIA,IAAA+kF,EAAAF,EAAA9nF,MAAA,KACA,GAAAgoF,EAAAvhG,OAAA,EAGA,OADA2/F,EAAA1vE,IAAA1E,KAAA,wFAAA1kB,OAAA2V,EAAA,MACA4kD,EAAA,IAAAv9D,MAAA,wFAAAgD,OAAA2V,EAAA,OAIA,IAQA,OALAwkF,EACArB,EAAAO,wBAAAqB,EAAA,GAAAjhD,EAAAu/C,GACA0B,EAAA,GACA5B,EAAAO,wBAAAqB,EAAA,GAAAjhD,EAAAu/C,IAQAW,EAcAb,EAAA93B,oBAAA04B,EAAAZ,EAAAO,wBAAAM,EAAAlgD,EAAAu/C,IACA,SAAA9iF,EAAAilB,GAEA,OAAAjlB,EAEAqkD,EAAArkD,EAAA,IAEAqkD,EAAA,KAAAp/B,EACA,GAAA69D,GApBAF,EAAA93B,oBAAA04B,EAAA9lF,GACA,SAAAsC,EAAAilB,GAEA,OAAAjlB,EAEAqkD,EAAArkD,EAAA,IAEAqkD,EAAA,KAAAp/B,EACA,GAAA69D,GAdAz+B,EAAA,KAAA,GA6BA,CACA,MAAArkD,GAGA,OADA4iF,EAAA1vE,IAAAzb,MAAA,gEAAA3N,OAAA2V,EAAA,OAAA3V,OAAAkW,GAAAA,GACAqkD,EAAArkD,EAAA,GACA,CACA,EAGAvZ,KAAA68F,aAAAlrD,eAAA,gBAAA,KAAAssD,EAAAC,GACAl+F,KAAA68F,aAAAlrD,eAAA,SAAA,KAAAssD,EAAAC,GAIA,IAAAC,EAAA,SAAAjnF,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAEAklF,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,6CAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,6CAAAzsB,OAAA2V,EAAA,MAGA,IAAA+jF,GAAA,EACAC,GAAA,EAGAC,EAAAjkF,EAAAnU,QAAA,KAYA,GAXAk4F,EAAA/jF,EAAA5O,UAAA,EAAA6yF,GACAA,GAAA,EAEAD,EAAAhkF,EAAA5O,UAAA6yF,EAAA,GAIAF,EAAA/jF,GAIA+jF,EAGA,OADAZ,EAAA1vE,IAAA1E,KAAA,yDAAA1kB,OAAA2V,EAAA,MACA,yDAAA3V,OAAA2V,EAAA,KAGA8jC,EAAAq/C,EAAAO,wBAAAM,EAAAlgD,EAAAu/C,GAEA,IAAA+B,EAAA,GACA,GAAAliG,MAAAK,QAAAugD,GAEA,IAAA,IAAA1+C,EAAA,EAAAA,EAAA0+C,EAAAtgD,OAAA4B,IAEAggG,EAAAn8F,KAAA,CAAA2jC,MAAAkX,EAAA1+C,UAGA,GAAA,WAAAE,QAAAw+C,GAGA,IADA,IAAAuhD,EAAAxhG,OAAA2F,KAAAs6C,GACA1+C,EAAA,EAAAA,EAAAigG,EAAA7hG,OAAA4B,IAEAggG,EAAAn8F,KAAA,CAAA2jC,MAAAkX,EAAAuhD,EAAAjgG,WAKAggG,EAAAn8F,KAAA,CAAA2jC,MAAAkX,IAIA,OAFAA,EAAAshD,GASAjC,EAAAiB,uBAAAL,EAAAjgD,EAAAu/C,GAJAF,EAAAiB,uBAAAL,EAAA9lF,EAAAolF,EAMA,EACAiC,EAAA,SAAApnF,EAAAD,EAAA8iB,EAAAsiE,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EACA2mD,EAAA,mBAAA7jC,EAAAA,EAAA,WAAA,MAAA,EAAA,EAEAoiE,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,kDAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,kDAAAzsB,OAAA2V,EAAA,MAGA,IAAAskF,EACAN,EAGAO,EAAAvkF,EAAAjD,MAAA,KAEA,GAAAwnF,EAAA/gG,OAAA,EAGA,OADA2/F,EAAA1vE,IAAAqD,MAAA,iDAAAzsB,OAAA2V,EAAA,qEAAA3V,OAAA6T,EAAA,MACA6iB,EAAA,KAAA,IAOA,GAJAujE,EAAAC,EAAA,GACAP,EAAAO,EAAA,IAGAD,EAGA,OADAnB,EAAA1vE,IAAA1E,KAAA,6EAAA1kB,OAAA2V,EAAA,MACA+gB,EAAA,KAAA,IAIA+iB,EAAAq/C,EAAAO,wBAAAM,EAAAlgD,EAAAu/C,GAEA,IAAA+B,EAAA,GACA,GAAAliG,MAAAK,QAAAugD,GAEA,IAAA,IAAA1+C,EAAA,EAAAA,EAAA0+C,EAAAtgD,OAAA4B,IAEAggG,EAAAn8F,KAAA,CAAA2jC,MAAAkX,EAAA1+C,UAGA,GAAA,WAAAE,QAAAw+C,GAGA,IADA,IAAAuhD,EAAAxhG,OAAA2F,KAAAs6C,GACA1+C,EAAA,EAAAA,EAAAigG,EAAA7hG,OAAA4B,IAEAggG,EAAAn8F,KAAA,CAAA2jC,MAAAkX,EAAAuhD,EAAAjgG,WAKAggG,EAAAn8F,KAAA,CAAA2jC,MAAAkX,IAIA,OAFAA,EAAAshD,GAkBAjC,EAAAiB,uBAAAE,EAAAxgD,GACA,SAAAvjC,EAAAilB,GAEA,OAAAjlB,EAEAqkD,EAAArkD,EAAA,IAEAqkD,EAAA,KAAAp/B,EACA,GAAA69D,GApBAF,EAAAiB,uBAAAE,EAAArmF,GACA,SAAAsC,EAAAilB,GAEA,OAAAjlB,EAEAqkD,EAAArkD,EAAA,IAEAqkD,EAAA,KAAAp/B,EACA,GAAA69D,EAcA,EACAr8F,KAAA68F,aAAAlrD,eAAA,SAAA,KAAAwsD,EAAAG,GACAt+F,KAAA68F,aAAAlrD,eAAA,sBAAA,KAAAwsD,EAAAG,GAGA,IAAAC,EAAA,SAAArnF,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAEAklF,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,mDAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,mDAAAzsB,OAAA2V,EAAA,MAGA,IAAAskF,EACAkB,EACAC,EAGAlB,EAAAvkF,EAAAjD,MAAA,KAEA,GAAAwnF,EAAA/gG,OAAA,EAGA,OADA2/F,EAAA1vE,IAAAqD,MAAA,wDAAAzsB,OAAA2V,EAAA,qEAAA3V,OAAA6T,EAAA,MACA,GAQA,GALAomF,EAAAC,EAAA,GACAiB,EAAAjB,EAAA,GACAkB,EAAAlB,EAAA,IAGAD,EAGA,OADAnB,EAAA1vE,IAAA1E,KAAA,uEAAA1kB,OAAA2V,EAAA,MACA,GAIA,IAAA0lF,EAAAvC,EAAAO,wBAAA8B,EAAA1hD,EAAAu/C,GACApoE,EAAAkoE,EAAAO,wBAAA+B,EAAA3hD,EAAAu/C,GAEA,OAAAqC,GAMA5hD,EAAA4hD,EAAAzqE,IASAkoE,EAAA93B,oBAAAi5B,EAAAxgD,EAAA,KAAAu/C,GAJAF,EAAA93B,oBAAAi5B,EAAArmF,EAAA,KAAAolF,IATAF,EAAA1vE,IAAA1E,KAAA,uDAAA1kB,OAAA2V,EAAA,MACA,GAcA,EACA2lF,EAAA,SAAAznF,EAAAD,EAAA8iB,EAAAsiE,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EACA2mD,EAAA,mBAAA7jC,EAAAA,EAAA,WAAA,MAAA,EAAA,EAEAoiE,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,wDAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,wDAAAzsB,OAAA2V,EAAA,MAGA,IAAAskF,EACAkB,EACAC,EAGAlB,EAAAvkF,EAAAjD,MAAA,KAEA,GAAAwnF,EAAA/gG,OAAA,EAGA,OADA2/F,EAAA1vE,IAAAqD,MAAA,wDAAAzsB,OAAA2V,EAAA,qEAAA3V,OAAA6T,EAAA,MACA6iB,EAAA,KAAA,IAQA,GALAujE,EAAAC,EAAA,GACAiB,EAAAjB,EAAA,GACAkB,EAAAlB,EAAA,IAGAD,EAGA,OADAnB,EAAA1vE,IAAA1E,KAAA,6EAAA1kB,OAAA2V,EAAA,MACA+gB,EAAA,KAAA,IAIA,IAAA2kE,EAAAvC,EAAAO,wBAAA8B,EAAA1hD,EAAAu/C,GACApoE,EAAAkoE,EAAAO,wBAAA+B,EAAA3hD,EAAAu/C,GAEA,OAAAqC,GAMA5hD,EAAA4hD,EAAAzqE,IAkBAkoE,EAAA93B,oBAAAi5B,EAAAxgD,GACA,SAAAvjC,EAAAilB,GAEA,OAAAjlB,EAEAqkD,EAAArkD,EAAA,IAEAqkD,EAAA,KAAAp/B,EACA,GAAA69D,GApBAF,EAAA93B,oBAAAi5B,EAAArmF,GACA,SAAAsC,EAAAilB,GAEA,OAAAjlB,EAEAqkD,EAAArkD,EAAA,IAEAqkD,EAAA,KAAAp/B,EACA,GAAA69D,IAlBAF,EAAA1vE,IAAA1E,KAAA,uDAAA1kB,OAAA2V,EAAA,MACA+gB,EAAA,KAAA,IA+BA,EACA/5B,KAAA68F,aAAAlrD,eAAA,SAAA,KAAA4sD,EAAAI,GACA3+F,KAAA68F,aAAAlrD,eAAA,qBAAA,KAAA4sD,EAAAI,GAGA,IAAAC,EAAA,SAAA1nF,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAEAklF,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,sDAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,sDAAAzsB,OAAA2V,EAAA,MAGA,IAAAskF,EACAkB,EACAC,EAGAlB,EAAAvkF,EAAAjD,MAAA,KAEA,GAAAwnF,EAAA/gG,OAAA,EAGA,OADA2/F,EAAA1vE,IAAAqD,MAAA,wDAAAzsB,OAAA2V,EAAA,qEAAA3V,OAAA6T,EAAA,MACA,GAQA,GALAomF,EAAAC,EAAA,GACAiB,EAAAjB,EAAA,GACAkB,EAAAlB,EAAA,IAGAD,EAGA,OADAnB,EAAA1vE,IAAA1E,KAAA,6EAAA1kB,OAAA2V,EAAA,MACA,GAIA,IAAA0lF,EAAAvC,EAAAO,wBAAA8B,EAAA1hD,EAAAu/C,GACApoE,EAAAkoE,EAAAO,wBAAA+B,EAAA3hD,EAAAu/C,GAEA,OAAAqC,GAMA5hD,EAAA4hD,EAAAzqE,IASAkoE,EAAAiB,uBAAAE,EAAAxgD,EAAAu/C,GAJAF,EAAAiB,uBAAAE,EAAArmF,EAAAolF,IATAF,EAAA1vE,IAAA1E,KAAA,uDAAA1kB,OAAA2V,EAAA,MACA,GAcA,EACA6lF,EAAA,SAAA3nF,EAAAD,EAAA8iB,EAAAsiE,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EACA2mD,EAAA,mBAAA7jC,EAAAA,EAAA,WAAA,MAAA,EAAA,EAEAoiE,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,2DAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,2DAAAzsB,OAAA2V,EAAA,MAGA,IAAAskF,EACAkB,EACAC,EAGAlB,EAAAvkF,EAAAjD,MAAA,KAEA,GAAAwnF,EAAA/gG,OAAA,EAGA,OADA2/F,EAAA1vE,IAAAqD,MAAA,wDAAAzsB,OAAA2V,EAAA,qEAAA3V,OAAA6T,EAAA,MACA6iB,EAAA,KAAA,IAQA,GALAujE,EAAAC,EAAA,GACAiB,EAAAjB,EAAA,GACAkB,EAAAlB,EAAA,IAGAD,EAGA,OADAnB,EAAA1vE,IAAA1E,KAAA,gFAAA1kB,OAAA2V,EAAA,MACA+gB,EAAA,KAAA,IAIA,IAAA2kE,EAAAvC,EAAAO,wBAAA8B,EAAA1hD,EAAAu/C,GACApoE,EAAAkoE,EAAAO,wBAAA+B,EAAA3hD,EAAAu/C,GAEA,OAAAqC,GAMA5hD,EAAA4hD,EAAAzqE,IAkBAkoE,EAAAiB,uBAAAE,EAAAxgD,GACA,SAAAvjC,EAAAilB,GAEA,OAAAjlB,EAEAqkD,EAAArkD,EAAA,IAEAqkD,EAAA,KAAAp/B,EACA,GAAA69D,GApBAF,EAAAiB,uBAAAE,EAAArmF,GACA,SAAAsC,EAAAilB,GAEA,OAAAjlB,EAEAqkD,EAAArkD,EAAA,IAEAqkD,EAAA,KAAAp/B,EACA,GAAA69D,IAlBAF,EAAA1vE,IAAA1E,KAAA,0DAAA1kB,OAAA2V,EAAA,MACA+gB,EAAA,KAAA,IA+BA,EACA/5B,KAAA68F,aAAAlrD,eAAA,UAAA,KAAAitD,EAAAC,GACA7+F,KAAA68F,aAAAlrD,eAAA,wBAAA,KAAAitD,EAAAC,GAGA,IAAAC,EAAA,SAAA5nF,EAAAD,EAAAolF,GAEA,IAAAv/C,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAIA,GAHA6lC,EAAA4mB,aAAAxsD,EAAAnF,OAEA+qC,EAAAiiD,oBAAAjiD,EAAA4mB,aAAA3tD,MAAA,KACA+mC,EAAAiiD,oBAAAviG,OAAA,EAEA,MAAA,GAEAsgD,EAAAkiD,cAAA7C,EAAAO,wBAAA5/C,EAAAiiD,oBAAA,GAAAjiD,EAAAu/C,GACAv/C,EAAAmiD,kBAAA3gG,QAAAw+C,EAAAkiD,eAEA,IAEAliD,EAAAoiD,aAAApiD,EAAAiiD,oBAAAviG,OAAA,EAAA,EAAAuS,SAAA+tC,EAAAiiD,oBAAA,GACA,CACA,MAAAI,GAEAriD,EAAAoiD,aAAA,CACA,CAEA,IAAAE,EAAAjD,EAAA36B,iBAAA69B,YAAA,oBAiBA,OAhBAD,IAGAA,EAAA,sEAGA,UAAAtiD,EAAAmiD,kBAEAniD,EAAAwiD,gBAAAC,EAAAziD,EAAAkiD,cAAAliD,EAAAkiD,cAAA,EAAAliD,EAAAoiD,aAAA7C,IAIAF,EAAA1vE,IAAAqD,MAAA,kCAAAzsB,OAAAy5C,EAAA4mB,aAAA,qCAAA5mB,EAAAkiD,eACAliD,EAAAwiD,gBAAAxiD,EAAA0iD,cAGArD,EAAAsD,cAAAL,EAAAtiD,EAAAu/C,EACA,EACAkD,EAAA,SAAAA,EAAAjzE,EAAA28B,EAAAy2C,EAAAC,EAAAtD,GAEA,IAAAuD,EAAA,GAEA,GAAA,WAAAthG,QAAAguB,GAEA,OAAAszE,EAGA,IAAAC,EAAAhjG,OAAA2F,KAAA8pB,GAEAwzE,EAAA3D,EAAA36B,iBAAA69B,YAAA,sBACAS,IAGAA,EAAA,sMAKA,IAAA,IAAA1hG,EAAA,EAAAA,EAAAyhG,EAAArjG,OAAA4B,IACA,CACA,IAAA2hG,EAAAzhG,QAAAguB,EAAAuzE,EAAAzhG,KAEA4hG,EAAA,GAEA,GAEA,WAFAD,EAKAC,EAFAN,EAAA,EAAAC,EAEA,MAIAJ,EAAAjzE,EAAAuzE,EAAAzhG,IAAA6qD,EAAAy2C,EAAA,EAAAC,EAAAtD,QAKA2D,EAAA1zE,EAAAuzE,EAAAzhG,IAIA,IAAA6hG,EACA,CACAhkC,QAAAkgC,EAAAlgC,QACAy7B,OAAAyE,EAAAzE,OAEAwI,cAAAj3C,EAEAk3C,UAAA7zE,EACA8zE,iBAAAP,EAAArjG,OAEA6jG,YAAAjiG,EACAkiG,UAAAT,EAAAzhG,GACAmiG,YAAAP,EACAQ,eAAAT,EAEAU,aAAAf,EACAgB,SAAAf,GAEAC,GAAAzD,EAAAsD,cAAAK,EAAAG,EAAA5D,EACA,CAEA,OAAAuD,CACA,EACA5/F,KAAA68F,aAAArqE,WAAA,cAAA,KAAAssE,GACA9+F,KAAA68F,aAAArqE,WAAA,QAAA,KAAAssE,GAGA,IAAA6B,EAAA,SAAAzpF,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAEAklF,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,iCAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,iCAAAzsB,OAAA2V,EAAA,MAGA,IAAAoc,EAAA,GAKA,OAJA,MAAApc,IAEAoc,EAAA+mE,EAAAO,wBAAA1jF,EAAA8jC,EAAAu/C,IAEA,MAAAjnE,GAAA,aAAAA,QAAA,IAAAA,EAEA,GAEAA,CACA,EACAp1B,KAAA68F,aAAArqE,WAAA,OAAA,KAAAmuE,GACA3gG,KAAA68F,aAAArqE,WAAA,UAAA,KAAAmuE,GAGA,IAAAC,EAAA,SAAA1pF,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EACA4lC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAEAklF,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,6BAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,6BAAAzsB,OAAA2V,EAAA,MAGA,IAAA6nF,EAAA7nF,EAAAjD,MAAA,KACA,GAAA8qF,EAAArkG,OAAA,EAEA,MAAA,GAOA,IAHA,IAAAikC,EAAAogE,EAAA74F,QAEA84F,EAAA,GACA1iG,EAAA,EAAAA,EAAAyiG,EAAArkG,OAAA4B,IACA,CACA,IAAA2iG,EAAA5E,EAAAO,wBAAAmE,EAAAziG,GAAA0+C,EAAAu/C,GACA,GAAA0E,GAAA7kG,MAAAK,QAAAwkG,GAEA,IAAA,IAAA/5F,EAAA,EAAAA,EAAA+5F,EAAAvkG,OAAAwK,IAEA85F,EAAA7+F,KAAA8+F,EAAA/5F,SAGA+5F,GAEAD,EAAA7+F,KAAA8+F,EACA,CAEA,OAAAD,EAAAn8F,KAAA87B,EACA,EACAzgC,KAAA68F,aAAArqE,WAAA,OAAA,KAAAouE,GACA5gG,KAAA68F,aAAArqE,WAAA,UAAA,KAAAouE,GAEA,IAAAI,EAAA,SAAA9pF,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EACA4lC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAEAklF,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,oCAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,oCAAAzsB,OAAA2V,EAAA,MAGA,IAAA6nF,EAAA7nF,EAAAjD,MAAA,KACA,GAAA8qF,EAAArkG,OAAA,EAEA,MAAA,GAQA,IAJA,IAAAikC,EAAAogE,EAAA74F,QAEA84F,EAAA,GACAG,EAAA,CAAA,EACA7iG,EAAA,EAAAA,EAAAyiG,EAAArkG,OAAA4B,IACA,CACA,IAAA2iG,EAAA5E,EAAAO,wBAAAmE,EAAAziG,GAAA0+C,EAAAu/C,GAEA,GAAA0E,GAAA7kG,MAAAK,QAAAwkG,GAEA,IAAA,IAAA/5F,EAAA,EAAAA,EAAA+5F,EAAAvkG,OAAAwK,IAEAi6F,EAAApjG,eAAAkjG,EAAA/5F,MAEAi6F,EAAAF,EAAA/5F,KAAA,EACA85F,EAAA7+F,KAAA8+F,EAAA/5F,UAIA+5F,IAEAE,EAAApjG,eAAAkjG,KAEAE,EAAAF,IAAA,EACAD,EAAA7+F,KAAA8+F,IAGA,CAEA,OAAAD,EAAAn8F,KAAA87B,EACA,EACAzgC,KAAA68F,aAAArqE,WAAA,QAAA,KAAAwuE,GACAhhG,KAAA68F,aAAArqE,WAAA,gBAAA,KAAAwuE,GAEAhhG,KAAA68F,aAAArqE,WAAA,aAAA,MACA,SAAAtb,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAEAklF,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,8BAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,8BAAAzsB,OAAA2V,EAAA,MAGA,IAAAkoF,EAAA/E,EAAAO,wBAAA1jF,EAAA8jC,EAAAu/C,GACA,OAAAF,EAAApgE,WAAAolE,iBAAAD,EACA,IACAlhG,KAAA68F,aAAArqE,WAAA,YAAA,MACA,SAAAtb,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAEAklF,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,6BAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,6BAAAzsB,OAAA2V,EAAA,MAGA,IAAAkoF,EAAA/E,EAAAO,wBAAA1jF,EAAA8jC,EAAAu/C,GACA,OAAAF,EAAApgE,WAAAiD,2BAAAm9D,EAAApgE,WAAAqlE,qBAAAF,EAAA,GACA,IAGAlhG,KAAA68F,aAAArqE,WAAA,aAAA,MACA,SAAAtb,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EACAoqF,EAAAlF,EAAAO,wBAAA1jF,EAAA8jC,EAAAu/C,GAGAF,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,iCAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,iCAAAzsB,OAAA2V,EAAA,MAIA,IAAAsoF,EAAAnF,EAAAzqE,MAAA8uB,MAAAld,MAAA5lB,IAAA2jF,GACA,IAGA,GAAAlF,EAAA5hF,QAAAgnF,SAEAD,EAAAA,EAAAj+E,GAAA84E,EAAA5hF,QAAAgnF,eAIA,IAEAD,EAAAA,EAAAj+E,GAAA84E,EAAAzqE,MAAA8uB,MAAAld,MAAAjgB,GAAAE,QACA,CACA,MAAAhK,GAEA4iF,EAAA1vE,IAAAzb,MAAA,qFAAA3N,OAAAkW,EAAA4P,SAAA5P,EAAA,KACA,CAEA,CACA,MAAAioF,GAIA,IAEAF,EAAAA,EAAAj+E,GAAA84E,EAAAzqE,MAAA8uB,MAAAld,MAAAjgB,GAAAE,QACA,CACA,MAAAhK,GAEA4iF,EAAA1vE,IAAAzb,MAAA,qFAAA3N,OAAAkW,EAAA4P,SAAA5P,EAAA,KACA,CACA,CAEA,OAAA+nF,EAAAnhF,OAAA,aACA,IAIAngB,KAAA68F,aAAArqE,WAAA,gBAAA,MACA,SAAAtb,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EACAwqF,EAAAzoF,EAAAjD,MAAA,KAEA,GAAA0rF,EAAAjlG,OAAA,EAGA,OADA2/F,EAAA1vE,IAAAzb,MAAA,iCAAA3N,OAAA2V,EAAA,mDACA,GAGA,IAAAqoF,EAAAlF,EAAAO,wBAAA+E,EAAA,GAAA3kD,EAAAu/C,GAEAF,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,iCAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,iCAAAzsB,OAAA2V,EAAA,MAIA,IAAAsoF,EAAAnF,EAAAzqE,MAAA8uB,MAAAld,MAAA5lB,IAAA2jF,GACA,IAGA,GAAAlF,EAAA5hF,QAAAgnF,SAEAD,EAAAA,EAAAj+E,GAAA84E,EAAA5hF,QAAAgnF,eAIA,IAEAD,EAAAA,EAAAj+E,GAAA84E,EAAAzqE,MAAA8uB,MAAAld,MAAAjgB,GAAAE,QACA,CACA,MAAAhK,GAEA4iF,EAAA1vE,IAAAzb,MAAA,qFAAA3N,OAAAkW,EAAA4P,SAAA5P,EAAA,KACA,CAEA,CACA,MAAAmoF,GAIA,IAEAJ,EAAAA,EAAAj+E,GAAA84E,EAAAzqE,MAAA8uB,MAAAld,MAAAjgB,GAAAE,QACA,CACA,MAAAhK,GAEA4iF,EAAA1vE,IAAAzb,MAAA,qFAAA3N,OAAAkW,EAAA4P,SAAA5P,EAAA,KACA,CACA,CAEA,OAAA+nF,EAAAnhF,OAAAshF,EAAA,GACA,IAEA,IAAAE,EAAA,SAAAzqF,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAEAklF,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,qCAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,qCAAAzsB,OAAA2V,EAAA,MAIA,IAAA8kF,EAAA9kF,EAAAjD,MAAA,KAGA,OAAAomF,EAAAO,wBAAAoB,EAAA,GAAAhhD,EAAAu/C,GAEAyB,EAAA,GAIA,EAEA,EACA99F,KAAA68F,aAAArqE,WAAA,cAAA,KAAAmvE,GACA3hG,KAAA68F,aAAArqE,WAAA,QAAA,KAAAmvE,GAEA,IAAAC,EAAA,SAAA1qF,GAEA,IAAA8B,EAAA9B,EAAAnF,OAEAoqF,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,yCAAAzsB,OAAA2V,EAAA,MAGA,IAAAykB,EAAA,EACAwF,EAAA,KAEA,GAAAjqB,EAAAxc,OAAA,EACA,CACA,IAAAshG,EAAA9kF,EAAAjD,MAAA,KACA,GAAA+nF,EAAAthG,OAAA,EAEA,IAEAihC,EAAA1uB,SAAA+uF,EAAA,GACA,CACA,MAAA+D,GAEApkE,EAAA,CACA,CAEA,GAAAqgE,EAAAthG,OAAA,EAEA,IAEAymC,EAAAl0B,SAAA+uF,EAAA,GACA,CACA,MAAAgE,GAEA7+D,EAAA,IACA,CAEA,CAEA,OAAAk5D,EAAA7kD,eAAAC,oBAAA9Z,EAAAwF,EACA,EACAjjC,KAAA68F,aAAArqE,WAAA,wBAAA,KAAAovE,GACA5hG,KAAA68F,aAAArqE,WAAA,SAAA,KAAAovE,GAEA,IAAAG,EAAA,SAAA7qF,GAEA,IAAA8B,EAAA9B,EAAAnF,OAEAoqF,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,mCAAAzsB,OAAA2V,EAAA,MAGA,IAAAgpF,EAAA,EACA/+D,EAAA,QAEA,GAAAjqB,EAAAxc,OAAA,EACA,CACA,IAAAshG,EAAA9kF,EAAAjD,MAAA,KACA,GAAA+nF,EAAAthG,OAAA,EAEA,IAEAwlG,EAAAjzF,SAAA+uF,EAAA,GACA,CACA,MAAAmE,GAEAD,EAAA,CACA,CAEA,GAAAlE,EAAAthG,OAAA,EAEA,IAEAymC,EAAAl0B,SAAA+uF,EAAA,GACA,CACA,MAAAoE,GAEAj/D,EAAA,OACA,CAGA,CAEA,OAAAk5D,EAAA7kD,eAAAxU,qBAAAk/D,EAAA/+D,EACA,EACAjjC,KAAA68F,aAAArqE,WAAA,kBAAA,KAAAuvE,GACA/hG,KAAA68F,aAAArqE,WAAA,QAAA,KAAAuvE,GAuBA/hG,KAAA68F,aAAArqE,WAAA,0BAAA,MArBA,SAAAtb,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAEAklF,EAAA/kE,aAAA,EAEA+kE,EAAA1vE,IAAAqD,MAAA,2CAAAzsB,OAAA2V,EAAA,mBAAA8jC,GAEAq/C,EAAA/kE,aAAA,GAEA+kE,EAAA1vE,IAAAqD,MAAA,2CAAAzsB,OAAA2V,EAAA,MAGA,IAAAoc,EAAA+mE,EAAAO,wBAAA1jF,EAAA8jC,EAAAu/C,GACA,OAAA,MAAAjnE,GAAA,aAAAA,QAAA,IAAAA,EAEA,GAEA+mE,EAAApgE,WAAAomE,wBAAAhG,EAAApgE,WAAAqmE,mBAAAhtE,GACA,IAGA,IAAAitE,EAAA,SAAAnrF,EAAAD,EAAAolF,GAEA,IAAArjF,EAAA9B,EAAAnF,OACA+qC,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAEAme,EAAA+mE,EAAAO,wBAAA1jF,EAAA8jC,EAAAu/C,GACAiG,EAAAhkG,QAAA82B,GAaA,OAZA,MAAAA,GAAA,aAAAktE,EAEAnG,EAAA1vE,IAAAqD,MAAA,6BAAAzsB,OAAA2V,EAAA,SAAA3V,OAAAi/F,EAAA,MAEA,UAAAA,EAEAnG,EAAA1vE,IAAAqD,MAAA,6BAAAzsB,OAAA2V,EAAA,mBAAAoc,GAIA+mE,EAAA1vE,IAAAqD,MAAA,6BAAAzsB,OAAA2V,EAAA,WAAA3V,OAAAi/F,EAAA,QAAAj/F,OAAA+xB,EAAA,MAEA,EACA,EACAp1B,KAAA68F,aAAArqE,WAAA,cAAA,KAAA6vE,GACAriG,KAAA68F,aAAArqE,WAAA,QAAA,KAAA6vE,GAGA,IAAAE,EAAA,SAAArrF,EAAAD,EAAAolF,GAEA,IAAAv/C,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EAIA,GAHA6lC,EAAA4mB,aAAAxsD,EAAAnF,OAEA+qC,EAAAiiD,oBAAAjiD,EAAA4mB,aAAA3tD,MAAA,KACA+mC,EAAAiiD,oBAAAviG,OAAA,EAEA,MAAA,GAEAsgD,EAAAkiD,cAAA7C,EAAAO,wBAAA5/C,EAAAiiD,oBAAA,GAAAjiD,EAAAu/C,GACAv/C,EAAAmiD,kBAAA3gG,QAAAw+C,EAAAkiD,eAGA,IAEAliD,EAAAoiD,aAAApiD,EAAAiiD,oBAAAviG,OAAA,EAAA,EAAAuS,SAAA+tC,EAAAiiD,oBAAA,GACA,CACA,MAAAyD,GAEA1lD,EAAAoiD,aAAA,CACA,CAWA,MATA,UAAApiD,EAAAmiD,kBAEAwD,EAAA3lD,EAAAkiD,cAAAliD,EAAAiiD,oBAAA,GAAAjiD,EAAAkiD,cAAA,EAAAliD,EAAAoiD,cAIA/C,EAAA1vE,IAAAqD,MAAA,kCAAAzsB,OAAAy5C,EAAA4mB,aAAA,qCAAA5mB,EAAAkiD,eAGA,EACA,EACAyD,EAAA,SAAAA,EAAAn2E,EAAAs/B,EAAA3C,EAAAy2C,EAAAC,GAIA,GAAA,WAAArhG,QAAAguB,GAEA,MAJA,GASA,IAFA,IAAAuzE,EAAAhjG,OAAA2F,KAAA8pB,GAEAluB,EAAA,EAAAA,EAAAyhG,EAAArjG,OAAA4B,IACA,CACA,IAAA2hG,EAAAzhG,QAAAguB,EAAAuzE,EAAAzhG,KACA4hG,EAAA,GAEA,GAEA,WAFAD,EAGAC,EAAA,WAIAA,EAAA1zE,EAAAuzE,EAAAzhG,IAKA,GAFA+9F,EAAA1vE,IAAAqD,MAAA,IAAAzsB,OAAAuoD,EAAA,KAAAvoD,OAAAw8F,EAAAzhG,GAAA,OAAAiF,OAAA08F,EAAA,QAAA18F,OAAA28F,IAEAN,EAAA,EAAAC,EAEA,MAAA,GAEA,UAAAI,IAEAC,EAAAyC,EAAAn2E,EAAAuzE,EAAAzhG,IAAA,GAAAiF,OAAAuoD,EAAA,KAAAvoD,OAAAw8F,EAAAzhG,IAAA6qD,EAAAy2C,EAAA,EAAAC,GAEA,CAEA,MAAA,EACA,EACA3/F,KAAA68F,aAAArqE,WAAA,kBAAA,KAAA+vE,GACAviG,KAAA68F,aAAArqE,WAAA,SAAA,KAAA+vE,GAEA,IAAAG,EAAA,SAAAxrF,GAEA,IAAA8B,EAAA9B,EAAAnF,OAEA,OADAoqF,EAAA1vE,IAAAqD,MAAA,8BAAAzsB,OAAA2V,IACA,EACA,EACAhZ,KAAA68F,aAAArqE,WAAA,kBAAA,KAAAkwE,GACA1iG,KAAA68F,aAAArqE,WAAA,QAAA,KAAAkwE,GAUA1iG,KAAA68F,aAAArqE,WAAA,eAAA,MARA,SAAAtb,GAEA,IAAA8B,EAAA9B,EAAAnF,OACA4wF,EAAA,IAAAtiG,MAAA,6BAAAgD,OAAA2V,IAGA,OAFAmjF,EAAA1vE,IAAAqD,MAAA,6BAAAzsB,OAAA2V,GAAA2pF,EAAAC,OAEA,EACA,IAGA5iG,KAAAs7F,kCAAA,CACA,CACA,GAEA,CAAAr9F,IAAA,0BAAAlB,MASA,SAAAisD,EAAAuB,EAAA8xC,GAEA,IAAAwG,EAAA3mG,MAAAK,QAAA8/F,GAAAA,EAAA,CAAAr8F,MAEA,OAAAA,KAAAy3F,SAAAhyD,eAAA,CAAAxlC,KAAAD,KAAAi8D,QAAAj8D,KAAAi8D,QAAAy7B,OAAA13F,KAAA03F,OAAA5rE,QAAA+2E,EAAAlL,OAAAptC,GAAAvB,EACA,GAEA,CAAA/qD,IAAA,gBAAAlB,MAQA,SAAA+lG,EAAA7rF,EAAA8iB,EAAAsiE,GACA,IAGA0G,EAHAC,EAAAhjG,KACA88C,EAAA,WAAAx+C,QAAA2Y,GAAAA,EAAA,CAAA,EACA4rF,EAAA3mG,MAAAK,QAAA8/F,GAAAA,EAAA,CAAAr8F,MAEA,GAAAA,KAAAk+D,iBAEA6kC,EAAA/iG,KAAA0xB,MAAAE,UACA5xB,KAAAysB,IAAAuD,KAAA,kCAAA3sB,OAAA0/F,EAAA,MAAA1/F,OAAAy/F,EAAA14F,UAAA,EAAA,IAAAF,QAAA,KAAA,OAAA,OAAA7G,OAAAy/F,EAAAtmG,OAAA,kBAAA6G,OAAA/E,QAAAy7B,GAAA,sBAAA12B,OAAAqpB,KAAApmB,UAAAw2C,GAAAtgD,OAAA,MACAwD,KAAAo3B,aAAA,GAEAp3B,KAAAysB,IAAAuD,KAAA,kCAAA3sB,OAAA0/F,EAAA,gBAAA1/F,OAAAy/F,IAEA9iG,KAAAo7F,+BAAA5+F,OAAA,GAEA,IAAA,IAAA4B,EAAA,EAAAA,EAAA4B,KAAAo7F,+BAAA5+F,OAAA4B,IAEA4B,KAAAysB,IAAAuD,KAAA,kCAAA3sB,OAAA0/F,EAAA,mBAAA1/F,OAAArD,KAAAo7F,+BAAAh9F,GAAA,QAAAiF,OAAArD,KAAA08F,wBAAA18F,KAAAo7F,+BAAAh9F,GAAA0+C,GAAA,MAKA,GAAA,mBAAA/iB,EAaA,CACA,IAAAoW,EAAAnwC,KAAA68F,aAAA7pE,YAAA8vE,EAAAhmD,EAAA,KAAA+lD,GAKA,OAJA7iG,KAAAk+D,gBAAAl+D,KAAAo3B,aAAA,GAEAp3B,KAAAysB,IAAAuD,KAAA,kCAAA3sB,OAAA0/F,EAAA,6BAAA1/F,OAAA8sC,IAEAA,CACA,CAlBAnwC,KAAA68F,aAAA7pE,YAAA8vE,EAAAhmD,GACA,SAAAvjC,EAAA0pF,GAMA,OAJAD,EAAA9kC,gBAAA8kC,EAAA5rE,aAAA,GAEA4rE,EAAAv2E,IAAAuD,KAAA,kCAAA3sB,OAAA0/F,EAAA,mCAAA1/F,OAAA4/F,IAEAlpE,EAAAxgB,EAAA0pF,EACA,GAAAJ,EAWA,GAEA,CAAA5kG,IAAA,sBAAAlB,MAQA,SAAA+iD,EAAA7oC,EAAA8iB,EAAAsiE,GAEA,IAAA6G,EAAAljG,KAAAwhE,iBAAA69B,YAAAv/C,GAOA,OAJAojD,IAEAA,EAAA,IAEAljG,KAAAy/F,cAAAyD,EAAAjsF,EAAA8iB,EAAAsiE,EACA,GAEA,CAAAp+F,IAAA,mBAAAlB,MAQA,SAAA+lG,EAAAK,EAAAppE,EAAAsiE,GACA,IAAA+G,EAAApjG,KAEAo1B,EAAA,GACA,GAAA,mBAAA2E,EAyBA,CACA,GAAA79B,MAAAK,QAAA4mG,IAAA,UAAA7kG,QAAA6kG,GACA,CACA,GAAAjnG,MAAAK,QAAA4mG,GAEA,IAAA,IAAA/kG,EAAA,EAAAA,EAAA+kG,EAAA3mG,OAAA4B,IAEAg3B,GAAAp1B,KAAAy/F,cAAAqD,EAAAK,EAAA/kG,GAAAi+F,QAMA,IADA,IAAAtkF,EAAAlb,OAAA2F,KAAA2gG,GACA/kG,EAAA,EAAAA,EAAA2Z,EAAAvb,OAAA4B,IAEAg3B,GAAAp1B,KAAAy/F,cAAAqD,EAAAK,EAAAprF,EAAA3Z,IAAAi+F,GAIA,OAAAjnE,CACA,CAGA,MAAA,EAEA,CAhDA,IAAAl5B,MAAAK,QAAA4mG,IAAA,UAAA7kG,QAAA6kG,GAmBA,OAAAppE,EAAA15B,MAAA,2DAAA,IAjBAL,KAAAm/B,QAAAsgB,UAAA0jD,EAAA,GACA,SAAA54C,EAAA84C,GAEA,OAAAD,EAAA3D,cAAAqD,EAAAv4C,GACA,SAAAhxC,EAAA+pF,GAGA,OADAluE,GAAAkuE,EACAD,GACA,GACA,IACA,SAAA9pF,GAEA,OAAAwgB,EAAAxgB,EAAA6b,EACA,GAkCA,GAEA,CAAAn3B,IAAA,yBAAAlB,MAQA,SAAA+iD,EAAAqjD,EAAAppE,EAAAsiE,GAEA,IAAA6G,EAAAljG,KAAAwhE,iBAAA69B,YAAAv/C,GAOA,OAJAojD,IAEAA,EAAA,IAEAljG,KAAAujG,iBAAAL,EAAAC,EAAAppE,EAAAsiE,EACA,IAAA,CAhtEA,CAAAtB,GAmtEAr7F,EAAAD,QAAAQ,EAEAP,EAAAD,QAAA+jG,qBAAArjG,EAAA,oBAEAT,EAAAD,QAAAgkG,cAAAtjG,EAAA,aACAT,EAAAD,QAAAikG,kBAAAvjG,EAAA,iBAEAT,EAAAD,QAAAkkG,eAAAxjG,EAAA,0CACAT,EAAAD,QAAAmkG,kBAAAzjG,EAAA,6CAGAT,EAAAD,QAAAy7F,UAAA,IAAAt1E,SAAA,+DAEAlmB,EAAAD,QAAAokG,oBAAA1jG,EAAA,yCACAT,EAAAD,QAAAqkG,wBAAA3jG,EAAA,6BtKszzBA,EAAE,CAAC,6BAA6B,IAAI,wCAAwC,IAAI,gBAAgB,IAAI,+BAA+B,IAAI,yBAAyB,IAAI,kCAAkC,IAAI,8BAA8B,IAAI,yCAAyC,IAAI,4CAA4C,IAAIuxB,MAAQ,GAAG,mBAAmB,IAAI,gBAAgB,IAAI,YAAY,MAAM,IAAI,CAAC,SAASvxB,EAAQT,EAAOD,GuKpi4B9a,IAuBAskG,EAAA,WAoCA,OAAA7lG,eA3BA,SAAA6lG,EAAAC,EAAAC,GACAlmG,iBAAAiC,KAAA+jG,GACA/jG,KAAAkkG,WAAA,UAAA5lG,QAAA2lG,GAAAA,EAAA,CAAA,EAEAjkG,KAAAg8D,KAAAgoC,EAGAhkG,KAAAmkG,sBAAA,IACAnkG,KAAAokG,eAAA,EAEApkG,KAAAqkG,SAAA,CAAA,EACArkG,KAAAqkG,SAAAC,WAAA,GACAtkG,KAAAqkG,SAAAE,KAAA,GACAvkG,KAAAqkG,SAAAG,QAAA,GACAxkG,KAAAqkG,SAAAI,OAAA,GACAzkG,KAAAqkG,SAAAK,OAAA,GAEA1kG,KAAAg8D,KAAAsI,kBAAAsxB,yBAAA51F,KAAA41F,yBAAAt4F,KAAA0C,MACAA,KAAAg8D,KAAAsI,kBAAAqxB,mBAAA31F,KAAA21F,mBAAAr4F,KAAA0C,MACAA,KAAAg8D,KAAAsI,kBAAAoxB,qBAAA11F,KAAA01F,qBAAAp4F,KAAA0C,MACAA,KAAAg8D,KAAAsI,kBAAAmxB,sBAAAz1F,KAAAy1F,sBAAAn4F,KAAA0C,MACAA,KAAAg8D,KAAAsI,kBAAAkxB,qBAAAx1F,KAAAw1F,qBAAAl4F,KAAA0C,MAEAA,KAAAg8D,KAAAsI,kBAAAuxB,4BAAA71F,KAAA61F,4BAAAv4F,KAAA0C,MACAA,KAAAg8D,KAAAsI,kBAAAwxB,2BAAA91F,KAAA81F,2BAAAx4F,KAAA0C,KACA,GAEA,CAAA,CAAA/B,IAAA,sBAAAlB,MAMA,SAAAisD,EAAAic,GAEA,IAAAb,OAAA,IAAAa,EAAA,GAAAA,EACA,MACA,CACA0/B,UAAA3kG,KAAAg8D,KAAAvvC,IAAA+vB,eACAnlC,KAAA2xC,EACAurC,QAAAnwB,EAEA,GAEA,CAAAnmE,IAAA,2BAAAlB,MAKA,SAAAisD,GAIA,OAFAhpD,KAAAokG,eAAApkG,KAAAqkG,SAAAC,WAAAriG,KAAAjC,KAAA4kG,oBAAA57C,IACAhpD,KAAAg8D,KAAAvvC,IAAAuD,KAAA,iCAAA3sB,OAAA2lD,EAAA,MACA,EACA,GAEA,CAAA/qD,IAAA,qBAAAlB,MAKA,SAAAisD,GAIA,OAFAhpD,KAAAokG,eAAApkG,KAAAqkG,SAAAE,KAAAtiG,KAAAjC,KAAA4kG,oBAAA57C,IACAhpD,KAAAg8D,KAAAvvC,IAAAuD,KAAA,oCAAA3sB,OAAA2lD,EAAA,MACAhpD,KAAAkkG,WAAArmG,eAAAmrD,GAGAhpD,KAAAkkG,WAAAl7C,IAEAhpD,KAAAg8D,KAAAvvC,IAAA1E,KAAA,0BAAA1kB,OAAA2lD,EAAA,8CACA,GACA,GAEA,CAAA/qD,IAAA,uBAAAlB,MAMA,SAAAisD,EAAAic,GAWA,OATAjlE,KAAAokG,eAAApkG,KAAAqkG,SAAAI,OAAAxiG,KAAAjC,KAAA4kG,oBAAA57C,EAAAic,IACAA,EAAAzoE,OAAAwD,KAAAmkG,sBAEAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,oCAAA3sB,OAAA2lD,EAAA,8BAAA3lD,OAAArD,KAAAmkG,sBAAA,gBAAA,CAAA5P,QAAAtvB,EAAA76D,UAAA,EAAApK,KAAAmkG,yBAIAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,oCAAA3sB,OAAA2lD,EAAA,KAAA,CAAAurC,QAAAtvB,IAEA,EACA,GAEA,CAAAhnE,IAAA,wBAAAlB,MAMA,SAAAisD,EAAAic,GAWA,OATAjlE,KAAAokG,eAAApkG,KAAAqkG,SAAAG,QAAAviG,KAAAjC,KAAA4kG,oBAAA57C,EAAAic,IACAA,EAAAzoE,OAAAwD,KAAAmkG,sBAEAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,qCAAA3sB,OAAA2lD,EAAA,8BAAA3lD,OAAArD,KAAAmkG,sBAAA,gBAAA,CAAA5P,QAAAtvB,EAAA76D,UAAA,EAAApK,KAAAmkG,yBAIAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,qCAAA3sB,OAAA2lD,EAAA,KAAA,CAAAurC,QAAAtvB,IAEA,EACA,GAEA,CAAAhnE,IAAA,uBAAAlB,MAMA,SAAAisD,EAAAic,GAWA,OATAjlE,KAAAokG,eAAApkG,KAAAqkG,SAAAK,OAAAziG,KAAAjC,KAAA4kG,oBAAA57C,EAAAic,IACAA,EAAAzoE,OAAAwD,KAAAmkG,sBAEAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,oCAAA3sB,OAAA2lD,EAAA,8BAAA3lD,OAAArD,KAAAmkG,sBAAA,gBAAA,CAAA5P,QAAAtvB,EAAA76D,UAAA,EAAApK,KAAAmkG,yBAIAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,oCAAA3sB,OAAA2lD,EAAA,KAAA,CAAAurC,QAAAtvB,IAEA,EACA,GAEA,CAAAhnE,IAAA,8BAAAlB,MAMA,SAAAisD,EAAA+tC,GAGA,OADA/2F,KAAAg8D,KAAAvvC,IAAAuD,KAAA,8CAAA3sB,OAAA2lD,EAAA,KAAA,CAAA67C,UAAA9N,IACA,EACA,GAEA,CAAA94F,IAAA,6BAAAlB,MAMA,SAAAisD,EAAA+tC,EAAA9xB,GAUA,OARAA,EAAAzoE,OAAAwD,KAAAmkG,sBAEAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,2CAAA3sB,OAAA2lD,EAAA,8BAAA3lD,OAAArD,KAAAmkG,sBAAA,gBAAA,CAAAU,UAAA9N,EAAAxC,QAAAtvB,EAAA76D,UAAA,EAAApK,KAAAmkG,yBAIAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,2CAAA3sB,OAAA2lD,EAAA,KAAA,CAAA67C,UAAA9N,EAAAxC,QAAAtvB,IAEA,EACA,IAAA,CA5KA,GA+KAvlE,EAAAD,QAAAskG,CvKui4BA,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS5jG,EAAQT,EAAOD,GwK7u4BnC,IAuBAqlG,EAAA,WA8CA,OAAA5mG,eArCA,SAAA4mG,EAAAd,EAAAC,GACAlmG,iBAAAiC,KAAA8kG,GACA9kG,KAAAkkG,WAAA,UAAA5lG,QAAA2lG,GAAAA,EAAA,CAAA,EAEAjkG,KAAAkkG,WAAAa,eAAA,CAAA,EACA/kG,KAAAkkG,WAAAc,WAAA,CAAA,EAEAhlG,KAAAg8D,KAAAgoC,EAGAhkG,KAAAmkG,sBAAA,IACAnkG,KAAAokG,eAAA,EAEApkG,KAAAqkG,SAAA,CAAA,EACArkG,KAAAqkG,SAAAC,WAAA,GACAtkG,KAAAqkG,SAAAE,KAAA,GACAvkG,KAAAqkG,SAAAG,QAAA,GACAxkG,KAAAqkG,SAAAI,OAAA,GACAzkG,KAAAqkG,SAAAK,OAAA,GACA1kG,KAAAqkG,SAAAY,cAAA,GACAjlG,KAAAqkG,SAAAa,aAAA,GACAllG,KAAAqkG,SAAAc,gBAAA,GACAnlG,KAAAqkG,SAAAe,UAAA,GACAplG,KAAAqkG,SAAAgB,SAAA,GACArlG,KAAAqkG,SAAAiB,YAAA,GAEAtlG,KAAAg8D,KAAAsI,kBAAAsxB,yBAAA51F,KAAA41F,yBAAAt4F,KAAA0C,MACAA,KAAAg8D,KAAAsI,kBAAAqxB,mBAAA31F,KAAA21F,mBAAAr4F,KAAA0C,MACAA,KAAAg8D,KAAAsI,kBAAAoxB,qBAAA11F,KAAA01F,qBAAAp4F,KAAA0C,MACAA,KAAAg8D,KAAAsI,kBAAAmxB,sBAAAz1F,KAAAy1F,sBAAAn4F,KAAA0C,MACAA,KAAAg8D,KAAAsI,kBAAAkxB,qBAAAx1F,KAAAw1F,qBAAAl4F,KAAA0C,MACAA,KAAAg8D,KAAAsI,kBAAAuxB,4BAAA71F,KAAA61F,4BAAAv4F,KAAA0C,MACAA,KAAAg8D,KAAAsI,kBAAAwxB,2BAAA91F,KAAA81F,2BAAAx4F,KAAA0C,MACAA,KAAAg8D,KAAAsI,kBAAAyxB,8BAAA/1F,KAAA+1F,8BAAAz4F,KAAA0C,MACAA,KAAAg8D,KAAAsI,kBAAA0xB,wBAAAh2F,KAAAg2F,wBAAA14F,KAAA0C,MACAA,KAAAg8D,KAAAsI,kBAAA2xB,uBAAAj2F,KAAAi2F,uBAAA34F,KAAA0C,MACAA,KAAAg8D,KAAAsI,kBAAA4xB,0BAAAl2F,KAAAk2F,0BAAA54F,KAAA0C,KACA,GAAA,CAAA,CAAA/B,IAAA,sBAAAlB,MAEA,SAAAisD,EAAAic,GAEA,IAAAb,OAAA,IAAAa,EAAA,GAAAA,EACA,MACA,CACA0/B,UAAA3kG,KAAAg8D,KAAAvvC,IAAA+vB,eACAnlC,KAAA2xC,EACAurC,QAAAnwB,EAEA,GAAA,CAAAnmE,IAAA,2BAAAlB,MAEA,SAAAisD,GAQA,OANAhpD,KAAAokG,eAEApkG,KAAAqkG,SAAAC,WAAAriG,KAAAjC,KAAA4kG,oBAAA57C,IAGAhpD,KAAAg8D,KAAAvvC,IAAAuD,KAAA,iCAAA3sB,OAAA2lD,EAAA,MACA,EACA,GAAA,CAAA/qD,IAAA,qBAAAlB,MAEA,SAAAisD,GAQA,OANAhpD,KAAAokG,eAEApkG,KAAAqkG,SAAAE,KAAAtiG,KAAAjC,KAAA4kG,oBAAA57C,IAGAhpD,KAAAg8D,KAAAvvC,IAAAuD,KAAA,oCAAA3sB,OAAA2lD,EAAA,MACAhpD,KAAAkkG,WAAArmG,eAAAmrD,GAGAhpD,KAAAkkG,WAAAl7C,IAEAhpD,KAAAg8D,KAAAvvC,IAAA1E,KAAA,0BAAA1kB,OAAA2lD,EAAA,8CACA,GACA,GAAA,CAAA/qD,IAAA,uBAAAlB,MAEA,SAAAisD,EAAAic,GAiBA,OAfAjlE,KAAAkkG,WAAAl7C,QAAA,IAAAhpD,KAAAkkG,WAAAl7C,GAAAic,EAAAjlE,KAAAkkG,WAAAl7C,GAAAic,EAEAjlE,KAAAokG,eAEApkG,KAAAqkG,SAAAI,OAAAxiG,KAAAjC,KAAA4kG,oBAAA57C,EAAAic,IAGAA,EAAAzoE,OAAAwD,KAAAmkG,sBAEAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,oCAAA3sB,OAAA2lD,EAAA,8BAAA3lD,OAAArD,KAAAmkG,sBAAA,gBAAA,CAAA5P,QAAAtvB,EAAA76D,UAAA,EAAApK,KAAAmkG,yBAIAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,oCAAA3sB,OAAA2lD,EAAA,KAAA,CAAAurC,QAAAtvB,IAEA,EACA,GAAA,CAAAhnE,IAAA,wBAAAlB,MACA,SAAAisD,EAAAic,GAiBA,OAfAjlE,KAAAkkG,WAAAl7C,QAAA,IAAAhpD,KAAAkkG,WAAAl7C,GAAAic,EAAAA,EAAAjlE,KAAAkkG,WAAAl7C,GAEAhpD,KAAAokG,eAEApkG,KAAAqkG,SAAAG,QAAAviG,KAAAjC,KAAA4kG,oBAAA57C,EAAAic,IAGAA,EAAAzoE,OAAAwD,KAAAmkG,sBAEAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,qCAAA3sB,OAAA2lD,EAAA,8BAAA3lD,OAAArD,KAAAmkG,sBAAA,gBAAA,CAAA5P,QAAAtvB,EAAA76D,UAAA,EAAApK,KAAAmkG,yBAIAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,qCAAA3sB,OAAA2lD,EAAA,KAAA,CAAAurC,QAAAtvB,IAEA,EACA,GAAA,CAAAhnE,IAAA,uBAAAlB,MAEA,SAAAisD,EAAAic,GAiBA,OAfAjlE,KAAAkkG,WAAAl7C,GAAAic,EAEAjlE,KAAAokG,eAEApkG,KAAAqkG,SAAAG,QAAAviG,KAAAjC,KAAA4kG,oBAAA57C,EAAAic,IAGAA,EAAAzoE,OAAAwD,KAAAmkG,sBAEAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,oCAAA3sB,OAAA2lD,EAAA,8BAAA3lD,OAAArD,KAAAmkG,sBAAA,gBAAA,CAAA5P,QAAAtvB,EAAA76D,UAAA,EAAApK,KAAAmkG,yBAIAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,oCAAA3sB,OAAA2lD,EAAA,KAAA,CAAAurC,QAAAtvB,IAEA,EACA,GAAA,CAAAhnE,IAAA,iCAAAlB,MAEA,SAAAisD,EAAA+tC,GAEA/2F,KAAAkkG,WAAAa,eAAAlnG,eAAAmrD,KAEAhpD,KAAAkkG,WAAAa,eAAA/7C,GAAA,CAAA,GAEAhpD,KAAAkkG,WAAAa,eAAA/7C,GAAAnrD,eAAAk5F,KAEA/2F,KAAAkkG,WAAAa,eAAA/7C,GAAA+tC,IAAA,EAEA,GAAA,CAAA94F,IAAA,6BAAAlB,MAEA,SAAAisD,GAEAhpD,KAAAkkG,WAAAc,WAAAnnG,eAAAmrD,KAEAhpD,KAAAkkG,WAAAc,WAAAh8C,GAAA,GAEA,GAAA,CAAA/qD,IAAA,8BAAAlB,MAEA,SAAAisD,EAAA+tC,GAEA/2F,KAAAulG,+BAAAv8C,EAAA+tC,GAEA,IAAA3yB,EAAApkE,KAAAkkG,WAAAa,eAAA/7C,GAAA+tC,GAeA,OAbA/2F,KAAAokG,eAEApkG,KAAAqkG,SAAAK,OAAAziG,KAAAjC,KAAA4kG,oBAAA57C,EAAA+tC,IAGA3yB,EAAA5nE,OAAAwD,KAAAmkG,sBAEAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,6CAAA3sB,OAAA2lD,EAAA,8BAAA3lD,OAAArD,KAAAmkG,sBAAA,gBAAA,CAAA5P,QAAAnwB,EAAAh6D,UAAA,EAAApK,KAAAmkG,yBAIAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,6CAAA3sB,OAAA2lD,EAAA,QAAA3lD,OAAA0zF,EAAA,KAAA,CAAAxC,QAAAnwB,IAEAA,CACA,GAAA,CAAAnmE,IAAA,6BAAAlB,MAEA,SAAAisD,EAAA+tC,EAAAv4D,GAmBA,OAjBAx+B,KAAAulG,+BAAAv8C,EAAA+tC,GAEA/2F,KAAAkkG,WAAAa,eAAA/7C,GAAA+tC,GAAAv4D,EAEAx+B,KAAAokG,eAEApkG,KAAAqkG,SAAAK,OAAAziG,KAAAjC,KAAA4kG,oBAAA57C,EAAA+tC,IAGAv4D,EAAAhiC,OAAAwD,KAAAmkG,sBAEAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,4CAAA3sB,OAAA2lD,EAAA,8BAAA3lD,OAAArD,KAAAmkG,sBAAA,gBAAA,CAAA5P,QAAA/1D,EAAAp0B,UAAA,EAAApK,KAAAmkG,yBAIAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,4CAAA3sB,OAAA2lD,EAAA,QAAA3lD,OAAA0zF,EAAA,KAAA,CAAAxC,QAAA/1D,IAEAA,CACA,GAAA,CAAAvgC,IAAA,gCAAAlB,MAEA,SAAAisD,EAAA+tC,GAEA/2F,KAAAulG,+BAAAv8C,EAAA+tC,GAEA,IAAA3yB,EAAApkE,KAAAkkG,WAAAa,eAAA/7C,GAAA+tC,GAkBA,OAhBA/2F,KAAAokG,eAEApkG,KAAAqkG,SAAAK,OAAAziG,KAAAjC,KAAA4kG,oBAAA57C,EAAA+tC,IAGA3yB,EAAA5nE,OAAAwD,KAAAmkG,sBAEAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,+CAAA3sB,OAAA2lD,EAAA,8BAAA3lD,OAAArD,KAAAmkG,sBAAA,gBAAA,CAAA5P,QAAAnwB,EAAAh6D,UAAA,EAAApK,KAAAmkG,yBAIAnkG,KAAAg8D,KAAAvvC,IAAAuD,KAAA,+CAAA3sB,OAAA2lD,EAAA,QAAA3lD,OAAA0zF,EAAA,KAAA,CAAAxC,QAAAnwB,WAGApkE,KAAAkkG,WAAAa,eAAA/7C,GAAA+tC,IAEA,CACA,GAAA,CAAA94F,IAAA,0BAAAlB,MAEA,SAAAisD,EAAA2tC,GAEA32F,KAAAwlG,2BAAAx8C,GAEA,IAAAob,EAAApkE,KAAAkkG,WAAAc,WAAAh8C,GAAAnkD,QAAA8xF,IAAA,EAQA,OANA32F,KAAAokG,eAEApkG,KAAAqkG,SAAAK,OAAAziG,KAAAjC,KAAA4kG,oBAAA57C,EAAA2tC,IAEA32F,KAAAg8D,KAAAvvC,IAAAuD,KAAA,yCAAA3sB,OAAA2lD,EAAA,QAAA3lD,OAAAszF,EAAA,KAAA,CAAApC,QAAAnwB,IAEAA,CACA,GAAA,CAAAnmE,IAAA,yBAAAlB,MAEA,SAAAisD,EAAA2tC,GAEA32F,KAAAwlG,2BAAAx8C,GAEA,IAAAob,EAAApkE,KAAAkkG,WAAAc,WAAAh8C,GAaA,OAXAhpD,KAAAkkG,WAAAc,WAAAh8C,GAAAnkD,QAAA8xF,IAAA,GAEA32F,KAAAkkG,WAAAc,WAAAh8C,GAAA/mD,KAAA00F,GAGA32F,KAAAokG,eAEApkG,KAAAqkG,SAAAK,OAAAziG,KAAAjC,KAAA4kG,oBAAA57C,EAAA2tC,IAEA32F,KAAAg8D,KAAAvvC,IAAAuD,KAAA,wCAAA3sB,OAAA2lD,EAAA,QAAA3lD,OAAAszF,EAAA,KAAA,CAAApC,QAAAnwB,EAAAz/D,KAAA,OAEAy/D,CACA,GAAA,CAAAnmE,IAAA,4BAAAlB,MAEA,SAAAisD,EAAA2tC,GAEA32F,KAAAwlG,2BAAAx8C,GAEA,IAAAob,EAAApkE,KAAAkkG,WAAAc,WAAAh8C,GAUA,OARAhpD,KAAAkkG,WAAAc,WAAAh8C,GAAA1I,OAAAq2C,GAEA32F,KAAAokG,eAEApkG,KAAAqkG,SAAAK,OAAAziG,KAAAjC,KAAA4kG,oBAAA57C,EAAA2tC,IAEA32F,KAAAg8D,KAAAvvC,IAAAuD,KAAA,2CAAA3sB,OAAA2lD,EAAA,QAAA3lD,OAAAszF,EAAA,KAAA,CAAApC,QAAAnwB,EAAAz/D,KAAA,OAEAy/D,CACA,IAAA,CA7RA,GAgSA1kE,EAAAD,QAAAqlG,CxKgv4BA,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KCvi5BX,CDui5BiB,IACjB","file":"pict.compatible.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Pict = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar eachOfLimit = require('async.util.eachoflimit');\nvar withoutIndex = require('async.util.withoutindex');\n\nmodule.exports = function eachLimit(arr, limit, iterator, cb) {\n    return eachOfLimit(limit)(arr, withoutIndex(iterator), cb);\n};\n\n},{\"async.util.eachoflimit\":3,\"async.util.withoutindex\":14}],2:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(tasks) {\n    function makeCallback(index) {\n        function fn() {\n            if (tasks.length) {\n                tasks[index].apply(null, arguments);\n            }\n            return fn.next();\n        }\n        fn.next = function() {\n            return (index < tasks.length - 1) ? makeCallback(index + 1) : null;\n        };\n        return fn;\n    }\n    return makeCallback(0);\n};\n\n},{}],3:[function(require,module,exports){\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar onlyOnce = require('async.util.onlyonce');\nvar keyIterator = require('async.util.keyiterator');\n\nmodule.exports = function eachOfLimit(limit) {\n    return function(obj, iterator, cb) {\n        cb = once(cb || noop);\n        obj = obj || [];\n        var nextKey = keyIterator(obj);\n        if (limit <= 0) {\n            return cb(null);\n        }\n        var done = false;\n        var running = 0;\n        var errored = false;\n\n        (function replenish() {\n            if (done && running <= 0) {\n                return cb(null);\n            }\n\n            while (running < limit && !errored) {\n                var key = nextKey();\n                if (key === null) {\n                    done = true;\n                    if (running <= 0) {\n                        cb(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iterator(obj[key], key, onlyOnce(function(err) {\n                    running -= 1;\n                    if (err) {\n                        cb(err);\n                        errored = true;\n                    } else {\n                        replenish();\n                    }\n                }));\n            }\n        })();\n    };\n};\n\n},{\"async.util.keyiterator\":7,\"async.util.noop\":9,\"async.util.once\":10,\"async.util.onlyonce\":11}],4:[function(require,module,exports){\n'use strict';\nvar setImmediate = require('async.util.setimmediate');\nvar restParam = require('async.util.restparam');\n\nmodule.exports = function(fn) {\n    return restParam(function(args) {\n        var callback = args.pop();\n        args.push(function() {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate(function() {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        var sync = true;\n        fn.apply(this, args);\n        sync = false;\n    });\n};\n\n},{\"async.util.restparam\":12,\"async.util.setimmediate\":13}],5:[function(require,module,exports){\n'use strict';\n\nmodule.exports = Array.isArray || function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar isArray = require('async.util.isarray');\n\nmodule.exports = function isArrayLike(arr) {\n    return isArray(arr) || (\n        // has a positive integer length property\n        typeof arr.length === 'number' &&\n        arr.length >= 0 &&\n        arr.length % 1 === 0\n    );\n};\n\n},{\"async.util.isarray\":5}],7:[function(require,module,exports){\n'use strict';\n\nvar _keys = require('async.util.keys');\nvar isArrayLike = require('async.util.isarraylike');\n\nmodule.exports = function keyIterator(coll) {\n    var i = -1;\n    var len;\n    var keys;\n    if (isArrayLike(coll)) {\n        len = coll.length;\n        return function next() {\n            i++;\n            return i < len ? i : null;\n        };\n    } else {\n        keys = _keys(coll);\n        len = keys.length;\n        return function next() {\n            i++;\n            return i < len ? keys[i] : null;\n        };\n    }\n};\n\n},{\"async.util.isarraylike\":6,\"async.util.keys\":8}],8:[function(require,module,exports){\n'use strict';\n\nmodule.exports = Object.keys || function keys(obj) {\n    var _keys = [];\n    for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            _keys.push(k);\n        }\n    }\n    return _keys;\n};\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function noop () {};\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function once(fn) {\n    return function() {\n        if (fn === null) return;\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function only_once(fn) {\n    return function() {\n        if (fn === null) throw new Error('Callback was already called.');\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n\n},{}],12:[function(require,module,exports){\n'use strict';\nmodule.exports = function restParam(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n        var length = Math.max(arguments.length - startIndex, 0);\n        var rest = new Array(length);\n        for (var index = 0; index < length; index++) {\n            rest[index] = arguments[index + startIndex];\n        }\n        switch (startIndex) {\n            case 0:\n                return func.call(this, rest);\n            case 1:\n                return func.call(this, arguments[0], rest);\n        }\n    };\n};\n\n},{}],13:[function(require,module,exports){\n(function (setImmediate){(function (){\n'use strict';\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\nvar fallback = function(fn) {\n    setTimeout(fn, 0);\n};\n\nmodule.exports = function setImmediate(fn) {\n    // not a direct alias for IE10 compatibility\n    return (_setImmediate || fallback)(fn);\n};\n\n}).call(this)}).call(this,require(\"timers\").setImmediate)\n\n},{\"timers\":155}],14:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function withoutIndex(iterator) {\n    return function(value, index, callback) {\n        return iterator(value, callback);\n    };\n};\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar isArray = require('async.util.isarray');\nvar restParam = require('async.util.restparam');\nvar ensureAsync = require('async.util.ensureasync');\nvar iterator = require('async.iterator');\n\nmodule.exports = function(tasks, cb) {\n    cb = once(cb || noop);\n    if (!isArray(tasks)) return cb(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return cb();\n\n    function wrapIterator(iterator) {\n        return restParam(function(err, args) {\n            if (err) {\n                cb.apply(null, [err].concat(args));\n            } else {\n                var next = iterator.next();\n                if (next) {\n                    args.push(wrapIterator(next));\n                } else {\n                    args.push(cb);\n                }\n                ensureAsync(iterator).apply(null, args);\n            }\n        });\n    }\n    wrapIterator(iterator(tasks))();\n};\n\n},{\"async.iterator\":2,\"async.util.ensureasync\":4,\"async.util.isarray\":5,\"async.util.noop\":9,\"async.util.once\":10,\"async.util.restparam\":12}],16:[function(require,module,exports){\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n},{}],17:[function(require,module,exports){\n/*\r\n *  big.js v6.2.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2022 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,            // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n    /*\r\n     * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n     * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n     * primitive number without a loss of precision.\r\n     */\r\n    STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        if (typeof n !== 'string') {\r\n          if (Big.strict === true && typeof n !== 'bigint') {\r\n            throw TypeError(INVALID + 'value');\r\n          }\r\n\r\n          // Minus zero?\r\n          n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n        }\r\n\r\n        parse(x, n);\r\n      }\r\n\r\n      // Retain a reference to this Big constructor.\r\n      // Shadow Big.prototype.constructor which points to Object.\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.strict = STRICT;\r\n    Big.roundDown = 0;\r\n    Big.roundHalfUp = 1;\r\n    Big.roundHalfEven = 2;\r\n    Big.roundUp = 3;\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    if (!NUMERIC.test(n)) {\r\n      throw Error(INVALID + 'number');\r\n    }\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n   * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, sd, rm, more) {\r\n    var xc = x.c;\r\n\r\n    if (rm === UNDEFINED) rm = x.constructor.RM;\r\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    if (sd < 1) {\r\n      more =\r\n        rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n        rm === 1 && xc[0] >= 5 ||\r\n        rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n      );\r\n\r\n      xc.length = 1;\r\n\r\n      if (more) {\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        x.e = x.e - sd + 1;\r\n        xc[0] = 1;\r\n      } else {\r\n\r\n        // Zero.\r\n        xc[0] = x.e = 0;\r\n      }\r\n    } else if (sd < xc.length) {\r\n\r\n      // xc[sd] is the digit after the digit that may be rounded up.\r\n      more =\r\n        rm === 1 && xc[sd] >= 5 ||\r\n        rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n          (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n        rm === 3 && (more || !!xc[0]);\r\n\r\n      // Remove any digits after the required precision.\r\n      xc.length = sd;\r\n\r\n      // Round up?\r\n      if (more) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up.\r\n        for (; ++xc[--sd] > 9;) {\r\n          xc[sd] = 0;\r\n          if (sd === 0) {\r\n            ++x.e;\r\n            xc.unshift(1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (sd = xc.length; !xc[--sd];) xc.pop();\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   */\r\n  function stringify(x, doExponential, isNonzero) {\r\n    var e = x.e,\r\n      s = x.c.join(''),\r\n      n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (doExponential) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) {\r\n        for (e -= n; e--;) s += '0';\r\n      } else if (e < n) {\r\n        s = s.slice(0, e) + '.' + s.slice(e);\r\n      }\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && isNonzero ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n   */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) {\r\n      y.s = k;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n    q.s = k;\r\n    k = p < 0 ? 0 : p;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n      p--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (yc[0]) {\r\n        y.s = -b;\r\n      } else if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = 1;\r\n      }\r\n      return y;\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n  \r\n  \r\n  /*\r\n   * Return a new Big whose value is the value of this Big negated.\r\n   */\r\n  P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var e, k, t,\r\n      x = this,\r\n      Big = x.constructor;\r\n\r\n    y = new Big(y);\r\n\r\n    // Signs differ?\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (!yc[0]) {\r\n        if (xc[0]) {\r\n          y = new Big(x);\r\n        } else {\r\n          y.s = x.s;\r\n        }\r\n      }\r\n      return y;\r\n    }\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (e = xe - ye) {\r\n      if (e > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        e = -e;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; e--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    e = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (k) {\r\n      xc.unshift(k);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor('1'),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n      throw Error(INVALID + 'exponent');\r\n    }\r\n\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n   * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.prec = function (sd, rm) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    return round(new this.constructor(this), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n   * using rounding mode rm, or Big.RM if rm is not specified.\r\n   * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.round = function (dp, rm) {\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    return round(new this.constructor(this), dp + this.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big('0.5');\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) {\r\n      throw Error(NAME + 'No square root');\r\n    }\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s + '');\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) {\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = b;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), ++dp, rm);\r\n      for (; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, true, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n      // x.e may have changed if the value is rounded up.\r\n      for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, false, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toJSON = P.toString = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Big as a primitve number.\r\n   */\r\n  P.toNumber = function () {\r\n    var n = Number(stringify(this, true, true));\r\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n      throw Error(NAME + 'Imprecise conversion');\r\n    }\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * rounding mode rm, or Big.RM if rm is not specified.\r\n   * Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      n = x.c[0];\r\n\r\n    if (sd !== UNDEFINED) {\r\n      if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n        throw Error(INVALID + 'precision');\r\n      }\r\n      x = round(new Big(x), sd, rm);\r\n      for (; x.c.length < sd;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    if (Big.strict === true) {\r\n      throw Error(NAME + 'valueOf disallowed');\r\n    }\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n\n},{}],18:[function(require,module,exports){\n\n},{}],19:[function(require,module,exports){\narguments[4][18][0].apply(exports,arguments)\n},{\"dup\":18}],20:[function(require,module,exports){\n(function (Buffer){(function (){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"base64-js\":16,\"buffer\":20,\"ieee754\":97}],21:[function(require,module,exports){\nmodule.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n\n},{}],22:[function(require,module,exports){\n/**\n* Cache data structure with:\n*  - enumerable items\n*  - unique hash item access (if none is passed in, one is generated)\n*  - size (length) expiration\n*  - controllable expiration (e.g. keep in cache longer if older/less likely to change)\n*  - time-based expiration\n*  - custom expiration based on passed-in function\n*\n* Also:\n*  - built to work well with browserify\n*  - no dependencies at all\n*  - pet friendly\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nconst libLinkedList = require(`./LinkedList.js`);\n\nclass CashMoney extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'ObjectCache';\n\n\t\t// The map of node objects by hash because Reasons.\n\t\tthis._HashMap = {};\n\n\t\tthis._RecordMap = {};\n\n\t\tthis._List = new libLinkedList();\n\n\t\t// If the list gets over maxLength, we will automatically remove nodes on insertion.\n\t\tthis.maxLength = 0;\n\n\t\t// If cache entries get over this age, they are removed with prune\n\t\tthis.maxAge = 0;\n\t}\n\n\tget RecordMap()\n\t{\n\t\treturn this._RecordMap;\n\t}\n\n\t// Add (or update) a node in the cache\n\tput(pData, pHash)\n\t{\n\t\t// If the hash of the record exists\n\t\tif (this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\t// Just update the hashed records datum\n\t\t\tthis._HashMap[pHash].Datum = pData;\n\t\t\tthis._RecordMap[pHash] = pData;\n\t\t\treturn this._HashMap[pHash].Datum;\n\t\t}\n\n\t\tlet tmpNode = this._List.push(pData, pHash);\n\t\tthis._HashMap[tmpNode.Hash] = tmpNode;\n\t\tthis._RecordMap[pHash] = pData;\n\n\t\t// Automatically prune if over length, but only prune this nodes worth.\n\t\tif (this.maxLength > 0   &&   this._List.length > this.maxLength)\n\t\t{\n\t\t\t// Pop it off the head of the list\n\t\t\ttmpNode = this._List.pop();\n\t\t\t// Also remove it from the hashmap\n\t\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\t\tdelete this._HashMap[tmpNode.Hash];\n\t\t}\n\n\t\t// Now some expiration properties on the node metadata... namely the birthdate in ms of the node\n\t\ttmpNode.Metadata.Created = +new Date();\n\n\t\treturn tmpNode.Datum;\n\t}\n\n\t// Read a datum by hash from the cache\n\tread(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._HashMap[pHash].Datum;\n\t}\n\n\t// Reinvigorate a node based on hash, updating the timestamp and moving it to the head of the list (also removes custom metadata)\n\ttouch(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get the old node out of the list\n\t\tlet tmpNode = this._List.remove(this._HashMap[pHash]);\n\t\t// Remove it from the hash map\n\t\tdelete this._RecordMap[pHash];\n\t\tdelete this._HashMap[pHash];\n\n\t\t// Now put it back, fresh.\n\t\treturn this.put(tmpNode.Datum, tmpNode.Hash);\n\t}\n\n\t// Expire a cached record based on hash\n\texpire(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpNode = this._HashMap[pHash];\n\n\t\t// Remove it from the list of cached records\n\t\ttmpNode = this._List.remove(tmpNode);\n\t\t// Also remove it from the hashmap\n\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\tdelete this._HashMap[tmpNode.Hash];\n\n\t\t// Return it in case the consumer wants to do anything with it\n\t\treturn tmpNode;\n\t}\n\n\t// Prune records from the cached set based on maxAge\n\tpruneBasedOnExpiration(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tif (this.maxAge < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now enumerate each record and remove any that are expired\n\t\tlet tmpNow = +new Date();\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\t// Expire the node if it is older than max age milliseconds\n\t\t\tif (tmpNow - this._HashMap[tmpKeys[i]].Metadata.Created >= this.maxAge)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on maxLength\n\tpruneBasedOnLength(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\t// Pop records off until we have reached maxLength unless it's 0\n\t\tif (this.maxLength > 0)\n\t\t{\n\t\t\twhile (this._List.length > this.maxLength)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this._List.pop());\n\t\t\t}\n\t\t}\n\n\t\treturn fComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on passed in pPruneFunction(pDatum, pHash, pNode) -- returning true expires it\n\tpruneCustom(fComplete, fPruneFunction, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\tlet tmpNode = this._HashMap[tmpKeys[i]];\n\t\t\t// Expire the node if the passed in function returns true\n\t\t\tif (fPruneFunction(tmpNode.Datum, tmpNode.Hash, tmpNode))\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune the list down to the asserted rules (max age then max length if still too long)\n\tprune(fComplete)\n\t{\n\t\tlet tmpRemovedRecords = [];\n\n\t\t// If there are no cached records, we are done.\n\t\tif (this._List.length < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now prune based on expiration time\n\t\tthis.pruneBasedOnExpiration((fExpirationPruneComplete)=>\n\t\t\t{\n\t\t\t\t// Now prune based on length, then return the removed records in the callback.\n\t\t\t\tthis.pruneBasedOnLength(fComplete, tmpRemovedRecords);\n\t\t\t}, tmpRemovedRecords);\n\t}\n\n\t// Get a low level node (including metadata statistics) by hash from the cache\n\tgetNode(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\n\t\treturn this._HashMap[pHash];\n\t}\n}\n\nmodule.exports = CashMoney;\n},{\"./LinkedList.js\":24,\"fable-serviceproviderbase\":52}],23:[function(require,module,exports){\n/**\n* Double Linked List Node\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Linked List Node Prototype\n*\n* @class LinkedListNode\n* @constructor\n*/\n\nclass LinkedListNode\n{\n\tconstructor()\n\t{\n\t\tthis.Hash = false;\n\t\tthis.Datum = false;\n\n\t\t// This is where expiration and other elements are stored;\n\t\tthis.Metadata = {};\n\n\t\tthis.LeftNode = false;\n\t\tthis.RightNode = false;\n\n\t\t// To allow safe specialty operations on nodes\n\t\tthis.__ISNODE = true;\n\t}\n}\n\nmodule.exports = LinkedListNode;\n},{}],24:[function(require,module,exports){\n\"use strict\"\n/**\n* Simple double linked list to hold the cache entries in, in order.\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module FeeFiFo\n*/\n\nconst libLinkedListNode = require('./LinkedList-Node.js');\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nclass LinkedList\n{\n\tconstructor()\n\t{\n\t\t// Total number of nodes ever processed by this ADT\n\t\tthis.totalNodes = 0;\n\n\t\t// The length of the set of nodes currently in the list\n\t\tthis.length = 0;\n\n\t\tthis.head = false;\n\t\tthis.tail = false;\n\t}\n\n\t// Create a node object.\n\tinitializeNode(pDatum, pHash)\n\t{\n\t\t// Don't allow undefined to be added to the list because of reasons\n\t\tif (typeof(pDatum) === 'undefined')\n\t\t\treturn false;\n\n\t\tthis.totalNodes++;\n\n\t\t// Get (or create) a unique hash\n\t\tlet tmpHash = (typeof(pHash) != 'undefined') ? pHash : `NODE[${this.totalNodes}]`;\n\n\t\tlet tmpNode = new libLinkedListNode();\n\n\t\ttmpNode.Hash = tmpHash;\n\t\ttmpNode.Datum = pDatum;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Add a node to the end (right of tail) of the list.\n\tappend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.tail.RightNode = tmpNode;\n\t\ttmpNode.LeftNode = this.tail;\n\t\tthis.tail = tmpNode;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Append to tail of list (FIFO)\n\tpush(pDatum, pHash)\n\t{\n\t\treturn this.append(pDatum, pHash);\n\t}\n\n\t// Add a node to the beginning (left of head) of the list.\n\tprepend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.head.LeftNode = tmpNode;\n\t\ttmpNode.RightNode = this.head;\n\t\tthis.head = tmpNode;\n\t\treturn tmpNode;\n\t}\n\n\t// Remove a node from the list\n\tremove(pNode)\n\t{\n\t\tif (typeof(pNode) === 'undefined')\n\t\t\treturn false;\n\n\t\tif (!pNode.__ISNODE)\n\t\t\treturn false;\n\n\t\tthis.length--;\n\n\t\t// Last element in list.  Empty it out.\n\t\tif (this.length < 1)\n\t\t{\n\t\t\tthis.head = false;\n\t\t\tthis.tail = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's somewhere in the middle, surgically remove it.\n\t\tif (pNode.LeftNode && pNode.RightNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = pNode.RightNode;\n\t\t\tpNode.RightNode.LeftNode = pNode.LeftNode;\n\n\t\t\tpNode.RightNode = false;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's the tail\n\t\tif (pNode.LeftNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = false;\n\t\t\tthis.tail = pNode.LeftNode;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It must be the head\n\t\tpNode.RightNode.LeftNode = false;\n\t\tthis.head = pNode.RightNode;\n\t\tpNode.RightNode = false;\n\t\treturn pNode;\n\t}\n\n\t// Remove the head of the list (FIFO)\n\tpop()\n\t{\n\t\treturn this.remove(this.head);\n\t}\n\n\t// Enumerate over each node IN ORDER, running the function fAction(pDatum, pHash, fCallback) then calling the function fComplete callback when done\n\teach(fAction, fComplete)\n\t{\n\t\tif (this.length < 1)\n\t\t\treturn fComplete();\n\n\t\tlet tmpNode = false;\n\n\t\tlet fIterator = (pError)=>\n\t\t{\n\t\t\t// If the user passed in a callback with an error, call their callback with the error\n\t\t\tif (pError)\n\t\t\t\treturn fComplete(pError);\n\n\t\t\t// If there is no node, this must be the initial run.\n\t\t\tif (!tmpNode)\n\t\t\t\ttmpNode = this.head;\n\t\t\t// Check if we are at the tail of the list\n\t\t\telse if (!tmpNode.RightNode)\n\t\t\t\treturn fComplete();\n\t\t\t// Proceed to the next node\n\t\t\telse\n\t\t\t\ttmpNode = tmpNode.RightNode;\n\n\t\t\t// Call the actual action\n\t\t\t// I hate this pattern because long tails eventually cause stack overflows.\n\t\t\tfAction(tmpNode.Datum, tmpNode.Hash, fIterator);\n\t\t};\n\n\t\t// Now kick off the iterator\n\t\treturn fIterator();\n\t}\n\n\t// Seek a specific node, 0 is the index of the first node.\n\tseek(pNodeIndex)\n\t{\n\t\tif (!pNodeIndex)\n\t\t\treturn false;\n\t\tif (this.length < 1)\n\t\t\treturn false;\n\t\tif (pNodeIndex >= this.length)\n\t\t\treturn false;\n\n\t\tlet tmpNode = this.head;\n\t\tfor (let i = 0; i < pNodeIndex; i++)\n\t\t{\n\t\t\ttmpNode = tmpNode.RightNode;\n\t\t}\n\n\t\treturn tmpNode;\n\t}\n}\n\nmodule.exports = LinkedList;\n},{\"./LinkedList-Node.js\":23}],25:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n\n},{\"./\":26,\"get-intrinsic\":89}],26:[function(require,module,exports){\n'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\nvar setFunctionLength = require('set-function-length');\n\nvar $TypeError = require('es-errors/type');\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $defineProperty = require('es-define-property');\nvar $max = GetIntrinsic('%Math.max%');\n\nmodule.exports = function callBind(originalFunction) {\n\tif (typeof originalFunction !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\tvar func = $reflectApply(bind, $call, arguments);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + $max(0, originalFunction.length - (arguments.length - 1)),\n\t\ttrue\n\t);\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n\n},{\"es-define-property\":37,\"es-errors/type\":43,\"function-bind\":88,\"get-intrinsic\":89,\"set-function-length\":131}],27:[function(require,module,exports){\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.partitioned) {\n    str += '; Partitioned'\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} val\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n},{}],28:[function(require,module,exports){\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));\n},{}],29:[function(require,module,exports){\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_advancedFormat=t()}(this,(function(){\"use strict\";return function(e,t){var r=t.prototype,n=r.format;r.format=function(e){var t=this,r=this.$locale();if(!this.isValid())return n.bind(this)(e);var s=this.$utils(),a=(e||\"YYYY-MM-DDTHH:mm:ssZ\").replace(/\\[([^\\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g,(function(e){switch(e){case\"Q\":return Math.ceil((t.$M+1)/3);case\"Do\":return r.ordinal(t.$D);case\"gggg\":return t.weekYear();case\"GGGG\":return t.isoWeekYear();case\"wo\":return r.ordinal(t.week(),\"W\");case\"w\":case\"ww\":return s.s(t.week(),\"w\"===e?1:2,\"0\");case\"W\":case\"WW\":return s.s(t.isoWeek(),\"W\"===e?1:2,\"0\");case\"k\":case\"kk\":return s.s(String(0===t.$H?24:t.$H),\"k\"===e?1:2,\"0\");case\"X\":return Math.floor(t.$d.getTime()/1e3);case\"x\":return t.$d.getTime();case\"z\":return\"[\"+t.offsetName()+\"]\";case\"zzz\":return\"[\"+t.offsetName(\"long\")+\"]\";default:return e}}));return n.bind(this)(a)}}}));\n},{}],30:[function(require,module,exports){\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isoWeek=t()}(this,(function(){\"use strict\";var e=\"day\";return function(t,i,s){var a=function(t){return t.add(4-t.isoWeekday(),e)},d=i.prototype;d.isoWeekYear=function(){return a(this).year()},d.isoWeek=function(t){if(!this.$utils().u(t))return this.add(7*(t-this.isoWeek()),e);var i,d,n,o,r=a(this),u=(i=this.isoWeekYear(),d=this.$u,n=(d?s.utc:s)().year(i).startOf(\"year\"),o=4-n.isoWeekday(),n.isoWeekday()>4&&(o+=7),n.add(o,e));return r.diff(u,\"week\")+1},d.isoWeekday=function(e){return this.$utils().u(e)?this.day()||7:this.day(this.day()%7?e:e-7)};var n=d.startOf;d.startOf=function(e,t){var i=this.$utils(),s=!!i.u(t)||t;return\"isoweek\"===i.p(e)?s?this.date(this.date()-(this.isoWeekday()-1)).startOf(\"day\"):this.date(this.date()-1-(this.isoWeekday()-1)+7).endOf(\"day\"):n.bind(this)(e,t)}}}));\n},{}],31:[function(require,module,exports){\n!function(r,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(r=\"undefined\"!=typeof globalThis?globalThis:r||self).dayjs_plugin_relativeTime=e()}(this,(function(){\"use strict\";return function(r,e,t){r=r||{};var n=e.prototype,o={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"};function i(r,e,t,o){return n.fromToBase(r,e,t,o)}t.en.relativeTime=o,n.fromToBase=function(e,n,i,d,u){for(var f,a,s,l=i.$locale().relativeTime||o,h=r.thresholds||[{l:\"s\",r:44,d:\"second\"},{l:\"m\",r:89},{l:\"mm\",r:44,d:\"minute\"},{l:\"h\",r:89},{l:\"hh\",r:21,d:\"hour\"},{l:\"d\",r:35},{l:\"dd\",r:25,d:\"day\"},{l:\"M\",r:45},{l:\"MM\",r:10,d:\"month\"},{l:\"y\",r:17},{l:\"yy\",d:\"year\"}],m=h.length,c=0;c<m;c+=1){var y=h[c];y.d&&(f=d?t(e).diff(i,y.d,!0):i.diff(e,y.d,!0));var p=(r.rounding||Math.round)(Math.abs(f));if(s=f>0,p<=y.r||!y.r){p<=1&&c>0&&(y=h[c-1]);var v=l[y.l];u&&(p=u(\"\"+p)),a=\"string\"==typeof v?v.replace(\"%d\",p):v(p,n,y.l,s);break}}if(n)return a;var M=s?l.future:l.past;return\"function\"==typeof M?M(a):M.replace(\"%s\",a)},n.to=function(r,e){return i(r,e,this,!0)},n.from=function(r,e){return i(r,e,this)};var d=function(r){return r.$u?t.utc():t()};n.toNow=function(r){return this.to(d(this),r)},n.fromNow=function(r){return this.from(d(this),r)}}}));\n},{}],32:[function(require,module,exports){\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_timezone=e()}(this,(function(){\"use strict\";var t={year:0,month:1,day:2,hour:3,minute:4,second:5},e={};return function(n,i,o){var r,a=function(t,n,i){void 0===i&&(i={});var o=new Date(t),r=function(t,n){void 0===n&&(n={});var i=n.timeZoneName||\"short\",o=t+\"|\"+i,r=e[o];return r||(r=new Intl.DateTimeFormat(\"en-US\",{hour12:!1,timeZone:t,year:\"numeric\",month:\"2-digit\",day:\"2-digit\",hour:\"2-digit\",minute:\"2-digit\",second:\"2-digit\",timeZoneName:i}),e[o]=r),r}(n,i);return r.formatToParts(o)},u=function(e,n){for(var i=a(e,n),r=[],u=0;u<i.length;u+=1){var f=i[u],s=f.type,m=f.value,c=t[s];c>=0&&(r[c]=parseInt(m,10))}var d=r[3],l=24===d?0:d,h=r[0]+\"-\"+r[1]+\"-\"+r[2]+\" \"+l+\":\"+r[4]+\":\"+r[5]+\":000\",v=+e;return(o.utc(h).valueOf()-(v-=v%1e3))/6e4},f=i.prototype;f.tz=function(t,e){void 0===t&&(t=r);var n=this.utcOffset(),i=this.toDate(),a=i.toLocaleString(\"en-US\",{timeZone:t}),u=Math.round((i-new Date(a))/1e3/60),f=o(a,{locale:this.$L}).$set(\"millisecond\",this.$ms).utcOffset(15*-Math.round(i.getTimezoneOffset()/15)-u,!0);if(e){var s=f.utcOffset();f=f.add(n-s,\"minute\")}return f.$x.$timezone=t,f},f.offsetName=function(t){var e=this.$x.$timezone||o.tz.guess(),n=a(this.valueOf(),e,{timeZoneName:t}).find((function(t){return\"timezonename\"===t.type.toLowerCase()}));return n&&n.value};var s=f.startOf;f.startOf=function(t,e){if(!this.$x||!this.$x.$timezone)return s.call(this,t,e);var n=o(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\"),{locale:this.$L});return s.call(n,t,e).tz(this.$x.$timezone,!0)},o.tz=function(t,e,n){var i=n&&e,a=n||e||r,f=u(+o(),a);if(\"string\"!=typeof t)return o(t).tz(a);var s=function(t,e,n){var i=t-60*e*1e3,o=u(i,n);if(e===o)return[i,e];var r=u(i-=60*(o-e)*1e3,n);return o===r?[i,o]:[t-60*Math.min(o,r)*1e3,Math.max(o,r)]}(o.utc(t,i).valueOf(),f,a),m=s[0],c=s[1],d=o(m).utcOffset(c);return d.$x.$timezone=a,d},o.tz.guess=function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},o.tz.setDefault=function(t){r=t}}}));\n},{}],33:[function(require,module,exports){\n!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_utc=i()}(this,(function(){\"use strict\";var t=\"minute\",i=/[+-]\\d\\d(?::?\\d\\d)?/g,e=/([+-]|\\d\\d)/g;return function(s,f,n){var u=f.prototype;n.utc=function(t){var i={date:t,utc:!0,args:arguments};return new f(i)},u.utc=function(i){var e=n(this.toDate(),{locale:this.$L,utc:!0});return i?e.add(this.utcOffset(),t):e},u.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var o=u.parse;u.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),o.call(this,t)};var r=u.init;u.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else r.call(this)};var a=u.utcOffset;u.utcOffset=function(s,f){var n=this.$utils().u;if(n(s))return this.$u?0:n(this.$offset)?a.call(this):this.$offset;if(\"string\"==typeof s&&(s=function(t){void 0===t&&(t=\"\");var s=t.match(i);if(!s)return null;var f=(\"\"+s[0]).match(e)||[\"-\",0,0],n=f[0],u=60*+f[1]+ +f[2];return 0===u?0:\"+\"===n?u:-u}(s),null===s))return this;var u=Math.abs(s)<=16?60*s:s,o=this;if(f)return o.$offset=u,o.$u=0===s,o;if(0!==s){var r=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(o=this.local().add(u+r,t)).$offset=u,o.$x.$localOffset=r}else o=this.utc();return o};var h=u.format;u.format=function(t){var i=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return h.call(this,i)},u.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*t},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var l=u.toDate;u.toDate=function(t){return\"s\"===t&&this.$offset?n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate():l.call(this)};var c=u.diff;u.diff=function(t,i,e){if(t&&this.$u===t.$u)return c.call(this,t,i,e);var s=this.local(),f=n(t).local();return c.call(s,f,i,e)}}}));\n},{}],34:[function(require,module,exports){\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekOfYear=t()}(this,(function(){\"use strict\";var e=\"week\",t=\"year\";return function(i,n,r){var f=n.prototype;f.week=function(i){if(void 0===i&&(i=null),null!==i)return this.add(7*(i-this.week()),\"day\");var n=this.$locale().yearStart||1;if(11===this.month()&&this.date()>25){var f=r(this).startOf(t).add(1,t).date(n),s=r(this).endOf(e);if(f.isBefore(s))return 1}var a=r(this).startOf(t).date(n).startOf(e).subtract(1,\"millisecond\"),o=this.diff(a,e,!0);return o<0?r(this).startOf(\"week\").week():Math.ceil(o)},f.weeks=function(e){return void 0===e&&(e=null),this.week(e)}}}));\n},{}],35:[function(require,module,exports){\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekday=t()}(this,(function(){\"use strict\";return function(e,t){t.prototype.weekday=function(e){var t=this.$locale().weekStart||0,i=this.$W,n=(i<t?i+7:i)-t;return this.$utils().u(e)?n:this.subtract(n,\"day\").add(e,\"day\")}}}));\n},{}],36:[function(require,module,exports){\n'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar gopd = require('gopd');\n\n/** @type {import('.')} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n\n},{\"es-define-property\":37,\"es-errors/syntax\":42,\"es-errors/type\":43,\"gopd\":90}],37:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\n/** @type {import('.')} */\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n\n},{\"get-intrinsic\":89}],38:[function(require,module,exports){\n'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n\n},{}],39:[function(require,module,exports){\n'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n\n},{}],40:[function(require,module,exports){\n'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n\n},{}],41:[function(require,module,exports){\n'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n\n},{}],42:[function(require,module,exports){\n'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n\n},{}],43:[function(require,module,exports){\n'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n\n},{}],44:[function(require,module,exports){\n'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n\n},{}],45:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n},{}],46:[function(require,module,exports){\n/**\n* Base Logger Class\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass BaseLogger extends libFableServiceProviderBase\n{\n\tconstructor(pLogStreamSettings, pLogStreamHash)\n\t{\n\t\tsuper(pLogStreamSettings, pLogStreamHash);\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = (typeof(pLogStreamSettings) == 'object') ? pLogStreamSettings : {};\n\n\t\tthis.serviceType = 'Logging-Provider';\n\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\t// We added this as the mechanism for tracking loggers to allow multiple simultaneous streams\n\t\t// to the same provider.\n\t\tthis.loggerUUID = this.generateInsecureUUID();\n\n\t\t// Eventually we can use this array to ompute which levels the provider allows.\n\t\t// For now it's just used to precompute some string concatenations.\n\t\tthis.levels = (\n\t\t\t[\n\t\t\t\t\"trace\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"info\",\n\t\t\t\t\"warn\",\n\t\t\t\t\"error\",\n\t\t\t\t\"fatal\"\n\t\t\t]);\n\t}\n\n\t// This is meant to generate programmatically insecure UUIDs to identify loggers\n\tgenerateInsecureUUID()\n\t{\n\t\tlet tmpDate = new Date().getTime();\n\t\tlet tmpUUID = 'LOGSTREAM-xxxxxx-yxxxxx'.replace(/[xy]/g,\n\t\t\t\t(pCharacter) =>\n\t\t\t\t{\n\t\t\t\t\t// Funny algorithm from w3resource that is twister-ish without the deep math and security\n\t\t\t\t\t// ..but good enough for unique log stream identifiers\n\t\t\t\t\tlet tmpRandomData = (tmpDate + Math.random()*16)%16 | 0;\n\t\t\t\t\ttmpDate = Math.floor(tmpDate/16);\n\n\t\t\t\t\treturn (pCharacter =='x' ? tmpRandomData : (tmpRandomData&0x3|0x8)).toString(16);\n\t\t\t\t});\n\t\treturn tmpUUID;\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n\n},{\"fable-serviceproviderbase\":52}],47:[function(require,module,exports){\n/**\n* Default Logger Provider Function\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\nvar getDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\ttmpDefaultProviders.default = tmpDefaultProviders.console;\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();\n},{\"./Fable-Log-Logger-Console.js\":49}],48:[function(require,module,exports){\nmodule.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]\n},{}],49:[function(require,module,exports){\nlet libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings);\n\n\t\tthis._ShowTimeStamps = this._Settings.hasOwnProperty('showtimestamps') ? (this._Settings.showtimestamps == true) : true;\n\t\tthis._FormattedTimeStamps = this._Settings.hasOwnProperty('formattedtimestamps') ? (this._Settings.formattedtimestamps == true) : true;\n\n\t\tthis._ContextMessage = this._Settings.hasOwnProperty('Context') ? `(${this._Settings.Context})` :\n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? `(${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'Unnamed_Log_Context';\n\n\t\t// Allow the user to decide what gets output to the console\n\t\tthis._OutputLogLinesToConsole = this._Settings.hasOwnProperty('outputloglinestoconsole') ? this._Settings.outputloglinestoconsole : true;\n\t\tthis._OutputObjectsToConsole = this._Settings.hasOwnProperty('outputobjectstoconsole') ? this._Settings.outputobjectstoconsole : true;\n\n\t\t// Precompute the prefix for each level\n\t\tthis.prefixCache = {};\n\t\tfor (let i = 0; i <= this.levels.length; i++)\n\t\t{\n\t\t\tthis.prefixCache[this.levels[i]] = `[${this.levels[i]}] ${this._ContextMessage}: `;\n\n\t\t\tif (this._ShowTimeStamps)\n\t\t\t{\n\t\t\t\t// If there is a timestamp we need a to prepend space before the prefixcache string, since the timestamp comes first\n\t\t\t\tthis.prefixCache[this.levels[i]] = ' '+this.prefixCache[this.levels[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpTimeStamp = '';\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = (new Date()).toISOString();\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = +new Date();\n\t\t}\n\n\t\tlet tmpLogLine = `${tmpTimeStamp}${this.prefixCache[pLevel]}${pLogText}`;\n\n\t\tif (this._OutputLogLinesToConsole)\n\t\t{\n\t\t\tconsole.log(tmpLogLine);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (this._OutputObjectsToConsole && (typeof(pObject) !== 'undefined'))\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 2));\n\t\t}\n\n\t\t// Provide an easy way to be overridden and be consistent\n\t\treturn tmpLogLine;\n\t}\n}\n\nmodule.exports = ConsoleLogger;\n},{\"./Fable-Log-BaseLogger.js\":46}],50:[function(require,module,exports){\nconst libConsoleLog = require('./Fable-Log-Logger-Console.js');\nconst libFS = require('fs');\nconst libPath = require('path');\n\nclass SimpleFlatFileLogger extends libConsoleLog\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings, pFableLog);\n\n\t\t// If a path isn't provided for the logfile, it tries to use the ProductName or Context\n\t\tthis.logFileRawPath = (this._Settings.hasOwnProperty('path')) ? this._Settings.path : `./${this._ContextMessage}.log`;\n\t\tthis.logFilePath = libPath.normalize(this.logFileRawPath);\n\n\t\tthis.logFileStreamOptions = (this._Settings.hasOwnProperty('fileStreamoptions')) ? this._Settings.fileStreamOptions : (\n\t\t\t{\n\t\t\t\t\"flags\": \"a\",\n\t\t\t\t\"encoding\": \"utf8\"\n\t\t\t})\n\n\t\tthis.fileWriter = libFS.createWriteStream(this.logFilePath, this.logFileStreamOptions);\n\n\t\tthis.activelyWriting = false;\n\n\t\tthis.logLineStrings = [];\n\t\tthis.logObjectStrings = [];\n\n\t\tthis.defaultWriteCompleteCallback = ()=>{};\n\t\tthis.defaultBufferFlushCallback = ()=>{};\n\t}\n\n\tcloseWriter(fCloseComplete)\n\t{\n\t\tlet tmpCloseComplete = (typeof(fCloseComplete) == 'function') ? fCloseComplete : ()=>{};\n\t\tif (this.fileWriter)\n\t\t{\n\t\t\tthis.fileWriter.end('\\n');\n\t\t\treturn this.fileWriter.once('finish', tmpCloseComplete.bind(this));\n\t\t}\n\t}\n\n\tcompleteBufferFlushToLogFile(fFlushComplete)\n\t{\n\t\tthis.activelyWriting = false;\n\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\tif (this.logLineStrings.length > 0)\n\t\t{\n\t\t\tthis.flushBufferToLogFile(tmpFlushComplete);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpFlushComplete();\n\t\t}\n\t}\n\n\tflushBufferToLogFile(fFlushComplete)\n\t{\n\t\tif (!this.activelyWriting)\n\t\t{\n\t\t\t// Only want to be writing one thing at a time....\n\t\t\tthis.activelyWriting = true;\n\n\t\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\t\t// Get the current buffer arrays.  These should always have matching number of elements.\n\t\t\tlet tmpLineStrings = this.logLineStrings;\n\t\t\tlet tmpObjectStrings = this.logObjectStrings;\n\n\t\t\t// Reset these to be filled while we process this queue...\n\t\t\tthis.logLineStrings = [];\n\t\t\tthis.logObjectStrings = [];\n\n\t\t\t// This is where we will put each line before writing it to the file...\n\t\t\tlet tmpConstructedBufferOutputString = '';\n\n\t\t\tfor (let i = 0; i < tmpLineStrings.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: Windows Newline?   ....... yo no se!\n\t\t\t\ttmpConstructedBufferOutputString += `${tmpLineStrings[i]}\\n`;\n\t\t\t\tif (tmpObjectStrings[i] !== false)\n\t\t\t\t{\n\t\t\t\t\ttmpConstructedBufferOutputString += `${tmpObjectStrings[i]}\\n`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.fileWriter.write(tmpConstructedBufferOutputString, 'utf8'))\n\t\t\t{\n\t\t\t\t// If the streamwriter returns false, we need to wait for it to drain.\n\t\t\t\tthis.fileWriter.once('drain', this.completeBufferFlushToLogFile.bind(this, tmpFlushComplete));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.completeBufferFlushToLogFile(tmpFlushComplete);\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpLogLine = super.write(pLevel, pLogText, pObject);\n\n\t\t// Use a very simple array as the write buffer\n\t\tthis.logLineStrings.push(tmpLogLine);\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tthis.logObjectStrings.push(JSON.stringify(pObject, null, 4));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logObjectStrings.push(false);\n\t\t}\n\n\t\tthis.flushBufferToLogFile();\n\t}\n}\n\nmodule.exports = SimpleFlatFileLogger;\n},{\"./Fable-Log-Logger-Console.js\":49,\"fs\":19,\"path\":113}],51:[function(require,module,exports){\n/**\n* Fable Logging Service\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass FableLog extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'Logging';\n\n\t\tlet tmpSettings = (typeof(pSettings) === 'object') ? pSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders-Node.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'default',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\nmodule.exports = FableLog;\nmodule.exports.LogProviderBase = require('./Fable-Log-BaseLogger.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-Console.js');\nmodule.exports.LogProviderFlatfile = require('./Fable-Log-Logger-SimpleFlatFile.js');\n\n},{\"./Fable-Log-BaseLogger.js\":46,\"./Fable-Log-DefaultProviders-Node.js\":47,\"./Fable-Log-DefaultStreams.json\":48,\"./Fable-Log-Logger-Console.js\":49,\"./Fable-Log-Logger-SimpleFlatFile.js\":50,\"fable-serviceproviderbase\":52}],52:[function(require,module,exports){\n/**\n* Fable Service Base\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\t// The constructor can be used in two ways:\n\t// 1) With a fable, options object and service hash (the options object and service hash are optional)\n\t// 2) With an object or nothing as the first parameter, where it will be treated as the options object\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Check if a fable was passed in; connect it if so\n\t\tif ((typeof(pFable) === 'object') && pFable.isFable)\n\t\t{\n\t\t\tthis.connectFable(pFable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.fable = false;\n\t\t}\n\n\t\t// initialize options and UUID based on whether the fable was passed in or not.\n\t\tif (this.fable)\n\t\t{\n\t\t\tthis.UUID = pFable.getUUID();\n\t\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t\t: {};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// With no fable, check to see if there was an object passed into either of the first two\n\t\t\t// Parameters, and if so, treat it as the options object\n\t\t\tthis.options = ((typeof(pFable) === 'object') && !pFable.isFable) ? pFable\n\t\t\t\t\t\t\t: (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t\t: {};\n\t\t\tthis.UUID = `CORE-SVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`\n\t\t}\n\n\t\t// It's expected that the deriving class will set this\n\t\tthis.serviceType = `Unknown-${this.UUID}`;\n\n\t\t// The service hash is used to identify the specific instantiation of the service in the services map\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash \n\t\t\t\t\t: (!this.fable && (typeof(pOptions) === 'string')) ? pOptions\n\t\t\t\t\t: `${this.UUID}`;\n\t}\n\n\tconnectFable(pFable)\n\t{\n\t\tif ((typeof(pFable) !== 'object') || (!pFable.isFable))\n\t\t{\n\t\t\tlet tmpErrorMessage = `Fable Service Provider Base: Cannot connect to Fable, invalid Fable object passed in.  The pFable parameter was a [${typeof(pFable)}].}`;\n\t\t\tconsole.log(tmpErrorMessage);\n\t\t\treturn new Error(tmpErrorMessage);\n\t\t}\n\n\t\tif (!this.fable)\n\t\t{\n\t\t\tthis.fable = pFable;\n\t\t}\n\n\t\tif (!this.log)\n\t\t{\n\t\t\tthis.log = this.fable.Logging;\n\t\t}\n\t\tif (!this.services)\n\t\t{\n\t\t\tthis.services = this.fable.services;\n\t\t}\n\n\t\tif (!this.servicesMap)\n\t\t{\n\t\t\tthis.servicesMap = this.fable.servicesMap;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tstatic isFableService = true;\n}\n\nmodule.exports = FableServiceProviderBase;\n\n// This is left here in case we want to go back to having different code/base class for \"core\" services\nmodule.exports.CoreServiceProviderBase = FableServiceProviderBase;\n},{}],53:[function(require,module,exports){\nmodule.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n\n},{}],54:[function(require,module,exports){\n(function (process){(function (){\n/**\n* Fable Settings Template Processor\n*\n* This class allows environment variables to come in via templated expressions, and defaults to be set.\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\nconst libPrecedent = require('precedent');\n\nclass FableSettingsTemplateProcessor\n{\n\tconstructor(pDependencies)\n\t{\n        // Use a no-dependencies templating engine to parse out environment variables\n\t\tthis.templateProcessor = new libPrecedent();\n\n        // TODO: Make the environment variable wrap expression demarcation characters configurable?\n\t\tthis.templateProcessor.addPattern('${', '}',\n\t\t\t(pTemplateValue)=>\n\t\t\t{\n\t\t\t\tlet tmpTemplateValue = pTemplateValue.trim();\n\n\t\t\t\tlet tmpSeparatorIndex = tmpTemplateValue.indexOf('|');\n\n\t\t\t\tconst tmpDefaultValue = tmpSeparatorIndex >= 0 ? tmpTemplateValue.substring(tmpSeparatorIndex+1) : '';\n\n\t\t\t\tlet tmpEnvironmentVariableName = (tmpSeparatorIndex > -1) ? tmpTemplateValue.substring(0, tmpSeparatorIndex) : tmpTemplateValue;\n\n\t\t\t\tif (process.env.hasOwnProperty(tmpEnvironmentVariableName))\n\t\t\t\t{\n\t\t\t\t\treturn process.env[tmpEnvironmentVariableName];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpDefaultValue;\n\t\t\t\t}\n\t\t\t});\n    }\n\n    parseSetting(pString)\n    {\n        return this.templateProcessor.parseString(pString);\n    }\n}\n\nmodule.exports = FableSettingsTemplateProcessor;\n\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":120,\"precedent\":117}],55:[function(require,module,exports){\n/**\n* Fable Settings Add-on\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nconst libFableSettingsTemplateProcessor = require('./Fable-Settings-TemplateProcessor.js');\n\nclass FableSettings extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'SettingsManager';\n\n\t\t// Initialize the settings value template processor\n\t\tthis.settingsTemplateProcessor = new libFableSettingsTemplateProcessor();\n\n\t\t// set straight away so anything that uses it respects the initial setting\n\t\tthis._configureEnvTemplating(pSettings);\n\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')));\n\t}\n\n\t// Update the configuration for environment variable templating based on the current settings object\n\t_configureEnvTemplating(pSettings)\n\t{\n\t\t// default environment variable templating to on\n\t\tthis._PerformEnvTemplating = !pSettings || pSettings.NoEnvReplacement !== true;\n\t}\n\n\t// Resolve (recursive) any environment variables found in settings object.\n\t_resolveEnv(pSettings)\n\t{\n\t\tfor (const tmpKey in pSettings)\n\t\t{\n\t\t\tif (typeof(pSettings[tmpKey]) === 'object')\n\t\t\t{\n\t\t\t\tthis._resolveEnv(pSettings[tmpKey]);\n\t\t\t}\n\t\t\telse if (typeof(pSettings[tmpKey]) === 'string')\n\t\t\t{\n\t\t\t\tpSettings[tmpKey] = this.settingsTemplateProcessor.parseSetting(pSettings[tmpKey]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if a value is an object (but not an array).\n\t */\n\t_isObject(value)\n\t{\n\t\treturn typeof(value) === 'object' && !Array.isArray(value);\n\t}\n\n\t/**\n\t * Merge two plain objects. Keys that are objects in both will be merged property-wise.\n\t */\n\t_deepMergeObjects(toObject, fromObject)\n\t{\n\t\tif (!fromObject || !this._isObject(fromObject))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.keys(fromObject).forEach((key) =>\n\t\t{\n\t\t\tconst fromValue = fromObject[key];\n\t\t\tif (this._isObject(fromValue))\n\t\t\t{\n\t\t\t\tconst toValue = toObject[key];\n\t\t\t\tif (toValue && this._isObject(toValue))\n\t\t\t\t{\n\t\t\t\t\t// both are objects, so do a recursive merge\n\t\t\t\t\tthis._deepMergeObjects(toValue, fromValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoObject[key] = fromValue;\n\t\t});\n\t\treturn toObject;\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\t\ttmpSettingsTo = this._deepMergeObjects(tmpSettingsTo, tmpSettingsFromCopy);\n\n\t\tif (this._PerformEnvTemplating)\n\t\t{\n\t\t\tthis._resolveEnv(tmpSettingsTo);\n\t\t}\n\t\t// Update env tempating config, since we just updated the config object, and it may have changed\n\t\tthis._configureEnvTemplating(tmpSettingsTo);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\n\t\tthis.settings = this._deepMergeObjects(tmpSettingsFromCopy, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = FableSettings;\nmodule.exports.new = autoConstruct;\n},{\"./Fable-Settings-Default\":53,\"./Fable-Settings-TemplateProcessor.js\":54,\"fable-serviceproviderbase\":52}],56:[function(require,module,exports){\n/**\n* Random Byte Generator - Browser version\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn this.generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n\n},{}],57:[function(require,module,exports){\n/**\n* Fable UUID Generator\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;0\n\nconst libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'UUID';\n\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = FableUUID;\nmodule.exports.new = autoConstruct;\n\n},{\"./Fable-UUID-Random.js\":56,\"fable-serviceproviderbase\":52}],58:[function(require,module,exports){\n/**\n* Fable Application Services Support Library\n* @author <steven@velozo.com>\n*/\n// Pre-init services\nconst libFableSettings = require('fable-settings');\nconst libFableUUID = require('fable-uuid');\nconst libFableLog = require('fable-log');\n\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass Fable extends libFableServiceBase.CoreServiceProviderBase\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\t// Initialization Phase 0: Set up the lowest level state (fable is a utility service manager at heart)\n\t\tthis.serviceType = 'ServiceManager';\n\n\t\t// An array of the types of services available\n\t\tthis.serviceTypes = [];\n\t\t// A map of instantiated services\n\t\tthis.servicesMap = {};\n\t\t// A map of the default instantiated service by type\n\t\tthis.services = {};\n\n\t\t// A map of class constructors for services\n\t\tthis.serviceClasses = {};\n\n\t\t// If we need extra service initialization capabilities\n\t\tthis.extraServiceInitialization = false;\n\n\t\t// Set how noisy the system is about signaling complexity\n\t\tthis.LogNoisiness = 0;\n\n\t\t// Initialization Phase 1: Set up the core utility services\n\t\t// These are things like power, water, and sewage.  They are required for fable to run (e.g. logging, settings, etc)\n\n\t\t// Instantiate the default Settings Manager\n\t\tthis.SettingsManager = new libFableSettings(pSettings);\n\t\tthis.SettingsManager = this.SettingsManager;\n\t\t// Instantiate the UUID generator\n\t\tthis.UUID = new libFableUUID(this.SettingsManager.settings);\n\t\t// Instantiate the logging system\n\t\tthis.Logging = new libFableLog(this.SettingsManager.settings);\n\t\tthis.Logging.initialize();\n\n\t\t// Initialization Phase 1.5: Instantiate the service manager\n\t\t// This is the start actual bootstrapping point for fable.\n\t\t// For consistency fable is treated as a service.\n\t\tthis.ServiceManager = this;\n\t\t// TODO: Remove this when Orator and meadow-endpoints are shifted to this new pattern\n\t\tthis.serviceManager = this;\n\t\t// END TODO\n\t\tthis.connectFable(this);\n\t\t// --> Bootstrapping of fable into the Service Manager is complete\n\n\t\t// Initialization Phase 2: Map in the default services.\n\t\t// They will then be available in the Default service provider set as well.\n\t\tthis.connectPreinitServiceProviderInstance(this.UUID);\n\t\tthis.connectPreinitServiceProviderInstance(this.Logging);\n\t\tthis.connectPreinitServiceProviderInstance(this.SettingsManager);\n\n\t\t// Initialize and instantiate the default baked-in Data Arithmatic service\n\t\tthis.addAndInstantiateServiceType('EnvironmentData', require('./services/Fable-Service-EnvironmentData.js'));\n\t\tthis.addServiceType('Template', require('./services/Fable-Service-Template.js'));\n\t\tthis.addServiceType('MetaTemplate', require('./services/Fable-Service-MetaTemplate.js'));\n\t\tthis.addServiceType('Anticipate', require('./services/Fable-Service-Anticipate.js'));\n\t\tthis.addAndInstantiateServiceType('Dates', require('./services/Fable-Service-DateManipulation.js'));\n\t\tthis.addAndInstantiateServiceType('DataFormat', require('./services/Fable-Service-DataFormat.js'));\n\t\tthis.addAndInstantiateServiceType('DataGeneration', require('./services/Fable-Service-DataGeneration.js'));\n\t\tthis.addAndInstantiateServiceType('Utility', require('./services/Fable-Service-Utility.js'));\n\t\tthis.addAndInstantiateServiceType('Math', require('./services/Fable-Service-Math.js'));\n\t\tthis.addServiceType('ExpressionParser', require('./services/Fable-Service-ExpressionParser.js'));\n\t\tthis.addServiceType('RestClient', require('./services/Fable-Service-RestClient.js'));\n\t\tthis.addServiceType('Manifest', require('manyfest'));\n\t\tthis.addServiceType('ObjectCache', require('cachetrax'));\n\t\tthis.addAndInstantiateServiceType('ProgressTime', require('./services/Fable-Service-ProgressTime.js'));\n\t\tthis.addServiceType('ProgressTrackerSet', require('./services/Fable-Service-ProgressTrackerSet.js'));\n\t\tthis.addServiceType('Operation', require('./services/Fable-Service-Operation.js'));\n\t\tthis.addServiceType('CSVParser', require('./services/Fable-Service-CSVParser.js'));\n\t\tthis.addServiceType('FilePersistence', require('./services/Fable-Service-FilePersistence.js'));\n\t}\n\n\t/* State Accessors */\n\tget isFable()\n\t{\n\t\treturn true;\n\t}\n\n\tget settings()\n\t{\n\t\treturn this.SettingsManager.settings;\n\t}\n\n\tget settingsManager()\n\t{\n\t\treturn this.SettingsManager;\n\t}\n\n\t// For backwards compatibility\n\tgetUUID()\n\t{\n\t\treturn this.UUID.getUUID();\n\t}\n\n\tnewAnticipate()\n\t{\n\t\treturn this.instantiateServiceProviderWithoutRegistration('Anticipate');\n\t}\n\n\tnewManyfest(pManifestDefinition)\n\t{\n\t\treturn this.instantiateServiceProviderWithoutRegistration('Manifest', pManifestDefinition);\n\t}\n\n\t/* Service Manager Methods */\n\taddServiceType(pServiceType, pServiceClass)\n\t{\n\t\tif (this.servicesMap.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\t// TODO: Check if any services are running?\n\t\t\tthis.log.warn(`Adding a service type [${pServiceType}] that already exists.  This will change the default class prototype for this service.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the container for instantiated services to go in\n\t\t\tthis.servicesMap[pServiceType] = {};\n\n\t\t\t// Add the type to the list of types\n\t\t\tthis.serviceTypes.push(pServiceType);\n\t\t}\n\n\t\t// Using the static member of the class is a much more reliable way to check if it is a service class than instanceof\n\t\tif ((typeof(pServiceClass) == 'function') && (pServiceClass.isFableService))\n\t\t{\n\t\t\t// Add the class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = pServiceClass;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the base class to the list of classes\n\t\t\tthis.log.error(`Attempted to add service type [${pServiceType}] with an invalid class.  Using base service class, which will not crash but won't provide meaningful services.`);\n\t\t\tthis.serviceClasses[pServiceType] = libFableServiceBase;\n\t\t}\n\n\t\treturn this.serviceClasses[pServiceType];\n\t}\n\n\taddServiceTypeIfNotExists(pServiceType, pServiceClass)\n\t{\n\t\tif (!this.servicesMap.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\treturn this.addServiceType(pServiceType, pServiceClass);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.serviceClasses[pServiceType];\n\t\t}\n\t}\n\n\t// This is for the services that are meant to run mostly single-instance so need a default at initialization\n\taddAndInstantiateServiceType(pServiceType, pServiceClass)\n\t{\n\t\tthis.addServiceType(pServiceType, pServiceClass);\n\t\treturn this.instantiateServiceProvider(pServiceType, {}, `${pServiceType}-Default`);\n\t}\n\n\taddAndInstantiateServiceTypeIfNotExists(pServiceType, pServiceClass)\n\t{\n\t\tif (!this.servicesMap.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\treturn this.instantiateServiceProvider(pServiceType, {}, `${pServiceType}-Default`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.serviceClasses[pServiceType];\n\t\t}\n\t}\n\n\t// Some services expect to be overloaded / customized class.\n\tinstantiateServiceProviderFromPrototype(pServiceType, pOptions, pCustomServiceHash, pServicePrototype)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new pServicePrototype(this, pOptions, pCustomServiceHash);\n\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\tinstantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = this.instantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\tinstantiateServiceProviderIfNotExists(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\tif (this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\treturn this.services[pServiceType];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash);\n\t\t}\n\t}\n\n\t// Create a service provider but don't register it to live forever in fable.services\n\tinstantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new this.serviceClasses[pServiceType](this, pOptions, pCustomServiceHash);\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\t\treturn tmpService;\n\t}\n\n\t// Connect an initialized service provider that came before Fable was initialized\n\tconnectPreinitServiceProviderInstance(pServiceInstance)\n\t{\n\t\tlet tmpServiceType = pServiceInstance.serviceType;\n\t\tlet tmpServiceHash = pServiceInstance.Hash;\n\n\t\t// The service should already be instantiated, so just connect it to fable\n\t\tpServiceInstance.connectFable(this);\n\n\t\t// Add the service type to the map if it isn't there yet\n\t\tif (!this.servicesMap.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\t// If the core service hasn't registered itself yet, create the service container for it.\n\t\t\t// This means you couldn't register another with this type unless it was later registered with a constructor class.\n\t\t\tthis.servicesMap[tmpServiceType] = {};\n\t\t}\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[tmpServiceType][tmpServiceHash] = pServiceInstance;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(tmpServiceType, tmpServiceHash, false);\n\t\t}\n\n\t\treturn pServiceInstance;\n\t}\n\n\tsetDefaultServiceInstantiation(pServiceType, pServiceHash, pOverwriteService)\n\t{\n\t\t// Overwrite services by default, unless told not to\n\t\tlet tmpOverwriteService = (typeof(pOverwriteService) === 'undefined') ? true : pOverwriteService;\n\t\t// Make sure the service exists\n\t\tif (this.servicesMap[pServiceType].hasOwnProperty(pServiceHash))\n\t\t{\n\t\t\tif (!this.hasOwnProperty(pServiceType) || tmpOverwriteService)\n\t\t\t{\n\t\t\t\tthis[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\t}\n\t\t\tif (!this.services.hasOwnProperty(pServiceType) || tmpOverwriteService)\n\t\t\t{\n\t\t\t\tthis.services[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\t\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = Fable;\nmodule.exports.new = autoConstruct;\n\nmodule.exports.LogProviderBase = libFableLog.LogProviderBase;\nmodule.exports.ServiceProviderBase = libFableServiceBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceBase.CoreServiceProviderBase;\n\nmodule.exports.precedent = libFableSettings.precedent;\n\n},{\"./services/Fable-Service-Anticipate.js\":59,\"./services/Fable-Service-CSVParser.js\":60,\"./services/Fable-Service-DataFormat.js\":61,\"./services/Fable-Service-DataGeneration.js\":63,\"./services/Fable-Service-DateManipulation.js\":64,\"./services/Fable-Service-EnvironmentData.js\":65,\"./services/Fable-Service-ExpressionParser.js\":66,\"./services/Fable-Service-FilePersistence.js\":74,\"./services/Fable-Service-Math.js\":75,\"./services/Fable-Service-MetaTemplate.js\":76,\"./services/Fable-Service-Operation.js\":80,\"./services/Fable-Service-ProgressTime.js\":81,\"./services/Fable-Service-ProgressTrackerSet.js\":83,\"./services/Fable-Service-RestClient.js\":84,\"./services/Fable-Service-Template.js\":85,\"./services/Fable-Service-Utility.js\":86,\"cachetrax\":22,\"fable-log\":51,\"fable-serviceproviderbase\":52,\"fable-settings\":55,\"fable-uuid\":57,\"manyfest\":110}],59:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceAnticipate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'AsyncAnticipate';\n\n\t\t// The queue of operations waiting to run.\n\t\tthis.operationQueue = [];\n\t\tthis.erroredOperations = [];\n\n\t\tthis.executingOperationCount = 0;\n\t\tthis.completedOperationCount = 0;\n\n\t\tthis.callDepth = 0;\n\n\t\tthis.maxOperations = 1;\n\n\t\tthis.lastError = undefined;\n\t\tthis.waitingFunctions = [];\n\t}\n\n\tcheckQueue()\n\t{\n\t\t// This could be combined with the last else if stanza but the logic for errors and non-errors would be blended and more complex to follow so keeping it unrolled.\n\t\tif (this.lastError)\n\t\t{\n\t\t\t// If there are no operations left, and we have waiting functions, call them.\n\t\t\tfor (let i = 0; i < this.waitingFunctions.length; i++)\n\t\t\t{\n\t\t\t\t//this.log.trace('Calling waiting function.')\n\t\t\t\tthis.waitingFunctions[i](this.lastError);\n\t\t\t}\n\t\t\t// Reset our state\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.waitingFunctions = [];\n\t\t}\n\t\t// This checks to see if we need to start any operations.\n\t\telse if (this.operationQueue.length > 0 && this.executingOperationCount < this.maxOperations)\n\t\t{\n\t\t\tlet tmpOperation = this.operationQueue.shift();\n\t\t\tthis.executingOperationCount += 1;\n\t\t\ttmpOperation(this.buildAnticipatorCallback());\n\t\t}\n\t\telse if (this.waitingFunctions.length > 0 && this.executingOperationCount < 1)\n\t\t{\n\t\t\t// If there are no operations left, and we have waiting functions, call them.\n\t\t\tfor (let i = 0; i < this.waitingFunctions.length; i++)\n\t\t\t{\n\t\t\t\t//this.log.trace('Calling waiting function.')\n\t\t\t\tthis.waitingFunctions[i](this.lastError);\n\t\t\t}\n\t\t\t// Reset our state\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.waitingFunctions = [];\n\t\t}\n\t}\n\n\t// Expects a function fAsynchronousFunction(fCallback)\n\tanticipate(fAsynchronousFunction)\n\t{\n\t\t//this.log.trace('Adding a function...')\n\t\tthis.operationQueue.push(fAsynchronousFunction);\n\t\tthis.checkQueue();\n\t}\n\n\tbuildAnticipatorCallback()\n\t{\n\t\t// This uses closure-scoped state to track the callback state\n\t\tlet tmpCallbackState = (\n\t\t\t{\n\t\t\t\tCalled: false,\n\t\t\t\tError: undefined,\n\t\t\t\tOperationSet: this\n\t\t\t});\n\t\treturn hoistedCallback.bind(this);\n\t\tfunction hoistedCallback(pError)\n\t\t{\n\t\t\tif (tmpCallbackState.Called)\n\t\t\t{\n\t\t\t\t// If they call the callback twice, throw an error\n\t\t\t\tthrow new Error(\"Anticipation async callback called twice...\");\n\t\t\t}\n\t\t\ttmpCallbackState.Called = true;\n\t\t\tthis.lastError = pError;\n\n\t\t\ttmpCallbackState.OperationSet.executingOperationCount -= 1;\n\t\t\ttmpCallbackState.OperationSet.completedOperationCount += 1;\n\n\t\t\ttmpCallbackState.OperationSet.callDepth++;\n\n\t\t\t// TODO: Figure out a better pattern for chaining templates so the call stack doesn't get abused.\n\t\t\tif (tmpCallbackState.OperationSet.callDepth > 400)\n\t\t\t{\n\t\t\t\ttmpCallbackState.OperationSet.callDepth = 0;\n\t\t\t\tsetTimeout(tmpCallbackState.OperationSet.checkQueue.bind(this), 0);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpCallbackState.OperationSet.checkQueue();\n\t\t\t}\n\t\t}\n\t}\n\n\twait(fCallback)\n\t{\n\t\tthis.waitingFunctions.push(fCallback);\n\t\tthis.checkQueue();\n\t}\n}\n\nmodule.exports = FableServiceAnticipate;\n},{\"fable-serviceproviderbase\":52}],60:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Parsing CSVs.  Why?  Because it's a thing that needs to be done.\n*\n* 1. And the other node CSV parsers had issues with the really messy files we had.\n* \n*\n* 2. None of the CSV parsers dealt with and multi-line quoted string columns\n*    which are apparently a-ok according to the official spec.\n* Plus a lot of them are asynchronous because apparently that's the best way to\n* do anything; unfortunately some files have a sequence issue with that.\n*\n* @class CSVParser\n*/\nclass CSVParser extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'CSVParser';\n\n        this.Header = [];\n        this.HeaderFieldNames = [];\n\n        this.Delimiter = ',';\n        this.QuoteCharacter = '\"';\n\n        this.CleanCharacters = ['\\r'];\n\n        this.HeaderLineIndex = 0;\n        this.HasHeader = true;\n        this.HasSetHeader = false;\n        this.EmitHeader = false;\n\n        this.EmitJSON = true;\n\n        this.EscapedQuoteString = '&quot;';\n\n        // Current Line Parsing State\n        this.CurrentLine = '';\n        this.CurrentRecord = [];\n\n        this.InQuote = false;\n        this.InEscapedQuote = false;\n\n        this.LinesParsed = 0;\n        this.RowsEmitted = 0;\n    }\n\n    marshalRowToJSON(pRowArray)\n    {\n        if (!Array.isArray(pRowArray))\n        {\n            return false;\n        }\n\n        for (let i = this.HeaderFieldNames.length; i < pRowArray.length; i++)\n        {\n            this.HeaderFieldNames[i] = `${i}`;\n        }\n\n        let tmpObject = {};\n\n        for (let i = 0; i < pRowArray.length; i++)\n        {\n            tmpObject[this.HeaderFieldNames[i]] = pRowArray[i];\n        }\n\n        return tmpObject;\n    }\n\n    // Set the header data, for use in marshalling to JSON.\n    setHeader (pHeaderArray)\n    {\n        this.Header = pHeaderArray;\n\n        for (let i = 0; i < this.Header.length; i++)\n        {\n            if (typeof(this.Header[i]) == 'undefined')\n            {\n                this.HeaderFieldNames[i] = `${i}`;\n            }\n            else\n            {\n                this.HeaderFieldNames[i] = this.Header[i].toString().trim();\n            }\n        }\n    }\n\n    resetRowState()\n    {\n        this.CurrentRecord = [];\n    }\n\n    pushLine()\n    {\n        for (let i = 0; i < this.CleanCharacters.length; i++)\n        {\n            this.CurrentLine = this.CurrentLine.replace(this.CleanCharacters[i],'');\n        }\n        this.CurrentRecord.push(this.CurrentLine);\n        this.CurrentLine = '';\n    }\n\n    emitRow(pFormatAsJSON)\n    {\n        let tmpFormatAsJSON = (typeof(pFormatAsJSON) == 'undefined') ? this.EmitJSON : pFormatAsJSON;\n\n        this.RowsEmitted++;\n        let tmpCompletedRecord = this.CurrentRecord;\n        this.CurrentRecord = [];\n\n        if (tmpFormatAsJSON)\n        {\n            return this.marshalRowToJSON(tmpCompletedRecord);\n        }\n        else\n        {\n            return tmpCompletedRecord;\n        }\n    }\n\n    parseCSVLine (pLineString)\n    {\n        this.LinesParsed++;\n\n        for (let i = 0; i < pLineString.length; i++)\n        {\n            if ((!this.InQuote) && (pLineString[i] == this.Delimiter))\n            {\n                this.pushLine();\n            }\n            else if (pLineString[i] == this.QuoteCharacter)\n            {\n                // If we are in the second part of an escaped quote, ignore it.\n                if (this.InEscapedQuote)\n                {\n                    this.InEscapedQuote = false;\n                }\n                // If we aren't in a quote, enter quote\n                else if (!this.InQuote)\n                {\n                    this.InQuote = true;\n                }\n                // We are in a quote, so peek forward to see if this is an \"escaped\" quote pair\n                else if ((i < pLineString.length) && (pLineString[i+1] == this.QuoteCharacter))\n                {\n                    this.CurrentLine += this.EscapedQuoteString;\n                    this.InEscapedQuote = true;\n                }\n                // We are in a quote, this isn't an \"escaped\" quote pair, so go out of quote mode\n                else\n                {\n                    this.InQuote = false;\n                }\n            }\n            else\n            {\n                this.CurrentLine += pLineString[i];\n            }\n        }\n\n        // See if we are in a multiline quoted entry -- if not, emit the row.\n        if (!this.InQuote)\n        {\n            // Push the last remaining column from the buffer to the current line.\n            this.pushLine();\n\n            // Check to see if there is a header -- and if so, if this is the header row\n            if (this.HasHeader && !this.HasSetHeader && (this.RowsEmitted == this.HeaderLineIndex))\n            {\n                this.HasSetHeader = true;\n                // Override the format as json bit\n                this.setHeader(this.emitRow(false));\n\n                // No matter what, formatting this as JSON is silly and we don't want to go there anyway.\n                if (this.EmitHeader)\n                {\n                    return this.Header;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n            else\n            {\n                return this.emitRow();\n            }\n        }\n        else\n        {\n            return false;\n        }\n    };\n}\n\nmodule.exports = CSVParser;\n},{\"fable-serviceproviderbase\":52}],61:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Data Formatting and Translation Functions\n*\n* @class DataFormat\n*/\nclass DataFormat extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'DataArithmatic';\n\n\t\t// Regular Expressions (so they don't have to be recompiled every time)\n\t\t// These could be defined as static, but I'm not sure if that will work with browserify ... and specifically the QT browser.\n\t\tthis._Regex_formatterInsertCommas = /.{1,3}/g;\n\t\t// Match Function:\n\t\t// function(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t\t// Thoughts about below:   /^([+-]?)(0*)(\\d+)(\\.(\\d+))?$/;\n\t\tthis._Regex_formatterAddCommasToNumber = /^([-+]?)(0?)(\\d+)(.?)(\\d+)$/g;\n\t\tthis._Regex_formatterDollarsRemoveCommas = /,/gi;\n\t\tthis._Regex_formatterCleanNonAlphaChar = /[^a-zA-Z]/gi;\n\t\tthis._Regex_formatterCapitalizeEachWord = /([a-zA-Z]+)/g;\n\n\t\t// TODO: Potentially pull these in from a configuration.\n\t\t// TODO: Use locale data for this if it's defaults all the way down.\n\t\tthis._Value_MoneySign_Currency = '$';\n\t\tthis._Value_NaN_Currency = '--';\n\t\tthis._Value_GroupSeparator_Number = ',';\n\n\t\tthis._Value_Prefix_StringHash = 'HSH';\n\t\tthis._Value_Clean_formatterCleanNonAlpha = '';\n\n\t\tthis._UseEngineStringStartsWith = (typeof(String.prototype.startsWith) === 'function');\n\t\tthis._UseEngineStringEndsWith = (typeof(String.prototype.endsWith) === 'function');\n\t}\n\n\n\t/*************************************************************************\n\t * String Manipulation and Comparison Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Reverse a string\n\t *\n\t * @param {string} pString - The string to reverse\n\t * @returns {string}\n\t */\n\tstringReverse (pString)\n\t{\n\t\t// TODO: Benchmark if there are faster ways we want to do this with all the newer JS stuff\n\t\t//       ... and if it will work with browserify in a clean way.\n\t\treturn pString.split('').reverse().join('');\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pStartIndex\n\t * @returns {boolean}\n\t */\n\tstringStartsWith (pString, pSearchString, pStartIndex)\n\t{\n\t\tif (this._UseEngineStringStartsWith)\n\t\t{\n\t\t\treturn pString.startsWith(pSearchString, pStartIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringStartsWith_Polyfill.call(pString, pSearchString, pStartIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pStartIndex - The index to start the search at\n\t * @returns {boolean}\n\t */\n\tstringStartsWith_Polyfill (pSearchString, pStartIndex)\n\t{\n\t\treturn this.slice(pStartIndex || 0, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pEndIndex\n\t * @returns {*}\n\t */\n\tstringEndsWith (pString, pSearchString, pEndIndex)\n\t{\n\t\tif (this._UseEngineStringEndsWith)\n\t\t{\n\t\t\treturn pString.endsWith(pSearchString, pEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringEndsWith_Polyfill.call(pString, pSearchString, pEndIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pEndIndex - The index to end the search at\n\t * @returns {boolean}\n\t */\n\tstringEndsWith_Polyfill (pSearchString, pEndIndex)\n\t{\n\t\t// This works much better than >= because\n\t\t// it compensates for NaN:\n\t\tif (!(pEndIndex < this.length))\n\t\t{\n\t\t\tpEndIndex = this.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpEndIndex |= 0; // round position\n\t\t}\n\t\treturn this.substr(pEndIndex - pSearchString.length, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Generate an insecure string hash.  Not meant to be secure, just a quick way to generate a hash for a string.  This is not a cryptographic hash.  Additional warranty and disclaimer ... this is not for passwords!\n\t *\n\t * @param {string} pString\n\t * @returns {string}\n\t */\n\tinsecureStringHash (pString)\n\t{\n\t\tlet tmpHash = 0;\n\t\tlet tmpStringLength = pString.length;\n\t\tlet tmpCharacterIndex = 0;\n\n\t\twhile (tmpCharacterIndex < tmpStringLength)\n\t\t{\n\t\t\ttmpHash = (tmpHash << 5) - tmpHash + pString.charCodeAt(tmpCharacterIndex++) | 0;\n\t\t}\n\n\t\treturn `${this._Value_Prefix_StringHash}${tmpHash}`;\n\t}\n\n\tcapitalizeEachWord (pString)\n\t{\n\t\treturn pString.replace(this._Regex_formatterCapitalizeEachWord,\n\t\t\t(pMatch) =>\n\t\t\t{\n\t\t\t\treturn pMatch.charAt(0).toUpperCase() + pMatch.substr(1);\n\t\t\t});\n\t}\n\n\t/**\n\t * Clean wrapping characters if they exist consistently around the string.  If they do not, the string is returned unchanged.\n\t *\n\t * @param {string} pWrapCharacter - The character expected as the wrapping character\n\t * @param {string} pString - the string to clean\n\t * @returns {string}\n\t */\n\tcleanEnclosureWrapCharacters (pWrapCharacter, pString)\n\t{\n\t\t// # Use case from ManyFest DSL:\n\t\t//\n\t\t// When a boxed property is passed in, it should have quotes of some\n\t\t// kind around it.\n\t\t//\n\t\t// For instance:\n\t\t// \t\tMyValues['Name']\n\t\t// \t\tMyValues[\"Age\"]\n\t\t// \t\tMyValues[`Cost`]\n\t\t//\n\t\t// This function is necessary to remove the wrapping quotes before object\n\t\t// resolution can occur.\n\t\tif (pString.startsWith(pWrapCharacter) && pString.endsWith(pWrapCharacter))\n\t\t{\n\t\t\treturn pString.substring(1, pString.length - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pString;\n\t\t}\n\t}\n\n\t/**\n\t * Clean a string of any non-alpha characters (including numbers)\n\t *\n\t * @param {*} pString\n\t * @returns\n\t */\n\tcleanNonAlphaCharacters (pString)\n\t{\n\t\tif ((typeof(pString) == 'string') && (pString != ''))\n\t\t{\n\t\t\treturn pString.replace(this._Regex_formatterCleanNonAlphaChar, this._Value_Clean_formatterCleanNonAlpha);\n\t\t}\n\n\t\treturn '';\n\t}\n\n\n\t/*************************************************************************\n\t * Number Formatting Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Insert commas every 3 characters from the right.  Used by formatterAddCommasToNumber().\n\t *\n\t * @param {*} pString\n\t * @returns {*}\n\t */\n\tformatterInsertCommas (pString)\n\t{\n\t\t// Reverse, because it's easier to do things from the left, given arbitrary digit counts\n\t\tlet tmpReversed = this.stringReverse(pString);\n\t\t// Add commas every three characters\n\t\tlet tmpReversedWithCommas = tmpReversed.match(this._Regex_formatterInsertCommas).join(',');\n\t\t// Reverse again (back to normal direction)\n\t\treturn this.stringReverse(tmpReversedWithCommas);\n\t}\n\n\tprocessAddCommasToNumberRegex(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t{\n\t\t// If there was no decimal, the last capture grabs the final digit, so\n\t\t// we have to put it back together with the 'before' substring\n\t\treturn pSign + (pDecimal ? this.formatterInsertCommas(pBefore) + pDecimal + pAfter : this.formatterInsertCommas(pBefore + pAfter));\n\t}\n\n\t/**\n\t * Add Commas to a Number for readability.\n\t *\n\t * @param {*} pNumber\n\t * @returns {string}\n\t */\n\tformatterAddCommasToNumber (pNumber)\n\t{\n\t\t// If the regex doesn't match, `replace` returns the string unmodified\n\t\treturn (pNumber.toString()).replace\n\t\t(\n\t\t\tthis._Regex_formatterAddCommasToNumber,\n\t\t\tthis.processAddCommasToNumberRegex.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * This will take a number and format it as a dollar string.  It will also add commas to the number.  If the number is not a number, it will return '--'.\n\t *\n\t * @param {*} pValue\n\t * @returns {string}\n\t */\n\tformatterDollars (pValue, pPrecision, pRoundingMethod)\n\t{\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tif (pValue === null || pValue === undefined)\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tlet tmpDollarAmountArbitrary = this.fable.Math.parsePrecise(pValue);\n\t\tlet tmpPrecision = (typeof(pPrecision) == 'undefined') ? 2 : pPrecision;\n\t\tlet tmpDollarAmount = this.fable.Math.toFixedPrecise(tmpDollarAmountArbitrary, tmpPrecision, pRoundingMethod);\n\n\t\t// TODO: Get locale data and use that for this stuff.\n\t\treturn `$${this.formatterAddCommasToNumber(tmpDollarAmount)}`;\n\t}\n\n\t/**\n\t * Round a number to a certain number of digits.  If the number is not a number, it will return 0.  If no digits are specified, it will default to 2 significant digits.\n\t *\n\t * @param {*} pValue\n\t * @param {number} pDigits\n\t * @returns {string}\n\t */\n\tformatterRoundNumber (pValue, pDigits)\n\t{\n\t\tlet tmpDigits = (typeof(pDigits) == 'undefined') ? 2 : pDigits;\n\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\n\t\tif (pValue === null || pValue === undefined)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpValue = tmpAmountArbitrary.toFixed(tmpDigits);\n\n\t\tif (isNaN(tmpValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpValue;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate a reapeating padding string to be appended before or after depending on \n\t * which padding function it uses.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringGeneratePaddingString(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpTargetLength = pTargetLength >> 0;\n\t\tlet tmpPadString = String((typeof pPadString !== 'undefined' ? pPadString : ' '));\n\t\tif (pString.length > pTargetLength)\n\t\t{\n\t\t\t// No padding string if the source string is already longer than the target length, return an empty string\n\t\t\treturn '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpPadLength = pTargetLength - pString.length;\n\t\t\tif (tmpPadLength > tmpPadString.length)\n\t\t\t{\n\t\t\t\ttmpPadString += tmpPadString.repeat(tmpTargetLength / tmpPadString.length);\n\t\t\t}\n\t\t\treturn tmpPadString.slice(0, tmpPadLength);\n\t\t}\n\t}\n\n\t/**\n\t * Pad the start of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadStart = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString) + tmpString;\n\t}\n\n\t/**\n\t * Pad the end of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadEnd = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn tmpString + this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString);\n\t}\n\n\t/*************************************************************************\n\t * Time Formatting Functions (milliseconds)\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Format a time length in milliseconds into a human readable string.\n\t * @param {number} pTimeSpan \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeSpan(pTimeSpan)\n\t{\n\t\tif (typeof(pTimeSpan) != 'number')\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpMs = parseInt(pTimeSpan%1000);\n\t\tlet tmpSeconds = parseInt((pTimeSpan/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeSpan/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeSpan/(1000*60*60));\n\n\t\treturn `${this.stringPadStart(tmpHours,2,'0')}:${this.stringPadStart(tmpMinutes,2,'0')}:${this.stringPadStart(tmpSeconds,2,'0')}.${this.stringPadStart(tmpMs,3,'0')}`;\n\t}\n\n\t/**\n\t * Format the time delta between two times in milliseconds into a human readable string.\n\t * \n\t * @param {number} pTimeStart \n\t * @param {number} pTimeEnd \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeDelta(pTimeStart, pTimeEnd)\n\t{\n\t\tif ((typeof(pTimeStart) != 'number') || (typeof(pTimeEnd) != 'number'))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.formatTimeSpan(pTimeEnd-pTimeStart);\n\t}\n\n\t// THE FOLLOWING TERRIBLE FUNCTIONS ARE FOR QT / WKHTMLTOPDF when luxon and moment don't work so well\n\tgetMonthFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tgetMonthAbbreviatedFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tformatMonthDayYearFromDate (pJavascriptDate, pStrict)\n\t{\n\t\tlet tmpStrict = (typeof(pStrict) !== 'undefined') ? pStrict : false;\n\n\t\tlet tmpMonth = pJavascriptDate.getMonth() + 1;\n\t\tlet tmpDay = pJavascriptDate.getDate();\n\t\tlet tmpYear = pJavascriptDate.getFullYear();\n\t\t\n\t\tif (tmpStrict)\n\t\t{\n\t\t\ttmpMonth = this.stringPadStart(tmpMonth, 2, '0');\n\t\t\ttmpDay = this.stringPadStart(tmpDay, 2, '0');\n\t\t\ttmpYear = this.stringPadStart(tmpYear, 4, '0');\n\t\t}\n\n\t\treturn `${tmpMonth}/${tmpDay}/${tmpYear}`;\n\t}\n\t\n\tformatSortableStringFromDate (pDate)\n\t{\n\t\treturn pDate.getFullYear()+this.stringPadStart(pDate.getMonth(),2,'0')+this.stringPadStart(pDate.getDate(),2,'0');\n\t}\n\n\t/*************************************************************************\n\t * String Tokenization Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Return the string before the matched substring.\n\t *\n\t * If the substring is not found, the entire string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringBeforeMatch (pString, pMatch)\n\t{\n\t\treturn pString.split(pMatch)[0];\n\t}\n\n\t/**\n\t * Return the string after the matched substring.\n\t *\n\t * If the substring is not found, an empty string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringAfterMatch (pString, pMatch)\n\t{\n\t\tlet tmpStringSplitLocation = pString.indexOf(pMatch);\n\n\t\tif ((tmpStringSplitLocation < 0) || ((tmpStringSplitLocation + pMatch.length) >= pString.length))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn pString.substring(tmpStringSplitLocation + pMatch.length);\n\t}\n\n\t/**\n\t * Count the number of segments in a string, respecting enclosures\n\t * \n\t * @param {string} pString \n\t * @param {string} pSeparator \n\t * @param {object} pEnclosureStartSymbolMap \n\t * @param {object} pEnclosureEndSymbolMap \n\t * @returns the count of segments in the string as a number\n\t */\n\tstringCountSegments(pString, pSeparator, pEnclosureStartSymbolMap, pEnclosureEndSymbolMap)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\n\t\tlet tmpSeparator = (typeof(pSeparator) == 'string') ? pSeparator : '.';\n\n\t\tlet tmpEnclosureStartSymbolMap = (typeof(pEnclosureStartSymbolMap) == 'object') ? pEnclosureStart : { '{': 0, '[': 1, '(': 2 };\n\t\tlet tmpEnclosureEndSymbolMap = (typeof(pEnclosureEndSymbolMap) == 'object') ? pEnclosureEnd : { '}': 0, ']': 1, ')': 2 };\n\n\t\tif (pString.length < 1)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet tmpSegmentCount = 1;\n\t\tlet tmpEnclosureStack = [];\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// IF This is the start of a segment\n\t\t\tif ((tmpString[i] == tmpSeparator)\n\t\t\t\t// AND we are not in a nested portion of the string\n\t\t\t\t&& (tmpEnclosureStack.length == 0))\n\t\t\t{\n\t\t\t\t// Increment the segment count\n\t\t\t\ttmpSegmentCount++;\n\t\t\t}\n\t\t\t// IF This is the start of an enclosure\n\t\t\telse if (tmpEnclosureStartSymbolMap.hasOwnProperty(tmpString[i]))\n\t\t\t{\n\t\t\t\t// Add it to the stack!\n\t\t\t\ttmpEnclosureStack.push(tmpEnclosureStartSymbolMap[tmpString[i]]);\n\t\t\t}\n\t\t\t// IF This is the end of an enclosure\n\t\t\telse if (tmpEnclosureEndSymbolMap.hasOwnProperty(tmpString[i])\n\t\t\t\t// AND it matches the current nest level symbol\n\t\t\t\t&& tmpEnclosureEndSymbolMap[tmpString[i]] == tmpEnclosureStack[tmpEnclosureStack.length - 1])\n\t\t\t{\n\t\t\t\t// Pop it off the stack!\n\t\t\t\ttmpEnclosureStack.pop();\n\t\t\t}\n\t\t}\n\n\t\treturn tmpSegmentCount;\n\t}\n\n\t/**\n\t * Get all segments in a string, respecting enclosures\n\t * \n\t * @param {string} pString \n\t * @param {string} pSeparator \n\t * @param {object} pEnclosureStartSymbolMap \n\t * @param {object} pEnclosureEndSymbolMap \n\t * @returns the first segment in the string as a string\n\t */\n\tstringGetSegments(pString, pSeparator, pEnclosureStartSymbolMap, pEnclosureEndSymbolMap)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\n\t\tlet tmpSeparator = (typeof(pSeparator) == 'string') ? pSeparator : '.';\n\n\t\tlet tmpEnclosureStartSymbolMap = (typeof(pEnclosureStartSymbolMap) == 'object') ? pEnclosureStart : { '{': 0, '[': 1, '(': 2, '\"':3, \"'\":4 };\n\t\tlet tmpEnclosureEndSymbolMap = (typeof(pEnclosureEndSymbolMap) == 'object') ? pEnclosureEnd : { '}': 0, ']': 1, ')': 2, '\"':3, \"'\":4 };\n\n\t\tlet tmpCurrentSegmentStart = 0;\n\t\tlet tmpSegmentList = [];\n\n\t\tif (pString.length < 1)\n\t\t{\n\t\t\treturn tmpSegmentList;\n\t\t}\n\n\t\tlet tmpEnclosureStack = [];\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// IF This is the start of a segment\n\t\t\tif ((tmpString[i] == tmpSeparator)\n\t\t\t\t// AND we are not in a nested portion of the string\n\t\t\t\t&& (tmpEnclosureStack.length == 0))\n\t\t\t{\n\t\t\t\t// Return the segment\n\t\t\t\ttmpSegmentList.push(tmpString.substring(tmpCurrentSegmentStart, i));\n\t\t\t\ttmpCurrentSegmentStart = i+1;\n\t\t\t}\n\t\t\t// IF This is the start of an enclosure\n\t\t\telse if (tmpEnclosureStartSymbolMap.hasOwnProperty(tmpString[i]))\n\t\t\t{\n\t\t\t\t// Add it to the stack!\n\t\t\t\ttmpEnclosureStack.push(tmpEnclosureStartSymbolMap[tmpString[i]]);\n\t\t\t}\n\t\t\t// IF This is the end of an enclosure\n\t\t\telse if (tmpEnclosureEndSymbolMap.hasOwnProperty(tmpString[i])\n\t\t\t\t// AND it matches the current nest level symbol\n\t\t\t\t&& tmpEnclosureEndSymbolMap[tmpString[i]] == tmpEnclosureStack[tmpEnclosureStack.length - 1])\n\t\t\t{\n\t\t\t\t// Pop it off the stack!\n\t\t\t\ttmpEnclosureStack.pop();\n\t\t\t}\n\t\t}\n\n\t\tif (tmpCurrentSegmentStart < tmpString.length)\n\t\t{\n\t\t\ttmpSegmentList.push(tmpString.substring(tmpCurrentSegmentStart));\n\t\t}\n\n\t\treturn tmpSegmentList;\n\t}\n\n\t/**\n\t * Get the first segment in a string, respecting enclosures\n\t * \n\t * @param {string} pString \n\t * @param {string} pSeparator \n\t * @param {object} pEnclosureStartSymbolMap \n\t * @param {object} pEnclosureEndSymbolMap \n\t * @returns the first segment in the string as a string\n\t */\n\tstringGetFirstSegment(pString, pSeparator, pEnclosureStartSymbolMap, pEnclosureEndSymbolMap)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\n\t\tlet tmpSeparator = (typeof(pSeparator) == 'string') ? pSeparator : '.';\n\n\t\tlet tmpEnclosureStartSymbolMap = (typeof(pEnclosureStartSymbolMap) == 'object') ? pEnclosureStart : { '{': 0, '[': 1, '(': 2 };\n\t\tlet tmpEnclosureEndSymbolMap = (typeof(pEnclosureEndSymbolMap) == 'object') ? pEnclosureEnd : { '}': 0, ']': 1, ')': 2 };\n\n\t\tif (pString.length < 1)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet tmpEnclosureStack = [];\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// IF This is the start of a segment\n\t\t\tif ((tmpString[i] == tmpSeparator)\n\t\t\t\t// AND we are not in a nested portion of the string\n\t\t\t\t&& (tmpEnclosureStack.length == 0))\n\t\t\t{\n\t\t\t\t// Return the segment\n\t\t\t\treturn tmpString.substring(0, i);\n\t\t\t}\n\t\t\t// IF This is the start of an enclosure\n\t\t\telse if (tmpEnclosureStartSymbolMap.hasOwnProperty(tmpString[i]))\n\t\t\t{\n\t\t\t\t// Add it to the stack!\n\t\t\t\ttmpEnclosureStack.push(tmpEnclosureStartSymbolMap[tmpString[i]]);\n\t\t\t}\n\t\t\t// IF This is the end of an enclosure\n\t\t\telse if (tmpEnclosureEndSymbolMap.hasOwnProperty(tmpString[i])\n\t\t\t\t// AND it matches the current nest level symbol\n\t\t\t\t&& tmpEnclosureEndSymbolMap[tmpString[i]] == tmpEnclosureStack[tmpEnclosureStack.length - 1])\n\t\t\t{\n\t\t\t\t// Pop it off the stack!\n\t\t\t\ttmpEnclosureStack.pop();\n\t\t\t}\n\t\t}\n\n\t\treturn tmpString;\n\t}\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures (pString, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\tif (tmpEnclosureDepth == 0)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t}\n\t\t\t\ttmpEnclosureDepth++;\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpEnclosureCount;\n\t}\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosedValueStartIndex = 0;\n\t\tlet tmpEnclosedValueEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This is the end of an enclosure\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t\t{\n\t\t\t// Return an empty string if the enclosure is not found\n\t\t\treturn '';\n\t\t}\n\n\t\tif ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t\t}\n\t}\n\n\n\t/**\n\t * Remove an enclosure from a string based on the index of the enclosure.\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToRemove\n\t * @param {number} pEnclosureStart\n\t * @param {number} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringRemoveEnclosureByIndex (pString, pEnclosureIndexToRemove, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToRemove = (typeof(pEnclosureIndexToRemove) == 'number') ? pEnclosureIndexToRemove : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosureStartIndex = 0;\n\t\tlet tmpEnclosureEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToRemove == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosureStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosureEndIndex <= tmpEnclosureStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToRemove)\n\t\t{\n\t\t\treturn tmpString;\n\t\t}\n\n\t\tlet tmpReturnString = '';\n\n\t\tif (tmpEnclosureStartIndex > 1)\n\t\t{\n\t\t\ttmpReturnString = tmpString.substring(0, tmpEnclosureStartIndex);\n\t\t}\n\n\t\tif ((tmpString.length > (tmpEnclosureEndIndex + 1)) && (tmpEnclosureEndIndex > tmpEnclosureStartIndex))\n\t\t{\n\t\t\ttmpReturnString += tmpString.substring(tmpEnclosureEndIndex+1);\n\t\t}\n\n\t\treturn tmpReturnString;\n\t}\n}\n\nmodule.exports = DataFormat;\n},{\"fable-serviceproviderbase\":52}],62:[function(require,module,exports){\nmodule.exports={\n\t\"DefaultIntegerMinimum\": 0,\n\t\"DefaultIntegerMaximum\": 9999999,\n\n\t\"DefaultNumericStringLength\": 10,\n\n\t\"MonthSet\": [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n\n\t\"WeekDaySet\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n\n\t\"ColorSet\": \n\t\t[\n\t\t\t\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Indigo\", \"Violet\", \"Pink\", \"Purple\", \"Turquoise\", \"Gold\",\n\t\t\t\"Lime\", \"Maroon\", \"Navy\", \"Coral\", \"Teal\", \"Brown\", \"White\", \"Black\", \"Sky\", \"Berry\",\n\t\t\t\"Grey\", \"Straw\", \"Silver\", \"Sapphire\"\n\t\t],\n\n\t\"SurNameSet\":\n\t\t[\n\t\t\t\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Miller\", \"Davis\", \"Garcia\", \"Rodriguez\", \"Wilson\",\n\t\t\t\"Martinez\", \"Anderson\", \"Taylor\", \"Thomas\", \"Hernandez\", \"Moore\", \"Martin\", \"Jackson\", \"Thompson\", \"White\",\n\t\t\t\"Lopez\", \"Lee\", \"Gonzalez\", \"Harris\", \"Clark\", \"Lewis\", \"Robinson\", \"Walker\", \"Perez\", \"Hall\",\n\t\t\t\"Young\", \"Allen\", \"Sanchez\", \"Wright\", \"King\", \"Scott\", \"Green\", \"Baker\", \"Adams\", \"Nelson\",\n\t\t\t\"Hill\", \"Ramirez\", \"Campbell\", \"Mitchell\", \"Roberts\", \"Carter\", \"Phillips\", \"Evans\", \"Turner\", \"Torres\",\n\t\t\t\"Parker\", \"Collins\", \"Edwards\", \"Stewart\", \"Flores\", \"Morris\", \"Nguyen\", \"Murphy\", \"Rivera\", \"Cook\",\n\t\t\t\"Rogers\", \"Morgan\", \"Peterson\", \"Cooper\", \"Reed\", \"Bailey\", \"Bell\", \"Gomez\", \"Kelly\", \"Howard\",\n\t\t\t\"Ward\", \"Cox\", \"Diaz\", \"Richardson\", \"Wood\", \"Watson\", \"Brooks\", \"Bennett\", \"Gray\", \"James\",\n\t\t\t\"Reyes\", \"Cruz\", \"Hughes\", \"Price\", \"Myers\", \"Long\", \"Foster\", \"Sanders\", \"Ross\", \"Morales\",\n\t\t\t\"Powell\", \"Sullivan\", \"Russell\", \"Ortiz\", \"Jenkins\", \"Gutierrez\", \"Perry\", \"Butler\", \"Barnes\", \"Fisher\"\n\t\t],\n\n\t\"NameSet\":\n\t\t[\n\t\t\t\"Mary\", \"Patricia\", \"Jennifer\", \"Linda\", \"Elizabeth\", \"Barbara\", \"Susan\", \"Jessica\", \"Sarah\", \"Karen\",\n\t\t\t\"Lisa\", \"Nancy\", \"Betty\", \"Sandra\", \"Margaret\", \"Ashley\", \"Kimberly\", \"Emily\", \"Donna\", \"Michelle\",\n\t\t\t\"Carol\", \"Amanda\", \"Melissa\", \"Deborah\", \"Stephanie\", \"Dorothy\", \"Rebecca\", \"Sharon\", \"Laura\", \"Cynthia\",\n\t\t\t\"Amy\", \"Kathleen\", \"Angela\", \"Shirley\", \"Brenda\", \"Emma\", \"Anna\", \"Pamela\", \"Nicole\", \"Samantha\",\n\t\t\t\"Katherine\", \"Christine\", \"Helen\", \"Debra\", \"Rachel\", \"Carolyn\", \"Janet\", \"Maria\", \"Catherine\", \"Heather\",\n\t\t\t\"Diane\", \"Olivia\", \"Julie\", \"Joyce\", \"Victoria\", \"Ruth\", \"Virginia\", \"Lauren\", \"Kelly\", \"Christina\",\n\t\t\t\"Joan\", \"Evelyn\", \"Judith\", \"Andrea\", \"Hannah\", \"Megan\", \"Cheryl\", \"Jacqueline\", \"Martha\", \"Madison\",\n\t\t\t\"Teresa\", \"Gloria\", \"Sara\", \"Janice\", \"Ann\", \"Kathryn\", \"Abigail\", \"Sophia\", \"Frances\", \"Jean\",\n\t\t\t\"Alice\", \"Judy\", \"Isabella\", \"Julia\", \"Grace\", \"Amber\", \"Denise\", \"Danielle\", \"Marilyn\", \"Beverly\",\n\t\t\t\"Charlotte\", \"Natalie\", \"Theresa\", \"Diana\", \"Brittany\", \"Doris\", \"Kayla\", \"Alexis\", \"Lori\", \"Marie\",\n\t\t\t\"James\", \"Robert\", \"John\", \"Michael\", \"David\", \"William\", \"Richard\", \"Joseph\", \"Thomas\", \"Christopher\",\n\t\t\t\"Charles\", \"Daniel\", \"Matthew\", \"Anthony\", \"Mark\", \"Donald\", \"Steven\", \"Andrew\", \"Paul\", \"Joshua\",\n\t\t\t\"Kenneth\", \"Kevin\", \"Brian\", \"George\", \"Timothy\", \"Ronald\", \"Jason\", \"Edward\", \"Jeffrey\", \"Ryan\",\n\t\t\t\"Jacob\", \"Gary\", \"Nicholas\", \"Eric\", \"Jonathan\", \"Stephen\", \"Larry\", \"Justin\", \"Scott\", \"Brandon\",\n\t\t\t\"Benjamin\", \"Samuel\", \"Gregory\", \"Alexander\", \"Patrick\", \"Frank\", \"Raymond\", \"Jack\", \"Dennis\", \"Jerry\",\n\t\t\t\"Tyler\", \"Aaron\", \"Jose\", \"Adam\", \"Nathan\", \"Henry\", \"Zachary\", \"Douglas\", \"Peter\", \"Kyle\",\n\t\t\t\"Noah\", \"Ethan\", \"Jeremy\", \"Walter\", \"Christian\", \"Keith\", \"Roger\", \"Terry\", \"Austin\", \"Sean\",\n\t\t\t\"Gerald\", \"Carl\", \"Harold\", \"Dylan\", \"Arthur\", \"Lawrence\", \"Jordan\", \"Jesse\", \"Bryan\", \"Billy\",\n\t\t\t\"Bruce\", \"Gabriel\", \"Joe\", \"Logan\", \"Alan\", \"Juan\", \"Albert\", \"Willie\", \"Elijah\", \"Wayne\",\n\t\t\t\"Randy\", \"Vincent\", \"Mason\", \"Roy\", \"Ralph\", \"Bobby\", \"Russell\", \"Bradley\", \"Philip\", \"Eugene\"\n\t\t]\n}\n},{}],63:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceDataGeneration extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'DataGeneration';\n\n\t\tthis.defaultData = require('./Fable-Service-DataGeneration-DefaultValues.json');\n\t}\n\n\t// Return a random integer between pMinimum and pMaximum\n\trandomIntegerBetween(pMinimum, pMaximum)\n\t{\n\t\treturn Math.floor(Math.random() * (pMaximum - pMinimum)) + pMinimum;\n\t}\n\t// Return a random integer up to the passed-in maximum\n\trandomIntegerUpTo(pMaximum)\n\t{\n\t\treturn this.randomIntegerBetween(0, pMaximum);\n\t}\n\t// Return a random integer between 0 and 9999999\n\trandomInteger()\n\t{\n\t\treturn Math.floor(Math.random()*this.defaultData.DefaultIntegerMaximum);\n\t}\n\n\n\trandomNumericString(pLength, pMaxNumber)\n\t{\n\t\tlet tmpLength = (typeof(pLength) === 'undefined') ? 10 : pLength;\n\t\tlet tmpMaxNumber = (typeof(pMaxNumber) === 'undefined') ? 9999999999 : pMaxNumber;\n\n\t\treturn this.services.DataFormat.stringPadStart(this.randomIntegerUpTo(tmpMaxNumber), pLength, '0');\n\t}\n\n\n\trandomMonth()\n\t{\n\t\treturn this.defaultData.MonthSet[this.randomIntegerUpTo(this.defaultData.MonthSet.length-1)];\n\t}\n\trandomDayOfWeek()\n\t{\n\t\treturn this.defaultData.WeekDaySet[this.randomIntegerUpTo(this.defaultData.WeekDaySet.length-1)];\n\t}\n\n\n\trandomColor()\n\t{\n\t\treturn this.defaultData.ColorSet[this.randomIntegerUpTo(this.defaultData.ColorSet.length-1)];\n\t}\n\n\n\trandomName()\n\t{\n\t\treturn this.defaultData.NameSet[this.randomIntegerUpTo(this.defaultData.NameSet.length-1)];\n\t}\n\trandomSurname()\n\t{\n\t\treturn this.defaultData.SurNameSet[this.randomIntegerUpTo(this.defaultData.SurNameSet.length-1)];\n\t}\n}\n\nmodule.exports = FableServiceDataGeneration;\n},{\"./Fable-Service-DataGeneration-DefaultValues.json\":62,\"fable-serviceproviderbase\":52}],64:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Date management a la Moment using days.js\n*\n* @class DateManipulation\n*/\nclass DateManipulation extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'Dates';\n\n\t\tthis.dayJS = require('dayjs');\n\n\t\t// Include the `weekOfYear` plugin\n\t\tthis.plugin_weekOfYear = require('dayjs/plugin/weekOfYear');\n\t\tthis.dayJS.extend(this.plugin_weekOfYear);\n\t\t// Include the `weekday` plugin\n\t\tthis.plugin_weekday = require('dayjs/plugin/weekday');\n\t\tthis.dayJS.extend(this.plugin_weekday);\n\t\t// Include the `isoWeek` plugin\n\t\tthis.plugin_isoWeek = require('dayjs/plugin/isoWeek');\n\t\tthis.dayJS.extend(this.plugin_isoWeek);\n\t\t// Include the `timezone` plugin\n\t\tthis.plugin_timezone = require('dayjs/plugin/timezone');\n\t\tthis.dayJS.extend(this.plugin_timezone);\n\t\t// Include the `relativetime` plugin\n\t\tthis.plugin_relativetime = require('dayjs/plugin/relativeTime');\n\t\tthis.dayJS.extend(this.plugin_relativetime);\n\t\t// Include the `utc` plugin\n\t\tthis.plugin_utc = require('dayjs/plugin/utc');\n\t\tthis.dayJS.extend(this.plugin_utc);\n\t\t// Include the `advancedFormat` plugin\n\t\tthis.plugin_advancedFormat = require('dayjs/plugin/advancedFormat');\n\t\tthis.dayJS.extend(this.plugin_advancedFormat);\n\n\t\t// A developer can include locales if they want\n\t\t// You would do the following:\n\t\t// const localeDE = require('dayjs/locale/de');\n\t\t// _Fable.Dates.dayJS.locale('de');\n\t}\n}\n\nmodule.exports = DateManipulation;\n},{\"dayjs\":28,\"dayjs/plugin/advancedFormat\":29,\"dayjs/plugin/isoWeek\":30,\"dayjs/plugin/relativeTime\":31,\"dayjs/plugin/timezone\":32,\"dayjs/plugin/utc\":33,\"dayjs/plugin/weekOfYear\":34,\"dayjs/plugin/weekday\":35,\"fable-serviceproviderbase\":52}],65:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceEnvironmentData extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'EnvironmentData';\n\n\t\tthis.Environment = `node.js`;\n\t}\n}\n\nmodule.exports = FableServiceEnvironmentData;\n},{\"fable-serviceproviderbase\":52}],66:[function(require,module,exports){\nconst { PE } = require('big.js');\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\n/* Trying a different pattern for this service ...\n *\n * This service is a simple expression parser that can handle math expressions, with magic(tm) lookup of addresses with a manifest.\n * \n * Each method works multiple ways.\n * \n * 1. You can pass in a results object, and, it will put the state for that step outcome into the results object.\n * 2. It always returns the state, and works without the results object.\n * \n * \n * Learned a lot from this npm package: https://www.npmjs.com/package/math-expression-evaluator\n * And its related code at github: https://github.com/bugwheels94/math-expression-evaluator\n * \n * There were two problems with the codebase...\n * \n * First, the code was very unreadable and determining it was correct or extending it\n * was out of the question.\n * \n * Second, and this is a larger issue, is that we need the expressions to be parsed as\n * arbitrary precision.  When I determined that extending the library to use string-based\n * numbers and an arbitrary precision library as the back-end would have taken a significantly\n * longer amount of time than just writing the parser from scratch, et voila.\n */\n\nclass FableServiceExpressionParser extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.tokenMap = require('./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-TokenMap.json');\n\t\t// This precedence is higher than defined in our token map\n\t\tthis.tokenMaxPrecedence = 5;\n\n\t\tthis.functionMap = require('./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-FunctionMap.json');\n\n\t\tthis.serviceType = 'ExpressionParser';\n\n\t\tthis.fable.addServiceTypeIfNotExists('ExpressionParser-Tokenizer', require('./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-ExpressionTokenizer.js'));\n\t\tthis.fable.addServiceTypeIfNotExists('ExpressionParser-Linter', require('./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-Linter.js'));\n\t\tthis.fable.addServiceTypeIfNotExists('ExpressionParser-Postfix', require('./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-Postfix.js'));\n\t\tthis.fable.addServiceTypeIfNotExists('ExpressionParser-Solver', require('./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-SolvePostfixedExpression.js'));\n\n\t\tthis.Tokenizer = this.fable.instantiateServiceProviderWithoutRegistration('ExpressionParser-Tokenizer');\n\t\tthis.Linter = this.fable.instantiateServiceProviderWithoutRegistration('ExpressionParser-Linter');\n\t\tthis.Postfix = this.fable.instantiateServiceProviderWithoutRegistration('ExpressionParser-Postfix');\n\t\tthis.Solver = this.fable.instantiateServiceProviderWithoutRegistration('ExpressionParser-Solver');\n\n\t\t// Now wire each of these up.  Not in love with this pattern but better than a giant file here.\n\t\tthis.Tokenizer.connectExpressionParser(this);\n\t\tthis.Linter.connectExpressionParser(this);\n\t\tthis.Postfix.connectExpressionParser(this);\n\t\tthis.Solver.connectExpressionParser(this);\n\t}\n\n\tsubstituteValuesInTokenizedObjects(pTokenizedObjects, pDataSource, pResultObject, pManifest)\n\t{\n\t\tlet tmpResults = (typeof(pResultObject) === 'object') ? pResultObject : { ExpressionParserLog: [] };\n\n\t\tif (!Array.isArray(pTokenizedObjects))\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.substituteValuesInTokenizedObjects was passed a non-array tokenized object list.`);\n\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\treturn pTokenizedObjects;\n\t\t}\n\t\tif (typeof(pDataSource) !== 'object')\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.substituteValuesInTokenizedObjects either was passed no data source, or was passed a non-object data source.`);\n\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\treturn pTokenizedObjects;\n\t\t}\n\n\t\tlet tmpDataSource = pDataSource;\n\n\t\tlet tmpManifest = (typeof(pManifest) == 'object') ? pManifest : this.fable.newManyfest(pManifest);\n\n\t\tfor (let i = 0; i < pTokenizedObjects.length; i++)\n\t\t{\n\t\t\tif (typeof(pTokenizedObjects[i]) !== 'object')\n\t\t\t{\n\t\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.substituteValuesInTokenizedObjects found a non-object tokenized object at index ${i}`);\n\t\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet tmpToken = pTokenizedObjects[i];\n\t\t\tif ((pTokenizedObjects[i].Type === 'Token.Symbol') && !tmpToken.Resolved)\n\t\t\t{\n\t\t\t\t// Symbols always look up values by hash first\n\t\t\t\tlet tmpValue = tmpManifest.getValueByHash(tmpDataSource, tmpToken.Token);\n\t\t\t\t// if (!tmpValue)\n\t\t\t\t// {\n\t\t\t\t// \t// If no hash resolves, try by address.\n\t\t\t\t// \ttmpValue = tmpManifest.getValueAtAddress(tmpToken.Token, tmpDataSource);\n\t\t\t\t// }\n\t\t\t\tif (!tmpValue)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.substituteValuesInTokenizedObjects found no value for the symbol hash or address ${tmpToken.Token} at index ${i}`);\n\t\t\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`INFO: ExpressionParser.substituteValuesInTokenizedObjects found a value [${tmpValue}] for the state address ${tmpToken.Token} at index ${i}`);\n\t\t\t\t\tthis.log.info(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueParsed = new this.fable.Utility.bigNumber(tmpValue);\n\t\t\t\t\t\ttmpToken.Resolved = true;\n\t\t\t\t\t\ttmpToken.Value = tmpValueParsed.toString();\n\t\t\t\t\t}\n\t\t\t\t\tcatch(pError)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.substituteValuesInTokenizedObjects found a non-numeric value for the state address ${tmpToken.Token} at index ${i}`);\n\t\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\t\ttmpToken.Resolved = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((pTokenizedObjects[i].Type === 'Token.StateAddress') && !tmpToken.Resolved)\n\t\t\t{\n\t\t\t\t// Symbols are always hashes.  This gracefully works for simple shallow objects because hashes default to the address in Manyfest.\n\t\t\t\tlet tmpValue = tmpManifest.getValueAtAddress(tmpDataSource, tmpToken.Token);\n\t\t\t\tif (!tmpValue)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.substituteValuesInTokenizedObjects found no value for the state address ${tmpToken.Token} at index ${i}`);\n\t\t\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`INFO: ExpressionParser.substituteValuesInTokenizedObjects found a value [${tmpValue}] for the state address ${tmpToken.Token} at index ${i}`);\n\t\t\t\t\tthis.log.info(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueParsed = new this.fable.Utility.bigNumber(tmpValue);\n\t\t\t\t\t\ttmpToken.Resolved = true;\n\t\t\t\t\t\ttmpToken.Value = tmpValueParsed.toString();\n\t\t\t\t\t}\n\t\t\t\t\tcatch(pError)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.substituteValuesInTokenizedObjects found a non-numeric value for the state address ${tmpToken.Token} at index ${i}`);\n\t\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\t\ttmpToken.Resolved = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((pTokenizedObjects[i].Type === 'Token.Constant') && !tmpToken.Resolved)\n\t\t\t{\n\t\t\t\ttmpResults.ExpressionParserLog.push(`INFO: ExpressionParser.substituteValuesInTokenizedObjects found a value [${tmpToken.Token}] for the constant ${tmpToken.Token} at index ${i}`);\n\t\t\t\tthis.log.info(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tlet tmpValueParsed = new this.fable.Utility.bigNumber(tmpToken.Token);\n\t\t\t\t\ttmpToken.Resolved = true;\n\t\t\t\t\ttmpToken.Value = tmpValueParsed.toString();\n\t\t\t\t}\n\t\t\t\tcatch(pError)\n\t\t\t\t{\n\t\t\t\t\t// This constant has the right symbols but apparently isn't a parsable number.\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.substituteValuesInTokenizedObjects found a non-numeric value for the state address ${tmpToken.Token} at index ${i}`);\n\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\ttmpToken.Resolved = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn pTokenizedObjects;\n\t}\n\n\ttokenize(pExpression, pResultObject)\n\t{\n\t\treturn this.Tokenizer.tokenize(pExpression, pResultObject);\n\t}\n\n\tlintTokenizedExpression(pTokenizedExpression, pResultObject)\n\t{\n\t\treturn this.Linter.lintTokenizedExpression(pTokenizedExpression, pResultObject);\n\t}\n\n\tbuildPostfixedSolveList(pTokenizedExpression, pResultObject)\n\t{\n\t\treturn this.Postfix.buildPostfixedSolveList(pTokenizedExpression, pResultObject);\n\t}\n\n\tsolvePostfixedExpression(pPostfixedExpression, pDataDestinationObject, pResultObject, pManifest)\n\t{\n\t\treturn this.Solver.solvePostfixedExpression(pPostfixedExpression, pDataDestinationObject, pResultObject, pManifest);\n\t}\n\n\tsolve(pExpression, pDataSourceObject, pResultObject, pManifest, pDataDestinationObject)\n\t{\n\t\tlet tmpResultsObject = (typeof(pResultObject) === 'object') ? pResultObject : {};\n\t\tlet tmpDataSourceObject = (typeof(pDataSourceObject) === 'object') ? pDataSourceObject : {};\n\t\tlet tmpDataDestinationObject = (typeof(pDataDestinationObject) === 'object') ? pDataDestinationObject : {};\n\n\t\tthis.tokenize(pExpression, tmpResultsObject);\n\t\tthis.lintTokenizedExpression(tmpResultsObject.RawTokens, tmpResultsObject);\n\t\tthis.buildPostfixedSolveList(tmpResultsObject.RawTokens, tmpResultsObject);\n\t\t\n\t\tthis.substituteValuesInTokenizedObjects(tmpResultsObject.PostfixTokenObjects, tmpDataSourceObject, tmpResultsObject, pManifest);\n\t\treturn this.solvePostfixedExpression(tmpResultsObject.PostfixSolveList, tmpDataDestinationObject, tmpResultsObject, pManifest);\n\t}\n}\n\nmodule.exports = FableServiceExpressionParser;\n},{\"./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-ExpressionTokenizer.js\":68,\"./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-FunctionMap.json\":69,\"./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-Linter.js\":70,\"./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-Postfix.js\":71,\"./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-SolvePostfixedExpression.js\":72,\"./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-TokenMap.json\":73,\"big.js\":17,\"fable-serviceproviderbase\":52}],67:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nclass ExpressionParserOperationBase extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'ExpressionParserOperationBase';\n\n\t\tthis.numberTest = /^-{0,1}\\d*\\.{0,1}\\d+$/;\n\n\t\tthis.ExpressionParser = false;\n\t}\n\n\tconnectExpressionParser(pExpressionParser)\n\t{\n\t\tthis.ExpressionParser = pExpressionParser;\n\t}\n\n\tgetTokenType(pToken)\n\t{\n\t\tif (this.ExpressionParser.tokenMap.hasOwnProperty(pToken))\n\t\t{\n\t\t\treturn `Token.${this.ExpressionParser.tokenMap[pToken].Type}`;\n\t\t}\n\t\telse if ((pToken.length > 2) && (pToken[0] === '{') && (pToken[pToken.length-1] === '}'))\n\t\t{\n\t\t\treturn 'Token.StateAddress';\n\t\t}\n\t\telse if (this.numberTest.test(pToken))\n\t\t{\n\t\t\treturn 'Token.Constant';\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn 'Token.Symbol';\n\t\t}\n\t\t// Just for documentation sake:\n\t\t// There is a fifth token type, VirtualSymbol\n\t\t// This is a value that's added during solve and looked up by address in the VirtualSymbol object.\n\t}\n\n\tgetTokenContainerObject(pToken, pTokenType)\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tToken: pToken,\n\t\t\t\tType: (typeof(pTokenType) === 'undefined') ? this.getTokenType(pToken) : pTokenType,\n\t\t\t\tDescriptor: this.ExpressionParser.tokenMap.hasOwnProperty(pToken) ? this.ExpressionParser.tokenMap[pToken] : false\n\t\t\t});\n\t}\n}\n\nmodule.exports = ExpressionParserOperationBase;\n},{\"fable-serviceproviderbase\":52}],68:[function(require,module,exports){\nconst libExpressionParserOperationBase = require('./Fable-Service-ExpressionParser-Base.js');\n\nclass ExpressionTokenizer extends libExpressionParserOperationBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'ExpressionParser-Tokenizer';\n\t}\n\n\ttokenize(pExpression, pResultObject)\n\t{\n\t\tlet tmpResults = (typeof(pResultObject) === 'object') ? pResultObject : { ExpressionParserLog: [] };\n\n\t\ttmpResults.RawExpression = pExpression;\n\t\ttmpResults.RawTokens = [];\n\t\ttmpResults.ExpressionParserLog = [];\n\n\t\tif (typeof(pExpression) !== 'string')\n\t\t{\n\t\t\tthis.log.warn('ExpressionParser.tokenize was passed a non-string expression.');\n\t\t\treturn tmpResults.RawTokens;\n\t\t}\n\n\t\t/* Tokenize the expression\n\t\t *\n\t\t * Current token types:\n\t\t * \t- Value\n\t\t *    : could be a symbol representation e.g. \"x\", \"depth\", \"Cost\", etc. --- symbol representations are looked up first as manifest hashes\n\t\t *    : could be a number e.g. \"5\", \"3.14159\", etc.\n\t\t *    : could be a function name e.g. sin(x), sqrt(3+5) where sin or sqrt are known function names\n\t\t *  - StateAddress\n\t\t *    : these are always wrapped in squiggly brackets\n\t\t *    : e.g. {Moisture.Percentage}, {Ending.Temperature.Fahrenheit}, {AppData.Download.Size}, etc.\n\t\t *  - Token\n\t\t *    : could be an operator e.g. \"+\", \"-\", \"*\", \"/\"\n\t\t *    : could be a parenthesis e.g. \"(\", \")\"\n\t\t */\n\t\tlet tmpCurrentTokenType = false;\n\t\tlet tmpCurrentToken = '';\n\t\tfor (let i = 0; i < pExpression.length; i++)\n\t\t{\n\t\t\tlet tmpCharacter = pExpression[i];\n\n\t\t\t// [ WHITESPACE ]\n\t\t\t// 1. Space breaks tokens except when we're in an address that's been scoped by a {}\n\t\t\tif ((tmpCharacter === ' ') && (tmpCurrentTokenType !== 'StateAddress'))\n\t\t\t{\n\t\t\t\tif (tmpCurrentToken.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.RawTokens.push(tmpCurrentToken);\n\t\t\t\t}\n\t\t\t\ttmpCurrentToken = '';\n\t\t\t\ttmpCurrentTokenType = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// [ STATE ADDRESS BLOCKS ]\n\t\t\t// 2. If we're in an address, we keep going until we hit the closing brace\n\t\t\tif ((tmpCurrentTokenType === 'StateAddress') && (tmpCharacter !== '}'))\n\t\t\t{\n\t\t\t\ttmpCurrentToken += tmpCharacter;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// 3. If we're in an address and we hit the closing brace, we close the token, push it and reset\n\t\t\tif ((tmpCurrentTokenType === 'StateAddress') && (tmpCharacter === '}'))\n\t\t\t{\n\t\t\t\ttmpCurrentToken += tmpCharacter;\n\t\t\t\ttmpResults.RawTokens.push(tmpCurrentToken);\n\t\t\t\ttmpCurrentToken = '';\n\t\t\t\ttmpCurrentTokenType = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// 4. If we're not in an address and we hit a closing brace it's a problem\n\t\t\t//    TODO: Should we just ignore it?  We do at the moment.\n\t\t\tif (tmpCharacter == '}')\n\t\t\t{\n\t\t\t\tif (tmpCurrentToken.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.RawTokens.push(tmpCurrentToken);\n\t\t\t\t}\n\t\t\t\ttmpCurrentToken = '';\n\t\t\t\ttmpCurrentTokenType = false;\n\t\t\t\ttmpResults.ExpressionParserLog.push(`ExpressionParser.tokenize found a closing brace without an opening brace in the expression: ${pExpression} at character index ${i}`);\n\t\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// 5. If we're not in an address and we hit an opening brace, we start an address\n\t\t\tif (tmpCharacter == '{')\n\t\t\t{\n\t\t\t\tif (tmpCurrentToken.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.RawTokens.push(tmpCurrentToken);\n\t\t\t\t}\n\t\t\t\ttmpCurrentToken = '';\n\t\t\t\ttmpCurrentTokenType = 'StateAddress';\n\t\t\t\ttmpCurrentToken = tmpCharacter;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// [ TOKENS ]\n\t\t\tif (this.ExpressionParser.tokenMap.hasOwnProperty(tmpCharacter))\n\t\t\t{\n\t\t\t\tif (tmpCurrentToken.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.RawTokens.push(tmpCurrentToken);\n\t\t\t\t}\n\t\t\t\ttmpCurrentToken = '';\n\t\t\t\ttmpCurrentTokenType = false;\n\t\t\t\ttmpResults.RawTokens.push(tmpCharacter);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If it's not an operator, it's a number or address.\n\t\t\t// At the moment we aren't going to gate it on whether it's a valid address or not\n\t\t\t// Just treat anything not a known token on its own as a value identifier\n\n\t\t\t/* Per this stack overflow article: https://stackoverflow.com/questions/4434076/best-way-to-alphanumeric-check-in-javascript\n\t\t\t * We could use a regex but it is slower than the charCodeAt method.\n\t\t\t * This also doesn't solve the problem of unicode characters, but we won't support those for now.\n\t\t\t */\n\t\t\t// if (pExpression.charAt(i) == '.')\n\t\t\t// {\n\t\t\t// \tconsole.log('Found a period')\n\t\t\t// }\n\t\t\t// let tmpCharCode = pExpression.charCodeAt(i);\n\t\t\t// // Match that the character code is any of...\n\t\t\t// if (\n\t\t\t// \t// Number [0-9]\n\t\t\t// \t(tmpCharCode > 47 && tmpCharCode < 58)\n\t\t\t// \t// Upper Case\n\t\t\t// \t|| (tmpCharCode > 64 && tmpCharCode < 91)\n\t\t\t// \t// LOWER CASE\n\t\t\t// \t|| (tmpCharCode > 96 && tmpCharCode < 123)\n\t\t\t// \t)\n\t\t\t// {\n\n\t\t\t\t// NOTE: Not having this guard makes a lot of interesting things possible.\n\t\t\ttmpCurrentTokenType = 'Value';\n\t\t\ttmpCurrentToken += tmpCharacter;\n\t\t\t// \tcontinue;\n\t\t\t// }\n\n\t\t\t// tmpResults.ExpressionParserLog.push(`ExpressionParser.tokenize found an unknown character code ${tmpCharCode} character ${tmpCharacter} in the expression: ${pExpression} at index ${i}`);\n\t\t\t// this.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t}\n\n\t\tif ((tmpCurrentTokenType) && (tmpCurrentToken.length > 0))\n\t\t{\n\t\t\ttmpResults.RawTokens.push(tmpCurrentToken);\n\t\t}\n\n\t\treturn tmpResults.RawTokens;\n\t}\n}\n\nmodule.exports = ExpressionTokenizer;\n},{\"./Fable-Service-ExpressionParser-Base.js\":67}],69:[function(require,module,exports){\nmodule.exports={\n\t\"sqrt\":\n\t\t{\n\t\t\t\"Name\": \"Square Root\",\n\t\t\t\"Address\": \"fable.Math.sqrtPrecise\"\n\t\t},\n\t\"abs\":\n\t\t{\n\t\t\t\"Name\": \"Absolute Value\",\n\t\t\t\"Address\": \"fable.Math.absPrecise\"\n\t\t},\n\t\"rad\":\n\t\t{\n\t\t\t\"Name\": \"Degrees to Radians\",\n\t\t\t\"Address\": \"fable.Math.radPrecise\"\n\t\t},\n\t\"sin\":\n\t\t{\n\t\t\t\"Name\": \"Sine\",\n\t\t\t\"Address\": \"fable.Math.sin\"\n\t\t}\n}\n},{}],70:[function(require,module,exports){\nconst libExpressionParserOperationBase = require('./Fable-Service-ExpressionParser-Base.js');\n\nclass ExpressionParserLinter extends libExpressionParserOperationBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'ExpressionParser-Linter';\n\t}\n\n\tlintTokenizedExpression(pTokenizedExpression, pResultObject)\n\t{\n\t\tlet tmpResults = (typeof(pResultObject) === 'object') ? pResultObject : { ExpressionParserLog: [] };\n\n\t\ttmpResults.LinterResults = [];\n\n\t\t// Guard against bad data being passed in\n\t\tif (!Array.isArray(pTokenizedExpression))\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.lintTokenizedExpression was passed a non-array tokenized expression.`);\n\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\treturn pTokenizedExpression;\n\t\t}\n\t\tif (pTokenizedExpression.length < 1)\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.lintTokenizedExpression was passed an empty tokenized expression.`);\n\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\treturn pTokenizedExpression;\n\t\t}\n\n\t\t// 1. Check for balanced parenthesis\n\t\tlet tmpParenthesisDepth = 0;\n\t\t// If it is in a state address, we don't care about the parenthesis\n\t\t// State addresses are between squiggly brackets\n\t\tlet tmpInStateAddress = false;\n\t\tfor (let i = 0; i < pTokenizedExpression.length; i++)\n\t\t{\n\t\t\tif ((pTokenizedExpression[i] === '(') && (!tmpInStateAddress))\n\t\t\t{\n\t\t\t\ttmpParenthesisDepth++;\n\t\t\t}\n\t\t\tif ((pTokenizedExpression[i] === ')') && (!tmpInStateAddress))\n\t\t\t{\n\t\t\t\ttmpParenthesisDepth--;\n\t\t\t}\n\n\t\t\tif (pTokenizedExpression[i] === '{')\n\t\t\t{\n\t\t\t\ttmpInStateAddress = true;\n\t\t\t}\n\t\t\tif (pTokenizedExpression[i] === '}')\n\t\t\t{\n\t\t\t\ttmpInStateAddress = false;\n\t\t\t}\n\n\t\t\tif (tmpParenthesisDepth < 0)\n\t\t\t{\n\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.lintTokenizedExpression found an unbalanced parenthesis in the tokenized expression at token index ${i}`);\n\t\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t}\n\t\t}\n\t\tif (tmpParenthesisDepth > 0)\n\t\t{\n\t\t\t// TODO: Should we add the closing parenthesis?\n\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.lintTokenizedExpression found an unbalanced parenthesis in the tokenized expression (ended without closing last set of parenthesis) -- appropriate closing parenthesis will be added.`);\n\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t}\n\n\t\t// 2. Check for balanced squiggly braces\n\t\ttmpInStateAddress = false;\n\n\t\tfor (let i = 0; i < pTokenizedExpression.length; i++)\n\t\t{\n\t\t\tif (pTokenizedExpression[i] === '{')\n\t\t\t{\n\t\t\t\ttmpInStateAddress = true;\n\t\t\t}\n\t\t\tif ((pTokenizedExpression[i] === '}') && (tmpInStateAddress))\n\t\t\t{\n\t\t\t\ttmpInStateAddress = false;\n\t\t\t}\n\t\t\tif ((pTokenizedExpression[i] === '}') && (!tmpInStateAddress))\n\t\t\t{\n\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.lintTokenizedExpression found an unbalanced closing squiggly brace \"}\" in the tokenized expression at token index ${i}`);\n\t\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t}\n\n\t\t\tif (tmpInStateAddress)\n\t\t\t{\n\t\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.lintTokenizedExpression found an open squiggly brace in the tokenized expression at index ${i}`);\n\t\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t}\n\t\t}\n\n\t\t// 3. Check for an equality assignment\n\t\tlet tmpEqualityAssignmentCount = 0;\n\t\tlet tmpEqualityAssignmentIndex = false;\n\t\tfor (let i = 0; i < pTokenizedExpression.length; i++)\n\t\t{\n\t\t\tif (pTokenizedExpression[i] === '=')\n\t\t\t{\n\t\t\t\ttmpEqualityAssignmentCount++;\n\t\t\t\ttmpEqualityAssignmentIndex = i;\n\n\t\t\t\tif (tmpEqualityAssignmentCount > 1)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.lintTokenizedExpression found multiple equality assignments in the tokenized expression; equality assignment #${tmpEqualityAssignmentCount} at token index ${i}.`);\n\t\t\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (tmpEqualityAssignmentCount < 1)\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.lintTokenizedExpression found no equality assignment in the tokenized expression.  One called Result will be added automatically.`);\n\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t}\n\n\t\t// 4. Make sure the equality assignment only has a single value on the other side of it\n\t\t//    (no, this is not a magical algebraic solver, do your own simplification)\n\t\t//    IF there is only one equality assignment (otherwise we don't even lint this because it's syntax errors all the way down)\n\t\tif (tmpEqualityAssignmentCount === 1)\n\t\t{\n\t\t\t// If there are exactly three tokens, make sure at least one is an assignable-ish address\n\t\t\t// This can still fail, but we aren't linting all the way into the manifest here; just the expression\n\t\t\tif (pTokenizedExpression.length === 3)\n\t\t\t{\n\t\t\t\tif (\n\t\t\t\t\t// The first token in our expression is a potentially assignable symbol\n\t\t\t\t\t(this.getTokenType(pTokenizedExpression[0]) === 'Token.StateAddress') || (this.getTokenType(pTokenizedExpression[2]) === 'Token.Symbol')\n\t\t\t\t\t// NOTE: For now we are only going to support assignment to the first symbol in the expression, which seems okay.\n\t\t\t\t\t// OR the last token in our expression is a potentially assignable symbol\n\t\t\t\t\t//|| (this.getTokenType(pTokenizedExpression[2]) === 'Token.StateAddress') || (this.getTokenType(pTokenizedExpression[0]) === 'Token.Symbol')\n\t\t\t\t\t)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.lintTokenizedExpression found a single equality assignment in the tokenized expression with no assignable address on the left side of the assignment.`);\n\t\t\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 5. Check that there are no operators adjacent to each other\n\t\t//    This is a simple lint check, not a full-blown syntax check\n\t\tlet tmpTokenPrevious = false;\n\t\tfor (let i = 0; i < pTokenizedExpression.length - 1; i++)\n\t\t{\n\t\t\tif ((this.ExpressionParser.tokenMap.hasOwnProperty(pTokenizedExpression[i])) && (this.ExpressionParser.tokenMap[pTokenizedExpression[i]].Type != 'Parenthesis') && !tmpTokenPrevious)\n\t\t\t{\n\t\t\t\ttmpTokenPrevious = true;\n\t\t\t}\n\t\t\telse if (this.ExpressionParser.tokenMap.hasOwnProperty(pTokenizedExpression[i]) && (this.ExpressionParser.tokenMap[pTokenizedExpression[i]].Type != 'Parenthesis'))\n\t\t\t{\n\t\t\t\t// If this isn't a + or - positivity/negativity multiplier, it's an error.\n\t\t\t\tif ((pTokenizedExpression[i] !== '+') && (pTokenizedExpression[i] !== '-'))\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.lintTokenizedExpression found an ${pTokenizedExpression[i]} operator adjacent to another operator in the tokenized expression at token index ${i}`);\n\t\t\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpTokenPrevious = false;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpResults.LinterResults;\n\t}\n}\n\nmodule.exports = ExpressionParserLinter;\n\n},{\"./Fable-Service-ExpressionParser-Base.js\":67}],71:[function(require,module,exports){\nconst libExpressionParserOperationBase = require('./Fable-Service-ExpressionParser-Base.js');\n\nclass ExpressionParserPostfix extends libExpressionParserOperationBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'ExpressionParser-Postfix';\n\t}\n\n\tgetPosfixSolveListOperation(pOperation, pLeftValue, pRightValue, pDepthSolveList, pDepthSolveIndex)\n\t{\n\t\tlet tmpOperation = ({\n\t\t\tVirtualSymbolName: pOperation.VirtualSymbolName,\n\t\t\tOperation: pOperation,\n\t\t\tLeftValue: pLeftValue,\n\t\t\tRightValue: pRightValue\n\t\t});\n\n\t\tlet tmpDepthSolveList = Array.isArray(pDepthSolveList) ? pDepthSolveList : false;\n\n\t\t// // Although we have a `Token.Type == \"Parenthesis\"` option to check on, keeping these explicit means the solver won't\n\t\t// // allow users to pass in parenthesis in the wrong order.\n\t\t// // The linter does blow up as does the postfix, but, just in case we'll leave these explicit.\n\t\t// // It really doesn't hurt anything.\n\t\t// if (pLeftValue.Token === ')')\n\t\t// {\n\t\t// \t// We have found a close parenthesis which needs to pull the proper virtual symbol for the last operation on this stack.\n\t\t// \t// This ensures we are not expressing the parenthesis virtual symbols to the solver.\n\t\t// \tpLeftValue.VirtualSymbolName = pLayerStackMap[pLeftValue.SolveLayerStack];\n\t\t// \tthis.log.error(`ERROR: ExpressionParser.getPosfixSolveListOperation found a close parenthesis in the left value of an operation.`);\n\t\t// }\n\t\t// else if (pRightValue.Token === '(')\n\t\t// {\n\t\t// \t// We have found a close parenthesis which needs to pull the proper virtual symbol for the last operation on this stack.\n\t\t// \t// This ensures we are not expressing the parenthesis virtual symbols to the solver.\n\t\t// \tpRightValue.VirtualSymbolName = pLayerStackMap[pRightValue.SolveLayerStack];\n\t\t// \tthis.log.error(`ERROR: ExpressionParser.getPosfixSolveListOperation found a close parenthesis in the left value of an operation.`);\n\t\t// }\n\n\t\t// // Set the layer stack map virtual symbol name to the last operation performed on this stack.\n\t\t// pLayerStackMap[pOperation.SolveLayerStack] = pOperation.VirtualSymbolName;\n\n\t\t/* These two if blocks are very complex -- they basically provide a\n\t\t * way to deal with recursion that can be expressed to the user in\n\t\t * a meaningful way.\n\t\t * \n\t\t * The reason we are doing it as such is to show exactly how the\n\t\t * solver resolves the passed-in tokens into a solvable expression.\n\t\t */\n\t\tif (!tmpOperation.LeftValue.VirtualSymbolName)\n\t\t{\n\t\t\ttmpOperation.LeftValue.VirtualSymbolName = tmpOperation.VirtualSymbolName;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// We need to set the left value to a virtual symbol instead of the looked up value if it's already used in another operation\n\t\t\ttmpOperation.LeftValue = this.getTokenContainerObject(tmpOperation.LeftValue.VirtualSymbolName, 'Token.VirtualSymbol');\n\t\t\t// Now walk backwards and see if we need to update a previous symbol for a previously unparsed operator\n\t\t\tif (tmpDepthSolveList)\n\t\t\t{\n\t\t\t\tfor (let i = pDepthSolveIndex - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\tif ((tmpDepthSolveList[i].Type === 'Token.Operator') && (!tmpDepthSolveList[i].Parsed) && \n\t\t\t\t\t\t// When walking backward, we only want to mutate if the .\n\t\t\t\t\t\ttmpDepthSolveList[i].hasOwnProperty('Descriptor') && tmpOperation.Operation.hasOwnProperty('Descriptor') &&\n\t\t\t\t\t\t// Anything >3 does not have commutative properties\n\t\t\t\t\t\t(tmpDepthSolveList[i].Descriptor.Precedence > 3))\n\t\t\t\t\t{\n\t\t\t\t\t\t// If the symbol to its right is not the same as this operation\n\t\t\t\t\t\tif (tmpDepthSolveList[i+1].VirtualSymbolName !== tmpOperation.VirtualSymbolName)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// This is the recursive \"shunting\" being simulated\n\t\t\t\t\t\t\ttmpDepthSolveList[i+1].VirtualSymbolName = tmpOperation.VirtualSymbolName;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!tmpOperation.RightValue.VirtualSymbolName)\n\t\t{\n\t\t\ttmpOperation.RightValue.VirtualSymbolName = tmpOperation.VirtualSymbolName;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// We need to set the right value to a virtual symbol instead of the looked up value if it's already used in another operation\n\t\t\ttmpOperation.RightValue = this.getTokenContainerObject(tmpOperation.RightValue.VirtualSymbolName, 'Token.VirtualSymbol');\n\t\t\t// Now walk forwards and see if we need to update an upcoming symbol for a previously unparsed operator\n\t\t\tif (tmpDepthSolveList)\n\t\t\t{\n\t\t\t\tfor (let i = pDepthSolveIndex + 1; i < tmpDepthSolveList.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif ((tmpDepthSolveList[i].Type === 'Token.Operator') && (!tmpDepthSolveList[i].Parsed) && \n\t\t\t\t\t\t// When walking forward, we only want to mutate if the precedence hasn't been solved.\n\t\t\t\t\t\ttmpDepthSolveList[i].hasOwnProperty('Descriptor') && tmpOperation.Operation.hasOwnProperty('Descriptor') &&\n\t\t\t\t\t\t// Anything >3 does not have commutative properties\n\t\t\t\t\t\t(tmpDepthSolveList[i].Descriptor.Precedence > 3))\n\t\t\t\t\t{\n\t\t\t\t\t\t// If the symbol to its right is not the same as this operation\n\t\t\t\t\t\tif (tmpDepthSolveList[i-1].VirtualSymbolName !== tmpOperation.VirtualSymbolName)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// This is the recursive \"shunting\" being simulated\n\t\t\t\t\t\t\ttmpDepthSolveList[i-1].VirtualSymbolName = tmpOperation.VirtualSymbolName;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((tmpDepthSolveList[i].Type === 'Token.Operator') && (!tmpDepthSolveList[i].Parsed))\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttmpOperation.Operation.Parsed = true;\n\n\t\treturn tmpOperation;\n\t}\n\n\tbuildPostfixedSolveList(pTokenizedExpression, pResultObject)\n\t{\n\t\tlet tmpResults = (typeof(pResultObject) === 'object') ? pResultObject : { ExpressionParserLog: [] };\n\n\t\ttmpResults.PostfixedAssignmentAddress = 'Result'\n\t\ttmpResults.PostfixTokenObjects = [];\n\t\ttmpResults.PostfixSolveList = [];\n\n\t\tif (pTokenizedExpression.length < 3)\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.buildPostfixedSolveList was passed a tokenized expression with less than three tokens.`);\n\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\treturn tmpResults.PostfixTokenObjects;\n\t\t}\n\n\t\t// 1. Figure out the Equality Assignment\n\t\tlet tmpEqualsIndex = -1;\n\t\tfor (let i = 0; i < pTokenizedExpression.length; i++)\n\t\t{\n\t\t\tif ((pTokenizedExpression[i] === '=') && (tmpEqualsIndex < 0))\n\t\t\t{\n\t\t\t\ttmpEqualsIndex = i;\n\t\t\t}\n\t\t\t// If there are two equality assignments, error and bail out.\n\t\t\telse if (pTokenizedExpression[i] === '=')\n\t\t\t{\n\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.buildPostfixedSolveList found multiple equality assignments in the tokenized expression; equality assignment #${tmpEqualsIndex} at token index ${i}.`);\n\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\treturn tmpResults.PostfixTokenObjects;\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEqualsIndex == -1)\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.buildPostfixedSolveList found no equality assignment in the tokenized expression; defaulting to Result`);\n\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t}\n\t\telse if (tmpEqualsIndex > 1)\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.buildPostfixedSolveList found an equality assignment in the tokenized expression at an unexpected location (token index ${tmpEqualsIndex}); the expression cannot be parsed.`);\n\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t}\n\t\telse if (tmpEqualsIndex === 0)\n\t\t{\n\t\t\t// This is an implicit function -- just go to result and return the value.\n\t\t\t// That is... the user entered something like \"= 5 + 3\" so we should just return 8, and use the default Result quietly.\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpResults.PostfixedAssignmentAddress = pTokenizedExpression[0];\n\t\t}\n\n\t\t// 2. Categorize tokens in the expression, put them in the \"expression list\" as a token object\n\t\tfor (let i = tmpEqualsIndex + 1; i < pTokenizedExpression.length; i++)\n\t\t{\n\t\t\ttmpResults.PostfixTokenObjects.push(this.getTokenContainerObject(pTokenizedExpression[i]));\n\t\t}\n\n\t\t// 3. Decorate mathematical parsing depth and detect functions at the same time\n\t\t//    Having written this a few times now, it's easier to detect functions *while* parsing depth.\n\t\t//    Especially if we want our system to be able to communicate with the user when there is an issue.\n\t\tlet tmpDepth = 0;\n\t\t// The virtual symbol index is used for the abstract interim values that are generated at each step of the solve\n\t\tlet tmpVirtualParenthesisIndex = 0;\n\t\tlet tmpSolveLayerStack = [];\n\t\t// Kick off the solve layer stack with the first solve set identifier\n\t\ttmpSolveLayerStack.push(`SolveSet_${tmpVirtualParenthesisIndex}_D_${tmpDepth}`);\n\t\tfor (let i = 0; i < tmpResults.PostfixTokenObjects.length; i++)\n\t\t{\n\t\t\t// 1. If it's an open parenthesis, set the parenthesis at the current depth and increment the depth\n\t\t\tif (tmpResults.PostfixTokenObjects[i].Token === '(')\n\t\t\t{\n\t\t\t\t// Set the depth of the open parenthesis to the current solution depth\n\t\t\t\ttmpResults.PostfixTokenObjects[i].Depth = tmpDepth;\n\t\t\t\t// Generate the virtual symbol name for user output\n\t\t\t\ttmpResults.PostfixTokenObjects[i].VirtualSymbolName = `Pr_${tmpVirtualParenthesisIndex}_D_${tmpDepth}`;\n\n\t\t\t\t// 1a. Detect if this parenthesis is signaling a function\n\t\t\t\t//     If the previous token is a Symbol (e.g. it say sin(x) or sqrt(3+5) or something) then the parser will interpret it as a function\n\t\t\t\tif (i > 0)\n\t\t\t\t{\n\t\t\t\t\tif (tmpResults.PostfixTokenObjects[i-1].Type === 'Token.Symbol')\n\t\t\t\t\t{\n\t\t\t\t\t\t// Set the type of this to be a function\n\t\t\t\t\t\ttmpResults.PostfixTokenObjects[i-1].Type = 'Token.Function';\n//\t\t\t\t\t\ttmpResults.PostfixTokenObjects[i-1].Descriptor = this.ExpressionParser.tokenMap[pTokenizedExpression[i-1]];\n\t\t\t\t\t\t// Rename the virtual symbol n ame to include the function\n//\t\t\t\t\t\ttmpResults.PostfixTokenObjects[i].VirtualSymbolName = `Fn_${tmpVirtualParenthesisIndex}_D_${tmpDepth}_${this.fable.DataFormat.cleanNonAlphaCharacters(tmpResults.PostfixTokenObjects[i-1].Token)}`;\n\t\t\t\t\t\t// The function and the parenthesis are at the same depth and virtual symbol\n//\t\t\t\t\t\ttmpResults.PostfixTokenObjects[i-1].VirtualSymbolName = tmpResults.PostfixTokenObjects[i].VirtualSymbolName;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Parenthesis manage the solve layer stack\n\t\t\t\t// For adding a new parenthesis solve layer, we put the parenthesis in the stack we are in and then make all the contained tokens be within the stack of the parenthesis\n\t\t\t\ttmpResults.PostfixTokenObjects[i].SolveLayerStack = tmpSolveLayerStack[tmpSolveLayerStack.length-1];\n\t\t\t\ttmpSolveLayerStack.push(tmpResults.PostfixTokenObjects[i].VirtualSymbolName);\n\n\t\t\t\ttmpVirtualParenthesisIndex++;\n\t\t\t\ttmpDepth++;\n\t\t\t}\n\n\t\t\t// 2. If it's a closed parenthesis, decrease the depth\n\t\t\telse if (tmpResults.PostfixTokenObjects[i].Token === ')')\n\t\t\t{\n\t\t\t\ttmpDepth--;\n\n\t\t\t\ttmpResults.PostfixTokenObjects[i].Depth = tmpDepth;\n\n\t\t\t\t// Check to see that the depth of the closed parenthesis is greater than 0\n\t\t\t\tif (tmpDepth < 0)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.buildPostfixedSolveList found a closing parenthesis at token index ${i} with no corresponding opening parenthesis.`);\n\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t}\n\n\t\t\t\t// Parenthesis manage the solve layer stack\n\t\t\t\t// For closing parenthesis solve layer with a close paren, we put it in the same stack as the opening parenthesis.\n\t\t\t\t// Give the closing parenthesis the same virtual symbol name as the opening parenthesis\n\t\t\t\t// (do the both above at the same time)\n\t\t\t\ttmpResults.PostfixTokenObjects[i].VirtualSymbolName = tmpSolveLayerStack.pop();\n\t\t\t\ttmpResults.PostfixTokenObjects[i].SolveLayerStack = tmpSolveLayerStack[tmpSolveLayerStack.length-1];\n\t\t\t}\n\n\t\t\t// 3. If it's a state address or Symbol, set depth\n\t\t\t//    It was much more complex later on solving these as virtual symbols of their own.\n\t\t\t//    We are saving the value resolution for the very end.\n\t\t\telse if ((tmpResults.PostfixTokenObjects[i].Type === 'Token.Symbol'))\n\t\t\t{\n\t\t\t\t// Set the depth of the current solution depth\n\t\t\t\ttmpResults.PostfixTokenObjects[i].Depth = tmpDepth;\n\t\t\t\ttmpResults.PostfixTokenObjects[i].SolveLayerStack = tmpSolveLayerStack[tmpSolveLayerStack.length-1];\n\t\t\t\t// Generate a virtual symbol name that's somewhat human readable\n\t\t\t\t//tmpResults.PostfixTokenObjects[i].VirtualSymbolName = `Sm_${tmpVirtualParenthesisIndex}_D_${tmpDepth}_${this.fable.DataFormat.cleanNonAlphaCharacters(tmpResults.PostfixTokenObjects[i].Token)}`;\n\n\t\t\t\t// We've used up this virtual symbol index so increment it\n\t\t\t\t// The reason we only use these once is to make sure if we use, say, sin(x) twice at the same depth we still have unique names for each virtual solution\n\t\t\t\t//tmpVirtualParenthesisIndex++;\n\t\t\t}\n\n\t\t\t// 4. If it's an operator or constant or comment, just set the depth\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpResults.PostfixTokenObjects[i].Depth = tmpDepth;\n\t\t\t\ttmpResults.PostfixTokenObjects[i].SolveLayerStack = tmpSolveLayerStack[tmpSolveLayerStack.length-1];\n\t\t\t}\n\t\t}\n\n\t\t// 4. Walk through the decorated symbols and generate the postfix solve list\n\t\t//    We are going to start by creating a map of the solve layers:\n\t\tlet tmpSolveLayerMap = {};\n\t\tlet tmpSolveLayerMaxDepth = 0;\n\t\tfor (let i = 0; i < tmpResults.PostfixTokenObjects.length; i++)\n\t\t{\n\t\t\tif (!tmpSolveLayerMap.hasOwnProperty(tmpResults.PostfixTokenObjects[i].SolveLayerStack))\n\t\t\t{\n\t\t\t\ttmpSolveLayerMap[tmpResults.PostfixTokenObjects[i].SolveLayerStack] = [];\n\t\t\t}\n\t\t\ttmpSolveLayerMap[tmpResults.PostfixTokenObjects[i].SolveLayerStack].push(tmpResults.PostfixTokenObjects[i]);\n\n\t\t\t// See what our max depth is.  This is super important to the postfix operation\n\t\t\t// The programmer in me thinks it would be funny to not track this and just use the map key length as the max size, which would work (logically impossible to have a depth > key length) but it would be quite a bit more confusing to grok the algorithm.\n\t\t\tif (tmpResults.PostfixTokenObjects[i].Depth > tmpSolveLayerMaxDepth)\n\t\t\t{\n\t\t\t\ttmpSolveLayerMaxDepth = tmpResults.PostfixTokenObjects[i].Depth;\n\t\t\t}\n\t\t}\n\n\t\tlet tmpSolveLayerKeys = Object.keys(tmpSolveLayerMap);\n\t\t// Reset the virtual symbol index -- it was used above for uniquenes when creating abstract symbols for parenthesis and layer stacks.\n\t\tlet tmpVirtualSymbolIndex = 0;\n\t\ttmpSolveLayerKeys.sort(\n\t\t\t// Sort the solve layers by depth.\n\t\t\t(pLeftLayer, pRightLayer)=>\n\t\t\t{\n\t\t\t\t// It is impossible to have a layer with no entries in it.  \n\t\t\t\t// If that ever happens, the bug is actually above and we actively want this to blow up.\n\t\t\t\tif (tmpSolveLayerMap[pLeftLayer][0].Depth < tmpSolveLayerMap[pRightLayer][0].Depth)\n\t\t\t\t{\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (tmpSolveLayerMap[pLeftLayer][0].Depth > tmpSolveLayerMap[pRightLayer][0].Depth)\n\t\t\t\t{\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t// 5. Generate the postfix solve list\n\t\t//    The most important thing is going backwards in the depth order (a la reverse polish).\n\t\t//    Specifically not using shunting yard to provide in-depth \"show your work\" notes\n\t\t//    Yes it is possible to do a somewhat similar thing with shunting yard but the code is almost unreadable\n\n\t\t// 5.1 Build the Virtual Symbol Names\n\t\t// This maps layer stack addresses (which match parenthesis virtual symbol names) to the resultant value for that layer stack.\n\t\t// These values change as it solves but the last assignment is the proper assignment because math only reads forward in a line\n\t\ttmpResults.PostfixLayerstackMap = {};\n\t\tfor (let tmpSolveLayerIndex = 0; tmpSolveLayerIndex < tmpSolveLayerKeys.length; tmpSolveLayerIndex++)\n\t\t{\n\t\t\tlet tmpSolveLayerTokens = tmpSolveLayerMap[tmpSolveLayerKeys[tmpSolveLayerIndex]];\n\t\t\t// For each precedence (this isn't strictly required here but makes the outcome for the user more readable)\n\t\t\tfor (let tmpPrecedence = 0; tmpPrecedence <= this.ExpressionParser.tokenMaxPrecedence; tmpPrecedence++)\n\t\t\t{\n\t\t\t\t// Enumerate all tokens in a layer's expression.\n\t\t\t\t// There is a recursive way to do this, but given the short length of even the most complex equations we're favoring readability.\n\t\t\t\tfor (let i = 0; i < tmpSolveLayerTokens.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// If the token is an operator and at the current precedence, add it to the postfix solve list and mutate the array.\n\t\t\t\t\tif ((tmpSolveLayerTokens[i].Type === 'Token.Operator') &&\n\t\t\t\t\t\t(tmpSolveLayerTokens[i].Descriptor.Precedence === tmpPrecedence))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpToken = tmpSolveLayerTokens[i];\n\t\t\t\t\t\t// If there is a token and nothing else in this layer, then it's an error.\n\t\t\t\t\t\tif (tmpSolveLayerTokens.length === 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.buildPostfixedSolveList found a single operator in a solve layer expression at token index ${i}`);\n\t\t\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\t\t\treturn tmpResults.PostfixSolveList;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// If the token is at the beginning of the expression and not a number line orientation modifier, it's an error.\n\t\t\t\t\t\telse if ((i == 0) && ((tmpToken.Token != '+') || (tmpToken.Token != '-')))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.buildPostfixedSolveList found an operator at the beginning of a solve layer expression at token index ${i}`);\n\t\t\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\t\t\treturn tmpResults.PostfixSolveList;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// If the token is at the end of the expression, it is an error.\n\t\t\t\t\t\telse if (i == tmpSolveLayerTokens.length - 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.buildPostfixedSolveList found an operator at the end of a solve layer expression at token index ${i}`);\n\t\t\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\t\t\treturn tmpResults.PostfixSolveList;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// The - at the beginning of an expression is a number line orientation modifier\n\t\t\t\t\t\telse if ((i == 0) && (tmpToken.Token == '-'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpToken.VirtualSymbolName = `V_${tmpVirtualSymbolIndex}`;\n\t\t\t\t\t\t\ttmpResults.PostfixLayerstackMap[tmpToken.SolveLayerStack] = tmpToken.VirtualSymbolName;\n\t\t\t\t\t\t\ttmpVirtualSymbolIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// The - after an operator or an open parenthesis is also a number line orientation modifier\n\t\t\t\t\t\telse if ((i > 0) && (tmpToken.Token == '-') && ((tmpSolveLayerTokens[i-1].Type === 'Token.Operator') || (tmpSolveLayerTokens[i-1].Token === '(')))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// The number line negation operator is a special case that generates a virtual constant (-1.0) and multiplies it by the next token\n\t\t\t\t\t\t\ttmpToken.VirtualSymbolName = `V_${tmpVirtualSymbolIndex}`;\n\t\t\t\t\t\t\ttmpVirtualSymbolIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// The + at the beginning is also a number line orientation modifier ... THAT WE IGNORE\n\t\t\t\t\t\telse if ((i == 0) && (tmpToken.Token == '+'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// The + after an operator or a parenthesis is also a number line orientation modifier ... THAT WE IGNORE\n\t\t\t\t\t\telse if ((i > 0) && (tmpToken.Token == '+') && ((tmpSolveLayerTokens[i-1].Type === 'Token.Operator') || (tmpSolveLayerTokens[i-1].Token === '(')))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the token is next to another operator it's a parsing error\n\t\t\t\t\t\telse if ((tmpSolveLayerTokens[i-1].Type === 'Token.Operator') || (tmpSolveLayerTokens[i+1].Type === 'Token.Operator'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.buildPostfixedSolveList found an operator at token index ${i} that is not surrounded by two values.`);\n\t\t\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\t\t\treturn tmpResults.PostfixSolveList;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Finally add a virtual symbol name to the dang thing.\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpToken.VirtualSymbolName = `V_${tmpVirtualSymbolIndex}`;\n\t\t\t\t\t\t\ttmpResults.PostfixLayerstackMap[tmpToken.SolveLayerStack] = tmpToken.VirtualSymbolName;\n\t\t\t\t\t\t\ttmpVirtualSymbolIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if ((tmpSolveLayerTokens[i].Type === 'Token.Function') && (tmpPrecedence === 0))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpToken = tmpSolveLayerTokens[i];\n\t\t\t\t\t\ttmpToken.VirtualSymbolName = `V_${tmpVirtualSymbolIndex}`;\n\t\t\t\t\t\ttmpVirtualSymbolIndex++;\n\t\t\t\t\t\ttmpResults.PostfixLayerstackMap[tmpToken.SolveLayerStack] = tmpToken.VirtualSymbolName;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 5.2: Decorate the Parenthesis with Virtual Symbol Names\n\t\t//      ... this gets funny because of precedence of operations surrounding them, parenthesis and functions.\n\t\tlet tmpParenthesisCacheLIFOStack = [];\n\t\tfor (let i = 0; i < tmpResults.PostfixTokenObjects.length; i++)\n\t\t{\n\t\t\tlet tmpPostfixTokenObject = tmpResults.PostfixTokenObjects[i];\n\n\t\t\tif (tmpPostfixTokenObject.Type === 'Token.Parenthesis')\n\t\t\t{\n\t\t\t\t// This is just to track the parenthesis stack level in User feedback\n\t\t\t\ttmpPostfixTokenObject.ParenthesisStack = tmpPostfixTokenObject.VirtualSymbolName;\n\n\t\t\t\tif (tmpPostfixTokenObject.Token === '(')\n\t\t\t\t{\n\t\t\t\t\t// It's an open parenthesis.  If the previous token was an operator, get its precedence.\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (tmpResults.PostfixTokenObjects[i-1].Type === 'Token.Operator')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpPostfixTokenObject.PreviousPrecedence = tmpResults.PostfixTokenObjects[i-1].Descriptor.Precedence;\n\t\t\t\t\t\t\ttmpPostfixTokenObject.IsFunction = false;\n\t\t\t\t\t\t\ttmpPostfixTokenObject.PreviousVirtualSymbolName = tmpResults.PostfixTokenObjects[i-1].VirtualSymbolName;\n\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpResults.PostfixLayerstackMap[tmpPostfixTokenObject.VirtualSymbolName];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// This is a function, we will create a virtual symbol for the discrete parenthesis\n\t\t\t\t\t\telse if (tmpResults.PostfixTokenObjects[i-1].Type === 'Token.Function')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpPostfixTokenObject.PreviousPrecedence = 0;\n\t\t\t\t\t\t\ttmpPostfixTokenObject.IsFunction = true;\n\t\t\t\t\t\t\ttmpPostfixTokenObject.PreviousVirtualSymbolName = tmpResults.PostfixTokenObjects[i-1].VirtualSymbolName;\n\t\t\t\t\t\t\tlet tmpVirtualSymbolName = tmpResults.PostfixLayerstackMap[tmpPostfixTokenObject.VirtualSymbolName];\n\t\t\t\t\t\t\tif (!tmpVirtualSymbolName)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// This is a parenthesis group with no operators in it; make a virtual symbol name.\n\t\t\t\t\t\t\t\ttmpVirtualSymbolName = `V_${tmpVirtualSymbolIndex}`;\n\t\t\t\t\t\t\t\ttmpVirtualSymbolIndex++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpVirtualSymbolName;\n\n\t\t\t\t\t\t\tif (i > 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Todo: This needs to be enhanced to deal with negations\n\t\t\t\t\t\t\t\tlet tmpTokenBeforeFunction = tmpResults.PostfixTokenObjects[i-2];\n\t\t\t\t\t\t\t\tif (tmpTokenBeforeFunction.Type === 'Token.Operator')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmpPostfixTokenObject.PreviousVirtualSymbolName = tmpResults.PostfixTokenObjects[i-2].VirtualSymbolName;\n\t\t\t\t\t\t\t\t\ttmpPostfixTokenObject.PreviousPrecedence = tmpResults.PostfixTokenObjects[i-2].Descriptor.Precedence;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpResults.PostfixLayerstackMap[tmpPostfixTokenObject.VirtualSymbolName];\n\t\t\t\t\t}\n\t\t\t\t\ttmpParenthesisCacheLIFOStack.push(tmpPostfixTokenObject);\n\t\t\t\t}\n\t\t\t\tif (tmpPostfixTokenObject.Token === ')')\n\t\t\t\t{\n\t\t\t\t\t// There are three options for assigning this:\n\t\t\t\t\tlet tmpOpenParenthesis = tmpParenthesisCacheLIFOStack.pop();\n\t\t\t\t\t// It's at the end of the tokens -- use the stack's identifier\n\t\t\t\t\tif (i >= tmpResults.PostfixTokenObjects.length - 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (tmpOpenParenthesis.IsFunction)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpOpenParenthesis.PreviousVirtualSymbolName;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpOpenParenthesis.VirtualSymbolName;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// The next token is an operator and we're a function\n\t\t\t\t\t\tlet tmpPeekedNextToken = tmpResults.PostfixTokenObjects[i+1];\n\t\t\t\t\t\tif (tmpPeekedNextToken.Type == 'Token.Operator' && tmpOpenParenthesis.IsFunction)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// This is the most complex case -- the next token is an operator AND this is a function.\n\t\t\t\t\t\t\t// The following is just pointer math.\n\t\t\t\t\t\t\t// If the operater is at the same precedence or higher than the open parenthesis previous operator, use the previous operator's identifier\n\t\t\t\t\t\t\t// NOTE: This line of code is insanely complex\n\n\t\t\t\t\t\t\t//tmpPostfixTokenObject.VirtualSymbolName = tmpOpenParenthesis.PreviousVirtualSymbolName;\n\n\t\t\t\t\t\t\t// If the next token has higher precedence than what's before the open parenthesis, use it for the open as well\n\t\t\t\t\t\t\tif (tmpPeekedNextToken.Descriptor.Precedence < tmpOpenParenthesis.PreviousPrecedence)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpOpenParenthesis.VirtualSymbolName = tmpPeekedNextToken.VirtualSymbolName;\n\t\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpResults.PostfixLayerstackMap[tmpPostfixTokenObject.VirtualSymbolName];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Otherwise use this one -- it is the higher precedence.  And update the previous parenthesis operator's virtual symbol to be the peeked token's virtual symbol.\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpOpenParenthesis.PreviousVirtualSymbolName;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// The next token is an operator and it isn't a function\n\t\t\t\t\t\telse if (tmpPeekedNextToken.Type == 'Token.Operator' && tmpOpenParenthesis.hasOwnProperty('PreviousPrecedence'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// This is the second most complex case -- the next token is an operator.\n\t\t\t\t\t\t\t// If the operater is at the same precedence or higher than the open parenthesis previous operator, use the previous operator's identifier\n\t\t\t\t\t\t\t// NOTE: This line of code is insanely complex\n\t\t\t\t\t\t\tif (tmpPeekedNextToken.Descriptor.Precedence <= tmpOpenParenthesis.PreviousPrecedence)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpOpenParenthesis.PreviousVirtualSymbolName;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Otherwise use this one -- it is the higher precedence.  And update the previous parenthesis operator's virtual symbol to be the peeked token's virtual symbol.\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpResults.PostfixLayerstackMap[tmpPostfixTokenObject.VirtualSymbolName];\n\t\t\t\t\t\t\t\ttmpOpenParenthesis.VirtualSymbolName = tmpPeekedNextToken.VirtualSymbolName;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// If this is a function, dereference the function's previous virtual symbol name\n\t\t\t\t\t\t\tif (tmpOpenParenthesis.IsFunction)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpOpenParenthesis.PreviousVirtualSymbolName;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpResults.PostfixLayerstackMap[tmpPostfixTokenObject.VirtualSymbolName];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// If there isn't an operator in the layer stack, push forward the assignment\n\t\t\t\t\tif (!tmpResults.PostfixLayerstackMap[tmpOpenParenthesis.ParenthesisStack])\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpResults.PostfixLayerstackMap[tmpOpenParenthesis.ParenthesisStack] = tmpOpenParenthesis.VirtualSymbolName;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let tmpSolveLayerIndex = 0; tmpSolveLayerIndex < tmpSolveLayerKeys.length; tmpSolveLayerIndex++)\n\t\t{\n\t\t\tlet tmpSolveLayerTokens = tmpSolveLayerMap[tmpSolveLayerKeys[tmpSolveLayerIndex]];\n\n\t\t\tif (tmpSolveLayerTokens.length === 1)\n\t\t\t{\n\t\t\t\t// This is just a simple value assignment -- use a simple addition virtual operation.\n\t\t\t\t// We often see these inside functions.\n\t\t\t\tlet tmpAbstractAddToken = this.getTokenContainerObject('+');\n\t\t\t\t//let tmpVirtualSymbolName = tmpResults.PostfixLayerstackMap[tmpSolveLayerTokens[0].SolveLayerStack];\n\t\t\t\ttmpAbstractAddToken.VirtualSymbolName = tmpResults.PostfixLayerstackMap[tmpSolveLayerTokens[0].SolveLayerStack];\n\t\t\t\ttmpResults.PostfixSolveList.push(this.getPosfixSolveListOperation(tmpAbstractAddToken, this.getTokenContainerObject('0.0'), tmpSolveLayerTokens[0]));\n\t\t\t}\n\t\t}\n\n\t\t// 5.3: Generate the Postfix Solve List\n\t\tfor (let tmpSolveLayerIndex = 0; tmpSolveLayerIndex < tmpSolveLayerKeys.length; tmpSolveLayerIndex++)\n\t\t{\n\t\t\tlet tmpSolveLayerTokens = tmpSolveLayerMap[tmpSolveLayerKeys[tmpSolveLayerIndex]];\n\n\t\t\t// For each precedence level in the layer\n\t\t\tfor (let tmpPrecedence = 0; tmpPrecedence <= this.ExpressionParser.tokenMaxPrecedence; tmpPrecedence++)\n\t\t\t{\n\t\t\t\t// Enumerate all tokens in a layer's expression.\n\t\t\t\t// There is a recursive way to do this, but given the short length of even the most complex equations we're favoring readability.\n\t\t\t\tfor (let i = 0; i < tmpSolveLayerTokens.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// If the token is an operator and at the current precedence, add it to the postfix solve list and mutate the array.\n\t\t\t\t\tif ((tmpSolveLayerTokens[i].Type === 'Token.Operator') &&\n\t\t\t\t\t\t(tmpSolveLayerTokens[i].Descriptor.Precedence === tmpPrecedence))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpToken = tmpSolveLayerTokens[i];\n\t\t\t\t\t\t// The - at the beginning of an expression is a number line orientation modifier\n\t\t\t\t\t\tif ((i == 0) && (tmpToken.Token == '-'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// The number line negation operator is a special case that generates a virtual constant (-1.0) and multiplies it by the next token\n\t\t\t\t\t\t\t// This is an abstract operation that isn't in the expression.\n\t\t\t\t\t\t\tlet tmpAbstractMultiplyToken = this.getTokenContianerObject('*');\n\t\t\t\t\t\t\ttmpAbstractMultiplyToken.VirtualSymbolName = tmpToken.VirtualSymbolName;\n\t\t\t\t\t\t\ttmpResults.PostfixSolveList.push(this.getPosfixSolveListOperation(tmpAbstractMultiplyToken, this.getTokenContainerObject('-1.0'), tmpSolveLayerTokens[i+1]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// The - after an operator or an open parenthesis is also a number line orientation modifier\n\t\t\t\t\t\telse if ((i > 0) && (tmpToken.Token == '-') && ((tmpSolveLayerTokens[i-1].Type === 'Token.Operator') || (tmpSolveLayerTokens[i-1].Token === '(')))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// The number line negation operator is a special case that generates a virtual constant (-1.0) and multiplies it by the next token\n\t\t\t\t\t\t\tlet tmpAbstractMultiplyToken = this.getTokenContianerObject('*');\n\t\t\t\t\t\t\ttmpAbstractMultiplyToken.VirtualSymbolName = tmpToken.VirtualSymbolName;\n\t\t\t\t\t\t\ttmpResults.PostfixSolveList.push(this.getPosfixSolveListOperation(tmpAbstractMultiplyToken, this.getTokenContainerObject('-1.0'), tmpSolveLayerTokens[i+1]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// The + at the beginning is also a number line orientation modifier ... THAT WE IGNORE\n\t\t\t\t\t\telse if ((i == 0) && (tmpToken.Token == '+'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// The + after an operator or a parenthesis is also a number line orientation modifier ... THAT WE IGNORE\n\t\t\t\t\t\telse if ((i > 0) && (tmpToken.Token == '+') && ((tmpSolveLayerTokens[i-1].Type === 'Token.Operator') || (tmpSolveLayerTokens[i-1].Token === '(')))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Finally add the dang thing.\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpResults.PostfixSolveList.push(this.getPosfixSolveListOperation(tmpToken, tmpSolveLayerTokens[i-1], tmpSolveLayerTokens[i+1], tmpSolveLayerTokens, i));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if ((tmpSolveLayerTokens[i].Type === 'Token.Function') && (tmpPrecedence === 0))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpToken = tmpSolveLayerTokens[i];\n\t\t\t\t\t\t// Not sure what to do with the other token.\n\t\t\t\t\t\ttmpResults.PostfixSolveList.push(this.getPosfixSolveListOperation(tmpToken, tmpSolveLayerTokens[i+1], this.getTokenContainerObject('0.0')));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now set the assignment address.\n\t\tlet tmpAssignmentInstruction = this.getPosfixSolveListOperation(this.getTokenContainerObject('Assign', 'Token.SolverInstruction'), this.getTokenContainerObject('DestinationHash', 'Token.SolverInstruction'), this.getTokenContainerObject('Resulting', 'Token.SolverInstruction'));\n\t\ttmpAssignmentInstruction.VirtualSymbolName = tmpResults.PostfixedAssignmentAddress;\n\t\ttmpResults.PostfixSolveList.push(tmpAssignmentInstruction);\n\n\t\treturn tmpResults.PostfixSolveList;\n\t}\n}\n\nmodule.exports = ExpressionParserPostfix;\n\n},{\"./Fable-Service-ExpressionParser-Base.js\":67}],72:[function(require,module,exports){\nconst libExpressionParserOperationBase = require('./Fable-Service-ExpressionParser-Base.js');\n\nclass ExpressionParserSolver extends libExpressionParserOperationBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'ExpressionParser-Solver';\n\t}\n\n\tsolvePostfixedExpression(pPostfixedExpression, pDataDestinationObject, pResultObject, pManifest)\n\t{\n\t\tlet tmpResults = (typeof(pResultObject) === 'object') ? pResultObject : { ExpressionParserLog: [] };\n\n\t\tlet tmpManifest = (typeof(pManifest) === 'object') ? pManifest : this.fable.newManyfest();\n\n\t\tlet tmpDataDestinationObject = (typeof(pDataDestinationObject) === 'object') ? pDataDestinationObject : {};\n\n\t\t// If there was a fable passed in (e.g. the results object was a service or such), we won't decorate\n\t\tlet tmpPassedInFable = tmpResults.hasOwnProperty('fable');\n\t\tif (!tmpPassedInFable)\n\t\t{\n\t\t\ttmpResults.fable = this.fable;\n\t\t}\n\n\t\tif (!Array.isArray(pPostfixedExpression))\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.solvePostfixedExpression was passed a non-array postfixed expression.`);\n\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\treturn false;\n\t\t}\n\t\tif (pPostfixedExpression.length < 1)\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.solvePostfixedExpression was passed an empty postfixed expression.`);\n\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\treturn false;\n\t\t}\n\n\t\t// This is how the user communication magic happens.\n\t\ttmpResults.VirtualSymbols = {};\n\n\t\tfor (let i = 0; i < pPostfixedExpression.length; i++)\n\t\t{\n\t\t\tif (pPostfixedExpression[i].Operation.Type === 'Token.SolverInstruction')\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet tmpStepResultObject = { ExpressionStep: pPostfixedExpression[i], ExpressionStepIndex: i, ResultsObject: tmpResults, Manifest: tmpManifest};\n\n\t\t\t// Resolve the virtual symbols to their actual values\n\t\t\tif (tmpStepResultObject.ExpressionStep.LeftValue.Type === 'Token.VirtualSymbol')\n\t\t\t{\n\t\t\t\ttmpStepResultObject.ExpressionStep.LeftValue.Value = tmpManifest.getValueAtAddress(tmpResults.VirtualSymbols, tmpStepResultObject.ExpressionStep.LeftValue.Token);\n\t\t\t}\n\t\t\tif (tmpStepResultObject.ExpressionStep.RightValue.Type === 'Token.VirtualSymbol')\n\t\t\t{\n\t\t\t\ttmpStepResultObject.ExpressionStep.RightValue.Value = tmpManifest.getValueAtAddress(tmpResults.VirtualSymbols, tmpStepResultObject.ExpressionStep.RightValue.Token);\n\t\t\t}\n\n\t\t\t// Resolve the parenthesis to their actual values\n\t\t\tif (tmpStepResultObject.ExpressionStep.LeftValue.Type === 'Token.Parenthesis')\n\t\t\t{\n\t\t\t\ttmpStepResultObject.ExpressionStep.LeftValue.Value = tmpManifest.getValueAtAddress(tmpResults.VirtualSymbols, tmpStepResultObject.ExpressionStep.LeftValue.VirtualSymbolName);\n\t\t\t}\n\t\t\tif (tmpStepResultObject.ExpressionStep.RightValue.Type === 'Token.Parenthesis')\n\t\t\t{\n\t\t\t\ttmpStepResultObject.ExpressionStep.RightValue.Value = tmpManifest.getValueAtAddress(tmpResults.VirtualSymbols, tmpStepResultObject.ExpressionStep.RightValue.VirtualSymbolName);\n\t\t\t}\n\n\t\t\tif (tmpStepResultObject.ExpressionStep.Operation.Type = 'Operator')\n\t\t\t{\n\t\t\t\t// TODO: This can be optimized.   A lot.  If necessary.  Seems pretty fast honestly for even thousands of operations.  Slowest part is arbitrary precision.\n\t\t\t\t// An operator always has a left and right value.\n\t\t\t\tlet tmpFunctionAddress = false;\n\t\t\t\tif (this.ExpressionParser.tokenMap.hasOwnProperty(tmpStepResultObject.ExpressionStep.Operation.Token))\n\t\t\t\t{\n\t\t\t\t\ttmpFunctionAddress = `ResultsObject.${tmpStepResultObject.ExpressionStep.Operation.Descriptor.Function}`;\n\t\t\t\t}\n\t\t\t\telse if (this.ExpressionParser.functionMap.hasOwnProperty(tmpStepResultObject.ExpressionStep.Operation.Token.toLowerCase()))\n\t\t\t\t{\n\t\t\t\t\ttmpFunctionAddress = `ResultsObject.${this.ExpressionParser.functionMap[tmpStepResultObject.ExpressionStep.Operation.Token.toLowerCase()].Address}`;\n\t\t\t\t}\n\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`Solving Step ${i} [${tmpStepResultObject.ExpressionStep.VirtualSymbolName}] --> [${tmpStepResultObject.ExpressionStep.Operation.Token}]: ( ${tmpStepResultObject.ExpressionStep.LeftValue.Value} , ${tmpStepResultObject.ExpressionStep.RightValue.Value} )`);\n\t\t\t\t\ttmpResults.VirtualSymbols[tmpStepResultObject.ExpressionStep.VirtualSymbolName] = tmpManifest.getValueAtAddress(tmpStepResultObject, `${tmpFunctionAddress}(ExpressionStep.LeftValue.Value,ExpressionStep.RightValue.Value)`);\n\t\t\t\t\tthis.log.trace(`   ---> Step ${i}: ${tmpResults.VirtualSymbols[tmpStepResultObject.ExpressionStep.VirtualSymbolName]}`)\n\t\t\t\t}\n\t\t\t\tcatch (pError)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.solvePostfixedExpression failed to solve step ${i} with function ${tmpStepResultObject.ExpressionStep.Operation.Token}.`);\n\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Equations don't always solve in virtual symbol order.\n\t\t\t\ttmpResults.SolverFinalVirtualSymbol = tmpStepResultObject.ExpressionStep.VirtualSymbolName;\n\t\t\t}\n\t\t}\n\n\t\tlet tmpSolverResultValue = tmpManifest.getValueAtAddress(tmpResults, `VirtualSymbols.${tmpResults.SolverFinalVirtualSymbol}`);\n\n\t\t// Now deal with final assignment\n\t\tfor (let i = 0; i < pPostfixedExpression.length; i++)\n\t\t{\n\t\t\tif ((pPostfixedExpression[i].Operation.Type === 'Token.SolverInstruction') && (pPostfixedExpression[i].Operation.Token == 'Assign'))\n\t\t\t{\n\t\t\t\ttmpManifest.setValueAtAddress(tmpResults.VirtualSymbols, pPostfixedExpression[i].VirtualSymbolName, tmpSolverResultValue);\n\t\t\t\ttmpManifest.setValueByHash(tmpDataDestinationObject, pPostfixedExpression[i].VirtualSymbolName, tmpSolverResultValue);\n\t\t\t}\n\n\t\t}\n\t\t// Clean up the reference if we added it to the object.\n\t\tif (!tmpPassedInFable)\n\t\t{\n\t\t\tdelete tmpResults.fable;\n\t\t}\n\n\t\treturn tmpSolverResultValue.toString();\n\t}\n}\n\nmodule.exports = ExpressionParserSolver;\n\n},{\"./Fable-Service-ExpressionParser-Base.js\":67}],73:[function(require,module,exports){\nmodule.exports={\n\t\"=\":\n\t\t{\n\t\t\t\"Name\": \"Equals\",\n\t\t\t\"Token\": \"=\",\n\t\t\t\"Precedence\": 0,\n\t\t\t\"Type\": \"Assignment\"\n\t\t},\n\n\t\"(\":\n\t\t{\n\t\t\t\"Name\": \"Left Parenthesis\",\n\t\t\t\"Token\": \"(\",\n\t\t\t\"Precedence\": 0,\n\t\t\t\"Type\": \"Parenthesis\"\n\t\t},\n\t\")\":\n\t\t{\n\t\t\t\"Name\": \"Right Parenthesis\",\n\t\t\t\"Token\": \")\",\n\t\t\t\"Precedence\": 0,\n\t\t\t\"Type\": \"Parenthesis\"\n\t\t},\n\n\t\"*\":\n\t\t{\n\t\t\t\"Name\": \"Multiply\",\n\t\t\t\"Token\": \"*\",\n\t\t\t\"Function\": \"fable.Math.multiplyPrecise\",\n\t\t\t\"Precedence\": 3,\n\t\t\t\"Type\": \"Operator\"\n\t\t},\n\t\"/\":\n\t\t{\n\t\t\t\"Name\": \"Divide\",\n\t\t\t\"Token\": \"/\",\n\t\t\t\"Function\": \"fable.Math.dividePrecise\",\n\t\t\t\"Precedence\": 3,\n\t\t\t\"Type\": \"Operator\"\n\t\t},\n\n\t\"^\":\n\t\t{\n\t\t\t\"Name\": \"Exponent\",\n\t\t\t\"Token\": \"^\",\n\t\t\t\"Function\": \"fable.Math.powerPrecise\",\n\t\t\t\"Precedence\": 1,\n\t\t\t\"Type\": \"Operator\"\n\t\t},\n\t\"%\":\n\t\t{\n\t\t\t\"Name\": \"Modulus\",\n\t\t\t\"Token\": \"%\",\n\t\t\t\"Function\": \"fable.Math.modPrecise\",\n\t\t\t\"Precedence\": 3,\n\t\t\t\"Type\": \"Operator\"\n\t\t},\n\n\t\"+\":\n\t\t{\n\t\t\t\"Name\": \"Add\",\n\t\t\t\"Token\": \"+\",\n\t\t\t\"Function\": \"fable.Math.addPrecise\",\n\t\t\t\"Precedence\": 4,\n\t\t\t\"Type\": \"Operator\"\n\t\t},\n\t\"-\":\n\t\t{\n\t\t\t\"Name\": \"Subtract\",\n\t\t\t\"Token\": \"-\",\n\t\t\t\"Function\": \"fable.Math.subtractPrecise\",\n\t\t\t\"Precedence\": 4,\n\t\t\t\"Type\": \"Operator\"\n\t\t}\n}\n},{}],74:[function(require,module,exports){\n(function (process){(function (){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libFS = require('fs');\nconst libPath = require('path');\nconst libReadline = require('readline');\n\n\nclass FableServiceFilePersistence extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'FilePersistence';\n\n\t\tif (!this.options.hasOwnProperty('Mode'))\n\t\t{\n\t\t\tthis.options.Mode = parseInt('0777', 8) & ~process.umask();\n\t\t}\n\n\t\tthis.libFS = libFS;\n\t\tthis.libPath = libPath;\n\t\tthis.libReadline = libReadline;\n\t}\n\n\tjoinPath(...pPathArray)\n\t{\n\t\treturn libPath.resolve(...pPathArray);\n\t}\n\n\texistsSync(pPath)\n\t{\n\t\treturn libFS.existsSync(pPath);\n\t}\n\n\texists(pPath, fCallback)\n\t{\n\t\tlet tmpFileExists = this.existsSync(pPath);;\n\n\t\treturn fCallback(null, tmpFileExists);\n\t}\n\n\tappendFileSync(pFileName, pAppendContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.appendFileSync(pFileName, pAppendContent, tmpOptions);\n\t}\n\n\tdeleteFileSync(pFileName)\n\t{\n\t\treturn libFS.unlinkSync(pFileName);\n\t}\n\n\tdeleteFolderSync(pFileName)\n\t{\n\t\treturn libFS.rmdirSync(pFileName);\n\t}\n\n\treadFileSync(pFilePath, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.readFileSync(pFilePath, tmpOptions);\n\t}\n\n\treadFile(pFilePath, pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.readFile(pFilePath, tmpOptions, fCallback);\n\t}\n\n\twriteFileSync(pFileName, pFileContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFileSync(pFileName, pFileContent, tmpOptions);\n\t}\n\n\twriteFileSyncFromObject(pFileName, pObject)\n\t{\n\t\treturn this.writeFileSync(pFileName, JSON.stringify(pObject, null, 4));\n\t}\n\n\twriteFileSyncFromArray(pFileName, pFileArray)\n\t{\n\t\tif (!Array.isArray(pFileArray))\n\t\t{\n\t\t\tthis.log.error(`File Persistence Service attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).`);\n\t\t\treturn Error('Attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let i = 0; i < pFileArray.length; i++)\n\t\t\t{\n\t\t\t\treturn this.appendFileSync(pFileName, `${pFileArray[i]}\\n`);\n\t\t\t}\n\t\t}\n\t}\n\n\twriteFile(pFileName, pFileContent, pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFile(pFileName, pFileContent, tmpOptions, fCallback);\n\t}\n\n\tlineReaderFactory(pFilePath, fOnLine, fOnComplete, fOnError)\n\t{\n\t\tlet tmpLineReader = {};\n\n\t\tif (typeof(pFilePath) != 'string')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpLineReader.filePath = pFilePath;\n\n\t\ttmpLineReader.fileStream = libFS.createReadStream(tmpLineReader.filePath);\n\n\t\ttmpLineReader.reader = libReadline.createInterface({ input: tmpLineReader.fileStream, crlfDelay: Infinity });\n\n\t\tif (typeof(fOnError) === 'function')\n\t\t{\n\t\t\ttmpLineReader.reader.on('error', fOnError);\n\t\t}\n\n\t\ttmpLineReader.reader.on('line', (typeof(fOnLine) === 'function') ? fOnLine : () => {});\n\n\t\tif (typeof(fOnComplete) === 'function')\n\t\t{\n\t\t\ttmpLineReader.reader.on('close', fOnComplete);\n\t\t}\n\n\t\treturn tmpLineReader;\n\t}\n\n\t// Folder management\n\tmakeFolderRecursive(pParameters, fCallback)\n\t{\n\t\tlet tmpParameters = pParameters;\n\n\t\tif (typeof(pParameters) == 'string')\n\t\t{\n\t\t\ttmpParameters = { Path: pParameters };\n\t\t}\n\t\telse if (typeof(pParameters) !== 'object')\n\t\t{\n\t\t\tfCallback(new Error('Parameters object or string not properly passed to recursive folder create.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(tmpParameters.Path) !== 'string'))\n\t\t{\n\t\t\tfCallback(new Error('Parameters object needs a path to run the folder create operation.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!tmpParameters.hasOwnProperty('Mode'))\n\t\t{\n\t\t\ttmpParameters.Mode = this.options.Mode;\n\t\t}\n\n\t\t// Check if we are just starting .. if so, build the initial state for our recursive function\n\t\tif (typeof(tmpParameters.CurrentPathIndex) === 'undefined')\n\t\t{\n\t\t\t// Build the tools to start recursing\n\t\t\ttmpParameters.ActualPath = libPath.normalize(tmpParameters.Path);\n\t\t\ttmpParameters.ActualPathParts = tmpParameters.ActualPath.split(libPath.sep);\n\t\t\ttmpParameters.CurrentPathIndex = 0;\n\t\t\ttmpParameters.CurrentPath = '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is not our first run, so we will continue the recursion.\n\t\t\t// Build the new base path\n\t\t\tif (tmpParameters.CurrentPath == libPath.sep)\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\n\t\t\t// Increment the path index\n\t\t\ttmpParameters.CurrentPathIndex++;\n\t\t}\n\n\t\t// Check if the path is fully complete\n\t\tif (tmpParameters.CurrentPathIndex >= tmpParameters.ActualPathParts.length)\n\t\t{\n\t\t\treturn fCallback(null);\n\t\t}\n\n\t\t// Check if the path exists (and is a folder)\n\t\tlibFS.open(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], 'r',\n\t\t\t(pError, pFileDescriptor)=>\n\t\t\t{\n\t\t\t\tif (pFileDescriptor)\n\t\t\t\t{\n\t\t\t\t\tlibFS.closeSync(pFileDescriptor);\n\t\t\t\t}\n\n\t\t\t\tif (pError && pError.code=='ENOENT')\n\t\t\t\t{\n\t\t\t\t\t/* Path doesn't exist, create it */\n\t\t\t\t\tlibFS.mkdir(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], tmpParameters.Mode,\n\t\t\t\t\t\t(pCreateError) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!pCreateError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// We have now created our folder and there was no error -- continue.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (pCreateError.code =='EEXIST')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// The folder exists -- our dev might be running this in parallel/async/whatnot.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(pCreateError.code);\n\t\t\t\t\t\t\t\treturn fCallback(pCreateError);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nmodule.exports = FableServiceFilePersistence;\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":120,\"fable-serviceproviderbase\":52,\"fs\":19,\"path\":113,\"readline\":19}],75:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\n/**\n * Arbitrary Precision Math Operations\n * @author      Steven Velozo <steven@velozo.com>\n * @description Simple functions that perform arbitrary precision math operations and return string resultant values.  Wraps big.js\n * @class FableServiceMath\n * @extends libFableServiceBase\n */\nclass FableServiceMath extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Math';\n\t}\n\n/*\n\tPass-through Rounding Method Constants\n\n\tProperty\t   Value   BigDecimal Equiv   Description\n\t----------     -----   ----------------   -----------\n\troundDown      0       ROUND_DOWN         Rounds towards zero. (_I.e. truncate, no rounding._)\n\troundHalfUp    1       ROUND_HALF_UP      Rounds towards nearest neighbour. (_If equidistant, rounds away from zero._)\n\troundHalfEven  2       ROUND_HALF_EVEN    Rounds towards nearest neighbour. (_If equidistant, rounds towards even neighbour._)\n\troundUp        3       ROUND_UP           Rounds positively away from zero. (_Always round up._)\n*/\n\tget roundDown() { return this.fable.Utility.bigNumber.roundDown; }\n\tget roundHalfUp() { return this.fable.Utility.bigNumber.roundHalfUp; }\n\tget roundHalfEven() { return this.fable.Utility.bigNumber.roundHalfEven; }\n\tget roundUp() { return this.fable.Utility.bigNumber.roundUp; }\n\n\tparsePrecise(pValue, pNonNumberValue)\n\t{\n\t\tlet tmpNumber;\n\n\t\ttry\n\t\t{\n\t\t\ttmpNumber = new this.fable.Utility.bigNumber(pValue);\n\t\t}\n\t\tcatch(pError)\n\t\t{\n\t\t\tthis.log.warn(`Error parsing number (type ${typeof(pValue)}): ${pError}`);\n\t\t\ttmpNumber = (typeof(pNonNumberValue) === 'undefined') ? \"0.0\" : pNonNumberValue;\n\t\t}\n\n\t\treturn tmpNumber.toString();\n\t}\n\n\tpercentagePrecise(pIs, pOf)\n\t{\n\t\tlet tmpLeftValue = isNaN(pIs) ? 0 : pIs;\n\t\tlet tmpRightValue = isNaN(pOf) ? 0 : pOf;\n\n\t\tif (tmpRightValue == 0)\n\t\t{\n\t\t\treturn '0';\n\t\t}\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.div(tmpRightValue);\n\t\ttmpResult = tmpResult.times(100);\n\t\treturn tmpResult.toString();\n\t}\n\n\troundPrecise(pValue, pDecimals, pRoundingMethod)\n\t{\n\t\tlet tmpValue = isNaN(pValue) ? 0 : pValue;\n\t\tlet tmpDecimals = isNaN(pDecimals) ? 0 : pDecimals;\n\t\tlet tmpRoundingMethod = (typeof(pRoundingMethod) === 'undefined') ? this.roundHalfUp : pRoundingMethod;\n\n\t\tlet tmpArbitraryValue = new this.fable.Utility.bigNumber(tmpValue);\n\t\tlet tmpResult = tmpArbitraryValue.round(tmpDecimals, tmpRoundingMethod);\n\t\treturn tmpResult.toString();\n\t}\n\n\ttoFixedPrecise(pValue, pDecimals, pRoundingMethod)\n\t{\n\t\tlet tmpValue = isNaN(pValue) ? 0 : pValue;\n\t\tlet tmpDecimals = isNaN(pDecimals) ? 0 : pDecimals;\n\t\tlet tmpRoundingMethod = (typeof(pRoundingMethod) === 'undefined') ? this.roundHalfUp : pRoundingMethod;\n\n\t\tlet tmpArbitraryValue = new this.fable.Utility.bigNumber(tmpValue);\n\t\tlet tmpResult = tmpArbitraryValue.toFixed(tmpDecimals, tmpRoundingMethod);\n\t\n\t\treturn tmpResult.toString();\n\t}\n\n\taddPrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.plus(tmpRightValue);\n\t\treturn tmpResult.toString();\n\t}\n\n\tsubtractPrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.minus(tmpRightValue);\n\t\treturn tmpResult.toString();\n\t}\n\n\t// Bignumber does not use precision values for power -- only javascript decimals\n\tpowerPrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : parseInt(pRightValue);\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.pow(tmpRightValue);\n\t\treturn tmpResult.toString();\n\t}\n\n\tmultiplyPrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.times(tmpRightValue);\n\t\treturn tmpResult.toString();\n\t}\n\n\tdividePrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.div(tmpRightValue);\n\t\treturn tmpResult.toString();\n\t}\n\n\tmodPrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.mod(tmpRightValue);\n\t\treturn tmpResult.toString();\n\t}\n\n\tsqrtPrecise(pValue)\n\t{\n\t\tlet tmpValue = isNaN(pValue) ? 0 : pValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.sqrt();\n\t\treturn tmpResult.toString();\n\t}\n\n\tabsPrecise(pValue)\n\t{\n\t\tlet tmpValue = isNaN(pValue) ? 0 : pValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.abs();\n\t\treturn tmpResult.toString();\n\t}\n\n\tcomparePrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\treturn tmpLeftArbitraryValue.cmp(tmpRightValue);\n\t}\n\n\tgtPrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\treturn tmpLeftArbitraryValue.gt(tmpRightValue);\n\t}\n\n\tgtePrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\treturn tmpLeftArbitraryValue.gte(tmpRightValue);\n\t}\n\n\tltPrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\treturn tmpLeftArbitraryValue.lt(tmpRightValue);\n\t}\n\n\tltePrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\treturn tmpLeftArbitraryValue.lt(tmpRightValue);\n\t}\n\n\tradPrecise(pDegrees)\n\t{\n\t\tlet tmpDegrees = isNaN(pDegrees) ? 0 : pDegrees;\n\n\t\tlet tmpDegreesArbitraryValue = new this.fable.Utility.bigNumber(tmpDegrees);\n\t\t// TODO: Const for pi in arbitrary precision?\n\t\tlet tmpResult = tmpDegreesArbitraryValue.times(Math.PI).div(180);\n\t\treturn tmpResult.toString();\n\t}\n\n\tsin(pRadians)\n\t{\n\t\tlet tmpRadians = isNaN(pRadians) ? 0 : pRadians;\n\t\treturn Math.sin(tmpRadians);\n\t}\n\n\tcos(pRadians)\n\t{\n\t\tlet tmpRadians = isNaN(pRadians) ? 0 : pRadians;\n\t\treturn Math.cos(tmpRadians);\n\t}\n\n\ttan(pRadians)\n\t{\n\t\tlet tmpRadians = isNaN(pRadians) ? 0 : pRadians;\n\t\treturn Math.tan(tmpRadians);\n\t}\n}\n\nmodule.exports = FableServiceMath;\n\n},{\"fable-serviceproviderbase\":52}],76:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\n/**\n* Precedent Meta-Templating\n* @author      Steven Velozo <steven@velozo.com>\n* @description Process text stream trie and postfix tree, parsing out meta-template expression functions.\n*/\nconst libWordTree = require(`./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js`);\nconst libStringParser = require(`./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js`);\n\n\nclass FableServiceMetaTemplate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'MetaTemplate';\n\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser(this.fable);\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\taddPatternAsync(pPatternStart, pPatternEnd, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternAsync(pPatternStart, pPatternEnd, pParserPromise);\n\t}\n\n\taddPatternBoth(pPatternStart, pPatternEnd, pParser, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternBoth(pPatternStart, pPatternEnd, pParser, pParserPromise);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @param {function} fCallback - The callback function to call when a pattern is matched\n\t * @param {array} pDataContext - The history of data objects already passed in\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData, fCallback, pDataContext)\n\t{\n\t\tif (this.LogNoisiness > 4)\n\t\t{\n\t\t\tthis.fable.log.trace(`Metatemplate parsing template string [${pString}] where the callback is a ${typeof(fCallback)}`, {TemplateData:pData});\n\t\t}\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData, fCallback, pDataContext);\n\t}\n}\n\nmodule.exports = FableServiceMetaTemplate;\n},{\"./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js\":77,\"./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js\":78,\"fable-serviceproviderbase\":52}],77:[function(require,module,exports){\n/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor(pFable)\n\t{\n\t\tthis.fable = pFable;\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData, pDataContext)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse') && (!pParserState.Pattern.isAsync || pParserState.Pattern.isBoth))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData, pDataContext);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.fable.log.info(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync && !pParserState.Pattern.isBoth)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.fable.log.info(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData, pDataContext);\n\t\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texecutePatternAsync(pParserState, pData, fCallback, pDataContext)\n\t{\n\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t// Trim the start and end tags off the output buffer now\n\t\tif (pParserState.Pattern.isAsync && !pParserState.Pattern.isBoth)\n\t\t{\n\t\t\t// Run the function\n\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.fable.log.info(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\treturn fCallback();\n\t\t\t\t}, pDataContext);\n\t\t}\n\t\telse if (pParserState.Pattern.isAsync && pParserState.Pattern.isBoth)\n\t\t{\n\t\t\t// Run the function when both async and non async were provided with the pattern\n\t\t\treturn pParserState.Pattern.ParseAsync(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.fable.log.info(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\treturn fCallback();\n\t\t\t\t}, pDataContext);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Run the t*mplate function\n\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData, pDataContext);\n\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacterAsync\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t * @param {function} fCallback - The callback function to call when the parse is complete\n\t * @param {array} pDataContext - The history of data objects/context already passed in\n\t * @private\n\t */\n\tparseCharacterAsync (pCharacter, pParserState, pData, fCallback, pDataContext)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.executePatternAsync(pParserState, pData, fCallback, pDataContext);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.executePatternAsync(pParserState, pData, fCallback, pDataContext);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\telse\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\t// Without this, templates of all sizes work fine in node.  They do not in the browser.\n\t\t// Trying this out without the timout on non asynchronous template flips.\n\t\treturn fCallback();\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t * @param {function} fCallback - The callback function to call when the parse is complete\n\t * @param {array} pDataContext - The history of data objects/context already passed in\n\t */\n\tparseString (pString, pParseTree, pData, fCallback, pDataContext)\n\t{\n\t\t// TODO: There is danger here if a template function attempts to functionally recurse and doesn't pass this in.\n\t\tlet tmpPreviousDataContext = (Array.isArray(pDataContext)) ? pDataContext : [];\n\t\tlet tmpDataContext = Array.from(tmpPreviousDataContext);\n\t\ttmpDataContext.push(pData)\n\n\t\tif (typeof(fCallback) !== 'function')\n\t\t{\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\t\tfor (var i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: This is not fast.\n\t\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData, tmpDataContext);\n\t\t\t}\n\n\t\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\t\treturn tmpParserState.Output;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is the async mode\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\t\t\ttmpParserState.Asynchronous = true;\n\n\t\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tfor (let i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\ttmpAnticipate.anticipate(\n\t\t\t\t\t(fCallback) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.parseCharacterAsync(pString[i], tmpParserState, pData, fCallback, tmpDataContext);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\t// Flush the remaining data\n\t\t\t\t\tthis.flushOutputBuffer(tmpParserState);\n\t\t\t\t\treturn fCallback(pError, tmpParserState.Output);\n\t\t\t\t});\n\t\t}\n\t}\n}\n\nmodule.exports = StringParser;\n\n},{}],78:[function(require,module,exports){\n/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn tmpLeaf;\n\t}\n\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPatternAsync\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParserAsync - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternAsync (pPatternStart, pPatternEnd, fParserAsync)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParserAsync);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t}\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPatternBoth\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternBoth (pPatternStart, pPatternEnd, fParser, fParserAsync)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParser);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t\ttmpLeaf.isBoth = true;\n\t\t\t// When a leaf has both async and non-async versions of the functions, we store the async in fParserAsync.\n\t\t\ttmpLeaf.ParseAsync = fParserAsync;\n\t\t}\n\t}\n}\n\nmodule.exports = WordTree;\n\n},{}],79:[function(require,module,exports){\nmodule.exports = (\n\t{\n\t\t\"Metadata\": {\n\t\t\t\"UUID\": false,\n\t\t\t\"Hash\": false,\n\n\t\t\t\"Name\": \"\",\n\t\t\t\"Summary\": \"\",\n\n\t\t\t\"Version\": 0\n\t\t},\n\t\t\"Status\": {\n\t\t\t\"Completed\": false,\n\t\t\t\"StepCount\": 0\n\t\t},\n\t\t\"Steps\": [],\n\t\t\"Errors\": [],\n\t\t\"Log\": []\n\t}\n);\n},{}],80:[function(require,module,exports){\nconst { PE } = require('big.js');\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst _OperationStatePrototypeString = JSON.stringify(require('./Fable-Service-Operation-DefaultSettings.js'));\n\nclass FableOperation extends libFableServiceBase\n{\n\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\t// Timestamps will just be the long ints\n\t\tthis.timeStamps = {};\n\n        this.serviceType = 'PhasedOperation';\n\n\t\tthis.state = JSON.parse(_OperationStatePrototypeString);\n\n\t\tthis.stepMap = {};\n\t\tthis.stepFunctions = {};\n\n\t\t// Match the service instantiation to the operation.\n\t\tthis.state.Metadata.Hash = this.Hash;\n\t\tthis.state.Metadata.UUID = this.UUID;\n\n\t\tthis.state.Metadata.Name = (typeof(this.options.Name) == 'string') ? this.options.Name : `Unnamed Operation ${this.state.Metadata.UUID}`;\n\t\tthis.name = this.state.Metadata.Name;\n\n\t\tthis.progressTrackerSet = this.fable.instantiateServiceProviderWithoutRegistration('ProgressTrackerSet');\n\n\t\tthis.state.OverallProgressTracker = this.progressTrackerSet.createProgressTracker(`Overall-${this.state.Metadata.UUID}`);\n\n\t\t// This is here to use the pass-through logging functions in the operation itself.\n\t\tthis.log = this;\n\t}\n\n\texecute(fExecutionCompleteCallback)\n\t{\n\t\t// TODO: Should the same operation be allowed to execute more than one time?\n\t\tif (this.state.OverallProgressTracker.StartTimeStamp > 0)\n\t\t{\n\t\t\treturn fExecutionCompleteCallback(new Error(`Operation [${this.state.Metadata.UUID}] ${this.state.Metadata.Name} has already been executed!`));\n\t\t}\n\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\t\t\n\t\tthis.progressTrackerSet.setProgressTrackerTotalOperations(this.state.OverallProgressTracker.Hash, this.state.Status.StepCount);\n\t\tthis.progressTrackerSet.startProgressTracker(this.state.OverallProgressTracker.Hash);\n\t\tthis.info(`Operation [${this.state.Metadata.UUID}] ${this.state.Metadata.Name} starting...`);\n\n\t\tfor (let i = 0; i < this.state.Steps.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(\n\t\t\t\tfunction(fNext)\n\t\t\t\t{\n\t\t\t\t\tthis.fable.log.info(`Step #${i} [${this.state.Steps[i].GUIDStep}] ${this.state.Steps[i].Name} starting...`);\n\t\t\t\t\tthis.progressTrackerSet.startProgressTracker(this.state.Steps[i].ProgressTracker.Hash);\n\t\t\t\t\treturn fNext();\n\t\t\t\t}.bind(this));\n\t\t\t// Steps are executed in a custom context with \n\t\t\ttmpAnticipate.anticipate(this.stepFunctions[this.state.Steps[i].GUIDStep].bind(\n\t\t\t\t{\n\t\t\t\t\tlog:this,\n\t\t\t\t\tfable:this.fable,\n\t\t\t\t\toptions:this.state.Steps[i].Metadata,\n\t\t\t\t\tmetadata:this.state.Steps[i].Metadata,\n\t\t\t\t\tProgressTracker:this.progressTrackerSet.getProgressTracker(this.state.Steps[i].ProgressTracker.Hash),\n\t\t\t\t\tlogProgressTrackerStatus: function() \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn this.log.info(`Step #${i} [${this.state.Steps[i].GUIDStep}]: ${this.progressTrackerSet.getProgressTrackerStatusString(this.state.Steps[i].ProgressTracker.Hash)}`);\n\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\tOperationState:this.state,\n\t\t\t\t\tStepState:this.state.Steps[i]\n\t\t\t\t}));\n\t\t\ttmpAnticipate.anticipate(\n\t\t\t\tfunction(fNext)\n\t\t\t\t{\n\t\t\t\t\tthis.progressTrackerSet.endProgressTracker(this.state.Steps[i].ProgressTracker.Hash);\n\t\t\t\t\tlet tmpStepTimingMessage = this.progressTrackerSet.getProgressTrackerStatusString(this.state.Steps[i].ProgressTracker.Hash);\n\t\t\t\t\tthis.fable.log.info(`Step #${i} [${this.state.Steps[i].GUIDStep}] ${this.state.Steps[i].Name} complete.`);\n\t\t\t\t\tthis.fable.log.info(`Step #${i} [${this.state.Steps[i].GUIDStep}] ${this.state.Steps[i].Name} ${tmpStepTimingMessage}.`);\n\t\t\t\n\t\t\t\t\tthis.progressTrackerSet.incrementProgressTracker(this.state.OverallProgressTracker.Hash, 1);\n\t\t\t\t\tlet tmpOperationTimingMessage = this.progressTrackerSet.getProgressTrackerStatusString(this.state.OverallProgressTracker.Hash);\n\t\t\t\t\tthis.fable.log.info(`Operation [${this.state.Metadata.UUID}] ${tmpOperationTimingMessage}.`);\n\t\t\t\t\treturn fNext();\n\t\t\t\t}.bind(this));\n\t\t}\n\n\t\t// Wait for the anticipation to complete\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\tthis.fable.log.error(`Operation [${this.state.Metadata.UUID}] ${this.state.Metadata.Name} had an error: ${pError}`, pError);\n\t\t\t\t\treturn fExecutionCompleteCallback(pError);\n\t\t\t\t}\n\t\t\t\tthis.info(`Operation [${this.state.Metadata.UUID}] ${this.state.Metadata.Name} complete.`);\n\t\t\t\tlet tmpOperationTimingMessage = this.progressTrackerSet.getProgressTrackerStatusString(this.state.OverallProgressTracker.Hash);\n\t\t\t\tthis.progressTrackerSet.endProgressTracker(this.state.OverallProgressTracker.Hash);\n\t\t\t\tthis.fable.log.info(`Operation [${this.state.Metadata.UUID}] ${tmpOperationTimingMessage}.`);\n\t\t\t\treturn fExecutionCompleteCallback();\n\t\t\t});\n\t}\n\n\t// There are three ways to add steps:\n\t// 1. As a basic javascript function\n\t//    --\n\t//    This is the most basic, java\"script\" way to add a step.  It will\n\t//    setup a \"this\" context that has the following properties:\n\t//    - log: A reference to the operation's log object\n\n\taddStep(fStepFunction, pStepMetadata, pStepName, pStepDescription, pGUIDStep)\n\t{\n\t\tlet tmpStep = {};\n\n\t\t// GUID is optional\n\t\ttmpStep.GUIDStep = (typeof(pGUIDStep) !== 'undefined') ? pGUIDStep : `STEP-${this.state.Steps.length}-${this.fable.DataGeneration.randomNumericString()}`;\n\n\n\t\t// Name is optional\n\t\ttmpStep.Name = (typeof(pStepName) !== 'undefined') ? pStepName : `Step [${tmpStep.GUIDStep}]`;\n\t\ttmpStep.Description = (typeof(pStepDescription) !== 'undefined') ? pStepDescription : `Step execution of ${tmpStep.Name}.`;\n\n\t\ttmpStep.ProgressTracker = this.progressTrackerSet.createProgressTracker(tmpStep.GUIDStep);\n\n\t\ttmpStep.Metadata = (typeof(pStepMetadata) === 'object') ? pStepMetadata : {};\n\n\t\t// There is an array of steps, in the Operation State itself ... push a step there\n\t\tthis.state.Steps.push(tmpStep);\n\n\t\tthis.stepMap[tmpStep.GUIDStep] = tmpStep;\n\n\t\tthis.stepFunctions[tmpStep.GUIDStep] = typeof(fStepFunction) == 'function' ? fStepFunction : function (fDone) { return fDone(); };\n\n\t\tthis.state.Status.StepCount++;\n\n\t\treturn tmpStep;\n\t}\n\n\tsetStepTotalOperations(pGUIDStep, pTotalOperationCount)\n\t{\n\t\tif (!this.stepMap.hasOwnProperty(pGUIDStep))\n\t\t{\n\t\t\treturn new Error(`Step [${pGUIDStep}] does not exist in operation [${this.state.Metadata.UUID}] ${this.state.Metadata.Name} when attempting to set total operations to ${pTotalOperationCount}.`);\n\t\t}\n\n\t\tthis.progressTrackerSet.setProgressTrackerTotalOperations(this.stepMap[pGUIDStep].ProgressTracker.Hash, pTotalOperationCount);\n\t}\n\n\twriteOperationLog(pLogLevel, pLogText, pLogObject)\n\t{\n\t\tthis.state.Log.push(`[${new Date().toUTCString()}]-[${pLogLevel}]: ${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Log.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\twriteOperationErrors(pLogText, pLogObject)\n\t{\n\t\tthis.state.Errors.push(`${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Errors.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('TRACE', pLogText, pLogObject);\n\t\tthis.fable.log.trace(pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('DEBUG', pLogText, pLogObject);\n\t\tthis.fable.log.debug(pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('INFO', pLogText, pLogObject);\n\t\tthis.fable.log.info(pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('WARN', pLogText, pLogObject);\n\t\tthis.fable.log.warn(pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('ERROR', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.error(pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('FATAL', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.fatal(pLogText, pLogObject);\n\t}\n}\n\nmodule.exports = FableOperation;\n},{\"./Fable-Service-Operation-DefaultSettings.js\":79,\"big.js\":17,\"fable-serviceproviderbase\":52}],81:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceProgressTime extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'ProgressTime';\n\n\t\tthis.timeStamps = {};\n\t}\n\n\tformatTimeDuration(pTimeDurationInMilliseconds)\n\t{\n\t\tlet tmpTimeDuration = typeof(pTimeDurationInMilliseconds) == 'number' ? pTimeDurationInMilliseconds : 0;\n\n\t\tif (pTimeDurationInMilliseconds < 0)\n\t\t{\n\t\t\treturn 'unknown';\n\t\t}\n\n\t\tlet tmpTimeDurationString = '';\n\t\tif (tmpTimeDuration > 3600000)\n\t\t{\n\t\t\ttmpTimeDurationString += Math.floor(tmpTimeDuration/3600000)+'h ';\n\t\t\ttmpTimeDuration = tmpTimeDuration % 3600000;\n\t\t}\n\t\tif (tmpTimeDuration > 60000)\n\t\t{\n\t\t\ttmpTimeDurationString += Math.floor(tmpTimeDuration/60000)+'m ';\n\t\t\ttmpTimeDuration = tmpTimeDuration % 60000;\n\t\t}\n\t\tif (tmpTimeDuration > 1000)\n\t\t{\n\t\t\ttmpTimeDurationString += Math.floor(tmpTimeDuration/1000)+'s ';\n\t\t\ttmpTimeDuration = tmpTimeDuration % 1000;\n\t\t}\n\t\ttmpTimeDurationString += Math.round(tmpTimeDuration)+'ms';\n\n\t\treturn tmpTimeDurationString;\n\t}\n\n\tcreateTimeStamp(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tthis.timeStamps[tmpTimeStampHash] = +new Date();\n\t\treturn this.timeStamps[tmpTimeStampHash];\n\t}\n\n\tgetTimeStampValue(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\treturn this.timeStamps.hasOwnProperty(tmpTimeStampHash) ? this.timeStamps[tmpTimeStampHash] : -1;\n\t}\n\n\tupdateTimeStampValue(pTimeStampHash, pReferenceTime)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tlet tmpReferenceTime = false;\n\t\t\n\t\t// This function allows the user to pass in either a reference time in ms, or, a hash of a timestamp.\n\t\tif (typeof(pReferenceTime) == 'string')\n\t\t{\n\t\t\ttmpReferenceTime = this.timeStamps.hasOwnProperty(tmpReference) ? this.timeStamps[tmpReference] : false;\n\t\t}\n\t\telse if (typeof(pReferenceTime) == 'number')\n\t\t{\n\t\t\ttmpReferenceTime = pReferenceTime;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpReferenceTime = +new Date();\n\t\t}\n\n\t\tif (this.timeStamps.hasOwnProperty(tmpTimeStampHash) && tmpReferenceTime)\n\t\t{\n\t\t\tthis.timeStamps[tmpTimeStampHash] = tmpReferenceTime;\n\t\t\treturn this.timeStamps[tmpTimeStampHash];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tremoveTimeStamp(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tif (this.timeStamps.hasOwnProperty(tmpTimeStampHash))\n\t\t{\n\t\t\tdelete this.timeStamps[tmpTimeStampHash];\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetTimeStampDelta(pTimeStampHash, pReferenceTime)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tlet tmpReferenceTime = false;\n\t\t\n\t\t// This function allows the user to pass in either a reference time in ms, or, a hash of a timestamp.\n\t\tif (typeof(pReferenceTime) == 'string')\n\t\t{\n\t\t\ttmpReferenceTime = this.timeStamps.hasOwnProperty(tmpReference) ? this.timeStamps[tmpReference] : false;\n\t\t}\n\t\telse if (typeof(pReferenceTime) == 'number')\n\t\t{\n\t\t\ttmpReferenceTime = pReferenceTime;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpReferenceTime = +new Date();\n\t\t}\n\n\t\tif (this.timeStamps.hasOwnProperty(tmpTimeStampHash) && tmpReferenceTime)\n\t\t{\n\t\t\treturn tmpReferenceTime-this.timeStamps[tmpTimeStampHash];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tgetDurationBetweenTimestamps(pTimeStampHashStart, pTimeStampHashEnd)\n\t{\n\t\tlet tmpTimeStampHashStart = (typeof(pTimeStampHashStart) == 'string') ? pTimeStampHashStart : 'Default';\n\t\tlet tmpTimeStampHashEnd = (typeof(pTimeStampHashEnd) == 'string') ? pTimeStampHashEnd : 'Default';\n\t\tif (this.timeStamps.hasOwnProperty(tmpTimeStampHashStart) && this.timeStamps.hasOwnProperty(tmpTimeStampHashEnd))\n\t\t{\n\t\t\treturn this.timeStamps[tmpTimeStampHashEnd]-this.timeStamps[tmpTimeStampHashStart];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tgetTimeStampDeltaMessage(pTimeStampHash, pMessage, pReferenceTime)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : `Elapsed for ${tmpTimeStampHash}: `;\n\t\tlet tmpOperationTime = this.getTimeStampDelta(tmpTimeStampHash, pReferenceTime);\n\n\t\treturn `${tmpMessage} ${this.formatTimeDuration(tmpOperationTime)}`;\n\t}\n\n\tlogTimeStampDelta(pTimeStampHash, pMessage, pReferenceTime)\n\t{\n\t\tthis.fable.log.info(this.getTimeStampDeltaMessage(pTimeStampHash, pMessage, pReferenceTime));\n\t}\n}\n\nmodule.exports = FableServiceProgressTime;\n},{\"fable-serviceproviderbase\":52}],82:[function(require,module,exports){\nclass ProgressTracker\n{\n\tconstructor(pProgressTrackerSet, pProgressTrackerHash)\n\t{\n\t\tthis.progressTrackerSet = pProgressTrackerSet;\n\t\tthis.progressTrackerHash = pProgressTrackerHash;\n\n\t\tthis.data = this.progressTrackerSet.getProgressTrackerData(this.progressTrackerHash);\n\t}\n\n\tupdateProgressTracker(pProgressAmount)\n\t{\n\t\treturn this.progressTrackerSet.updateProgressTracker(this.progressTrackerHash, pProgressAmount);\n\t}\n\n\tincrementProgressTracker(pProgressIncrementAmount)\n\t{\n\t\treturn this.progressTrackerSet.incrementProgressTracker(this.progressTrackerHash, pProgressIncrementAmount);\n\t}\n\n\tsetProgressTrackerTotalOperations(pTotalOperationCount)\n\t{\n\t\treturn this.progressTrackerSet.setProgressTrackerTotalOperations(this.progressTrackerHash, pTotalOperationCount);\n\t}\n\n\tgetProgressTrackerStatusString()\n\t{\n\t\treturn this.progressTrackerSet.getProgressTrackerStatusString(this.progressTrackerHash);\n\t}\n}\n\nmodule.exports = ProgressTracker;\n},{}],83:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libProgressTrackerClass = require('./Fable-Service-ProgressTracker/ProgressTracker.js');\n\nclass FableServiceProgressTrackerSet extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'ProgressTrackerSet';\n\n\t\tthis.progressTrackers = {};\n\n\t\t// Create an internal PorgressTime service to track timestamps\n\t\tthis.progressTimes = this.fable.instantiateServiceProviderWithoutRegistration('ProgressTime');\n\n\t\t// This timestamp is used and updated by *all* progress trackers.\n\t\tthis.progressTimes.createTimeStamp('CurrentTime');\n\t}\n\n\tgetProgressTracker(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.fable.log.warn(`ProgressTracker ${tmpProgressTrackerHash} does not exist!  Creating a new tracker...`);\n\t\t\tthis.createProgressTracker(tmpProgressTrackerHash, 100);\n\t\t}\n\n\t\treturn new libProgressTrackerClass(this, pProgressTrackerHash);\n\t}\n\n\tgetProgressTrackerData(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.fable.log.warn(`ProgressTracker ${tmpProgressTrackerHash} does not exist!  Creating a new tracker...`);\n\t\t\tthis.createProgressTracker(tmpProgressTrackerHash, 100);\n\t\t}\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tcreateProgressTracker(pProgressTrackerHash, pTotalOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\t\tlet tmpTotalOperations = (typeof(pTotalOperations) == 'number') ? pTotalOperations : 100;\n\n\t\tlet tmpProgressTracker = (\n\t\t\t{\n\t\t\t\tHash: tmpProgressTrackerHash,\n\n\t\t\t\tStartTimeHash: `${tmpProgressTrackerHash}-Start`,\n\t\t\t\tStartTimeStamp: -1,\n\t\t\t\tCurrentTimeStamp: -1,\n\t\t\t\tEndTimeHash: `${tmpProgressTrackerHash}-End`,\n\t\t\t\tEndTimeStamp: -1,\n\n\t\t\t\tPercentComplete: -1,\n\t\t\t\t// If this is set to true, PercentComplete will be calculated as CurrentCount / TotalCount even if it goes over 100%\n\t\t\t\tAllowTruePercentComplete: false,\n\n\t\t\t\tElapsedTime: -1,\n\t\t\t\tAverageOperationTime: -1,\n\t\t\t\tEstimatedCompletionTime: -1,\n\n\t\t\t\tTotalCount: tmpTotalOperations,\n\n\t\t\t\tCurrentCount:-1\n\t\t\t});\n\n\t\tif (this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.fable.log.warn(`ProgressTracker ${tmpProgressTrackerHash} already exists!  Overwriting with a new tracker...`);\n\t\t\tthis.progressTimes.removeTimeStamp(tmpProgressTracker.StartTimeHash);\n\t\t\tthis.progressTimes.removeTimeStamp(tmpProgressTracker.EndTimeHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash] = tmpProgressTracker;\n\n\t\treturn tmpProgressTracker;\n\t}\n\n\tsetProgressTrackerTotalOperations(pProgressTrackerHash, pTotalOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\t\tlet tmpTotalOperations = (typeof(pTotalOperations) == 'number') ? pTotalOperations : 100;\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.fable.log.warn(`Attempted to set the total operations of ProgressTracker ${tmpProgressTrackerHash} but it does not exist!  Creating a new tracker...`);\n\t\t\tthis.createProgressTracker(tmpProgressTrackerHash, tmpTotalOperations);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].TotalCount = tmpTotalOperations;\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tstartProgressTracker(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\n\t\t// This is the only method to lazily create ProgressTrackers now\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(tmpProgressTrackerHash, 100);\n\t\t}\n\n\t\tlet tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\tthis.progressTimes.createTimeStamp(this.progressTrackers[tmpProgressTrackerHash].StartTimeHash);\n\t\ttmpProgressTracker.StartTimeStamp = this.progressTimes.getTimeStampValue(this.progressTrackers[tmpProgressTrackerHash].StartTimeHash);\n\t\tif (tmpProgressTracker.CurrentCount < 0)\n\t\t{\n\t\t\ttmpProgressTracker.CurrentCount = 0;\n\t\t}\n\n\t\treturn this.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\t}\n\n\tendProgressTracker(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.fable.log.error(`Attempted to end ProgressTracker ${tmpProgressTrackerHash} that does not exist!`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\tthis.progressTimes.createTimeStamp(this.progressTrackers[tmpProgressTrackerHash].EndTimeHash);\n\t\ttmpProgressTracker.EndTimeStamp = this.progressTimes.getTimeStampValue(this.progressTrackers[tmpProgressTrackerHash].EndTimeHash);\n\n\t\treturn this.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\t}\n\n\tsolveProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.fable.log.error(`Attempted to solve ProgressTracker ${tmpProgressTrackerHash} that does not exist!`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\tif ((tmpProgressTracker.TotalCount < 1) || isNaN(tmpProgressTracker.TotalCount))\n\t\t{\n\t\t\tthis.fable.log.error(`ProgressTracker ${tmpProgressTracker.Hash} has an invalid total count of operations (${tmpProgressTracker.TotalCount}!  Setting it to the default of 100...`);\n\t\t\ttmpProgressTracker.TotalCount = 100;\n\t\t}\n\n\t\t// Compute the percentage of progress that is complete.\n\t\tif (tmpProgressTracker.CurrentCount < 1)\n\t\t{\n\t\t\ttmpProgressTracker.PercentComplete = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpProgressTracker.PercentComplete = (tmpProgressTracker.CurrentCount / tmpProgressTracker.TotalCount) * 100.0;\n\t\t}\n\n\t\tif (!tmpProgressTracker.AllowTruePercentComplete && (tmpProgressTracker.PercentComplete > 100))\n\t\t{\n\t\t\ttmpProgressTracker.PercentComplete = 100;\n\t\t}\n\n\t\t// Compute the average time per operation\n\t\tthis.progressTimes.updateTimeStampValue('CurrentTime');\n\t\ttmpProgressTracker.CurrentTimeStamp = this.progressTimes.getTimeStampValue('CurrentTime');\n\t\ttmpProgressTracker.ElapsedTime = tmpProgressTracker.CurrentTimeStamp - tmpProgressTracker.StartTimeStamp;\n\n\t\tif (tmpProgressTracker.EndTimeStamp > 0)\n\t\t{\n\t\t\ttmpProgressTracker.ElapsedTime = tmpProgressTracker.EndTimeStamp - tmpProgressTracker.StartTimeStamp;\n\t\t}\n\n\t\tif (tmpProgressTracker.CurrentCount > 0)\n\t\t{\n\t\t\ttmpProgressTracker.AverageOperationTime = (tmpProgressTracker.CurrentTimeStamp-tmpProgressTracker.StartTimeStamp) / tmpProgressTracker.CurrentCount;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpProgressTracker.AverageOperationTime = -1;\n\t\t}\n\n\t\t// Compute the estimated completion\n\t\tif (tmpProgressTracker.AverageOperationTime > 0)\n\t\t{\n\t\t\ttmpProgressTracker.EstimatedCompletionTime = Math.max((tmpProgressTracker.TotalCount - tmpProgressTracker.CurrentCount), 0) * tmpProgressTracker.AverageOperationTime;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpProgressTracker.EstimatedCompletionTime = -1;\n\t\t}\n\n\t\treturn tmpProgressTracker;\n\t}\n\n\tupdateProgressTracker(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\n\t\tif (isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\tthis.fable.log.warn(`Attempted to update ProgressTracker ${tmpProgressTrackerHash} with an invalid number of operations!`)\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = tmpCurrentOperations;\n\n\t\treturn this.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\t}\n\n\tincrementProgressTracker(pProgressTrackerHash, pOperationIncrementAmount)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\t\tlet tmpOperationIncrementAmount = parseInt(pOperationIncrementAmount);\n\n\t\tif (isNaN(tmpOperationIncrementAmount))\n\t\t{\n\t\t\ttmpOperationIncrementAmount = 1;\n\t\t}\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.fable.log.warn(`Attempted to increment ProgressTracker ${tmpProgressTrackerHash} but it did not exist.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.progressTrackers[tmpProgressTrackerHash].StartTimeStamp < 1)\n\t\t{\n\t\t\tthis.fable.log.warn(`Attempted to increment ProgressTracker ${tmpProgressTrackerHash} but it was not started.. starting now.`);\n\t\t\tthis.startProgressTracker(tmpProgressTrackerHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = this.progressTrackers[tmpProgressTrackerHash].CurrentCount + tmpOperationIncrementAmount;\n\n\t\treturn this.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\t}\n\n\tgetProgressTrackerCompletedOperationCountString(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\n\t\t// This call here can mean if we add operations and then immediately get the string, this function runs twice.\n\t\tconst tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\t// The states of a progress tracker:\n\t\tif (tmpProgressTracker.CurrentCount < 0)\n\t\t{\n\t\t\treturn `none`;\n\t\t}\n\t\telse if (tmpProgressTracker.CurrentCount < 1)\n\t\t{\n\t\t\treturn `0`;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn `${tmpProgressTracker.CurrentCount}`;\n\t\t}\n\t}\n\n\tgetProgressTrackerPercentCompleteString(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\n\t\t// This call here can mean if we add operations and then immediately get the string, this function runs twice.\n\t\t// TODO: Is there a pattern to avoid this double call that's worth putting in?\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\treturn `ProgressTracker ${tmpProgressTrackerHash} does not exist!  No stats to display.`;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\t\t// The states of a progress tracker:\n\t\t\t// 1. Not started\n\t\t\tif (tmpProgressTracker.StartTimeStamp < 1)\n\t\t\t{\n\t\t\t\treturn `0%`;\n\t\t\t}\n\t\t\t// 2. Started, but no operations completed\n\n\t\t\tif (tmpProgressTracker.CurrentCount < 1)\n\t\t\t{\n\t\t\t\treturn `0%`;\n\t\t\t}\n\t\t\t// 3. Started, some operations completed\n\t\t\telse if (tmpProgressTracker.EndTimeStamp < 1)\n\t\t\t{\n\t\t\t\treturn `${tmpProgressTracker.PercentComplete.toFixed(3)}%`;\n\t\t\t}\n\t\t\t// 4. Done\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn `${tmpProgressTracker.PercentComplete.toFixed(3)}%`;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetProgressTrackerStatusString(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\n\t\t// This call here can mean if we add operations and then immediately get the string, this function runs twice.\n\t\t// TODO: Is there a pattern to avoid this double call that's worth putting in?\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\treturn `ProgressTracker ${tmpProgressTrackerHash} does not exist!  No stats to display.`;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\t\t// The states of a progress tracker:\n\t\t\t// 1. Not started\n\t\t\tif (tmpProgressTracker.StartTimeStamp < 1)\n\t\t\t{\n\t\t\t\treturn `ProgressTracker ${tmpProgressTracker.Hash} has not been started yet.`;\n\t\t\t}\n\t\t\t// 2. Started, but no operations completed\n\n\t\t\tif ((tmpProgressTracker.CurrentCount < 1) && (tmpProgressTracker.EndTimeStamp < 1))\n\t\t\t{\n\t\t\t\treturn `ProgressTracker ${tmpProgressTracker.Hash} has no completed operations.  ${this.progressTimes.formatTimeDuration(tmpProgressTracker.ElapsedTime)} have elapsed since it was started.`;\n\t\t\t}\n\t\t\t// 3. Started, some operations completed\n\t\t\telse if (tmpProgressTracker.EndTimeStamp < 1)\n\t\t\t{\n\t\t\t\treturn `ProgressTracker ${tmpProgressTracker.Hash} is ${tmpProgressTracker.PercentComplete.toFixed(3)}% completed - ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations over ${this.progressTimes.formatTimeDuration(tmpProgressTracker.ElapsedTime)} (median ${this.progressTimes.formatTimeDuration(tmpProgressTracker.AverageOperationTime)} per).  Estimated completion: ${this.progressTimes.formatTimeDuration(tmpProgressTracker.EstimatedCompletionTime)}`;\t\t\t}\n\t\t\t// 4. Done\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn `ProgressTracker ${tmpProgressTracker.Hash} is done.  ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations were completed in ${this.progressTimes.formatTimeDuration(tmpProgressTracker.ElapsedTime)} (median ${this.progressTimes.formatTimeDuration(tmpProgressTracker.AverageOperationTime)} per).`;\n\t\t\t}\n\t\t}\n\t}\n\n\tlogProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tthis.fable.log.info(this.getProgressTrackerStatusString(pProgressTrackerHash));\n\t}\n}\n\nmodule.exports = FableServiceProgressTrackerSet;\n},{\"./Fable-Service-ProgressTracker/ProgressTracker.js\":82,\"fable-serviceproviderbase\":52}],84:[function(require,module,exports){\n(function (Buffer){(function (){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libSimpleGet = require('simple-get');\nconst libCookie = require('cookie');\n\nclass FableServiceRestClient extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.TraceLog = false;\n\t\tif (this.options.TraceLog || this.fable.TraceLog)\n\t\t{\n\t\t\tthis.TraceLog = true;\n\t\t}\n\n\t\tthis.dataFormat = this.fable.services.DataFormat;\n\n\t\tthis.serviceType = 'RestClient';\n\n\t\tthis.cookie = false;\n\n\t\t// This is a function that can be overridden, to allow the management\n\t\t// of the request options before they are passed to the request library.\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tget simpleGet()\n\t{\n\t\treturn libSimpleGet;\n\t}\n\n\tprepareCookies(pRequestOptions)\n\t{\n\t\tif (this.cookie)\n\t\t{\n\t\t\tlet tmpCookieObject = this.cookie;\n\t\t\tif (!pRequestOptions.hasOwnProperty('headers'))\n\t\t\t{\n\t\t\t\tpRequestOptions.headers = {};\n\t\t\t}\n\t\t\tlet tmpCookieKeys = Object.keys(tmpCookieObject);\n\t\t\tif (tmpCookieKeys.length > 0)\n\t\t\t{\n\t\t\t\t// Only grab the first for now.\n\t\t\t\tpRequestOptions.headers.cookie = libCookie.serialize(tmpCookieKeys[0], tmpCookieObject[tmpCookieKeys[0]]);\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn pRequestOptions;\n\t}\n\n\tpreRequest(pOptions)\n\t{\n\t\t// Validate the options object\n\t\tlet tmpOptions = this.prepareCookies(pOptions);\n\n\t\t// Prepend a string to the URL if it exists in the Fable Config\n\t\tif (this.fable.settings.hasOwnProperty('RestClientURLPrefix'))\n\t\t{\n\t\t\ttmpOptions.url = this.fable.settings.RestClientURLPrefix + tmpOptions.url;\n\t\t}\n\n\t\treturn this.prepareRequestOptions(tmpOptions);\n\t}\n\n\texecuteChunkedRequest(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpData.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpData);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteChunkedRequestBinary(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\ttmpOptions.json = false;\n\t\ttmpOptions.encoding = null;\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpDataBuffer = false;\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: Potentially create a third option that streams this to a file?  So it doesn't have to hold it all in memory.\n\t\t\t\t\t\tif (!tmpDataBuffer)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.from(pChunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.concat([tmpDataBuffer, pChunk]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpDataBuffer.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpDataBuffer);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteJSONRequest(pOptions, fCallback)\n\t{\n\t\tpOptions.json = true;\n\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\tif (!tmpOptions.hasOwnProperty('headers'))\n\t\t{\n\t\t\ttmpOptions.headers = {};\n\t\t}\n\t\t/* Automated headers break some APIs\n\t\tif (!tmpOptions.headers.hasOwnProperty('Content-Type'))\n\t\t{\n\t\t\ttmpOptions.headers['Content-Type'] = 'application/json';\n\t\t}\n\t\t*/\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} JSON request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpJSONData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpJSONData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> JSON ${tmpOptions.method} completed - received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, JSON.parse(tmpJSONData));\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetJSON(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeJSONRequest(tmpRequestOptions, fCallback);\n\t}\n\n\tputJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PUT JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PUT';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpostJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`POST JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'POST';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpatchJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PATCH JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PATCH';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\theadJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`HEAD JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'HEAD';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tdelJSON(pOptions, fCallback)\n\t{\n\t\tpOptions.method = 'DELETE';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tgetRawText(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeChunkedRequest(tmpRequestOptions, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceRestClient;\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":20,\"cookie\":27,\"fable-serviceproviderbase\":52,\"simple-get\":134}],85:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceTemplate extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Template';\n\n\t\t// These are the exact regex's used in lodash/underscore\n\t\t// TODO: Switch this to precedent\n\t\tthis.Matchers = (\n\t\t\t{\n\t\t\t\tEvaluate: /<%([\\s\\S]+?)%>/g,\n\t\t\t\tInterpolate: /<%=([\\s\\S]+?)%>/g,\n\t\t\t\tEscaper: /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g,\n\t\t\t\tUnescaper: /\\\\(\\\\|'|r|n|t|u2028|u2029)/g,\n\t\t\t\t// This is how underscore does it, so we are keeping it for now.\n\t\t\t\tGuaranteedNonMatch: /.^/\n\t\t\t});\n\n\t\t// This is a helper for the escaper and unescaper functions.\n\t\t// Right now we are going to keep what underscore is doing, but, not forever.\n\t\tthis.templateEscapes = {\n\t\t\t'\\\\': '\\\\',\n\t\t\t\"'\": \"'\",\n\t\t\t'r': '\\r',\n\t\t\t'\\r': 'r',\n\t\t\t'n': '\\n',\n\t\t\t'\\n': 'n',\n\t\t\t't': '\\t',\n\t\t\t'\\t': 't',\n\t\t\t'u2028': '\\u2028',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'u2029': '\\u2029',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\t// This is defined as such to underscore that it is a dynamic programming\n\t\t// function on this class.\n\t\tthis.renderFunction = false;\n        this.templateString = false;\n\t}\n\n\trenderTemplate(pData)\n\t{\n\t\treturn this.renderFunction(pData);\n\t}\n\n\ttemplateFunction()\n\t{\n\t\tlet fRenderTemplateBound = this.renderTemplate.bind(this);\n\t\treturn fRenderTemplateBound;\n\t}\n\n\tbuildTemplateFunction(pTemplateText, pData)\n\t{\n\t\t// For now this is being kept in a weird form ... this is to mimic the old\n\t\t// underscore code until this is rewritten using precedent.\n\t\tthis.TemplateSource = \"__p+='\" + pTemplateText\n\t\t\t.replace(this.Matchers.Escaper,\n\t\t\t\t(pMatch)=>\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\${this.templateEscapes[pMatch]}`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Interpolate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `'+\\n(${decodeURIComponent(pCode)})+\\n'`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Evaluate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `';\\n${decodeURIComponent(pCode)}\\n;__p+='`;\n\t\t\t\t}) + `';\\n`;\n\n\n\t\tthis.TemplateSource = `with(pTemplateDataObject||{}){\\n${this.TemplateSource}}\\n`;\n\t\tthis.TemplateSource = `var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n${this.TemplateSource}return __p;\\n`;\n\n\t\tthis.renderFunction = new Function('pTemplateDataObject', this.TemplateSource);\n\n\t\tif (typeof(pData) != 'undefined')\n\t\t{\n\t\t\treturn this.renderFunction(pData);\n\t\t}\n\n\t\t// Provide the compiled function source as a convenience for build time\n\t\t// precompilation.\n\t\tthis.TemplateSourceCompiled = 'function(obj){\\n' + this.TemplateSource + '}';\n\n\t\treturn this.templateFunction();\n\t}\n}\n\nmodule.exports = FableServiceTemplate;\n},{\"fable-serviceproviderbase\":52}],86:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\n// TODO: These are still pretty big -- consider the smaller polyfills\nconst libAsyncWaterfall = require('async.waterfall');\nconst libAsyncEachLimit = require('async.eachlimit');\n\nconst libBigNumber = require('big.js');\n\nclass FableServiceUtility extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\tthis.templates = {};\n\n\t\t// These two functions are used extensively throughout\n\t\tthis.waterfall = libAsyncWaterfall;\n\t\tthis.eachLimit = libAsyncEachLimit;\n\n\t\tthis.bigNumber = libBigNumber;\n\t}\n\n\t// Underscore and lodash have a behavior, _.extend, which merges objects.\n\t// Now that es6 gives us this, use the native thingy.\n\t// Nevermind, the native thing is not stable enough across environments\n\t// Basic shallow copy\n\textend(pDestinationObject, ...pSourceObjects)\n\t{\n\t\tfor (let i = 0; i < pSourceObjects.length; i++)\n\t\t{\n\t\t\tlet tmpSourceObject = pSourceObjects[i];\n\t\t\tif (typeof(tmpSourceObject) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpObjectProperties = Object.keys(tmpSourceObject);\n\t\t\t\tfor (let k = 0; k < tmpObjectProperties.length; k++)\n\t\t\t\t{\n\t\t\t\t\tpDestinationObject[tmpObjectProperties[k]] = tmpSourceObject[tmpObjectProperties[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pDestinationObject;\n\t}\n\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\ttemplate(pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.instantiateServiceProviderWithoutRegistration('Template');\n\t\treturn tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t}\n\n\t// Build a template function from a template hash, and, register it with the service provider\n\tbuildHashedTemplate(pTemplateHash, pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.instantiateServiceProvider('Template', {}, pTemplateHash);\n\t\tthis.templates[pTemplateHash] = tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t\treturn this.templates[pTemplateHash];\n\t}\n\n\t// This is a safe, modern version of chunk from underscore\n\t// Algorithm pulled from a mix of these two polyfills:\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\n\t// https://youmightnotneed.com/lodash\n\t// This implementation was most tolerant in browsers.  Uglify can fix the rest.\n\tchunk (pInput, pChunkSize, pChunkCache)\n\t{\n\t\tlet tmpInputArray = [...pInput];\n\t\t// Note lodash defaults to 1, underscore defaults to 0\n\t\tlet tmpChunkSize = (typeof(pChunkSize) == 'number') ? pChunkSize : 0;\n\t\tlet tmpChunkCache = (typeof(pChunkCache) != 'undefined') ? pChunkCache : [];\n\n\t\tif (tmpChunkSize <= 0)\n\t\t{\n\t\t\treturn tmpChunkCache;\n\t\t}\n\n\t\twhile (tmpInputArray.length)\n\t\t{\n\t\t\ttmpChunkCache.push(tmpInputArray.splice(0, tmpChunkSize));\n\t\t}\n\n\t\treturn tmpChunkCache;\n\t}\n\n\t// Convert an ISO string to a javascript date object\n\t// Adapted from https://stackoverflow.com/a/54751179\n\t//\n\t// Takes strings like: 2022-11-04T11:34:45.000Z\n\t//                and: 1986-06-11T09:34:46.012Z+0200\n\t// ... and converts them into javascript timestamps, following the directions of the timezone stuff.\n\t//\n\t// This is not meant to replace the more complex libraries such as moment or luxon.\n\t// This *is* meant to be a simple, small, and fast way to convert ISO strings to dates in engines\n\t// with ultra limited JS capabilities where those don't work.\n\tisoStringToDate (pISOString)\n\t{\n\t\tif (!this.fable.hasOwnProperty('Dates'))\n\t\t{\n\t\t\tthis.fable.instantiateServiceProvider('Dates');\n\t\t}\n\n\t\tlet tmpDate = false;\n\n\t\ttry\n\t\t{\n\t\t\ttmpDate = this.fable.Dates.dayJS.utc(pISOString);\n\t\t}\n\t\tcatch(pError)\n\t\t{\n\t\t\t// TODO: Should this throw?  Doubtful.\n\t\t\tthis.fable.log.error(`Could not parse date string ${pISOString} with dayJS.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (tmpDate)\n\t\t{\n\t\t\treturn tmpDate.toDate();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nmodule.exports = FableServiceUtility;\n},{\"async.eachlimit\":1,\"async.waterfall\":15,\"big.js\":17,\"fable-serviceproviderbase\":52}],87:[function(require,module,exports){\n'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n\n},{}],88:[function(require,module,exports){\n'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n\n},{\"./implementation\":87}],89:[function(require,module,exports){\n'use strict';\n\nvar undefined;\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n\n},{\"es-errors\":39,\"es-errors/eval\":38,\"es-errors/range\":40,\"es-errors/ref\":41,\"es-errors/syntax\":42,\"es-errors/type\":43,\"es-errors/uri\":44,\"function-bind\":88,\"has-proto\":92,\"has-symbols\":93,\"hasown\":95}],90:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n\n},{\"get-intrinsic\":89}],91:[function(require,module,exports){\n'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\treturn !!$defineProperty;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!$defineProperty) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n\n},{\"es-define-property\":37}],92:[function(require,module,exports){\n'use strict';\n\nvar test = {\n\t__proto__: null,\n\tfoo: {}\n};\n\nvar $Object = Object;\n\n/** @type {import('.')} */\nmodule.exports = function hasProto() {\n\t// @ts-expect-error: TS errors on an inherited property for some reason\n\treturn { __proto__: test }.foo === test.foo\n\t\t&& !(test instanceof $Object);\n};\n\n},{}],93:[function(require,module,exports){\n'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n\n},{\"./shams\":94}],94:[function(require,module,exports){\n'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n\n},{}],95:[function(require,module,exports){\n'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n\n},{\"function-bind\":88}],96:[function(require,module,exports){\nvar http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n\n},{\"http\":135,\"url\":156}],97:[function(require,module,exports){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],98:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n\n},{}],99:[function(require,module,exports){\n// When a boxed property is passed in, it should have quotes of some\n// kind around it.\n//\n// For instance:\n// \t\tMyValues['Name']\n// \t\tMyValues[\"Age\"]\n// \t\tMyValues[`Cost`]\n//\n// This function removes the wrapping quotes.\n//\n// Please note it *DOES NOT PARSE* template literals, so backticks just\n// end up doing the same thing as other quote types.\n//\n// TODO: Should template literals be processed?  If so what state do they have access to?  That should happen here if so.\n// TODO: Make a simple class include library with these\nconst cleanWrapCharacters = (pCharacter, pString) =>\n{\n\tif (pString.startsWith(pCharacter) && pString.endsWith(pCharacter))\n\t{\n\t\treturn pString.substring(1, pString.length - 1);\n\t}\n\telse\n\t{\n\t\treturn pString;\n\t}\n};\n\nmodule.exports = cleanWrapCharacters;\n},{}],100:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Hash Translation\n*\n* This is a very simple translation table for hashes, which allows the same schema to resolve\n* differently based on a loaded translation table.\n*\n* This is to prevent the requirement for mutating schemas over and over again when we want to\n* reuse the structure but look up data elements by different addresses.\n*\n* One side-effect of this is that a translation table can \"override\" the built-in hashes, since\n* this is always used to resolve hashes before any of the functionCallByHash(pHash, ...) perform\n* their lookups by hash.\n*\n* @class ManyfestHashTranslation\n*/\nclass ManyfestHashTranslation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n        this.translationTable = {};\n\t}\n\n    translationCount()\n    {\n        return Object.keys(this.translationTable).length;\n    }\n\n    addTranslation(pTranslation)\n    {\n        // This adds a translation in the form of:\n        // { \"SourceHash\": \"DestinationHash\", \"SecondSourceHash\":\"SecondDestinationHash\" }\n        if (typeof(pTranslation) != 'object')\n        {\n            this.logError(`Hash translation addTranslation expected a translation be type object but was passed in ${typeof(pTranslation)}`);\n            return false;\n        }\n\n        let tmpTranslationSources = Object.keys(pTranslation)\n\n        tmpTranslationSources.forEach(\n            (pTranslationSource) =>\n            {\n                if (typeof(pTranslation[pTranslationSource]) != 'string')\n                {\n                    this.logError(`Hash translation addTranslation expected a translation destination hash for [${pTranslationSource}] to be a string but the referrant was a ${typeof(pTranslation[pTranslationSource])}`);\n                }\n                else\n                {\n                    this.translationTable[pTranslationSource] = pTranslation[pTranslationSource];\n                }\n            });\n    }\n\n    removeTranslationHash(pTranslationHash)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslationHash))\n        {\n            delete this.translationTable[pTranslationHash];\n        }\n    }\n\n    // This removes translations.\n    // If passed a string, just removes the single one.\n    // If passed an object, it does all the source keys.\n    removeTranslation(pTranslation)\n    {\n        if (typeof(pTranslation) == 'string')\n        {\n            this.removeTranslationHash(pTranslation);\n            return true;\n        }\n        else if (typeof(pTranslation) == 'object')\n        {\n            let tmpTranslationSources = Object.keys(pTranslation)\n\n            tmpTranslationSources.forEach(\n                (pTranslationSource) =>\n                {\n                    this.removeTranslation(pTranslationSource);\n                });\n            return true;\n        }\n        else\n        {\n            this.logError(`Hash translation removeTranslation expected either a string or an object but the passed-in translation was type ${typeof(pTranslation)}`);\n            return false;\n        }\n    }\n\n    clearTranslations()\n    {\n        this.translationTable = {};\n    }\n\n    translate(pTranslation)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslation))\n        {\n            return this.translationTable[pTranslation];\n        }\n        else\n        {\n            return pTranslation;\n        }\n    }\n}\n\nmodule.exports = ManyfestHashTranslation;\n},{\"./Manyfest-LogToConsole.js\":101}],101:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\n\n/**\n* Manyfest simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n\n    console.log(`[Manyfest] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject));\n};\n\nmodule.exports = logToConsole;\n},{}],102:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nconst libSimpleLog = require('./Manyfest-LogToConsole.js');\n// This is for resolving functions mid-address\nconst libGetObjectValue = require('./Manyfest-ObjectAddress-GetValue.js');\n\n// TODO: Just until this is a fable service.\nlet _MockFable = { DataFormat: require('./Manyfest-ObjectAddress-Parser.js') };\n\n/**\n* Object Address Resolver\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressResolverCheckAddressExists\n*/\nclass ManyfestObjectAddressResolverCheckAddressExists\n{\n\tconstructor()\n\t{\n\t\tthis.getObjectValueClass = new libGetObjectValue(libSimpleLog, libSimpleLog);\n\t}\n\n\t// Check if an address exists.\n\t//\n\t// This is necessary because the getValueAtAddress function is ambiguous on\n\t// whether the element/property is actually there or not (it returns\n\t// undefined whether the property exists or not).  This function checks for\n\t// existance and returns true or false dependent.\n\tcheckAddressExists (pObject, pAddress, pRootObject)\n\t{\n\t\t// TODO: Should these throw an error?\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\t// Set the root object to the passed-in object if it isn't set yet.  This is expected to be the root object.\n\t\t// NOTE: This was added to support functions mid-stream\n\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t// DONE: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpAddressPartBeginning = _MockFable.DataFormat.stringGetFirstSegment(pAddress);\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpAddressPartBeginning.length == pAddress.length)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check if there is a function somewhere in the address... parenthesis start should only be in a function\n\t\t\tlet tmpFunctionStartIndex = pAddress.indexOf('(');\n\n\t\t\t// NOTE THAT FUNCTIONS MUST RESOLVE FIRST\n\t\t\t// Functions look like this\n\t\t\t// \t\tMyFunction()\n\t\t\t// \t\tMyFunction(Some.Address)\n\t\t\t// \t\tMyFunction(Some.Address,Some.Other.Address)\n\t\t\t// \t\tMyFunction(Some.Address,Some.Other.Address,Some.Third.Address)\n\t\t\t//\n\t\t\t// This could be enhanced to allow purely numeric and string values to be passed to the function.  For now,\n\t\t\t// To heck with that.  This is a simple function call.\n\t\t\t//\n\t\t\t// The requirements to detect a function are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpFunctionStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (_MockFable.DataFormat.stringCountEnclosures(pAddress) > 0))\n\t\t\t{\n\t\t\t\tlet tmpFunctionAddress = pAddress.substring(0, tmpFunctionStartIndex).trim();\n\n\t\t\t\tif ((pObject.hasOwnProperty(tmpFunctionAddress)) && (typeof(pObject[tmpFunctionAddress]) == 'function'))\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// The address suggests it is a function, but it is not.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Check if the property exists.\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName].hasOwnProperty(tmpBoxedPropertyReference);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Use the new in operator to see if the element is in the array\n\t\t\t\t\treturn (tmpBoxedPropertyNumber in pObject[tmpBoxedPropertyName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Check if the property exists\n\t\t\t\treturn pObject.hasOwnProperty(pAddress);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = tmpAddressPartBeginning;\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpAddressPartBeginning.length+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\n\t\t\t// Check if there is a function somewhere in the address... parenthesis start should only be in a function\n\t\t\tlet tmpFunctionStartIndex = tmpSubObjectName.indexOf('(');\n\n\t\t\t// NOTE THAT FUNCTIONS MUST RESOLVE FIRST\n\t\t\t// Functions look like this\n\t\t\t// \t\tMyFunction()\n\t\t\t// \t\tMyFunction(Some.Address)\n\t\t\t// \t\tMyFunction(Some.Address,Some.Other.Address)\n\t\t\t// \t\tMyFunction(Some.Address,Some.Other.Address,Some.Third.Address)\n\t\t\t//\n\t\t\t// This could be enhanced to allow purely numeric and string values to be passed to the function.  For now,\n\t\t\t// To heck with that.  This is a simple function call.\n\t\t\t//\n\t\t\t// The requirements to detect a function are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpFunctionStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (_MockFable.DataFormat.stringCountEnclosures(tmpSubObjectName) > 0))\n\t\t\t{\n\t\t\t\tlet tmpFunctionAddress = tmpSubObjectName.substring(0, tmpFunctionStartIndex).trim();\n\t\t\t\t//tmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\n\t\t\t\tif (!typeof(pObject[tmpFunctionAddress]) == 'function')\n\t\t\t\t{\n\t\t\t\t\t// The address suggests it is a function, but it is not.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Now see if the function has arguments.\n\t\t\t\t// Implementation notes: * ARGUMENTS MUST SHARE THE SAME ROOT OBJECT CONTEXT *\n\t\t\t\tlet tmpFunctionArguments = _MockFable.DataFormat.stringGetSegments(_MockFable.DataFormat.stringGetEnclosureValueByIndex(tmpSubObjectName.substring(tmpFunctionAddress.length), 0), ',');\n\t\t\t\tif ((tmpFunctionArguments.length == 0) || (tmpFunctionArguments[0] == ''))\n\t\t\t\t{\n\t\t\t\t\t// No arguments... just call the function (bound to the scope of the object it is contained withing)\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpFunctionAddress].apply(pObject), tmpNewAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpArgumentValues = [];\n\n\t\t\t\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t\t\t\t// Now get the value for each argument\n\t\t\t\t\tfor (let i = 0; i < tmpFunctionArguments.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Resolve the values for each subsequent entry\n\t\t\t\t\t\t// NOTE: This is where the resolves get really tricky.  Recursion within recursion.  Programming gom jabbar, yo.\n\t\t\t\t\t\ttmpArgumentValues.push(this.getObjectValueClass.getValueAtAddress(tmpRootObject, tmpFunctionArguments[i]));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpFunctionAddress].apply(pObject, tmpArgumentValues), tmpNewAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// Because this is an impossible address, the property doesn't exist\n\t\t\t\t\t// TODO: Should we throw an error in this condition?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress, tmpRootObject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress, tmpRootObject);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverCheckAddressExists;\n},{\"./Manyfest-LogToConsole.js\":101,\"./Manyfest-ObjectAddress-GetValue.js\":104,\"./Manyfest-ObjectAddress-Parser.js\":105}],103:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - DeleteValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverDeleteValue\n*/\nclass ManyfestObjectAddressResolverDeleteValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// TODO: Dry me\n\tcheckRecordFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Count from the end to the beginning so splice doesn't %&%#$ up the array\n\t\t\t\tfor (let i = tmpInputArray.length - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkRecordFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Delete elements end to beginning\n\t\t\t\t\t\ttmpInputArray.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tdelete pObject[tmpObjectPropertyName];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tdelete pObject[pAddress];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkRecordFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverDeleteValue;\n},{\"../source/Manyfest-ParseConditionals.js\":108,\"./Manyfest-CleanWrapCharacters.js\":99,\"./Manyfest-LogToConsole.js\":101}],104:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`);\n\nlet _MockFable = { DataFormat: require('./Manyfest-ObjectAddress-Parser.js') };\n\n/**\n* Object Address Resolver - GetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverGetValue\n*/\nclass ManyfestObjectAddressResolverGetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckRecordFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress, pParentAddress, pRootObject)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// Set the root object to the passed-in object if it isn't set yet.  This is expected to be the root object.\n\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t// DONE: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpAddressPartBeginning = _MockFable.DataFormat.stringGetFirstSegment(pAddress);\n\n\t\t// Adding simple back-navigation in objects\n\t\tif (tmpAddressPartBeginning == '')\n\t\t{\n\t\t\t// Given an address of \"Bundle.Contract.IDContract...Project.IDProject\" the ... would be interpreted as two back-navigations from IDContract.\n\t\t\t// When the address is passed in, though, the first . is already eliminated.  So we can count the dots.\n\t\t\tlet tmpParentAddressParts = _MockFable.DataFormat.stringGetSegments(tmpParentAddress);\n\n\t\t\tlet tmpBackNavigationCount = 0;\n\n\t\t\t// Count the number of dots\n\t\t\tfor (let i = 0; i < pAddress.length; i++)\n\t\t\t{\n\t\t\t\tif (pAddress.charAt(i) != '.')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttmpBackNavigationCount++;\n\t\t\t}\n\n\t\t\tlet tmpParentAddressLength = tmpParentAddressParts.length - tmpBackNavigationCount;\n\n\t\t\tif (tmpParentAddressLength < 0)\n\t\t\t{\n\t\t\t\t// We are trying to back navigate more than we can.\n\t\t\t\t// TODO: Should this be undefined or should we bank out at the bottom and try to go forward?\n\t\t\t\t// This seems safest for now.\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are trying to back navigate to a parent object.\n\t\t\t\t// Recurse with the back-propagated parent address, and, the new address without the back-navigation dots.\n\t\t\t\tlet tmpRecurseAddress = pAddress.slice(tmpBackNavigationCount);\n\t\t\t\tif (tmpParentAddressLength > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpRecurseAddress = `${tmpParentAddressParts.slice(0, tmpParentAddressLength).join('.')}.${tmpRecurseAddress}`;\n\t\t\t\t}\n\t\t\t\tthis.logInfo(`Back-navigation detected.  Recursing back to address [${tmpRecurseAddress}]`);\n\t\t\t\treturn this.getValueAtAddress(tmpRootObject, tmpRecurseAddress);\n\t\t\t}\n\t\t}\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpAddressPartBeginning.length == pAddress.length)\n\t\t{\n\t\t\t// TODO: Optimize this by having these calls only happen when the previous fails.\n\t\t\t// TODO: Alternatively look for all markers in one pass?\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\n\t\t\t// Check if there is a function somewhere in the address... parenthesis start should only be in a function\n\t\t\tlet tmpFunctionStartIndex = pAddress.indexOf('(');\n\n\t\t\t// NOTE THAT FUNCTIONS MUST RESOLVE FIRST\n\t\t\t// Functions look like this\n\t\t\t// \t\tMyFunction()\n\t\t\t// \t\tMyFunction(Some.Address)\n\t\t\t// \t\tMyFunction(Some.Address,Some.Other.Address)\n\t\t\t// \t\tMyFunction(Some.Address,Some.Other.Address,Some.Third.Address)\n\t\t\t//\n\t\t\t// This could be enhanced to allow purely numeric and string values to be passed to the function.  For now,\n\t\t\t// To heck with that.  This is a simple function call.\n\t\t\t//\n\t\t\t// The requirements to detect a function are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpFunctionStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (_MockFable.DataFormat.stringCountEnclosures(pAddress) > 0))\n\t\t\t{\n\t\t\t\tlet tmpFunctionAddress = pAddress.substring(0, tmpFunctionStartIndex).trim();\n\n\t\t\t\tif (!typeof(pObject[tmpFunctionAddress]) == 'function')\n\t\t\t\t{\n\t\t\t\t\t// The address suggests it is a function, but it is not.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Now see if the function has arguments.\n\t\t\t\t// Implementation notes: * ARGUMENTS MUST SHARE THE SAME ROOT OBJECT CONTEXT *\n\t\t\t\tlet tmpFunctionArguments = _MockFable.DataFormat.stringGetSegments(_MockFable.DataFormat.stringGetEnclosureValueByIndex(pAddress.substring(tmpFunctionAddress.length), 0), ',');\n\t\t\t\tif ((tmpFunctionArguments.length == 0) || (tmpFunctionArguments[0] == ''))\n\t\t\t\t{\n\t\t\t\t\t// No arguments... just call the function (bound to the scope of the object it is contained withing)\n\t\t\t\t\treturn pObject[tmpFunctionAddress].apply(pObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpArgumentValues = [];\n\n\t\t\t\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t\t\t\t// Now get the value for each argument\n\t\t\t\t\tfor (let i = 0; i < tmpFunctionArguments.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(tmpFunctionArguments[i][0] == \"'\" && tmpFunctionArguments[i][tmpFunctionArguments[i].length - 1] == \"'\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpArgumentValues.push(tmpFunctionArguments[i].substring(1, tmpFunctionArguments[i].length - 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(tmpFunctionArguments[i][0] == '\"' && tmpFunctionArguments[i][tmpFunctionArguments[i].length - 1] == '\"')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpArgumentValues.push(tmpFunctionArguments[i].substring(1, tmpFunctionArguments[i].length - 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(tmpFunctionArguments[i][0] == \"`\" && tmpFunctionArguments[i][tmpFunctionArguments[i].length - 1] == \"`\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpArgumentValues.push(tmpFunctionArguments[i].substring(1, tmpFunctionArguments[i].length - 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpArgumentValues.push(this.getValueAtAddress(tmpRootObject, tmpFunctionArguments[i]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn pObject[tmpFunctionAddress].apply(pObject, tmpArgumentValues);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\tlet tmpOutputArray = [];\n\t\t\t\tfor (let i = 0; i < tmpInputArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkRecordFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOutputArray.push(tmpInputArray[i]);\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpOutputArray;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn pObject[tmpObjectPropertyName];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tif (typeof(pObject[pAddress]) != null)\n\t\t\t\t{\n\t\t\t\t\treturn pObject[pAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//let tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\t//let tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\t\t\tlet tmpSubObjectName = tmpAddressPartBeginning;\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpAddressPartBeginning.length+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\n\t\t\t// Check if there is a function somewhere in the address... parenthesis start should only be in a function\n\t\t\tlet tmpFunctionStartIndex = tmpSubObjectName.indexOf('(');\n\n\t\t\t// NOTE THAT FUNCTIONS MUST RESOLVE FIRST\n\t\t\t// Functions look like this\n\t\t\t// \t\tMyFunction()\n\t\t\t// \t\tMyFunction(Some.Address)\n\t\t\t// \t\tMyFunction(Some.Address,Some.Other.Address)\n\t\t\t// \t\tMyFunction(Some.Address,Some.Other.Address,Some.Third.Address)\n\t\t\t//\n\t\t\t// This could be enhanced to allow purely numeric and string values to be passed to the function.  For now,\n\t\t\t// To heck with that.  This is a simple function call.\n\t\t\t//\n\t\t\t// The requirements to detect a function are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpFunctionStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (_MockFable.DataFormat.stringCountEnclosures(tmpSubObjectName) > 0))\n\t\t\t{\n\t\t\t\tlet tmpFunctionAddress = tmpSubObjectName.substring(0, tmpFunctionStartIndex).trim();\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\n\t\t\t\tif (!typeof(pObject[tmpFunctionAddress]) == 'function')\n\t\t\t\t{\n\t\t\t\t\t// The address suggests it is a function, but it is not.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Now see if the function has arguments.\n\t\t\t\t// Implementation notes: * ARGUMENTS MUST SHARE THE SAME ROOT OBJECT CONTEXT *\n\t\t\t\tlet tmpFunctionArguments = _MockFable.DataFormat.stringGetSegments(_MockFable.DataFormat.stringGetEnclosureValueByIndex(tmpSubObjectName.substring(tmpFunctionAddress.length), 0), ',');\n\t\t\t\tif ((tmpFunctionArguments.length == 0) || (tmpFunctionArguments[0] == ''))\n\t\t\t\t{\n\t\t\t\t\t// No arguments... just call the function (bound to the scope of the object it is contained withing)\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpFunctionAddress].apply(pObject), tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpArgumentValues = [];\n\n\t\t\t\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t\t\t\t// Now get the value for each argument\n\t\t\t\t\tfor (let i = 0; i < tmpFunctionArguments.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Resolve the values for each subsequent entry\n\t\t\t\t\t\ttmpArgumentValues.push(this.getValueAtAddress(tmpRootObject, tmpFunctionArguments[i]));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpFunctionAddress].apply(pObject, tmpArgumentValues), tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkRecordFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverGetValue;\n},{\"../source/Manyfest-ParseConditionals.js\":108,\"./Manyfest-CleanWrapCharacters.js\":99,\"./Manyfest-LogToConsole.js\":101,\"./Manyfest-ObjectAddress-Parser.js\":105}],105:[function(require,module,exports){\n// TODO: This is an inelegant solution to delay the rewrite of Manyfest.\n\n// Fable 3.0 has a service for data formatting that deals well with nested enclosures.\n\n// The Manyfest library predates fable 3.0 and the services structure of it, so the functions\n// are more or less pure javascript and as functional as they can be made to be.\n\n// Until we shift Manyfest to be a fable service, these three functions were pulled out of\n// fable to aid in parsing functions with nested enclosures.\n\nmodule.exports = {\n\t/**\n\t * Count the number of segments in a string, respecting enclosures\n\t * \n\t * @param {string} pString \n\t * @param {string} pSeparator \n\t * @param {object} pEnclosureStartSymbolMap \n\t * @param {object} pEnclosureEndSymbolMap \n\t * @returns the count of segments in the string as a number\n\t */\n\tstringCountSegments: (pString, pSeparator, pEnclosureStartSymbolMap, pEnclosureEndSymbolMap) =>\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\n\t\tlet tmpSeparator = (typeof(pSeparator) == 'string') ? pSeparator : '.';\n\n\t\tlet tmpEnclosureStartSymbolMap = (typeof(pEnclosureStartSymbolMap) == 'object') ? pEnclosureStart : { '{': 0, '[': 1, '(': 2 };\n\t\tlet tmpEnclosureEndSymbolMap = (typeof(pEnclosureEndSymbolMap) == 'object') ? pEnclosureEnd : { '}': 0, ']': 1, ')': 2 };\n\n\t\tif (pString.length < 1)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet tmpSegmentCount = 1;\n\t\tlet tmpEnclosureStack = [];\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// IF This is the start of a segment\n\t\t\tif ((tmpString[i] == tmpSeparator)\n\t\t\t\t// AND we are not in a nested portion of the string\n\t\t\t\t&& (tmpEnclosureStack.length == 0))\n\t\t\t{\n\t\t\t\t// Increment the segment count\n\t\t\t\ttmpSegmentCount++;\n\t\t\t}\n\t\t\t// IF This is the start of an enclosure\n\t\t\telse if (tmpEnclosureStartSymbolMap.hasOwnProperty(tmpString[i]))\n\t\t\t{\n\t\t\t\t// Add it to the stack!\n\t\t\t\ttmpEnclosureStack.push(tmpEnclosureStartSymbolMap[tmpString[i]]);\n\t\t\t}\n\t\t\t// IF This is the end of an enclosure\n\t\t\telse if (tmpEnclosureEndSymbolMap.hasOwnProperty(tmpString[i])\n\t\t\t\t// AND it matches the current nest level symbol\n\t\t\t\t&& tmpEnclosureEndSymbolMap[tmpString[i]] == tmpEnclosureStack[tmpEnclosureStack.length - 1])\n\t\t\t{\n\t\t\t\t// Pop it off the stack!\n\t\t\t\ttmpEnclosureStack.pop();\n\t\t\t}\n\t\t}\n\n\t\treturn tmpSegmentCount;\n\t},\n\n\t/**\n\t * Get the first segment in a string, respecting enclosures\n\t * \n\t * @param {string} pString \n\t * @param {string} pSeparator \n\t * @param {object} pEnclosureStartSymbolMap \n\t * @param {object} pEnclosureEndSymbolMap \n\t * @returns the first segment in the string as a string\n\t */\n\tstringGetFirstSegment: (pString, pSeparator, pEnclosureStartSymbolMap, pEnclosureEndSymbolMap) =>\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\n\t\tlet tmpSeparator = (typeof(pSeparator) == 'string') ? pSeparator : '.';\n\n\t\tlet tmpEnclosureStartSymbolMap = (typeof(pEnclosureStartSymbolMap) == 'object') ? pEnclosureStart : { '{': 0, '[': 1, '(': 2 };\n\t\tlet tmpEnclosureEndSymbolMap = (typeof(pEnclosureEndSymbolMap) == 'object') ? pEnclosureEnd : { '}': 0, ']': 1, ')': 2 };\n\n\t\tif (pString.length < 1)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet tmpEnclosureStack = [];\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// IF This is the start of a segment\n\t\t\tif ((tmpString[i] == tmpSeparator)\n\t\t\t\t// AND we are not in a nested portion of the string\n\t\t\t\t&& (tmpEnclosureStack.length == 0))\n\t\t\t{\n\t\t\t\t// Return the segment\n\t\t\t\treturn tmpString.substring(0, i);\n\t\t\t}\n\t\t\t// IF This is the start of an enclosure\n\t\t\telse if (tmpEnclosureStartSymbolMap.hasOwnProperty(tmpString[i]))\n\t\t\t{\n\t\t\t\t// Add it to the stack!\n\t\t\t\ttmpEnclosureStack.push(tmpEnclosureStartSymbolMap[tmpString[i]]);\n\t\t\t}\n\t\t\t// IF This is the end of an enclosure\n\t\t\telse if (tmpEnclosureEndSymbolMap.hasOwnProperty(tmpString[i])\n\t\t\t\t// AND it matches the current nest level symbol\n\t\t\t\t&& tmpEnclosureEndSymbolMap[tmpString[i]] == tmpEnclosureStack[tmpEnclosureStack.length - 1])\n\t\t\t{\n\t\t\t\t// Pop it off the stack!\n\t\t\t\ttmpEnclosureStack.pop();\n\t\t\t}\n\t\t}\n\n\t\treturn tmpString;\n\t},\n\n\t/**\n\t * Get all segments in a string, respecting enclosures\n\t * \n\t * @param {string} pString \n\t * @param {string} pSeparator \n\t * @param {object} pEnclosureStartSymbolMap \n\t * @param {object} pEnclosureEndSymbolMap \n\t * @returns the first segment in the string as a string\n\t */\n\tstringGetSegments: (pString, pSeparator, pEnclosureStartSymbolMap, pEnclosureEndSymbolMap)=>\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\n\t\tlet tmpSeparator = (typeof(pSeparator) == 'string') ? pSeparator : '.';\n\n\t\tlet tmpEnclosureStartSymbolMap = (typeof(pEnclosureStartSymbolMap) == 'object') ? pEnclosureStart : { '{': 0, '[': 1, '(': 2 };\n\t\tlet tmpEnclosureEndSymbolMap = (typeof(pEnclosureEndSymbolMap) == 'object') ? pEnclosureEnd : { '}': 0, ']': 1, ')': 2 };\n\n\t\tlet tmpCurrentSegmentStart = 0;\n\t\tlet tmpSegmentList = [];\n\n\t\tif (pString.length < 1)\n\t\t{\n\t\t\treturn tmpSegmentList;\n\t\t}\n\n\t\tlet tmpEnclosureStack = [];\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// IF This is the start of a segment\n\t\t\tif ((tmpString[i] == tmpSeparator)\n\t\t\t\t// AND we are not in a nested portion of the string\n\t\t\t\t&& (tmpEnclosureStack.length == 0))\n\t\t\t{\n\t\t\t\t// Return the segment\n\t\t\t\ttmpSegmentList.push(tmpString.substring(tmpCurrentSegmentStart, i));\n\t\t\t\ttmpCurrentSegmentStart = i+1;\n\t\t\t}\n\t\t\t// IF This is the start of an enclosure\n\t\t\telse if (tmpEnclosureStartSymbolMap.hasOwnProperty(tmpString[i]))\n\t\t\t{\n\t\t\t\t// Add it to the stack!\n\t\t\t\ttmpEnclosureStack.push(tmpEnclosureStartSymbolMap[tmpString[i]]);\n\t\t\t}\n\t\t\t// IF This is the end of an enclosure\n\t\t\telse if (tmpEnclosureEndSymbolMap.hasOwnProperty(tmpString[i])\n\t\t\t\t// AND it matches the current nest level symbol\n\t\t\t\t&& tmpEnclosureEndSymbolMap[tmpString[i]] == tmpEnclosureStack[tmpEnclosureStack.length - 1])\n\t\t\t{\n\t\t\t\t// Pop it off the stack!\n\t\t\t\ttmpEnclosureStack.pop();\n\t\t\t}\n\t\t}\n\n\t\tif (tmpCurrentSegmentStart < tmpString.length)\n\t\t{\n\t\t\ttmpSegmentList.push(tmpString.substring(tmpCurrentSegmentStart));\n\t\t}\n\n\t\treturn tmpSegmentList;\n\t},\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures: (pString, pEnclosureStart, pEnclosureEnd) =>\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\tif (tmpEnclosureDepth == 0)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t}\n\t\t\t\ttmpEnclosureDepth++;\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpEnclosureCount;\n\t},\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex: (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd) =>\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosedValueStartIndex = 0;\n\t\tlet tmpEnclosedValueEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This is the end of an enclosure\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t\t{\n\t\t\t// Return an empty string if the enclosure is not found\n\t\t\treturn '';\n\t\t}\n\n\t\tif ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t\t}\n\t}\n}\n},{}],106:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - SetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressSetValue\n*/\nclass ManyfestObjectAddressSetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyReference] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the time in recursion to set the value in the object\n\t\t\t\tpObject[pAddress] = pValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressSetValue;\n},{\"./Manyfest-CleanWrapCharacters.js\":99,\"./Manyfest-LogToConsole.js\":101}],107:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Generation\n*\n* Automagically generate addresses and properties based on a passed-in object,\n* to be used for easy creation of schemas.  Meant to simplify the lives of\n* developers wanting to create schemas without typing a bunch of stuff.\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressGeneration\n*/\nclass ManyfestObjectAddressGeneration\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// generateAddressses\n\t//\n\t// This flattens an object into a set of key:value pairs for *EVERY SINGLE\n\t// POSSIBLE ADDRESS* in the object.  It can get ... really insane really\n\t// quickly.  This is not meant to be used directly to generate schemas, but\n\t// instead as a starting point for scripts or UIs.\n\t//\n\t// This will return a mega set of key:value pairs with all possible schema\n\t// permutations and default values (when not an object) and everything else.\n\tgenerateAddressses (pObject, pBaseAddress, pSchema)\n\t{\n\t\tlet tmpBaseAddress = (typeof(pBaseAddress) == 'string') ? pBaseAddress : '';\n\t\tlet tmpSchema = (typeof(pSchema) == 'object') ? pSchema : {};\n\n\t\tlet tmpObjectType = typeof(pObject);\n\n\t\tlet tmpSchemaObjectEntry = (\n\t\t\t{\n\t\t\t\tAddress: tmpBaseAddress,\n\t\t\t\tHash: tmpBaseAddress,\n\t\t\t\tName: tmpBaseAddress,\n\t\t\t\t// This is so scripts and UI controls can force a developer to opt-in.\n\t\t\t\tInSchema: false\n\t\t\t}\n\t\t)\n\n\t\tif ((tmpObjectType == 'object') && (pObject == null))\n\t\t{\n\t\t\ttmpObjectType = 'null';\n\t\t}\n\n\t\tswitch(tmpObjectType)\n\t\t{\n\t\t\tcase 'string':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'String';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'bigint':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Number';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\tcase 'null':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Any';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif (Array.isArray(pObject))\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Array';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < pObject.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[i], `${tmpBaseAddress}[${i}]`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Object';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t\ttmpBaseAddress += '.';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectProperties = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectProperties.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[tmpObjectProperties[i]], `${tmpBaseAddress}${tmpObjectProperties[i]}`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'symbol':\n\t\t\tcase 'function':\n\t\t\t\t// Symbols and functions neither recurse nor get added to the schema\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tmpSchema;\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressGeneration;\n},{\"./Manyfest-LogToConsole.js\":101}],108:[function(require,module,exports){\n// Given a string, parse out any conditional expressions and set whether or not to keep the record.\n//\n// For instance:\n// \t\t'files[]<<~?format,==,Thumbnail?~>>'\n//      'files[]<<~?format,==,Metadata?~>>'\n//      'files[]<<~?size,>,4000?~>>'\n//\n// The wrapping parts are the <<~? and ?~>> megabrackets.\n//\n// The function does not need to alter the string -- just check the conditionals within.\n\n// TODO: Consider making this an es6 class\n\n// Let's use indexOf since it is apparently the fastest.\nconst _ConditionalStanzaStart = '<<~?';\nconst _ConditionalStanzaStartLength = _ConditionalStanzaStart.length;\nconst _ConditionalStanzaEnd = '?~>>';\nconst _ConditionalStanzaEndLength = _ConditionalStanzaEnd.length;\n\n// Ugh dependency injection.  Can't wait to make these all fable services.\n//let libObjectAddressCheckAddressExists = new (require('./Manyfest-ObjectAddress-CheckAddressExists.js'))();\n\n// Test the condition of a value in a record\nconst testCondition = (pManyfest, pRecord, pSearchAddress, pSearchComparator, pValue) =>\n{\n\tswitch(pSearchComparator)\n\t{\n\t\tcase 'TRUE':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === true);\n\t\t\tbreak;\n\t\tcase 'FALSE':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === false);\n\t\t\tbreak;\n\t\tcase 'LNGT':\n\t\tcase 'LENGTH_GREATER_THAN':\n\t\t\tswitch(typeof(pManyfest.getValueAtAddress(pRecord, pSearchAddress)))\n\t\t\t{\n\t\t\t\tcase 'string':\n\t\t\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress).length > pValue);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'object':\n\t\t\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress).length > pValue);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'LNLT':\n\t\tcase 'LENGTH_LESS_THAN':\n\t\t\tswitch(typeof(pManyfest.getValueAtAddress(pRecord, pSearchAddress)))\n\t\t\t{\n\t\t\t\tcase 'string':\n\t\t\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress).length < pValue);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'object':\n\t\t\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress).length < pValue);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\t// TODO: Welcome to dependency hell.  This fixes itself when we move to fable services.\n\t\t// case 'EX':\n\t\t// case 'EXISTS':\n\t\t// \treturn libObjectAddressCheckAddressExists.checkAddressExists(pRecord, pSearchAddress);\n\t\t// \tbreak;\n\t\t// case 'DNEX':\n\t\t// case 'DOES_NOT_EXIST':\n\t\t// \treturn !libObjectAddressCheckAddressExists.checkAddressExists(pRecord, pSearchAddress);\n\t\t// \tbreak;\n\t\tcase '!=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) != pValue);\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) < pValue);\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) > pValue);\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) <= pValue);\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) >= pValue);\n\t\t\tbreak;\n\t\tcase '===':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === pValue);\n\t\t\tbreak;\n\t\tcase '==':\n\t\tdefault:\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) == pValue);\n\t\t\tbreak;\n\t}\n};\n\nconst parseConditionals = (pManyfest, pAddress, pRecord) =>\n{\n\tlet tmpKeepRecord = true;\n\n\t/*\n\t\tAlgorithm is simple:\n\n\t\t1.  Enuerate start points\n\t\t2.  Find stop points within each start point\n\t\t3. Check the conditional\n\t*/\n\tlet tmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart);\n\n\twhile (tmpStartIndex != -1)\n\t{\n\t\tlet tmpStopIndex = pAddress.indexOf(_ConditionalStanzaEnd, tmpStartIndex+_ConditionalStanzaStartLength);\n\n\t\tif (tmpStopIndex != -1)\n\t\t{\n\t\t\tlet tmpMagicComparisonPatternSet = pAddress.substring(tmpStartIndex+_ConditionalStanzaStartLength, tmpStopIndex).split(',');\n\n\t\t\t// The address to search for\n\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\n\t\t\t// The copmparison expression (EXISTS as default)\n\t\t\tlet tmpSearchComparator = 'EXISTS';\n\t\t\tif (tmpMagicComparisonPatternSet.length > 1)\n\t\t\t{\n\t\t\t\ttmpSearchComparator = tmpMagicComparisonPatternSet[1];\t\t\t\t\n\t\t\t}\n\n\t\t\t// The value to search for\n\t\t\tlet tmpSearchValue = false;\n\t\t\tif (tmpMagicComparisonPatternSet.length > 2)\n\t\t\t{\n\t\t\t\ttmpSearchValue = tmpMagicComparisonPatternSet[2];\n\t\t\t}\n\n\t\t\t// Process the piece\n\t\t\ttmpKeepRecord = tmpKeepRecord && testCondition(pManyfest, pRecord, tmpSearchAddress, tmpSearchComparator, tmpSearchValue);\n\t\t\ttmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart, tmpStopIndex+_ConditionalStanzaEndLength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpStartIndex = -1;\n\t\t}\n\t\t\n\t}\n\n\treturn tmpKeepRecord;\n}\n\nmodule.exports = parseConditionals;\n},{}],109:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Schema Manipulation Functions\n*\n* @class ManyfestSchemaManipulation\n*/\nclass ManyfestSchemaManipulation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n    // This translates the default address mappings to something different.\n    //\n    // For instance you can pass in manyfest schema descriptor object:\n    // \t{\n\t//\t  \"Address.Of.a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t//\t  \"Address.Of.b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t//  }\n    //\n    //\n    // And then an address mapping (basically a Hash->Address map)\n    //  {\n    //    \"a\": \"New.Address.Of.a\",\n    //    \"b\": \"New.Address.Of.b\"\n    //  }\n    //\n    // NOTE: This mutates the schema object permanently, altering the base hash.\n    //       If there is a collision with an existing address, it can lead to overwrites.\n    // TODO: Discuss what should happen on collisions.\n\tresolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\tif (typeof(pManyfestSchemaDescriptors) != 'object')\n\t\t{\n\t\t\tthis.logError(`Attempted to resolve address mapping but the descriptor was not an object.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof(pAddressMapping) != 'object')\n\t\t{\n\t\t\t// No mappings were passed in\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the arrays of both the schema definition and the hash mapping\n\t\tlet tmpManyfestAddresses = Object.keys(pManyfestSchemaDescriptors);\n\t\tlet tmpHashMapping = {};\n\t\ttmpManyfestAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tif (pManyfestSchemaDescriptors[pAddress].hasOwnProperty('Hash'))\n\t\t\t\t{\n\t\t\t\t\ttmpHashMapping[pManyfestSchemaDescriptors[pAddress].Hash] = pAddress;\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet tmpAddressMappingSet = Object.keys(pAddressMapping);\n\n\t\ttmpAddressMappingSet.forEach(\n\t\t\t(pInputAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpNewDescriptorAddress = pAddressMapping[pInputAddress];\n\t\t\t\tlet tmpOldDescriptorAddress = false;\n\t\t\t\tlet tmpDescriptor = false;\n\n\t\t\t\t// See if there is a matching descriptor either by Address directly or Hash\n\t\t\t\tif (pManyfestSchemaDescriptors.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = pInputAddress;\n\t\t\t\t}\n\t\t\t\telse if (tmpHashMapping.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = tmpHashMapping[pInputAddress];\n\t\t\t\t}\n\n\t\t\t\t// If there was a matching descriptor in the manifest, store it in the temporary descriptor\n\t\t\t\tif (tmpOldDescriptorAddress)\n\t\t\t\t{\n\t\t\t\t\ttmpDescriptor = pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t\tdelete pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Create a new descriptor!  Map it to the input address.\n\t\t\t\t\ttmpDescriptor = { Hash:pInputAddress };\n\t\t\t\t}\n\n\t\t\t\t// Now re-add the descriptor to the manyfest schema\n\t\t\t\tpManyfestSchemaDescriptors[tmpNewDescriptorAddress] = tmpDescriptor;\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tsafeResolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\t// This returns the descriptors as a new object, safely remapping without mutating the original schema Descriptors\n\t\tlet tmpManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptors));\n\t\tthis.resolveAddressMappings(tmpManyfestSchemaDescriptors, pAddressMapping);\n\t\treturn tmpManyfestSchemaDescriptors;\n\t}\n\n\tmergeAddressMappings(pManyfestSchemaDescriptorsDestination, pManyfestSchemaDescriptorsSource)\n\t{\n\t\tif ((typeof(pManyfestSchemaDescriptorsSource) != 'object') || (typeof(pManyfestSchemaDescriptorsDestination) != 'object'))\n\t\t{\n\t\t\tthis.logError(`Attempted to merge two schema descriptors but both were not objects.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpSource = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsSource));\n\t\tlet tmpNewManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsDestination));\n\n\t\t// The first passed-in set of descriptors takes precedence.\n\t\tlet tmpDescriptorAddresses = Object.keys(tmpSource);\n\n\t\ttmpDescriptorAddresses.forEach(\n\t\t\t(pDescriptorAddress) =>\n\t\t\t{\n\t\t\t\tif (!tmpNewManyfestSchemaDescriptors.hasOwnProperty(pDescriptorAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpNewManyfestSchemaDescriptors[pDescriptorAddress] = tmpSource[pDescriptorAddress];\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpNewManyfestSchemaDescriptors;\n\t}\n}\n\nmodule.exports = ManyfestSchemaManipulation;\n},{\"./Manyfest-LogToConsole.js\":101}],110:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\nlet libHashTranslation = require('./Manyfest-HashTranslation.js');\nlet libObjectAddressCheckAddressExists = require('./Manyfest-ObjectAddress-CheckAddressExists.js');\nlet libObjectAddressGetValue = require('./Manyfest-ObjectAddress-GetValue.js');\nlet libObjectAddressSetValue = require('./Manyfest-ObjectAddress-SetValue.js');\nlet libObjectAddressDeleteValue = require('./Manyfest-ObjectAddress-DeleteValue.js');\nlet libObjectAddressGeneration = require('./Manyfest-ObjectAddressGeneration.js');\nlet libSchemaManipulation = require('./Manyfest-SchemaManipulation.js');\n\nconst _DefaultConfiguration = { Scope:'DEFAULT', Descriptors: {} }\n\n/**\n* Manyfest object address-based descriptions and manipulations.\n*\n* @class Manyfest\n*/\nclass Manyfest extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'Manifest';\n\n\t\t// Wire in logging\n\t\tthis.logInfo = libSimpleLog;\n\t\tthis.logError = libSimpleLog;\n\n\t\t// Create an object address resolver and map in the functions\n\t\tthis.objectAddressCheckAddressExists = new libObjectAddressCheckAddressExists(this.logInfo, this.logError);\n\t\tthis.objectAddressGetValue = new libObjectAddressGetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressSetValue = new libObjectAddressSetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressDeleteValue = new libObjectAddressDeleteValue(this.logInfo, this.logError);\n\n\t\tif (!this.options.hasOwnProperty('defaultValues'))\n\t\t{\n\t\t\tthis.options.defaultValues = (\n\t\t\t\t{\n\t\t\t\t\t\"String\": \"\",\n\t\t\t\t\t\"Number\": 0,\n\t\t\t\t\t\"Float\": 0.0,\n\t\t\t\t\t\"Integer\": 0,\n\t\t\t\t\t\"Boolean\": false,\n\t\t\t\t\t\"Binary\": 0,\n\t\t\t\t\t\"DateTime\": 0,\n\t\t\t\t\t\"Array\": [],\n\t\t\t\t\t\"Object\": {},\n\t\t\t\t\t\"Null\": null\n\t\t\t\t});\n\t\t}\n\t\tif (!this.options.hasOwnProperty('strict'))\n\t\t{\n\t\t\tthis.options.strict = false;\n\t\t}\n\n\t\tthis.scope = undefined;\n\t\tthis.elementAddresses = undefined;\n\t\tthis.elementHashes = undefined;\n\t\tthis.elementDescriptors = undefined;\n\n\t\tthis.reset();\n\n\t\tif (typeof(this.options) === 'object')\n\t\t{\n\t\t\tthis.loadManifest(this.options);\n\t\t}\n\n\t\tthis.schemaManipulations = new libSchemaManipulation(this.logInfo, this.logError);\n\t\tthis.objectAddressGeneration = new libObjectAddressGeneration(this.logInfo, this.logError);\n\n\t\tthis.hashTranslations = new libHashTranslation(this.logInfo, this.logError);\n\t}\n\n\t/*************************************************************************\n\t * Schema Manifest Loading, Reading, Manipulation and Serialization Functions\n\t */\n\n\t// Reset critical manifest properties\n\treset()\n\t{\n\t\tthis.scope = 'DEFAULT';\n\t\tthis.elementAddresses = [];\n\t\tthis.elementHashes = {};\n\t\tthis.elementDescriptors = {};\n\t}\n\n\tclone()\n\t{\n\t\t// Make a copy of the options in-place\n\t\tlet tmpNewOptions = JSON.parse(JSON.stringify(this.options));\n\n\t\tlet tmpNewManyfest = new Manyfest(this.getManifest(), this.logInfo, this.logError, tmpNewOptions);\n\n\t\t// Import the hash translations\n\t\ttmpNewManyfest.hashTranslations.addTranslation(this.hashTranslations.translationTable);\n\n\t\treturn tmpNewManyfest;\n\t}\n\n\t// Deserialize a Manifest from a string\n\tdeserialize(pManifestString)\n\t{\n\t\t// TODO: Add guards for bad manifest string\n\t\treturn this.loadManifest(JSON.parse(pManifestString));\n\t}\n\n\t// Load a manifest from an object\n\tloadManifest(pManifest)\n\t{\n\t\tif (typeof(pManifest) !== 'object')\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading manifest; expecting an object but parameter was type ${typeof(pManifest)}.`);\n\t\t}\n\n\t\tlet tmpManifest = (typeof(pManifest) == 'object') ? pManifest : {};\n\n\t\tlet tmpDescriptorKeys = Object.keys(_DefaultConfiguration);\n\n\t\tfor (let i = 0; i < tmpDescriptorKeys.length; i++)\n\t\t{\n\t\t\tif (!tmpManifest.hasOwnProperty(tmpDescriptorKeys[i]))\n\t\t\t{\n\t\t\t\ttmpManifest[tmpDescriptorKeys[i]] = JSON.parse(JSON.stringify(_DefaultConfiguration[tmpDescriptorKeys[i]]));\n\t\t\t}\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Scope'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Scope) === 'string')\n\t\t\t{\n\t\t\t\tthis.scope = tmpManifest.Scope;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest; expecting a string but property was type ${typeof(tmpManifest.Scope)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest object.  Property \"Scope\" does not exist in the root of the object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Descriptors'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Descriptors) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpDescriptionAddresses = Object.keys(tmpManifest.Descriptors);\n\t\t\t\tfor (let i = 0; i < tmpDescriptionAddresses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.addDescriptor(tmpDescriptionAddresses[i], tmpManifest.Descriptors[tmpDescriptionAddresses[i]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading description object from manifest object.  Expecting an object in 'Manifest.Descriptors' but the property was type ${typeof(tmpManifest.Descriptors)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object description from manifest object.  Property \"Descriptors\" does not exist in the root of the Manifest object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('HashTranslations'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.HashTranslations) === 'object')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < tmpManifest.HashTranslations.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// Each translation is \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Serialize the Manifest to a string\n\tserialize()\n\t{\n\t\treturn JSON.stringify(this.getManifest());\n\t}\n\n\tgetManifest()\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tScope: this.scope,\n\t\t\t\tDescriptors: JSON.parse(JSON.stringify(this.elementDescriptors)),\n\t\t\t\tHashTranslations: JSON.parse(JSON.stringify(this.hashTranslations.translationTable))\n\t\t\t});\n\t}\n\n\t// Add a descriptor to the manifest\n\taddDescriptor(pAddress, pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) === 'object')\n\t\t{\n\t\t\t// Add the Address into the Descriptor if it doesn't exist:\n\t\t\tif (!pDescriptor.hasOwnProperty('Address'))\n\t\t\t{\n\t\t\t\tpDescriptor.Address = pAddress;\n\t\t\t}\n\n\t\t\tif (!this.elementDescriptors.hasOwnProperty(pAddress))\n\t\t\t{\n\t\t\t\tthis.elementAddresses.push(pAddress);\n\t\t\t}\n\n\t\t\t// Add the element descriptor to the schema\n\t\t\tthis.elementDescriptors[pAddress] = pDescriptor;\n\n\t\t\t// Always add the address as a hash\n\t\t\tthis.elementHashes[pAddress] = pAddress;\n\n\t\t\tif (pDescriptor.hasOwnProperty('Hash'))\n\t\t\t{\n\t\t\t\t// TODO: Check if this is a good idea or not..\n\t\t\t\t//       Collisions are bound to happen with both representations of the address/hash in here and developers being able to create their own hashes.\n\t\t\t\tthis.elementHashes[pDescriptor.Hash] = pAddress;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpDescriptor.Hash = pAddress;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object descriptor for address '${pAddress}' from manifest object.  Expecting an object but property was type ${typeof(pDescriptor)}.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetDescriptorByHash(pHash)\n\t{\n\t\treturn this.getDescriptor(this.resolveHashAddress(pHash));\n\t}\n\n\tgetDescriptor(pAddress)\n\t{\n\t\treturn this.elementDescriptors[pAddress];\n\t}\n\n\t// execute an action function for each descriptor\n\teachDescriptor(fAction)\n\t{\n        let tmpDescriptorAddresses = Object.keys(this.elementDescriptors);\n        for (let i = 0; i < tmpDescriptorAddresses.length; i++)\n        {\n            fAction(this.elementDescriptors[tmpDescriptorAddresses[i]]);\n        }\n\n\t}\n\n\t/*************************************************************************\n\t * Beginning of Object Manipulation (read & write) Functions\n\t */\n\t// Check if an element exists by its hash\n\tcheckAddressExistsByHash (pObject, pHash)\n\t{\n\t\treturn this.checkAddressExists(pObject,this.resolveHashAddress(pHash));\n\t}\n\n\t// Check if an element exists at an address\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\treturn this.objectAddressCheckAddressExists.checkAddressExists(pObject, pAddress);\n\t}\n\n\t// Turn a hash into an address, factoring in the translation table.\n\tresolveHashAddress(pHash)\n\t{\n\t\tlet tmpAddress = undefined;\n\n\t\tlet tmpInElementHashTable = this.elementHashes.hasOwnProperty(pHash);\n\t\tlet tmpInTranslationTable = this.hashTranslations.translationTable.hasOwnProperty(pHash);\n\n\t\t// The most straightforward: the hash exists, no translations.\n\t\tif (tmpInElementHashTable && !tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[pHash];\n\t\t}\n\t\t// There is a translation from one hash to another, and, the elementHashes contains the pointer end\n\t\telse if (tmpInTranslationTable && this.elementHashes.hasOwnProperty(this.hashTranslations.translate(pHash)))\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[this.hashTranslations.translate(pHash)];\n\t\t}\n\t\t// Use the level of indirection only in the Translation Table\n\t\telse if (tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.hashTranslations.translate(pHash);\n\t\t}\n\t\t// Just treat the hash as an address.\n\t\t// TODO: Discuss this ... it is magic but controversial\n\t\telse\n\t\t{\n\t\t\ttmpAddress = pHash;\n\t\t}\n\n\t\treturn tmpAddress;\n\t}\n\n\t// Get the value of an element by its hash\n\tgetValueByHash (pObject, pHash)\n\t{\n\t\tlet tmpValue = this.getValueAtAddress(pObject, this.resolveHashAddress(pHash));\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptorByHash(pHash));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\tlet tmpValue = this.objectAddressGetValue.getValueAtAddress(pObject, pAddress);\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptor(pAddress));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Set the value of an element by its hash\n\tsetValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.setValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressSetValue.setValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Delete the value of an element by its hash\n\tdeleteValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.deleteValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressDeleteValue.deleteValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Validate the consistency of an object against the schema\n\tvalidate(pObject)\n\t{\n\t\tlet tmpValidationData =\n\t\t{\n\t\t\tError: null,\n\t\t\tErrors: [],\n\t\t\tMissingElements:[]\n\t\t};\n\n\t\tif (typeof(pObject) !== 'object')\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Expected passed in object to be type object but was passed in ${typeof(pObject)}`);\n\t\t}\n\n\t\tlet addValidationError = (pAddress, pErrorMessage) =>\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Element at address \"${pAddress}\" ${pErrorMessage}.`);\n\t\t};\n\n\t\t// Now enumerate through the values and check for anomalies based on the schema\n\t\tfor (let i = 0; i < this.elementAddresses.length; i++)\n\t\t{\n\t\t\tlet tmpDescriptor = this.getDescriptor(this.elementAddresses[i]);\n\t\t\tlet tmpValueExists = this.checkAddressExists(pObject, tmpDescriptor.Address);\n\t\t\tlet tmpValue = this.getValueAtAddress(pObject, tmpDescriptor.Address);\n\n\t\t\tif ((typeof(tmpValue) == 'undefined') || !tmpValueExists)\n\t\t\t{\n\t\t\t\t// This will technically mean that `Object.Some.Value = undefined` will end up showing as \"missing\"\n\t\t\t\t// TODO: Do we want to do a different message based on if the property exists but is undefined?\n\t\t\t\ttmpValidationData.MissingElements.push(tmpDescriptor.Address);\n\t\t\t\tif (tmpDescriptor.Required || this.options.strict)\n\t\t\t\t{\n\t\t\t\t\taddValidationError(tmpDescriptor.Address, 'is flagged REQUIRED but is not set in the object');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now see if there is a data type specified for this element\n\t\t\tif (tmpDescriptor.DataType)\n\t\t\t{\n\t\t\t\tlet tmpElementType = typeof(tmpValue);\n\t\t\t\tswitch(tmpDescriptor.DataType.toString().trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpValueString = tmpValue.toString();\n\t\t\t\t\t\t\tif (tmpValueString.indexOf('.') > -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// TODO: Is this an error?\n\t\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but has a decimal point in the number.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DateTime':\n\t\t\t\t\t\tlet tmpValueDate = new Date(tmpValue);\n\t\t\t\t\t\tif (tmpValueDate.toString() == 'Invalid Date')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is not parsable as a Date by Javascript`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Check if this is a string, in the default case\n\t\t\t\t\t\t// Note this is only when a DataType is specified and it is an unrecognized data type.\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} (which auto-converted to String because it was unrecognized) but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpValidationData;\n\t}\n\n\t// Returns a default value, or, the default value for the data type (which is overridable with configuration)\n\tgetDefaultValue(pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) != 'object')\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (pDescriptor.hasOwnProperty('Default'))\n\t\t{\n\t\t\treturn pDescriptor.Default;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Default to a null if it doesn't have a type specified.\n\t\t\t// This will ensure a placeholder is created but isn't misinterpreted.\n\t\t\tlet tmpDataType = (pDescriptor.hasOwnProperty('DataType')) ? pDescriptor.DataType : 'String';\n\t\t\tif (this.options.defaultValues.hasOwnProperty(tmpDataType))\n\t\t\t{\n\t\t\t\treturn this.options.defaultValues[tmpDataType];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// give up and return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enumerate through the schema and populate default values if they don't exist.\n\tpopulateDefaults(pObject, pOverwriteProperties)\n\t{\n\t\treturn this.populateObject(pObject, pOverwriteProperties,\n\t\t\t// This just sets up a simple filter to see if there is a default set.\n\t\t\t(pDescriptor) =>\n\t\t\t{\n\t\t\t\treturn pDescriptor.hasOwnProperty('Default');\n\t\t\t});\n\t}\n\n\t// Forcefully populate all values even if they don't have defaults.\n\t// Based on type, this can do unexpected things.\n\tpopulateObject(pObject, pOverwriteProperties, fFilter)\n\t{\n\t\t// Automatically create an object if one isn't passed in.\n\t\tlet tmpObject = (typeof(pObject) === 'object') ? pObject : {};\n\t\t// Default to *NOT OVERWRITING* properties\n\t\tlet tmpOverwriteProperties = (typeof(pOverwriteProperties) == 'undefined') ? false : pOverwriteProperties;\n\t\t// This is a filter function, which is passed the schema and allows complex filtering of population\n\t\t// The default filter function just returns true, populating everything.\n\t\tlet tmpFilterFunction = (typeof(fFilter) == 'function') ? fFilter : (pDescriptor) => { return true; };\n\n\t\tthis.elementAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpDescriptor = this.getDescriptor(pAddress);\n\t\t\t\t// Check the filter function to see if this is an address we want to set the value for.\n\t\t\t\tif (tmpFilterFunction(tmpDescriptor))\n\t\t\t\t{\n\t\t\t\t\t// If we are overwriting properties OR the property does not exist\n\t\t\t\t\tif (tmpOverwriteProperties || !this.checkAddressExists(tmpObject, pAddress))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setValueAtAddress(tmpObject, pAddress, this.getDefaultValue(tmpDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpObject;\n\t}\n};\n\nmodule.exports = Manyfest;\n},{\"./Manyfest-HashTranslation.js\":100,\"./Manyfest-LogToConsole.js\":101,\"./Manyfest-ObjectAddress-CheckAddressExists.js\":102,\"./Manyfest-ObjectAddress-DeleteValue.js\":103,\"./Manyfest-ObjectAddress-GetValue.js\":104,\"./Manyfest-ObjectAddress-SetValue.js\":106,\"./Manyfest-ObjectAddressGeneration.js\":107,\"./Manyfest-SchemaManipulation.js\":109,\"fable-serviceproviderbase\":52}],111:[function(require,module,exports){\n(function (global){(function (){\nvar hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (obj === global) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./util.inspect\":18}],112:[function(require,module,exports){\nvar wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n\n},{\"wrappy\":158}],113:[function(require,module,exports){\n(function (process){(function (){\n// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":120}],114:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase')\n\nconst defaultPictSettings = (\n\t{\n\t\tName: 'DefaultPictApplication',\n\n\t\t// The main \"viewport\" is the view that is used to host our application\n\t\tMainViewportViewIdentifier: 'Default-View',\n\t\tMainViewportRenderableHash: false,\n\t\tMainViewportDestinationAddress: false,\n\t\tMainViewportDefaultDataAddress: false,\n\n\t\t// Whether or not we should automatically render the main viewport and other autorender views after we initialize the pict application\n\t\tAutoSolveAfterInitialize: true,\n\t\tAutoRenderMainViewportViewAfterInitialize: true,\n\t\tAutoRenderViewsAfterInitialize: false,\n\n\t\tManifests: {},\n\t\t// The prefix to prepend on all template destination hashes\n\t\tIdentifierAddressPrefix: 'PICT-'\n\t});\n\nclass PictApplication extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tthis.serviceType = 'PictApplication';\n\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict state\n\t\tthis.AppData = this.fable.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastMarshalFromViewsTimestamp = false;\n\t\tthis.lastMarshalToViewsTimestamp = false;\n\t\tthis.lastAutoRenderTimestamp = false;\n\n\t\t// Load all the manifests for the application\n\t\tlet tmpManifestKeys = Object.keys(this.options.Manifests);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++)\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.fable.instantiateServiceProvider('Manifest', this.options.Manifests[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Solve All Views                          */\n\t/* -------------------------------------------------------------------------- */\n\tonPreSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onPreSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonPreSolveAsync(fCallback)\n\t{\n\t\tthis.onPreSolve();\n\t\treturn fCallback();\n\t}\n\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing solve() function...`)\n\t\t}\n\n\t\t// Walk through any loaded providers and solve them as well.\n\t\tlet tmpLoadedProviders = Object.keys(this.pict.providers);\n\t\tlet tmpProvidersToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedProviders.length; i++)\n\t\t{\n\t\t\tlet tmpProvider = this.pict.providers[tmpLoadedProviders[i]];\n\t\t\tif (tmpProvider.options.AutoSolveWithApp)\n\t\t\t{\n\t\t\t\ttmpProvidersToSolve.push(tmpProvider);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpProvidersToSolve.sort((a, b) => { return a.options.AutoSolveOrdinal - b.options.AutoSolveOrdinal; });\n\t\tfor (let i = 0; i < tmpProvidersToSolve.length; i++)\n\t\t{\n\t\t\ttmpProvidersToSolve[i].solve(tmpProvidersToSolve[i]);\n\t\t}\n\n\t\tthis.onBeforeSolve();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpViewsToSolve[i].solve();\n\t\t}\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\n\n\t\t// Allow the callback to be passed in as the last parameter no matter what\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : false;\n\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\t\t// Walk through any loaded providers and solve them as well.\n\t\tlet tmpLoadedProviders = Object.keys(this.pict.providers);\n\t\tlet tmpProvidersToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedProviders.length; i++)\n\t\t{\n\t\t\tlet tmpProvider = this.pict.providers[tmpLoadedProviders[i]];\n\t\t\tif (tmpProvider.options.AutoSolveWithApp)\n\t\t\t{\n\t\t\t\ttmpProvidersToSolve.push(tmpProvider);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpProvidersToSolve.sort((a, b) => { return a.options.AutoSolveOrdinal - b.options.AutoSolveOrdinal; });\n\t\tfor (let i = 0; i < tmpProvidersToSolve.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpProvidersToSolve[i].solveAsync.bind(tmpProvidersToSolve[i]));\n\t\t}\n\n\t\t// Walk through any loaded views and solve them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoSolveWithApp)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoSolveOrdinal - b.options.AutoSolveOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToSolve[i].solveAsync.bind(tmpViewsToSolve[i]));\n\t\t}\n\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn tmpCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Initialize Application                   */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow APPLICATION [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialize:`);\n\t\t}\n\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\n\t\t\t// Walk through any loaded providers and initialize them as well.\n\t\t\tlet tmpLoadedProviders = Object.keys(this.pict.providers);\n\t\t\tlet tmpProvidersToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedProviders.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpProvider = this.pict.providers[tmpLoadedProviders[i]];\n\t\t\t\tif (tmpProvider.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpProvidersToInitialize.push(tmpProvider);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\t\ttmpProvidersToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpProvidersToInitialize.length; i++)\n\t\t\t{\n\t\t\t\ttmpProvidersToInitialize[i].initialize();\n\t\t\t}\n\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\ttmpViewsToInitialize[i].initialize();\n\t\t\t}\n\n\t\t\tthis.onAfterInitialize();\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Solve the template synchronously\n\t\t\t\tthis.solve();\n\t\t\t}\n\t\t\t// Now check and see if we should automatically render as well\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Render the template synchronously\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallback)\n\t{\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow APPLICATION [${this.UUID}]::[${this.Hash}] ${this.options.Name} initializeAsync:`);\n\t\t}\n\n\t\t// Allow the callback to be passed in as the last parameter no matter what\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : false;\n\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initializeAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initializeAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\n\t\t\t// Walk through any loaded providers and solve them as well.\n\t\t\tlet tmpLoadedProviders = Object.keys(this.pict.providers);\n\t\t\tlet tmpProvidersToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedProviders.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpProvider = this.pict.providers[tmpLoadedProviders[i]];\n\t\t\t\tif (tmpProvider.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpProvidersToInitialize.push(tmpProvider);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\t\ttmpProvidersToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpProvidersToInitialize.length; i++)\n\t\t\t{\n\t\t\t\ttmpAnticipate.anticipate(tmpProvidersToInitialize[i].initializeAsync.bind(tmpProvidersToInitialize[i]));\n\t\t\t}\n\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\t// TODO: Some optimization cleverness could be gained by grouping them into a parallelized async operation, by ordinal.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority\n\t\t\t// If they are all the default priority 0, it will end up being add order due to JSON Object Property Key order stuff\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = tmpViewsToInitialize[i];\n\t\t\t\ttmpAnticipate.anticipate(tmpView.initializeAsync.bind(tmpView));\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.solveAsync.bind(this));\n\t\t\t}\n\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.renderMainViewportAsync.bind(this));\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn tmpCallback();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn tmpCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data From All Views              */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalFromViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalFromViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalFromViews[i].marshalFromView();\n\t\t}\n\t\tthis.onMarshalFromViews();\n\t\tthis.onAfterMarshalFromViews();\n\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalFromViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t// Allow the callback to be passed in as the last parameter no matter what\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : false;\n\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewsAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewsAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalFromViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalFromViews[i].marshalFromViewAsync.bind(tmpViewsToMarshalFromViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn tmpCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data To All Views                */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalToViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalToViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalToViews[i].marshalToView();\n\t\t}\n\t\tthis.onMarshalToViews();\n\t\tthis.onAfterMarshalToViews();\n\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalToViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t// Allow the callback to be passed in as the last parameter no matter what\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : false;\n\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewsAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewsAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalToViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalToViews[i].marshalToViewAsync.bind(tmpViewsToMarshalToViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn tmpCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Render View                              */\n\t/* -------------------------------------------------------------------------- */\n\trender(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) !== 'string') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) !== 'string') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) !== 'string') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) !== 'string') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow APPLICATION [${this.UUID}]::[${this.Hash}] ${this.options.Name} VIEW Renderable[${tmpRenderableHash}] Destination[${tmpRenderDestinationAddress}] TemplateDataAddress[${tmpTemplateDataAddress}] render:`);\n\t\t}\n\n\t\t// Now get the view (by hash) from the loaded views\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not render from View ${tmpViewIdentifier} because it is not a valid view.`);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn tmpView.render(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress);\n\t}\n\trenderMainViewport()\n\t{\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow APPLICATION [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderMainViewport:`);\n\t\t}\n\n\t\treturn this.render();\n\t}\n\n\trenderAsync(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) !== 'string') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) !== 'string') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) !== 'string') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) !== 'string') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\t// Allow the callback to be passed in as the last parameter no matter what\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback :\n\t\t\t\t\t\t\t(typeof(pTemplateDataAddress) === 'function') ? pTemplateDataAddress :\n\t\t\t\t\t\t\t(typeof(pRenderDestinationAddress) === 'function') ? pRenderDestinationAddress :\n\t\t\t\t\t\t\t(typeof(pRenderableHash) === 'function') ? pRenderableHash :\n\t\t\t\t\t\t\t(typeof(pViewIdentifier) === 'function') ? pViewIdentifier :\n\t\t\t\t\t\t\tfalse;\n\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow APPLICATION [${this.UUID}]::[${this.Hash}] ${this.options.Name} VIEW Renderable[${tmpRenderableHash}] Destination[${tmpRenderDestinationAddress}] TemplateDataAddress[${tmpTemplateDataAddress}] renderAsync:`);\n\t\t}\n\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tlet tmpErrorMessage = `PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not asynchronously render from View ${tmpViewIdentifier} because it is not a valid view.`;\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.error(tmpErrorMessage);\n\t\t\t}\n\t\t\treturn tmpCallback(new Error(tmpErrorMessage));\n\t\t}\n\n\t\treturn tmpView.renderAsync(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress, tmpCallback);\n\t}\n\trenderMainViewportAsync(fCallback)\n\t{\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow APPLICATION [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderMainViewportAsync:`);\n\t\t}\n\n\t\treturn this.renderAsync(fCallback);\n\t}\n\n\trenderAutoViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 0)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} beginning renderAutoViews...`);\n\t\t}\n\t\t// Now walk through any loaded views and sort them by the AutoRender ordinal\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t// Sort the views by their priority\n\t\t// If they are all the default priority 0, it will end up being add order due to JSON Object Property Key order stuff\n\t\ttmpLoadedViews.sort((a, b) => \n\t\t{\n\t\t\treturn this.pict.views[a].options.AutoRenderOrdinal - this.pict.views[b].options.AutoRenderOrdinal;\n\t\t});\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoRender)\n\t\t\t{\n\t\t\t\ttmpView.render();\n\t\t\t}\n\t\t}\n\t\tif (this.pict.LogNoisiness > 0)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderAutoViewsAsync complete.`);\n\t\t}\n\t}\n\trenderAutoViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t// Allow the callback to be passed in as the last parameter no matter what\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback :\n\t\t\t\t\t\t\t(typeof(pTemplateDataAddress) === 'function') ? pTemplateDataAddress :\n\t\t\t\t\t\t\t(typeof(pRenderDestinationAddress) === 'function') ? pRenderDestinationAddress :\n\t\t\t\t\t\t\t(typeof(pRenderableHash) === 'function') ? pRenderableHash :\n\t\t\t\t\t\t\t(typeof(pViewIdentifier) === 'function') ? pViewIdentifier :\n\t\t\t\t\t\t\tfalse;\n\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderAutoViewsAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderAutoViewsAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\tif (this.pict.LogNoisiness > 0)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} beginning renderAutoViewsAsync...`);\n\t\t}\n\n\t\t// Now walk through any loaded views and sort them by the AutoRender ordinal\n\t\t// TODO: Some optimization cleverness could be gained by grouping them into a parallelized async operation, by ordinal.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t// Sort the views by their priority\n\t\t// If they are all the default priority 0, it will end up being add order due to JSON Object Property Key order stuff\n\t\ttmpLoadedViews.sort((a, b) => \n\t\t{\n\t\t\treturn this.pict.views[a].options.AutoRenderOrdinal - this.pict.views[b].options.AutoRenderOrdinal;\n\t\t});\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoRender)\n\t\t\t{\n\t\t\t\ttmpAnticipate.anticipate(tmpView.renderAsync.bind(tmpView));\n\t\t\t}\n\t\t}\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tthis.lastAutoRenderTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderAutoViewsAsync complete.`);\n\t\t\t\t}\n\t\t\t\treturn tmpCallback(pError);\n\t\t\t});\n\t}\n}\n\nmodule.exports = PictApplication;\n},{\"fable-serviceproviderbase\":52}],115:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst defaultPictProviderSettings = (\n\t{\n\t\tProviderIdentifier: false,\n\n\t\t// If this is set to true, when the App initializes this will.\n\t\t// After the App initializes, initialize will be called as soon as it's added.\n\t\tAutoInitialize: true,\n\t\tAutoInitializeOrdinal: 0,\n\n\t\tAutoSolveWithApp: true,\n\t\tAutoSolveOrdinal: 0,\n\n\t\tManifests: {},\n\n\t\tTemplates: []\n\t});\n\nclass PictProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Intersect default options, parent constructor, service information\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictProviderSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tif (!this.options.ProviderIdentifier)\n\t\t{\n\t\t\tthis.options.ProviderIdentifier = `AutoProviderID-${this.fable.getUUID()}`;\n\t\t}\n\n\t\tthis.serviceType = 'PictProvider';\n\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\n\t\t// Wire in the essential Pict application state\n\t\tthis.AppData = this.pict.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\n\t\tfor (let i = 0; i < this.options.Templates.length; i++)\n\t\t{\n\t\t\tlet tmpDefaultTemplate = this.options.Templates[i];\n\n\t\t\tif (!tmpDefaultTemplate.hasOwnProperty('Postfix') || !tmpDefaultTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} could not load Default Template ${i} in the options array.`, tmpDefaultTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpDefaultTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpDefaultTemplate.Source = `PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addDefaultTemplate(tmpDefaultTemplate.Prefix, tmpDefaultTemplate.Postfix, tmpDefaultTemplate.Template, tmpDefaultTemplate.Source);\n\t\t\t}\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                        Code Section: Initialization                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow PROVIDER [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} initialize:`);\n\t\t}\n\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\tthis.onAfterInitialize();\n\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallback)\n\t{\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow PROVIDER [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} initializeAsync:`);\n\t\t}\n\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.info(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.info(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallback();\n\t\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\n\tonPreRender()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} onPreRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonPreRenderAsync(fCallback)\n\t{\n\t\tthis.onPreRender();\n\t\treturn fCallback();\n\t}\n\trender()\n\t{\n\t\treturn this.onPreRender();\n\t}\n\trenderAsync(fCallback)\n\t{\n\t\tthis.onPreRender();\n\t\treturn fCallback();\n\t}\n\n\n\tonPreSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} onPreSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonPreSolveAsync(fCallback)\n\t{\n\t\tthis.onPreSolve();\n\t\treturn fCallback();\n\t}\n\tsolve()\n\t{\n\t\treturn this.onPreSolve();\n\t}\n\tsolveAsync(fCallback)\n\t{\n\t\tthis.onPreSolve();\n\t\treturn fCallback();\n\t}\n}\n\nmodule.exports = PictProvider;\n},{\"fable-serviceproviderbase\":52}],116:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst defaultPictViewSettings = (\n\t{\n\t\tDefaultRenderable: false,\n\t\tDefaultDestinationAddress: false,\n\t\tDefaultTemplateRecordAddress: false,\n\n\t\tViewIdentifier: false,\n\n\t\t// If this is set to true, when the App initializes this will.\n\t\t// After the App initializes, initialize will be called as soon as it's added.\n\t\tAutoInitialize: true,\n\t\tAutoInitializeOrdinal: 0,\n\n\t\t// If this is set to true, when the App autorenders (on load) this will.\n\t\t// After the App initializes, render will be called as soon as it's added.\n\t\tAutoRender: true,\n\t\tAutoRenderOrdinal: 0,\n\n\t\tAutoSolveWithApp: true,\n\t\tAutoSolveOrdinal: 0,\n\n\t\tCSSHash: false,\n\t\tCSS: false,\n\t\tCSSProvider: false,\n\t\tCSSPriority: 500,\n\n\t\tTemplates: [],\n\n\t\tDefaultTemplates: [],\n\n\t\tRenderables: [],\n\n\t\tManifests: {}\n\t});\n\nclass PictView extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Intersect default options, parent constructor, service information\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictViewSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tif (!this.options.ViewIdentifier)\n\t\t{\n\t\t\tthis.options.ViewIdentifier = `AutoViewID-${this.fable.getUUID()}`;\n\t\t}\n\t\tthis.serviceType = 'PictView';\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict application state\n\t\tthis.AppData = this.pict.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastRenderedTimestamp = false;\n\t\tthis.lastMarshalFromViewTimestamp = false;\n\t\tthis.lastMarshalToViewTimestamp = false;\n\n\t\t// Load all templates from the array in the options\n\t\t// Templates are in the form of {Hash:'Some-Template-Hash',Template:'Template content',Source:'TemplateSource'}\n\t\tfor (let i = 0; i < this.options.Templates.length; i++)\n\t\t{\n\t\t\tlet tmpTemplate = this.options.Templates[i];\n\n\t\t\tif (!tmpTemplate.hasOwnProperty('Hash') || !tmpTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Template ${i} in the options array.`, tmpTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addTemplate(tmpTemplate.Hash, tmpTemplate.Template, tmpTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load all default templates from the array in the options\n\t\t// Templates are in the form of {Prefix:'',Postfix:'-List-Row',Template:'Template content',Source:'TemplateSourceString'}\n\t\tfor (let i = 0; i < this.options.DefaultTemplates.length; i++)\n\t\t{\n\t\t\tlet tmpDefaultTemplate = this.options.DefaultTemplates[i];\n\n\t\t\tif (!tmpDefaultTemplate.hasOwnProperty('Postfix') || !tmpDefaultTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Default Template ${i} in the options array.`, tmpDefaultTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpDefaultTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpDefaultTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addDefaultTemplate(tmpDefaultTemplate.Prefix, tmpDefaultTemplate.Postfix, tmpDefaultTemplate.Template, tmpDefaultTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load the CSS if it's available\n\t\tif (this.options.CSS)\n\t\t{\n\t\t\tlet tmpCSSHash = this.options.CSSHash ? this.options.CSSHash : `View-${this.options.ViewIdentifier}`;\n\t\t\tlet tmpCSSProvider = this.options.CSSProvider ? this.options.CSSProvider : tmpCSSHash;\n\t\t\tthis.pict.CSSMap.addCSS(tmpCSSHash, this.options.CSS, tmpCSSProvider, this.options.CSSPriority);\n\t\t}\n\n\t\t// Load all renderables\n\t\t// Renderables are launchable renderable instructions with templates\n\t\t// They look as such: {Identifier:'ContentEntry', TemplateHash:'Content-Entry-Section-Main', ContentDestinationAddress:'#ContentSection', RecordAddress:'AppData.Content.DefaultText', ManifestTransformation:'ManyfestHash', ManifestDestinationAddress:'AppData.Content.DataToTransformContent'}\n\t\t// The only parts that are necessary are Identifier and Template\n\t\t// A developer can then do render('ContentEntry') and it just kinda works.  Or they can override the ContentDestinationAddress\n\t\tthis.renderables = {};\n\t\tfor (let i = 0; i < this.options.Renderables.length; i++)\n\t\t{\n\t\t\tlet tmpRenderable = this.options.Renderables[i];\n\t\t\tthis.addRenderable(this.options.Renderables[i]);\n\t\t}\n\t}\n\n\taddRenderable(pRenderableHash, pTemplateHash, pDefaultTemplateDataAddress, pDefaultDestinationAddress, pRenderMethod)\n\t{\n\t\tlet tmpRenderable = false;\n\n\t\tif (typeof(pRenderableHash) == 'object')\n\t\t{\n\t\t\t// The developer passed in the renderable as an object.\n\t\t\t// Use theirs instead!\n\t\t\ttmpRenderable = pRenderableHash;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpRenderMethod = (typeof(pRenderMethod) !== 'string') ? pRenderMethod : 'replace';\n\t\t\ttmpRenderable = (\n\t\t\t\t{\n\t\t\t\t\tRenderableHash: pRenderableHash,\n\t\t\t\t\tTemplateHash: pTemplateHash,\n\t\t\t\t\tDefaultTemplateDataAddress: pDefaultTemplateDataAddress,\n\t\t\t\t\tDefaultDestinationAddress: pDefaultDestinationAddress,\n\t\t\t\t\tRenderMethod: tmpRenderMethod\n\t\t\t\t});\n\t\t}\n\n\t\tif ((typeof(tmpRenderable.RenderableHash) != 'string') || (typeof(tmpRenderable.TemplateHash) != 'string'))\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Renderable; RenderableHash or TemplateHash are invalid.`, tmpRenderable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} adding renderable [${tmpRenderable.RenderableHash}] pointed to template ${tmpRenderable.TemplateHash}.`);\n\t\t\t}\n\n\t\t\tthis.renderables[tmpRenderable.RenderableHash] = tmpRenderable;\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                        Code Section: Initialization                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow VIEW [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialize:`);\n\t\t}\n\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\tthis.onAfterInitialize();\n\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallback)\n\t{\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow VIEW [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initializeAsync:`);\n\t\t}\n\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallback();\n\t\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Render                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeRender(pRenderable, pRenderDestinationAddress, pData)\n\t{\n\t\t// Overload this to mess with stuff before the content gets generated from the template\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeRenderAsync(fCallback)\n\t{\n\t\treturn fCallback();\n\t}\n\n\trender(pRenderable, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it is not a valid renderable.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpDataAddress;\n\t\tlet tmpData;\n\n\t\tif (typeof(pTemplateDataAddress) === 'object')\n\t\t{\n\t\t\ttmpData = pTemplateDataAddress;\n\t\t\ttmpDataAddress = 'Passed in as object';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\t\ttmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\t\t}\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow VIEW [${this.UUID}]::[${this.Hash}] Renderable[${tmpRenderableHash}] Destination[${tmpRenderDestinationAddress}] TemplateDataAddress[${tmpDataAddress}] render:`);\n\t\t}\n\t\tif (this.pict.LogNoisiness > 0)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} Beginning Render of Renderable[${tmpRenderableHash}] to Destination [${tmpRenderDestinationAddress}]...`);\n\t\t}\n\t\t// Generate the content output from the template and data\n\t\tlet tmpContent = this.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData, null, [this])\n\n\t\tif (this.pict.LogNoisiness > 0)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} Assigning Renderable[${tmpRenderableHash}] content length ${tmpContent.length} to Destination [${tmpRenderDestinationAddress}] using render method [${tmpRenderable.RenderMethod}].`);\n\t\t}\n\n\t\t// Assign the content to the destination address\n\t\tswitch(tmpRenderable.RenderMethod)\n\t\t{\n\t\t\tcase 'append':\n\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'prepend':\n\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'append_once':\n\t\t\t\t// Try to find the content in the destination address\n\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t{\n\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'replace':\n\t\t\t\t// TODO: Should this be the default?\n\t\t\tdefault:\n\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Execute the developer-overridable post-render behavior\n\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, tmpContent)\n\n\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\treturn true;\n\t}\n\trenderAsync(pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderableHash) === 'string') ? pRenderableHash :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\n\t\t// Allow the callback to be passed in as the last parameter no matter what\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback :\n\t\t\t\t\t\t\t(typeof(pTemplateDataAddress) === 'function') ? pTemplateDataAddress :\n\t\t\t\t\t\t\t(typeof(pRenderDestinationAddress) === 'function') ? pRenderDestinationAddress :\n\t\t\t\t\t\t\t(typeof(pRenderableHash) === 'function') ? pRenderableHash :\n\t\t\t\t\t\t\tfalse;\n\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderableHash}because it is not a valid renderable.`);\n\t\t\treturn tmpCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderableHash}because it is not a valid renderable.`));\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderableHash}) because it does not exist.`);\n\t\t\treturn tmpCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderableHash}) because it does not exist.`));\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderableHash}) because it does not have a valid destination address.`);\n\t\t\treturn tmpCallback(Error(`Could not render ${tmpRenderableHash}`));\n\t\t}\n\n\t\tlet tmpDataAddress;\n\t\tlet tmpData;\n\n\t\tif (typeof(pTemplateDataAddress) === 'object')\n\t\t{\n\t\t\ttmpData = pTemplateDataAddress;\n\t\t\ttmpDataAddress = 'Passed in as object';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\t\ttmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\t\t}\n\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow VIEW [${this.UUID}]::[${this.Hash}] Renderable[${tmpRenderableHash}] Destination[${tmpRenderDestinationAddress}] TemplateDataAddress[${tmpDataAddress}] renderAsync:`);\n\t\t}\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} Beginning Asynchronous Render (callback-style)...`);\n\t\t}\n\n\t\tlet tmpAnticipate = this.fable.newAnticipate();\n\n\t\ttmpAnticipate.anticipate(\n\t\t\t(fOnBeforeRenderCallback) =>\n\t\t\t{\n\t\t\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\t\t\t\tthis.onBeforeRenderAsync(fOnBeforeRenderCallback);\n\t\t\t});\n\n\t\ttmpAnticipate.anticipate(\n\t\t\t(fAsyncTemplateCallback) =>\n\t\t\t{\n\t\t\t\t// Render the template (asynchronously)\n\t\t\t\tthis.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData,\n\t\t\t\t\t(pError, pContent) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render (asynchronously) ${tmpRenderableHash} (param ${pRenderableHash}) because it did not parse the template.`, pError);\n\t\t\t\t\t\t\treturn fAsyncTemplateCallback(pError);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} Assigning Renderable[${tmpRenderableHash}] content length ${pContent.length} to Destination [${tmpRenderDestinationAddress}] using Async render method ${tmpRenderable.RenderMethod}.`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Assign the content to the destination address\n\t\t\t\t\t\tswitch(tmpRenderable.RenderMethod)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'append':\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'prepend':\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'append_once':\n\t\t\t\t\t\t\t\t// Try to find the content in the destination address\n\t\t\t\t\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\t\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'replace':\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Execute the developer-overridable asynchronous post-render behavior\n\t\t\t\t\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\t\t\treturn fAsyncTemplateCallback();\n\t\t\t\t\t}, [this]);\n\t\t\t});\n\n\t\ttmpAnticipate.anticipate(\n\t\t\t(fOnAfterRenderCallback) =>\n\t\t\t{\n\t\t\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\t\t\t\tthis.onAfterRenderAsync(fOnAfterRenderCallback);\n\t\t\t});\n\n\t\ttmpAnticipate.wait(tmpCallback);\n\t}\n\trenderDefaultAsync(fCallback)\n\t{\n\t\t// Render the default renderable\n\t\tthis.renderAsync(fCallback);\n\t}\n\tonAfterRender(pRenderable, pRenderDestinationAddress, pData)\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterRenderAsync(fCallback)\n\t{\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Solver                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : false;\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn tmpCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal From View                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewAsync(fCallback)\n\t{\n\n\t\tthis.onMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalFromView();\n\t\tthis.onMarshalFromView();\n\t\tthis.onAfterMarshalFromView();\n\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalFromViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : false;\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} marshalFromViewAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn tmpCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal To View                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalToView();\n\t\tthis.onMarshalToView();\n\t\tthis.onAfterMarshalToView();\n\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalToViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : false;\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} marshalToViewAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn tmpCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToView();\n\t\treturn fCallback();\n\t}\n}\n\nmodule.exports = PictView;\n},{\"fable-serviceproviderbase\":52}],117:[function(require,module,exports){\n/**\n* Precedent Meta-Templating\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Process text streams, parsing out meta-template expressions.\n*/\nvar libWordTree = require(`./WordTree.js`);\nvar libStringParser = require(`./StringParser.js`);\n\nclass Precedent\n{\n\t/**\n\t * Precedent Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser();\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData);\n\t}\n}\n\nmodule.exports = Precedent;\n\n},{\"./StringParser.js\":118,\"./WordTree.js\":119}],118:[function(require,module,exports){\n/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t */\n\tparseString (pString, pParseTree, pData)\n\t{\n\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\tfor (var i = 0; i < pString.length; i++)\n\t\t{\n\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData);\n\t\t}\n\n\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\treturn tmpParserState.Output;\n\t}\n}\n\nmodule.exports = StringParser;\n\n},{}],119:[function(require,module,exports){\n/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n\n},{}],120:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],121:[function(require,module,exports){\n(function (global){(function (){\n/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],122:[function(require,module,exports){\n'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n\n},{}],123:[function(require,module,exports){\n'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n},{\"./formats\":122,\"./parse\":124,\"./stringify\":125}],124:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowEmptyArrays: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decodeDotInKeys: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    duplicates: 'combine',\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        var existing = has.call(obj, key);\n        if (existing && options.duplicates === 'combine') {\n            obj[key] = utils.combine(obj[key], val);\n        } else if (!existing || options.duplicates === 'last') {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = options.allowEmptyArrays && leaf === '' ? [] : [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, '.') : cleanRoot;\n            var index = parseInt(decodedRoot, 10);\n            if (!options.parseArrays && decodedRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== decodedRoot\n                && String(index) === decodedRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (decodedRoot !== '__proto__') {\n                obj[decodedRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {\n        throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.decoder !== null && typeof opts.decoder !== 'undefined' && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    var duplicates = typeof opts.duplicates === 'undefined' ? defaults.duplicates : opts.duplicates;\n\n    if (duplicates !== 'combine' && duplicates !== 'first' && duplicates !== 'last') {\n        throw new TypeError('The duplicates option must be either combine, first, or last');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decodeDotInKeys: typeof opts.decodeDotInKeys === 'boolean' ? opts.decodeDotInKeys : defaults.decodeDotInKeys,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        duplicates: duplicates,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n\n},{\"./utils\":126}],125:[function(require,module,exports){\n'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    allowEmptyArrays,\n    strictNullHandling,\n    skipNulls,\n    encodeDotInKeys,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var encodedPrefix = encodeDotInKeys ? prefix.replace(/\\./g, '%2E') : prefix;\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encodedPrefix + '[]' : encodedPrefix;\n\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjustedPrefix + '[]';\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var encodedKey = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + encodedKey : '[' + encodedKey + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            allowEmptyArrays,\n            strictNullHandling,\n            skipNulls,\n            encodeDotInKeys,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    var arrayFormat;\n    if (opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = defaults.arrayFormat;\n    }\n\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];\n    var commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.allowEmptyArrays,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encodeDotInKeys,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n\n},{\"./formats\":122,\"./utils\":126,\"side-channel\":132}],126:[function(require,module,exports){\n'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar limit = 1024;\n\n/* eslint operator-linebreak: [2, \"before\"] */\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var j = 0; j < string.length; j += limit) {\n        var segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        var arr = [];\n\n        for (var i = 0; i < segment.length; ++i) {\n            var c = segment.charCodeAt(i);\n            if (\n                c === 0x2D // -\n                || c === 0x2E // .\n                || c === 0x5F // _\n                || c === 0x7E // ~\n                || (c >= 0x30 && c <= 0x39) // 0-9\n                || (c >= 0x41 && c <= 0x5A) // a-z\n                || (c >= 0x61 && c <= 0x7A) // A-Z\n                || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n\n            if (c < 0x80) {\n                arr[arr.length] = hexTable[c];\n                continue;\n            }\n\n            if (c < 0x800) {\n                arr[arr.length] = hexTable[0xC0 | (c >> 6)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            if (c < 0xD800 || c >= 0xE000) {\n                arr[arr.length] = hexTable[0xE0 | (c >> 12)]\n                    + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            i += 1;\n            c = 0x10000 + (((c & 0x3FF) << 10) | (segment.charCodeAt(i) & 0x3FF));\n\n            arr[arr.length] = hexTable[0xF0 | (c >> 18)]\n                + hexTable[0x80 | ((c >> 12) & 0x3F)]\n                + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                + hexTable[0x80 | (c & 0x3F)];\n        }\n\n        out += arr.join('');\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n\n},{\"./formats\":122}],127:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],128:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],129:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":127,\"./encode\":128}],130:[function(require,module,exports){\n/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n},{\"buffer\":20}],131:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = require('es-errors/type');\nvar $floor = GetIntrinsic('%Math.floor%');\n\n/** @type {import('.')} */\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n\n},{\"define-data-property\":36,\"es-errors/type\":43,\"get-intrinsic\":89,\"gopd\":90,\"has-property-descriptors\":91}],132:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list. By doing so, all the recently used nodes can be accessed relatively quickly.\n*/\n/** @type {import('.').listGetNode} */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\t/** @type {typeof list | NonNullable<(typeof list)['next']>} */\n\tvar prev = list;\n\t/** @type {(typeof list)['next']} */\n\tvar curr;\n\tfor (; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\tcurr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\n/** @type {import('.').listGet} */\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\n/** @type {import('.').listSet} */\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = /** @type {import('.').ListNode<typeof value>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t});\n\t}\n};\n/** @type {import('.').listHas} */\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n\t/** @type {WeakMap<object, unknown>} */ var $wm;\n\t/** @type {Map<object, unknown>} */ var $m;\n\t/** @type {import('.').RootNode<unknown>} */ var $o;\n\n\t/** @type {import('.').Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n\n},{\"call-bind/callBound\":25,\"es-errors/type\":43,\"get-intrinsic\":89,\"object-inspect\":111}],133:[function(require,module,exports){\n(function (Buffer){(function (){\n/*! simple-concat. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function (stream, cb) {\n  var chunks = []\n  stream.on('data', function (chunk) {\n    chunks.push(chunk)\n  })\n  stream.once('end', function () {\n    if (cb) cb(null, Buffer.concat(chunks))\n    cb = null\n  })\n  stream.once('error', function (err) {\n    if (cb) cb(err)\n    cb = null\n  })\n}\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":20}],134:[function(require,module,exports){\n(function (Buffer){(function (){\n/*! simple-get. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const originalHost = opts.hostname // hostname before potential redirect\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api\n      // If redirected host is different than original host, drop headers to prevent cookie leak (#73)\n      if (redirectHost !== null && redirectHost !== originalHost) {\n        delete opts.headers.cookie\n        delete opts.headers.authorization\n      }\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":20,\"decompress-response\":18,\"http\":135,\"https\":96,\"once\":112,\"querystring\":129,\"simple-concat\":133,\"url\":156}],135:[function(require,module,exports){\n(function (global){(function (){\nvar ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./lib/request\":137,\"./lib/response\":138,\"builtin-status-codes\":21,\"url\":156,\"xtend\":159}],136:[function(require,module,exports){\n(function (global){(function (){\nexports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],137:[function(require,module,exports){\n(function (process,global,Buffer){(function (){\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"./capability\":136,\"./response\":138,\"_process\":120,\"buffer\":20,\"inherits\":98,\"readable-stream\":153}],138:[function(require,module,exports){\n(function (process,global,Buffer){(function (){\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"./capability\":136,\"_process\":120,\"buffer\":20,\"inherits\":98,\"readable-stream\":153}],139:[function(require,module,exports){\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n\n},{}],140:[function(require,module,exports){\n(function (process){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n}).call(this)}).call(this,require('_process'))\n\n},{\"./_stream_readable\":142,\"./_stream_writable\":144,\"_process\":120,\"inherits\":98}],141:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n},{\"./_stream_transform\":143,\"inherits\":98}],142:[function(require,module,exports){\n(function (process,global){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../errors\":139,\"./_stream_duplex\":140,\"./internal/streams/async_iterator\":145,\"./internal/streams/buffer_list\":146,\"./internal/streams/destroy\":147,\"./internal/streams/from\":149,\"./internal/streams/state\":151,\"./internal/streams/stream\":152,\"_process\":120,\"buffer\":20,\"events\":45,\"inherits\":98,\"string_decoder/\":154,\"util\":18}],143:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}\n},{\"../errors\":139,\"./_stream_duplex\":140,\"inherits\":98}],144:[function(require,module,exports){\n(function (process,global){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../errors\":139,\"./_stream_duplex\":140,\"./internal/streams/destroy\":147,\"./internal/streams/state\":151,\"./internal/streams/stream\":152,\"_process\":120,\"buffer\":20,\"inherits\":98,\"util-deprecate\":157}],145:[function(require,module,exports){\n(function (process){(function (){\n'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;\n}).call(this)}).call(this,require('_process'))\n\n},{\"./end-of-stream\":148,\"_process\":120}],146:[function(require,module,exports){\n'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();\n},{\"buffer\":20,\"util\":18}],147:[function(require,module,exports){\n(function (process){(function (){\n'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":120}],148:[function(require,module,exports){\n// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;\n},{\"../../../errors\":139}],149:[function(require,module,exports){\nmodule.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n\n},{}],150:[function(require,module,exports){\n// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;\n},{\"../../../errors\":139,\"./end-of-stream\":148}],151:[function(require,module,exports){\n'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};\n},{\"../../../errors\":139}],152:[function(require,module,exports){\nmodule.exports = require('events').EventEmitter;\n\n},{\"events\":45}],153:[function(require,module,exports){\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n\n},{\"./lib/_stream_duplex.js\":140,\"./lib/_stream_passthrough.js\":141,\"./lib/_stream_readable.js\":142,\"./lib/_stream_transform.js\":143,\"./lib/_stream_writable.js\":144,\"./lib/internal/streams/end-of-stream.js\":148,\"./lib/internal/streams/pipeline.js\":150}],154:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n},{\"safe-buffer\":130}],155:[function(require,module,exports){\n(function (setImmediate,clearImmediate){(function (){\nvar nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n}).call(this)}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate)\n\n},{\"process/browser.js\":120,\"timers\":155}],156:[function(require,module,exports){\n/*\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nvar punycode = require('punycode');\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n/*\n * define these here so at least they only have to be\n * compiled once on the first module load.\n */\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/,\n\n  /*\n   * RFC 2396: characters reserved for delimiting URLs.\n   * We actually just auto-escape these.\n   */\n  delims = [\n    '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'\n  ],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = [\n    '{', '}', '|', '\\\\', '^', '`'\n  ].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  /*\n   * Characters that are never ever allowed in a hostname.\n   * Note that any invalid chars are also handled, but these\n   * are the ones that are *expected* to be seen, so we fast-path\n   * them.\n   */\n  nonHostChars = [\n    '%', '/', '?', ';', '#'\n  ].concat(autoEscape),\n  hostEndingChars = [\n    '/', '?', '#'\n  ],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    http: true,\n    https: true,\n    ftp: true,\n    gopher: true,\n    file: true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  },\n  querystring = require('qs');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && typeof url === 'object' && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (typeof url !== 'string') {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  /*\n   * Copy chrome, IE, opera backslash-handling behavior.\n   * Back slashes before the query string get converted to forward slashes\n   * See: https://code.google.com/p/chromium/issues/detail?id=25916\n   */\n  var queryIndex = url.indexOf('?'),\n    splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  /*\n   * trim before proceeding.\n   * This is to support parse stuff like \"  http://foo.com  \\n\"\n   */\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  /*\n   * figure out if it's got a host\n   * user@server is *always* interpreted as a hostname, and url\n   * resolution will treat //foo/bar as host=foo,path=bar because that's\n   * how the browser resolves relative URLs.\n   */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@/]+@[^@/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || (proto && !slashedProtocol[proto]))) {\n\n    /*\n     * there's a hostname.\n     * the first instance of /, ?, ;, or # ends the host.\n     *\n     * If there is an @ in the hostname, then non-host chars *are* allowed\n     * to the left of the last @ sign, unless some host-ending character\n     * comes *before* the @-sign.\n     * URLs are obnoxious.\n     *\n     * ex:\n     * http://a@b@c/ => user:a@b host:c\n     * http://a@b?@c => user:a host:c path:/?@c\n     */\n\n    /*\n     * v0.12 TODO(isaacs): This is not quite how Chrome does things.\n     * Review our test case against browsers more comprehensively.\n     */\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n\n    /*\n     * at this point, either we have an explicit point where the\n     * auth portion cannot go past, or the last @ char is the decider.\n     */\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      /*\n       * atSign must be in auth portion.\n       * http://a@b/c@d => host:b auth:a path:/c@d\n       */\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    /*\n     * Now we have a portion which is definitely the auth.\n     * Pull that off.\n     */\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) { hostEnd = rest.length; }\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    /*\n     * we've indicated that there is a hostname,\n     * so even if it's empty, it has to be present.\n     */\n    this.hostname = this.hostname || '';\n\n    /*\n     * if hostname begins with [ and ends with ]\n     * assume that it's an IPv6 address.\n     */\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              /*\n               * we replace non-ASCII char with a temporary placeholder\n               * we need this to make sure size of hostname is not\n               * broken by replacing non-ASCII by nothing\n               */\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      /*\n       * IDNA Support: Returns a punycoded representation of \"domain\".\n       * It only converts parts of the domain name that\n       * have non-ASCII characters, i.e. it doesn't matter if\n       * you call it with a domain that already is ASCII-only.\n       */\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    /*\n     * strip [ and ] from the hostname\n     * the host field still retains them, though\n     */\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  /*\n   * now rest is set to the post-host stuff.\n   * chop off any delim chars.\n   */\n  if (!unsafeProtocol[lowerProto]) {\n\n    /*\n     * First, make 100% sure that any \"autoEscape\" chars get\n     * escaped, even if encodeURIComponent doesn't think they\n     * need to be.\n     */\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) { continue; }\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  /*\n   * ensure it's an object, and not a string url.\n   * If it's an obj, this is a no-op.\n   * this way, you can call url_format() on strings\n   * to clean up potentially wonky urls.\n   */\n  if (typeof obj === 'string') { obj = urlParse(obj); }\n  if (!(obj instanceof Url)) { return Url.prototype.format.call(obj); }\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n    pathname = this.pathname || '',\n    hash = this.hash || '',\n    host = false,\n    query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && typeof this.query === 'object' && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query, {\n      arrayFormat: 'repeat',\n      addQueryPrefix: false\n    });\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') { protocol += ':'; }\n\n  /*\n   * only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n   * unless they had them to begin with.\n   */\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') { pathname = '/' + pathname; }\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') { hash = '#' + hash; }\n  if (search && search.charAt(0) !== '?') { search = '?' + search; }\n\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) { return relative; }\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (typeof relative === 'string') {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  /*\n   * hash is always overridden, no matter what.\n   * even href=\"\" will remove it.\n   */\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') { result[rkey] = relative[rkey]; }\n    }\n\n    // urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.pathname = '/';\n      result.path = result.pathname;\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    /*\n     * if it's a known url protocol, then changing\n     * the protocol does weird things\n     * first, if it's not file:, then we MUST have a host,\n     * and if there was a path\n     * to begin with, then we MUST have a path.\n     * if it is file:, then the host is dropped,\n     * because that's known to be hostless.\n     * anything else is assumed to be absolute.\n     */\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift())) { }\n      if (!relative.host) { relative.host = ''; }\n      if (!relative.hostname) { relative.hostname = ''; }\n      if (relPath[0] !== '') { relPath.unshift(''); }\n      if (relPath.length < 2) { relPath.unshift(''); }\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n    isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n    mustEndAbs = isRelAbs || isSourceAbs || (result.host && relative.pathname),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    relPath = relative.pathname && relative.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  /*\n   * if the url is a non-slashed url, then relative\n   * links like ../.. should be able\n   * to crawl up to the hostname, as well.  This is strange.\n   * result.protocol has already been set by now.\n   * Later on, put the first path part into the host field.\n   */\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') { srcPath[0] = result.host; } else { srcPath.unshift(result.host); }\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') { relPath[0] = relative.host; } else { relPath.unshift(relative.host); }\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    /*\n     * it's relative\n     * throw away the existing file, and take the new path instead.\n     */\n    if (!srcPath) { srcPath = []; }\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search != null) {\n    /*\n     * just pull out the search.\n     * like href='?foo'.\n     * Put this after the other two cases because it simplifies the booleans\n     */\n    if (psychotic) {\n      result.host = srcPath.shift();\n      result.hostname = result.host;\n      /*\n       * occationaly the auth can get stuck only in host\n       * this especially happens in cases like\n       * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n       */\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.hostname = authInHost.shift();\n        result.host = result.hostname;\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    // to support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    /*\n     * no path at all.  easy.\n     * we've already handled the other stuff above.\n     */\n    result.pathname = null;\n    // to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  /*\n   * if a url ENDs in . or .., then it must get a trailing slash.\n   * however, if it ends in anything else non-slashy,\n   * then it must NOT get a trailing slash.\n   */\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === '';\n\n  /*\n   * strip single dots, resolve double dots to parent dir\n   * if the path tries to go above the root, `up` ends up > 0\n   */\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    result.host = result.hostname;\n    /*\n     * occationaly the auth can get stuck only in host\n     * this especially happens in cases like\n     * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n     */\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.hostname = authInHost.shift();\n      result.host = result.hostname;\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (srcPath.length > 0) {\n    result.pathname = srcPath.join('/');\n  } else {\n    result.pathname = null;\n    result.path = null;\n  }\n\n  // to support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\n},{\"punycode\":121,\"qs\":123}],157:[function(require,module,exports){\n(function (global){(function (){\n\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],158:[function(require,module,exports){\n// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n\n},{}],159:[function(require,module,exports){\nmodule.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n},{}],160:[function(require,module,exports){\n// This assumes Pict has been required in the browser. Delcare these as globals so linter can do its job.\n/* global Pict, _Pict: writeable */\n\n/**\n * Simple function to load a pict Application\n *\n * @param {import('pict-application')} pPictApplication - The pict application to load.\n * @param {number} pLogNoisiness - The log noisiness level.\n */\nmodule.exports = function (pPictApplication, pLogNoisiness)\n{\n\tlet tmpLogNoisiness = (typeof(pLogNoisiness) == 'undefined') ? 0 : pLogNoisiness;\n\n\t// Set up a basal pict on the window object\n\tif (pPictApplication && pPictApplication.hasOwnProperty('default_configuration') && pPictApplication.default_configuration.hasOwnProperty('pict_configuration'))\n\t{\n\t\twindow._Pict = new Pict(pPictApplication.default_configuration.pict_configuration);\n\t}\n\telse\n\t{\n\t\twindow._Pict = new Pict();\n\t}\n\n\twindow._Pict.LogNoisiness = tmpLogNoisiness;\n\n\tlet tmpApplicationHash = 'DefaultApplication';\n\tlet tmpDefaultConfiguration = {};\n\n\tif (pPictApplication.hasOwnProperty('default_configuration'))\n\t{\n\t\ttmpDefaultConfiguration = pPictApplication.default_configuration;\n\n\t\tif (pPictApplication.default_configuration.hasOwnProperty('Hash'))\n\t\t{\n\t\t\ttmpDefaultConfiguration = pPictApplication.default_configuration;\n\t\t\ttmpApplicationHash = pPictApplication.default_configuration.Hash;\n\t\t}\n\t}\n\t_Pict.log.info(`Loading the pict application [${tmpApplicationHash}] and associated views.`);\n\n\t_Pict.addApplication(tmpApplicationHash, tmpDefaultConfiguration, pPictApplication);\n\n\t_Pict.PictApplication.initializeAsync(\n\t\tfunction (pError)\n\t\t{\n\t\t\tif (pError)\n\t\t\t{\n\t\t\t\tconsole.log('Error initializing the pict application: '+pError)\n\t\t\t}\n\t\t\t_Pict.log.info('Loading the Application and associated views.');\n\t\t});\n}\n\n},{}],161:[function(require,module,exports){\n\n/**\n * Provide a safe on document ready function (without needing a framework like jquery)\n *\n * @param {function} fCallback - The function to call when the document is ready\n */\nmodule.exports = function (fCallback)\n{\n\tif (!document)\n\t{\n\t\tconsole.log('No document object found; no initialization happening.');\n\t\treturn;\n\t}\n\t// In case the document is already rendered\n\tif (document.readyState!='loading') fCallback();\n\t// Modern browsers have event listener capabilities\n\telse if (document.addEventListener) document.addEventListener('DOMContentLoaded', fCallback);\n\t// IE <= 8 and ... other abominations\n\telse document.attachEvent('onreadystatechange', function() { if (document.readyState=='complete') fCallback(); });\n}\n\n},{}],162:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst defaultConfiguration = (\n\t{\n\t\t// This is the address for the <script /> tag that contains the CSS.\n\t\tCSSElementAddress: '#PICT-CSS'\n\t}\n)\n\nclass PictCSS extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\t// No merging of options necessary\n\t\tif (typeof(this.options.CSSElementAddress) === 'undefined')\n\t\t{\n\t\t\tthis.options.CSSElementAddress = defaultConfiguration.CSSElementAddress;\n\t\t}\n\n\t\tthis.inlineCSSMap = {};\n\t}\n\n\t// Add a CSS fragment to the CSS map (each view can have its own CSS fragment)\n\t// Hash is shared across all views, so if 10 views all load the \"My-Table-View\" fragment, it will only be loaded once.\n\taddCSS(pHash, pContent, pPriority, pProvider)\n\t{\n\t\tlet tmpPriority = (typeof(pPriority) !== 'undefined') ? pPriority : 1000;\n\t\tlet tmpProvidor = (typeof(pProvider) === 'string') ? pProvider : 'Unknown';\n\t\tthis.inlineCSSMap[pHash] = { Hash: pHash, Content: pContent, Provider: tmpProvidor, Priority:tmpPriority };\n\t}\n\n\tremoveCSS(pHash)\n\t{\n\t\tdelete this.inlineCSSMap[pHash];\n\t}\n\n\tgenerateCSS()\n\t{\n\t\tlet tmpCSS = '';\n\t\tlet tmpCSSHashes = Object.keys(this.inlineCSSMap);\n\t\t// Sort the hashes by Priority\n\t\ttmpCSSHashes.sort((a, b) => { return this.inlineCSSMap[a].Priority - this.inlineCSSMap[b].Priority; });\n\t\tfor (let i = 0; i < tmpCSSHashes.length; i++)\n\t\t{\n\t\t\tlet tmpCSSFragment = this.inlineCSSMap[tmpCSSHashes[i]];\n\t\t\tlet tmpCSSComment = tmpCSSFragment.Hash;\n\t\t\tif (tmpCSSFragment.Hash != tmpCSSFragment.Provider)\n\t\t\t{\n\t\t\t\ttmpCSSComment = `${tmpCSSComment} from ${tmpCSSFragment.Provider}`;\n\t\t\t}\n\t\t\ttmpCSS += `/* ${tmpCSSComment} */\\n${tmpCSSFragment.Content}\\n`;\n\t\t}\n\t\treturn tmpCSS;\n\t}\n\n\t// Inject the CSS into the magic DOM element for it\n\tinjectCSS()\n\t{\n\t\tthis.services.ContentAssignment.assignContent(this.options.CSSElementAddress, this.generateCSS());\n\t}\n}\n\nmodule.exports = PictCSS;\n\n},{\"fable\":58}],163:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\n/**\n * Class for moving content around in the DOM.\n */\nclass PictContentAssignment extends libFableServiceBase\n{\n\t/**\n\t * @param {object} pFable - The Fable library instance.\n\t * @param {object} pOptions - The options for the service.\n\t * @param {object} pServiceHash - The hash of services.\n\t */\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictContentAssignment';\n\n\t\t// Check to see if we are running in a browser\n\t\tthis.inBrowser = false;\n\t\tthis.hasDocument = false;\n\t\tif (typeof (window) == 'object')\n\t\t{\n\t\t\tthis.inBrowser = true;\n\t\t\t// Now check that the browser has a document object\n\t\t\tif ((typeof (window.document) != 'undefined') && (typeof (window.document.querySelectorAll) == 'function'))\n\t\t\t{\n\t\t\t\tthis.hasDocument = true;\n\t\t\t}\n\t\t}\n\n\t\t// If we're in a browser, check to see if jQuery is available.\n\t\tthis.hasJquery = false;\n\t\tthis.jQuery = false;\n\t\tif (this.inBrowser && typeof (window.jQuery) !== 'undefined')\n\t\t{\n\t\t\tthis.hasJquery = true;\n\t\t}\n\n\t\t/**\n\t\t * Set this to override the default mechanism for setting the content of a DOM element.\n\t\t *\n\t\t * @type {Function}\n\t\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t\t * @param {string} pContent - The content to set.\n\t\t */\n\t\tthis.customAssignFunction = false;\n\t\t/**\n\t\t * Set this to override the default mechanism for prepend content to a DOM element.\n\t\t *\n\t\t * @type {Function}\n\t\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t\t * @param {string} pContent - The content to prepend.\n\t\t */\n\t\tthis.customPrependFunction = false;\n\t\t/**\n\t\t * Set this to override the default mechanism for appending content to a DOM element.\n\t\t *\n\t\t * @type {Function}\n\t\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t\t * @param {string} pContent - The content to append.\n\t\t */\n\t\tthis.customAppendFunction = false;\n\n\t\t/**\n\t\t * Set this to override the default mechanism for reading content from the DOM.\n\t\t *\n\t\t * @type {Function}\n\t\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t\t * @return {string} - The content of the element.\n\t\t */\n\t\tthis.customReadFunction = false;\n\t\t/**\n\t\t * Set this to override the default mechanism for getting elements.\n\t\t *\n\t\t * @type {Function}\n\t\t * @param {string} pAddress - The address of the element.\n\t\t * @return {Array<any>} - The matched elements.\n\t\t */\n\t\tthis.customGetElementFunction = false;\n\n\t\t// API Consumers can also craft their own attribute read function\n\t\tthis.customReadAttributeFunction = false;\n\t\t// API Consumers can also craft their own attribute set function\n\t\tthis.customSetAttributeFunction = false;\n\t\t// API Consumers can also craft their own attribute remove function\n\t\tthis.customRemoveAttributeFunction = false;\n\n\t\t// API Consumers can also craft their own class read function\n\t\tthis.customReadClassFunction = false;\n\t\t// API Consumers can also craft their own class set function\n\t\tthis.customSetClassFunction = false;\n\t\t// API Consumers can also craft their own class remove function\n\t\tthis.customRemoveClassFunction = false;\n\t}\n\n\t/**\n\t * Get an element from the DOM.\n\t *\n\t * @param {string} pAddress - The address of the element.\n\t * @return {Array<any>} - The matched elements.\n\t */\n\tgetElement(pAddress)\n\t{\n\t\tif (this.customGetElementFunction)\n\t\t{\n\t\t\treturn this.customGetElementFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpElements = window.jQuery(pAddress);\n\t\t\tif (tmpElements.length == 0)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// TODO: This isn't the most efficient method, but it is the most compatible.\n\t\t\t\tlet tmpElementSet = [];\n\t\t\t\tfor (let i = 0; i < tmpElements.length; i++)\n\t\t\t\t{\n\t\t\t\t\ttmpElementSet.push(tmpElements[i]);\n\t\t\t\t}\n\t\t\t\treturn tmpElementSet;\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\treturn window.document.querySelectorAll(pAddress);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content GET ELEMENT for [${pAddress}] will return empty because none of the browser methods are available`);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tassignContent(pAddress, pContent)\n\t{\n\t\tif (this.customAssignFunction)\n\t\t{\n\t\t\treturn this.customAssignFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element(s)\n\t\t\tlet tmpTargetElementSet = window.jQuery(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\t// Get the element(s)\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content ASSIGN to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\t/**\n\t * Append content to an element.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t * @param {string} pContent - The content to append.\n\t */\n\tappendContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customAppendFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.append(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"beforeend\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content APPEND to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\t/**\n\t * Prepend content to an element.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t * @param {string} pContent - The content to prepend.\n\t */\n\tprependContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customPrependFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.prepend(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"afterbegin\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content PREPEND in [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\t/**\n\t * Read content from an element.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t *\n\t * @return {string} - The content of the element.\n\t */\n\treadContent(pAddress)\n\t{\n\t\tif (this.customReadFunction)\n\t\t{\n\t\t\treturn this.customReadFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\tswitch (tmpTargetElement.prop('tagName'))\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\treturn tmpTargetElement.val();\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\treturn tmpTargetElement.text();\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn tmpTargetElement.html();\n\t\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tif (tmpTargetElementSet.length < 1)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse if (tmpTargetElementSet.length == 1)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[0].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\treturn tmpTargetElementSet[0].value;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\treturn tmpTargetElementSet[0].text;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn tmpTargetElementSet[0].innerHTML;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content READ from [${pAddress}]...`);\n\t\t\treturn '';\n\t\t}\n\t}\n\n\t/**\n\t * Add a class to an element.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t * @param {string} pClass - The class to add.\n\t */\n\taddClass(pAddress, pClass)\n\t{\n\t\tif (this.customSetClassFunction)\n\t\t{\n\t\t\treturn this.customSetClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.addClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.add(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content ADDCLASS to [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\t/**\n\t * Remove a class from an element.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t * @param {string} pClass - The class to remove.\n\t */\n\tremoveClass(pAddress, pClass)\n\t{\n\t\tif (this.customRemoveClassFunction)\n\t\t{\n\t\t\treturn this.customRemoveClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.remove(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVECLASS from [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\t/**\n\t * Read an attribute from an element.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t * @param {string} pAttribute - The attribute name to read.\n\t */\n\treadAttribute(pAddress, pAttribute)\n\t{\n\t\tif (this.customReadAttributeFunction)\n\t\t{\n\t\t\treturn this.customReadAttributeFunction(pAddress, pAttribute);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\treturn tmpTargetElement.attr(pAttribute);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].getAttribute(pAttribute);\n\t\t\t}\n\t\t\treturn tmpTargetElementSet;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content READATTRIBUTE from [${pAddress}]:`, pAttribute);\n\t\t}\n\t}\n\n\t/**\n\t * Set an attribute on an element.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t * @param {string} pAttribute - The attribute name to set.\n\t * @param {string} pValue - The value to set.\n\t */\n\tsetAttribute(pAddress, pAttribute, pValue)\n\t{\n\t\tif (this.customSetAttributeFunction)\n\t\t{\n\t\t\treturn this.customSetAttributeFunction(pAddress, pAttribute, pValue);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.attr(pAttribute, pValue);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].setAttribute(pAttribute, pValue);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content SETATTRIBUTE for [${pAddress}] ATTRIBUTE [${pAttribute}]:`, pValue);\n\t\t}\n\t}\n\n\t/**\n\t * Remove an attribute from an element.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t * @param {string} pAttribute - The attribute name to remove.\n\t */\n\tremoveAttribute(pAddress, pAttribute)\n\t{\n\t\tif (this.customRemoveAttributeFunction)\n\t\t{\n\t\t\treturn this.customRemoveAttributeFunction(pAddress, pAttribute);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeAttr(pAttribute);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].removeAttribute(pAttribute);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVEATTRIBUTE for [${pAddress}] ATTRIBUTE [${pAttribute}]`);\n\t\t}\n\t}\n\n\t/**\n\t * Check if an element has a class.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t * @param {string} pClass - The class to check for.\n\t *\n\t * @return {boolean} - Whether the element has the class. If multiple elements are matched, returns true if any have the class.\n\t */\n\thasClass(pAddress, pClass)\n\t{\n\t\tif (this.customReadClassFunction)\n\t\t{\n\t\t\treturn this.customReadClassFunction(pAddress, pClass);\n\t\t}\n\t\tif (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\treturn tmpTargetElement.hasClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tif (tmpTargetElementSet[i].classList.contains(pClass))\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content HASCLASS for [${pAddress}] CLASS [${pClass}]:`);\n\t\t}\n\t}\n}\n\nmodule.exports = PictContentAssignment;\n\n},{\"fable\":58}],164:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictDataProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictDataProvider';\n\t}\n\n\tgetDataByAddress(pAddress, pData)\n\t{\n\t\tlet tmpData = (typeof(pData) === 'undefined') ? {} : pData;\n\n\t\treturn this.fable.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, pAddress);\n\t}\n}\n\nmodule.exports = PictDataProvider;\n\n},{\"fable\":58}],165:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictMeadowEntityProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictMeadowProvider';\n\n\t\tif (this.fable.settings.PictDefaultURLPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = this.fable.settings.PictDefaultURLPrefix;\n\t\t}\n\t\telse if (!this.options.urlPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = '/1.0/';\n\t\t}\n\n\t\tif (this.fable.settings.PictDefaultDownloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = this.fable.settings.PictDefaultDownloadBatchSize;\n\t\t}\n\t\telse if (!this.options.downloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = 100;\n\t\t}\n\n\t\tthis.restClient = this.fable.instantiateServiceProviderWithoutRegistration('RestClient');\n\n\t\tthis.cache = {};\n\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tinitializeCache(pEntity)\n\t{\n\t\t// This should not be happening as often as it's happening.\n\t\tif (!this.cache.hasOwnProperty(pEntity))\n\t\t{\n\t\t\tthis.cache[pEntity] = this.fable.instantiateServiceProviderWithoutRegistration('ObjectCache');\n\t\t\t// TODO: Make this a configuration?\n\t\t\t// For now cache for 30 seconds.\n\t\t\tthis.cache[pEntity].maxAge = 30000;\n\t\t\tthis.cache[pEntity].maxLength = 10000;\n\n\t\t\tthis.fable.Bundle[pEntity] = this.cache[pEntity].RecordMap;\n\t\t}\n\t}\n\n\tgetEntity(pEntity, pIDRecord, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\tfunction ()\n\t\t\t{\n\t\t\t\tlet tmpPossibleRecord = this.cache[pEntity].read(pIDRecord);\n\n\t\t\t\tif (tmpPossibleRecord)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(null, tmpPossibleRecord);\n\t\t\t\t}\n\n\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}/${pIDRecord}`\n\t\t\t\t\t});\n\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pBody)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.cache[pEntity].put(pBody, pIDRecord);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pBody);\n\t\t\t\t\t});\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySetPage(pEntity, pMeadowFilterExpression, pRecordStartCursor, pRecordCount, fCallback)\n\t{\n\t\tlet tmpURL = `${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${pRecordStartCursor}/${pRecordCount}`;\n\n\t\treturn this.restClient.getJSON(tmpURL,\n\t\t\tfunction (pDownloadError, pDownloadResponse, pDownloadBody)\n\t\t\t{\n\t\t\t\treturn fCallback(pDownloadError, pDownloadBody);\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySetRecordCount(pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\tlet tmpURL = `${this.options.urlPrefix}${pEntity}s/Count/FilteredTo/${pMeadowFilterExpression}`;\n\n\t\treturn this.restClient.getJSON(tmpURL,\n\t\t\tfunction (pError, pResponse, pBody)\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\tthis.log.error(`Error getting entity count of [${pEntity}] filtered to [${pMeadowFilterExpression}] from url [${tmpURL}]: ${pError}`);\n\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t}\n\t\t\t\tlet tmpRecordCount = 0;\n\t\t\t\tif (pBody.Count)\n\t\t\t\t{\n\t\t\t\t\ttmpRecordCount = pBody.Count;\n\t\t\t\t}\n\t\t\t\treturn fCallback(pError, tmpRecordCount);\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySet(pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\t// TODO: Should we test for too many record IDs here by string length in pMeadowFilterExpression?\n\t\t//       FBL~ID${pDestinationEntity}~INN~${tmpIDRecordsCommaSeparated}\n\t\t//       If the list is mega-long we can parse it and break it into chunks.\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\tfunction ()\n\t\t\t{\n\t\t\t\treturn this.getEntitySetRecordCount(pEntity, pMeadowFilterExpression,\n\t\t\t\t\t(pRecordCountError, pRecordCount) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pRecordCountError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn fCallback(pRecordCountError);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet tmpRecordCount = pRecordCount;\n\n\t\t\t\t\t\tif (isNaN(pRecordCount))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Entity count did not return a number for [${pEntity}] filtered to [${pMeadowFilterExpression}]... something is fatally wrong from the server accessed in getEntitySet call.`);\n\t\t\t\t\t\t\treturn fCallback(new Error('Entity count did not return a number in getEntitySet.'));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpDownloadURIFragments = [];\n\t\t\t\t\t\tlet tmpDownloadBatchSize = this.options.downloadBatchSize;\n\t\t\t\t\t\tfor (let i = 0; i < (tmpRecordCount / tmpDownloadBatchSize); i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Generate each of the URI fragments to download\n\t\t\t\t\t\t\ttmpDownloadURIFragments.push(`${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${i * tmpDownloadBatchSize}/${tmpDownloadBatchSize}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpEntitySet = [];\n\n\t\t\t\t\t\t// Now run these in series (it's possible to parallelize the requests but they would not be in server order)\n\t\t\t\t\t\tthis.fable.Utility.eachLimit(tmpDownloadURIFragments, 1,\n\t\t\t\t\t\t\t(pURIFragment, fDownloadCallback) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.restClient.getJSON(pURIFragment,\n\t\t\t\t\t\t\t\t\t(pDownloadError, pDownloadResponse, pDownloadBody) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmpEntitySet = tmpEntitySet.concat(pDownloadBody);\n\t\t\t\t\t\t\t\t\t\t// Should we be caching each record?\n\t\t\t\t\t\t\t\t\t\treturn fDownloadCallback(pDownloadError);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(pFullDownloadError) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(pFullDownloadError, tmpEntitySet);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t}.bind(this));\n\t}\n}\n\nmodule.exports = PictMeadowEntityProvider;\n\n},{\"fable\":58}],166:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictTemplateProvider extends libFableServiceBase\n{\n\t/**\n\t * @param {Object} pFable - The Fable Framework instance\n\t * @param {Object} pOptions - The options for the service\n\t * @param {String} pServiceHash - The hash of the service\n\t */\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictTemplateProvider';\n\n\t\tthis.templates = {};\n\t\tthis.templateSources = {};\n\n\t\t// Default templates are stored by prefix.\n\t\t// The longest prefix match is used.\n\t\t// Case sensitive.\n\t\tthis.defaultTemplates = [];\n\n\t\t/**\n\t\t * @property {Function} loadTemplateFunction - The function to load a template\n\t\t */\n\t\tthis.loadTemplateFunction = () => { return false; };\n\t}\n\n\t/**\n\t * Add a template to the provider.\n\t *\n\t * @param {String} pTemplateHash - The hash of the template\n\t * @param {String} pTemplate - The template\n\t * @param {String} [pTemplateSource] - (optional) The source of the template\n\t */\n\taddTemplate(pTemplateHash, pTemplate, pTemplateSource)\n\t{\n\t\tthis.templates[pTemplateHash] = pTemplate;\n\n\t\tif (typeof(pTemplateSource) == 'string')\n\t\t{\n\t\t\tthis.templateSources[pTemplateHash] = pTemplateSource;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.templateSources[pTemplateHash] = `Direct addTemplate('${pTemplateHash}') function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`;\n\t\t}\n\t}\n\n\t/**\n\t * Add a default template to the provider.\n\t *\n\t * @param {String} pPrefix - The prefix of the template identifier.\n\t * @param {String} pPostfix - The postfix of the template identifier.\n\t * @param {String} pTemplate - The template\n\t * @param {String} [pSource] - (optional) The source of the template\n\t */\n\taddDefaultTemplate(pPrefix, pPostfix, pTemplate, pSource)\n\t{\n\t\tlet tmpSource = (typeof(pSource) == 'string') ? pSource : `Direct addDefaultTemplate('${pPrefix}','${pPostfix}',..) function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`\n\t\tlet tmpDefaultTemplate = {\n\t\t\tprefix: pPrefix,\n\t\t\tpostfix: pPostfix,\n\t\t\ttemplate: pTemplate,\n\t\t\tsource: tmpSource\n\t\t};\n\t\tif (typeof(pTemplate) != 'string')\n\t\t{\n\t\t\tthis.log.error('PictTemplateProvider.addDefaultTemplate: pTemplate is not a string.');\n\t\t}\n\t\tthis.defaultTemplates.push(tmpDefaultTemplate);\n\t}\n\n\t/**\n\t * Attempt to populate a template to a default template if it matches a given hash.\n\t *\n\t * Default templates are managed by postfix and prefix.  The use case is things like titles, headers, list\n\t * wrappers, rows, etc.\n\t *\n\t * So we might have a default template for a list wrapper and it should expect \"-ListWrap\" as the postfix.\n\t * And we might have a default template for a list row and it should expect \"-ListRow\" as the postfix.\n\t * The list might have a \"-ListTitle\", or we might have shared titles and it would just be \"-Title\".\n\t *\n\t * The idea is to allow fallbacks on defaults.\n\t *\n\t * @param {String} pTemplateHash - The hash of the template\n\t * @return {string} - The template, or false if not found\n\t */\n\tcheckDefaultTemplateHash(pTemplateHash)\n\t{\n\t\tfor (let i = 0; i < this.defaultTemplates.length; i++)\n\t\t{\n\t\t\tif ((pTemplateHash.indexOf(this.defaultTemplates[i].postfix) == pTemplateHash.length - this.defaultTemplates[i].postfix.length)\n\t\t\t\t&& (pTemplateHash.indexOf(this.defaultTemplates[i].prefix) == 0))\n\t\t\t{\n\t\t\t\tthis.templates[pTemplateHash] = this.defaultTemplates[i].template;\n\t\t\t\tthis.templateSources[pTemplateHash] = `Auto created in checkDefaultTemplateHash('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${this.defaultTemplates[i].prefix}]...[${this.defaultTemplates[i].postfix}]`;\n\t\t\t\treturn this.templates[pTemplateHash];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get a template by hash.\n\t *\n\t * @param {String} pTemplateHash - The hash of the template\n\t * @return {String} - The template, or false if not found\n\t */\n\tgetTemplate(pTemplateHash)\n\t{\n\t\t// TODO: Optimize this.\n\t\t// If the template doesn't exist, try to load it with the loading function\n\t\tif (!this.templates.hasOwnProperty(pTemplateHash))\n\t\t{\n\t\t\tthis.loadTemplate(pTemplateHash);\n\t\t}\n\t\t// If the loading function fails, try to load it from the default templates\n\t\tif (!this.templates.hasOwnProperty(pTemplateHash))\n\t\t{\n\t\t\tthis.checkDefaultTemplateHash(pTemplateHash);\n\t\t}\n\t\tif (this.templates.hasOwnProperty(pTemplateHash))\n\t\t{\n\t\t\treturn this.templates[pTemplateHash];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Load a template by hash.\n\t *\n\t * @param {String} pTemplateHash - The hash of the template\n\t */\n\tloadTemplate(pTemplateHash)\n\t{\n\t\tlet tmpTemplate = this.loadTemplateFunction(pTemplateHash);\n\n\t\tif (tmpTemplate)\n\t\t{\n\t\t\tthis.templates[pTemplateHash] = tmpTemplate.template;\n\t\t\tthis.templateSources[pTemplateHash] = `Loaded in loadTemplate('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${tmpTemplate.source}]`;\n\n\t\t}\n\n\t\treturn tmpTemplate;\n\t}\n}\n\nmodule.exports = PictTemplateProvider;\n\n},{\"fable\":58}],167:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nconst libFable = require('fable');\nconst PictTemplateProvider = require('./Pict-Template-Provider.js');\nconst PictContentAssignment = require('./Pict-Content-Assignment.js');\nconst PictDataProvider = require('./Pict-DataProvider.js');\nconst PictCSS = require('./Pict-CSS.js');\nconst PictMeadowEntityProvider = require('./Pict-Meadow-EntityProvider.js');\n\n/**\n * Pict management object.\n */\nclass Pict extends libFable\n{\n\t/**\n\t * @param {Object} pSettings - The settings for the Pict instance.\n\t */\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\tthis.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n\n\t\t/**\n\t\t * The templateProvider provides a basic key->template mapping with default fallback capabilities\n\t\t *\n\t\t * @type {PictTemplateProvider}\n\t\t */\n\t\tthis.TemplateProvider = null;\n\t\tthis.addAndInstantiateServiceType('TemplateProvider', PictTemplateProvider);\n\t\t/**\n\t\t * The meadow entity provider.\n\t\t *\n\t\t * @type {PictMeadowEntityProvider}\n\t\t */\n\t\tthis.EntityProvider = null;\n\t\tthis.addAndInstantiateServiceType('EntityProvider', PictMeadowEntityProvider);\n\t\t/**\n\t\t * The data provider.\n\t\t *\n\t\t * @type {PictDataProvider}\n\t\t */\n\t\tthis.DataProvider = null;\n\t\tthis.addAndInstantiateServiceType('DataProvider', PictDataProvider);\n\t\t/**\n\t\t * The content assignment module.\n\t\t *\n\t\t * @type {PictContentAssignment}\n\t\t */\n\t\tthis.ContentAssignment = null;\n\t\tthis.addAndInstantiateServiceType('ContentAssignment', PictContentAssignment);\n\t\t/**\n\t\t * The CSS module.\n\t\t *\n\t\t * @type {PictCSS}\n\t\t * @public\n\t\t */\n\t\tthis.CSSMap = null;\n\t\tthis.addAndInstantiateServiceType('CSSMap', PictCSS);\n\n\t\tthis.instantiateServiceProvider('MetaTemplate');\n\t\tthis.instantiateServiceProvider('DataGeneration');\n\n\t\tthis.manifest = this.instantiateServiceProvider('Manifest');\n\n\t\tthis.AppData = {};\n\t\tthis.Bundle = {};\n\n\t\t// Log noisness goes from 0 - 5, where 5 is show me everything.\n\t\tthis.LogNoisiness = 0;\n\t\t// Although we have log noisiness, sometimes we need control flow without all the other noise for hard to diagnose interpreters.\n\t\tthis.LogControlFlow = false;\n\t\t// And an easy way to be introspective about data at various locations\n\t\tthis.LogControlFlowWatchAddressList = [];\n\n\t\t// Load manifest sets\n\t\tif (this.settings.Manifests)\n\t\t{\n\t\t\tthis.loadManifestSet(this.settings.Manifests);\n\t\t}\n\n\t\tthis._DefaultPictTemplatesInitialized = false;\n\t\tthis.initializePictTemplateEngine();\n\n\t\tthis.addServiceType('PictView', require('pict-view'));\n\t\tthis.addServiceType('PictProvider', require('pict-provider'));\n\t\tthis.addServiceType('PictApplication', require('pict-application'));\n\n\t\t// Expose the named views directly, through a convenience accessor\n\t\tthis.views = this.servicesMap.PictView;\n\t\tthis.providers = this.servicesMap.PictProvider;\n\t}\n\n\t/**\n\t * Load manifests in as Hashed services\n\t *\n\t * @param {Object} pManifestSet - The manifest set to load.\n\t */\n\tloadManifestSet(pManifestSet)\n\t{\n\t\tif (typeof(pManifestSet) != 'object')\n\t\t{\n\t\t\tthis.log.warn(`PICT [${this.UUID}] could not load Manifest Set; pManifestSet was not an object.`);\n\t\t\treturn false;\n\t\t}\n\t\tlet tmpManifestKeys = Object.keys(pManifestSet);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++ )\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.instantiateServiceProvider('Manifest', pManifestSet[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Just passing an options will construct one for us.\n\t * Passing a hash will set the hash.\n\t * Passing a prototype will use that!\n\t *\n\t * @param {String} pViewHash - The hash of the view.\n\t * @param {Object} pOptions - The options for the view.\n\t * @param {Object} pViewPrototype - The prototype for the view.\n\t */\n\taddView(pViewHash, pOptions, pViewPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpViewHash = (typeof(pViewHash) == 'string') ? pViewHash : this.fable.getUUID();\n\n\t\tif (this.LogControlFlow)\n\t\t{\n\t\t\tif (this.LogNoisiness > 1)\n\t\t\t{\n\t\t\t\tthis.log.info(`PICT-ControlFlow addView [${tmpViewHash}]:`, {Options:tmpOptions});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.log.info(`PICT-ControlFlow addView [${tmpViewHash}]`)\n\t\t\t}\n\t\t}\n\n\t\tif (typeof(pViewPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pViewPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, JSON.parse(JSON.stringify(pViewPrototype.default_configuration)), tmpOptions);\n\t\t\t}\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictView', tmpOptions, tmpViewHash, pViewPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictView', tmpOptions, tmpViewHash);\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddProvider(pProviderHash, pOptions, pProviderPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpProviderHash = (typeof(pProviderHash) == 'string') ? pProviderHash : this.fable.getUUID();\n\n\t\tif (this.LogControlFlow)\n\t\t{\n\t\t\tif (this.LogNoisiness > 1)\n\t\t\t{\n\t\t\t\tthis.log.info(`PICT-ControlFlow addProvider [${tmpProviderHash}]:`, {Options:tmpOptions});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.log.info(`PICT-ControlFlow addProvider [${tmpProviderHash}]`)\n\t\t\t}\n\t\t}\n\n\t\tif (typeof(pProviderPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pProviderPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pProviderPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictProvider', tmpOptions, tmpProviderHash, pProviderPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictProvider', tmpOptions, tmpProviderHash);\n\t\t}\n\t}\n\n\t/**\n\t * Just passing an options will construct one for us.\n\t * Passing a hash will set the hash.\n\t * Passing a prototype will use that!\n\t *\n\t * @param {String} pApplicationHash - The hash of the application.\n\t * @param {Object} pOptions - The options for the application.\n\t * @param {Object} pApplicationPrototype - The prototype for the application.\n\t */\n\taddApplication(pApplicationHash, pOptions, pApplicationPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpApplicationHash = (typeof(pApplicationHash) == 'string') ? pApplicationHash : this.fable.getUUID();\n\n\t\tif (this.LogControlFlow)\n\t\t{\n\t\t\tif (this.LogNoisiness > 1)\n\t\t\t{\n\t\t\t\tthis.log.info(`PICT-ControlFlow addApplication [${tmpApplicationHash}]:`, {Options:tmpOptions});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.log.info(`PICT-ControlFlow addApplication [${tmpApplicationHash}]`)\n\t\t\t}\n\t\t}\n\n\t\tif (typeof(pApplicationPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pApplicationPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pApplicationPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictApplication', tmpOptions, tmpApplicationHash, pApplicationPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictApplication', tmpOptions, tmpApplicationHash);\n\t\t}\n\t}\n\n\t/**\n\t * Attach the default template engine renderers.\n\t *\n\t * @private\n\t */\n\tinitializePictTemplateEngine()\n\t{\n\t\t/*\n\t\t *\n\t\t * To stave off madness, these are inefficient for now.  The wkhtmltopdf renderer leaves much to be desired\n\t\t * in the way of feedback with regards to javascript compatibility.\n\t\t *\n\t\t */\n\t\tif (!this._DefaultPictTemplatesInitialized)\n\t\t{\n\t\t\t// Expects one of the following:\n\t\t\t// \t\t{~E:Book^AppData.Some.Address.IDBook^Render-Book-Template~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook and render it to Render-Book-Template\n\t\t\tlet fEntityRender = (pHash, pData, fCallback, pContextArray) =>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpEntity = false;\n\t\t\t\t\tlet tmpEntityID = false;\n\t\t\t\t\tlet tmpEntityTemplate = false;\n\n\t\t\t\t\t// This expression requires 2 parts -- a third is optional, and, if present, is the template to render to.\n\t\t\t\t\tlet tmpAddressParts = tmpHash.split('^');\n\n\t\t\t\t\tif (tmpAddressParts.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpEntity = tmpAddressParts[0].trim();\n\t\t\t\t\ttmpEntityID = tmpAddressParts[1].trim();\n\t\t\t\t\ttmpEntityTemplate = tmpAddressParts[2].trim();\n\n\t\t\t\t\tif (!isNaN(tmpEntityID))\n\t\t\t\t\t{\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpEntityID = parseInt(tmpEntityID);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Could not parse entity ID.`);\n\t\t\t\t\t\t\ttmpEntityID = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is an address, so we need to get the value at the address\n\t\t\t\t\t\ttmpEntityID = this.resolveStateFromAddress(tmpEntityID, tmpData, pContextArray);\n\t\t\t\t\t}\n\n\t\t\t\t\t// No Entity or EntityID\n\t\t\t\t\tif (!tmpEntity || !tmpEntityID)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]  Entity: ${tmpEntity} ID: ${tmpEntityID}`);\n\t\t\t\t\t\treturn tmpCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]  Entity: ${tmpEntity} ID: ${tmpEntityID}`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`Pict: Entity Render: Entity [${tmpEntity}] with ID [${tmpEntityID}] as template [${tmpEntityTemplate}] from [${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to get the entity\n\t\t\t\t\tthis.EntityProvider.getEntity(tmpEntity, tmpEntityID,\n\t\t\t\t\t\tfunction (pError, pRecord)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Pict: Entity Render: Error getting entity [${tmpEntity}] with ID [${tmpEntityID}] for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Now render the template\n\t\t\t\t\t\t\tif (tmpEntityTemplate)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpEntityTemplate, pRecord, tmpCallback, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn tmpCallback(null, '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(this));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternAsync('{~E:', '~}', fEntityRender);\n\t\t\tthis.MetaTemplate.addPatternAsync('{~Entity:', '~}', fEntityRender);\n\n\t\t\t// {~T:Template:AddressOfData~}\n\t\t\tlet fTemplateRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData, null, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray), null, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateRenderAsync = (pHash, pData, fCallback, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render Async: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render Async: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray),\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~T:', '~}', fTemplateRender, fTemplateRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~Template:', '~}', fTemplateRender, fTemplateRenderAsync);\n\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateSetRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray), pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateSetRenderAsync = (pHash, pData, fCallback, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0]\n\t\t\t\t\ttmpAddressOfData = tmpTemplateHashPart[1];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\ttmpData = this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray);\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TS:', '~}', fTemplateSetRender, fTemplateSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateSet:', '~}', fTemplateSetRender, fTemplateSetRenderAsync);\n\n\t\t\t// {~TemplateIfAbsolute:Template:AddressOfData:AppData.Some.Address.IDBook^OPERATOR^Absolute_Value~}\n\t\t\t// {~TIfAbs:Template:AddressOfData:AppData.Some.Address.IDBook^OPERATOR^Absolute_Value~}\n\t\t\tlet compareValues = (pValueLeft, pOperator, pValueRight)=>\n\t\t\t{\n\t\t\t\tswitch(pOperator)\n\t\t\t\t{\n\t\t\t\t\tcase 'TRUE':\n\t\t\t\t\t\treturn (pValueLeft === true);\n\t\t\t\t\tcase 'FALSE':\n\t\t\t\t\t\treturn (pValueLeft === false);\n\t\t\t\t\tcase 'LNGT':\n\t\t\t\t\tcase 'LENGTH_GREATER_THAN':\n\t\t\t\t\t\tswitch(typeof(pValueLeft))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'string':\n\t\t\t\t\t\t\t\treturn (pValueLeft.length > pValueRight);\n\t\t\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t\t\treturn (pValueLeft.length > pValueRight);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'LNLT':\n\t\t\t\t\tcase 'LENGTH_LESS_THAN':\n\t\t\t\t\t\tswitch(typeof(pValueLeft))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'string':\n\t\t\t\t\t\t\t\treturn (pValueLeft.length < pValueRight);\n\t\t\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t\t\treturn (pValueLeft.length < pValueRight);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase '!=':\n\t\t\t\t\t\treturn (pValueLeft != pValueRight);\n\t\t\t\t\tcase '<':\n\t\t\t\t\t\treturn (pValueLeft < pValueRight);\n\t\t\t\t\tcase '>':\n\t\t\t\t\t\treturn (pValueLeft > pValueRight);\n\t\t\t\t\tcase '<=':\n\t\t\t\t\t\treturn (pValueLeft <= pValueRight);\n\t\t\t\t\tcase '>=':\n\t\t\t\t\t\treturn (pValueLeft >= pValueRight);\n\t\t\t\t\tcase '===':\n\t\t\t\t\t\treturn (pValueLeft === pValueRight);\n\t\t\t\t\tcase '==':\n\t\t\t\t\t\treturn (pValueLeft == pValueRight);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet fTemplateIfAbsoluteValueRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateIfAbsoluteValueRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateIfAbsoluteValueRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\t\t\t\t\tlet tmpComparisonOperation = false;\n\n\t\t\t\t\tlet tmpHashParts = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpHashParts.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template If Absolute Value Render: TemplateHash not complete for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template If Absolute Value Render: TemplateHash not complete for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateHash = tmpHashParts[0];\n\t\t\t\t\ttmpAddressOfData = tmpHashParts[1];\n\t\t\t\t\ttmpComparisonOperation = tmpHashParts[2];\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\t\t\t\t\t// No comparison operation\n\t\t\t\t\tif (!tmpComparisonOperation)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: Comparison Operation not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: Comparison Operation not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to break the comparison into three parts...\n\t\t\t\t\tlet tmpComparisonParts = tmpComparisonOperation.split('^');\n\t\t\t\t\tif (tmpComparisonParts.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: Comparison Operation not complete (three parts expected) for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: Comparison Operation not complete (three parts expected) for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now look up the data at the comparison location\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpComparisonResult = compareValues(this.resolveStateFromAddress(tmpComparisonParts[0], tmpData, pContextArray), tmpComparisonParts[1], tmpComparisonParts[2]);\n\t\t\t\t\t\tif (!tmpComparisonResult)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData, null, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray), null, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`Pict: Template Render: Error looking up comparison data for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\treturn `Pict: Template Render: Error looking up comparison data for [${tmpHash}]: ${pError}`;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateIfAbsoluteValueRenderAsync = (pHash, pData, fCallback, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateIfAbsoluteValueRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateIfAbsoluteValueRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\t\t\t\t\tlet tmpComparisonOperation = false;\n\n\t\t\t\t\tlet tmpHashParts = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpHashParts.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template If Absolute Value Render: TemplateHash not complete for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(new Error(`Pict: Template If Absolute Value Render: TemplateHash not complete for [${tmpHash}]`));\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateHash = tmpHashParts[0];\n\t\t\t\t\ttmpAddressOfData = tmpHashParts[1];\n\t\t\t\t\ttmpComparisonOperation = tmpHashParts[2];\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(new Error(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`));\n\t\t\t\t\t}\n\t\t\t\t\t// No comparison operation\n\t\t\t\t\tif (!tmpComparisonOperation)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: Comparison Operation not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(new Error(`Pict: Template Render: Comparison Operation not resolved for [${tmpHash}]`));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to break the comparison into three parts...\n\t\t\t\t\tlet tmpComparisonParts = tmpComparisonOperation.split('^');\n\t\t\t\t\tif (tmpComparisonParts.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: Comparison Operation not complete (three parts expected) for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(new Error(`Pict: Template Render: Comparison Operation not complete (three parts expected) for [${tmpHash}]`));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now look up the data at the comparison location\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpComparisonResult = compareValues(this.resolveStateFromAddress(tmpComparisonParts[0], tmpData, pContextArray), tmpComparisonParts[1], tmpComparisonParts[2]);\n\t\t\t\t\t\tif (!tmpComparisonResult)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn tmpCallback(null, '');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData,\n\t\t\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray),\n\t\t\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`Pict: Template Render: Error looking up comparison data for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t// {~TemplateIfAbsolute:Template:AddressOfData:AppData.Some.Address.IDBook^OPERATOR^Absolute_Value~}\n\t\t\t// {~TIfAbs:Template:AddressOfData:AppData.Some.Address.IDBook^OPERATOR^Absolute_Value~}\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateIfAbsolute:', '~}', fTemplateIfAbsoluteValueRender, fTemplateIfAbsoluteValueRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TIfAbs:', '~}', fTemplateIfAbsoluteValueRender, fTemplateIfAbsoluteValueRenderAsync);\n\n\t\t\tlet fTemplateIfRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateIfAbsoluteValueRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateIfAbsoluteValueRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\t\t\t\t\tlet tmpComparisonOperation = false;\n\n\t\t\t\t\tlet tmpHashParts = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpHashParts.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template If Absolute Value Render: TemplateHash not complete for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template If Absolute Value Render: TemplateHash not complete for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateHash = tmpHashParts[0];\n\t\t\t\t\ttmpAddressOfData = tmpHashParts[1];\n\t\t\t\t\ttmpComparisonOperation = tmpHashParts[2];\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\t\t\t\t\t// No comparison operation\n\t\t\t\t\tif (!tmpComparisonOperation)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: Comparison Operation not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: Comparison Operation not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to break the comparison into three parts...\n\t\t\t\t\tlet tmpComparisonParts = tmpComparisonOperation.split('^');\n\t\t\t\t\tif (tmpComparisonParts.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: Comparison Operation not complete (three parts expected) for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: Comparison Operation not complete (three parts expected) for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now look up the data at the comparison location\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpComparisonResult = compareValues(\n\t\t\t\t\t\t\t\tthis.resolveStateFromAddress(tmpComparisonParts[0], tmpData, pContextArray),\n\t\t\t\t\t\t\t\ttmpComparisonParts[1],\n\t\t\t\t\t\t\t\tthis.resolveStateFromAddress(tmpComparisonParts[2], tmpData, pContextArray));\n\n\t\t\t\t\t\tif (!tmpComparisonResult)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData, null, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray), null, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`Pict: Template Render: Error looking up comparison data for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\treturn `Pict: Template Render: Error looking up comparison data for [${tmpHash}]: ${pError}`;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateIfRenderAsync = (pHash, pData, fCallback, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateIfAbsoluteValueRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateIfAbsoluteValueRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\t\t\t\t\tlet tmpComparisonOperation = false;\n\n\t\t\t\t\tlet tmpHashParts = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpHashParts.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template If Absolute Value Render: TemplateHash not complete for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(new Error(`Pict: Template If Absolute Value Render: TemplateHash not complete for [${tmpHash}]`));\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateHash = tmpHashParts[0];\n\t\t\t\t\ttmpAddressOfData = tmpHashParts[1];\n\t\t\t\t\ttmpComparisonOperation = tmpHashParts[2];\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(new Error(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`));\n\t\t\t\t\t}\n\t\t\t\t\t// No comparison operation\n\t\t\t\t\tif (!tmpComparisonOperation)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: Comparison Operation not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(new Error(`Pict: Template Render: Comparison Operation not resolved for [${tmpHash}]`));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to break the comparison into three parts...\n\t\t\t\t\tlet tmpComparisonParts = tmpComparisonOperation.split('^');\n\t\t\t\t\tif (tmpComparisonParts.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: Comparison Operation not complete (three parts expected) for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(new Error(`Pict: Template Render: Comparison Operation not complete (three parts expected) for [${tmpHash}]`));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now look up the data at the comparison location\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the only thing that's different from the absolute value function above.  Collapse these.\n\t\t\t\t\t\tlet tmpComparisonResult = compareValues(\n\t\t\t\t\t\t\t\tthis.resolveStateFromAddress(tmpComparisonParts[0], tmpData, pContextArray),\n\t\t\t\t\t\t\t\ttmpComparisonParts[1],\n\t\t\t\t\t\t\t\tthis.resolveStateFromAddress(tmpComparisonParts[2], tmpData, pContextArray));\n\n\t\t\t\t\t\tif (!tmpComparisonResult)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn tmpCallback(null, '');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData,\n\t\t\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray),\n\t\t\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`Pict: Template Render: Error looking up comparison data for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t// {~TemplateIf:Template:AddressOfData:AppData.Some.Address.IDBook^OPERATOR^AppData.Some.Address2.IDBook~}\n\t\t\t// {~TIf:Template:AddressOfData:AppData.Some.Address.IDBook^OPERATOR^AppData.Some.Address2.IDBook~}\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateIf:', '~}', fTemplateIfRender, fTemplateIfRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TIf:', '~}', fTemplateIfRender, fTemplateIfRenderAsync);\n\n// Refactor: #### DRY PROBLEM Too much dry needing fixed at this point\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateValueSetRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray);\n\n\t\t\t\t\tlet tmpDataValueSet = [];\n\t\t\t\t\tif (Array.isArray(tmpData))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < tmpData.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[i]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof(tmpData) === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueKeys = Object.keys(tmpData);\n\t\t\t\t\t\tfor (let i = 0; i < tmpValueKeys.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[tmpValueKeys[i]]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData});\n\t\t\t\t\t}\n\t\t\t\t\ttmpData = tmpDataValueSet;\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, tmpData, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateValueSetRenderAsync = (pHash, pData, fCallback, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0]\n\t\t\t\t\ttmpAddressOfData = tmpTemplateHashPart[1];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\ttmpData = this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray);\n\n\t\t\t\t\tlet tmpDataValueSet = [];\n\t\t\t\t\tif (Array.isArray(tmpData))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < tmpData.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[i]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof(tmpData) === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueKeys = Object.keys(tmpData);\n\t\t\t\t\t\tfor (let i = 0; i < tmpValueKeys.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[tmpValueKeys[i]]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData});\n\t\t\t\t\t}\n\t\t\t\t\ttmpData = tmpDataValueSet;\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TVS:', '~}', fTemplateValueSetRender, fTemplateValueSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateValueSet:', '~}', fTemplateValueSetRender, fTemplateValueSetRenderAsync);\n\n\t\t\t// {~T:TemplateFromMap:AddressOfData~}\n\t\t\tlet fTemplateFromMapRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.resolveStateFromAddress(tmpAddressOfMap, tmpData, pContextArray);\n\t\t\t\t\tlet tmpKey = this.resolveStateFromAddress(tmpAddressOfKey, tmpData, pContextArray);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, pData, null, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, tmpData, null, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateFromMapRenderAsync = (pHash, pData, fCallback, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.resolveStateFromAddress(tmpAddressOfMap, tmpData, pContextArray);\n\t\t\t\t\tlet tmpKey = this.resolveStateFromAddress(tmpAddressOfKey, tmpData, pContextArray);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from TemplateFromMaps\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TFM:', '~}', fTemplateFromMapRender, fTemplateFromMapRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateFromMap:', '~}', fTemplateFromMapRender, fTemplateFromMapRenderAsync);\n\n\t\t\t// {~TS:TemplateFromMap:AddressOfDataSet~}\n\t\t\tlet fTemplateFromMapSetRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.resolveStateFromAddress(tmpAddressOfMap, tmpData, pContextArray);\n\t\t\t\t\tlet tmpKey = this.resolveStateFromAddress(tmpAddressOfKey, tmpData, pContextArray);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateFromMapSetRenderAsync = (pHash, pData, fCallback, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMapSet Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.resolveStateFromAddress(tmpAddressOfMap, tmpData, pContextArray);\n\t\t\t\t\tlet tmpKey = this.resolveStateFromAddress(tmpAddressOfKey, tmpData, pContextArray);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMapSet Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from TemplateFromMaps\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TSFM:', '~}', fTemplateFromMapSetRender, fTemplateFromMapSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateSetFromMap:', '~}', fTemplateFromMapSetRender, fTemplateFromMapSetRenderAsync);\n\n\t\t\t// {~DataTree:AppData.Some.Value.to.Render~}\n\t\t\tlet fDataValueTree = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\ttmpData.TemplateHash = pHash.trim();\n\n\t\t\t\t\ttmpData.ValueTreeParameters = tmpData.TemplateHash.split('^');\n\t\t\t\t\tif (tmpData.ValueTreeParameters.length < 1)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\ttmpData.ResolvedValue = this.resolveStateFromAddress(tmpData.ValueTreeParameters[0], tmpData, pContextArray);\n\t\t\t\t\ttmpData.ResolvedValueType = typeof(tmpData.ResolvedValue);\n\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpData.TreeMaxDepth = (tmpData.ValueTreeParameters.length < 2) ? 1 : parseInt(tmpData.ValueTreeParameters[1]);\n\t\t\t\t\t}\n\t\t\t\t\tcatch\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpData.TreeMaxDepth = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpPictObjectWrapTemplate = this.TemplateProvider.getTemplate('PICT-Object-Wrap');\n\t\t\t\t\tif (!tmpPictObjectWrapTemplate)\n\t\t\t\t\t{\n\t\t\t\t\t\t// This template is here because it is a default template.  Users can override this template by providing their own as PICT-Object-Wrap\n\t\t\t\t\t\ttmpPictObjectWrapTemplate = `<div class=\"PICT PICTObjectSet\">{~D:Record.ObjectValueTree~}</div>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tmpData.ResolvedValueType == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpData.ObjectValueTree = fDataValueTreeObjectSet(tmpData.ResolvedValue, tmpData.ResolvedValue, 0, tmpData.TreeMaxDepth, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value Tree: [${tmpData.TemplateHash}] resolved data is not an object.`, tmpData.ResolvedValue);\n\t\t\t\t\t\ttmpData.ObjectValueTree = tmpData.ResolveValue;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.parseTemplate(tmpPictObjectWrapTemplate, tmpData, pContextArray);\n\t\t\t\t};\n\t\t\tlet fDataValueTreeObjectSet = (pObject, pRootObject, pCurrentDepth, pMaxDepth, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpTemplateResult = '';\n\n\t\t\t\t\tif (typeof(pObject) !== 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpTemplateResult;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectValueKeys = Object.keys(pObject);\n\n\t\t\t\t\tlet tmpPictObjectBranchTemplate = this.TemplateProvider.getTemplate('PICT-Object-Branch');\n\t\t\t\t\tif (!tmpPictObjectBranchTemplate)\n\t\t\t\t\t{\n\t\t\t\t\t\t// This template is here because it is a default template.  Users can override this template by providing their own as PICT-Object-Branch\n\t\t\t\t\t\ttmpPictObjectBranchTemplate = `\n<div class=\"PICTObjectBranchDepth_{~D:Record.CurrentDepth~}\"><div class=\"PICTObjectBranch\">{~D:Record.BranchKey~}</div><div class=\"PICTObjectBranchValue\">{~D:Record.BranchValue~}</div></div>\n`\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectValueKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpBranchType = typeof(pObject[tmpObjectValueKeys[i]]);\n\n\t\t\t\t\t\tlet tmpBranchValue = '';\n\n\t\t\t\t\t\tswitch(tmpBranchType)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t\t\tif (pCurrentDepth + 1 > pMaxDepth)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmpBranchValue = '...';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmpBranchValue = fDataValueTreeObjectSet(pObject[tmpObjectValueKeys[i]], pRootObject, pCurrentDepth + 1, pMaxDepth, pContextArray);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\ttmpBranchValue = pObject[tmpObjectValueKeys[i]];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpDataValue =\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tAppData:this.AppData,\n\t\t\t\t\t\t\t\tBundle:this.Bundle,\n\n\t\t\t\t\t\t\t\tRootContainer:pRootObject,\n\n\t\t\t\t\t\t\t\tContainer:pObject,\n\t\t\t\t\t\t\t\tBranchEntryCount:tmpObjectValueKeys.length,\n\n\t\t\t\t\t\t\t\tBranchIndex:i,\n\t\t\t\t\t\t\t\tBranchKey: tmpObjectValueKeys[i],\n\t\t\t\t\t\t\t\tBranchValue: tmpBranchValue,\n\t\t\t\t\t\t\t\tBranchDataType: tmpBranchType,\n\n\t\t\t\t\t\t\t\tCurrentDepth: pCurrentDepth,\n\t\t\t\t\t\t\t\tMaxDepth: pMaxDepth\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\ttmpTemplateResult += this.parseTemplate(tmpPictObjectBranchTemplate, tmpDataValue, pContextArray);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpTemplateResult;\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~DataTree:', '~}',fDataValueTree);\n\t\t\tthis.MetaTemplate.addPattern('{~DT:', '~}',fDataValueTree);\n\n\t\t\t//{~Data:AppData.Some.Value.to.Render~}\n\t\t\tlet fDataRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = '';\n\t\t\t\t\tif (tmpHash != null)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue = this.resolveStateFromAddress(tmpHash, tmpData, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn tmpValue;\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~D:', '~}', fDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Data:', '~}', fDataRender);\n\n\t\t\t//<p>{~Join: - ^Record.d1^Record.d1~}</p>\n\t\t\tlet fJoinDataRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash;\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDataAddresses = tmpHash.split('^');\n\t\t\t\t\tif (tmpDataAddresses.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get the separator string\n\t\t\t\t\tlet tmpSeparator = tmpDataAddresses.shift();\n\n\t\t\t\t\tlet tmpValueList = [];\n\t\t\t\t\tfor (let i = 0; i < tmpDataAddresses.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueSet = this.resolveStateFromAddress(tmpDataAddresses[i], tmpData, pContextArray);\n\t\t\t\t\t\tif (tmpValueSet && Array.isArray(tmpValueSet))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (let j = 0; j < tmpValueSet.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValueList.push(tmpValueSet[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (tmpValueSet)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpValueList.push(tmpValueSet);\n\t\t\t\t\t\t}\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpValueList.join(tmpSeparator);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~J:', '~}', fJoinDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Join:', '~}', fJoinDataRender);\n\t\t\t//<p>{~JoinUnique: - ^Record.d1^Record.d1~}</p>\n\t\t\tlet fJoinUniqueDataRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash;\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join Unique [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join Unique [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDataAddresses = tmpHash.split('^');\n\t\t\t\t\tif (tmpDataAddresses.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get the separator string\n\t\t\t\t\tlet tmpSeparator = tmpDataAddresses.shift();\n\n\t\t\t\t\tlet tmpValueList = [];\n\t\t\t\t\tlet tmpValueMap = {};\n\t\t\t\t\tfor (let i = 0; i < tmpDataAddresses.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueSet = this.resolveStateFromAddress(tmpDataAddresses[i], tmpData, pContextArray);\n\n\t\t\t\t\t\tif (tmpValueSet && Array.isArray(tmpValueSet))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (let j = 0; j < tmpValueSet.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!tmpValueMap.hasOwnProperty(tmpValueSet[j]))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmpValueMap[tmpValueSet[j]] = true;\n\t\t\t\t\t\t\t\t\ttmpValueList.push(tmpValueSet[j]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (tmpValueSet)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!tmpValueMap.hasOwnProperty(tmpValueSet))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValueMap[tmpValueSet] = true;\n\t\t\t\t\t\t\t\ttmpValueList.push(tmpValueSet);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpValueList.join(tmpSeparator);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~JU:', '~}', fJoinUniqueDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~JoinUnique:', '~}', fJoinUniqueDataRender);\n\n\t\t\tthis.MetaTemplate.addPattern('{~Dollars:', '~}',\n\t\t\t\t(pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.resolveStateFromAddress(tmpHash, tmpData, pContextArray);\n\t\t\t\t\treturn this.DataFormat.formatterDollars(tmpColumnData);\n\t\t\t\t});\n\t\t\tthis.MetaTemplate.addPattern('{~Digits:', '~}',\n\t\t\t\t(pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.resolveStateFromAddress(tmpHash, tmpData, pContextArray);\n\t\t\t\t\treturn this.DataFormat.formatterAddCommasToNumber(this.DataFormat.formatterRoundNumber(tmpColumnData, 2));\n\t\t\t\t});\n\n\t\t\t// Output the date as a YYYY-MM-DD string\n\t\t\tthis.MetaTemplate.addPattern('{~DateYMD:', '~}',\n\t\t\t\t(pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpDateValue = this.resolveStateFromAddress(tmpHash, tmpData, pContextArray);\n\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: Modularize this\n\t\t\t\t\tlet tmpDayJS = this.fable.Dates.dayJS.utc(tmpDateValue);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Try to cast the day to be a specific timezone if one is set for the app\n\t\t\t\t\t\tif (this.options.Timezone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.options.Timezone);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Error guessing dayJS guess() function; dates may be formatted to GMT by default. (${pError.message || pError})`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch\n\t\t\t\t\t{\n\t\t\t\t\t\t//this.log.error(`Error casting timezone using tz .. casting to the browser guess which is [${this.fable.Dates.dayJS.tz.guess()}].`);\n\t\t\t\t\t\t// Day.js will try to guess the user's timezone for us\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Error guessing dayJS guess() function; dates may be formatted to GMT by default. (${pError.message || pError})`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpDayJS.format('YYYY-MM-DD');\n\t\t\t\t});\n\n\t\t\t// Output the date as a YYYY-MM-DD string\n\t\t\t// Takes in the format as the second parameter: {~DateYMD:AppData.Some.Date^YYYY-MM-DD~}\n\t\t\tthis.MetaTemplate.addPattern('{~DateFormat:', '~}',\n\t\t\t\t(pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpDateValueSet = tmpHash.split('^');\n\n\t\t\t\t\tif (tmpDateValueSet.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PICT Template [fDateFormat]::[${tmpHash}] did not have a valid format string and date.`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDateValue = this.resolveStateFromAddress(tmpDateValueSet[0], tmpData, pContextArray);\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: Modularize this\n\t\t\t\t\tlet tmpDayJS = this.fable.Dates.dayJS.utc(tmpDateValue);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Try to cast the day to be a specific timezone if one is set for the app\n\t\t\t\t\t\tif (this.options.Timezone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.options.Timezone);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Error guessing dayJS guess() function; dates may be formatted to GMT by default. (${pError.message || pError})`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch\n\t\t\t\t\t{\n\t\t\t\t\t\t//this.log.error(`Error casting date passed timezone using tz .. casting to the browser guess which is [${this.fable.Dates.dayJS.tz.guess()}].`);\n\t\t\t\t\t\t// Day.js will try to guess the user's timezone for us\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Error guessing dayJS guess() function; dates may be formatted to GMT by default. (${pError.message || pError})`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpDayJS.format(tmpDateValueSet[1]);\n\t\t\t\t});\n\t\t\t// {NE~Some.Address|If the left value is truthy, render this value.~}\n\t\t\tlet fNotEmptyRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Should switch this to indexOf so pipes can be in the content.\n\t\t\t\t\tlet tmpHashParts = tmpHash.split('|');\n\n\t\t\t\t\t// For now just check truthiness\n\t\t\t\t\tif (this.resolveStateFromAddress(tmpHashParts[0], tmpData, pContextArray))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpHashParts[1];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~NotEmpty:', '~}', fNotEmptyRender);\n\t\t\tthis.MetaTemplate.addPattern('{~NE:', '~}', fNotEmptyRender);\n\n\t\t\tlet fRandomNumberString = (pHash)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumberString]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpStringLength = 4;\n\t\t\t\t\tlet tmpMaxNumber = 9999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpStringLength = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpStringLength = 4;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpMaxNumber = 9999;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomNumericString(tmpStringLength, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumberString:', '~}',fRandomNumberString);\n\t\t\tthis.MetaTemplate.addPattern('{~RNS:', '~}',fRandomNumberString);\n\n\t\t\tlet fRandomNumber = (pHash)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumber]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpMinimumNumber = 0;\n\t\t\t\t\tlet tmpMaxNumber = 9999999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpMinimumNumber = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpMinimumNumber = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpMaxNumber = 9999999;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomIntegerBetween(tmpMinimumNumber, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumber:', '~}',fRandomNumber);\n\t\t\tthis.MetaTemplate.addPattern('{~RN:', '~}',fRandomNumber);\n\n\t\t\tlet fPascalCaseIdentifier = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.resolveStateFromAddress(tmpHash, tmpData, pContextArray);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn this.DataFormat.cleanNonAlphaCharacters(this.DataFormat.capitalizeEachWord(tmpValue));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~PascalCaseIdentifier:', '~}',fPascalCaseIdentifier);\n\n\t\t\tlet fLogValue = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tlet tmpValue = this.resolveStateFromAddress(tmpHash, tmpData, pContextArray);\n\t\t\t\t\tlet tmpValueType = typeof(tmpValue);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValueType == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is ${tmpValueType}.`);\n\t\t\t\t\t}\n\t\t\t\t\telse if (tmpValueType == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is an object.`, tmpValue);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is a ${tmpValueType} = [${tmpValue}]`);\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogValue:', '~}',fLogValue);\n\t\t\tthis.MetaTemplate.addPattern('{~LV:', '~}',fLogValue);\n\n\n\t\t\tlet fLogValueTree = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\ttmpData.TemplateHash = pHash.trim();\n\n\t\t\t\t\ttmpData.ValueTreeParameters = tmpData.TemplateHash.split('^');\n\t\t\t\t\tif (tmpData.ValueTreeParameters.length < 1)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\ttmpData.ResolvedValue = this.resolveStateFromAddress(tmpData.ValueTreeParameters[0], tmpData, pContextArray);\n\t\t\t\t\ttmpData.ResolvedValueType = typeof(tmpData.ResolvedValue);\n\n\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpData.TreeMaxDepth = (tmpData.ValueTreeParameters.length < 2) ? 1 : parseInt(tmpData.ValueTreeParameters[1]);\n\t\t\t\t\t}\n\t\t\t\t\tcatch\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpData.TreeMaxDepth = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tmpData.ResolvedValueType == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tfLogValueTreeObjectSet(tmpData.ResolvedValue, tmpData.ValueTreeParameters[0], tmpData.ResolvedValue, 0, tmpData.TreeMaxDepth);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value Tree: [${tmpData.TemplateHash}] resolved data is not an object.`, tmpData.ResolvedValue);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tlet fLogValueTreeObjectSet = (pObject, pBaseAddress, pRootObject, pCurrentDepth, pMaxDepth)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpTemplateResult = '';\n\n\t\t\t\t\tif (typeof(pObject) !== 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpTemplateResult;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectValueKeys = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectValueKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpBranchType = typeof(pObject[tmpObjectValueKeys[i]]);\n\t\t\t\t\t\tlet tmpBranchValue = '';\n\n\t\t\t\t\t\tswitch(tmpBranchType)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t\t\ttmpBranchValue = '...';\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\ttmpBranchValue = pObject[tmpObjectValueKeys[i]];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.log.trace(`[${pBaseAddress}.${tmpObjectValueKeys[i]}] (${tmpBranchType}):  ${tmpBranchValue}`);\n\n\t\t\t\t\t\tif (pCurrentDepth + 1 > pMaxDepth)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (tmpBranchType == 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpBranchValue = fLogValueTreeObjectSet(pObject[tmpObjectValueKeys[i]], `${pBaseAddress}.${tmpObjectValueKeys[i]}`, pRootObject, pCurrentDepth + 1, pMaxDepth);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogValueTree:', '~}',fLogValueTree);\n\t\t\tthis.MetaTemplate.addPattern('{~LVT:', '~}',fLogValueTree);\n\n\t\t\tlet fLogStatement = (pHash)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tthis.log.trace(`PICT Template Log Message: ${tmpHash}`);\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogStatement:', '~}',fLogStatement);\n\t\t\tthis.MetaTemplate.addPattern('{~LS:', '~}',fLogStatement);\n\n\t\t\tlet fBreakpoint = (pHash)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpError = new Error(`PICT Template Breakpoint: ${tmpHash}`);\n\t\t\t\t\tthis.log.trace(`PICT Template Breakpoint: ${tmpHash}`, tmpError.stack);\n\t\t\t\t\tdebugger; // eslint-disable-line no-debugger\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~Breakpoint', '~}',fBreakpoint);\n\n\t\t\tthis._DefaultPictTemplatesInitialized = true;\n\t\t}\n\t}\n\n\t/**\n\t * Read a value from a nested object using a dot notation string.\n\t *\n\t * @param {string} pAddress - The address to resolve\n\t * @param {object} pRecord - The record to resolve\n\t * @param {Array<any>} pContextArray - The context array to resolve\n\t *\n\t * @returns {any} The value at the given address, or undefined\n\t */\n\tresolveStateFromAddress(pAddress, pRecord, pContextArray)\n\t{\n\t\tlet tmpContextArray = (Array.isArray(pContextArray)) ? pContextArray : [this];\n\n\t\treturn this.manifest.getValueByHash({Pict:this, AppData:this.AppData, Bundle:this.Bundle, Context:tmpContextArray, Record:pRecord}, pAddress);\n\t}\n\n\t/**\n\t * Parse a template.\n\t *\n\t * @param {String} pTemplateString - The template string to parse\n\t * @param {Object} pData - The data to use in the template\n\t * @param {Function} fCallback - The callback to call when the template is parsed\n\t * @param {Array<any>} pContextArray - The context array to use in the template\n\t */\n\tparseTemplate(pTemplateString, pData, fCallback, pContextArray)\n\t{\n\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\tlet tmpContextArray = (Array.isArray(pContextArray)) ? pContextArray : [this];\n\t\tlet tmpParseUUID;\n\t\tif (this.LogControlFlow)\n\t\t{\n\t\t\ttmpParseUUID = this.fable.getUUID();\n\t\t\tthis.log.info(`PICT-ControlFlow parseTemplate ${tmpParseUUID} [${pTemplateString.substring(0, 50).replace('\\n', '\\\\n')}...${pTemplateString.length}] (fCallback: ${typeof(fCallback)}) with data size [${JSON.stringify(tmpData).length}]`);\n\t\t\tif (this.LogNoisiness > 1)\n\t\t\t{\n\t\t\t\tthis.log.info(`PICT-ControlFlow parseTemplate ${tmpParseUUID} template:\\n${pTemplateString}`);\n\t\t\t}\n\t\t\tif (this.LogControlFlowWatchAddressList.length > 0)\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < this.LogControlFlowWatchAddressList.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.log.info(`PICT-ControlFlow parseTemplate ${tmpParseUUID} Watch Value: [${this.LogControlFlowWatchAddressList[i]}]=>[${this.resolveStateFromAddress(this.LogControlFlowWatchAddressList[i], tmpData)}]`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof(fCallback) === 'function')\n\t\t{\n\t\t\tthis.MetaTemplate.parseString(pTemplateString, tmpData,\n\t\t\t\t(pError, pParsedTemplate) =>\n\t\t\t\t{\n\t\t\t\t\tif (this.LogControlFlow && this.LogNoisiness > 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.info(`PICT-ControlFlow parseTemplate ${tmpParseUUID} Template Async Return Value:\\n${pParsedTemplate}`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallback(pError, pParsedTemplate);\n\t\t\t\t}, tmpContextArray);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpResult = this.MetaTemplate.parseString(pTemplateString, tmpData, null, tmpContextArray);\n\t\t\tif (this.LogControlFlow && this.LogNoisiness > 1)\n\t\t\t{\n\t\t\t\t\tthis.log.info(`PICT-ControlFlow parseTemplate ${tmpParseUUID} Template Return Value:\\n${tmpResult}`);\n\t\t\t}\n\t\t\treturn tmpResult;\n\t\t}\n\t}\n\n\t/**\n\t * Parse a template by hash.\n\t *\n\t * @param {String} pTemplateHash - The hash of the template to parse\n\t * @param {Object} pData - The data to use in the template\n\t * @param {Function} fCallback - The callback to call when the template is parsed\n\t * @param {Array<any>} pContextArray - The context array to use in the template\n\t */\n\tparseTemplateByHash(pTemplateHash, pData, fCallback, pContextArray)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\ttmpTemplateString = '';\n\t\t}\n\t\treturn this.parseTemplate(tmpTemplateString, pData, fCallback, pContextArray);\n\t}\n\n\t/**\n\t * Parse a template set.\n\t *\n\t * @param {String} pTemplateString - The template string to parse\n\t * @param {Array|Object} pDataSet - The data set to use in the template\n\t * @param {Function} fCallback - The callback to call when the template is parsed\n\t * @param {Array<any>} pContextArray - The context array to use in the template\n\t */\n\tparseTemplateSet(pTemplateString, pDataSet, fCallback, pContextArray)\n\t{\n\t\t// TODO: This will need streaming -- for now janky old string append does the trick\n\t\tlet tmpValue = '';\n\t\tif (typeof(fCallback) == 'function')\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tthis.Utility.eachLimit(pDataSet, 1,\n\t\t\t\t\t(pRecord, fRecordTemplateCallback)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplate(pTemplateString, pRecord,\n\t\t\t\t\t\t\t(pError, pTemplateResult)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValue += pTemplateResult;\n\t\t\t\t\t\t\t\treturn fRecordTemplateCallback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t(pError)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fCallback(pError, tmpValue);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn fCallback(Error('Pict: Template Set: pDataSet is not an array or object.'), '');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tif (Array.isArray(pDataSet))\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < pDataSet.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[i], pContextArray);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpKeys = Object.keys(pDataSet);\n\t\t\t\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[tmpKeys[i]], pContextArray);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpValue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Parse a template set by hash.\n\t *\n\t * @param {String} pTemplateHash - The hash of the template to parse\n\t * @param {Array|Object} pDataSet - The data set to use in the template\n\t * @param {Function} fCallback - The callback to call when the template is parsed\n\t * @param {Array<any>} pContextArray - The context array to use in the template\n\t */\n\tparseTemplateSetByHash(pTemplateHash, pDataSet, fCallback, pContextArray)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\ttmpTemplateString = '';\n\t\t}\n\t\treturn this.parseTemplateSet(tmpTemplateString, pDataSet, fCallback, pContextArray);\n\t}\n};\n\nmodule.exports = Pict;\n\nmodule.exports.PictApplicationClass = require('pict-application');\n\nmodule.exports.PictViewClass = require('pict-view');\nmodule.exports.PictProviderClass = require('pict-provider');\n\nmodule.exports.EnvironmentLog = require('./environments/Pict-Environment-Log.js');\nmodule.exports.EnvironmentObject = require('./environments/Pict-Environment-Object.js');\n\n// This is to help understand the type of enivironement we're executing in\nmodule.exports.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n\nmodule.exports.safeOnDocumentReady = require(`./Pict-Browser-SafeOnDocumentReady.js`);\nmodule.exports.safeLoadPictApplication = require(`./Pict-Browser-SafeLoad.js`);\n\n},{\"./Pict-Browser-SafeLoad.js\":160,\"./Pict-Browser-SafeOnDocumentReady.js\":161,\"./Pict-CSS.js\":162,\"./Pict-Content-Assignment.js\":163,\"./Pict-DataProvider.js\":164,\"./Pict-Meadow-EntityProvider.js\":165,\"./Pict-Template-Provider.js\":166,\"./environments/Pict-Environment-Log.js\":168,\"./environments/Pict-Environment-Object.js\":169,\"fable\":58,\"pict-application\":114,\"pict-provider\":115,\"pict-view\":116}],168:[function(require,module,exports){\n/**\n* Pict browser shim loader\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\nclass PictEnvironmentLog\n{\n\t/**\n\t * @typedef {import('../Pict')} Pict\n\t */\n\t/**\n\t * @param {Pict} pPict - The pict object to attach the custom read/write functions to.\n\t * @param {Map<String, any>} pContentMap - The content map to use for custom reads.\n\t */\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\n\t\tthis.pict.ContentAssignment.customReadAttributeFunction = this.customReadAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetAttributeFunction = this.customSetAttributeFunction.bind(this);\n\t}\n\n\t/**\n\t * Create an event log entry.\n\t *\n\t * @param {string} pAddress - The address of the event.\n\t * @param {string} pContent - The content of the event.\n\t */\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\t/**\n\t * Custom GetElement function.\n\t *\n\t * @param {string} pAddress - The address of the element.\n\t */\n\tcustomGetElementFunction(pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\t/**\n\t * Custom Read function.\n\t *\n\t * @param {string} pAddress - The address of the element.\n\t */\n\tcustomReadFunction(pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\t/**\n\t * Custom Append function.\n\t *\n\t * @param {string} pAddress - The address of the element.\n\t * @param {string} pContent - The content to append.\n\t */\n\tcustomAppendFunction(pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\t/**\n\t * Custom Prepend function.\n\t *\n\t * @param {string} pAddress - The address of the element.\n\t * @param {string} pContent - The content to prepend.\n\t */\n\tcustomPrependFunction(pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\t/**\n\t * Custom Assign function.\n\t *\n\t * @param {string} pAddress - The address of the element.\n\t * @param {string} pContent - The content to assign.\n\t */\n\tcustomAssignFunction(pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Assign.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\t/**\n\t * Custom Read Attribute function.\n\t *\n\t * @param {string} pAddress - The address of the element.\n\t * @param {string} pAttribute - The attribute to read.\n\t */\n\tcustomReadAttributeFunction(pAddress, pAttribute)\n\t{\n\t\tthis.pict.log.info(`Mocking an READ ATTRIBUTE from Address -> [${pAddress}]`, {Attribute: pAttribute});\n\t\treturn '';\n\t}\n\n\t/**\n\t * Custom Set Attribute function.\n\t *\n\t * @param {string} pAddress - The address of the element.\n\t * @param {string} pAttribute - The attribute to set.\n\t */\n\tcustomSetAttributeFunction(pAddress, pAttribute, pContent)\n\t{\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an SET ATTRIBUTE to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Attribute: pAttribute, Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an SET ATTRIBUTE to Address -> [${pAddress}]`, {Attribute: pAttribute, Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n}\n\nmodule.exports = PictEnvironmentLog;\n\n},{}],169:[function(require,module,exports){\n/**\n* Pict browser shim loader with Object statefulness for the environement\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\nclass PictEnvironmentObject\n{\n\t/**\n\t * @typedef {import('../Pict')} Pict\n\t */\n\t/**\n\t * @param {Pict} pPict - The pict object to attach the custom read/write functions to.q\n\t * @param {Map<String, any>} pContentMap - The content map to use for custom reads.\n\t */\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.contentMap._ATTRIBUTE_MAP = {};\n\t\tthis.contentMap._CLASS_MAP = {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\t\tthis.eventLog.ReadAttribute = [];\n\t\tthis.eventLog.SetAttribute = [];\n\t\tthis.eventLog.RemoveAttribute = [];\n\t\tthis.eventLog.ReadClass = [];\n\t\tthis.eventLog.SetClass = [];\n\t\tthis.eventLog.RemoveClass = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadAttributeFunction = this.customReadAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetAttributeFunction = this.customSetAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customRemoveAttributeFunction = this.customRemoveAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadClassFunction = this.customReadClassFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetClassFunction = this.customSetClassFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customRemoveClassFunction = this.customRemoveClassFunction.bind(this);\n\t}\n\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\tcustomGetElementFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\t}\n\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\tcustomReadFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\t}\n\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\tcustomAppendFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = (typeof(this.contentMap[pAddress]) == 'undefined') ? pContent : this.contentMap[pAddress] + pContent;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\tcustomPrependFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = (typeof(this.contentMap[pAddress]) == 'undefined') ? pContent : pContent + this.contentMap[pAddress];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomAssignFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = pContent;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tinitializeAttributeMapLocation(pAddress, pAttribute)\n\t{\n\t\tif (!this.contentMap._ATTRIBUTE_MAP.hasOwnProperty(pAddress))\n\t\t{\n\t\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress] = {};\n\t\t}\n\t\tif (!this.contentMap._ATTRIBUTE_MAP[pAddress].hasOwnProperty(pAttribute))\n\t\t{\n\t\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute] = false;\n\t\t}\n\t}\n\n\tinitializeClassMapLocation(pAddress)\n\t{\n\t\tif (!this.contentMap._CLASS_MAP.hasOwnProperty(pAddress))\n\t\t{\n\t\t\tthis.contentMap._CLASS_MAP[pAddress] = [];\n\t\t}\n\t}\n\n\tcustomReadAttributeFunction (pAddress, pAttribute)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tlet tmpContent = this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (tmpContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE READ for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: tmpContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE READ for Address -> [${pAddress}]::[${pAttribute}]`, {Content: tmpContent});\n\t\t}\n\t\treturn tmpContent;\n\t}\n\n\tcustomSetAttributeFunction (pAddress, pAttribute, pValue)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute] = pValue;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (pValue.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE SET for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pValue.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE SET for Address -> [${pAddress}]::[${pAttribute}]`, {Content: pValue});\n\t\t}\n\t\treturn pValue;\n\t}\n\n\tcustomRemoveAttributeFunction (pAddress, pAttribute)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tlet tmpContent = this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (tmpContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE REMOVE for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: tmpContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE REMOVE for Address -> [${pAddress}]::[${pAttribute}]`, {Content: tmpContent});\n\t\t}\n\n\t\tdelete this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\treturn true;\n\t}\n\n\tcustomReadClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tconst tmpContent = this.contentMap._CLASS_MAP[pAddress].indexOf(pClass) > -1;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS READ for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent});\n\n\t\treturn tmpContent;\n\t}\n\n\tcustomSetClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tlet tmpContent = this.contentMap._CLASS_MAP[pAddress];\n\n\t\tif (!this.contentMap._CLASS_MAP[pAddress].indexOf(pClass) > -1)\n\t\t{\n\t\t\tthis.contentMap._CLASS_MAP[pAddress].push(pClass);\n\t\t}\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS SET for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent.join(' ')});\n\n\t\treturn tmpContent;\n\t}\n\n\tcustomRemoveClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tlet tmpContent = this.contentMap._CLASS_MAP[pAddress];\n\n\t\tthis.contentMap._CLASS_MAP[pAddress].splice(pClass);\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS REMOVE for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent.join(' ')});\n\n\t\treturn tmpContent;\n\t}\n}\n\nmodule.exports = PictEnvironmentObject;\n\n},{}]},{},[167])(167)\n});\n\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\nvar eachOfLimit = require('async.util.eachoflimit');\nvar withoutIndex = require('async.util.withoutindex');\n\nmodule.exports = function eachLimit(arr, limit, iterator, cb) {\n    return eachOfLimit(limit)(arr, withoutIndex(iterator), cb);\n};\n","'use strict';\n\nmodule.exports = function(tasks) {\n    function makeCallback(index) {\n        function fn() {\n            if (tasks.length) {\n                tasks[index].apply(null, arguments);\n            }\n            return fn.next();\n        }\n        fn.next = function() {\n            return (index < tasks.length - 1) ? makeCallback(index + 1) : null;\n        };\n        return fn;\n    }\n    return makeCallback(0);\n};\n","var once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar onlyOnce = require('async.util.onlyonce');\nvar keyIterator = require('async.util.keyiterator');\n\nmodule.exports = function eachOfLimit(limit) {\n    return function(obj, iterator, cb) {\n        cb = once(cb || noop);\n        obj = obj || [];\n        var nextKey = keyIterator(obj);\n        if (limit <= 0) {\n            return cb(null);\n        }\n        var done = false;\n        var running = 0;\n        var errored = false;\n\n        (function replenish() {\n            if (done && running <= 0) {\n                return cb(null);\n            }\n\n            while (running < limit && !errored) {\n                var key = nextKey();\n                if (key === null) {\n                    done = true;\n                    if (running <= 0) {\n                        cb(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iterator(obj[key], key, onlyOnce(function(err) {\n                    running -= 1;\n                    if (err) {\n                        cb(err);\n                        errored = true;\n                    } else {\n                        replenish();\n                    }\n                }));\n            }\n        })();\n    };\n};\n","'use strict';\nvar setImmediate = require('async.util.setimmediate');\nvar restParam = require('async.util.restparam');\n\nmodule.exports = function(fn) {\n    return restParam(function(args) {\n        var callback = args.pop();\n        args.push(function() {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate(function() {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        var sync = true;\n        fn.apply(this, args);\n        sync = false;\n    });\n};\n","'use strict';\n\nmodule.exports = Array.isArray || function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n","'use strict';\n\nvar isArray = require('async.util.isarray');\n\nmodule.exports = function isArrayLike(arr) {\n    return isArray(arr) || (\n        // has a positive integer length property\n        typeof arr.length === 'number' &&\n        arr.length >= 0 &&\n        arr.length % 1 === 0\n    );\n};\n","'use strict';\n\nvar _keys = require('async.util.keys');\nvar isArrayLike = require('async.util.isarraylike');\n\nmodule.exports = function keyIterator(coll) {\n    var i = -1;\n    var len;\n    var keys;\n    if (isArrayLike(coll)) {\n        len = coll.length;\n        return function next() {\n            i++;\n            return i < len ? i : null;\n        };\n    } else {\n        keys = _keys(coll);\n        len = keys.length;\n        return function next() {\n            i++;\n            return i < len ? keys[i] : null;\n        };\n    }\n};\n","'use strict';\n\nmodule.exports = Object.keys || function keys(obj) {\n    var _keys = [];\n    for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            _keys.push(k);\n        }\n    }\n    return _keys;\n};\n","'use strict';\n\nmodule.exports = function noop () {};\n","'use strict';\n\nmodule.exports = function once(fn) {\n    return function() {\n        if (fn === null) return;\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n","'use strict';\n\nmodule.exports = function only_once(fn) {\n    return function() {\n        if (fn === null) throw new Error('Callback was already called.');\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n","'use strict';\nmodule.exports = function restParam(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n        var length = Math.max(arguments.length - startIndex, 0);\n        var rest = new Array(length);\n        for (var index = 0; index < length; index++) {\n            rest[index] = arguments[index + startIndex];\n        }\n        switch (startIndex) {\n            case 0:\n                return func.call(this, rest);\n            case 1:\n                return func.call(this, arguments[0], rest);\n        }\n    };\n};\n","'use strict';\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\nvar fallback = function(fn) {\n    setTimeout(fn, 0);\n};\n\nmodule.exports = function setImmediate(fn) {\n    // not a direct alias for IE10 compatibility\n    return (_setImmediate || fallback)(fn);\n};\n","'use strict';\n\nmodule.exports = function withoutIndex(iterator) {\n    return function(value, index, callback) {\n        return iterator(value, callback);\n    };\n};\n","'use strict';\n\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar isArray = require('async.util.isarray');\nvar restParam = require('async.util.restparam');\nvar ensureAsync = require('async.util.ensureasync');\nvar iterator = require('async.iterator');\n\nmodule.exports = function(tasks, cb) {\n    cb = once(cb || noop);\n    if (!isArray(tasks)) return cb(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return cb();\n\n    function wrapIterator(iterator) {\n        return restParam(function(err, args) {\n            if (err) {\n                cb.apply(null, [err].concat(args));\n            } else {\n                var next = iterator.next();\n                if (next) {\n                    args.push(wrapIterator(next));\n                } else {\n                    args.push(cb);\n                }\n                ensureAsync(iterator).apply(null, args);\n            }\n        });\n    }\n    wrapIterator(iterator(tasks))();\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*\r\n *  big.js v6.2.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2022 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,            // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n    /*\r\n     * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n     * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n     * primitive number without a loss of precision.\r\n     */\r\n    STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        if (typeof n !== 'string') {\r\n          if (Big.strict === true && typeof n !== 'bigint') {\r\n            throw TypeError(INVALID + 'value');\r\n          }\r\n\r\n          // Minus zero?\r\n          n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n        }\r\n\r\n        parse(x, n);\r\n      }\r\n\r\n      // Retain a reference to this Big constructor.\r\n      // Shadow Big.prototype.constructor which points to Object.\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.strict = STRICT;\r\n    Big.roundDown = 0;\r\n    Big.roundHalfUp = 1;\r\n    Big.roundHalfEven = 2;\r\n    Big.roundUp = 3;\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    if (!NUMERIC.test(n)) {\r\n      throw Error(INVALID + 'number');\r\n    }\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n   * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, sd, rm, more) {\r\n    var xc = x.c;\r\n\r\n    if (rm === UNDEFINED) rm = x.constructor.RM;\r\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    if (sd < 1) {\r\n      more =\r\n        rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n        rm === 1 && xc[0] >= 5 ||\r\n        rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n      );\r\n\r\n      xc.length = 1;\r\n\r\n      if (more) {\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        x.e = x.e - sd + 1;\r\n        xc[0] = 1;\r\n      } else {\r\n\r\n        // Zero.\r\n        xc[0] = x.e = 0;\r\n      }\r\n    } else if (sd < xc.length) {\r\n\r\n      // xc[sd] is the digit after the digit that may be rounded up.\r\n      more =\r\n        rm === 1 && xc[sd] >= 5 ||\r\n        rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n          (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n        rm === 3 && (more || !!xc[0]);\r\n\r\n      // Remove any digits after the required precision.\r\n      xc.length = sd;\r\n\r\n      // Round up?\r\n      if (more) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up.\r\n        for (; ++xc[--sd] > 9;) {\r\n          xc[sd] = 0;\r\n          if (sd === 0) {\r\n            ++x.e;\r\n            xc.unshift(1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (sd = xc.length; !xc[--sd];) xc.pop();\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   */\r\n  function stringify(x, doExponential, isNonzero) {\r\n    var e = x.e,\r\n      s = x.c.join(''),\r\n      n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (doExponential) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) {\r\n        for (e -= n; e--;) s += '0';\r\n      } else if (e < n) {\r\n        s = s.slice(0, e) + '.' + s.slice(e);\r\n      }\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && isNonzero ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n   */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) {\r\n      y.s = k;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n    q.s = k;\r\n    k = p < 0 ? 0 : p;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n      p--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (yc[0]) {\r\n        y.s = -b;\r\n      } else if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = 1;\r\n      }\r\n      return y;\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n  \r\n  \r\n  /*\r\n   * Return a new Big whose value is the value of this Big negated.\r\n   */\r\n  P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var e, k, t,\r\n      x = this,\r\n      Big = x.constructor;\r\n\r\n    y = new Big(y);\r\n\r\n    // Signs differ?\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (!yc[0]) {\r\n        if (xc[0]) {\r\n          y = new Big(x);\r\n        } else {\r\n          y.s = x.s;\r\n        }\r\n      }\r\n      return y;\r\n    }\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (e = xe - ye) {\r\n      if (e > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        e = -e;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; e--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    e = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (k) {\r\n      xc.unshift(k);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor('1'),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n      throw Error(INVALID + 'exponent');\r\n    }\r\n\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n   * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.prec = function (sd, rm) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    return round(new this.constructor(this), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n   * using rounding mode rm, or Big.RM if rm is not specified.\r\n   * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.round = function (dp, rm) {\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    return round(new this.constructor(this), dp + this.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big('0.5');\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) {\r\n      throw Error(NAME + 'No square root');\r\n    }\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s + '');\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) {\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = b;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), ++dp, rm);\r\n      for (; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, true, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n      // x.e may have changed if the value is rounded up.\r\n      for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, false, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toJSON = P.toString = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Big as a primitve number.\r\n   */\r\n  P.toNumber = function () {\r\n    var n = Number(stringify(this, true, true));\r\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n      throw Error(NAME + 'Imprecise conversion');\r\n    }\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * rounding mode rm, or Big.RM if rm is not specified.\r\n   * Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      n = x.c[0];\r\n\r\n    if (sd !== UNDEFINED) {\r\n      if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n        throw Error(INVALID + 'precision');\r\n      }\r\n      x = round(new Big(x), sd, rm);\r\n      for (; x.c.length < sd;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    if (Big.strict === true) {\r\n      throw Error(NAME + 'valueOf disallowed');\r\n    }\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","/**\n* Cache data structure with:\n*  - enumerable items\n*  - unique hash item access (if none is passed in, one is generated)\n*  - size (length) expiration\n*  - controllable expiration (e.g. keep in cache longer if older/less likely to change)\n*  - time-based expiration\n*  - custom expiration based on passed-in function\n*\n* Also:\n*  - built to work well with browserify\n*  - no dependencies at all\n*  - pet friendly\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nconst libLinkedList = require(`./LinkedList.js`);\n\nclass CashMoney extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'ObjectCache';\n\n\t\t// The map of node objects by hash because Reasons.\n\t\tthis._HashMap = {};\n\n\t\tthis._RecordMap = {};\n\n\t\tthis._List = new libLinkedList();\n\n\t\t// If the list gets over maxLength, we will automatically remove nodes on insertion.\n\t\tthis.maxLength = 0;\n\n\t\t// If cache entries get over this age, they are removed with prune\n\t\tthis.maxAge = 0;\n\t}\n\n\tget RecordMap()\n\t{\n\t\treturn this._RecordMap;\n\t}\n\n\t// Add (or update) a node in the cache\n\tput(pData, pHash)\n\t{\n\t\t// If the hash of the record exists\n\t\tif (this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\t// Just update the hashed records datum\n\t\t\tthis._HashMap[pHash].Datum = pData;\n\t\t\tthis._RecordMap[pHash] = pData;\n\t\t\treturn this._HashMap[pHash].Datum;\n\t\t}\n\n\t\tlet tmpNode = this._List.push(pData, pHash);\n\t\tthis._HashMap[tmpNode.Hash] = tmpNode;\n\t\tthis._RecordMap[pHash] = pData;\n\n\t\t// Automatically prune if over length, but only prune this nodes worth.\n\t\tif (this.maxLength > 0   &&   this._List.length > this.maxLength)\n\t\t{\n\t\t\t// Pop it off the head of the list\n\t\t\ttmpNode = this._List.pop();\n\t\t\t// Also remove it from the hashmap\n\t\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\t\tdelete this._HashMap[tmpNode.Hash];\n\t\t}\n\n\t\t// Now some expiration properties on the node metadata... namely the birthdate in ms of the node\n\t\ttmpNode.Metadata.Created = +new Date();\n\n\t\treturn tmpNode.Datum;\n\t}\n\n\t// Read a datum by hash from the cache\n\tread(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._HashMap[pHash].Datum;\n\t}\n\n\t// Reinvigorate a node based on hash, updating the timestamp and moving it to the head of the list (also removes custom metadata)\n\ttouch(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get the old node out of the list\n\t\tlet tmpNode = this._List.remove(this._HashMap[pHash]);\n\t\t// Remove it from the hash map\n\t\tdelete this._RecordMap[pHash];\n\t\tdelete this._HashMap[pHash];\n\n\t\t// Now put it back, fresh.\n\t\treturn this.put(tmpNode.Datum, tmpNode.Hash);\n\t}\n\n\t// Expire a cached record based on hash\n\texpire(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpNode = this._HashMap[pHash];\n\n\t\t// Remove it from the list of cached records\n\t\ttmpNode = this._List.remove(tmpNode);\n\t\t// Also remove it from the hashmap\n\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\tdelete this._HashMap[tmpNode.Hash];\n\n\t\t// Return it in case the consumer wants to do anything with it\n\t\treturn tmpNode;\n\t}\n\n\t// Prune records from the cached set based on maxAge\n\tpruneBasedOnExpiration(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tif (this.maxAge < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now enumerate each record and remove any that are expired\n\t\tlet tmpNow = +new Date();\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\t// Expire the node if it is older than max age milliseconds\n\t\t\tif (tmpNow - this._HashMap[tmpKeys[i]].Metadata.Created >= this.maxAge)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on maxLength\n\tpruneBasedOnLength(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\t// Pop records off until we have reached maxLength unless it's 0\n\t\tif (this.maxLength > 0)\n\t\t{\n\t\t\twhile (this._List.length > this.maxLength)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this._List.pop());\n\t\t\t}\n\t\t}\n\n\t\treturn fComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on passed in pPruneFunction(pDatum, pHash, pNode) -- returning true expires it\n\tpruneCustom(fComplete, fPruneFunction, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\tlet tmpNode = this._HashMap[tmpKeys[i]];\n\t\t\t// Expire the node if the passed in function returns true\n\t\t\tif (fPruneFunction(tmpNode.Datum, tmpNode.Hash, tmpNode))\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune the list down to the asserted rules (max age then max length if still too long)\n\tprune(fComplete)\n\t{\n\t\tlet tmpRemovedRecords = [];\n\n\t\t// If there are no cached records, we are done.\n\t\tif (this._List.length < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now prune based on expiration time\n\t\tthis.pruneBasedOnExpiration((fExpirationPruneComplete)=>\n\t\t\t{\n\t\t\t\t// Now prune based on length, then return the removed records in the callback.\n\t\t\t\tthis.pruneBasedOnLength(fComplete, tmpRemovedRecords);\n\t\t\t}, tmpRemovedRecords);\n\t}\n\n\t// Get a low level node (including metadata statistics) by hash from the cache\n\tgetNode(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\n\t\treturn this._HashMap[pHash];\n\t}\n}\n\nmodule.exports = CashMoney;","/**\n* Double Linked List Node\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Linked List Node Prototype\n*\n* @class LinkedListNode\n* @constructor\n*/\n\nclass LinkedListNode\n{\n\tconstructor()\n\t{\n\t\tthis.Hash = false;\n\t\tthis.Datum = false;\n\n\t\t// This is where expiration and other elements are stored;\n\t\tthis.Metadata = {};\n\n\t\tthis.LeftNode = false;\n\t\tthis.RightNode = false;\n\n\t\t// To allow safe specialty operations on nodes\n\t\tthis.__ISNODE = true;\n\t}\n}\n\nmodule.exports = LinkedListNode;","\"use strict\"\n/**\n* Simple double linked list to hold the cache entries in, in order.\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module FeeFiFo\n*/\n\nconst libLinkedListNode = require('./LinkedList-Node.js');\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nclass LinkedList\n{\n\tconstructor()\n\t{\n\t\t// Total number of nodes ever processed by this ADT\n\t\tthis.totalNodes = 0;\n\n\t\t// The length of the set of nodes currently in the list\n\t\tthis.length = 0;\n\n\t\tthis.head = false;\n\t\tthis.tail = false;\n\t}\n\n\t// Create a node object.\n\tinitializeNode(pDatum, pHash)\n\t{\n\t\t// Don't allow undefined to be added to the list because of reasons\n\t\tif (typeof(pDatum) === 'undefined')\n\t\t\treturn false;\n\n\t\tthis.totalNodes++;\n\n\t\t// Get (or create) a unique hash\n\t\tlet tmpHash = (typeof(pHash) != 'undefined') ? pHash : `NODE[${this.totalNodes}]`;\n\n\t\tlet tmpNode = new libLinkedListNode();\n\n\t\ttmpNode.Hash = tmpHash;\n\t\ttmpNode.Datum = pDatum;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Add a node to the end (right of tail) of the list.\n\tappend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.tail.RightNode = tmpNode;\n\t\ttmpNode.LeftNode = this.tail;\n\t\tthis.tail = tmpNode;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Append to tail of list (FIFO)\n\tpush(pDatum, pHash)\n\t{\n\t\treturn this.append(pDatum, pHash);\n\t}\n\n\t// Add a node to the beginning (left of head) of the list.\n\tprepend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.head.LeftNode = tmpNode;\n\t\ttmpNode.RightNode = this.head;\n\t\tthis.head = tmpNode;\n\t\treturn tmpNode;\n\t}\n\n\t// Remove a node from the list\n\tremove(pNode)\n\t{\n\t\tif (typeof(pNode) === 'undefined')\n\t\t\treturn false;\n\n\t\tif (!pNode.__ISNODE)\n\t\t\treturn false;\n\n\t\tthis.length--;\n\n\t\t// Last element in list.  Empty it out.\n\t\tif (this.length < 1)\n\t\t{\n\t\t\tthis.head = false;\n\t\t\tthis.tail = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's somewhere in the middle, surgically remove it.\n\t\tif (pNode.LeftNode && pNode.RightNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = pNode.RightNode;\n\t\t\tpNode.RightNode.LeftNode = pNode.LeftNode;\n\n\t\t\tpNode.RightNode = false;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's the tail\n\t\tif (pNode.LeftNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = false;\n\t\t\tthis.tail = pNode.LeftNode;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It must be the head\n\t\tpNode.RightNode.LeftNode = false;\n\t\tthis.head = pNode.RightNode;\n\t\tpNode.RightNode = false;\n\t\treturn pNode;\n\t}\n\n\t// Remove the head of the list (FIFO)\n\tpop()\n\t{\n\t\treturn this.remove(this.head);\n\t}\n\n\t// Enumerate over each node IN ORDER, running the function fAction(pDatum, pHash, fCallback) then calling the function fComplete callback when done\n\teach(fAction, fComplete)\n\t{\n\t\tif (this.length < 1)\n\t\t\treturn fComplete();\n\n\t\tlet tmpNode = false;\n\n\t\tlet fIterator = (pError)=>\n\t\t{\n\t\t\t// If the user passed in a callback with an error, call their callback with the error\n\t\t\tif (pError)\n\t\t\t\treturn fComplete(pError);\n\n\t\t\t// If there is no node, this must be the initial run.\n\t\t\tif (!tmpNode)\n\t\t\t\ttmpNode = this.head;\n\t\t\t// Check if we are at the tail of the list\n\t\t\telse if (!tmpNode.RightNode)\n\t\t\t\treturn fComplete();\n\t\t\t// Proceed to the next node\n\t\t\telse\n\t\t\t\ttmpNode = tmpNode.RightNode;\n\n\t\t\t// Call the actual action\n\t\t\t// I hate this pattern because long tails eventually cause stack overflows.\n\t\t\tfAction(tmpNode.Datum, tmpNode.Hash, fIterator);\n\t\t};\n\n\t\t// Now kick off the iterator\n\t\treturn fIterator();\n\t}\n\n\t// Seek a specific node, 0 is the index of the first node.\n\tseek(pNodeIndex)\n\t{\n\t\tif (!pNodeIndex)\n\t\t\treturn false;\n\t\tif (this.length < 1)\n\t\t\treturn false;\n\t\tif (pNodeIndex >= this.length)\n\t\t\treturn false;\n\n\t\tlet tmpNode = this.head;\n\t\tfor (let i = 0; i < pNodeIndex; i++)\n\t\t{\n\t\t\ttmpNode = tmpNode.RightNode;\n\t\t}\n\n\t\treturn tmpNode;\n\t}\n}\n\nmodule.exports = LinkedList;","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\nvar setFunctionLength = require('set-function-length');\n\nvar $TypeError = require('es-errors/type');\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $defineProperty = require('es-define-property');\nvar $max = GetIntrinsic('%Math.max%');\n\nmodule.exports = function callBind(originalFunction) {\n\tif (typeof originalFunction !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\tvar func = $reflectApply(bind, $call, arguments);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + $max(0, originalFunction.length - (arguments.length - 1)),\n\t\ttrue\n\t);\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.partitioned) {\n    str += '; Partitioned'\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} val\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_advancedFormat=t()}(this,(function(){\"use strict\";return function(e,t){var r=t.prototype,n=r.format;r.format=function(e){var t=this,r=this.$locale();if(!this.isValid())return n.bind(this)(e);var s=this.$utils(),a=(e||\"YYYY-MM-DDTHH:mm:ssZ\").replace(/\\[([^\\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g,(function(e){switch(e){case\"Q\":return Math.ceil((t.$M+1)/3);case\"Do\":return r.ordinal(t.$D);case\"gggg\":return t.weekYear();case\"GGGG\":return t.isoWeekYear();case\"wo\":return r.ordinal(t.week(),\"W\");case\"w\":case\"ww\":return s.s(t.week(),\"w\"===e?1:2,\"0\");case\"W\":case\"WW\":return s.s(t.isoWeek(),\"W\"===e?1:2,\"0\");case\"k\":case\"kk\":return s.s(String(0===t.$H?24:t.$H),\"k\"===e?1:2,\"0\");case\"X\":return Math.floor(t.$d.getTime()/1e3);case\"x\":return t.$d.getTime();case\"z\":return\"[\"+t.offsetName()+\"]\";case\"zzz\":return\"[\"+t.offsetName(\"long\")+\"]\";default:return e}}));return n.bind(this)(a)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isoWeek=t()}(this,(function(){\"use strict\";var e=\"day\";return function(t,i,s){var a=function(t){return t.add(4-t.isoWeekday(),e)},d=i.prototype;d.isoWeekYear=function(){return a(this).year()},d.isoWeek=function(t){if(!this.$utils().u(t))return this.add(7*(t-this.isoWeek()),e);var i,d,n,o,r=a(this),u=(i=this.isoWeekYear(),d=this.$u,n=(d?s.utc:s)().year(i).startOf(\"year\"),o=4-n.isoWeekday(),n.isoWeekday()>4&&(o+=7),n.add(o,e));return r.diff(u,\"week\")+1},d.isoWeekday=function(e){return this.$utils().u(e)?this.day()||7:this.day(this.day()%7?e:e-7)};var n=d.startOf;d.startOf=function(e,t){var i=this.$utils(),s=!!i.u(t)||t;return\"isoweek\"===i.p(e)?s?this.date(this.date()-(this.isoWeekday()-1)).startOf(\"day\"):this.date(this.date()-1-(this.isoWeekday()-1)+7).endOf(\"day\"):n.bind(this)(e,t)}}}));","!function(r,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(r=\"undefined\"!=typeof globalThis?globalThis:r||self).dayjs_plugin_relativeTime=e()}(this,(function(){\"use strict\";return function(r,e,t){r=r||{};var n=e.prototype,o={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"};function i(r,e,t,o){return n.fromToBase(r,e,t,o)}t.en.relativeTime=o,n.fromToBase=function(e,n,i,d,u){for(var f,a,s,l=i.$locale().relativeTime||o,h=r.thresholds||[{l:\"s\",r:44,d:\"second\"},{l:\"m\",r:89},{l:\"mm\",r:44,d:\"minute\"},{l:\"h\",r:89},{l:\"hh\",r:21,d:\"hour\"},{l:\"d\",r:35},{l:\"dd\",r:25,d:\"day\"},{l:\"M\",r:45},{l:\"MM\",r:10,d:\"month\"},{l:\"y\",r:17},{l:\"yy\",d:\"year\"}],m=h.length,c=0;c<m;c+=1){var y=h[c];y.d&&(f=d?t(e).diff(i,y.d,!0):i.diff(e,y.d,!0));var p=(r.rounding||Math.round)(Math.abs(f));if(s=f>0,p<=y.r||!y.r){p<=1&&c>0&&(y=h[c-1]);var v=l[y.l];u&&(p=u(\"\"+p)),a=\"string\"==typeof v?v.replace(\"%d\",p):v(p,n,y.l,s);break}}if(n)return a;var M=s?l.future:l.past;return\"function\"==typeof M?M(a):M.replace(\"%s\",a)},n.to=function(r,e){return i(r,e,this,!0)},n.from=function(r,e){return i(r,e,this)};var d=function(r){return r.$u?t.utc():t()};n.toNow=function(r){return this.to(d(this),r)},n.fromNow=function(r){return this.from(d(this),r)}}}));","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_timezone=e()}(this,(function(){\"use strict\";var t={year:0,month:1,day:2,hour:3,minute:4,second:5},e={};return function(n,i,o){var r,a=function(t,n,i){void 0===i&&(i={});var o=new Date(t),r=function(t,n){void 0===n&&(n={});var i=n.timeZoneName||\"short\",o=t+\"|\"+i,r=e[o];return r||(r=new Intl.DateTimeFormat(\"en-US\",{hour12:!1,timeZone:t,year:\"numeric\",month:\"2-digit\",day:\"2-digit\",hour:\"2-digit\",minute:\"2-digit\",second:\"2-digit\",timeZoneName:i}),e[o]=r),r}(n,i);return r.formatToParts(o)},u=function(e,n){for(var i=a(e,n),r=[],u=0;u<i.length;u+=1){var f=i[u],s=f.type,m=f.value,c=t[s];c>=0&&(r[c]=parseInt(m,10))}var d=r[3],l=24===d?0:d,h=r[0]+\"-\"+r[1]+\"-\"+r[2]+\" \"+l+\":\"+r[4]+\":\"+r[5]+\":000\",v=+e;return(o.utc(h).valueOf()-(v-=v%1e3))/6e4},f=i.prototype;f.tz=function(t,e){void 0===t&&(t=r);var n=this.utcOffset(),i=this.toDate(),a=i.toLocaleString(\"en-US\",{timeZone:t}),u=Math.round((i-new Date(a))/1e3/60),f=o(a,{locale:this.$L}).$set(\"millisecond\",this.$ms).utcOffset(15*-Math.round(i.getTimezoneOffset()/15)-u,!0);if(e){var s=f.utcOffset();f=f.add(n-s,\"minute\")}return f.$x.$timezone=t,f},f.offsetName=function(t){var e=this.$x.$timezone||o.tz.guess(),n=a(this.valueOf(),e,{timeZoneName:t}).find((function(t){return\"timezonename\"===t.type.toLowerCase()}));return n&&n.value};var s=f.startOf;f.startOf=function(t,e){if(!this.$x||!this.$x.$timezone)return s.call(this,t,e);var n=o(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\"),{locale:this.$L});return s.call(n,t,e).tz(this.$x.$timezone,!0)},o.tz=function(t,e,n){var i=n&&e,a=n||e||r,f=u(+o(),a);if(\"string\"!=typeof t)return o(t).tz(a);var s=function(t,e,n){var i=t-60*e*1e3,o=u(i,n);if(e===o)return[i,e];var r=u(i-=60*(o-e)*1e3,n);return o===r?[i,o]:[t-60*Math.min(o,r)*1e3,Math.max(o,r)]}(o.utc(t,i).valueOf(),f,a),m=s[0],c=s[1],d=o(m).utcOffset(c);return d.$x.$timezone=a,d},o.tz.guess=function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},o.tz.setDefault=function(t){r=t}}}));","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_utc=i()}(this,(function(){\"use strict\";var t=\"minute\",i=/[+-]\\d\\d(?::?\\d\\d)?/g,e=/([+-]|\\d\\d)/g;return function(s,f,n){var u=f.prototype;n.utc=function(t){var i={date:t,utc:!0,args:arguments};return new f(i)},u.utc=function(i){var e=n(this.toDate(),{locale:this.$L,utc:!0});return i?e.add(this.utcOffset(),t):e},u.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var o=u.parse;u.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),o.call(this,t)};var r=u.init;u.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else r.call(this)};var a=u.utcOffset;u.utcOffset=function(s,f){var n=this.$utils().u;if(n(s))return this.$u?0:n(this.$offset)?a.call(this):this.$offset;if(\"string\"==typeof s&&(s=function(t){void 0===t&&(t=\"\");var s=t.match(i);if(!s)return null;var f=(\"\"+s[0]).match(e)||[\"-\",0,0],n=f[0],u=60*+f[1]+ +f[2];return 0===u?0:\"+\"===n?u:-u}(s),null===s))return this;var u=Math.abs(s)<=16?60*s:s,o=this;if(f)return o.$offset=u,o.$u=0===s,o;if(0!==s){var r=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(o=this.local().add(u+r,t)).$offset=u,o.$x.$localOffset=r}else o=this.utc();return o};var h=u.format;u.format=function(t){var i=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return h.call(this,i)},u.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*t},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var l=u.toDate;u.toDate=function(t){return\"s\"===t&&this.$offset?n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate():l.call(this)};var c=u.diff;u.diff=function(t,i,e){if(t&&this.$u===t.$u)return c.call(this,t,i,e);var s=this.local(),f=n(t).local();return c.call(s,f,i,e)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekOfYear=t()}(this,(function(){\"use strict\";var e=\"week\",t=\"year\";return function(i,n,r){var f=n.prototype;f.week=function(i){if(void 0===i&&(i=null),null!==i)return this.add(7*(i-this.week()),\"day\");var n=this.$locale().yearStart||1;if(11===this.month()&&this.date()>25){var f=r(this).startOf(t).add(1,t).date(n),s=r(this).endOf(e);if(f.isBefore(s))return 1}var a=r(this).startOf(t).date(n).startOf(e).subtract(1,\"millisecond\"),o=this.diff(a,e,!0);return o<0?r(this).startOf(\"week\").week():Math.ceil(o)},f.weeks=function(e){return void 0===e&&(e=null),this.week(e)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekday=t()}(this,(function(){\"use strict\";return function(e,t){t.prototype.weekday=function(e){var t=this.$locale().weekStart||0,i=this.$W,n=(i<t?i+7:i)-t;return this.$utils().u(e)?n:this.subtract(n,\"day\").add(e,\"day\")}}}));","'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar gopd = require('gopd');\n\n/** @type {import('.')} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\n/** @type {import('.')} */\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n","'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n","'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n","'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n","'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n","'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n","'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/**\n* Base Logger Class\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass BaseLogger extends libFableServiceProviderBase\n{\n\tconstructor(pLogStreamSettings, pLogStreamHash)\n\t{\n\t\tsuper(pLogStreamSettings, pLogStreamHash);\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = (typeof(pLogStreamSettings) == 'object') ? pLogStreamSettings : {};\n\n\t\tthis.serviceType = 'Logging-Provider';\n\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\t// We added this as the mechanism for tracking loggers to allow multiple simultaneous streams\n\t\t// to the same provider.\n\t\tthis.loggerUUID = this.generateInsecureUUID();\n\n\t\t// Eventually we can use this array to ompute which levels the provider allows.\n\t\t// For now it's just used to precompute some string concatenations.\n\t\tthis.levels = (\n\t\t\t[\n\t\t\t\t\"trace\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"info\",\n\t\t\t\t\"warn\",\n\t\t\t\t\"error\",\n\t\t\t\t\"fatal\"\n\t\t\t]);\n\t}\n\n\t// This is meant to generate programmatically insecure UUIDs to identify loggers\n\tgenerateInsecureUUID()\n\t{\n\t\tlet tmpDate = new Date().getTime();\n\t\tlet tmpUUID = 'LOGSTREAM-xxxxxx-yxxxxx'.replace(/[xy]/g,\n\t\t\t\t(pCharacter) =>\n\t\t\t\t{\n\t\t\t\t\t// Funny algorithm from w3resource that is twister-ish without the deep math and security\n\t\t\t\t\t// ..but good enough for unique log stream identifiers\n\t\t\t\t\tlet tmpRandomData = (tmpDate + Math.random()*16)%16 | 0;\n\t\t\t\t\ttmpDate = Math.floor(tmpDate/16);\n\n\t\t\t\t\treturn (pCharacter =='x' ? tmpRandomData : (tmpRandomData&0x3|0x8)).toString(16);\n\t\t\t\t});\n\t\treturn tmpUUID;\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n","/**\n* Default Logger Provider Function\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\nvar getDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\ttmpDefaultProviders.default = tmpDefaultProviders.console;\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();","module.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]","let libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings);\n\n\t\tthis._ShowTimeStamps = this._Settings.hasOwnProperty('showtimestamps') ? (this._Settings.showtimestamps == true) : true;\n\t\tthis._FormattedTimeStamps = this._Settings.hasOwnProperty('formattedtimestamps') ? (this._Settings.formattedtimestamps == true) : true;\n\n\t\tthis._ContextMessage = this._Settings.hasOwnProperty('Context') ? `(${this._Settings.Context})` :\n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? `(${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'Unnamed_Log_Context';\n\n\t\t// Allow the user to decide what gets output to the console\n\t\tthis._OutputLogLinesToConsole = this._Settings.hasOwnProperty('outputloglinestoconsole') ? this._Settings.outputloglinestoconsole : true;\n\t\tthis._OutputObjectsToConsole = this._Settings.hasOwnProperty('outputobjectstoconsole') ? this._Settings.outputobjectstoconsole : true;\n\n\t\t// Precompute the prefix for each level\n\t\tthis.prefixCache = {};\n\t\tfor (let i = 0; i <= this.levels.length; i++)\n\t\t{\n\t\t\tthis.prefixCache[this.levels[i]] = `[${this.levels[i]}] ${this._ContextMessage}: `;\n\n\t\t\tif (this._ShowTimeStamps)\n\t\t\t{\n\t\t\t\t// If there is a timestamp we need a to prepend space before the prefixcache string, since the timestamp comes first\n\t\t\t\tthis.prefixCache[this.levels[i]] = ' '+this.prefixCache[this.levels[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpTimeStamp = '';\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = (new Date()).toISOString();\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = +new Date();\n\t\t}\n\n\t\tlet tmpLogLine = `${tmpTimeStamp}${this.prefixCache[pLevel]}${pLogText}`;\n\n\t\tif (this._OutputLogLinesToConsole)\n\t\t{\n\t\t\tconsole.log(tmpLogLine);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (this._OutputObjectsToConsole && (typeof(pObject) !== 'undefined'))\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 2));\n\t\t}\n\n\t\t// Provide an easy way to be overridden and be consistent\n\t\treturn tmpLogLine;\n\t}\n}\n\nmodule.exports = ConsoleLogger;","const libConsoleLog = require('./Fable-Log-Logger-Console.js');\nconst libFS = require('fs');\nconst libPath = require('path');\n\nclass SimpleFlatFileLogger extends libConsoleLog\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings, pFableLog);\n\n\t\t// If a path isn't provided for the logfile, it tries to use the ProductName or Context\n\t\tthis.logFileRawPath = (this._Settings.hasOwnProperty('path')) ? this._Settings.path : `./${this._ContextMessage}.log`;\n\t\tthis.logFilePath = libPath.normalize(this.logFileRawPath);\n\n\t\tthis.logFileStreamOptions = (this._Settings.hasOwnProperty('fileStreamoptions')) ? this._Settings.fileStreamOptions : (\n\t\t\t{\n\t\t\t\t\"flags\": \"a\",\n\t\t\t\t\"encoding\": \"utf8\"\n\t\t\t})\n\n\t\tthis.fileWriter = libFS.createWriteStream(this.logFilePath, this.logFileStreamOptions);\n\n\t\tthis.activelyWriting = false;\n\n\t\tthis.logLineStrings = [];\n\t\tthis.logObjectStrings = [];\n\n\t\tthis.defaultWriteCompleteCallback = ()=>{};\n\t\tthis.defaultBufferFlushCallback = ()=>{};\n\t}\n\n\tcloseWriter(fCloseComplete)\n\t{\n\t\tlet tmpCloseComplete = (typeof(fCloseComplete) == 'function') ? fCloseComplete : ()=>{};\n\t\tif (this.fileWriter)\n\t\t{\n\t\t\tthis.fileWriter.end('\\n');\n\t\t\treturn this.fileWriter.once('finish', tmpCloseComplete.bind(this));\n\t\t}\n\t}\n\n\tcompleteBufferFlushToLogFile(fFlushComplete)\n\t{\n\t\tthis.activelyWriting = false;\n\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\tif (this.logLineStrings.length > 0)\n\t\t{\n\t\t\tthis.flushBufferToLogFile(tmpFlushComplete);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpFlushComplete();\n\t\t}\n\t}\n\n\tflushBufferToLogFile(fFlushComplete)\n\t{\n\t\tif (!this.activelyWriting)\n\t\t{\n\t\t\t// Only want to be writing one thing at a time....\n\t\t\tthis.activelyWriting = true;\n\n\t\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\t\t// Get the current buffer arrays.  These should always have matching number of elements.\n\t\t\tlet tmpLineStrings = this.logLineStrings;\n\t\t\tlet tmpObjectStrings = this.logObjectStrings;\n\n\t\t\t// Reset these to be filled while we process this queue...\n\t\t\tthis.logLineStrings = [];\n\t\t\tthis.logObjectStrings = [];\n\n\t\t\t// This is where we will put each line before writing it to the file...\n\t\t\tlet tmpConstructedBufferOutputString = '';\n\n\t\t\tfor (let i = 0; i < tmpLineStrings.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: Windows Newline?   ....... yo no se!\n\t\t\t\ttmpConstructedBufferOutputString += `${tmpLineStrings[i]}\\n`;\n\t\t\t\tif (tmpObjectStrings[i] !== false)\n\t\t\t\t{\n\t\t\t\t\ttmpConstructedBufferOutputString += `${tmpObjectStrings[i]}\\n`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.fileWriter.write(tmpConstructedBufferOutputString, 'utf8'))\n\t\t\t{\n\t\t\t\t// If the streamwriter returns false, we need to wait for it to drain.\n\t\t\t\tthis.fileWriter.once('drain', this.completeBufferFlushToLogFile.bind(this, tmpFlushComplete));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.completeBufferFlushToLogFile(tmpFlushComplete);\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpLogLine = super.write(pLevel, pLogText, pObject);\n\n\t\t// Use a very simple array as the write buffer\n\t\tthis.logLineStrings.push(tmpLogLine);\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tthis.logObjectStrings.push(JSON.stringify(pObject, null, 4));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logObjectStrings.push(false);\n\t\t}\n\n\t\tthis.flushBufferToLogFile();\n\t}\n}\n\nmodule.exports = SimpleFlatFileLogger;","/**\n* Fable Logging Service\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass FableLog extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'Logging';\n\n\t\tlet tmpSettings = (typeof(pSettings) === 'object') ? pSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders-Node.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'default',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\nmodule.exports = FableLog;\nmodule.exports.LogProviderBase = require('./Fable-Log-BaseLogger.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-Console.js');\nmodule.exports.LogProviderFlatfile = require('./Fable-Log-Logger-SimpleFlatFile.js');\n","/**\n* Fable Service Base\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\t// The constructor can be used in two ways:\n\t// 1) With a fable, options object and service hash (the options object and service hash are optional)\n\t// 2) With an object or nothing as the first parameter, where it will be treated as the options object\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Check if a fable was passed in; connect it if so\n\t\tif ((typeof(pFable) === 'object') && pFable.isFable)\n\t\t{\n\t\t\tthis.connectFable(pFable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.fable = false;\n\t\t}\n\n\t\t// initialize options and UUID based on whether the fable was passed in or not.\n\t\tif (this.fable)\n\t\t{\n\t\t\tthis.UUID = pFable.getUUID();\n\t\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t\t: {};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// With no fable, check to see if there was an object passed into either of the first two\n\t\t\t// Parameters, and if so, treat it as the options object\n\t\t\tthis.options = ((typeof(pFable) === 'object') && !pFable.isFable) ? pFable\n\t\t\t\t\t\t\t: (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t\t: {};\n\t\t\tthis.UUID = `CORE-SVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`\n\t\t}\n\n\t\t// It's expected that the deriving class will set this\n\t\tthis.serviceType = `Unknown-${this.UUID}`;\n\n\t\t// The service hash is used to identify the specific instantiation of the service in the services map\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash \n\t\t\t\t\t: (!this.fable && (typeof(pOptions) === 'string')) ? pOptions\n\t\t\t\t\t: `${this.UUID}`;\n\t}\n\n\tconnectFable(pFable)\n\t{\n\t\tif ((typeof(pFable) !== 'object') || (!pFable.isFable))\n\t\t{\n\t\t\tlet tmpErrorMessage = `Fable Service Provider Base: Cannot connect to Fable, invalid Fable object passed in.  The pFable parameter was a [${typeof(pFable)}].}`;\n\t\t\tconsole.log(tmpErrorMessage);\n\t\t\treturn new Error(tmpErrorMessage);\n\t\t}\n\n\t\tif (!this.fable)\n\t\t{\n\t\t\tthis.fable = pFable;\n\t\t}\n\n\t\tif (!this.log)\n\t\t{\n\t\t\tthis.log = this.fable.Logging;\n\t\t}\n\t\tif (!this.services)\n\t\t{\n\t\t\tthis.services = this.fable.services;\n\t\t}\n\n\t\tif (!this.servicesMap)\n\t\t{\n\t\t\tthis.servicesMap = this.fable.servicesMap;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tstatic isFableService = true;\n}\n\nmodule.exports = FableServiceProviderBase;\n\n// This is left here in case we want to go back to having different code/base class for \"core\" services\nmodule.exports.CoreServiceProviderBase = FableServiceProviderBase;","module.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n","/**\n* Fable Settings Template Processor\n*\n* This class allows environment variables to come in via templated expressions, and defaults to be set.\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\nconst libPrecedent = require('precedent');\n\nclass FableSettingsTemplateProcessor\n{\n\tconstructor(pDependencies)\n\t{\n        // Use a no-dependencies templating engine to parse out environment variables\n\t\tthis.templateProcessor = new libPrecedent();\n\n        // TODO: Make the environment variable wrap expression demarcation characters configurable?\n\t\tthis.templateProcessor.addPattern('${', '}',\n\t\t\t(pTemplateValue)=>\n\t\t\t{\n\t\t\t\tlet tmpTemplateValue = pTemplateValue.trim();\n\n\t\t\t\tlet tmpSeparatorIndex = tmpTemplateValue.indexOf('|');\n\n\t\t\t\tconst tmpDefaultValue = tmpSeparatorIndex >= 0 ? tmpTemplateValue.substring(tmpSeparatorIndex+1) : '';\n\n\t\t\t\tlet tmpEnvironmentVariableName = (tmpSeparatorIndex > -1) ? tmpTemplateValue.substring(0, tmpSeparatorIndex) : tmpTemplateValue;\n\n\t\t\t\tif (process.env.hasOwnProperty(tmpEnvironmentVariableName))\n\t\t\t\t{\n\t\t\t\t\treturn process.env[tmpEnvironmentVariableName];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpDefaultValue;\n\t\t\t\t}\n\t\t\t});\n    }\n\n    parseSetting(pString)\n    {\n        return this.templateProcessor.parseString(pString);\n    }\n}\n\nmodule.exports = FableSettingsTemplateProcessor;\n","/**\n* Fable Settings Add-on\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nconst libFableSettingsTemplateProcessor = require('./Fable-Settings-TemplateProcessor.js');\n\nclass FableSettings extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'SettingsManager';\n\n\t\t// Initialize the settings value template processor\n\t\tthis.settingsTemplateProcessor = new libFableSettingsTemplateProcessor();\n\n\t\t// set straight away so anything that uses it respects the initial setting\n\t\tthis._configureEnvTemplating(pSettings);\n\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')));\n\t}\n\n\t// Update the configuration for environment variable templating based on the current settings object\n\t_configureEnvTemplating(pSettings)\n\t{\n\t\t// default environment variable templating to on\n\t\tthis._PerformEnvTemplating = !pSettings || pSettings.NoEnvReplacement !== true;\n\t}\n\n\t// Resolve (recursive) any environment variables found in settings object.\n\t_resolveEnv(pSettings)\n\t{\n\t\tfor (const tmpKey in pSettings)\n\t\t{\n\t\t\tif (typeof(pSettings[tmpKey]) === 'object')\n\t\t\t{\n\t\t\t\tthis._resolveEnv(pSettings[tmpKey]);\n\t\t\t}\n\t\t\telse if (typeof(pSettings[tmpKey]) === 'string')\n\t\t\t{\n\t\t\t\tpSettings[tmpKey] = this.settingsTemplateProcessor.parseSetting(pSettings[tmpKey]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if a value is an object (but not an array).\n\t */\n\t_isObject(value)\n\t{\n\t\treturn typeof(value) === 'object' && !Array.isArray(value);\n\t}\n\n\t/**\n\t * Merge two plain objects. Keys that are objects in both will be merged property-wise.\n\t */\n\t_deepMergeObjects(toObject, fromObject)\n\t{\n\t\tif (!fromObject || !this._isObject(fromObject))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.keys(fromObject).forEach((key) =>\n\t\t{\n\t\t\tconst fromValue = fromObject[key];\n\t\t\tif (this._isObject(fromValue))\n\t\t\t{\n\t\t\t\tconst toValue = toObject[key];\n\t\t\t\tif (toValue && this._isObject(toValue))\n\t\t\t\t{\n\t\t\t\t\t// both are objects, so do a recursive merge\n\t\t\t\t\tthis._deepMergeObjects(toValue, fromValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoObject[key] = fromValue;\n\t\t});\n\t\treturn toObject;\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\t\ttmpSettingsTo = this._deepMergeObjects(tmpSettingsTo, tmpSettingsFromCopy);\n\n\t\tif (this._PerformEnvTemplating)\n\t\t{\n\t\t\tthis._resolveEnv(tmpSettingsTo);\n\t\t}\n\t\t// Update env tempating config, since we just updated the config object, and it may have changed\n\t\tthis._configureEnvTemplating(tmpSettingsTo);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\n\t\tthis.settings = this._deepMergeObjects(tmpSettingsFromCopy, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = FableSettings;\nmodule.exports.new = autoConstruct;","/**\n* Random Byte Generator - Browser version\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn this.generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n","/**\n* Fable UUID Generator\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;0\n\nconst libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'UUID';\n\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = FableUUID;\nmodule.exports.new = autoConstruct;\n","/**\n* Fable Application Services Support Library\n* @author <steven@velozo.com>\n*/\n// Pre-init services\nconst libFableSettings = require('fable-settings');\nconst libFableUUID = require('fable-uuid');\nconst libFableLog = require('fable-log');\n\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass Fable extends libFableServiceBase.CoreServiceProviderBase\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\t// Initialization Phase 0: Set up the lowest level state (fable is a utility service manager at heart)\n\t\tthis.serviceType = 'ServiceManager';\n\n\t\t// An array of the types of services available\n\t\tthis.serviceTypes = [];\n\t\t// A map of instantiated services\n\t\tthis.servicesMap = {};\n\t\t// A map of the default instantiated service by type\n\t\tthis.services = {};\n\n\t\t// A map of class constructors for services\n\t\tthis.serviceClasses = {};\n\n\t\t// If we need extra service initialization capabilities\n\t\tthis.extraServiceInitialization = false;\n\n\t\t// Set how noisy the system is about signaling complexity\n\t\tthis.LogNoisiness = 0;\n\n\t\t// Initialization Phase 1: Set up the core utility services\n\t\t// These are things like power, water, and sewage.  They are required for fable to run (e.g. logging, settings, etc)\n\n\t\t// Instantiate the default Settings Manager\n\t\tthis.SettingsManager = new libFableSettings(pSettings);\n\t\tthis.SettingsManager = this.SettingsManager;\n\t\t// Instantiate the UUID generator\n\t\tthis.UUID = new libFableUUID(this.SettingsManager.settings);\n\t\t// Instantiate the logging system\n\t\tthis.Logging = new libFableLog(this.SettingsManager.settings);\n\t\tthis.Logging.initialize();\n\n\t\t// Initialization Phase 1.5: Instantiate the service manager\n\t\t// This is the start actual bootstrapping point for fable.\n\t\t// For consistency fable is treated as a service.\n\t\tthis.ServiceManager = this;\n\t\t// TODO: Remove this when Orator and meadow-endpoints are shifted to this new pattern\n\t\tthis.serviceManager = this;\n\t\t// END TODO\n\t\tthis.connectFable(this);\n\t\t// --> Bootstrapping of fable into the Service Manager is complete\n\n\t\t// Initialization Phase 2: Map in the default services.\n\t\t// They will then be available in the Default service provider set as well.\n\t\tthis.connectPreinitServiceProviderInstance(this.UUID);\n\t\tthis.connectPreinitServiceProviderInstance(this.Logging);\n\t\tthis.connectPreinitServiceProviderInstance(this.SettingsManager);\n\n\t\t// Initialize and instantiate the default baked-in Data Arithmatic service\n\t\tthis.addAndInstantiateServiceType('EnvironmentData', require('./services/Fable-Service-EnvironmentData.js'));\n\t\tthis.addServiceType('Template', require('./services/Fable-Service-Template.js'));\n\t\tthis.addServiceType('MetaTemplate', require('./services/Fable-Service-MetaTemplate.js'));\n\t\tthis.addServiceType('Anticipate', require('./services/Fable-Service-Anticipate.js'));\n\t\tthis.addAndInstantiateServiceType('Dates', require('./services/Fable-Service-DateManipulation.js'));\n\t\tthis.addAndInstantiateServiceType('DataFormat', require('./services/Fable-Service-DataFormat.js'));\n\t\tthis.addAndInstantiateServiceType('DataGeneration', require('./services/Fable-Service-DataGeneration.js'));\n\t\tthis.addAndInstantiateServiceType('Utility', require('./services/Fable-Service-Utility.js'));\n\t\tthis.addAndInstantiateServiceType('Math', require('./services/Fable-Service-Math.js'));\n\t\tthis.addServiceType('ExpressionParser', require('./services/Fable-Service-ExpressionParser.js'));\n\t\tthis.addServiceType('RestClient', require('./services/Fable-Service-RestClient.js'));\n\t\tthis.addServiceType('Manifest', require('manyfest'));\n\t\tthis.addServiceType('ObjectCache', require('cachetrax'));\n\t\tthis.addAndInstantiateServiceType('ProgressTime', require('./services/Fable-Service-ProgressTime.js'));\n\t\tthis.addServiceType('ProgressTrackerSet', require('./services/Fable-Service-ProgressTrackerSet.js'));\n\t\tthis.addServiceType('Operation', require('./services/Fable-Service-Operation.js'));\n\t\tthis.addServiceType('CSVParser', require('./services/Fable-Service-CSVParser.js'));\n\t\tthis.addServiceType('FilePersistence', require('./services/Fable-Service-FilePersistence.js'));\n\t}\n\n\t/* State Accessors */\n\tget isFable()\n\t{\n\t\treturn true;\n\t}\n\n\tget settings()\n\t{\n\t\treturn this.SettingsManager.settings;\n\t}\n\n\tget settingsManager()\n\t{\n\t\treturn this.SettingsManager;\n\t}\n\n\t// For backwards compatibility\n\tgetUUID()\n\t{\n\t\treturn this.UUID.getUUID();\n\t}\n\n\tnewAnticipate()\n\t{\n\t\treturn this.instantiateServiceProviderWithoutRegistration('Anticipate');\n\t}\n\n\tnewManyfest(pManifestDefinition)\n\t{\n\t\treturn this.instantiateServiceProviderWithoutRegistration('Manifest', pManifestDefinition);\n\t}\n\n\t/* Service Manager Methods */\n\taddServiceType(pServiceType, pServiceClass)\n\t{\n\t\tif (this.servicesMap.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\t// TODO: Check if any services are running?\n\t\t\tthis.log.warn(`Adding a service type [${pServiceType}] that already exists.  This will change the default class prototype for this service.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the container for instantiated services to go in\n\t\t\tthis.servicesMap[pServiceType] = {};\n\n\t\t\t// Add the type to the list of types\n\t\t\tthis.serviceTypes.push(pServiceType);\n\t\t}\n\n\t\t// Using the static member of the class is a much more reliable way to check if it is a service class than instanceof\n\t\tif ((typeof(pServiceClass) == 'function') && (pServiceClass.isFableService))\n\t\t{\n\t\t\t// Add the class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = pServiceClass;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the base class to the list of classes\n\t\t\tthis.log.error(`Attempted to add service type [${pServiceType}] with an invalid class.  Using base service class, which will not crash but won't provide meaningful services.`);\n\t\t\tthis.serviceClasses[pServiceType] = libFableServiceBase;\n\t\t}\n\n\t\treturn this.serviceClasses[pServiceType];\n\t}\n\n\taddServiceTypeIfNotExists(pServiceType, pServiceClass)\n\t{\n\t\tif (!this.servicesMap.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\treturn this.addServiceType(pServiceType, pServiceClass);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.serviceClasses[pServiceType];\n\t\t}\n\t}\n\n\t// This is for the services that are meant to run mostly single-instance so need a default at initialization\n\taddAndInstantiateServiceType(pServiceType, pServiceClass)\n\t{\n\t\tthis.addServiceType(pServiceType, pServiceClass);\n\t\treturn this.instantiateServiceProvider(pServiceType, {}, `${pServiceType}-Default`);\n\t}\n\n\taddAndInstantiateServiceTypeIfNotExists(pServiceType, pServiceClass)\n\t{\n\t\tif (!this.servicesMap.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\treturn this.instantiateServiceProvider(pServiceType, {}, `${pServiceType}-Default`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.serviceClasses[pServiceType];\n\t\t}\n\t}\n\n\t// Some services expect to be overloaded / customized class.\n\tinstantiateServiceProviderFromPrototype(pServiceType, pOptions, pCustomServiceHash, pServicePrototype)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new pServicePrototype(this, pOptions, pCustomServiceHash);\n\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\tinstantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = this.instantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\tinstantiateServiceProviderIfNotExists(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\tif (this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\treturn this.services[pServiceType];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash);\n\t\t}\n\t}\n\n\t// Create a service provider but don't register it to live forever in fable.services\n\tinstantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new this.serviceClasses[pServiceType](this, pOptions, pCustomServiceHash);\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\t\treturn tmpService;\n\t}\n\n\t// Connect an initialized service provider that came before Fable was initialized\n\tconnectPreinitServiceProviderInstance(pServiceInstance)\n\t{\n\t\tlet tmpServiceType = pServiceInstance.serviceType;\n\t\tlet tmpServiceHash = pServiceInstance.Hash;\n\n\t\t// The service should already be instantiated, so just connect it to fable\n\t\tpServiceInstance.connectFable(this);\n\n\t\t// Add the service type to the map if it isn't there yet\n\t\tif (!this.servicesMap.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\t// If the core service hasn't registered itself yet, create the service container for it.\n\t\t\t// This means you couldn't register another with this type unless it was later registered with a constructor class.\n\t\t\tthis.servicesMap[tmpServiceType] = {};\n\t\t}\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[tmpServiceType][tmpServiceHash] = pServiceInstance;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(tmpServiceType, tmpServiceHash, false);\n\t\t}\n\n\t\treturn pServiceInstance;\n\t}\n\n\tsetDefaultServiceInstantiation(pServiceType, pServiceHash, pOverwriteService)\n\t{\n\t\t// Overwrite services by default, unless told not to\n\t\tlet tmpOverwriteService = (typeof(pOverwriteService) === 'undefined') ? true : pOverwriteService;\n\t\t// Make sure the service exists\n\t\tif (this.servicesMap[pServiceType].hasOwnProperty(pServiceHash))\n\t\t{\n\t\t\tif (!this.hasOwnProperty(pServiceType) || tmpOverwriteService)\n\t\t\t{\n\t\t\t\tthis[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\t}\n\t\t\tif (!this.services.hasOwnProperty(pServiceType) || tmpOverwriteService)\n\t\t\t{\n\t\t\t\tthis.services[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\t\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = Fable;\nmodule.exports.new = autoConstruct;\n\nmodule.exports.LogProviderBase = libFableLog.LogProviderBase;\nmodule.exports.ServiceProviderBase = libFableServiceBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceBase.CoreServiceProviderBase;\n\nmodule.exports.precedent = libFableSettings.precedent;\n","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceAnticipate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'AsyncAnticipate';\n\n\t\t// The queue of operations waiting to run.\n\t\tthis.operationQueue = [];\n\t\tthis.erroredOperations = [];\n\n\t\tthis.executingOperationCount = 0;\n\t\tthis.completedOperationCount = 0;\n\n\t\tthis.callDepth = 0;\n\n\t\tthis.maxOperations = 1;\n\n\t\tthis.lastError = undefined;\n\t\tthis.waitingFunctions = [];\n\t}\n\n\tcheckQueue()\n\t{\n\t\t// This could be combined with the last else if stanza but the logic for errors and non-errors would be blended and more complex to follow so keeping it unrolled.\n\t\tif (this.lastError)\n\t\t{\n\t\t\t// If there are no operations left, and we have waiting functions, call them.\n\t\t\tfor (let i = 0; i < this.waitingFunctions.length; i++)\n\t\t\t{\n\t\t\t\t//this.log.trace('Calling waiting function.')\n\t\t\t\tthis.waitingFunctions[i](this.lastError);\n\t\t\t}\n\t\t\t// Reset our state\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.waitingFunctions = [];\n\t\t}\n\t\t// This checks to see if we need to start any operations.\n\t\telse if (this.operationQueue.length > 0 && this.executingOperationCount < this.maxOperations)\n\t\t{\n\t\t\tlet tmpOperation = this.operationQueue.shift();\n\t\t\tthis.executingOperationCount += 1;\n\t\t\ttmpOperation(this.buildAnticipatorCallback());\n\t\t}\n\t\telse if (this.waitingFunctions.length > 0 && this.executingOperationCount < 1)\n\t\t{\n\t\t\t// If there are no operations left, and we have waiting functions, call them.\n\t\t\tfor (let i = 0; i < this.waitingFunctions.length; i++)\n\t\t\t{\n\t\t\t\t//this.log.trace('Calling waiting function.')\n\t\t\t\tthis.waitingFunctions[i](this.lastError);\n\t\t\t}\n\t\t\t// Reset our state\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.waitingFunctions = [];\n\t\t}\n\t}\n\n\t// Expects a function fAsynchronousFunction(fCallback)\n\tanticipate(fAsynchronousFunction)\n\t{\n\t\t//this.log.trace('Adding a function...')\n\t\tthis.operationQueue.push(fAsynchronousFunction);\n\t\tthis.checkQueue();\n\t}\n\n\tbuildAnticipatorCallback()\n\t{\n\t\t// This uses closure-scoped state to track the callback state\n\t\tlet tmpCallbackState = (\n\t\t\t{\n\t\t\t\tCalled: false,\n\t\t\t\tError: undefined,\n\t\t\t\tOperationSet: this\n\t\t\t});\n\t\treturn hoistedCallback.bind(this);\n\t\tfunction hoistedCallback(pError)\n\t\t{\n\t\t\tif (tmpCallbackState.Called)\n\t\t\t{\n\t\t\t\t// If they call the callback twice, throw an error\n\t\t\t\tthrow new Error(\"Anticipation async callback called twice...\");\n\t\t\t}\n\t\t\ttmpCallbackState.Called = true;\n\t\t\tthis.lastError = pError;\n\n\t\t\ttmpCallbackState.OperationSet.executingOperationCount -= 1;\n\t\t\ttmpCallbackState.OperationSet.completedOperationCount += 1;\n\n\t\t\ttmpCallbackState.OperationSet.callDepth++;\n\n\t\t\t// TODO: Figure out a better pattern for chaining templates so the call stack doesn't get abused.\n\t\t\tif (tmpCallbackState.OperationSet.callDepth > 400)\n\t\t\t{\n\t\t\t\ttmpCallbackState.OperationSet.callDepth = 0;\n\t\t\t\tsetTimeout(tmpCallbackState.OperationSet.checkQueue.bind(this), 0);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpCallbackState.OperationSet.checkQueue();\n\t\t\t}\n\t\t}\n\t}\n\n\twait(fCallback)\n\t{\n\t\tthis.waitingFunctions.push(fCallback);\n\t\tthis.checkQueue();\n\t}\n}\n\nmodule.exports = FableServiceAnticipate;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Parsing CSVs.  Why?  Because it's a thing that needs to be done.\n*\n* 1. And the other node CSV parsers had issues with the really messy files we had.\n* \n*\n* 2. None of the CSV parsers dealt with and multi-line quoted string columns\n*    which are apparently a-ok according to the official spec.\n* Plus a lot of them are asynchronous because apparently that's the best way to\n* do anything; unfortunately some files have a sequence issue with that.\n*\n* @class CSVParser\n*/\nclass CSVParser extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'CSVParser';\n\n        this.Header = [];\n        this.HeaderFieldNames = [];\n\n        this.Delimiter = ',';\n        this.QuoteCharacter = '\"';\n\n        this.CleanCharacters = ['\\r'];\n\n        this.HeaderLineIndex = 0;\n        this.HasHeader = true;\n        this.HasSetHeader = false;\n        this.EmitHeader = false;\n\n        this.EmitJSON = true;\n\n        this.EscapedQuoteString = '&quot;';\n\n        // Current Line Parsing State\n        this.CurrentLine = '';\n        this.CurrentRecord = [];\n\n        this.InQuote = false;\n        this.InEscapedQuote = false;\n\n        this.LinesParsed = 0;\n        this.RowsEmitted = 0;\n    }\n\n    marshalRowToJSON(pRowArray)\n    {\n        if (!Array.isArray(pRowArray))\n        {\n            return false;\n        }\n\n        for (let i = this.HeaderFieldNames.length; i < pRowArray.length; i++)\n        {\n            this.HeaderFieldNames[i] = `${i}`;\n        }\n\n        let tmpObject = {};\n\n        for (let i = 0; i < pRowArray.length; i++)\n        {\n            tmpObject[this.HeaderFieldNames[i]] = pRowArray[i];\n        }\n\n        return tmpObject;\n    }\n\n    // Set the header data, for use in marshalling to JSON.\n    setHeader (pHeaderArray)\n    {\n        this.Header = pHeaderArray;\n\n        for (let i = 0; i < this.Header.length; i++)\n        {\n            if (typeof(this.Header[i]) == 'undefined')\n            {\n                this.HeaderFieldNames[i] = `${i}`;\n            }\n            else\n            {\n                this.HeaderFieldNames[i] = this.Header[i].toString().trim();\n            }\n        }\n    }\n\n    resetRowState()\n    {\n        this.CurrentRecord = [];\n    }\n\n    pushLine()\n    {\n        for (let i = 0; i < this.CleanCharacters.length; i++)\n        {\n            this.CurrentLine = this.CurrentLine.replace(this.CleanCharacters[i],'');\n        }\n        this.CurrentRecord.push(this.CurrentLine);\n        this.CurrentLine = '';\n    }\n\n    emitRow(pFormatAsJSON)\n    {\n        let tmpFormatAsJSON = (typeof(pFormatAsJSON) == 'undefined') ? this.EmitJSON : pFormatAsJSON;\n\n        this.RowsEmitted++;\n        let tmpCompletedRecord = this.CurrentRecord;\n        this.CurrentRecord = [];\n\n        if (tmpFormatAsJSON)\n        {\n            return this.marshalRowToJSON(tmpCompletedRecord);\n        }\n        else\n        {\n            return tmpCompletedRecord;\n        }\n    }\n\n    parseCSVLine (pLineString)\n    {\n        this.LinesParsed++;\n\n        for (let i = 0; i < pLineString.length; i++)\n        {\n            if ((!this.InQuote) && (pLineString[i] == this.Delimiter))\n            {\n                this.pushLine();\n            }\n            else if (pLineString[i] == this.QuoteCharacter)\n            {\n                // If we are in the second part of an escaped quote, ignore it.\n                if (this.InEscapedQuote)\n                {\n                    this.InEscapedQuote = false;\n                }\n                // If we aren't in a quote, enter quote\n                else if (!this.InQuote)\n                {\n                    this.InQuote = true;\n                }\n                // We are in a quote, so peek forward to see if this is an \"escaped\" quote pair\n                else if ((i < pLineString.length) && (pLineString[i+1] == this.QuoteCharacter))\n                {\n                    this.CurrentLine += this.EscapedQuoteString;\n                    this.InEscapedQuote = true;\n                }\n                // We are in a quote, this isn't an \"escaped\" quote pair, so go out of quote mode\n                else\n                {\n                    this.InQuote = false;\n                }\n            }\n            else\n            {\n                this.CurrentLine += pLineString[i];\n            }\n        }\n\n        // See if we are in a multiline quoted entry -- if not, emit the row.\n        if (!this.InQuote)\n        {\n            // Push the last remaining column from the buffer to the current line.\n            this.pushLine();\n\n            // Check to see if there is a header -- and if so, if this is the header row\n            if (this.HasHeader && !this.HasSetHeader && (this.RowsEmitted == this.HeaderLineIndex))\n            {\n                this.HasSetHeader = true;\n                // Override the format as json bit\n                this.setHeader(this.emitRow(false));\n\n                // No matter what, formatting this as JSON is silly and we don't want to go there anyway.\n                if (this.EmitHeader)\n                {\n                    return this.Header;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n            else\n            {\n                return this.emitRow();\n            }\n        }\n        else\n        {\n            return false;\n        }\n    };\n}\n\nmodule.exports = CSVParser;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Data Formatting and Translation Functions\n*\n* @class DataFormat\n*/\nclass DataFormat extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'DataArithmatic';\n\n\t\t// Regular Expressions (so they don't have to be recompiled every time)\n\t\t// These could be defined as static, but I'm not sure if that will work with browserify ... and specifically the QT browser.\n\t\tthis._Regex_formatterInsertCommas = /.{1,3}/g;\n\t\t// Match Function:\n\t\t// function(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t\t// Thoughts about below:   /^([+-]?)(0*)(\\d+)(\\.(\\d+))?$/;\n\t\tthis._Regex_formatterAddCommasToNumber = /^([-+]?)(0?)(\\d+)(.?)(\\d+)$/g;\n\t\tthis._Regex_formatterDollarsRemoveCommas = /,/gi;\n\t\tthis._Regex_formatterCleanNonAlphaChar = /[^a-zA-Z]/gi;\n\t\tthis._Regex_formatterCapitalizeEachWord = /([a-zA-Z]+)/g;\n\n\t\t// TODO: Potentially pull these in from a configuration.\n\t\t// TODO: Use locale data for this if it's defaults all the way down.\n\t\tthis._Value_MoneySign_Currency = '$';\n\t\tthis._Value_NaN_Currency = '--';\n\t\tthis._Value_GroupSeparator_Number = ',';\n\n\t\tthis._Value_Prefix_StringHash = 'HSH';\n\t\tthis._Value_Clean_formatterCleanNonAlpha = '';\n\n\t\tthis._UseEngineStringStartsWith = (typeof(String.prototype.startsWith) === 'function');\n\t\tthis._UseEngineStringEndsWith = (typeof(String.prototype.endsWith) === 'function');\n\t}\n\n\n\t/*************************************************************************\n\t * String Manipulation and Comparison Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Reverse a string\n\t *\n\t * @param {string} pString - The string to reverse\n\t * @returns {string}\n\t */\n\tstringReverse (pString)\n\t{\n\t\t// TODO: Benchmark if there are faster ways we want to do this with all the newer JS stuff\n\t\t//       ... and if it will work with browserify in a clean way.\n\t\treturn pString.split('').reverse().join('');\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pStartIndex\n\t * @returns {boolean}\n\t */\n\tstringStartsWith (pString, pSearchString, pStartIndex)\n\t{\n\t\tif (this._UseEngineStringStartsWith)\n\t\t{\n\t\t\treturn pString.startsWith(pSearchString, pStartIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringStartsWith_Polyfill.call(pString, pSearchString, pStartIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pStartIndex - The index to start the search at\n\t * @returns {boolean}\n\t */\n\tstringStartsWith_Polyfill (pSearchString, pStartIndex)\n\t{\n\t\treturn this.slice(pStartIndex || 0, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pEndIndex\n\t * @returns {*}\n\t */\n\tstringEndsWith (pString, pSearchString, pEndIndex)\n\t{\n\t\tif (this._UseEngineStringEndsWith)\n\t\t{\n\t\t\treturn pString.endsWith(pSearchString, pEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringEndsWith_Polyfill.call(pString, pSearchString, pEndIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pEndIndex - The index to end the search at\n\t * @returns {boolean}\n\t */\n\tstringEndsWith_Polyfill (pSearchString, pEndIndex)\n\t{\n\t\t// This works much better than >= because\n\t\t// it compensates for NaN:\n\t\tif (!(pEndIndex < this.length))\n\t\t{\n\t\t\tpEndIndex = this.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpEndIndex |= 0; // round position\n\t\t}\n\t\treturn this.substr(pEndIndex - pSearchString.length, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Generate an insecure string hash.  Not meant to be secure, just a quick way to generate a hash for a string.  This is not a cryptographic hash.  Additional warranty and disclaimer ... this is not for passwords!\n\t *\n\t * @param {string} pString\n\t * @returns {string}\n\t */\n\tinsecureStringHash (pString)\n\t{\n\t\tlet tmpHash = 0;\n\t\tlet tmpStringLength = pString.length;\n\t\tlet tmpCharacterIndex = 0;\n\n\t\twhile (tmpCharacterIndex < tmpStringLength)\n\t\t{\n\t\t\ttmpHash = (tmpHash << 5) - tmpHash + pString.charCodeAt(tmpCharacterIndex++) | 0;\n\t\t}\n\n\t\treturn `${this._Value_Prefix_StringHash}${tmpHash}`;\n\t}\n\n\tcapitalizeEachWord (pString)\n\t{\n\t\treturn pString.replace(this._Regex_formatterCapitalizeEachWord,\n\t\t\t(pMatch) =>\n\t\t\t{\n\t\t\t\treturn pMatch.charAt(0).toUpperCase() + pMatch.substr(1);\n\t\t\t});\n\t}\n\n\t/**\n\t * Clean wrapping characters if they exist consistently around the string.  If they do not, the string is returned unchanged.\n\t *\n\t * @param {string} pWrapCharacter - The character expected as the wrapping character\n\t * @param {string} pString - the string to clean\n\t * @returns {string}\n\t */\n\tcleanEnclosureWrapCharacters (pWrapCharacter, pString)\n\t{\n\t\t// # Use case from ManyFest DSL:\n\t\t//\n\t\t// When a boxed property is passed in, it should have quotes of some\n\t\t// kind around it.\n\t\t//\n\t\t// For instance:\n\t\t// \t\tMyValues['Name']\n\t\t// \t\tMyValues[\"Age\"]\n\t\t// \t\tMyValues[`Cost`]\n\t\t//\n\t\t// This function is necessary to remove the wrapping quotes before object\n\t\t// resolution can occur.\n\t\tif (pString.startsWith(pWrapCharacter) && pString.endsWith(pWrapCharacter))\n\t\t{\n\t\t\treturn pString.substring(1, pString.length - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pString;\n\t\t}\n\t}\n\n\t/**\n\t * Clean a string of any non-alpha characters (including numbers)\n\t *\n\t * @param {*} pString\n\t * @returns\n\t */\n\tcleanNonAlphaCharacters (pString)\n\t{\n\t\tif ((typeof(pString) == 'string') && (pString != ''))\n\t\t{\n\t\t\treturn pString.replace(this._Regex_formatterCleanNonAlphaChar, this._Value_Clean_formatterCleanNonAlpha);\n\t\t}\n\n\t\treturn '';\n\t}\n\n\n\t/*************************************************************************\n\t * Number Formatting Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Insert commas every 3 characters from the right.  Used by formatterAddCommasToNumber().\n\t *\n\t * @param {*} pString\n\t * @returns {*}\n\t */\n\tformatterInsertCommas (pString)\n\t{\n\t\t// Reverse, because it's easier to do things from the left, given arbitrary digit counts\n\t\tlet tmpReversed = this.stringReverse(pString);\n\t\t// Add commas every three characters\n\t\tlet tmpReversedWithCommas = tmpReversed.match(this._Regex_formatterInsertCommas).join(',');\n\t\t// Reverse again (back to normal direction)\n\t\treturn this.stringReverse(tmpReversedWithCommas);\n\t}\n\n\tprocessAddCommasToNumberRegex(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t{\n\t\t// If there was no decimal, the last capture grabs the final digit, so\n\t\t// we have to put it back together with the 'before' substring\n\t\treturn pSign + (pDecimal ? this.formatterInsertCommas(pBefore) + pDecimal + pAfter : this.formatterInsertCommas(pBefore + pAfter));\n\t}\n\n\t/**\n\t * Add Commas to a Number for readability.\n\t *\n\t * @param {*} pNumber\n\t * @returns {string}\n\t */\n\tformatterAddCommasToNumber (pNumber)\n\t{\n\t\t// If the regex doesn't match, `replace` returns the string unmodified\n\t\treturn (pNumber.toString()).replace\n\t\t(\n\t\t\tthis._Regex_formatterAddCommasToNumber,\n\t\t\tthis.processAddCommasToNumberRegex.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * This will take a number and format it as a dollar string.  It will also add commas to the number.  If the number is not a number, it will return '--'.\n\t *\n\t * @param {*} pValue\n\t * @returns {string}\n\t */\n\tformatterDollars (pValue, pPrecision, pRoundingMethod)\n\t{\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tif (pValue === null || pValue === undefined)\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tlet tmpDollarAmountArbitrary = this.fable.Math.parsePrecise(pValue);\n\t\tlet tmpPrecision = (typeof(pPrecision) == 'undefined') ? 2 : pPrecision;\n\t\tlet tmpDollarAmount = this.fable.Math.toFixedPrecise(tmpDollarAmountArbitrary, tmpPrecision, pRoundingMethod);\n\n\t\t// TODO: Get locale data and use that for this stuff.\n\t\treturn `$${this.formatterAddCommasToNumber(tmpDollarAmount)}`;\n\t}\n\n\t/**\n\t * Round a number to a certain number of digits.  If the number is not a number, it will return 0.  If no digits are specified, it will default to 2 significant digits.\n\t *\n\t * @param {*} pValue\n\t * @param {number} pDigits\n\t * @returns {string}\n\t */\n\tformatterRoundNumber (pValue, pDigits)\n\t{\n\t\tlet tmpDigits = (typeof(pDigits) == 'undefined') ? 2 : pDigits;\n\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\n\t\tif (pValue === null || pValue === undefined)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpValue = tmpAmountArbitrary.toFixed(tmpDigits);\n\n\t\tif (isNaN(tmpValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpValue;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate a reapeating padding string to be appended before or after depending on \n\t * which padding function it uses.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringGeneratePaddingString(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpTargetLength = pTargetLength >> 0;\n\t\tlet tmpPadString = String((typeof pPadString !== 'undefined' ? pPadString : ' '));\n\t\tif (pString.length > pTargetLength)\n\t\t{\n\t\t\t// No padding string if the source string is already longer than the target length, return an empty string\n\t\t\treturn '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpPadLength = pTargetLength - pString.length;\n\t\t\tif (tmpPadLength > tmpPadString.length)\n\t\t\t{\n\t\t\t\ttmpPadString += tmpPadString.repeat(tmpTargetLength / tmpPadString.length);\n\t\t\t}\n\t\t\treturn tmpPadString.slice(0, tmpPadLength);\n\t\t}\n\t}\n\n\t/**\n\t * Pad the start of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadStart = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString) + tmpString;\n\t}\n\n\t/**\n\t * Pad the end of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadEnd = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn tmpString + this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString);\n\t}\n\n\t/*************************************************************************\n\t * Time Formatting Functions (milliseconds)\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Format a time length in milliseconds into a human readable string.\n\t * @param {number} pTimeSpan \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeSpan(pTimeSpan)\n\t{\n\t\tif (typeof(pTimeSpan) != 'number')\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpMs = parseInt(pTimeSpan%1000);\n\t\tlet tmpSeconds = parseInt((pTimeSpan/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeSpan/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeSpan/(1000*60*60));\n\n\t\treturn `${this.stringPadStart(tmpHours,2,'0')}:${this.stringPadStart(tmpMinutes,2,'0')}:${this.stringPadStart(tmpSeconds,2,'0')}.${this.stringPadStart(tmpMs,3,'0')}`;\n\t}\n\n\t/**\n\t * Format the time delta between two times in milliseconds into a human readable string.\n\t * \n\t * @param {number} pTimeStart \n\t * @param {number} pTimeEnd \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeDelta(pTimeStart, pTimeEnd)\n\t{\n\t\tif ((typeof(pTimeStart) != 'number') || (typeof(pTimeEnd) != 'number'))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.formatTimeSpan(pTimeEnd-pTimeStart);\n\t}\n\n\t// THE FOLLOWING TERRIBLE FUNCTIONS ARE FOR QT / WKHTMLTOPDF when luxon and moment don't work so well\n\tgetMonthFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tgetMonthAbbreviatedFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tformatMonthDayYearFromDate (pJavascriptDate, pStrict)\n\t{\n\t\tlet tmpStrict = (typeof(pStrict) !== 'undefined') ? pStrict : false;\n\n\t\tlet tmpMonth = pJavascriptDate.getMonth() + 1;\n\t\tlet tmpDay = pJavascriptDate.getDate();\n\t\tlet tmpYear = pJavascriptDate.getFullYear();\n\t\t\n\t\tif (tmpStrict)\n\t\t{\n\t\t\ttmpMonth = this.stringPadStart(tmpMonth, 2, '0');\n\t\t\ttmpDay = this.stringPadStart(tmpDay, 2, '0');\n\t\t\ttmpYear = this.stringPadStart(tmpYear, 4, '0');\n\t\t}\n\n\t\treturn `${tmpMonth}/${tmpDay}/${tmpYear}`;\n\t}\n\t\n\tformatSortableStringFromDate (pDate)\n\t{\n\t\treturn pDate.getFullYear()+this.stringPadStart(pDate.getMonth(),2,'0')+this.stringPadStart(pDate.getDate(),2,'0');\n\t}\n\n\t/*************************************************************************\n\t * String Tokenization Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Return the string before the matched substring.\n\t *\n\t * If the substring is not found, the entire string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringBeforeMatch (pString, pMatch)\n\t{\n\t\treturn pString.split(pMatch)[0];\n\t}\n\n\t/**\n\t * Return the string after the matched substring.\n\t *\n\t * If the substring is not found, an empty string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringAfterMatch (pString, pMatch)\n\t{\n\t\tlet tmpStringSplitLocation = pString.indexOf(pMatch);\n\n\t\tif ((tmpStringSplitLocation < 0) || ((tmpStringSplitLocation + pMatch.length) >= pString.length))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn pString.substring(tmpStringSplitLocation + pMatch.length);\n\t}\n\n\t/**\n\t * Count the number of segments in a string, respecting enclosures\n\t * \n\t * @param {string} pString \n\t * @param {string} pSeparator \n\t * @param {object} pEnclosureStartSymbolMap \n\t * @param {object} pEnclosureEndSymbolMap \n\t * @returns the count of segments in the string as a number\n\t */\n\tstringCountSegments(pString, pSeparator, pEnclosureStartSymbolMap, pEnclosureEndSymbolMap)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\n\t\tlet tmpSeparator = (typeof(pSeparator) == 'string') ? pSeparator : '.';\n\n\t\tlet tmpEnclosureStartSymbolMap = (typeof(pEnclosureStartSymbolMap) == 'object') ? pEnclosureStart : { '{': 0, '[': 1, '(': 2 };\n\t\tlet tmpEnclosureEndSymbolMap = (typeof(pEnclosureEndSymbolMap) == 'object') ? pEnclosureEnd : { '}': 0, ']': 1, ')': 2 };\n\n\t\tif (pString.length < 1)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet tmpSegmentCount = 1;\n\t\tlet tmpEnclosureStack = [];\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// IF This is the start of a segment\n\t\t\tif ((tmpString[i] == tmpSeparator)\n\t\t\t\t// AND we are not in a nested portion of the string\n\t\t\t\t&& (tmpEnclosureStack.length == 0))\n\t\t\t{\n\t\t\t\t// Increment the segment count\n\t\t\t\ttmpSegmentCount++;\n\t\t\t}\n\t\t\t// IF This is the start of an enclosure\n\t\t\telse if (tmpEnclosureStartSymbolMap.hasOwnProperty(tmpString[i]))\n\t\t\t{\n\t\t\t\t// Add it to the stack!\n\t\t\t\ttmpEnclosureStack.push(tmpEnclosureStartSymbolMap[tmpString[i]]);\n\t\t\t}\n\t\t\t// IF This is the end of an enclosure\n\t\t\telse if (tmpEnclosureEndSymbolMap.hasOwnProperty(tmpString[i])\n\t\t\t\t// AND it matches the current nest level symbol\n\t\t\t\t&& tmpEnclosureEndSymbolMap[tmpString[i]] == tmpEnclosureStack[tmpEnclosureStack.length - 1])\n\t\t\t{\n\t\t\t\t// Pop it off the stack!\n\t\t\t\ttmpEnclosureStack.pop();\n\t\t\t}\n\t\t}\n\n\t\treturn tmpSegmentCount;\n\t}\n\n\t/**\n\t * Get all segments in a string, respecting enclosures\n\t * \n\t * @param {string} pString \n\t * @param {string} pSeparator \n\t * @param {object} pEnclosureStartSymbolMap \n\t * @param {object} pEnclosureEndSymbolMap \n\t * @returns the first segment in the string as a string\n\t */\n\tstringGetSegments(pString, pSeparator, pEnclosureStartSymbolMap, pEnclosureEndSymbolMap)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\n\t\tlet tmpSeparator = (typeof(pSeparator) == 'string') ? pSeparator : '.';\n\n\t\tlet tmpEnclosureStartSymbolMap = (typeof(pEnclosureStartSymbolMap) == 'object') ? pEnclosureStart : { '{': 0, '[': 1, '(': 2, '\"':3, \"'\":4 };\n\t\tlet tmpEnclosureEndSymbolMap = (typeof(pEnclosureEndSymbolMap) == 'object') ? pEnclosureEnd : { '}': 0, ']': 1, ')': 2, '\"':3, \"'\":4 };\n\n\t\tlet tmpCurrentSegmentStart = 0;\n\t\tlet tmpSegmentList = [];\n\n\t\tif (pString.length < 1)\n\t\t{\n\t\t\treturn tmpSegmentList;\n\t\t}\n\n\t\tlet tmpEnclosureStack = [];\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// IF This is the start of a segment\n\t\t\tif ((tmpString[i] == tmpSeparator)\n\t\t\t\t// AND we are not in a nested portion of the string\n\t\t\t\t&& (tmpEnclosureStack.length == 0))\n\t\t\t{\n\t\t\t\t// Return the segment\n\t\t\t\ttmpSegmentList.push(tmpString.substring(tmpCurrentSegmentStart, i));\n\t\t\t\ttmpCurrentSegmentStart = i+1;\n\t\t\t}\n\t\t\t// IF This is the start of an enclosure\n\t\t\telse if (tmpEnclosureStartSymbolMap.hasOwnProperty(tmpString[i]))\n\t\t\t{\n\t\t\t\t// Add it to the stack!\n\t\t\t\ttmpEnclosureStack.push(tmpEnclosureStartSymbolMap[tmpString[i]]);\n\t\t\t}\n\t\t\t// IF This is the end of an enclosure\n\t\t\telse if (tmpEnclosureEndSymbolMap.hasOwnProperty(tmpString[i])\n\t\t\t\t// AND it matches the current nest level symbol\n\t\t\t\t&& tmpEnclosureEndSymbolMap[tmpString[i]] == tmpEnclosureStack[tmpEnclosureStack.length - 1])\n\t\t\t{\n\t\t\t\t// Pop it off the stack!\n\t\t\t\ttmpEnclosureStack.pop();\n\t\t\t}\n\t\t}\n\n\t\tif (tmpCurrentSegmentStart < tmpString.length)\n\t\t{\n\t\t\ttmpSegmentList.push(tmpString.substring(tmpCurrentSegmentStart));\n\t\t}\n\n\t\treturn tmpSegmentList;\n\t}\n\n\t/**\n\t * Get the first segment in a string, respecting enclosures\n\t * \n\t * @param {string} pString \n\t * @param {string} pSeparator \n\t * @param {object} pEnclosureStartSymbolMap \n\t * @param {object} pEnclosureEndSymbolMap \n\t * @returns the first segment in the string as a string\n\t */\n\tstringGetFirstSegment(pString, pSeparator, pEnclosureStartSymbolMap, pEnclosureEndSymbolMap)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\n\t\tlet tmpSeparator = (typeof(pSeparator) == 'string') ? pSeparator : '.';\n\n\t\tlet tmpEnclosureStartSymbolMap = (typeof(pEnclosureStartSymbolMap) == 'object') ? pEnclosureStart : { '{': 0, '[': 1, '(': 2 };\n\t\tlet tmpEnclosureEndSymbolMap = (typeof(pEnclosureEndSymbolMap) == 'object') ? pEnclosureEnd : { '}': 0, ']': 1, ')': 2 };\n\n\t\tif (pString.length < 1)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet tmpEnclosureStack = [];\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// IF This is the start of a segment\n\t\t\tif ((tmpString[i] == tmpSeparator)\n\t\t\t\t// AND we are not in a nested portion of the string\n\t\t\t\t&& (tmpEnclosureStack.length == 0))\n\t\t\t{\n\t\t\t\t// Return the segment\n\t\t\t\treturn tmpString.substring(0, i);\n\t\t\t}\n\t\t\t// IF This is the start of an enclosure\n\t\t\telse if (tmpEnclosureStartSymbolMap.hasOwnProperty(tmpString[i]))\n\t\t\t{\n\t\t\t\t// Add it to the stack!\n\t\t\t\ttmpEnclosureStack.push(tmpEnclosureStartSymbolMap[tmpString[i]]);\n\t\t\t}\n\t\t\t// IF This is the end of an enclosure\n\t\t\telse if (tmpEnclosureEndSymbolMap.hasOwnProperty(tmpString[i])\n\t\t\t\t// AND it matches the current nest level symbol\n\t\t\t\t&& tmpEnclosureEndSymbolMap[tmpString[i]] == tmpEnclosureStack[tmpEnclosureStack.length - 1])\n\t\t\t{\n\t\t\t\t// Pop it off the stack!\n\t\t\t\ttmpEnclosureStack.pop();\n\t\t\t}\n\t\t}\n\n\t\treturn tmpString;\n\t}\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures (pString, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\tif (tmpEnclosureDepth == 0)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t}\n\t\t\t\ttmpEnclosureDepth++;\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpEnclosureCount;\n\t}\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosedValueStartIndex = 0;\n\t\tlet tmpEnclosedValueEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This is the end of an enclosure\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t\t{\n\t\t\t// Return an empty string if the enclosure is not found\n\t\t\treturn '';\n\t\t}\n\n\t\tif ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t\t}\n\t}\n\n\n\t/**\n\t * Remove an enclosure from a string based on the index of the enclosure.\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToRemove\n\t * @param {number} pEnclosureStart\n\t * @param {number} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringRemoveEnclosureByIndex (pString, pEnclosureIndexToRemove, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToRemove = (typeof(pEnclosureIndexToRemove) == 'number') ? pEnclosureIndexToRemove : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosureStartIndex = 0;\n\t\tlet tmpEnclosureEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToRemove == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosureStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosureEndIndex <= tmpEnclosureStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToRemove)\n\t\t{\n\t\t\treturn tmpString;\n\t\t}\n\n\t\tlet tmpReturnString = '';\n\n\t\tif (tmpEnclosureStartIndex > 1)\n\t\t{\n\t\t\ttmpReturnString = tmpString.substring(0, tmpEnclosureStartIndex);\n\t\t}\n\n\t\tif ((tmpString.length > (tmpEnclosureEndIndex + 1)) && (tmpEnclosureEndIndex > tmpEnclosureStartIndex))\n\t\t{\n\t\t\ttmpReturnString += tmpString.substring(tmpEnclosureEndIndex+1);\n\t\t}\n\n\t\treturn tmpReturnString;\n\t}\n}\n\nmodule.exports = DataFormat;","module.exports={\n\t\"DefaultIntegerMinimum\": 0,\n\t\"DefaultIntegerMaximum\": 9999999,\n\n\t\"DefaultNumericStringLength\": 10,\n\n\t\"MonthSet\": [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n\n\t\"WeekDaySet\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n\n\t\"ColorSet\": \n\t\t[\n\t\t\t\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Indigo\", \"Violet\", \"Pink\", \"Purple\", \"Turquoise\", \"Gold\",\n\t\t\t\"Lime\", \"Maroon\", \"Navy\", \"Coral\", \"Teal\", \"Brown\", \"White\", \"Black\", \"Sky\", \"Berry\",\n\t\t\t\"Grey\", \"Straw\", \"Silver\", \"Sapphire\"\n\t\t],\n\n\t\"SurNameSet\":\n\t\t[\n\t\t\t\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Miller\", \"Davis\", \"Garcia\", \"Rodriguez\", \"Wilson\",\n\t\t\t\"Martinez\", \"Anderson\", \"Taylor\", \"Thomas\", \"Hernandez\", \"Moore\", \"Martin\", \"Jackson\", \"Thompson\", \"White\",\n\t\t\t\"Lopez\", \"Lee\", \"Gonzalez\", \"Harris\", \"Clark\", \"Lewis\", \"Robinson\", \"Walker\", \"Perez\", \"Hall\",\n\t\t\t\"Young\", \"Allen\", \"Sanchez\", \"Wright\", \"King\", \"Scott\", \"Green\", \"Baker\", \"Adams\", \"Nelson\",\n\t\t\t\"Hill\", \"Ramirez\", \"Campbell\", \"Mitchell\", \"Roberts\", \"Carter\", \"Phillips\", \"Evans\", \"Turner\", \"Torres\",\n\t\t\t\"Parker\", \"Collins\", \"Edwards\", \"Stewart\", \"Flores\", \"Morris\", \"Nguyen\", \"Murphy\", \"Rivera\", \"Cook\",\n\t\t\t\"Rogers\", \"Morgan\", \"Peterson\", \"Cooper\", \"Reed\", \"Bailey\", \"Bell\", \"Gomez\", \"Kelly\", \"Howard\",\n\t\t\t\"Ward\", \"Cox\", \"Diaz\", \"Richardson\", \"Wood\", \"Watson\", \"Brooks\", \"Bennett\", \"Gray\", \"James\",\n\t\t\t\"Reyes\", \"Cruz\", \"Hughes\", \"Price\", \"Myers\", \"Long\", \"Foster\", \"Sanders\", \"Ross\", \"Morales\",\n\t\t\t\"Powell\", \"Sullivan\", \"Russell\", \"Ortiz\", \"Jenkins\", \"Gutierrez\", \"Perry\", \"Butler\", \"Barnes\", \"Fisher\"\n\t\t],\n\n\t\"NameSet\":\n\t\t[\n\t\t\t\"Mary\", \"Patricia\", \"Jennifer\", \"Linda\", \"Elizabeth\", \"Barbara\", \"Susan\", \"Jessica\", \"Sarah\", \"Karen\",\n\t\t\t\"Lisa\", \"Nancy\", \"Betty\", \"Sandra\", \"Margaret\", \"Ashley\", \"Kimberly\", \"Emily\", \"Donna\", \"Michelle\",\n\t\t\t\"Carol\", \"Amanda\", \"Melissa\", \"Deborah\", \"Stephanie\", \"Dorothy\", \"Rebecca\", \"Sharon\", \"Laura\", \"Cynthia\",\n\t\t\t\"Amy\", \"Kathleen\", \"Angela\", \"Shirley\", \"Brenda\", \"Emma\", \"Anna\", \"Pamela\", \"Nicole\", \"Samantha\",\n\t\t\t\"Katherine\", \"Christine\", \"Helen\", \"Debra\", \"Rachel\", \"Carolyn\", \"Janet\", \"Maria\", \"Catherine\", \"Heather\",\n\t\t\t\"Diane\", \"Olivia\", \"Julie\", \"Joyce\", \"Victoria\", \"Ruth\", \"Virginia\", \"Lauren\", \"Kelly\", \"Christina\",\n\t\t\t\"Joan\", \"Evelyn\", \"Judith\", \"Andrea\", \"Hannah\", \"Megan\", \"Cheryl\", \"Jacqueline\", \"Martha\", \"Madison\",\n\t\t\t\"Teresa\", \"Gloria\", \"Sara\", \"Janice\", \"Ann\", \"Kathryn\", \"Abigail\", \"Sophia\", \"Frances\", \"Jean\",\n\t\t\t\"Alice\", \"Judy\", \"Isabella\", \"Julia\", \"Grace\", \"Amber\", \"Denise\", \"Danielle\", \"Marilyn\", \"Beverly\",\n\t\t\t\"Charlotte\", \"Natalie\", \"Theresa\", \"Diana\", \"Brittany\", \"Doris\", \"Kayla\", \"Alexis\", \"Lori\", \"Marie\",\n\t\t\t\"James\", \"Robert\", \"John\", \"Michael\", \"David\", \"William\", \"Richard\", \"Joseph\", \"Thomas\", \"Christopher\",\n\t\t\t\"Charles\", \"Daniel\", \"Matthew\", \"Anthony\", \"Mark\", \"Donald\", \"Steven\", \"Andrew\", \"Paul\", \"Joshua\",\n\t\t\t\"Kenneth\", \"Kevin\", \"Brian\", \"George\", \"Timothy\", \"Ronald\", \"Jason\", \"Edward\", \"Jeffrey\", \"Ryan\",\n\t\t\t\"Jacob\", \"Gary\", \"Nicholas\", \"Eric\", \"Jonathan\", \"Stephen\", \"Larry\", \"Justin\", \"Scott\", \"Brandon\",\n\t\t\t\"Benjamin\", \"Samuel\", \"Gregory\", \"Alexander\", \"Patrick\", \"Frank\", \"Raymond\", \"Jack\", \"Dennis\", \"Jerry\",\n\t\t\t\"Tyler\", \"Aaron\", \"Jose\", \"Adam\", \"Nathan\", \"Henry\", \"Zachary\", \"Douglas\", \"Peter\", \"Kyle\",\n\t\t\t\"Noah\", \"Ethan\", \"Jeremy\", \"Walter\", \"Christian\", \"Keith\", \"Roger\", \"Terry\", \"Austin\", \"Sean\",\n\t\t\t\"Gerald\", \"Carl\", \"Harold\", \"Dylan\", \"Arthur\", \"Lawrence\", \"Jordan\", \"Jesse\", \"Bryan\", \"Billy\",\n\t\t\t\"Bruce\", \"Gabriel\", \"Joe\", \"Logan\", \"Alan\", \"Juan\", \"Albert\", \"Willie\", \"Elijah\", \"Wayne\",\n\t\t\t\"Randy\", \"Vincent\", \"Mason\", \"Roy\", \"Ralph\", \"Bobby\", \"Russell\", \"Bradley\", \"Philip\", \"Eugene\"\n\t\t]\n}","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceDataGeneration extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'DataGeneration';\n\n\t\tthis.defaultData = require('./Fable-Service-DataGeneration-DefaultValues.json');\n\t}\n\n\t// Return a random integer between pMinimum and pMaximum\n\trandomIntegerBetween(pMinimum, pMaximum)\n\t{\n\t\treturn Math.floor(Math.random() * (pMaximum - pMinimum)) + pMinimum;\n\t}\n\t// Return a random integer up to the passed-in maximum\n\trandomIntegerUpTo(pMaximum)\n\t{\n\t\treturn this.randomIntegerBetween(0, pMaximum);\n\t}\n\t// Return a random integer between 0 and 9999999\n\trandomInteger()\n\t{\n\t\treturn Math.floor(Math.random()*this.defaultData.DefaultIntegerMaximum);\n\t}\n\n\n\trandomNumericString(pLength, pMaxNumber)\n\t{\n\t\tlet tmpLength = (typeof(pLength) === 'undefined') ? 10 : pLength;\n\t\tlet tmpMaxNumber = (typeof(pMaxNumber) === 'undefined') ? 9999999999 : pMaxNumber;\n\n\t\treturn this.services.DataFormat.stringPadStart(this.randomIntegerUpTo(tmpMaxNumber), pLength, '0');\n\t}\n\n\n\trandomMonth()\n\t{\n\t\treturn this.defaultData.MonthSet[this.randomIntegerUpTo(this.defaultData.MonthSet.length-1)];\n\t}\n\trandomDayOfWeek()\n\t{\n\t\treturn this.defaultData.WeekDaySet[this.randomIntegerUpTo(this.defaultData.WeekDaySet.length-1)];\n\t}\n\n\n\trandomColor()\n\t{\n\t\treturn this.defaultData.ColorSet[this.randomIntegerUpTo(this.defaultData.ColorSet.length-1)];\n\t}\n\n\n\trandomName()\n\t{\n\t\treturn this.defaultData.NameSet[this.randomIntegerUpTo(this.defaultData.NameSet.length-1)];\n\t}\n\trandomSurname()\n\t{\n\t\treturn this.defaultData.SurNameSet[this.randomIntegerUpTo(this.defaultData.SurNameSet.length-1)];\n\t}\n}\n\nmodule.exports = FableServiceDataGeneration;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Date management a la Moment using days.js\n*\n* @class DateManipulation\n*/\nclass DateManipulation extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'Dates';\n\n\t\tthis.dayJS = require('dayjs');\n\n\t\t// Include the `weekOfYear` plugin\n\t\tthis.plugin_weekOfYear = require('dayjs/plugin/weekOfYear');\n\t\tthis.dayJS.extend(this.plugin_weekOfYear);\n\t\t// Include the `weekday` plugin\n\t\tthis.plugin_weekday = require('dayjs/plugin/weekday');\n\t\tthis.dayJS.extend(this.plugin_weekday);\n\t\t// Include the `isoWeek` plugin\n\t\tthis.plugin_isoWeek = require('dayjs/plugin/isoWeek');\n\t\tthis.dayJS.extend(this.plugin_isoWeek);\n\t\t// Include the `timezone` plugin\n\t\tthis.plugin_timezone = require('dayjs/plugin/timezone');\n\t\tthis.dayJS.extend(this.plugin_timezone);\n\t\t// Include the `relativetime` plugin\n\t\tthis.plugin_relativetime = require('dayjs/plugin/relativeTime');\n\t\tthis.dayJS.extend(this.plugin_relativetime);\n\t\t// Include the `utc` plugin\n\t\tthis.plugin_utc = require('dayjs/plugin/utc');\n\t\tthis.dayJS.extend(this.plugin_utc);\n\t\t// Include the `advancedFormat` plugin\n\t\tthis.plugin_advancedFormat = require('dayjs/plugin/advancedFormat');\n\t\tthis.dayJS.extend(this.plugin_advancedFormat);\n\n\t\t// A developer can include locales if they want\n\t\t// You would do the following:\n\t\t// const localeDE = require('dayjs/locale/de');\n\t\t// _Fable.Dates.dayJS.locale('de');\n\t}\n}\n\nmodule.exports = DateManipulation;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceEnvironmentData extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'EnvironmentData';\n\n\t\tthis.Environment = `node.js`;\n\t}\n}\n\nmodule.exports = FableServiceEnvironmentData;","const { PE } = require('big.js');\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\n/* Trying a different pattern for this service ...\n *\n * This service is a simple expression parser that can handle math expressions, with magic(tm) lookup of addresses with a manifest.\n * \n * Each method works multiple ways.\n * \n * 1. You can pass in a results object, and, it will put the state for that step outcome into the results object.\n * 2. It always returns the state, and works without the results object.\n * \n * \n * Learned a lot from this npm package: https://www.npmjs.com/package/math-expression-evaluator\n * And its related code at github: https://github.com/bugwheels94/math-expression-evaluator\n * \n * There were two problems with the codebase...\n * \n * First, the code was very unreadable and determining it was correct or extending it\n * was out of the question.\n * \n * Second, and this is a larger issue, is that we need the expressions to be parsed as\n * arbitrary precision.  When I determined that extending the library to use string-based\n * numbers and an arbitrary precision library as the back-end would have taken a significantly\n * longer amount of time than just writing the parser from scratch, et voila.\n */\n\nclass FableServiceExpressionParser extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.tokenMap = require('./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-TokenMap.json');\n\t\t// This precedence is higher than defined in our token map\n\t\tthis.tokenMaxPrecedence = 5;\n\n\t\tthis.functionMap = require('./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-FunctionMap.json');\n\n\t\tthis.serviceType = 'ExpressionParser';\n\n\t\tthis.fable.addServiceTypeIfNotExists('ExpressionParser-Tokenizer', require('./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-ExpressionTokenizer.js'));\n\t\tthis.fable.addServiceTypeIfNotExists('ExpressionParser-Linter', require('./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-Linter.js'));\n\t\tthis.fable.addServiceTypeIfNotExists('ExpressionParser-Postfix', require('./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-Postfix.js'));\n\t\tthis.fable.addServiceTypeIfNotExists('ExpressionParser-Solver', require('./Fable-Service-ExpressionParser/Fable-Service-ExpressionParser-SolvePostfixedExpression.js'));\n\n\t\tthis.Tokenizer = this.fable.instantiateServiceProviderWithoutRegistration('ExpressionParser-Tokenizer');\n\t\tthis.Linter = this.fable.instantiateServiceProviderWithoutRegistration('ExpressionParser-Linter');\n\t\tthis.Postfix = this.fable.instantiateServiceProviderWithoutRegistration('ExpressionParser-Postfix');\n\t\tthis.Solver = this.fable.instantiateServiceProviderWithoutRegistration('ExpressionParser-Solver');\n\n\t\t// Now wire each of these up.  Not in love with this pattern but better than a giant file here.\n\t\tthis.Tokenizer.connectExpressionParser(this);\n\t\tthis.Linter.connectExpressionParser(this);\n\t\tthis.Postfix.connectExpressionParser(this);\n\t\tthis.Solver.connectExpressionParser(this);\n\t}\n\n\tsubstituteValuesInTokenizedObjects(pTokenizedObjects, pDataSource, pResultObject, pManifest)\n\t{\n\t\tlet tmpResults = (typeof(pResultObject) === 'object') ? pResultObject : { ExpressionParserLog: [] };\n\n\t\tif (!Array.isArray(pTokenizedObjects))\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.substituteValuesInTokenizedObjects was passed a non-array tokenized object list.`);\n\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\treturn pTokenizedObjects;\n\t\t}\n\t\tif (typeof(pDataSource) !== 'object')\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.substituteValuesInTokenizedObjects either was passed no data source, or was passed a non-object data source.`);\n\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\treturn pTokenizedObjects;\n\t\t}\n\n\t\tlet tmpDataSource = pDataSource;\n\n\t\tlet tmpManifest = (typeof(pManifest) == 'object') ? pManifest : this.fable.newManyfest(pManifest);\n\n\t\tfor (let i = 0; i < pTokenizedObjects.length; i++)\n\t\t{\n\t\t\tif (typeof(pTokenizedObjects[i]) !== 'object')\n\t\t\t{\n\t\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.substituteValuesInTokenizedObjects found a non-object tokenized object at index ${i}`);\n\t\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet tmpToken = pTokenizedObjects[i];\n\t\t\tif ((pTokenizedObjects[i].Type === 'Token.Symbol') && !tmpToken.Resolved)\n\t\t\t{\n\t\t\t\t// Symbols always look up values by hash first\n\t\t\t\tlet tmpValue = tmpManifest.getValueByHash(tmpDataSource, tmpToken.Token);\n\t\t\t\t// if (!tmpValue)\n\t\t\t\t// {\n\t\t\t\t// \t// If no hash resolves, try by address.\n\t\t\t\t// \ttmpValue = tmpManifest.getValueAtAddress(tmpToken.Token, tmpDataSource);\n\t\t\t\t// }\n\t\t\t\tif (!tmpValue)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.substituteValuesInTokenizedObjects found no value for the symbol hash or address ${tmpToken.Token} at index ${i}`);\n\t\t\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`INFO: ExpressionParser.substituteValuesInTokenizedObjects found a value [${tmpValue}] for the state address ${tmpToken.Token} at index ${i}`);\n\t\t\t\t\tthis.log.info(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueParsed = new this.fable.Utility.bigNumber(tmpValue);\n\t\t\t\t\t\ttmpToken.Resolved = true;\n\t\t\t\t\t\ttmpToken.Value = tmpValueParsed.toString();\n\t\t\t\t\t}\n\t\t\t\t\tcatch(pError)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.substituteValuesInTokenizedObjects found a non-numeric value for the state address ${tmpToken.Token} at index ${i}`);\n\t\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\t\ttmpToken.Resolved = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((pTokenizedObjects[i].Type === 'Token.StateAddress') && !tmpToken.Resolved)\n\t\t\t{\n\t\t\t\t// Symbols are always hashes.  This gracefully works for simple shallow objects because hashes default to the address in Manyfest.\n\t\t\t\tlet tmpValue = tmpManifest.getValueAtAddress(tmpDataSource, tmpToken.Token);\n\t\t\t\tif (!tmpValue)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.substituteValuesInTokenizedObjects found no value for the state address ${tmpToken.Token} at index ${i}`);\n\t\t\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`INFO: ExpressionParser.substituteValuesInTokenizedObjects found a value [${tmpValue}] for the state address ${tmpToken.Token} at index ${i}`);\n\t\t\t\t\tthis.log.info(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueParsed = new this.fable.Utility.bigNumber(tmpValue);\n\t\t\t\t\t\ttmpToken.Resolved = true;\n\t\t\t\t\t\ttmpToken.Value = tmpValueParsed.toString();\n\t\t\t\t\t}\n\t\t\t\t\tcatch(pError)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.substituteValuesInTokenizedObjects found a non-numeric value for the state address ${tmpToken.Token} at index ${i}`);\n\t\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\t\ttmpToken.Resolved = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((pTokenizedObjects[i].Type === 'Token.Constant') && !tmpToken.Resolved)\n\t\t\t{\n\t\t\t\ttmpResults.ExpressionParserLog.push(`INFO: ExpressionParser.substituteValuesInTokenizedObjects found a value [${tmpToken.Token}] for the constant ${tmpToken.Token} at index ${i}`);\n\t\t\t\tthis.log.info(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tlet tmpValueParsed = new this.fable.Utility.bigNumber(tmpToken.Token);\n\t\t\t\t\ttmpToken.Resolved = true;\n\t\t\t\t\ttmpToken.Value = tmpValueParsed.toString();\n\t\t\t\t}\n\t\t\t\tcatch(pError)\n\t\t\t\t{\n\t\t\t\t\t// This constant has the right symbols but apparently isn't a parsable number.\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.substituteValuesInTokenizedObjects found a non-numeric value for the state address ${tmpToken.Token} at index ${i}`);\n\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\ttmpToken.Resolved = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn pTokenizedObjects;\n\t}\n\n\ttokenize(pExpression, pResultObject)\n\t{\n\t\treturn this.Tokenizer.tokenize(pExpression, pResultObject);\n\t}\n\n\tlintTokenizedExpression(pTokenizedExpression, pResultObject)\n\t{\n\t\treturn this.Linter.lintTokenizedExpression(pTokenizedExpression, pResultObject);\n\t}\n\n\tbuildPostfixedSolveList(pTokenizedExpression, pResultObject)\n\t{\n\t\treturn this.Postfix.buildPostfixedSolveList(pTokenizedExpression, pResultObject);\n\t}\n\n\tsolvePostfixedExpression(pPostfixedExpression, pDataDestinationObject, pResultObject, pManifest)\n\t{\n\t\treturn this.Solver.solvePostfixedExpression(pPostfixedExpression, pDataDestinationObject, pResultObject, pManifest);\n\t}\n\n\tsolve(pExpression, pDataSourceObject, pResultObject, pManifest, pDataDestinationObject)\n\t{\n\t\tlet tmpResultsObject = (typeof(pResultObject) === 'object') ? pResultObject : {};\n\t\tlet tmpDataSourceObject = (typeof(pDataSourceObject) === 'object') ? pDataSourceObject : {};\n\t\tlet tmpDataDestinationObject = (typeof(pDataDestinationObject) === 'object') ? pDataDestinationObject : {};\n\n\t\tthis.tokenize(pExpression, tmpResultsObject);\n\t\tthis.lintTokenizedExpression(tmpResultsObject.RawTokens, tmpResultsObject);\n\t\tthis.buildPostfixedSolveList(tmpResultsObject.RawTokens, tmpResultsObject);\n\t\t\n\t\tthis.substituteValuesInTokenizedObjects(tmpResultsObject.PostfixTokenObjects, tmpDataSourceObject, tmpResultsObject, pManifest);\n\t\treturn this.solvePostfixedExpression(tmpResultsObject.PostfixSolveList, tmpDataDestinationObject, tmpResultsObject, pManifest);\n\t}\n}\n\nmodule.exports = FableServiceExpressionParser;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nclass ExpressionParserOperationBase extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'ExpressionParserOperationBase';\n\n\t\tthis.numberTest = /^-{0,1}\\d*\\.{0,1}\\d+$/;\n\n\t\tthis.ExpressionParser = false;\n\t}\n\n\tconnectExpressionParser(pExpressionParser)\n\t{\n\t\tthis.ExpressionParser = pExpressionParser;\n\t}\n\n\tgetTokenType(pToken)\n\t{\n\t\tif (this.ExpressionParser.tokenMap.hasOwnProperty(pToken))\n\t\t{\n\t\t\treturn `Token.${this.ExpressionParser.tokenMap[pToken].Type}`;\n\t\t}\n\t\telse if ((pToken.length > 2) && (pToken[0] === '{') && (pToken[pToken.length-1] === '}'))\n\t\t{\n\t\t\treturn 'Token.StateAddress';\n\t\t}\n\t\telse if (this.numberTest.test(pToken))\n\t\t{\n\t\t\treturn 'Token.Constant';\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn 'Token.Symbol';\n\t\t}\n\t\t// Just for documentation sake:\n\t\t// There is a fifth token type, VirtualSymbol\n\t\t// This is a value that's added during solve and looked up by address in the VirtualSymbol object.\n\t}\n\n\tgetTokenContainerObject(pToken, pTokenType)\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tToken: pToken,\n\t\t\t\tType: (typeof(pTokenType) === 'undefined') ? this.getTokenType(pToken) : pTokenType,\n\t\t\t\tDescriptor: this.ExpressionParser.tokenMap.hasOwnProperty(pToken) ? this.ExpressionParser.tokenMap[pToken] : false\n\t\t\t});\n\t}\n}\n\nmodule.exports = ExpressionParserOperationBase;","const libExpressionParserOperationBase = require('./Fable-Service-ExpressionParser-Base.js');\n\nclass ExpressionTokenizer extends libExpressionParserOperationBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'ExpressionParser-Tokenizer';\n\t}\n\n\ttokenize(pExpression, pResultObject)\n\t{\n\t\tlet tmpResults = (typeof(pResultObject) === 'object') ? pResultObject : { ExpressionParserLog: [] };\n\n\t\ttmpResults.RawExpression = pExpression;\n\t\ttmpResults.RawTokens = [];\n\t\ttmpResults.ExpressionParserLog = [];\n\n\t\tif (typeof(pExpression) !== 'string')\n\t\t{\n\t\t\tthis.log.warn('ExpressionParser.tokenize was passed a non-string expression.');\n\t\t\treturn tmpResults.RawTokens;\n\t\t}\n\n\t\t/* Tokenize the expression\n\t\t *\n\t\t * Current token types:\n\t\t * \t- Value\n\t\t *    : could be a symbol representation e.g. \"x\", \"depth\", \"Cost\", etc. --- symbol representations are looked up first as manifest hashes\n\t\t *    : could be a number e.g. \"5\", \"3.14159\", etc.\n\t\t *    : could be a function name e.g. sin(x), sqrt(3+5) where sin or sqrt are known function names\n\t\t *  - StateAddress\n\t\t *    : these are always wrapped in squiggly brackets\n\t\t *    : e.g. {Moisture.Percentage}, {Ending.Temperature.Fahrenheit}, {AppData.Download.Size}, etc.\n\t\t *  - Token\n\t\t *    : could be an operator e.g. \"+\", \"-\", \"*\", \"/\"\n\t\t *    : could be a parenthesis e.g. \"(\", \")\"\n\t\t */\n\t\tlet tmpCurrentTokenType = false;\n\t\tlet tmpCurrentToken = '';\n\t\tfor (let i = 0; i < pExpression.length; i++)\n\t\t{\n\t\t\tlet tmpCharacter = pExpression[i];\n\n\t\t\t// [ WHITESPACE ]\n\t\t\t// 1. Space breaks tokens except when we're in an address that's been scoped by a {}\n\t\t\tif ((tmpCharacter === ' ') && (tmpCurrentTokenType !== 'StateAddress'))\n\t\t\t{\n\t\t\t\tif (tmpCurrentToken.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.RawTokens.push(tmpCurrentToken);\n\t\t\t\t}\n\t\t\t\ttmpCurrentToken = '';\n\t\t\t\ttmpCurrentTokenType = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// [ STATE ADDRESS BLOCKS ]\n\t\t\t// 2. If we're in an address, we keep going until we hit the closing brace\n\t\t\tif ((tmpCurrentTokenType === 'StateAddress') && (tmpCharacter !== '}'))\n\t\t\t{\n\t\t\t\ttmpCurrentToken += tmpCharacter;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// 3. If we're in an address and we hit the closing brace, we close the token, push it and reset\n\t\t\tif ((tmpCurrentTokenType === 'StateAddress') && (tmpCharacter === '}'))\n\t\t\t{\n\t\t\t\ttmpCurrentToken += tmpCharacter;\n\t\t\t\ttmpResults.RawTokens.push(tmpCurrentToken);\n\t\t\t\ttmpCurrentToken = '';\n\t\t\t\ttmpCurrentTokenType = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// 4. If we're not in an address and we hit a closing brace it's a problem\n\t\t\t//    TODO: Should we just ignore it?  We do at the moment.\n\t\t\tif (tmpCharacter == '}')\n\t\t\t{\n\t\t\t\tif (tmpCurrentToken.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.RawTokens.push(tmpCurrentToken);\n\t\t\t\t}\n\t\t\t\ttmpCurrentToken = '';\n\t\t\t\ttmpCurrentTokenType = false;\n\t\t\t\ttmpResults.ExpressionParserLog.push(`ExpressionParser.tokenize found a closing brace without an opening brace in the expression: ${pExpression} at character index ${i}`);\n\t\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// 5. If we're not in an address and we hit an opening brace, we start an address\n\t\t\tif (tmpCharacter == '{')\n\t\t\t{\n\t\t\t\tif (tmpCurrentToken.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.RawTokens.push(tmpCurrentToken);\n\t\t\t\t}\n\t\t\t\ttmpCurrentToken = '';\n\t\t\t\ttmpCurrentTokenType = 'StateAddress';\n\t\t\t\ttmpCurrentToken = tmpCharacter;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// [ TOKENS ]\n\t\t\tif (this.ExpressionParser.tokenMap.hasOwnProperty(tmpCharacter))\n\t\t\t{\n\t\t\t\tif (tmpCurrentToken.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.RawTokens.push(tmpCurrentToken);\n\t\t\t\t}\n\t\t\t\ttmpCurrentToken = '';\n\t\t\t\ttmpCurrentTokenType = false;\n\t\t\t\ttmpResults.RawTokens.push(tmpCharacter);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If it's not an operator, it's a number or address.\n\t\t\t// At the moment we aren't going to gate it on whether it's a valid address or not\n\t\t\t// Just treat anything not a known token on its own as a value identifier\n\n\t\t\t/* Per this stack overflow article: https://stackoverflow.com/questions/4434076/best-way-to-alphanumeric-check-in-javascript\n\t\t\t * We could use a regex but it is slower than the charCodeAt method.\n\t\t\t * This also doesn't solve the problem of unicode characters, but we won't support those for now.\n\t\t\t */\n\t\t\t// if (pExpression.charAt(i) == '.')\n\t\t\t// {\n\t\t\t// \tconsole.log('Found a period')\n\t\t\t// }\n\t\t\t// let tmpCharCode = pExpression.charCodeAt(i);\n\t\t\t// // Match that the character code is any of...\n\t\t\t// if (\n\t\t\t// \t// Number [0-9]\n\t\t\t// \t(tmpCharCode > 47 && tmpCharCode < 58)\n\t\t\t// \t// Upper Case\n\t\t\t// \t|| (tmpCharCode > 64 && tmpCharCode < 91)\n\t\t\t// \t// LOWER CASE\n\t\t\t// \t|| (tmpCharCode > 96 && tmpCharCode < 123)\n\t\t\t// \t)\n\t\t\t// {\n\n\t\t\t\t// NOTE: Not having this guard makes a lot of interesting things possible.\n\t\t\ttmpCurrentTokenType = 'Value';\n\t\t\ttmpCurrentToken += tmpCharacter;\n\t\t\t// \tcontinue;\n\t\t\t// }\n\n\t\t\t// tmpResults.ExpressionParserLog.push(`ExpressionParser.tokenize found an unknown character code ${tmpCharCode} character ${tmpCharacter} in the expression: ${pExpression} at index ${i}`);\n\t\t\t// this.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t}\n\n\t\tif ((tmpCurrentTokenType) && (tmpCurrentToken.length > 0))\n\t\t{\n\t\t\ttmpResults.RawTokens.push(tmpCurrentToken);\n\t\t}\n\n\t\treturn tmpResults.RawTokens;\n\t}\n}\n\nmodule.exports = ExpressionTokenizer;","module.exports={\n\t\"sqrt\":\n\t\t{\n\t\t\t\"Name\": \"Square Root\",\n\t\t\t\"Address\": \"fable.Math.sqrtPrecise\"\n\t\t},\n\t\"abs\":\n\t\t{\n\t\t\t\"Name\": \"Absolute Value\",\n\t\t\t\"Address\": \"fable.Math.absPrecise\"\n\t\t},\n\t\"rad\":\n\t\t{\n\t\t\t\"Name\": \"Degrees to Radians\",\n\t\t\t\"Address\": \"fable.Math.radPrecise\"\n\t\t},\n\t\"sin\":\n\t\t{\n\t\t\t\"Name\": \"Sine\",\n\t\t\t\"Address\": \"fable.Math.sin\"\n\t\t}\n}","const libExpressionParserOperationBase = require('./Fable-Service-ExpressionParser-Base.js');\n\nclass ExpressionParserLinter extends libExpressionParserOperationBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'ExpressionParser-Linter';\n\t}\n\n\tlintTokenizedExpression(pTokenizedExpression, pResultObject)\n\t{\n\t\tlet tmpResults = (typeof(pResultObject) === 'object') ? pResultObject : { ExpressionParserLog: [] };\n\n\t\ttmpResults.LinterResults = [];\n\n\t\t// Guard against bad data being passed in\n\t\tif (!Array.isArray(pTokenizedExpression))\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.lintTokenizedExpression was passed a non-array tokenized expression.`);\n\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\treturn pTokenizedExpression;\n\t\t}\n\t\tif (pTokenizedExpression.length < 1)\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.lintTokenizedExpression was passed an empty tokenized expression.`);\n\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\treturn pTokenizedExpression;\n\t\t}\n\n\t\t// 1. Check for balanced parenthesis\n\t\tlet tmpParenthesisDepth = 0;\n\t\t// If it is in a state address, we don't care about the parenthesis\n\t\t// State addresses are between squiggly brackets\n\t\tlet tmpInStateAddress = false;\n\t\tfor (let i = 0; i < pTokenizedExpression.length; i++)\n\t\t{\n\t\t\tif ((pTokenizedExpression[i] === '(') && (!tmpInStateAddress))\n\t\t\t{\n\t\t\t\ttmpParenthesisDepth++;\n\t\t\t}\n\t\t\tif ((pTokenizedExpression[i] === ')') && (!tmpInStateAddress))\n\t\t\t{\n\t\t\t\ttmpParenthesisDepth--;\n\t\t\t}\n\n\t\t\tif (pTokenizedExpression[i] === '{')\n\t\t\t{\n\t\t\t\ttmpInStateAddress = true;\n\t\t\t}\n\t\t\tif (pTokenizedExpression[i] === '}')\n\t\t\t{\n\t\t\t\ttmpInStateAddress = false;\n\t\t\t}\n\n\t\t\tif (tmpParenthesisDepth < 0)\n\t\t\t{\n\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.lintTokenizedExpression found an unbalanced parenthesis in the tokenized expression at token index ${i}`);\n\t\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t}\n\t\t}\n\t\tif (tmpParenthesisDepth > 0)\n\t\t{\n\t\t\t// TODO: Should we add the closing parenthesis?\n\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.lintTokenizedExpression found an unbalanced parenthesis in the tokenized expression (ended without closing last set of parenthesis) -- appropriate closing parenthesis will be added.`);\n\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t}\n\n\t\t// 2. Check for balanced squiggly braces\n\t\ttmpInStateAddress = false;\n\n\t\tfor (let i = 0; i < pTokenizedExpression.length; i++)\n\t\t{\n\t\t\tif (pTokenizedExpression[i] === '{')\n\t\t\t{\n\t\t\t\ttmpInStateAddress = true;\n\t\t\t}\n\t\t\tif ((pTokenizedExpression[i] === '}') && (tmpInStateAddress))\n\t\t\t{\n\t\t\t\ttmpInStateAddress = false;\n\t\t\t}\n\t\t\tif ((pTokenizedExpression[i] === '}') && (!tmpInStateAddress))\n\t\t\t{\n\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.lintTokenizedExpression found an unbalanced closing squiggly brace \"}\" in the tokenized expression at token index ${i}`);\n\t\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t}\n\n\t\t\tif (tmpInStateAddress)\n\t\t\t{\n\t\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.lintTokenizedExpression found an open squiggly brace in the tokenized expression at index ${i}`);\n\t\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t}\n\t\t}\n\n\t\t// 3. Check for an equality assignment\n\t\tlet tmpEqualityAssignmentCount = 0;\n\t\tlet tmpEqualityAssignmentIndex = false;\n\t\tfor (let i = 0; i < pTokenizedExpression.length; i++)\n\t\t{\n\t\t\tif (pTokenizedExpression[i] === '=')\n\t\t\t{\n\t\t\t\ttmpEqualityAssignmentCount++;\n\t\t\t\ttmpEqualityAssignmentIndex = i;\n\n\t\t\t\tif (tmpEqualityAssignmentCount > 1)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.lintTokenizedExpression found multiple equality assignments in the tokenized expression; equality assignment #${tmpEqualityAssignmentCount} at token index ${i}.`);\n\t\t\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (tmpEqualityAssignmentCount < 1)\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.lintTokenizedExpression found no equality assignment in the tokenized expression.  One called Result will be added automatically.`);\n\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t}\n\n\t\t// 4. Make sure the equality assignment only has a single value on the other side of it\n\t\t//    (no, this is not a magical algebraic solver, do your own simplification)\n\t\t//    IF there is only one equality assignment (otherwise we don't even lint this because it's syntax errors all the way down)\n\t\tif (tmpEqualityAssignmentCount === 1)\n\t\t{\n\t\t\t// If there are exactly three tokens, make sure at least one is an assignable-ish address\n\t\t\t// This can still fail, but we aren't linting all the way into the manifest here; just the expression\n\t\t\tif (pTokenizedExpression.length === 3)\n\t\t\t{\n\t\t\t\tif (\n\t\t\t\t\t// The first token in our expression is a potentially assignable symbol\n\t\t\t\t\t(this.getTokenType(pTokenizedExpression[0]) === 'Token.StateAddress') || (this.getTokenType(pTokenizedExpression[2]) === 'Token.Symbol')\n\t\t\t\t\t// NOTE: For now we are only going to support assignment to the first symbol in the expression, which seems okay.\n\t\t\t\t\t// OR the last token in our expression is a potentially assignable symbol\n\t\t\t\t\t//|| (this.getTokenType(pTokenizedExpression[2]) === 'Token.StateAddress') || (this.getTokenType(pTokenizedExpression[0]) === 'Token.Symbol')\n\t\t\t\t\t)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.lintTokenizedExpression found a single equality assignment in the tokenized expression with no assignable address on the left side of the assignment.`);\n\t\t\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 5. Check that there are no operators adjacent to each other\n\t\t//    This is a simple lint check, not a full-blown syntax check\n\t\tlet tmpTokenPrevious = false;\n\t\tfor (let i = 0; i < pTokenizedExpression.length - 1; i++)\n\t\t{\n\t\t\tif ((this.ExpressionParser.tokenMap.hasOwnProperty(pTokenizedExpression[i])) && (this.ExpressionParser.tokenMap[pTokenizedExpression[i]].Type != 'Parenthesis') && !tmpTokenPrevious)\n\t\t\t{\n\t\t\t\ttmpTokenPrevious = true;\n\t\t\t}\n\t\t\telse if (this.ExpressionParser.tokenMap.hasOwnProperty(pTokenizedExpression[i]) && (this.ExpressionParser.tokenMap[pTokenizedExpression[i]].Type != 'Parenthesis'))\n\t\t\t{\n\t\t\t\t// If this isn't a + or - positivity/negativity multiplier, it's an error.\n\t\t\t\tif ((pTokenizedExpression[i] !== '+') && (pTokenizedExpression[i] !== '-'))\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.lintTokenizedExpression found an ${pTokenizedExpression[i]} operator adjacent to another operator in the tokenized expression at token index ${i}`);\n\t\t\t\t\ttmpResults.LinterResults.push(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpTokenPrevious = false;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpResults.LinterResults;\n\t}\n}\n\nmodule.exports = ExpressionParserLinter;\n","const libExpressionParserOperationBase = require('./Fable-Service-ExpressionParser-Base.js');\n\nclass ExpressionParserPostfix extends libExpressionParserOperationBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'ExpressionParser-Postfix';\n\t}\n\n\tgetPosfixSolveListOperation(pOperation, pLeftValue, pRightValue, pDepthSolveList, pDepthSolveIndex)\n\t{\n\t\tlet tmpOperation = ({\n\t\t\tVirtualSymbolName: pOperation.VirtualSymbolName,\n\t\t\tOperation: pOperation,\n\t\t\tLeftValue: pLeftValue,\n\t\t\tRightValue: pRightValue\n\t\t});\n\n\t\tlet tmpDepthSolveList = Array.isArray(pDepthSolveList) ? pDepthSolveList : false;\n\n\t\t// // Although we have a `Token.Type == \"Parenthesis\"` option to check on, keeping these explicit means the solver won't\n\t\t// // allow users to pass in parenthesis in the wrong order.\n\t\t// // The linter does blow up as does the postfix, but, just in case we'll leave these explicit.\n\t\t// // It really doesn't hurt anything.\n\t\t// if (pLeftValue.Token === ')')\n\t\t// {\n\t\t// \t// We have found a close parenthesis which needs to pull the proper virtual symbol for the last operation on this stack.\n\t\t// \t// This ensures we are not expressing the parenthesis virtual symbols to the solver.\n\t\t// \tpLeftValue.VirtualSymbolName = pLayerStackMap[pLeftValue.SolveLayerStack];\n\t\t// \tthis.log.error(`ERROR: ExpressionParser.getPosfixSolveListOperation found a close parenthesis in the left value of an operation.`);\n\t\t// }\n\t\t// else if (pRightValue.Token === '(')\n\t\t// {\n\t\t// \t// We have found a close parenthesis which needs to pull the proper virtual symbol for the last operation on this stack.\n\t\t// \t// This ensures we are not expressing the parenthesis virtual symbols to the solver.\n\t\t// \tpRightValue.VirtualSymbolName = pLayerStackMap[pRightValue.SolveLayerStack];\n\t\t// \tthis.log.error(`ERROR: ExpressionParser.getPosfixSolveListOperation found a close parenthesis in the left value of an operation.`);\n\t\t// }\n\n\t\t// // Set the layer stack map virtual symbol name to the last operation performed on this stack.\n\t\t// pLayerStackMap[pOperation.SolveLayerStack] = pOperation.VirtualSymbolName;\n\n\t\t/* These two if blocks are very complex -- they basically provide a\n\t\t * way to deal with recursion that can be expressed to the user in\n\t\t * a meaningful way.\n\t\t * \n\t\t * The reason we are doing it as such is to show exactly how the\n\t\t * solver resolves the passed-in tokens into a solvable expression.\n\t\t */\n\t\tif (!tmpOperation.LeftValue.VirtualSymbolName)\n\t\t{\n\t\t\ttmpOperation.LeftValue.VirtualSymbolName = tmpOperation.VirtualSymbolName;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// We need to set the left value to a virtual symbol instead of the looked up value if it's already used in another operation\n\t\t\ttmpOperation.LeftValue = this.getTokenContainerObject(tmpOperation.LeftValue.VirtualSymbolName, 'Token.VirtualSymbol');\n\t\t\t// Now walk backwards and see if we need to update a previous symbol for a previously unparsed operator\n\t\t\tif (tmpDepthSolveList)\n\t\t\t{\n\t\t\t\tfor (let i = pDepthSolveIndex - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\tif ((tmpDepthSolveList[i].Type === 'Token.Operator') && (!tmpDepthSolveList[i].Parsed) && \n\t\t\t\t\t\t// When walking backward, we only want to mutate if the .\n\t\t\t\t\t\ttmpDepthSolveList[i].hasOwnProperty('Descriptor') && tmpOperation.Operation.hasOwnProperty('Descriptor') &&\n\t\t\t\t\t\t// Anything >3 does not have commutative properties\n\t\t\t\t\t\t(tmpDepthSolveList[i].Descriptor.Precedence > 3))\n\t\t\t\t\t{\n\t\t\t\t\t\t// If the symbol to its right is not the same as this operation\n\t\t\t\t\t\tif (tmpDepthSolveList[i+1].VirtualSymbolName !== tmpOperation.VirtualSymbolName)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// This is the recursive \"shunting\" being simulated\n\t\t\t\t\t\t\ttmpDepthSolveList[i+1].VirtualSymbolName = tmpOperation.VirtualSymbolName;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!tmpOperation.RightValue.VirtualSymbolName)\n\t\t{\n\t\t\ttmpOperation.RightValue.VirtualSymbolName = tmpOperation.VirtualSymbolName;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// We need to set the right value to a virtual symbol instead of the looked up value if it's already used in another operation\n\t\t\ttmpOperation.RightValue = this.getTokenContainerObject(tmpOperation.RightValue.VirtualSymbolName, 'Token.VirtualSymbol');\n\t\t\t// Now walk forwards and see if we need to update an upcoming symbol for a previously unparsed operator\n\t\t\tif (tmpDepthSolveList)\n\t\t\t{\n\t\t\t\tfor (let i = pDepthSolveIndex + 1; i < tmpDepthSolveList.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif ((tmpDepthSolveList[i].Type === 'Token.Operator') && (!tmpDepthSolveList[i].Parsed) && \n\t\t\t\t\t\t// When walking forward, we only want to mutate if the precedence hasn't been solved.\n\t\t\t\t\t\ttmpDepthSolveList[i].hasOwnProperty('Descriptor') && tmpOperation.Operation.hasOwnProperty('Descriptor') &&\n\t\t\t\t\t\t// Anything >3 does not have commutative properties\n\t\t\t\t\t\t(tmpDepthSolveList[i].Descriptor.Precedence > 3))\n\t\t\t\t\t{\n\t\t\t\t\t\t// If the symbol to its right is not the same as this operation\n\t\t\t\t\t\tif (tmpDepthSolveList[i-1].VirtualSymbolName !== tmpOperation.VirtualSymbolName)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// This is the recursive \"shunting\" being simulated\n\t\t\t\t\t\t\ttmpDepthSolveList[i-1].VirtualSymbolName = tmpOperation.VirtualSymbolName;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((tmpDepthSolveList[i].Type === 'Token.Operator') && (!tmpDepthSolveList[i].Parsed))\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttmpOperation.Operation.Parsed = true;\n\n\t\treturn tmpOperation;\n\t}\n\n\tbuildPostfixedSolveList(pTokenizedExpression, pResultObject)\n\t{\n\t\tlet tmpResults = (typeof(pResultObject) === 'object') ? pResultObject : { ExpressionParserLog: [] };\n\n\t\ttmpResults.PostfixedAssignmentAddress = 'Result'\n\t\ttmpResults.PostfixTokenObjects = [];\n\t\ttmpResults.PostfixSolveList = [];\n\n\t\tif (pTokenizedExpression.length < 3)\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.buildPostfixedSolveList was passed a tokenized expression with less than three tokens.`);\n\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\treturn tmpResults.PostfixTokenObjects;\n\t\t}\n\n\t\t// 1. Figure out the Equality Assignment\n\t\tlet tmpEqualsIndex = -1;\n\t\tfor (let i = 0; i < pTokenizedExpression.length; i++)\n\t\t{\n\t\t\tif ((pTokenizedExpression[i] === '=') && (tmpEqualsIndex < 0))\n\t\t\t{\n\t\t\t\ttmpEqualsIndex = i;\n\t\t\t}\n\t\t\t// If there are two equality assignments, error and bail out.\n\t\t\telse if (pTokenizedExpression[i] === '=')\n\t\t\t{\n\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.buildPostfixedSolveList found multiple equality assignments in the tokenized expression; equality assignment #${tmpEqualsIndex} at token index ${i}.`);\n\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\treturn tmpResults.PostfixTokenObjects;\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEqualsIndex == -1)\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.buildPostfixedSolveList found no equality assignment in the tokenized expression; defaulting to Result`);\n\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t}\n\t\telse if (tmpEqualsIndex > 1)\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`WARNING: ExpressionParser.buildPostfixedSolveList found an equality assignment in the tokenized expression at an unexpected location (token index ${tmpEqualsIndex}); the expression cannot be parsed.`);\n\t\t\tthis.log.warn(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t}\n\t\telse if (tmpEqualsIndex === 0)\n\t\t{\n\t\t\t// This is an implicit function -- just go to result and return the value.\n\t\t\t// That is... the user entered something like \"= 5 + 3\" so we should just return 8, and use the default Result quietly.\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpResults.PostfixedAssignmentAddress = pTokenizedExpression[0];\n\t\t}\n\n\t\t// 2. Categorize tokens in the expression, put them in the \"expression list\" as a token object\n\t\tfor (let i = tmpEqualsIndex + 1; i < pTokenizedExpression.length; i++)\n\t\t{\n\t\t\ttmpResults.PostfixTokenObjects.push(this.getTokenContainerObject(pTokenizedExpression[i]));\n\t\t}\n\n\t\t// 3. Decorate mathematical parsing depth and detect functions at the same time\n\t\t//    Having written this a few times now, it's easier to detect functions *while* parsing depth.\n\t\t//    Especially if we want our system to be able to communicate with the user when there is an issue.\n\t\tlet tmpDepth = 0;\n\t\t// The virtual symbol index is used for the abstract interim values that are generated at each step of the solve\n\t\tlet tmpVirtualParenthesisIndex = 0;\n\t\tlet tmpSolveLayerStack = [];\n\t\t// Kick off the solve layer stack with the first solve set identifier\n\t\ttmpSolveLayerStack.push(`SolveSet_${tmpVirtualParenthesisIndex}_D_${tmpDepth}`);\n\t\tfor (let i = 0; i < tmpResults.PostfixTokenObjects.length; i++)\n\t\t{\n\t\t\t// 1. If it's an open parenthesis, set the parenthesis at the current depth and increment the depth\n\t\t\tif (tmpResults.PostfixTokenObjects[i].Token === '(')\n\t\t\t{\n\t\t\t\t// Set the depth of the open parenthesis to the current solution depth\n\t\t\t\ttmpResults.PostfixTokenObjects[i].Depth = tmpDepth;\n\t\t\t\t// Generate the virtual symbol name for user output\n\t\t\t\ttmpResults.PostfixTokenObjects[i].VirtualSymbolName = `Pr_${tmpVirtualParenthesisIndex}_D_${tmpDepth}`;\n\n\t\t\t\t// 1a. Detect if this parenthesis is signaling a function\n\t\t\t\t//     If the previous token is a Symbol (e.g. it say sin(x) or sqrt(3+5) or something) then the parser will interpret it as a function\n\t\t\t\tif (i > 0)\n\t\t\t\t{\n\t\t\t\t\tif (tmpResults.PostfixTokenObjects[i-1].Type === 'Token.Symbol')\n\t\t\t\t\t{\n\t\t\t\t\t\t// Set the type of this to be a function\n\t\t\t\t\t\ttmpResults.PostfixTokenObjects[i-1].Type = 'Token.Function';\n//\t\t\t\t\t\ttmpResults.PostfixTokenObjects[i-1].Descriptor = this.ExpressionParser.tokenMap[pTokenizedExpression[i-1]];\n\t\t\t\t\t\t// Rename the virtual symbol n ame to include the function\n//\t\t\t\t\t\ttmpResults.PostfixTokenObjects[i].VirtualSymbolName = `Fn_${tmpVirtualParenthesisIndex}_D_${tmpDepth}_${this.fable.DataFormat.cleanNonAlphaCharacters(tmpResults.PostfixTokenObjects[i-1].Token)}`;\n\t\t\t\t\t\t// The function and the parenthesis are at the same depth and virtual symbol\n//\t\t\t\t\t\ttmpResults.PostfixTokenObjects[i-1].VirtualSymbolName = tmpResults.PostfixTokenObjects[i].VirtualSymbolName;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Parenthesis manage the solve layer stack\n\t\t\t\t// For adding a new parenthesis solve layer, we put the parenthesis in the stack we are in and then make all the contained tokens be within the stack of the parenthesis\n\t\t\t\ttmpResults.PostfixTokenObjects[i].SolveLayerStack = tmpSolveLayerStack[tmpSolveLayerStack.length-1];\n\t\t\t\ttmpSolveLayerStack.push(tmpResults.PostfixTokenObjects[i].VirtualSymbolName);\n\n\t\t\t\ttmpVirtualParenthesisIndex++;\n\t\t\t\ttmpDepth++;\n\t\t\t}\n\n\t\t\t// 2. If it's a closed parenthesis, decrease the depth\n\t\t\telse if (tmpResults.PostfixTokenObjects[i].Token === ')')\n\t\t\t{\n\t\t\t\ttmpDepth--;\n\n\t\t\t\ttmpResults.PostfixTokenObjects[i].Depth = tmpDepth;\n\n\t\t\t\t// Check to see that the depth of the closed parenthesis is greater than 0\n\t\t\t\tif (tmpDepth < 0)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.buildPostfixedSolveList found a closing parenthesis at token index ${i} with no corresponding opening parenthesis.`);\n\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t}\n\n\t\t\t\t// Parenthesis manage the solve layer stack\n\t\t\t\t// For closing parenthesis solve layer with a close paren, we put it in the same stack as the opening parenthesis.\n\t\t\t\t// Give the closing parenthesis the same virtual symbol name as the opening parenthesis\n\t\t\t\t// (do the both above at the same time)\n\t\t\t\ttmpResults.PostfixTokenObjects[i].VirtualSymbolName = tmpSolveLayerStack.pop();\n\t\t\t\ttmpResults.PostfixTokenObjects[i].SolveLayerStack = tmpSolveLayerStack[tmpSolveLayerStack.length-1];\n\t\t\t}\n\n\t\t\t// 3. If it's a state address or Symbol, set depth\n\t\t\t//    It was much more complex later on solving these as virtual symbols of their own.\n\t\t\t//    We are saving the value resolution for the very end.\n\t\t\telse if ((tmpResults.PostfixTokenObjects[i].Type === 'Token.Symbol'))\n\t\t\t{\n\t\t\t\t// Set the depth of the current solution depth\n\t\t\t\ttmpResults.PostfixTokenObjects[i].Depth = tmpDepth;\n\t\t\t\ttmpResults.PostfixTokenObjects[i].SolveLayerStack = tmpSolveLayerStack[tmpSolveLayerStack.length-1];\n\t\t\t\t// Generate a virtual symbol name that's somewhat human readable\n\t\t\t\t//tmpResults.PostfixTokenObjects[i].VirtualSymbolName = `Sm_${tmpVirtualParenthesisIndex}_D_${tmpDepth}_${this.fable.DataFormat.cleanNonAlphaCharacters(tmpResults.PostfixTokenObjects[i].Token)}`;\n\n\t\t\t\t// We've used up this virtual symbol index so increment it\n\t\t\t\t// The reason we only use these once is to make sure if we use, say, sin(x) twice at the same depth we still have unique names for each virtual solution\n\t\t\t\t//tmpVirtualParenthesisIndex++;\n\t\t\t}\n\n\t\t\t// 4. If it's an operator or constant or comment, just set the depth\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpResults.PostfixTokenObjects[i].Depth = tmpDepth;\n\t\t\t\ttmpResults.PostfixTokenObjects[i].SolveLayerStack = tmpSolveLayerStack[tmpSolveLayerStack.length-1];\n\t\t\t}\n\t\t}\n\n\t\t// 4. Walk through the decorated symbols and generate the postfix solve list\n\t\t//    We are going to start by creating a map of the solve layers:\n\t\tlet tmpSolveLayerMap = {};\n\t\tlet tmpSolveLayerMaxDepth = 0;\n\t\tfor (let i = 0; i < tmpResults.PostfixTokenObjects.length; i++)\n\t\t{\n\t\t\tif (!tmpSolveLayerMap.hasOwnProperty(tmpResults.PostfixTokenObjects[i].SolveLayerStack))\n\t\t\t{\n\t\t\t\ttmpSolveLayerMap[tmpResults.PostfixTokenObjects[i].SolveLayerStack] = [];\n\t\t\t}\n\t\t\ttmpSolveLayerMap[tmpResults.PostfixTokenObjects[i].SolveLayerStack].push(tmpResults.PostfixTokenObjects[i]);\n\n\t\t\t// See what our max depth is.  This is super important to the postfix operation\n\t\t\t// The programmer in me thinks it would be funny to not track this and just use the map key length as the max size, which would work (logically impossible to have a depth > key length) but it would be quite a bit more confusing to grok the algorithm.\n\t\t\tif (tmpResults.PostfixTokenObjects[i].Depth > tmpSolveLayerMaxDepth)\n\t\t\t{\n\t\t\t\ttmpSolveLayerMaxDepth = tmpResults.PostfixTokenObjects[i].Depth;\n\t\t\t}\n\t\t}\n\n\t\tlet tmpSolveLayerKeys = Object.keys(tmpSolveLayerMap);\n\t\t// Reset the virtual symbol index -- it was used above for uniquenes when creating abstract symbols for parenthesis and layer stacks.\n\t\tlet tmpVirtualSymbolIndex = 0;\n\t\ttmpSolveLayerKeys.sort(\n\t\t\t// Sort the solve layers by depth.\n\t\t\t(pLeftLayer, pRightLayer)=>\n\t\t\t{\n\t\t\t\t// It is impossible to have a layer with no entries in it.  \n\t\t\t\t// If that ever happens, the bug is actually above and we actively want this to blow up.\n\t\t\t\tif (tmpSolveLayerMap[pLeftLayer][0].Depth < tmpSolveLayerMap[pRightLayer][0].Depth)\n\t\t\t\t{\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (tmpSolveLayerMap[pLeftLayer][0].Depth > tmpSolveLayerMap[pRightLayer][0].Depth)\n\t\t\t\t{\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t// 5. Generate the postfix solve list\n\t\t//    The most important thing is going backwards in the depth order (a la reverse polish).\n\t\t//    Specifically not using shunting yard to provide in-depth \"show your work\" notes\n\t\t//    Yes it is possible to do a somewhat similar thing with shunting yard but the code is almost unreadable\n\n\t\t// 5.1 Build the Virtual Symbol Names\n\t\t// This maps layer stack addresses (which match parenthesis virtual symbol names) to the resultant value for that layer stack.\n\t\t// These values change as it solves but the last assignment is the proper assignment because math only reads forward in a line\n\t\ttmpResults.PostfixLayerstackMap = {};\n\t\tfor (let tmpSolveLayerIndex = 0; tmpSolveLayerIndex < tmpSolveLayerKeys.length; tmpSolveLayerIndex++)\n\t\t{\n\t\t\tlet tmpSolveLayerTokens = tmpSolveLayerMap[tmpSolveLayerKeys[tmpSolveLayerIndex]];\n\t\t\t// For each precedence (this isn't strictly required here but makes the outcome for the user more readable)\n\t\t\tfor (let tmpPrecedence = 0; tmpPrecedence <= this.ExpressionParser.tokenMaxPrecedence; tmpPrecedence++)\n\t\t\t{\n\t\t\t\t// Enumerate all tokens in a layer's expression.\n\t\t\t\t// There is a recursive way to do this, but given the short length of even the most complex equations we're favoring readability.\n\t\t\t\tfor (let i = 0; i < tmpSolveLayerTokens.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// If the token is an operator and at the current precedence, add it to the postfix solve list and mutate the array.\n\t\t\t\t\tif ((tmpSolveLayerTokens[i].Type === 'Token.Operator') &&\n\t\t\t\t\t\t(tmpSolveLayerTokens[i].Descriptor.Precedence === tmpPrecedence))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpToken = tmpSolveLayerTokens[i];\n\t\t\t\t\t\t// If there is a token and nothing else in this layer, then it's an error.\n\t\t\t\t\t\tif (tmpSolveLayerTokens.length === 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.buildPostfixedSolveList found a single operator in a solve layer expression at token index ${i}`);\n\t\t\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\t\t\treturn tmpResults.PostfixSolveList;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// If the token is at the beginning of the expression and not a number line orientation modifier, it's an error.\n\t\t\t\t\t\telse if ((i == 0) && ((tmpToken.Token != '+') || (tmpToken.Token != '-')))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.buildPostfixedSolveList found an operator at the beginning of a solve layer expression at token index ${i}`);\n\t\t\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\t\t\treturn tmpResults.PostfixSolveList;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// If the token is at the end of the expression, it is an error.\n\t\t\t\t\t\telse if (i == tmpSolveLayerTokens.length - 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.buildPostfixedSolveList found an operator at the end of a solve layer expression at token index ${i}`);\n\t\t\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\t\t\treturn tmpResults.PostfixSolveList;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// The - at the beginning of an expression is a number line orientation modifier\n\t\t\t\t\t\telse if ((i == 0) && (tmpToken.Token == '-'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpToken.VirtualSymbolName = `V_${tmpVirtualSymbolIndex}`;\n\t\t\t\t\t\t\ttmpResults.PostfixLayerstackMap[tmpToken.SolveLayerStack] = tmpToken.VirtualSymbolName;\n\t\t\t\t\t\t\ttmpVirtualSymbolIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// The - after an operator or an open parenthesis is also a number line orientation modifier\n\t\t\t\t\t\telse if ((i > 0) && (tmpToken.Token == '-') && ((tmpSolveLayerTokens[i-1].Type === 'Token.Operator') || (tmpSolveLayerTokens[i-1].Token === '(')))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// The number line negation operator is a special case that generates a virtual constant (-1.0) and multiplies it by the next token\n\t\t\t\t\t\t\ttmpToken.VirtualSymbolName = `V_${tmpVirtualSymbolIndex}`;\n\t\t\t\t\t\t\ttmpVirtualSymbolIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// The + at the beginning is also a number line orientation modifier ... THAT WE IGNORE\n\t\t\t\t\t\telse if ((i == 0) && (tmpToken.Token == '+'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// The + after an operator or a parenthesis is also a number line orientation modifier ... THAT WE IGNORE\n\t\t\t\t\t\telse if ((i > 0) && (tmpToken.Token == '+') && ((tmpSolveLayerTokens[i-1].Type === 'Token.Operator') || (tmpSolveLayerTokens[i-1].Token === '(')))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the token is next to another operator it's a parsing error\n\t\t\t\t\t\telse if ((tmpSolveLayerTokens[i-1].Type === 'Token.Operator') || (tmpSolveLayerTokens[i+1].Type === 'Token.Operator'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.buildPostfixedSolveList found an operator at token index ${i} that is not surrounded by two values.`);\n\t\t\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\t\t\treturn tmpResults.PostfixSolveList;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Finally add a virtual symbol name to the dang thing.\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpToken.VirtualSymbolName = `V_${tmpVirtualSymbolIndex}`;\n\t\t\t\t\t\t\ttmpResults.PostfixLayerstackMap[tmpToken.SolveLayerStack] = tmpToken.VirtualSymbolName;\n\t\t\t\t\t\t\ttmpVirtualSymbolIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if ((tmpSolveLayerTokens[i].Type === 'Token.Function') && (tmpPrecedence === 0))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpToken = tmpSolveLayerTokens[i];\n\t\t\t\t\t\ttmpToken.VirtualSymbolName = `V_${tmpVirtualSymbolIndex}`;\n\t\t\t\t\t\ttmpVirtualSymbolIndex++;\n\t\t\t\t\t\ttmpResults.PostfixLayerstackMap[tmpToken.SolveLayerStack] = tmpToken.VirtualSymbolName;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 5.2: Decorate the Parenthesis with Virtual Symbol Names\n\t\t//      ... this gets funny because of precedence of operations surrounding them, parenthesis and functions.\n\t\tlet tmpParenthesisCacheLIFOStack = [];\n\t\tfor (let i = 0; i < tmpResults.PostfixTokenObjects.length; i++)\n\t\t{\n\t\t\tlet tmpPostfixTokenObject = tmpResults.PostfixTokenObjects[i];\n\n\t\t\tif (tmpPostfixTokenObject.Type === 'Token.Parenthesis')\n\t\t\t{\n\t\t\t\t// This is just to track the parenthesis stack level in User feedback\n\t\t\t\ttmpPostfixTokenObject.ParenthesisStack = tmpPostfixTokenObject.VirtualSymbolName;\n\n\t\t\t\tif (tmpPostfixTokenObject.Token === '(')\n\t\t\t\t{\n\t\t\t\t\t// It's an open parenthesis.  If the previous token was an operator, get its precedence.\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (tmpResults.PostfixTokenObjects[i-1].Type === 'Token.Operator')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpPostfixTokenObject.PreviousPrecedence = tmpResults.PostfixTokenObjects[i-1].Descriptor.Precedence;\n\t\t\t\t\t\t\ttmpPostfixTokenObject.IsFunction = false;\n\t\t\t\t\t\t\ttmpPostfixTokenObject.PreviousVirtualSymbolName = tmpResults.PostfixTokenObjects[i-1].VirtualSymbolName;\n\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpResults.PostfixLayerstackMap[tmpPostfixTokenObject.VirtualSymbolName];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// This is a function, we will create a virtual symbol for the discrete parenthesis\n\t\t\t\t\t\telse if (tmpResults.PostfixTokenObjects[i-1].Type === 'Token.Function')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpPostfixTokenObject.PreviousPrecedence = 0;\n\t\t\t\t\t\t\ttmpPostfixTokenObject.IsFunction = true;\n\t\t\t\t\t\t\ttmpPostfixTokenObject.PreviousVirtualSymbolName = tmpResults.PostfixTokenObjects[i-1].VirtualSymbolName;\n\t\t\t\t\t\t\tlet tmpVirtualSymbolName = tmpResults.PostfixLayerstackMap[tmpPostfixTokenObject.VirtualSymbolName];\n\t\t\t\t\t\t\tif (!tmpVirtualSymbolName)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// This is a parenthesis group with no operators in it; make a virtual symbol name.\n\t\t\t\t\t\t\t\ttmpVirtualSymbolName = `V_${tmpVirtualSymbolIndex}`;\n\t\t\t\t\t\t\t\ttmpVirtualSymbolIndex++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpVirtualSymbolName;\n\n\t\t\t\t\t\t\tif (i > 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Todo: This needs to be enhanced to deal with negations\n\t\t\t\t\t\t\t\tlet tmpTokenBeforeFunction = tmpResults.PostfixTokenObjects[i-2];\n\t\t\t\t\t\t\t\tif (tmpTokenBeforeFunction.Type === 'Token.Operator')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmpPostfixTokenObject.PreviousVirtualSymbolName = tmpResults.PostfixTokenObjects[i-2].VirtualSymbolName;\n\t\t\t\t\t\t\t\t\ttmpPostfixTokenObject.PreviousPrecedence = tmpResults.PostfixTokenObjects[i-2].Descriptor.Precedence;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpResults.PostfixLayerstackMap[tmpPostfixTokenObject.VirtualSymbolName];\n\t\t\t\t\t}\n\t\t\t\t\ttmpParenthesisCacheLIFOStack.push(tmpPostfixTokenObject);\n\t\t\t\t}\n\t\t\t\tif (tmpPostfixTokenObject.Token === ')')\n\t\t\t\t{\n\t\t\t\t\t// There are three options for assigning this:\n\t\t\t\t\tlet tmpOpenParenthesis = tmpParenthesisCacheLIFOStack.pop();\n\t\t\t\t\t// It's at the end of the tokens -- use the stack's identifier\n\t\t\t\t\tif (i >= tmpResults.PostfixTokenObjects.length - 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (tmpOpenParenthesis.IsFunction)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpOpenParenthesis.PreviousVirtualSymbolName;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpOpenParenthesis.VirtualSymbolName;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// The next token is an operator and we're a function\n\t\t\t\t\t\tlet tmpPeekedNextToken = tmpResults.PostfixTokenObjects[i+1];\n\t\t\t\t\t\tif (tmpPeekedNextToken.Type == 'Token.Operator' && tmpOpenParenthesis.IsFunction)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// This is the most complex case -- the next token is an operator AND this is a function.\n\t\t\t\t\t\t\t// The following is just pointer math.\n\t\t\t\t\t\t\t// If the operater is at the same precedence or higher than the open parenthesis previous operator, use the previous operator's identifier\n\t\t\t\t\t\t\t// NOTE: This line of code is insanely complex\n\n\t\t\t\t\t\t\t//tmpPostfixTokenObject.VirtualSymbolName = tmpOpenParenthesis.PreviousVirtualSymbolName;\n\n\t\t\t\t\t\t\t// If the next token has higher precedence than what's before the open parenthesis, use it for the open as well\n\t\t\t\t\t\t\tif (tmpPeekedNextToken.Descriptor.Precedence < tmpOpenParenthesis.PreviousPrecedence)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpOpenParenthesis.VirtualSymbolName = tmpPeekedNextToken.VirtualSymbolName;\n\t\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpResults.PostfixLayerstackMap[tmpPostfixTokenObject.VirtualSymbolName];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Otherwise use this one -- it is the higher precedence.  And update the previous parenthesis operator's virtual symbol to be the peeked token's virtual symbol.\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpOpenParenthesis.PreviousVirtualSymbolName;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// The next token is an operator and it isn't a function\n\t\t\t\t\t\telse if (tmpPeekedNextToken.Type == 'Token.Operator' && tmpOpenParenthesis.hasOwnProperty('PreviousPrecedence'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// This is the second most complex case -- the next token is an operator.\n\t\t\t\t\t\t\t// If the operater is at the same precedence or higher than the open parenthesis previous operator, use the previous operator's identifier\n\t\t\t\t\t\t\t// NOTE: This line of code is insanely complex\n\t\t\t\t\t\t\tif (tmpPeekedNextToken.Descriptor.Precedence <= tmpOpenParenthesis.PreviousPrecedence)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpOpenParenthesis.PreviousVirtualSymbolName;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Otherwise use this one -- it is the higher precedence.  And update the previous parenthesis operator's virtual symbol to be the peeked token's virtual symbol.\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpResults.PostfixLayerstackMap[tmpPostfixTokenObject.VirtualSymbolName];\n\t\t\t\t\t\t\t\ttmpOpenParenthesis.VirtualSymbolName = tmpPeekedNextToken.VirtualSymbolName;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// If this is a function, dereference the function's previous virtual symbol name\n\t\t\t\t\t\t\tif (tmpOpenParenthesis.IsFunction)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpOpenParenthesis.PreviousVirtualSymbolName;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpPostfixTokenObject.VirtualSymbolName = tmpResults.PostfixLayerstackMap[tmpPostfixTokenObject.VirtualSymbolName];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// If there isn't an operator in the layer stack, push forward the assignment\n\t\t\t\t\tif (!tmpResults.PostfixLayerstackMap[tmpOpenParenthesis.ParenthesisStack])\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpResults.PostfixLayerstackMap[tmpOpenParenthesis.ParenthesisStack] = tmpOpenParenthesis.VirtualSymbolName;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let tmpSolveLayerIndex = 0; tmpSolveLayerIndex < tmpSolveLayerKeys.length; tmpSolveLayerIndex++)\n\t\t{\n\t\t\tlet tmpSolveLayerTokens = tmpSolveLayerMap[tmpSolveLayerKeys[tmpSolveLayerIndex]];\n\n\t\t\tif (tmpSolveLayerTokens.length === 1)\n\t\t\t{\n\t\t\t\t// This is just a simple value assignment -- use a simple addition virtual operation.\n\t\t\t\t// We often see these inside functions.\n\t\t\t\tlet tmpAbstractAddToken = this.getTokenContainerObject('+');\n\t\t\t\t//let tmpVirtualSymbolName = tmpResults.PostfixLayerstackMap[tmpSolveLayerTokens[0].SolveLayerStack];\n\t\t\t\ttmpAbstractAddToken.VirtualSymbolName = tmpResults.PostfixLayerstackMap[tmpSolveLayerTokens[0].SolveLayerStack];\n\t\t\t\ttmpResults.PostfixSolveList.push(this.getPosfixSolveListOperation(tmpAbstractAddToken, this.getTokenContainerObject('0.0'), tmpSolveLayerTokens[0]));\n\t\t\t}\n\t\t}\n\n\t\t// 5.3: Generate the Postfix Solve List\n\t\tfor (let tmpSolveLayerIndex = 0; tmpSolveLayerIndex < tmpSolveLayerKeys.length; tmpSolveLayerIndex++)\n\t\t{\n\t\t\tlet tmpSolveLayerTokens = tmpSolveLayerMap[tmpSolveLayerKeys[tmpSolveLayerIndex]];\n\n\t\t\t// For each precedence level in the layer\n\t\t\tfor (let tmpPrecedence = 0; tmpPrecedence <= this.ExpressionParser.tokenMaxPrecedence; tmpPrecedence++)\n\t\t\t{\n\t\t\t\t// Enumerate all tokens in a layer's expression.\n\t\t\t\t// There is a recursive way to do this, but given the short length of even the most complex equations we're favoring readability.\n\t\t\t\tfor (let i = 0; i < tmpSolveLayerTokens.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// If the token is an operator and at the current precedence, add it to the postfix solve list and mutate the array.\n\t\t\t\t\tif ((tmpSolveLayerTokens[i].Type === 'Token.Operator') &&\n\t\t\t\t\t\t(tmpSolveLayerTokens[i].Descriptor.Precedence === tmpPrecedence))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpToken = tmpSolveLayerTokens[i];\n\t\t\t\t\t\t// The - at the beginning of an expression is a number line orientation modifier\n\t\t\t\t\t\tif ((i == 0) && (tmpToken.Token == '-'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// The number line negation operator is a special case that generates a virtual constant (-1.0) and multiplies it by the next token\n\t\t\t\t\t\t\t// This is an abstract operation that isn't in the expression.\n\t\t\t\t\t\t\tlet tmpAbstractMultiplyToken = this.getTokenContianerObject('*');\n\t\t\t\t\t\t\ttmpAbstractMultiplyToken.VirtualSymbolName = tmpToken.VirtualSymbolName;\n\t\t\t\t\t\t\ttmpResults.PostfixSolveList.push(this.getPosfixSolveListOperation(tmpAbstractMultiplyToken, this.getTokenContainerObject('-1.0'), tmpSolveLayerTokens[i+1]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// The - after an operator or an open parenthesis is also a number line orientation modifier\n\t\t\t\t\t\telse if ((i > 0) && (tmpToken.Token == '-') && ((tmpSolveLayerTokens[i-1].Type === 'Token.Operator') || (tmpSolveLayerTokens[i-1].Token === '(')))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// The number line negation operator is a special case that generates a virtual constant (-1.0) and multiplies it by the next token\n\t\t\t\t\t\t\tlet tmpAbstractMultiplyToken = this.getTokenContianerObject('*');\n\t\t\t\t\t\t\ttmpAbstractMultiplyToken.VirtualSymbolName = tmpToken.VirtualSymbolName;\n\t\t\t\t\t\t\ttmpResults.PostfixSolveList.push(this.getPosfixSolveListOperation(tmpAbstractMultiplyToken, this.getTokenContainerObject('-1.0'), tmpSolveLayerTokens[i+1]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// The + at the beginning is also a number line orientation modifier ... THAT WE IGNORE\n\t\t\t\t\t\telse if ((i == 0) && (tmpToken.Token == '+'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// The + after an operator or a parenthesis is also a number line orientation modifier ... THAT WE IGNORE\n\t\t\t\t\t\telse if ((i > 0) && (tmpToken.Token == '+') && ((tmpSolveLayerTokens[i-1].Type === 'Token.Operator') || (tmpSolveLayerTokens[i-1].Token === '(')))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Finally add the dang thing.\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpResults.PostfixSolveList.push(this.getPosfixSolveListOperation(tmpToken, tmpSolveLayerTokens[i-1], tmpSolveLayerTokens[i+1], tmpSolveLayerTokens, i));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if ((tmpSolveLayerTokens[i].Type === 'Token.Function') && (tmpPrecedence === 0))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpToken = tmpSolveLayerTokens[i];\n\t\t\t\t\t\t// Not sure what to do with the other token.\n\t\t\t\t\t\ttmpResults.PostfixSolveList.push(this.getPosfixSolveListOperation(tmpToken, tmpSolveLayerTokens[i+1], this.getTokenContainerObject('0.0')));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now set the assignment address.\n\t\tlet tmpAssignmentInstruction = this.getPosfixSolveListOperation(this.getTokenContainerObject('Assign', 'Token.SolverInstruction'), this.getTokenContainerObject('DestinationHash', 'Token.SolverInstruction'), this.getTokenContainerObject('Resulting', 'Token.SolverInstruction'));\n\t\ttmpAssignmentInstruction.VirtualSymbolName = tmpResults.PostfixedAssignmentAddress;\n\t\ttmpResults.PostfixSolveList.push(tmpAssignmentInstruction);\n\n\t\treturn tmpResults.PostfixSolveList;\n\t}\n}\n\nmodule.exports = ExpressionParserPostfix;\n","const libExpressionParserOperationBase = require('./Fable-Service-ExpressionParser-Base.js');\n\nclass ExpressionParserSolver extends libExpressionParserOperationBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'ExpressionParser-Solver';\n\t}\n\n\tsolvePostfixedExpression(pPostfixedExpression, pDataDestinationObject, pResultObject, pManifest)\n\t{\n\t\tlet tmpResults = (typeof(pResultObject) === 'object') ? pResultObject : { ExpressionParserLog: [] };\n\n\t\tlet tmpManifest = (typeof(pManifest) === 'object') ? pManifest : this.fable.newManyfest();\n\n\t\tlet tmpDataDestinationObject = (typeof(pDataDestinationObject) === 'object') ? pDataDestinationObject : {};\n\n\t\t// If there was a fable passed in (e.g. the results object was a service or such), we won't decorate\n\t\tlet tmpPassedInFable = tmpResults.hasOwnProperty('fable');\n\t\tif (!tmpPassedInFable)\n\t\t{\n\t\t\ttmpResults.fable = this.fable;\n\t\t}\n\n\t\tif (!Array.isArray(pPostfixedExpression))\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.solvePostfixedExpression was passed a non-array postfixed expression.`);\n\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\treturn false;\n\t\t}\n\t\tif (pPostfixedExpression.length < 1)\n\t\t{\n\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.solvePostfixedExpression was passed an empty postfixed expression.`);\n\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\treturn false;\n\t\t}\n\n\t\t// This is how the user communication magic happens.\n\t\ttmpResults.VirtualSymbols = {};\n\n\t\tfor (let i = 0; i < pPostfixedExpression.length; i++)\n\t\t{\n\t\t\tif (pPostfixedExpression[i].Operation.Type === 'Token.SolverInstruction')\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet tmpStepResultObject = { ExpressionStep: pPostfixedExpression[i], ExpressionStepIndex: i, ResultsObject: tmpResults, Manifest: tmpManifest};\n\n\t\t\t// Resolve the virtual symbols to their actual values\n\t\t\tif (tmpStepResultObject.ExpressionStep.LeftValue.Type === 'Token.VirtualSymbol')\n\t\t\t{\n\t\t\t\ttmpStepResultObject.ExpressionStep.LeftValue.Value = tmpManifest.getValueAtAddress(tmpResults.VirtualSymbols, tmpStepResultObject.ExpressionStep.LeftValue.Token);\n\t\t\t}\n\t\t\tif (tmpStepResultObject.ExpressionStep.RightValue.Type === 'Token.VirtualSymbol')\n\t\t\t{\n\t\t\t\ttmpStepResultObject.ExpressionStep.RightValue.Value = tmpManifest.getValueAtAddress(tmpResults.VirtualSymbols, tmpStepResultObject.ExpressionStep.RightValue.Token);\n\t\t\t}\n\n\t\t\t// Resolve the parenthesis to their actual values\n\t\t\tif (tmpStepResultObject.ExpressionStep.LeftValue.Type === 'Token.Parenthesis')\n\t\t\t{\n\t\t\t\ttmpStepResultObject.ExpressionStep.LeftValue.Value = tmpManifest.getValueAtAddress(tmpResults.VirtualSymbols, tmpStepResultObject.ExpressionStep.LeftValue.VirtualSymbolName);\n\t\t\t}\n\t\t\tif (tmpStepResultObject.ExpressionStep.RightValue.Type === 'Token.Parenthesis')\n\t\t\t{\n\t\t\t\ttmpStepResultObject.ExpressionStep.RightValue.Value = tmpManifest.getValueAtAddress(tmpResults.VirtualSymbols, tmpStepResultObject.ExpressionStep.RightValue.VirtualSymbolName);\n\t\t\t}\n\n\t\t\tif (tmpStepResultObject.ExpressionStep.Operation.Type = 'Operator')\n\t\t\t{\n\t\t\t\t// TODO: This can be optimized.   A lot.  If necessary.  Seems pretty fast honestly for even thousands of operations.  Slowest part is arbitrary precision.\n\t\t\t\t// An operator always has a left and right value.\n\t\t\t\tlet tmpFunctionAddress = false;\n\t\t\t\tif (this.ExpressionParser.tokenMap.hasOwnProperty(tmpStepResultObject.ExpressionStep.Operation.Token))\n\t\t\t\t{\n\t\t\t\t\ttmpFunctionAddress = `ResultsObject.${tmpStepResultObject.ExpressionStep.Operation.Descriptor.Function}`;\n\t\t\t\t}\n\t\t\t\telse if (this.ExpressionParser.functionMap.hasOwnProperty(tmpStepResultObject.ExpressionStep.Operation.Token.toLowerCase()))\n\t\t\t\t{\n\t\t\t\t\ttmpFunctionAddress = `ResultsObject.${this.ExpressionParser.functionMap[tmpStepResultObject.ExpressionStep.Operation.Token.toLowerCase()].Address}`;\n\t\t\t\t}\n\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`Solving Step ${i} [${tmpStepResultObject.ExpressionStep.VirtualSymbolName}] --> [${tmpStepResultObject.ExpressionStep.Operation.Token}]: ( ${tmpStepResultObject.ExpressionStep.LeftValue.Value} , ${tmpStepResultObject.ExpressionStep.RightValue.Value} )`);\n\t\t\t\t\ttmpResults.VirtualSymbols[tmpStepResultObject.ExpressionStep.VirtualSymbolName] = tmpManifest.getValueAtAddress(tmpStepResultObject, `${tmpFunctionAddress}(ExpressionStep.LeftValue.Value,ExpressionStep.RightValue.Value)`);\n\t\t\t\t\tthis.log.trace(`   ---> Step ${i}: ${tmpResults.VirtualSymbols[tmpStepResultObject.ExpressionStep.VirtualSymbolName]}`)\n\t\t\t\t}\n\t\t\t\tcatch (pError)\n\t\t\t\t{\n\t\t\t\t\ttmpResults.ExpressionParserLog.push(`ERROR: ExpressionParser.solvePostfixedExpression failed to solve step ${i} with function ${tmpStepResultObject.ExpressionStep.Operation.Token}.`);\n\t\t\t\t\tthis.log.error(tmpResults.ExpressionParserLog[tmpResults.ExpressionParserLog.length-1]);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Equations don't always solve in virtual symbol order.\n\t\t\t\ttmpResults.SolverFinalVirtualSymbol = tmpStepResultObject.ExpressionStep.VirtualSymbolName;\n\t\t\t}\n\t\t}\n\n\t\tlet tmpSolverResultValue = tmpManifest.getValueAtAddress(tmpResults, `VirtualSymbols.${tmpResults.SolverFinalVirtualSymbol}`);\n\n\t\t// Now deal with final assignment\n\t\tfor (let i = 0; i < pPostfixedExpression.length; i++)\n\t\t{\n\t\t\tif ((pPostfixedExpression[i].Operation.Type === 'Token.SolverInstruction') && (pPostfixedExpression[i].Operation.Token == 'Assign'))\n\t\t\t{\n\t\t\t\ttmpManifest.setValueAtAddress(tmpResults.VirtualSymbols, pPostfixedExpression[i].VirtualSymbolName, tmpSolverResultValue);\n\t\t\t\ttmpManifest.setValueByHash(tmpDataDestinationObject, pPostfixedExpression[i].VirtualSymbolName, tmpSolverResultValue);\n\t\t\t}\n\n\t\t}\n\t\t// Clean up the reference if we added it to the object.\n\t\tif (!tmpPassedInFable)\n\t\t{\n\t\t\tdelete tmpResults.fable;\n\t\t}\n\n\t\treturn tmpSolverResultValue.toString();\n\t}\n}\n\nmodule.exports = ExpressionParserSolver;\n","module.exports={\n\t\"=\":\n\t\t{\n\t\t\t\"Name\": \"Equals\",\n\t\t\t\"Token\": \"=\",\n\t\t\t\"Precedence\": 0,\n\t\t\t\"Type\": \"Assignment\"\n\t\t},\n\n\t\"(\":\n\t\t{\n\t\t\t\"Name\": \"Left Parenthesis\",\n\t\t\t\"Token\": \"(\",\n\t\t\t\"Precedence\": 0,\n\t\t\t\"Type\": \"Parenthesis\"\n\t\t},\n\t\")\":\n\t\t{\n\t\t\t\"Name\": \"Right Parenthesis\",\n\t\t\t\"Token\": \")\",\n\t\t\t\"Precedence\": 0,\n\t\t\t\"Type\": \"Parenthesis\"\n\t\t},\n\n\t\"*\":\n\t\t{\n\t\t\t\"Name\": \"Multiply\",\n\t\t\t\"Token\": \"*\",\n\t\t\t\"Function\": \"fable.Math.multiplyPrecise\",\n\t\t\t\"Precedence\": 3,\n\t\t\t\"Type\": \"Operator\"\n\t\t},\n\t\"/\":\n\t\t{\n\t\t\t\"Name\": \"Divide\",\n\t\t\t\"Token\": \"/\",\n\t\t\t\"Function\": \"fable.Math.dividePrecise\",\n\t\t\t\"Precedence\": 3,\n\t\t\t\"Type\": \"Operator\"\n\t\t},\n\n\t\"^\":\n\t\t{\n\t\t\t\"Name\": \"Exponent\",\n\t\t\t\"Token\": \"^\",\n\t\t\t\"Function\": \"fable.Math.powerPrecise\",\n\t\t\t\"Precedence\": 1,\n\t\t\t\"Type\": \"Operator\"\n\t\t},\n\t\"%\":\n\t\t{\n\t\t\t\"Name\": \"Modulus\",\n\t\t\t\"Token\": \"%\",\n\t\t\t\"Function\": \"fable.Math.modPrecise\",\n\t\t\t\"Precedence\": 3,\n\t\t\t\"Type\": \"Operator\"\n\t\t},\n\n\t\"+\":\n\t\t{\n\t\t\t\"Name\": \"Add\",\n\t\t\t\"Token\": \"+\",\n\t\t\t\"Function\": \"fable.Math.addPrecise\",\n\t\t\t\"Precedence\": 4,\n\t\t\t\"Type\": \"Operator\"\n\t\t},\n\t\"-\":\n\t\t{\n\t\t\t\"Name\": \"Subtract\",\n\t\t\t\"Token\": \"-\",\n\t\t\t\"Function\": \"fable.Math.subtractPrecise\",\n\t\t\t\"Precedence\": 4,\n\t\t\t\"Type\": \"Operator\"\n\t\t}\n}","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libFS = require('fs');\nconst libPath = require('path');\nconst libReadline = require('readline');\n\n\nclass FableServiceFilePersistence extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'FilePersistence';\n\n\t\tif (!this.options.hasOwnProperty('Mode'))\n\t\t{\n\t\t\tthis.options.Mode = parseInt('0777', 8) & ~process.umask();\n\t\t}\n\n\t\tthis.libFS = libFS;\n\t\tthis.libPath = libPath;\n\t\tthis.libReadline = libReadline;\n\t}\n\n\tjoinPath(...pPathArray)\n\t{\n\t\treturn libPath.resolve(...pPathArray);\n\t}\n\n\texistsSync(pPath)\n\t{\n\t\treturn libFS.existsSync(pPath);\n\t}\n\n\texists(pPath, fCallback)\n\t{\n\t\tlet tmpFileExists = this.existsSync(pPath);;\n\n\t\treturn fCallback(null, tmpFileExists);\n\t}\n\n\tappendFileSync(pFileName, pAppendContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.appendFileSync(pFileName, pAppendContent, tmpOptions);\n\t}\n\n\tdeleteFileSync(pFileName)\n\t{\n\t\treturn libFS.unlinkSync(pFileName);\n\t}\n\n\tdeleteFolderSync(pFileName)\n\t{\n\t\treturn libFS.rmdirSync(pFileName);\n\t}\n\n\treadFileSync(pFilePath, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.readFileSync(pFilePath, tmpOptions);\n\t}\n\n\treadFile(pFilePath, pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.readFile(pFilePath, tmpOptions, fCallback);\n\t}\n\n\twriteFileSync(pFileName, pFileContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFileSync(pFileName, pFileContent, tmpOptions);\n\t}\n\n\twriteFileSyncFromObject(pFileName, pObject)\n\t{\n\t\treturn this.writeFileSync(pFileName, JSON.stringify(pObject, null, 4));\n\t}\n\n\twriteFileSyncFromArray(pFileName, pFileArray)\n\t{\n\t\tif (!Array.isArray(pFileArray))\n\t\t{\n\t\t\tthis.log.error(`File Persistence Service attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).`);\n\t\t\treturn Error('Attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let i = 0; i < pFileArray.length; i++)\n\t\t\t{\n\t\t\t\treturn this.appendFileSync(pFileName, `${pFileArray[i]}\\n`);\n\t\t\t}\n\t\t}\n\t}\n\n\twriteFile(pFileName, pFileContent, pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFile(pFileName, pFileContent, tmpOptions, fCallback);\n\t}\n\n\tlineReaderFactory(pFilePath, fOnLine, fOnComplete, fOnError)\n\t{\n\t\tlet tmpLineReader = {};\n\n\t\tif (typeof(pFilePath) != 'string')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpLineReader.filePath = pFilePath;\n\n\t\ttmpLineReader.fileStream = libFS.createReadStream(tmpLineReader.filePath);\n\n\t\ttmpLineReader.reader = libReadline.createInterface({ input: tmpLineReader.fileStream, crlfDelay: Infinity });\n\n\t\tif (typeof(fOnError) === 'function')\n\t\t{\n\t\t\ttmpLineReader.reader.on('error', fOnError);\n\t\t}\n\n\t\ttmpLineReader.reader.on('line', (typeof(fOnLine) === 'function') ? fOnLine : () => {});\n\n\t\tif (typeof(fOnComplete) === 'function')\n\t\t{\n\t\t\ttmpLineReader.reader.on('close', fOnComplete);\n\t\t}\n\n\t\treturn tmpLineReader;\n\t}\n\n\t// Folder management\n\tmakeFolderRecursive(pParameters, fCallback)\n\t{\n\t\tlet tmpParameters = pParameters;\n\n\t\tif (typeof(pParameters) == 'string')\n\t\t{\n\t\t\ttmpParameters = { Path: pParameters };\n\t\t}\n\t\telse if (typeof(pParameters) !== 'object')\n\t\t{\n\t\t\tfCallback(new Error('Parameters object or string not properly passed to recursive folder create.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(tmpParameters.Path) !== 'string'))\n\t\t{\n\t\t\tfCallback(new Error('Parameters object needs a path to run the folder create operation.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!tmpParameters.hasOwnProperty('Mode'))\n\t\t{\n\t\t\ttmpParameters.Mode = this.options.Mode;\n\t\t}\n\n\t\t// Check if we are just starting .. if so, build the initial state for our recursive function\n\t\tif (typeof(tmpParameters.CurrentPathIndex) === 'undefined')\n\t\t{\n\t\t\t// Build the tools to start recursing\n\t\t\ttmpParameters.ActualPath = libPath.normalize(tmpParameters.Path);\n\t\t\ttmpParameters.ActualPathParts = tmpParameters.ActualPath.split(libPath.sep);\n\t\t\ttmpParameters.CurrentPathIndex = 0;\n\t\t\ttmpParameters.CurrentPath = '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is not our first run, so we will continue the recursion.\n\t\t\t// Build the new base path\n\t\t\tif (tmpParameters.CurrentPath == libPath.sep)\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\n\t\t\t// Increment the path index\n\t\t\ttmpParameters.CurrentPathIndex++;\n\t\t}\n\n\t\t// Check if the path is fully complete\n\t\tif (tmpParameters.CurrentPathIndex >= tmpParameters.ActualPathParts.length)\n\t\t{\n\t\t\treturn fCallback(null);\n\t\t}\n\n\t\t// Check if the path exists (and is a folder)\n\t\tlibFS.open(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], 'r',\n\t\t\t(pError, pFileDescriptor)=>\n\t\t\t{\n\t\t\t\tif (pFileDescriptor)\n\t\t\t\t{\n\t\t\t\t\tlibFS.closeSync(pFileDescriptor);\n\t\t\t\t}\n\n\t\t\t\tif (pError && pError.code=='ENOENT')\n\t\t\t\t{\n\t\t\t\t\t/* Path doesn't exist, create it */\n\t\t\t\t\tlibFS.mkdir(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], tmpParameters.Mode,\n\t\t\t\t\t\t(pCreateError) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!pCreateError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// We have now created our folder and there was no error -- continue.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (pCreateError.code =='EEXIST')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// The folder exists -- our dev might be running this in parallel/async/whatnot.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(pCreateError.code);\n\t\t\t\t\t\t\t\treturn fCallback(pCreateError);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nmodule.exports = FableServiceFilePersistence;","const libFableServiceBase = require('fable-serviceproviderbase');\n\n/**\n * Arbitrary Precision Math Operations\n * @author      Steven Velozo <steven@velozo.com>\n * @description Simple functions that perform arbitrary precision math operations and return string resultant values.  Wraps big.js\n * @class FableServiceMath\n * @extends libFableServiceBase\n */\nclass FableServiceMath extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Math';\n\t}\n\n/*\n\tPass-through Rounding Method Constants\n\n\tProperty\t   Value   BigDecimal Equiv   Description\n\t----------     -----   ----------------   -----------\n\troundDown      0       ROUND_DOWN         Rounds towards zero. (_I.e. truncate, no rounding._)\n\troundHalfUp    1       ROUND_HALF_UP      Rounds towards nearest neighbour. (_If equidistant, rounds away from zero._)\n\troundHalfEven  2       ROUND_HALF_EVEN    Rounds towards nearest neighbour. (_If equidistant, rounds towards even neighbour._)\n\troundUp        3       ROUND_UP           Rounds positively away from zero. (_Always round up._)\n*/\n\tget roundDown() { return this.fable.Utility.bigNumber.roundDown; }\n\tget roundHalfUp() { return this.fable.Utility.bigNumber.roundHalfUp; }\n\tget roundHalfEven() { return this.fable.Utility.bigNumber.roundHalfEven; }\n\tget roundUp() { return this.fable.Utility.bigNumber.roundUp; }\n\n\tparsePrecise(pValue, pNonNumberValue)\n\t{\n\t\tlet tmpNumber;\n\n\t\ttry\n\t\t{\n\t\t\ttmpNumber = new this.fable.Utility.bigNumber(pValue);\n\t\t}\n\t\tcatch(pError)\n\t\t{\n\t\t\tthis.log.warn(`Error parsing number (type ${typeof(pValue)}): ${pError}`);\n\t\t\ttmpNumber = (typeof(pNonNumberValue) === 'undefined') ? \"0.0\" : pNonNumberValue;\n\t\t}\n\n\t\treturn tmpNumber.toString();\n\t}\n\n\tpercentagePrecise(pIs, pOf)\n\t{\n\t\tlet tmpLeftValue = isNaN(pIs) ? 0 : pIs;\n\t\tlet tmpRightValue = isNaN(pOf) ? 0 : pOf;\n\n\t\tif (tmpRightValue == 0)\n\t\t{\n\t\t\treturn '0';\n\t\t}\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.div(tmpRightValue);\n\t\ttmpResult = tmpResult.times(100);\n\t\treturn tmpResult.toString();\n\t}\n\n\troundPrecise(pValue, pDecimals, pRoundingMethod)\n\t{\n\t\tlet tmpValue = isNaN(pValue) ? 0 : pValue;\n\t\tlet tmpDecimals = isNaN(pDecimals) ? 0 : pDecimals;\n\t\tlet tmpRoundingMethod = (typeof(pRoundingMethod) === 'undefined') ? this.roundHalfUp : pRoundingMethod;\n\n\t\tlet tmpArbitraryValue = new this.fable.Utility.bigNumber(tmpValue);\n\t\tlet tmpResult = tmpArbitraryValue.round(tmpDecimals, tmpRoundingMethod);\n\t\treturn tmpResult.toString();\n\t}\n\n\ttoFixedPrecise(pValue, pDecimals, pRoundingMethod)\n\t{\n\t\tlet tmpValue = isNaN(pValue) ? 0 : pValue;\n\t\tlet tmpDecimals = isNaN(pDecimals) ? 0 : pDecimals;\n\t\tlet tmpRoundingMethod = (typeof(pRoundingMethod) === 'undefined') ? this.roundHalfUp : pRoundingMethod;\n\n\t\tlet tmpArbitraryValue = new this.fable.Utility.bigNumber(tmpValue);\n\t\tlet tmpResult = tmpArbitraryValue.toFixed(tmpDecimals, tmpRoundingMethod);\n\t\n\t\treturn tmpResult.toString();\n\t}\n\n\taddPrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.plus(tmpRightValue);\n\t\treturn tmpResult.toString();\n\t}\n\n\tsubtractPrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.minus(tmpRightValue);\n\t\treturn tmpResult.toString();\n\t}\n\n\t// Bignumber does not use precision values for power -- only javascript decimals\n\tpowerPrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : parseInt(pRightValue);\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.pow(tmpRightValue);\n\t\treturn tmpResult.toString();\n\t}\n\n\tmultiplyPrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.times(tmpRightValue);\n\t\treturn tmpResult.toString();\n\t}\n\n\tdividePrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.div(tmpRightValue);\n\t\treturn tmpResult.toString();\n\t}\n\n\tmodPrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.mod(tmpRightValue);\n\t\treturn tmpResult.toString();\n\t}\n\n\tsqrtPrecise(pValue)\n\t{\n\t\tlet tmpValue = isNaN(pValue) ? 0 : pValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.sqrt();\n\t\treturn tmpResult.toString();\n\t}\n\n\tabsPrecise(pValue)\n\t{\n\t\tlet tmpValue = isNaN(pValue) ? 0 : pValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpValue);\n\t\tlet tmpResult = tmpLeftArbitraryValue.abs();\n\t\treturn tmpResult.toString();\n\t}\n\n\tcomparePrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\treturn tmpLeftArbitraryValue.cmp(tmpRightValue);\n\t}\n\n\tgtPrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\treturn tmpLeftArbitraryValue.gt(tmpRightValue);\n\t}\n\n\tgtePrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\treturn tmpLeftArbitraryValue.gte(tmpRightValue);\n\t}\n\n\tltPrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\treturn tmpLeftArbitraryValue.lt(tmpRightValue);\n\t}\n\n\tltePrecise(pLeftValue, pRightValue)\n\t{\n\t\tlet tmpLeftValue = isNaN(pLeftValue) ? 0 : pLeftValue;\n\t\tlet tmpRightValue = isNaN(pRightValue) ? 0 : pRightValue;\n\n\t\tlet tmpLeftArbitraryValue = new this.fable.Utility.bigNumber(tmpLeftValue);\n\t\treturn tmpLeftArbitraryValue.lt(tmpRightValue);\n\t}\n\n\tradPrecise(pDegrees)\n\t{\n\t\tlet tmpDegrees = isNaN(pDegrees) ? 0 : pDegrees;\n\n\t\tlet tmpDegreesArbitraryValue = new this.fable.Utility.bigNumber(tmpDegrees);\n\t\t// TODO: Const for pi in arbitrary precision?\n\t\tlet tmpResult = tmpDegreesArbitraryValue.times(Math.PI).div(180);\n\t\treturn tmpResult.toString();\n\t}\n\n\tsin(pRadians)\n\t{\n\t\tlet tmpRadians = isNaN(pRadians) ? 0 : pRadians;\n\t\treturn Math.sin(tmpRadians);\n\t}\n\n\tcos(pRadians)\n\t{\n\t\tlet tmpRadians = isNaN(pRadians) ? 0 : pRadians;\n\t\treturn Math.cos(tmpRadians);\n\t}\n\n\ttan(pRadians)\n\t{\n\t\tlet tmpRadians = isNaN(pRadians) ? 0 : pRadians;\n\t\treturn Math.tan(tmpRadians);\n\t}\n}\n\nmodule.exports = FableServiceMath;\n","const libFableServiceBase = require('fable-serviceproviderbase');\n\n/**\n* Precedent Meta-Templating\n* @author      Steven Velozo <steven@velozo.com>\n* @description Process text stream trie and postfix tree, parsing out meta-template expression functions.\n*/\nconst libWordTree = require(`./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js`);\nconst libStringParser = require(`./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js`);\n\n\nclass FableServiceMetaTemplate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'MetaTemplate';\n\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser(this.fable);\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\taddPatternAsync(pPatternStart, pPatternEnd, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternAsync(pPatternStart, pPatternEnd, pParserPromise);\n\t}\n\n\taddPatternBoth(pPatternStart, pPatternEnd, pParser, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternBoth(pPatternStart, pPatternEnd, pParser, pParserPromise);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @param {function} fCallback - The callback function to call when a pattern is matched\n\t * @param {array} pDataContext - The history of data objects already passed in\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData, fCallback, pDataContext)\n\t{\n\t\tif (this.LogNoisiness > 4)\n\t\t{\n\t\t\tthis.fable.log.trace(`Metatemplate parsing template string [${pString}] where the callback is a ${typeof(fCallback)}`, {TemplateData:pData});\n\t\t}\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData, fCallback, pDataContext);\n\t}\n}\n\nmodule.exports = FableServiceMetaTemplate;","/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor(pFable)\n\t{\n\t\tthis.fable = pFable;\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData, pDataContext)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse') && (!pParserState.Pattern.isAsync || pParserState.Pattern.isBoth))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData, pDataContext);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.fable.log.info(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync && !pParserState.Pattern.isBoth)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.fable.log.info(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData, pDataContext);\n\t\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texecutePatternAsync(pParserState, pData, fCallback, pDataContext)\n\t{\n\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t// Trim the start and end tags off the output buffer now\n\t\tif (pParserState.Pattern.isAsync && !pParserState.Pattern.isBoth)\n\t\t{\n\t\t\t// Run the function\n\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.fable.log.info(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\treturn fCallback();\n\t\t\t\t}, pDataContext);\n\t\t}\n\t\telse if (pParserState.Pattern.isAsync && pParserState.Pattern.isBoth)\n\t\t{\n\t\t\t// Run the function when both async and non async were provided with the pattern\n\t\t\treturn pParserState.Pattern.ParseAsync(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.fable.log.info(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\treturn fCallback();\n\t\t\t\t}, pDataContext);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Run the t*mplate function\n\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData, pDataContext);\n\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacterAsync\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t * @param {function} fCallback - The callback function to call when the parse is complete\n\t * @param {array} pDataContext - The history of data objects/context already passed in\n\t * @private\n\t */\n\tparseCharacterAsync (pCharacter, pParserState, pData, fCallback, pDataContext)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.executePatternAsync(pParserState, pData, fCallback, pDataContext);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.executePatternAsync(pParserState, pData, fCallback, pDataContext);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\telse\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\t// Without this, templates of all sizes work fine in node.  They do not in the browser.\n\t\t// Trying this out without the timout on non asynchronous template flips.\n\t\treturn fCallback();\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t * @param {function} fCallback - The callback function to call when the parse is complete\n\t * @param {array} pDataContext - The history of data objects/context already passed in\n\t */\n\tparseString (pString, pParseTree, pData, fCallback, pDataContext)\n\t{\n\t\t// TODO: There is danger here if a template function attempts to functionally recurse and doesn't pass this in.\n\t\tlet tmpPreviousDataContext = (Array.isArray(pDataContext)) ? pDataContext : [];\n\t\tlet tmpDataContext = Array.from(tmpPreviousDataContext);\n\t\ttmpDataContext.push(pData)\n\n\t\tif (typeof(fCallback) !== 'function')\n\t\t{\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\t\tfor (var i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: This is not fast.\n\t\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData, tmpDataContext);\n\t\t\t}\n\n\t\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\t\treturn tmpParserState.Output;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is the async mode\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\t\t\ttmpParserState.Asynchronous = true;\n\n\t\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tfor (let i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\ttmpAnticipate.anticipate(\n\t\t\t\t\t(fCallback) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.parseCharacterAsync(pString[i], tmpParserState, pData, fCallback, tmpDataContext);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\t// Flush the remaining data\n\t\t\t\t\tthis.flushOutputBuffer(tmpParserState);\n\t\t\t\t\treturn fCallback(pError, tmpParserState.Output);\n\t\t\t\t});\n\t\t}\n\t}\n}\n\nmodule.exports = StringParser;\n","/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn tmpLeaf;\n\t}\n\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPatternAsync\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParserAsync - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternAsync (pPatternStart, pPatternEnd, fParserAsync)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParserAsync);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t}\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPatternBoth\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternBoth (pPatternStart, pPatternEnd, fParser, fParserAsync)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParser);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t\ttmpLeaf.isBoth = true;\n\t\t\t// When a leaf has both async and non-async versions of the functions, we store the async in fParserAsync.\n\t\t\ttmpLeaf.ParseAsync = fParserAsync;\n\t\t}\n\t}\n}\n\nmodule.exports = WordTree;\n","module.exports = (\n\t{\n\t\t\"Metadata\": {\n\t\t\t\"UUID\": false,\n\t\t\t\"Hash\": false,\n\n\t\t\t\"Name\": \"\",\n\t\t\t\"Summary\": \"\",\n\n\t\t\t\"Version\": 0\n\t\t},\n\t\t\"Status\": {\n\t\t\t\"Completed\": false,\n\t\t\t\"StepCount\": 0\n\t\t},\n\t\t\"Steps\": [],\n\t\t\"Errors\": [],\n\t\t\"Log\": []\n\t}\n);","const { PE } = require('big.js');\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst _OperationStatePrototypeString = JSON.stringify(require('./Fable-Service-Operation-DefaultSettings.js'));\n\nclass FableOperation extends libFableServiceBase\n{\n\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\t// Timestamps will just be the long ints\n\t\tthis.timeStamps = {};\n\n        this.serviceType = 'PhasedOperation';\n\n\t\tthis.state = JSON.parse(_OperationStatePrototypeString);\n\n\t\tthis.stepMap = {};\n\t\tthis.stepFunctions = {};\n\n\t\t// Match the service instantiation to the operation.\n\t\tthis.state.Metadata.Hash = this.Hash;\n\t\tthis.state.Metadata.UUID = this.UUID;\n\n\t\tthis.state.Metadata.Name = (typeof(this.options.Name) == 'string') ? this.options.Name : `Unnamed Operation ${this.state.Metadata.UUID}`;\n\t\tthis.name = this.state.Metadata.Name;\n\n\t\tthis.progressTrackerSet = this.fable.instantiateServiceProviderWithoutRegistration('ProgressTrackerSet');\n\n\t\tthis.state.OverallProgressTracker = this.progressTrackerSet.createProgressTracker(`Overall-${this.state.Metadata.UUID}`);\n\n\t\t// This is here to use the pass-through logging functions in the operation itself.\n\t\tthis.log = this;\n\t}\n\n\texecute(fExecutionCompleteCallback)\n\t{\n\t\t// TODO: Should the same operation be allowed to execute more than one time?\n\t\tif (this.state.OverallProgressTracker.StartTimeStamp > 0)\n\t\t{\n\t\t\treturn fExecutionCompleteCallback(new Error(`Operation [${this.state.Metadata.UUID}] ${this.state.Metadata.Name} has already been executed!`));\n\t\t}\n\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\t\t\n\t\tthis.progressTrackerSet.setProgressTrackerTotalOperations(this.state.OverallProgressTracker.Hash, this.state.Status.StepCount);\n\t\tthis.progressTrackerSet.startProgressTracker(this.state.OverallProgressTracker.Hash);\n\t\tthis.info(`Operation [${this.state.Metadata.UUID}] ${this.state.Metadata.Name} starting...`);\n\n\t\tfor (let i = 0; i < this.state.Steps.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(\n\t\t\t\tfunction(fNext)\n\t\t\t\t{\n\t\t\t\t\tthis.fable.log.info(`Step #${i} [${this.state.Steps[i].GUIDStep}] ${this.state.Steps[i].Name} starting...`);\n\t\t\t\t\tthis.progressTrackerSet.startProgressTracker(this.state.Steps[i].ProgressTracker.Hash);\n\t\t\t\t\treturn fNext();\n\t\t\t\t}.bind(this));\n\t\t\t// Steps are executed in a custom context with \n\t\t\ttmpAnticipate.anticipate(this.stepFunctions[this.state.Steps[i].GUIDStep].bind(\n\t\t\t\t{\n\t\t\t\t\tlog:this,\n\t\t\t\t\tfable:this.fable,\n\t\t\t\t\toptions:this.state.Steps[i].Metadata,\n\t\t\t\t\tmetadata:this.state.Steps[i].Metadata,\n\t\t\t\t\tProgressTracker:this.progressTrackerSet.getProgressTracker(this.state.Steps[i].ProgressTracker.Hash),\n\t\t\t\t\tlogProgressTrackerStatus: function() \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn this.log.info(`Step #${i} [${this.state.Steps[i].GUIDStep}]: ${this.progressTrackerSet.getProgressTrackerStatusString(this.state.Steps[i].ProgressTracker.Hash)}`);\n\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\tOperationState:this.state,\n\t\t\t\t\tStepState:this.state.Steps[i]\n\t\t\t\t}));\n\t\t\ttmpAnticipate.anticipate(\n\t\t\t\tfunction(fNext)\n\t\t\t\t{\n\t\t\t\t\tthis.progressTrackerSet.endProgressTracker(this.state.Steps[i].ProgressTracker.Hash);\n\t\t\t\t\tlet tmpStepTimingMessage = this.progressTrackerSet.getProgressTrackerStatusString(this.state.Steps[i].ProgressTracker.Hash);\n\t\t\t\t\tthis.fable.log.info(`Step #${i} [${this.state.Steps[i].GUIDStep}] ${this.state.Steps[i].Name} complete.`);\n\t\t\t\t\tthis.fable.log.info(`Step #${i} [${this.state.Steps[i].GUIDStep}] ${this.state.Steps[i].Name} ${tmpStepTimingMessage}.`);\n\t\t\t\n\t\t\t\t\tthis.progressTrackerSet.incrementProgressTracker(this.state.OverallProgressTracker.Hash, 1);\n\t\t\t\t\tlet tmpOperationTimingMessage = this.progressTrackerSet.getProgressTrackerStatusString(this.state.OverallProgressTracker.Hash);\n\t\t\t\t\tthis.fable.log.info(`Operation [${this.state.Metadata.UUID}] ${tmpOperationTimingMessage}.`);\n\t\t\t\t\treturn fNext();\n\t\t\t\t}.bind(this));\n\t\t}\n\n\t\t// Wait for the anticipation to complete\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\tthis.fable.log.error(`Operation [${this.state.Metadata.UUID}] ${this.state.Metadata.Name} had an error: ${pError}`, pError);\n\t\t\t\t\treturn fExecutionCompleteCallback(pError);\n\t\t\t\t}\n\t\t\t\tthis.info(`Operation [${this.state.Metadata.UUID}] ${this.state.Metadata.Name} complete.`);\n\t\t\t\tlet tmpOperationTimingMessage = this.progressTrackerSet.getProgressTrackerStatusString(this.state.OverallProgressTracker.Hash);\n\t\t\t\tthis.progressTrackerSet.endProgressTracker(this.state.OverallProgressTracker.Hash);\n\t\t\t\tthis.fable.log.info(`Operation [${this.state.Metadata.UUID}] ${tmpOperationTimingMessage}.`);\n\t\t\t\treturn fExecutionCompleteCallback();\n\t\t\t});\n\t}\n\n\t// There are three ways to add steps:\n\t// 1. As a basic javascript function\n\t//    --\n\t//    This is the most basic, java\"script\" way to add a step.  It will\n\t//    setup a \"this\" context that has the following properties:\n\t//    - log: A reference to the operation's log object\n\n\taddStep(fStepFunction, pStepMetadata, pStepName, pStepDescription, pGUIDStep)\n\t{\n\t\tlet tmpStep = {};\n\n\t\t// GUID is optional\n\t\ttmpStep.GUIDStep = (typeof(pGUIDStep) !== 'undefined') ? pGUIDStep : `STEP-${this.state.Steps.length}-${this.fable.DataGeneration.randomNumericString()}`;\n\n\n\t\t// Name is optional\n\t\ttmpStep.Name = (typeof(pStepName) !== 'undefined') ? pStepName : `Step [${tmpStep.GUIDStep}]`;\n\t\ttmpStep.Description = (typeof(pStepDescription) !== 'undefined') ? pStepDescription : `Step execution of ${tmpStep.Name}.`;\n\n\t\ttmpStep.ProgressTracker = this.progressTrackerSet.createProgressTracker(tmpStep.GUIDStep);\n\n\t\ttmpStep.Metadata = (typeof(pStepMetadata) === 'object') ? pStepMetadata : {};\n\n\t\t// There is an array of steps, in the Operation State itself ... push a step there\n\t\tthis.state.Steps.push(tmpStep);\n\n\t\tthis.stepMap[tmpStep.GUIDStep] = tmpStep;\n\n\t\tthis.stepFunctions[tmpStep.GUIDStep] = typeof(fStepFunction) == 'function' ? fStepFunction : function (fDone) { return fDone(); };\n\n\t\tthis.state.Status.StepCount++;\n\n\t\treturn tmpStep;\n\t}\n\n\tsetStepTotalOperations(pGUIDStep, pTotalOperationCount)\n\t{\n\t\tif (!this.stepMap.hasOwnProperty(pGUIDStep))\n\t\t{\n\t\t\treturn new Error(`Step [${pGUIDStep}] does not exist in operation [${this.state.Metadata.UUID}] ${this.state.Metadata.Name} when attempting to set total operations to ${pTotalOperationCount}.`);\n\t\t}\n\n\t\tthis.progressTrackerSet.setProgressTrackerTotalOperations(this.stepMap[pGUIDStep].ProgressTracker.Hash, pTotalOperationCount);\n\t}\n\n\twriteOperationLog(pLogLevel, pLogText, pLogObject)\n\t{\n\t\tthis.state.Log.push(`[${new Date().toUTCString()}]-[${pLogLevel}]: ${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Log.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\twriteOperationErrors(pLogText, pLogObject)\n\t{\n\t\tthis.state.Errors.push(`${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Errors.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('TRACE', pLogText, pLogObject);\n\t\tthis.fable.log.trace(pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('DEBUG', pLogText, pLogObject);\n\t\tthis.fable.log.debug(pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('INFO', pLogText, pLogObject);\n\t\tthis.fable.log.info(pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('WARN', pLogText, pLogObject);\n\t\tthis.fable.log.warn(pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('ERROR', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.error(pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('FATAL', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.fatal(pLogText, pLogObject);\n\t}\n}\n\nmodule.exports = FableOperation;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceProgressTime extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'ProgressTime';\n\n\t\tthis.timeStamps = {};\n\t}\n\n\tformatTimeDuration(pTimeDurationInMilliseconds)\n\t{\n\t\tlet tmpTimeDuration = typeof(pTimeDurationInMilliseconds) == 'number' ? pTimeDurationInMilliseconds : 0;\n\n\t\tif (pTimeDurationInMilliseconds < 0)\n\t\t{\n\t\t\treturn 'unknown';\n\t\t}\n\n\t\tlet tmpTimeDurationString = '';\n\t\tif (tmpTimeDuration > 3600000)\n\t\t{\n\t\t\ttmpTimeDurationString += Math.floor(tmpTimeDuration/3600000)+'h ';\n\t\t\ttmpTimeDuration = tmpTimeDuration % 3600000;\n\t\t}\n\t\tif (tmpTimeDuration > 60000)\n\t\t{\n\t\t\ttmpTimeDurationString += Math.floor(tmpTimeDuration/60000)+'m ';\n\t\t\ttmpTimeDuration = tmpTimeDuration % 60000;\n\t\t}\n\t\tif (tmpTimeDuration > 1000)\n\t\t{\n\t\t\ttmpTimeDurationString += Math.floor(tmpTimeDuration/1000)+'s ';\n\t\t\ttmpTimeDuration = tmpTimeDuration % 1000;\n\t\t}\n\t\ttmpTimeDurationString += Math.round(tmpTimeDuration)+'ms';\n\n\t\treturn tmpTimeDurationString;\n\t}\n\n\tcreateTimeStamp(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tthis.timeStamps[tmpTimeStampHash] = +new Date();\n\t\treturn this.timeStamps[tmpTimeStampHash];\n\t}\n\n\tgetTimeStampValue(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\treturn this.timeStamps.hasOwnProperty(tmpTimeStampHash) ? this.timeStamps[tmpTimeStampHash] : -1;\n\t}\n\n\tupdateTimeStampValue(pTimeStampHash, pReferenceTime)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tlet tmpReferenceTime = false;\n\t\t\n\t\t// This function allows the user to pass in either a reference time in ms, or, a hash of a timestamp.\n\t\tif (typeof(pReferenceTime) == 'string')\n\t\t{\n\t\t\ttmpReferenceTime = this.timeStamps.hasOwnProperty(tmpReference) ? this.timeStamps[tmpReference] : false;\n\t\t}\n\t\telse if (typeof(pReferenceTime) == 'number')\n\t\t{\n\t\t\ttmpReferenceTime = pReferenceTime;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpReferenceTime = +new Date();\n\t\t}\n\n\t\tif (this.timeStamps.hasOwnProperty(tmpTimeStampHash) && tmpReferenceTime)\n\t\t{\n\t\t\tthis.timeStamps[tmpTimeStampHash] = tmpReferenceTime;\n\t\t\treturn this.timeStamps[tmpTimeStampHash];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tremoveTimeStamp(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tif (this.timeStamps.hasOwnProperty(tmpTimeStampHash))\n\t\t{\n\t\t\tdelete this.timeStamps[tmpTimeStampHash];\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetTimeStampDelta(pTimeStampHash, pReferenceTime)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tlet tmpReferenceTime = false;\n\t\t\n\t\t// This function allows the user to pass in either a reference time in ms, or, a hash of a timestamp.\n\t\tif (typeof(pReferenceTime) == 'string')\n\t\t{\n\t\t\ttmpReferenceTime = this.timeStamps.hasOwnProperty(tmpReference) ? this.timeStamps[tmpReference] : false;\n\t\t}\n\t\telse if (typeof(pReferenceTime) == 'number')\n\t\t{\n\t\t\ttmpReferenceTime = pReferenceTime;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpReferenceTime = +new Date();\n\t\t}\n\n\t\tif (this.timeStamps.hasOwnProperty(tmpTimeStampHash) && tmpReferenceTime)\n\t\t{\n\t\t\treturn tmpReferenceTime-this.timeStamps[tmpTimeStampHash];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tgetDurationBetweenTimestamps(pTimeStampHashStart, pTimeStampHashEnd)\n\t{\n\t\tlet tmpTimeStampHashStart = (typeof(pTimeStampHashStart) == 'string') ? pTimeStampHashStart : 'Default';\n\t\tlet tmpTimeStampHashEnd = (typeof(pTimeStampHashEnd) == 'string') ? pTimeStampHashEnd : 'Default';\n\t\tif (this.timeStamps.hasOwnProperty(tmpTimeStampHashStart) && this.timeStamps.hasOwnProperty(tmpTimeStampHashEnd))\n\t\t{\n\t\t\treturn this.timeStamps[tmpTimeStampHashEnd]-this.timeStamps[tmpTimeStampHashStart];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tgetTimeStampDeltaMessage(pTimeStampHash, pMessage, pReferenceTime)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : `Elapsed for ${tmpTimeStampHash}: `;\n\t\tlet tmpOperationTime = this.getTimeStampDelta(tmpTimeStampHash, pReferenceTime);\n\n\t\treturn `${tmpMessage} ${this.formatTimeDuration(tmpOperationTime)}`;\n\t}\n\n\tlogTimeStampDelta(pTimeStampHash, pMessage, pReferenceTime)\n\t{\n\t\tthis.fable.log.info(this.getTimeStampDeltaMessage(pTimeStampHash, pMessage, pReferenceTime));\n\t}\n}\n\nmodule.exports = FableServiceProgressTime;","class ProgressTracker\n{\n\tconstructor(pProgressTrackerSet, pProgressTrackerHash)\n\t{\n\t\tthis.progressTrackerSet = pProgressTrackerSet;\n\t\tthis.progressTrackerHash = pProgressTrackerHash;\n\n\t\tthis.data = this.progressTrackerSet.getProgressTrackerData(this.progressTrackerHash);\n\t}\n\n\tupdateProgressTracker(pProgressAmount)\n\t{\n\t\treturn this.progressTrackerSet.updateProgressTracker(this.progressTrackerHash, pProgressAmount);\n\t}\n\n\tincrementProgressTracker(pProgressIncrementAmount)\n\t{\n\t\treturn this.progressTrackerSet.incrementProgressTracker(this.progressTrackerHash, pProgressIncrementAmount);\n\t}\n\n\tsetProgressTrackerTotalOperations(pTotalOperationCount)\n\t{\n\t\treturn this.progressTrackerSet.setProgressTrackerTotalOperations(this.progressTrackerHash, pTotalOperationCount);\n\t}\n\n\tgetProgressTrackerStatusString()\n\t{\n\t\treturn this.progressTrackerSet.getProgressTrackerStatusString(this.progressTrackerHash);\n\t}\n}\n\nmodule.exports = ProgressTracker;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libProgressTrackerClass = require('./Fable-Service-ProgressTracker/ProgressTracker.js');\n\nclass FableServiceProgressTrackerSet extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'ProgressTrackerSet';\n\n\t\tthis.progressTrackers = {};\n\n\t\t// Create an internal PorgressTime service to track timestamps\n\t\tthis.progressTimes = this.fable.instantiateServiceProviderWithoutRegistration('ProgressTime');\n\n\t\t// This timestamp is used and updated by *all* progress trackers.\n\t\tthis.progressTimes.createTimeStamp('CurrentTime');\n\t}\n\n\tgetProgressTracker(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.fable.log.warn(`ProgressTracker ${tmpProgressTrackerHash} does not exist!  Creating a new tracker...`);\n\t\t\tthis.createProgressTracker(tmpProgressTrackerHash, 100);\n\t\t}\n\n\t\treturn new libProgressTrackerClass(this, pProgressTrackerHash);\n\t}\n\n\tgetProgressTrackerData(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.fable.log.warn(`ProgressTracker ${tmpProgressTrackerHash} does not exist!  Creating a new tracker...`);\n\t\t\tthis.createProgressTracker(tmpProgressTrackerHash, 100);\n\t\t}\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tcreateProgressTracker(pProgressTrackerHash, pTotalOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\t\tlet tmpTotalOperations = (typeof(pTotalOperations) == 'number') ? pTotalOperations : 100;\n\n\t\tlet tmpProgressTracker = (\n\t\t\t{\n\t\t\t\tHash: tmpProgressTrackerHash,\n\n\t\t\t\tStartTimeHash: `${tmpProgressTrackerHash}-Start`,\n\t\t\t\tStartTimeStamp: -1,\n\t\t\t\tCurrentTimeStamp: -1,\n\t\t\t\tEndTimeHash: `${tmpProgressTrackerHash}-End`,\n\t\t\t\tEndTimeStamp: -1,\n\n\t\t\t\tPercentComplete: -1,\n\t\t\t\t// If this is set to true, PercentComplete will be calculated as CurrentCount / TotalCount even if it goes over 100%\n\t\t\t\tAllowTruePercentComplete: false,\n\n\t\t\t\tElapsedTime: -1,\n\t\t\t\tAverageOperationTime: -1,\n\t\t\t\tEstimatedCompletionTime: -1,\n\n\t\t\t\tTotalCount: tmpTotalOperations,\n\n\t\t\t\tCurrentCount:-1\n\t\t\t});\n\n\t\tif (this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.fable.log.warn(`ProgressTracker ${tmpProgressTrackerHash} already exists!  Overwriting with a new tracker...`);\n\t\t\tthis.progressTimes.removeTimeStamp(tmpProgressTracker.StartTimeHash);\n\t\t\tthis.progressTimes.removeTimeStamp(tmpProgressTracker.EndTimeHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash] = tmpProgressTracker;\n\n\t\treturn tmpProgressTracker;\n\t}\n\n\tsetProgressTrackerTotalOperations(pProgressTrackerHash, pTotalOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\t\tlet tmpTotalOperations = (typeof(pTotalOperations) == 'number') ? pTotalOperations : 100;\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.fable.log.warn(`Attempted to set the total operations of ProgressTracker ${tmpProgressTrackerHash} but it does not exist!  Creating a new tracker...`);\n\t\t\tthis.createProgressTracker(tmpProgressTrackerHash, tmpTotalOperations);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].TotalCount = tmpTotalOperations;\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tstartProgressTracker(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\n\t\t// This is the only method to lazily create ProgressTrackers now\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(tmpProgressTrackerHash, 100);\n\t\t}\n\n\t\tlet tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\tthis.progressTimes.createTimeStamp(this.progressTrackers[tmpProgressTrackerHash].StartTimeHash);\n\t\ttmpProgressTracker.StartTimeStamp = this.progressTimes.getTimeStampValue(this.progressTrackers[tmpProgressTrackerHash].StartTimeHash);\n\t\tif (tmpProgressTracker.CurrentCount < 0)\n\t\t{\n\t\t\ttmpProgressTracker.CurrentCount = 0;\n\t\t}\n\n\t\treturn this.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\t}\n\n\tendProgressTracker(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.fable.log.error(`Attempted to end ProgressTracker ${tmpProgressTrackerHash} that does not exist!`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\tthis.progressTimes.createTimeStamp(this.progressTrackers[tmpProgressTrackerHash].EndTimeHash);\n\t\ttmpProgressTracker.EndTimeStamp = this.progressTimes.getTimeStampValue(this.progressTrackers[tmpProgressTrackerHash].EndTimeHash);\n\n\t\treturn this.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\t}\n\n\tsolveProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.fable.log.error(`Attempted to solve ProgressTracker ${tmpProgressTrackerHash} that does not exist!`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\tif ((tmpProgressTracker.TotalCount < 1) || isNaN(tmpProgressTracker.TotalCount))\n\t\t{\n\t\t\tthis.fable.log.error(`ProgressTracker ${tmpProgressTracker.Hash} has an invalid total count of operations (${tmpProgressTracker.TotalCount}!  Setting it to the default of 100...`);\n\t\t\ttmpProgressTracker.TotalCount = 100;\n\t\t}\n\n\t\t// Compute the percentage of progress that is complete.\n\t\tif (tmpProgressTracker.CurrentCount < 1)\n\t\t{\n\t\t\ttmpProgressTracker.PercentComplete = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpProgressTracker.PercentComplete = (tmpProgressTracker.CurrentCount / tmpProgressTracker.TotalCount) * 100.0;\n\t\t}\n\n\t\tif (!tmpProgressTracker.AllowTruePercentComplete && (tmpProgressTracker.PercentComplete > 100))\n\t\t{\n\t\t\ttmpProgressTracker.PercentComplete = 100;\n\t\t}\n\n\t\t// Compute the average time per operation\n\t\tthis.progressTimes.updateTimeStampValue('CurrentTime');\n\t\ttmpProgressTracker.CurrentTimeStamp = this.progressTimes.getTimeStampValue('CurrentTime');\n\t\ttmpProgressTracker.ElapsedTime = tmpProgressTracker.CurrentTimeStamp - tmpProgressTracker.StartTimeStamp;\n\n\t\tif (tmpProgressTracker.EndTimeStamp > 0)\n\t\t{\n\t\t\ttmpProgressTracker.ElapsedTime = tmpProgressTracker.EndTimeStamp - tmpProgressTracker.StartTimeStamp;\n\t\t}\n\n\t\tif (tmpProgressTracker.CurrentCount > 0)\n\t\t{\n\t\t\ttmpProgressTracker.AverageOperationTime = (tmpProgressTracker.CurrentTimeStamp-tmpProgressTracker.StartTimeStamp) / tmpProgressTracker.CurrentCount;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpProgressTracker.AverageOperationTime = -1;\n\t\t}\n\n\t\t// Compute the estimated completion\n\t\tif (tmpProgressTracker.AverageOperationTime > 0)\n\t\t{\n\t\t\ttmpProgressTracker.EstimatedCompletionTime = Math.max((tmpProgressTracker.TotalCount - tmpProgressTracker.CurrentCount), 0) * tmpProgressTracker.AverageOperationTime;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpProgressTracker.EstimatedCompletionTime = -1;\n\t\t}\n\n\t\treturn tmpProgressTracker;\n\t}\n\n\tupdateProgressTracker(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\n\t\tif (isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\tthis.fable.log.warn(`Attempted to update ProgressTracker ${tmpProgressTrackerHash} with an invalid number of operations!`)\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = tmpCurrentOperations;\n\n\t\treturn this.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\t}\n\n\tincrementProgressTracker(pProgressTrackerHash, pOperationIncrementAmount)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\t\tlet tmpOperationIncrementAmount = parseInt(pOperationIncrementAmount);\n\n\t\tif (isNaN(tmpOperationIncrementAmount))\n\t\t{\n\t\t\ttmpOperationIncrementAmount = 1;\n\t\t}\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.fable.log.warn(`Attempted to increment ProgressTracker ${tmpProgressTrackerHash} but it did not exist.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.progressTrackers[tmpProgressTrackerHash].StartTimeStamp < 1)\n\t\t{\n\t\t\tthis.fable.log.warn(`Attempted to increment ProgressTracker ${tmpProgressTrackerHash} but it was not started.. starting now.`);\n\t\t\tthis.startProgressTracker(tmpProgressTrackerHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = this.progressTrackers[tmpProgressTrackerHash].CurrentCount + tmpOperationIncrementAmount;\n\n\t\treturn this.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\t}\n\n\tgetProgressTrackerCompletedOperationCountString(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\n\t\t// This call here can mean if we add operations and then immediately get the string, this function runs twice.\n\t\tconst tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\t// The states of a progress tracker:\n\t\tif (tmpProgressTracker.CurrentCount < 0)\n\t\t{\n\t\t\treturn `none`;\n\t\t}\n\t\telse if (tmpProgressTracker.CurrentCount < 1)\n\t\t{\n\t\t\treturn `0`;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn `${tmpProgressTracker.CurrentCount}`;\n\t\t}\n\t}\n\n\tgetProgressTrackerPercentCompleteString(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\n\t\t// This call here can mean if we add operations and then immediately get the string, this function runs twice.\n\t\t// TODO: Is there a pattern to avoid this double call that's worth putting in?\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\treturn `ProgressTracker ${tmpProgressTrackerHash} does not exist!  No stats to display.`;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\t\t// The states of a progress tracker:\n\t\t\t// 1. Not started\n\t\t\tif (tmpProgressTracker.StartTimeStamp < 1)\n\t\t\t{\n\t\t\t\treturn `0%`;\n\t\t\t}\n\t\t\t// 2. Started, but no operations completed\n\n\t\t\tif (tmpProgressTracker.CurrentCount < 1)\n\t\t\t{\n\t\t\t\treturn `0%`;\n\t\t\t}\n\t\t\t// 3. Started, some operations completed\n\t\t\telse if (tmpProgressTracker.EndTimeStamp < 1)\n\t\t\t{\n\t\t\t\treturn `${tmpProgressTracker.PercentComplete.toFixed(3)}%`;\n\t\t\t}\n\t\t\t// 4. Done\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn `${tmpProgressTracker.PercentComplete.toFixed(3)}%`;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetProgressTrackerStatusString(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'Default';\n\n\t\t// This call here can mean if we add operations and then immediately get the string, this function runs twice.\n\t\t// TODO: Is there a pattern to avoid this double call that's worth putting in?\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\treturn `ProgressTracker ${tmpProgressTrackerHash} does not exist!  No stats to display.`;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\t\t// The states of a progress tracker:\n\t\t\t// 1. Not started\n\t\t\tif (tmpProgressTracker.StartTimeStamp < 1)\n\t\t\t{\n\t\t\t\treturn `ProgressTracker ${tmpProgressTracker.Hash} has not been started yet.`;\n\t\t\t}\n\t\t\t// 2. Started, but no operations completed\n\n\t\t\tif ((tmpProgressTracker.CurrentCount < 1) && (tmpProgressTracker.EndTimeStamp < 1))\n\t\t\t{\n\t\t\t\treturn `ProgressTracker ${tmpProgressTracker.Hash} has no completed operations.  ${this.progressTimes.formatTimeDuration(tmpProgressTracker.ElapsedTime)} have elapsed since it was started.`;\n\t\t\t}\n\t\t\t// 3. Started, some operations completed\n\t\t\telse if (tmpProgressTracker.EndTimeStamp < 1)\n\t\t\t{\n\t\t\t\treturn `ProgressTracker ${tmpProgressTracker.Hash} is ${tmpProgressTracker.PercentComplete.toFixed(3)}% completed - ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations over ${this.progressTimes.formatTimeDuration(tmpProgressTracker.ElapsedTime)} (median ${this.progressTimes.formatTimeDuration(tmpProgressTracker.AverageOperationTime)} per).  Estimated completion: ${this.progressTimes.formatTimeDuration(tmpProgressTracker.EstimatedCompletionTime)}`;\t\t\t}\n\t\t\t// 4. Done\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn `ProgressTracker ${tmpProgressTracker.Hash} is done.  ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations were completed in ${this.progressTimes.formatTimeDuration(tmpProgressTracker.ElapsedTime)} (median ${this.progressTimes.formatTimeDuration(tmpProgressTracker.AverageOperationTime)} per).`;\n\t\t\t}\n\t\t}\n\t}\n\n\tlogProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tthis.fable.log.info(this.getProgressTrackerStatusString(pProgressTrackerHash));\n\t}\n}\n\nmodule.exports = FableServiceProgressTrackerSet;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libSimpleGet = require('simple-get');\nconst libCookie = require('cookie');\n\nclass FableServiceRestClient extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.TraceLog = false;\n\t\tif (this.options.TraceLog || this.fable.TraceLog)\n\t\t{\n\t\t\tthis.TraceLog = true;\n\t\t}\n\n\t\tthis.dataFormat = this.fable.services.DataFormat;\n\n\t\tthis.serviceType = 'RestClient';\n\n\t\tthis.cookie = false;\n\n\t\t// This is a function that can be overridden, to allow the management\n\t\t// of the request options before they are passed to the request library.\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tget simpleGet()\n\t{\n\t\treturn libSimpleGet;\n\t}\n\n\tprepareCookies(pRequestOptions)\n\t{\n\t\tif (this.cookie)\n\t\t{\n\t\t\tlet tmpCookieObject = this.cookie;\n\t\t\tif (!pRequestOptions.hasOwnProperty('headers'))\n\t\t\t{\n\t\t\t\tpRequestOptions.headers = {};\n\t\t\t}\n\t\t\tlet tmpCookieKeys = Object.keys(tmpCookieObject);\n\t\t\tif (tmpCookieKeys.length > 0)\n\t\t\t{\n\t\t\t\t// Only grab the first for now.\n\t\t\t\tpRequestOptions.headers.cookie = libCookie.serialize(tmpCookieKeys[0], tmpCookieObject[tmpCookieKeys[0]]);\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn pRequestOptions;\n\t}\n\n\tpreRequest(pOptions)\n\t{\n\t\t// Validate the options object\n\t\tlet tmpOptions = this.prepareCookies(pOptions);\n\n\t\t// Prepend a string to the URL if it exists in the Fable Config\n\t\tif (this.fable.settings.hasOwnProperty('RestClientURLPrefix'))\n\t\t{\n\t\t\ttmpOptions.url = this.fable.settings.RestClientURLPrefix + tmpOptions.url;\n\t\t}\n\n\t\treturn this.prepareRequestOptions(tmpOptions);\n\t}\n\n\texecuteChunkedRequest(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpData.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpData);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteChunkedRequestBinary(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\ttmpOptions.json = false;\n\t\ttmpOptions.encoding = null;\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpDataBuffer = false;\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: Potentially create a third option that streams this to a file?  So it doesn't have to hold it all in memory.\n\t\t\t\t\t\tif (!tmpDataBuffer)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.from(pChunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.concat([tmpDataBuffer, pChunk]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpDataBuffer.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpDataBuffer);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteJSONRequest(pOptions, fCallback)\n\t{\n\t\tpOptions.json = true;\n\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\tif (!tmpOptions.hasOwnProperty('headers'))\n\t\t{\n\t\t\ttmpOptions.headers = {};\n\t\t}\n\t\t/* Automated headers break some APIs\n\t\tif (!tmpOptions.headers.hasOwnProperty('Content-Type'))\n\t\t{\n\t\t\ttmpOptions.headers['Content-Type'] = 'application/json';\n\t\t}\n\t\t*/\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} JSON request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpJSONData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpJSONData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> JSON ${tmpOptions.method} completed - received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, JSON.parse(tmpJSONData));\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetJSON(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeJSONRequest(tmpRequestOptions, fCallback);\n\t}\n\n\tputJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PUT JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PUT';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpostJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`POST JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'POST';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpatchJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PATCH JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PATCH';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\theadJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`HEAD JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'HEAD';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tdelJSON(pOptions, fCallback)\n\t{\n\t\tpOptions.method = 'DELETE';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tgetRawText(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeChunkedRequest(tmpRequestOptions, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceRestClient;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceTemplate extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Template';\n\n\t\t// These are the exact regex's used in lodash/underscore\n\t\t// TODO: Switch this to precedent\n\t\tthis.Matchers = (\n\t\t\t{\n\t\t\t\tEvaluate: /<%([\\s\\S]+?)%>/g,\n\t\t\t\tInterpolate: /<%=([\\s\\S]+?)%>/g,\n\t\t\t\tEscaper: /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g,\n\t\t\t\tUnescaper: /\\\\(\\\\|'|r|n|t|u2028|u2029)/g,\n\t\t\t\t// This is how underscore does it, so we are keeping it for now.\n\t\t\t\tGuaranteedNonMatch: /.^/\n\t\t\t});\n\n\t\t// This is a helper for the escaper and unescaper functions.\n\t\t// Right now we are going to keep what underscore is doing, but, not forever.\n\t\tthis.templateEscapes = {\n\t\t\t'\\\\': '\\\\',\n\t\t\t\"'\": \"'\",\n\t\t\t'r': '\\r',\n\t\t\t'\\r': 'r',\n\t\t\t'n': '\\n',\n\t\t\t'\\n': 'n',\n\t\t\t't': '\\t',\n\t\t\t'\\t': 't',\n\t\t\t'u2028': '\\u2028',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'u2029': '\\u2029',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\t// This is defined as such to underscore that it is a dynamic programming\n\t\t// function on this class.\n\t\tthis.renderFunction = false;\n        this.templateString = false;\n\t}\n\n\trenderTemplate(pData)\n\t{\n\t\treturn this.renderFunction(pData);\n\t}\n\n\ttemplateFunction()\n\t{\n\t\tlet fRenderTemplateBound = this.renderTemplate.bind(this);\n\t\treturn fRenderTemplateBound;\n\t}\n\n\tbuildTemplateFunction(pTemplateText, pData)\n\t{\n\t\t// For now this is being kept in a weird form ... this is to mimic the old\n\t\t// underscore code until this is rewritten using precedent.\n\t\tthis.TemplateSource = \"__p+='\" + pTemplateText\n\t\t\t.replace(this.Matchers.Escaper,\n\t\t\t\t(pMatch)=>\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\${this.templateEscapes[pMatch]}`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Interpolate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `'+\\n(${decodeURIComponent(pCode)})+\\n'`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Evaluate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `';\\n${decodeURIComponent(pCode)}\\n;__p+='`;\n\t\t\t\t}) + `';\\n`;\n\n\n\t\tthis.TemplateSource = `with(pTemplateDataObject||{}){\\n${this.TemplateSource}}\\n`;\n\t\tthis.TemplateSource = `var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n${this.TemplateSource}return __p;\\n`;\n\n\t\tthis.renderFunction = new Function('pTemplateDataObject', this.TemplateSource);\n\n\t\tif (typeof(pData) != 'undefined')\n\t\t{\n\t\t\treturn this.renderFunction(pData);\n\t\t}\n\n\t\t// Provide the compiled function source as a convenience for build time\n\t\t// precompilation.\n\t\tthis.TemplateSourceCompiled = 'function(obj){\\n' + this.TemplateSource + '}';\n\n\t\treturn this.templateFunction();\n\t}\n}\n\nmodule.exports = FableServiceTemplate;","const libFableServiceBase = require('fable-serviceproviderbase');\n\n// TODO: These are still pretty big -- consider the smaller polyfills\nconst libAsyncWaterfall = require('async.waterfall');\nconst libAsyncEachLimit = require('async.eachlimit');\n\nconst libBigNumber = require('big.js');\n\nclass FableServiceUtility extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\tthis.templates = {};\n\n\t\t// These two functions are used extensively throughout\n\t\tthis.waterfall = libAsyncWaterfall;\n\t\tthis.eachLimit = libAsyncEachLimit;\n\n\t\tthis.bigNumber = libBigNumber;\n\t}\n\n\t// Underscore and lodash have a behavior, _.extend, which merges objects.\n\t// Now that es6 gives us this, use the native thingy.\n\t// Nevermind, the native thing is not stable enough across environments\n\t// Basic shallow copy\n\textend(pDestinationObject, ...pSourceObjects)\n\t{\n\t\tfor (let i = 0; i < pSourceObjects.length; i++)\n\t\t{\n\t\t\tlet tmpSourceObject = pSourceObjects[i];\n\t\t\tif (typeof(tmpSourceObject) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpObjectProperties = Object.keys(tmpSourceObject);\n\t\t\t\tfor (let k = 0; k < tmpObjectProperties.length; k++)\n\t\t\t\t{\n\t\t\t\t\tpDestinationObject[tmpObjectProperties[k]] = tmpSourceObject[tmpObjectProperties[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pDestinationObject;\n\t}\n\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\ttemplate(pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.instantiateServiceProviderWithoutRegistration('Template');\n\t\treturn tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t}\n\n\t// Build a template function from a template hash, and, register it with the service provider\n\tbuildHashedTemplate(pTemplateHash, pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.instantiateServiceProvider('Template', {}, pTemplateHash);\n\t\tthis.templates[pTemplateHash] = tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t\treturn this.templates[pTemplateHash];\n\t}\n\n\t// This is a safe, modern version of chunk from underscore\n\t// Algorithm pulled from a mix of these two polyfills:\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\n\t// https://youmightnotneed.com/lodash\n\t// This implementation was most tolerant in browsers.  Uglify can fix the rest.\n\tchunk (pInput, pChunkSize, pChunkCache)\n\t{\n\t\tlet tmpInputArray = [...pInput];\n\t\t// Note lodash defaults to 1, underscore defaults to 0\n\t\tlet tmpChunkSize = (typeof(pChunkSize) == 'number') ? pChunkSize : 0;\n\t\tlet tmpChunkCache = (typeof(pChunkCache) != 'undefined') ? pChunkCache : [];\n\n\t\tif (tmpChunkSize <= 0)\n\t\t{\n\t\t\treturn tmpChunkCache;\n\t\t}\n\n\t\twhile (tmpInputArray.length)\n\t\t{\n\t\t\ttmpChunkCache.push(tmpInputArray.splice(0, tmpChunkSize));\n\t\t}\n\n\t\treturn tmpChunkCache;\n\t}\n\n\t// Convert an ISO string to a javascript date object\n\t// Adapted from https://stackoverflow.com/a/54751179\n\t//\n\t// Takes strings like: 2022-11-04T11:34:45.000Z\n\t//                and: 1986-06-11T09:34:46.012Z+0200\n\t// ... and converts them into javascript timestamps, following the directions of the timezone stuff.\n\t//\n\t// This is not meant to replace the more complex libraries such as moment or luxon.\n\t// This *is* meant to be a simple, small, and fast way to convert ISO strings to dates in engines\n\t// with ultra limited JS capabilities where those don't work.\n\tisoStringToDate (pISOString)\n\t{\n\t\tif (!this.fable.hasOwnProperty('Dates'))\n\t\t{\n\t\t\tthis.fable.instantiateServiceProvider('Dates');\n\t\t}\n\n\t\tlet tmpDate = false;\n\n\t\ttry\n\t\t{\n\t\t\ttmpDate = this.fable.Dates.dayJS.utc(pISOString);\n\t\t}\n\t\tcatch(pError)\n\t\t{\n\t\t\t// TODO: Should this throw?  Doubtful.\n\t\t\tthis.fable.log.error(`Could not parse date string ${pISOString} with dayJS.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (tmpDate)\n\t\t{\n\t\t\treturn tmpDate.toDate();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nmodule.exports = FableServiceUtility;","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar undefined;\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\treturn !!$defineProperty;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!$defineProperty) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\nvar test = {\n\t__proto__: null,\n\tfoo: {}\n};\n\nvar $Object = Object;\n\n/** @type {import('.')} */\nmodule.exports = function hasProto() {\n\t// @ts-expect-error: TS errors on an inherited property for some reason\n\treturn { __proto__: test }.foo === test.foo\n\t\t&& !(test instanceof $Object);\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n","var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// When a boxed property is passed in, it should have quotes of some\n// kind around it.\n//\n// For instance:\n// \t\tMyValues['Name']\n// \t\tMyValues[\"Age\"]\n// \t\tMyValues[`Cost`]\n//\n// This function removes the wrapping quotes.\n//\n// Please note it *DOES NOT PARSE* template literals, so backticks just\n// end up doing the same thing as other quote types.\n//\n// TODO: Should template literals be processed?  If so what state do they have access to?  That should happen here if so.\n// TODO: Make a simple class include library with these\nconst cleanWrapCharacters = (pCharacter, pString) =>\n{\n\tif (pString.startsWith(pCharacter) && pString.endsWith(pCharacter))\n\t{\n\t\treturn pString.substring(1, pString.length - 1);\n\t}\n\telse\n\t{\n\t\treturn pString;\n\t}\n};\n\nmodule.exports = cleanWrapCharacters;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Hash Translation\n*\n* This is a very simple translation table for hashes, which allows the same schema to resolve\n* differently based on a loaded translation table.\n*\n* This is to prevent the requirement for mutating schemas over and over again when we want to\n* reuse the structure but look up data elements by different addresses.\n*\n* One side-effect of this is that a translation table can \"override\" the built-in hashes, since\n* this is always used to resolve hashes before any of the functionCallByHash(pHash, ...) perform\n* their lookups by hash.\n*\n* @class ManyfestHashTranslation\n*/\nclass ManyfestHashTranslation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n        this.translationTable = {};\n\t}\n\n    translationCount()\n    {\n        return Object.keys(this.translationTable).length;\n    }\n\n    addTranslation(pTranslation)\n    {\n        // This adds a translation in the form of:\n        // { \"SourceHash\": \"DestinationHash\", \"SecondSourceHash\":\"SecondDestinationHash\" }\n        if (typeof(pTranslation) != 'object')\n        {\n            this.logError(`Hash translation addTranslation expected a translation be type object but was passed in ${typeof(pTranslation)}`);\n            return false;\n        }\n\n        let tmpTranslationSources = Object.keys(pTranslation)\n\n        tmpTranslationSources.forEach(\n            (pTranslationSource) =>\n            {\n                if (typeof(pTranslation[pTranslationSource]) != 'string')\n                {\n                    this.logError(`Hash translation addTranslation expected a translation destination hash for [${pTranslationSource}] to be a string but the referrant was a ${typeof(pTranslation[pTranslationSource])}`);\n                }\n                else\n                {\n                    this.translationTable[pTranslationSource] = pTranslation[pTranslationSource];\n                }\n            });\n    }\n\n    removeTranslationHash(pTranslationHash)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslationHash))\n        {\n            delete this.translationTable[pTranslationHash];\n        }\n    }\n\n    // This removes translations.\n    // If passed a string, just removes the single one.\n    // If passed an object, it does all the source keys.\n    removeTranslation(pTranslation)\n    {\n        if (typeof(pTranslation) == 'string')\n        {\n            this.removeTranslationHash(pTranslation);\n            return true;\n        }\n        else if (typeof(pTranslation) == 'object')\n        {\n            let tmpTranslationSources = Object.keys(pTranslation)\n\n            tmpTranslationSources.forEach(\n                (pTranslationSource) =>\n                {\n                    this.removeTranslation(pTranslationSource);\n                });\n            return true;\n        }\n        else\n        {\n            this.logError(`Hash translation removeTranslation expected either a string or an object but the passed-in translation was type ${typeof(pTranslation)}`);\n            return false;\n        }\n    }\n\n    clearTranslations()\n    {\n        this.translationTable = {};\n    }\n\n    translate(pTranslation)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslation))\n        {\n            return this.translationTable[pTranslation];\n        }\n        else\n        {\n            return pTranslation;\n        }\n    }\n}\n\nmodule.exports = ManyfestHashTranslation;","/**\n* @author <steven@velozo.com>\n*/\n\n/**\n* Manyfest simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n\n    console.log(`[Manyfest] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject));\n};\n\nmodule.exports = logToConsole;","/**\n* @author <steven@velozo.com>\n*/\nconst libSimpleLog = require('./Manyfest-LogToConsole.js');\n// This is for resolving functions mid-address\nconst libGetObjectValue = require('./Manyfest-ObjectAddress-GetValue.js');\n\n// TODO: Just until this is a fable service.\nlet _MockFable = { DataFormat: require('./Manyfest-ObjectAddress-Parser.js') };\n\n/**\n* Object Address Resolver\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressResolverCheckAddressExists\n*/\nclass ManyfestObjectAddressResolverCheckAddressExists\n{\n\tconstructor()\n\t{\n\t\tthis.getObjectValueClass = new libGetObjectValue(libSimpleLog, libSimpleLog);\n\t}\n\n\t// Check if an address exists.\n\t//\n\t// This is necessary because the getValueAtAddress function is ambiguous on\n\t// whether the element/property is actually there or not (it returns\n\t// undefined whether the property exists or not).  This function checks for\n\t// existance and returns true or false dependent.\n\tcheckAddressExists (pObject, pAddress, pRootObject)\n\t{\n\t\t// TODO: Should these throw an error?\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\t// Set the root object to the passed-in object if it isn't set yet.  This is expected to be the root object.\n\t\t// NOTE: This was added to support functions mid-stream\n\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t// DONE: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpAddressPartBeginning = _MockFable.DataFormat.stringGetFirstSegment(pAddress);\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpAddressPartBeginning.length == pAddress.length)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check if there is a function somewhere in the address... parenthesis start should only be in a function\n\t\t\tlet tmpFunctionStartIndex = pAddress.indexOf('(');\n\n\t\t\t// NOTE THAT FUNCTIONS MUST RESOLVE FIRST\n\t\t\t// Functions look like this\n\t\t\t// \t\tMyFunction()\n\t\t\t// \t\tMyFunction(Some.Address)\n\t\t\t// \t\tMyFunction(Some.Address,Some.Other.Address)\n\t\t\t// \t\tMyFunction(Some.Address,Some.Other.Address,Some.Third.Address)\n\t\t\t//\n\t\t\t// This could be enhanced to allow purely numeric and string values to be passed to the function.  For now,\n\t\t\t// To heck with that.  This is a simple function call.\n\t\t\t//\n\t\t\t// The requirements to detect a function are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpFunctionStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (_MockFable.DataFormat.stringCountEnclosures(pAddress) > 0))\n\t\t\t{\n\t\t\t\tlet tmpFunctionAddress = pAddress.substring(0, tmpFunctionStartIndex).trim();\n\n\t\t\t\tif ((pObject.hasOwnProperty(tmpFunctionAddress)) && (typeof(pObject[tmpFunctionAddress]) == 'function'))\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// The address suggests it is a function, but it is not.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Check if the property exists.\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName].hasOwnProperty(tmpBoxedPropertyReference);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Use the new in operator to see if the element is in the array\n\t\t\t\t\treturn (tmpBoxedPropertyNumber in pObject[tmpBoxedPropertyName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Check if the property exists\n\t\t\t\treturn pObject.hasOwnProperty(pAddress);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = tmpAddressPartBeginning;\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpAddressPartBeginning.length+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\n\t\t\t// Check if there is a function somewhere in the address... parenthesis start should only be in a function\n\t\t\tlet tmpFunctionStartIndex = tmpSubObjectName.indexOf('(');\n\n\t\t\t// NOTE THAT FUNCTIONS MUST RESOLVE FIRST\n\t\t\t// Functions look like this\n\t\t\t// \t\tMyFunction()\n\t\t\t// \t\tMyFunction(Some.Address)\n\t\t\t// \t\tMyFunction(Some.Address,Some.Other.Address)\n\t\t\t// \t\tMyFunction(Some.Address,Some.Other.Address,Some.Third.Address)\n\t\t\t//\n\t\t\t// This could be enhanced to allow purely numeric and string values to be passed to the function.  For now,\n\t\t\t// To heck with that.  This is a simple function call.\n\t\t\t//\n\t\t\t// The requirements to detect a function are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpFunctionStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (_MockFable.DataFormat.stringCountEnclosures(tmpSubObjectName) > 0))\n\t\t\t{\n\t\t\t\tlet tmpFunctionAddress = tmpSubObjectName.substring(0, tmpFunctionStartIndex).trim();\n\t\t\t\t//tmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\n\t\t\t\tif (!typeof(pObject[tmpFunctionAddress]) == 'function')\n\t\t\t\t{\n\t\t\t\t\t// The address suggests it is a function, but it is not.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Now see if the function has arguments.\n\t\t\t\t// Implementation notes: * ARGUMENTS MUST SHARE THE SAME ROOT OBJECT CONTEXT *\n\t\t\t\tlet tmpFunctionArguments = _MockFable.DataFormat.stringGetSegments(_MockFable.DataFormat.stringGetEnclosureValueByIndex(tmpSubObjectName.substring(tmpFunctionAddress.length), 0), ',');\n\t\t\t\tif ((tmpFunctionArguments.length == 0) || (tmpFunctionArguments[0] == ''))\n\t\t\t\t{\n\t\t\t\t\t// No arguments... just call the function (bound to the scope of the object it is contained withing)\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpFunctionAddress].apply(pObject), tmpNewAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpArgumentValues = [];\n\n\t\t\t\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t\t\t\t// Now get the value for each argument\n\t\t\t\t\tfor (let i = 0; i < tmpFunctionArguments.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Resolve the values for each subsequent entry\n\t\t\t\t\t\t// NOTE: This is where the resolves get really tricky.  Recursion within recursion.  Programming gom jabbar, yo.\n\t\t\t\t\t\ttmpArgumentValues.push(this.getObjectValueClass.getValueAtAddress(tmpRootObject, tmpFunctionArguments[i]));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpFunctionAddress].apply(pObject, tmpArgumentValues), tmpNewAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// Because this is an impossible address, the property doesn't exist\n\t\t\t\t\t// TODO: Should we throw an error in this condition?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress, tmpRootObject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress, tmpRootObject);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverCheckAddressExists;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - DeleteValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverDeleteValue\n*/\nclass ManyfestObjectAddressResolverDeleteValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// TODO: Dry me\n\tcheckRecordFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Count from the end to the beginning so splice doesn't %&%#$ up the array\n\t\t\t\tfor (let i = tmpInputArray.length - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkRecordFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Delete elements end to beginning\n\t\t\t\t\t\ttmpInputArray.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tdelete pObject[tmpObjectPropertyName];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tdelete pObject[pAddress];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkRecordFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverDeleteValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`);\n\nlet _MockFable = { DataFormat: require('./Manyfest-ObjectAddress-Parser.js') };\n\n/**\n* Object Address Resolver - GetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverGetValue\n*/\nclass ManyfestObjectAddressResolverGetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckRecordFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress, pParentAddress, pRootObject)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// Set the root object to the passed-in object if it isn't set yet.  This is expected to be the root object.\n\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t// DONE: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpAddressPartBeginning = _MockFable.DataFormat.stringGetFirstSegment(pAddress);\n\n\t\t// Adding simple back-navigation in objects\n\t\tif (tmpAddressPartBeginning == '')\n\t\t{\n\t\t\t// Given an address of \"Bundle.Contract.IDContract...Project.IDProject\" the ... would be interpreted as two back-navigations from IDContract.\n\t\t\t// When the address is passed in, though, the first . is already eliminated.  So we can count the dots.\n\t\t\tlet tmpParentAddressParts = _MockFable.DataFormat.stringGetSegments(tmpParentAddress);\n\n\t\t\tlet tmpBackNavigationCount = 0;\n\n\t\t\t// Count the number of dots\n\t\t\tfor (let i = 0; i < pAddress.length; i++)\n\t\t\t{\n\t\t\t\tif (pAddress.charAt(i) != '.')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttmpBackNavigationCount++;\n\t\t\t}\n\n\t\t\tlet tmpParentAddressLength = tmpParentAddressParts.length - tmpBackNavigationCount;\n\n\t\t\tif (tmpParentAddressLength < 0)\n\t\t\t{\n\t\t\t\t// We are trying to back navigate more than we can.\n\t\t\t\t// TODO: Should this be undefined or should we bank out at the bottom and try to go forward?\n\t\t\t\t// This seems safest for now.\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are trying to back navigate to a parent object.\n\t\t\t\t// Recurse with the back-propagated parent address, and, the new address without the back-navigation dots.\n\t\t\t\tlet tmpRecurseAddress = pAddress.slice(tmpBackNavigationCount);\n\t\t\t\tif (tmpParentAddressLength > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpRecurseAddress = `${tmpParentAddressParts.slice(0, tmpParentAddressLength).join('.')}.${tmpRecurseAddress}`;\n\t\t\t\t}\n\t\t\t\tthis.logInfo(`Back-navigation detected.  Recursing back to address [${tmpRecurseAddress}]`);\n\t\t\t\treturn this.getValueAtAddress(tmpRootObject, tmpRecurseAddress);\n\t\t\t}\n\t\t}\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpAddressPartBeginning.length == pAddress.length)\n\t\t{\n\t\t\t// TODO: Optimize this by having these calls only happen when the previous fails.\n\t\t\t// TODO: Alternatively look for all markers in one pass?\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\n\t\t\t// Check if there is a function somewhere in the address... parenthesis start should only be in a function\n\t\t\tlet tmpFunctionStartIndex = pAddress.indexOf('(');\n\n\t\t\t// NOTE THAT FUNCTIONS MUST RESOLVE FIRST\n\t\t\t// Functions look like this\n\t\t\t// \t\tMyFunction()\n\t\t\t// \t\tMyFunction(Some.Address)\n\t\t\t// \t\tMyFunction(Some.Address,Some.Other.Address)\n\t\t\t// \t\tMyFunction(Some.Address,Some.Other.Address,Some.Third.Address)\n\t\t\t//\n\t\t\t// This could be enhanced to allow purely numeric and string values to be passed to the function.  For now,\n\t\t\t// To heck with that.  This is a simple function call.\n\t\t\t//\n\t\t\t// The requirements to detect a function are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpFunctionStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (_MockFable.DataFormat.stringCountEnclosures(pAddress) > 0))\n\t\t\t{\n\t\t\t\tlet tmpFunctionAddress = pAddress.substring(0, tmpFunctionStartIndex).trim();\n\n\t\t\t\tif (!typeof(pObject[tmpFunctionAddress]) == 'function')\n\t\t\t\t{\n\t\t\t\t\t// The address suggests it is a function, but it is not.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Now see if the function has arguments.\n\t\t\t\t// Implementation notes: * ARGUMENTS MUST SHARE THE SAME ROOT OBJECT CONTEXT *\n\t\t\t\tlet tmpFunctionArguments = _MockFable.DataFormat.stringGetSegments(_MockFable.DataFormat.stringGetEnclosureValueByIndex(pAddress.substring(tmpFunctionAddress.length), 0), ',');\n\t\t\t\tif ((tmpFunctionArguments.length == 0) || (tmpFunctionArguments[0] == ''))\n\t\t\t\t{\n\t\t\t\t\t// No arguments... just call the function (bound to the scope of the object it is contained withing)\n\t\t\t\t\treturn pObject[tmpFunctionAddress].apply(pObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpArgumentValues = [];\n\n\t\t\t\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t\t\t\t// Now get the value for each argument\n\t\t\t\t\tfor (let i = 0; i < tmpFunctionArguments.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(tmpFunctionArguments[i][0] == \"'\" && tmpFunctionArguments[i][tmpFunctionArguments[i].length - 1] == \"'\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpArgumentValues.push(tmpFunctionArguments[i].substring(1, tmpFunctionArguments[i].length - 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(tmpFunctionArguments[i][0] == '\"' && tmpFunctionArguments[i][tmpFunctionArguments[i].length - 1] == '\"')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpArgumentValues.push(tmpFunctionArguments[i].substring(1, tmpFunctionArguments[i].length - 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(tmpFunctionArguments[i][0] == \"`\" && tmpFunctionArguments[i][tmpFunctionArguments[i].length - 1] == \"`\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpArgumentValues.push(tmpFunctionArguments[i].substring(1, tmpFunctionArguments[i].length - 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpArgumentValues.push(this.getValueAtAddress(tmpRootObject, tmpFunctionArguments[i]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn pObject[tmpFunctionAddress].apply(pObject, tmpArgumentValues);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\tlet tmpOutputArray = [];\n\t\t\t\tfor (let i = 0; i < tmpInputArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkRecordFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOutputArray.push(tmpInputArray[i]);\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpOutputArray;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn pObject[tmpObjectPropertyName];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tif (typeof(pObject[pAddress]) != null)\n\t\t\t\t{\n\t\t\t\t\treturn pObject[pAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//let tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\t//let tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\t\t\tlet tmpSubObjectName = tmpAddressPartBeginning;\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpAddressPartBeginning.length+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\n\t\t\t// Check if there is a function somewhere in the address... parenthesis start should only be in a function\n\t\t\tlet tmpFunctionStartIndex = tmpSubObjectName.indexOf('(');\n\n\t\t\t// NOTE THAT FUNCTIONS MUST RESOLVE FIRST\n\t\t\t// Functions look like this\n\t\t\t// \t\tMyFunction()\n\t\t\t// \t\tMyFunction(Some.Address)\n\t\t\t// \t\tMyFunction(Some.Address,Some.Other.Address)\n\t\t\t// \t\tMyFunction(Some.Address,Some.Other.Address,Some.Third.Address)\n\t\t\t//\n\t\t\t// This could be enhanced to allow purely numeric and string values to be passed to the function.  For now,\n\t\t\t// To heck with that.  This is a simple function call.\n\t\t\t//\n\t\t\t// The requirements to detect a function are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpFunctionStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (_MockFable.DataFormat.stringCountEnclosures(tmpSubObjectName) > 0))\n\t\t\t{\n\t\t\t\tlet tmpFunctionAddress = tmpSubObjectName.substring(0, tmpFunctionStartIndex).trim();\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\n\t\t\t\tif (!typeof(pObject[tmpFunctionAddress]) == 'function')\n\t\t\t\t{\n\t\t\t\t\t// The address suggests it is a function, but it is not.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Now see if the function has arguments.\n\t\t\t\t// Implementation notes: * ARGUMENTS MUST SHARE THE SAME ROOT OBJECT CONTEXT *\n\t\t\t\tlet tmpFunctionArguments = _MockFable.DataFormat.stringGetSegments(_MockFable.DataFormat.stringGetEnclosureValueByIndex(tmpSubObjectName.substring(tmpFunctionAddress.length), 0), ',');\n\t\t\t\tif ((tmpFunctionArguments.length == 0) || (tmpFunctionArguments[0] == ''))\n\t\t\t\t{\n\t\t\t\t\t// No arguments... just call the function (bound to the scope of the object it is contained withing)\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpFunctionAddress].apply(pObject), tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpArgumentValues = [];\n\n\t\t\t\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t\t\t\t// Now get the value for each argument\n\t\t\t\t\tfor (let i = 0; i < tmpFunctionArguments.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Resolve the values for each subsequent entry\n\t\t\t\t\t\ttmpArgumentValues.push(this.getValueAtAddress(tmpRootObject, tmpFunctionArguments[i]));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpFunctionAddress].apply(pObject, tmpArgumentValues), tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkRecordFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverGetValue;","// TODO: This is an inelegant solution to delay the rewrite of Manyfest.\n\n// Fable 3.0 has a service for data formatting that deals well with nested enclosures.\n\n// The Manyfest library predates fable 3.0 and the services structure of it, so the functions\n// are more or less pure javascript and as functional as they can be made to be.\n\n// Until we shift Manyfest to be a fable service, these three functions were pulled out of\n// fable to aid in parsing functions with nested enclosures.\n\nmodule.exports = {\n\t/**\n\t * Count the number of segments in a string, respecting enclosures\n\t * \n\t * @param {string} pString \n\t * @param {string} pSeparator \n\t * @param {object} pEnclosureStartSymbolMap \n\t * @param {object} pEnclosureEndSymbolMap \n\t * @returns the count of segments in the string as a number\n\t */\n\tstringCountSegments: (pString, pSeparator, pEnclosureStartSymbolMap, pEnclosureEndSymbolMap) =>\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\n\t\tlet tmpSeparator = (typeof(pSeparator) == 'string') ? pSeparator : '.';\n\n\t\tlet tmpEnclosureStartSymbolMap = (typeof(pEnclosureStartSymbolMap) == 'object') ? pEnclosureStart : { '{': 0, '[': 1, '(': 2 };\n\t\tlet tmpEnclosureEndSymbolMap = (typeof(pEnclosureEndSymbolMap) == 'object') ? pEnclosureEnd : { '}': 0, ']': 1, ')': 2 };\n\n\t\tif (pString.length < 1)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet tmpSegmentCount = 1;\n\t\tlet tmpEnclosureStack = [];\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// IF This is the start of a segment\n\t\t\tif ((tmpString[i] == tmpSeparator)\n\t\t\t\t// AND we are not in a nested portion of the string\n\t\t\t\t&& (tmpEnclosureStack.length == 0))\n\t\t\t{\n\t\t\t\t// Increment the segment count\n\t\t\t\ttmpSegmentCount++;\n\t\t\t}\n\t\t\t// IF This is the start of an enclosure\n\t\t\telse if (tmpEnclosureStartSymbolMap.hasOwnProperty(tmpString[i]))\n\t\t\t{\n\t\t\t\t// Add it to the stack!\n\t\t\t\ttmpEnclosureStack.push(tmpEnclosureStartSymbolMap[tmpString[i]]);\n\t\t\t}\n\t\t\t// IF This is the end of an enclosure\n\t\t\telse if (tmpEnclosureEndSymbolMap.hasOwnProperty(tmpString[i])\n\t\t\t\t// AND it matches the current nest level symbol\n\t\t\t\t&& tmpEnclosureEndSymbolMap[tmpString[i]] == tmpEnclosureStack[tmpEnclosureStack.length - 1])\n\t\t\t{\n\t\t\t\t// Pop it off the stack!\n\t\t\t\ttmpEnclosureStack.pop();\n\t\t\t}\n\t\t}\n\n\t\treturn tmpSegmentCount;\n\t},\n\n\t/**\n\t * Get the first segment in a string, respecting enclosures\n\t * \n\t * @param {string} pString \n\t * @param {string} pSeparator \n\t * @param {object} pEnclosureStartSymbolMap \n\t * @param {object} pEnclosureEndSymbolMap \n\t * @returns the first segment in the string as a string\n\t */\n\tstringGetFirstSegment: (pString, pSeparator, pEnclosureStartSymbolMap, pEnclosureEndSymbolMap) =>\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\n\t\tlet tmpSeparator = (typeof(pSeparator) == 'string') ? pSeparator : '.';\n\n\t\tlet tmpEnclosureStartSymbolMap = (typeof(pEnclosureStartSymbolMap) == 'object') ? pEnclosureStart : { '{': 0, '[': 1, '(': 2 };\n\t\tlet tmpEnclosureEndSymbolMap = (typeof(pEnclosureEndSymbolMap) == 'object') ? pEnclosureEnd : { '}': 0, ']': 1, ')': 2 };\n\n\t\tif (pString.length < 1)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet tmpEnclosureStack = [];\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// IF This is the start of a segment\n\t\t\tif ((tmpString[i] == tmpSeparator)\n\t\t\t\t// AND we are not in a nested portion of the string\n\t\t\t\t&& (tmpEnclosureStack.length == 0))\n\t\t\t{\n\t\t\t\t// Return the segment\n\t\t\t\treturn tmpString.substring(0, i);\n\t\t\t}\n\t\t\t// IF This is the start of an enclosure\n\t\t\telse if (tmpEnclosureStartSymbolMap.hasOwnProperty(tmpString[i]))\n\t\t\t{\n\t\t\t\t// Add it to the stack!\n\t\t\t\ttmpEnclosureStack.push(tmpEnclosureStartSymbolMap[tmpString[i]]);\n\t\t\t}\n\t\t\t// IF This is the end of an enclosure\n\t\t\telse if (tmpEnclosureEndSymbolMap.hasOwnProperty(tmpString[i])\n\t\t\t\t// AND it matches the current nest level symbol\n\t\t\t\t&& tmpEnclosureEndSymbolMap[tmpString[i]] == tmpEnclosureStack[tmpEnclosureStack.length - 1])\n\t\t\t{\n\t\t\t\t// Pop it off the stack!\n\t\t\t\ttmpEnclosureStack.pop();\n\t\t\t}\n\t\t}\n\n\t\treturn tmpString;\n\t},\n\n\t/**\n\t * Get all segments in a string, respecting enclosures\n\t * \n\t * @param {string} pString \n\t * @param {string} pSeparator \n\t * @param {object} pEnclosureStartSymbolMap \n\t * @param {object} pEnclosureEndSymbolMap \n\t * @returns the first segment in the string as a string\n\t */\n\tstringGetSegments: (pString, pSeparator, pEnclosureStartSymbolMap, pEnclosureEndSymbolMap)=>\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\n\t\tlet tmpSeparator = (typeof(pSeparator) == 'string') ? pSeparator : '.';\n\n\t\tlet tmpEnclosureStartSymbolMap = (typeof(pEnclosureStartSymbolMap) == 'object') ? pEnclosureStart : { '{': 0, '[': 1, '(': 2 };\n\t\tlet tmpEnclosureEndSymbolMap = (typeof(pEnclosureEndSymbolMap) == 'object') ? pEnclosureEnd : { '}': 0, ']': 1, ')': 2 };\n\n\t\tlet tmpCurrentSegmentStart = 0;\n\t\tlet tmpSegmentList = [];\n\n\t\tif (pString.length < 1)\n\t\t{\n\t\t\treturn tmpSegmentList;\n\t\t}\n\n\t\tlet tmpEnclosureStack = [];\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// IF This is the start of a segment\n\t\t\tif ((tmpString[i] == tmpSeparator)\n\t\t\t\t// AND we are not in a nested portion of the string\n\t\t\t\t&& (tmpEnclosureStack.length == 0))\n\t\t\t{\n\t\t\t\t// Return the segment\n\t\t\t\ttmpSegmentList.push(tmpString.substring(tmpCurrentSegmentStart, i));\n\t\t\t\ttmpCurrentSegmentStart = i+1;\n\t\t\t}\n\t\t\t// IF This is the start of an enclosure\n\t\t\telse if (tmpEnclosureStartSymbolMap.hasOwnProperty(tmpString[i]))\n\t\t\t{\n\t\t\t\t// Add it to the stack!\n\t\t\t\ttmpEnclosureStack.push(tmpEnclosureStartSymbolMap[tmpString[i]]);\n\t\t\t}\n\t\t\t// IF This is the end of an enclosure\n\t\t\telse if (tmpEnclosureEndSymbolMap.hasOwnProperty(tmpString[i])\n\t\t\t\t// AND it matches the current nest level symbol\n\t\t\t\t&& tmpEnclosureEndSymbolMap[tmpString[i]] == tmpEnclosureStack[tmpEnclosureStack.length - 1])\n\t\t\t{\n\t\t\t\t// Pop it off the stack!\n\t\t\t\ttmpEnclosureStack.pop();\n\t\t\t}\n\t\t}\n\n\t\tif (tmpCurrentSegmentStart < tmpString.length)\n\t\t{\n\t\t\ttmpSegmentList.push(tmpString.substring(tmpCurrentSegmentStart));\n\t\t}\n\n\t\treturn tmpSegmentList;\n\t},\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures: (pString, pEnclosureStart, pEnclosureEnd) =>\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\tif (tmpEnclosureDepth == 0)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t}\n\t\t\t\ttmpEnclosureDepth++;\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpEnclosureCount;\n\t},\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex: (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd) =>\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosedValueStartIndex = 0;\n\t\tlet tmpEnclosedValueEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This is the end of an enclosure\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t\t{\n\t\t\t// Return an empty string if the enclosure is not found\n\t\t\treturn '';\n\t\t}\n\n\t\tif ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t\t}\n\t}\n}","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - SetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressSetValue\n*/\nclass ManyfestObjectAddressSetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyReference] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the time in recursion to set the value in the object\n\t\t\t\tpObject[pAddress] = pValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressSetValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Generation\n*\n* Automagically generate addresses and properties based on a passed-in object,\n* to be used for easy creation of schemas.  Meant to simplify the lives of\n* developers wanting to create schemas without typing a bunch of stuff.\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressGeneration\n*/\nclass ManyfestObjectAddressGeneration\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// generateAddressses\n\t//\n\t// This flattens an object into a set of key:value pairs for *EVERY SINGLE\n\t// POSSIBLE ADDRESS* in the object.  It can get ... really insane really\n\t// quickly.  This is not meant to be used directly to generate schemas, but\n\t// instead as a starting point for scripts or UIs.\n\t//\n\t// This will return a mega set of key:value pairs with all possible schema\n\t// permutations and default values (when not an object) and everything else.\n\tgenerateAddressses (pObject, pBaseAddress, pSchema)\n\t{\n\t\tlet tmpBaseAddress = (typeof(pBaseAddress) == 'string') ? pBaseAddress : '';\n\t\tlet tmpSchema = (typeof(pSchema) == 'object') ? pSchema : {};\n\n\t\tlet tmpObjectType = typeof(pObject);\n\n\t\tlet tmpSchemaObjectEntry = (\n\t\t\t{\n\t\t\t\tAddress: tmpBaseAddress,\n\t\t\t\tHash: tmpBaseAddress,\n\t\t\t\tName: tmpBaseAddress,\n\t\t\t\t// This is so scripts and UI controls can force a developer to opt-in.\n\t\t\t\tInSchema: false\n\t\t\t}\n\t\t)\n\n\t\tif ((tmpObjectType == 'object') && (pObject == null))\n\t\t{\n\t\t\ttmpObjectType = 'null';\n\t\t}\n\n\t\tswitch(tmpObjectType)\n\t\t{\n\t\t\tcase 'string':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'String';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'bigint':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Number';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\tcase 'null':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Any';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif (Array.isArray(pObject))\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Array';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < pObject.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[i], `${tmpBaseAddress}[${i}]`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Object';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t\ttmpBaseAddress += '.';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectProperties = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectProperties.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[tmpObjectProperties[i]], `${tmpBaseAddress}${tmpObjectProperties[i]}`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'symbol':\n\t\t\tcase 'function':\n\t\t\t\t// Symbols and functions neither recurse nor get added to the schema\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tmpSchema;\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressGeneration;","// Given a string, parse out any conditional expressions and set whether or not to keep the record.\n//\n// For instance:\n// \t\t'files[]<<~?format,==,Thumbnail?~>>'\n//      'files[]<<~?format,==,Metadata?~>>'\n//      'files[]<<~?size,>,4000?~>>'\n//\n// The wrapping parts are the <<~? and ?~>> megabrackets.\n//\n// The function does not need to alter the string -- just check the conditionals within.\n\n// TODO: Consider making this an es6 class\n\n// Let's use indexOf since it is apparently the fastest.\nconst _ConditionalStanzaStart = '<<~?';\nconst _ConditionalStanzaStartLength = _ConditionalStanzaStart.length;\nconst _ConditionalStanzaEnd = '?~>>';\nconst _ConditionalStanzaEndLength = _ConditionalStanzaEnd.length;\n\n// Ugh dependency injection.  Can't wait to make these all fable services.\n//let libObjectAddressCheckAddressExists = new (require('./Manyfest-ObjectAddress-CheckAddressExists.js'))();\n\n// Test the condition of a value in a record\nconst testCondition = (pManyfest, pRecord, pSearchAddress, pSearchComparator, pValue) =>\n{\n\tswitch(pSearchComparator)\n\t{\n\t\tcase 'TRUE':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === true);\n\t\t\tbreak;\n\t\tcase 'FALSE':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === false);\n\t\t\tbreak;\n\t\tcase 'LNGT':\n\t\tcase 'LENGTH_GREATER_THAN':\n\t\t\tswitch(typeof(pManyfest.getValueAtAddress(pRecord, pSearchAddress)))\n\t\t\t{\n\t\t\t\tcase 'string':\n\t\t\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress).length > pValue);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'object':\n\t\t\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress).length > pValue);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'LNLT':\n\t\tcase 'LENGTH_LESS_THAN':\n\t\t\tswitch(typeof(pManyfest.getValueAtAddress(pRecord, pSearchAddress)))\n\t\t\t{\n\t\t\t\tcase 'string':\n\t\t\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress).length < pValue);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'object':\n\t\t\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress).length < pValue);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\t// TODO: Welcome to dependency hell.  This fixes itself when we move to fable services.\n\t\t// case 'EX':\n\t\t// case 'EXISTS':\n\t\t// \treturn libObjectAddressCheckAddressExists.checkAddressExists(pRecord, pSearchAddress);\n\t\t// \tbreak;\n\t\t// case 'DNEX':\n\t\t// case 'DOES_NOT_EXIST':\n\t\t// \treturn !libObjectAddressCheckAddressExists.checkAddressExists(pRecord, pSearchAddress);\n\t\t// \tbreak;\n\t\tcase '!=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) != pValue);\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) < pValue);\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) > pValue);\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) <= pValue);\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) >= pValue);\n\t\t\tbreak;\n\t\tcase '===':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === pValue);\n\t\t\tbreak;\n\t\tcase '==':\n\t\tdefault:\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) == pValue);\n\t\t\tbreak;\n\t}\n};\n\nconst parseConditionals = (pManyfest, pAddress, pRecord) =>\n{\n\tlet tmpKeepRecord = true;\n\n\t/*\n\t\tAlgorithm is simple:\n\n\t\t1.  Enuerate start points\n\t\t2.  Find stop points within each start point\n\t\t3. Check the conditional\n\t*/\n\tlet tmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart);\n\n\twhile (tmpStartIndex != -1)\n\t{\n\t\tlet tmpStopIndex = pAddress.indexOf(_ConditionalStanzaEnd, tmpStartIndex+_ConditionalStanzaStartLength);\n\n\t\tif (tmpStopIndex != -1)\n\t\t{\n\t\t\tlet tmpMagicComparisonPatternSet = pAddress.substring(tmpStartIndex+_ConditionalStanzaStartLength, tmpStopIndex).split(',');\n\n\t\t\t// The address to search for\n\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\n\t\t\t// The copmparison expression (EXISTS as default)\n\t\t\tlet tmpSearchComparator = 'EXISTS';\n\t\t\tif (tmpMagicComparisonPatternSet.length > 1)\n\t\t\t{\n\t\t\t\ttmpSearchComparator = tmpMagicComparisonPatternSet[1];\t\t\t\t\n\t\t\t}\n\n\t\t\t// The value to search for\n\t\t\tlet tmpSearchValue = false;\n\t\t\tif (tmpMagicComparisonPatternSet.length > 2)\n\t\t\t{\n\t\t\t\ttmpSearchValue = tmpMagicComparisonPatternSet[2];\n\t\t\t}\n\n\t\t\t// Process the piece\n\t\t\ttmpKeepRecord = tmpKeepRecord && testCondition(pManyfest, pRecord, tmpSearchAddress, tmpSearchComparator, tmpSearchValue);\n\t\t\ttmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart, tmpStopIndex+_ConditionalStanzaEndLength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpStartIndex = -1;\n\t\t}\n\t\t\n\t}\n\n\treturn tmpKeepRecord;\n}\n\nmodule.exports = parseConditionals;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Schema Manipulation Functions\n*\n* @class ManyfestSchemaManipulation\n*/\nclass ManyfestSchemaManipulation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n    // This translates the default address mappings to something different.\n    //\n    // For instance you can pass in manyfest schema descriptor object:\n    // \t{\n\t//\t  \"Address.Of.a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t//\t  \"Address.Of.b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t//  }\n    //\n    //\n    // And then an address mapping (basically a Hash->Address map)\n    //  {\n    //    \"a\": \"New.Address.Of.a\",\n    //    \"b\": \"New.Address.Of.b\"\n    //  }\n    //\n    // NOTE: This mutates the schema object permanently, altering the base hash.\n    //       If there is a collision with an existing address, it can lead to overwrites.\n    // TODO: Discuss what should happen on collisions.\n\tresolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\tif (typeof(pManyfestSchemaDescriptors) != 'object')\n\t\t{\n\t\t\tthis.logError(`Attempted to resolve address mapping but the descriptor was not an object.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof(pAddressMapping) != 'object')\n\t\t{\n\t\t\t// No mappings were passed in\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the arrays of both the schema definition and the hash mapping\n\t\tlet tmpManyfestAddresses = Object.keys(pManyfestSchemaDescriptors);\n\t\tlet tmpHashMapping = {};\n\t\ttmpManyfestAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tif (pManyfestSchemaDescriptors[pAddress].hasOwnProperty('Hash'))\n\t\t\t\t{\n\t\t\t\t\ttmpHashMapping[pManyfestSchemaDescriptors[pAddress].Hash] = pAddress;\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet tmpAddressMappingSet = Object.keys(pAddressMapping);\n\n\t\ttmpAddressMappingSet.forEach(\n\t\t\t(pInputAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpNewDescriptorAddress = pAddressMapping[pInputAddress];\n\t\t\t\tlet tmpOldDescriptorAddress = false;\n\t\t\t\tlet tmpDescriptor = false;\n\n\t\t\t\t// See if there is a matching descriptor either by Address directly or Hash\n\t\t\t\tif (pManyfestSchemaDescriptors.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = pInputAddress;\n\t\t\t\t}\n\t\t\t\telse if (tmpHashMapping.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = tmpHashMapping[pInputAddress];\n\t\t\t\t}\n\n\t\t\t\t// If there was a matching descriptor in the manifest, store it in the temporary descriptor\n\t\t\t\tif (tmpOldDescriptorAddress)\n\t\t\t\t{\n\t\t\t\t\ttmpDescriptor = pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t\tdelete pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Create a new descriptor!  Map it to the input address.\n\t\t\t\t\ttmpDescriptor = { Hash:pInputAddress };\n\t\t\t\t}\n\n\t\t\t\t// Now re-add the descriptor to the manyfest schema\n\t\t\t\tpManyfestSchemaDescriptors[tmpNewDescriptorAddress] = tmpDescriptor;\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tsafeResolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\t// This returns the descriptors as a new object, safely remapping without mutating the original schema Descriptors\n\t\tlet tmpManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptors));\n\t\tthis.resolveAddressMappings(tmpManyfestSchemaDescriptors, pAddressMapping);\n\t\treturn tmpManyfestSchemaDescriptors;\n\t}\n\n\tmergeAddressMappings(pManyfestSchemaDescriptorsDestination, pManyfestSchemaDescriptorsSource)\n\t{\n\t\tif ((typeof(pManyfestSchemaDescriptorsSource) != 'object') || (typeof(pManyfestSchemaDescriptorsDestination) != 'object'))\n\t\t{\n\t\t\tthis.logError(`Attempted to merge two schema descriptors but both were not objects.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpSource = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsSource));\n\t\tlet tmpNewManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsDestination));\n\n\t\t// The first passed-in set of descriptors takes precedence.\n\t\tlet tmpDescriptorAddresses = Object.keys(tmpSource);\n\n\t\ttmpDescriptorAddresses.forEach(\n\t\t\t(pDescriptorAddress) =>\n\t\t\t{\n\t\t\t\tif (!tmpNewManyfestSchemaDescriptors.hasOwnProperty(pDescriptorAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpNewManyfestSchemaDescriptors[pDescriptorAddress] = tmpSource[pDescriptorAddress];\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpNewManyfestSchemaDescriptors;\n\t}\n}\n\nmodule.exports = ManyfestSchemaManipulation;","/**\n* @author <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\nlet libHashTranslation = require('./Manyfest-HashTranslation.js');\nlet libObjectAddressCheckAddressExists = require('./Manyfest-ObjectAddress-CheckAddressExists.js');\nlet libObjectAddressGetValue = require('./Manyfest-ObjectAddress-GetValue.js');\nlet libObjectAddressSetValue = require('./Manyfest-ObjectAddress-SetValue.js');\nlet libObjectAddressDeleteValue = require('./Manyfest-ObjectAddress-DeleteValue.js');\nlet libObjectAddressGeneration = require('./Manyfest-ObjectAddressGeneration.js');\nlet libSchemaManipulation = require('./Manyfest-SchemaManipulation.js');\n\nconst _DefaultConfiguration = { Scope:'DEFAULT', Descriptors: {} }\n\n/**\n* Manyfest object address-based descriptions and manipulations.\n*\n* @class Manyfest\n*/\nclass Manyfest extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'Manifest';\n\n\t\t// Wire in logging\n\t\tthis.logInfo = libSimpleLog;\n\t\tthis.logError = libSimpleLog;\n\n\t\t// Create an object address resolver and map in the functions\n\t\tthis.objectAddressCheckAddressExists = new libObjectAddressCheckAddressExists(this.logInfo, this.logError);\n\t\tthis.objectAddressGetValue = new libObjectAddressGetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressSetValue = new libObjectAddressSetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressDeleteValue = new libObjectAddressDeleteValue(this.logInfo, this.logError);\n\n\t\tif (!this.options.hasOwnProperty('defaultValues'))\n\t\t{\n\t\t\tthis.options.defaultValues = (\n\t\t\t\t{\n\t\t\t\t\t\"String\": \"\",\n\t\t\t\t\t\"Number\": 0,\n\t\t\t\t\t\"Float\": 0.0,\n\t\t\t\t\t\"Integer\": 0,\n\t\t\t\t\t\"Boolean\": false,\n\t\t\t\t\t\"Binary\": 0,\n\t\t\t\t\t\"DateTime\": 0,\n\t\t\t\t\t\"Array\": [],\n\t\t\t\t\t\"Object\": {},\n\t\t\t\t\t\"Null\": null\n\t\t\t\t});\n\t\t}\n\t\tif (!this.options.hasOwnProperty('strict'))\n\t\t{\n\t\t\tthis.options.strict = false;\n\t\t}\n\n\t\tthis.scope = undefined;\n\t\tthis.elementAddresses = undefined;\n\t\tthis.elementHashes = undefined;\n\t\tthis.elementDescriptors = undefined;\n\n\t\tthis.reset();\n\n\t\tif (typeof(this.options) === 'object')\n\t\t{\n\t\t\tthis.loadManifest(this.options);\n\t\t}\n\n\t\tthis.schemaManipulations = new libSchemaManipulation(this.logInfo, this.logError);\n\t\tthis.objectAddressGeneration = new libObjectAddressGeneration(this.logInfo, this.logError);\n\n\t\tthis.hashTranslations = new libHashTranslation(this.logInfo, this.logError);\n\t}\n\n\t/*************************************************************************\n\t * Schema Manifest Loading, Reading, Manipulation and Serialization Functions\n\t */\n\n\t// Reset critical manifest properties\n\treset()\n\t{\n\t\tthis.scope = 'DEFAULT';\n\t\tthis.elementAddresses = [];\n\t\tthis.elementHashes = {};\n\t\tthis.elementDescriptors = {};\n\t}\n\n\tclone()\n\t{\n\t\t// Make a copy of the options in-place\n\t\tlet tmpNewOptions = JSON.parse(JSON.stringify(this.options));\n\n\t\tlet tmpNewManyfest = new Manyfest(this.getManifest(), this.logInfo, this.logError, tmpNewOptions);\n\n\t\t// Import the hash translations\n\t\ttmpNewManyfest.hashTranslations.addTranslation(this.hashTranslations.translationTable);\n\n\t\treturn tmpNewManyfest;\n\t}\n\n\t// Deserialize a Manifest from a string\n\tdeserialize(pManifestString)\n\t{\n\t\t// TODO: Add guards for bad manifest string\n\t\treturn this.loadManifest(JSON.parse(pManifestString));\n\t}\n\n\t// Load a manifest from an object\n\tloadManifest(pManifest)\n\t{\n\t\tif (typeof(pManifest) !== 'object')\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading manifest; expecting an object but parameter was type ${typeof(pManifest)}.`);\n\t\t}\n\n\t\tlet tmpManifest = (typeof(pManifest) == 'object') ? pManifest : {};\n\n\t\tlet tmpDescriptorKeys = Object.keys(_DefaultConfiguration);\n\n\t\tfor (let i = 0; i < tmpDescriptorKeys.length; i++)\n\t\t{\n\t\t\tif (!tmpManifest.hasOwnProperty(tmpDescriptorKeys[i]))\n\t\t\t{\n\t\t\t\ttmpManifest[tmpDescriptorKeys[i]] = JSON.parse(JSON.stringify(_DefaultConfiguration[tmpDescriptorKeys[i]]));\n\t\t\t}\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Scope'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Scope) === 'string')\n\t\t\t{\n\t\t\t\tthis.scope = tmpManifest.Scope;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest; expecting a string but property was type ${typeof(tmpManifest.Scope)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest object.  Property \"Scope\" does not exist in the root of the object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Descriptors'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Descriptors) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpDescriptionAddresses = Object.keys(tmpManifest.Descriptors);\n\t\t\t\tfor (let i = 0; i < tmpDescriptionAddresses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.addDescriptor(tmpDescriptionAddresses[i], tmpManifest.Descriptors[tmpDescriptionAddresses[i]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading description object from manifest object.  Expecting an object in 'Manifest.Descriptors' but the property was type ${typeof(tmpManifest.Descriptors)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object description from manifest object.  Property \"Descriptors\" does not exist in the root of the Manifest object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('HashTranslations'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.HashTranslations) === 'object')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < tmpManifest.HashTranslations.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// Each translation is \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Serialize the Manifest to a string\n\tserialize()\n\t{\n\t\treturn JSON.stringify(this.getManifest());\n\t}\n\n\tgetManifest()\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tScope: this.scope,\n\t\t\t\tDescriptors: JSON.parse(JSON.stringify(this.elementDescriptors)),\n\t\t\t\tHashTranslations: JSON.parse(JSON.stringify(this.hashTranslations.translationTable))\n\t\t\t});\n\t}\n\n\t// Add a descriptor to the manifest\n\taddDescriptor(pAddress, pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) === 'object')\n\t\t{\n\t\t\t// Add the Address into the Descriptor if it doesn't exist:\n\t\t\tif (!pDescriptor.hasOwnProperty('Address'))\n\t\t\t{\n\t\t\t\tpDescriptor.Address = pAddress;\n\t\t\t}\n\n\t\t\tif (!this.elementDescriptors.hasOwnProperty(pAddress))\n\t\t\t{\n\t\t\t\tthis.elementAddresses.push(pAddress);\n\t\t\t}\n\n\t\t\t// Add the element descriptor to the schema\n\t\t\tthis.elementDescriptors[pAddress] = pDescriptor;\n\n\t\t\t// Always add the address as a hash\n\t\t\tthis.elementHashes[pAddress] = pAddress;\n\n\t\t\tif (pDescriptor.hasOwnProperty('Hash'))\n\t\t\t{\n\t\t\t\t// TODO: Check if this is a good idea or not..\n\t\t\t\t//       Collisions are bound to happen with both representations of the address/hash in here and developers being able to create their own hashes.\n\t\t\t\tthis.elementHashes[pDescriptor.Hash] = pAddress;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpDescriptor.Hash = pAddress;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object descriptor for address '${pAddress}' from manifest object.  Expecting an object but property was type ${typeof(pDescriptor)}.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetDescriptorByHash(pHash)\n\t{\n\t\treturn this.getDescriptor(this.resolveHashAddress(pHash));\n\t}\n\n\tgetDescriptor(pAddress)\n\t{\n\t\treturn this.elementDescriptors[pAddress];\n\t}\n\n\t// execute an action function for each descriptor\n\teachDescriptor(fAction)\n\t{\n        let tmpDescriptorAddresses = Object.keys(this.elementDescriptors);\n        for (let i = 0; i < tmpDescriptorAddresses.length; i++)\n        {\n            fAction(this.elementDescriptors[tmpDescriptorAddresses[i]]);\n        }\n\n\t}\n\n\t/*************************************************************************\n\t * Beginning of Object Manipulation (read & write) Functions\n\t */\n\t// Check if an element exists by its hash\n\tcheckAddressExistsByHash (pObject, pHash)\n\t{\n\t\treturn this.checkAddressExists(pObject,this.resolveHashAddress(pHash));\n\t}\n\n\t// Check if an element exists at an address\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\treturn this.objectAddressCheckAddressExists.checkAddressExists(pObject, pAddress);\n\t}\n\n\t// Turn a hash into an address, factoring in the translation table.\n\tresolveHashAddress(pHash)\n\t{\n\t\tlet tmpAddress = undefined;\n\n\t\tlet tmpInElementHashTable = this.elementHashes.hasOwnProperty(pHash);\n\t\tlet tmpInTranslationTable = this.hashTranslations.translationTable.hasOwnProperty(pHash);\n\n\t\t// The most straightforward: the hash exists, no translations.\n\t\tif (tmpInElementHashTable && !tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[pHash];\n\t\t}\n\t\t// There is a translation from one hash to another, and, the elementHashes contains the pointer end\n\t\telse if (tmpInTranslationTable && this.elementHashes.hasOwnProperty(this.hashTranslations.translate(pHash)))\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[this.hashTranslations.translate(pHash)];\n\t\t}\n\t\t// Use the level of indirection only in the Translation Table\n\t\telse if (tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.hashTranslations.translate(pHash);\n\t\t}\n\t\t// Just treat the hash as an address.\n\t\t// TODO: Discuss this ... it is magic but controversial\n\t\telse\n\t\t{\n\t\t\ttmpAddress = pHash;\n\t\t}\n\n\t\treturn tmpAddress;\n\t}\n\n\t// Get the value of an element by its hash\n\tgetValueByHash (pObject, pHash)\n\t{\n\t\tlet tmpValue = this.getValueAtAddress(pObject, this.resolveHashAddress(pHash));\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptorByHash(pHash));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\tlet tmpValue = this.objectAddressGetValue.getValueAtAddress(pObject, pAddress);\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptor(pAddress));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Set the value of an element by its hash\n\tsetValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.setValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressSetValue.setValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Delete the value of an element by its hash\n\tdeleteValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.deleteValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressDeleteValue.deleteValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Validate the consistency of an object against the schema\n\tvalidate(pObject)\n\t{\n\t\tlet tmpValidationData =\n\t\t{\n\t\t\tError: null,\n\t\t\tErrors: [],\n\t\t\tMissingElements:[]\n\t\t};\n\n\t\tif (typeof(pObject) !== 'object')\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Expected passed in object to be type object but was passed in ${typeof(pObject)}`);\n\t\t}\n\n\t\tlet addValidationError = (pAddress, pErrorMessage) =>\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Element at address \"${pAddress}\" ${pErrorMessage}.`);\n\t\t};\n\n\t\t// Now enumerate through the values and check for anomalies based on the schema\n\t\tfor (let i = 0; i < this.elementAddresses.length; i++)\n\t\t{\n\t\t\tlet tmpDescriptor = this.getDescriptor(this.elementAddresses[i]);\n\t\t\tlet tmpValueExists = this.checkAddressExists(pObject, tmpDescriptor.Address);\n\t\t\tlet tmpValue = this.getValueAtAddress(pObject, tmpDescriptor.Address);\n\n\t\t\tif ((typeof(tmpValue) == 'undefined') || !tmpValueExists)\n\t\t\t{\n\t\t\t\t// This will technically mean that `Object.Some.Value = undefined` will end up showing as \"missing\"\n\t\t\t\t// TODO: Do we want to do a different message based on if the property exists but is undefined?\n\t\t\t\ttmpValidationData.MissingElements.push(tmpDescriptor.Address);\n\t\t\t\tif (tmpDescriptor.Required || this.options.strict)\n\t\t\t\t{\n\t\t\t\t\taddValidationError(tmpDescriptor.Address, 'is flagged REQUIRED but is not set in the object');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now see if there is a data type specified for this element\n\t\t\tif (tmpDescriptor.DataType)\n\t\t\t{\n\t\t\t\tlet tmpElementType = typeof(tmpValue);\n\t\t\t\tswitch(tmpDescriptor.DataType.toString().trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpValueString = tmpValue.toString();\n\t\t\t\t\t\t\tif (tmpValueString.indexOf('.') > -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// TODO: Is this an error?\n\t\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but has a decimal point in the number.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DateTime':\n\t\t\t\t\t\tlet tmpValueDate = new Date(tmpValue);\n\t\t\t\t\t\tif (tmpValueDate.toString() == 'Invalid Date')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is not parsable as a Date by Javascript`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Check if this is a string, in the default case\n\t\t\t\t\t\t// Note this is only when a DataType is specified and it is an unrecognized data type.\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} (which auto-converted to String because it was unrecognized) but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpValidationData;\n\t}\n\n\t// Returns a default value, or, the default value for the data type (which is overridable with configuration)\n\tgetDefaultValue(pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) != 'object')\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (pDescriptor.hasOwnProperty('Default'))\n\t\t{\n\t\t\treturn pDescriptor.Default;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Default to a null if it doesn't have a type specified.\n\t\t\t// This will ensure a placeholder is created but isn't misinterpreted.\n\t\t\tlet tmpDataType = (pDescriptor.hasOwnProperty('DataType')) ? pDescriptor.DataType : 'String';\n\t\t\tif (this.options.defaultValues.hasOwnProperty(tmpDataType))\n\t\t\t{\n\t\t\t\treturn this.options.defaultValues[tmpDataType];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// give up and return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enumerate through the schema and populate default values if they don't exist.\n\tpopulateDefaults(pObject, pOverwriteProperties)\n\t{\n\t\treturn this.populateObject(pObject, pOverwriteProperties,\n\t\t\t// This just sets up a simple filter to see if there is a default set.\n\t\t\t(pDescriptor) =>\n\t\t\t{\n\t\t\t\treturn pDescriptor.hasOwnProperty('Default');\n\t\t\t});\n\t}\n\n\t// Forcefully populate all values even if they don't have defaults.\n\t// Based on type, this can do unexpected things.\n\tpopulateObject(pObject, pOverwriteProperties, fFilter)\n\t{\n\t\t// Automatically create an object if one isn't passed in.\n\t\tlet tmpObject = (typeof(pObject) === 'object') ? pObject : {};\n\t\t// Default to *NOT OVERWRITING* properties\n\t\tlet tmpOverwriteProperties = (typeof(pOverwriteProperties) == 'undefined') ? false : pOverwriteProperties;\n\t\t// This is a filter function, which is passed the schema and allows complex filtering of population\n\t\t// The default filter function just returns true, populating everything.\n\t\tlet tmpFilterFunction = (typeof(fFilter) == 'function') ? fFilter : (pDescriptor) => { return true; };\n\n\t\tthis.elementAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpDescriptor = this.getDescriptor(pAddress);\n\t\t\t\t// Check the filter function to see if this is an address we want to set the value for.\n\t\t\t\tif (tmpFilterFunction(tmpDescriptor))\n\t\t\t\t{\n\t\t\t\t\t// If we are overwriting properties OR the property does not exist\n\t\t\t\t\tif (tmpOverwriteProperties || !this.checkAddressExists(tmpObject, pAddress))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setValueAtAddress(tmpObject, pAddress, this.getDefaultValue(tmpDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpObject;\n\t}\n};\n\nmodule.exports = Manyfest;","var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (obj === global) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","const libFableServiceBase = require('fable-serviceproviderbase')\n\nconst defaultPictSettings = (\n\t{\n\t\tName: 'DefaultPictApplication',\n\n\t\t// The main \"viewport\" is the view that is used to host our application\n\t\tMainViewportViewIdentifier: 'Default-View',\n\t\tMainViewportRenderableHash: false,\n\t\tMainViewportDestinationAddress: false,\n\t\tMainViewportDefaultDataAddress: false,\n\n\t\t// Whether or not we should automatically render the main viewport and other autorender views after we initialize the pict application\n\t\tAutoSolveAfterInitialize: true,\n\t\tAutoRenderMainViewportViewAfterInitialize: true,\n\t\tAutoRenderViewsAfterInitialize: false,\n\n\t\tManifests: {},\n\t\t// The prefix to prepend on all template destination hashes\n\t\tIdentifierAddressPrefix: 'PICT-'\n\t});\n\nclass PictApplication extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tthis.serviceType = 'PictApplication';\n\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict state\n\t\tthis.AppData = this.fable.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastMarshalFromViewsTimestamp = false;\n\t\tthis.lastMarshalToViewsTimestamp = false;\n\t\tthis.lastAutoRenderTimestamp = false;\n\n\t\t// Load all the manifests for the application\n\t\tlet tmpManifestKeys = Object.keys(this.options.Manifests);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++)\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.fable.instantiateServiceProvider('Manifest', this.options.Manifests[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Solve All Views                          */\n\t/* -------------------------------------------------------------------------- */\n\tonPreSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onPreSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonPreSolveAsync(fCallback)\n\t{\n\t\tthis.onPreSolve();\n\t\treturn fCallback();\n\t}\n\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing solve() function...`)\n\t\t}\n\n\t\t// Walk through any loaded providers and solve them as well.\n\t\tlet tmpLoadedProviders = Object.keys(this.pict.providers);\n\t\tlet tmpProvidersToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedProviders.length; i++)\n\t\t{\n\t\t\tlet tmpProvider = this.pict.providers[tmpLoadedProviders[i]];\n\t\t\tif (tmpProvider.options.AutoSolveWithApp)\n\t\t\t{\n\t\t\t\ttmpProvidersToSolve.push(tmpProvider);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpProvidersToSolve.sort((a, b) => { return a.options.AutoSolveOrdinal - b.options.AutoSolveOrdinal; });\n\t\tfor (let i = 0; i < tmpProvidersToSolve.length; i++)\n\t\t{\n\t\t\ttmpProvidersToSolve[i].solve(tmpProvidersToSolve[i]);\n\t\t}\n\n\t\tthis.onBeforeSolve();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpViewsToSolve[i].solve();\n\t\t}\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\n\n\t\t// Allow the callback to be passed in as the last parameter no matter what\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : false;\n\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\t\t// Walk through any loaded providers and solve them as well.\n\t\tlet tmpLoadedProviders = Object.keys(this.pict.providers);\n\t\tlet tmpProvidersToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedProviders.length; i++)\n\t\t{\n\t\t\tlet tmpProvider = this.pict.providers[tmpLoadedProviders[i]];\n\t\t\tif (tmpProvider.options.AutoSolveWithApp)\n\t\t\t{\n\t\t\t\ttmpProvidersToSolve.push(tmpProvider);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpProvidersToSolve.sort((a, b) => { return a.options.AutoSolveOrdinal - b.options.AutoSolveOrdinal; });\n\t\tfor (let i = 0; i < tmpProvidersToSolve.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpProvidersToSolve[i].solveAsync.bind(tmpProvidersToSolve[i]));\n\t\t}\n\n\t\t// Walk through any loaded views and solve them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoSolveWithApp)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoSolveOrdinal - b.options.AutoSolveOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToSolve[i].solveAsync.bind(tmpViewsToSolve[i]));\n\t\t}\n\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn tmpCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Initialize Application                   */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow APPLICATION [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialize:`);\n\t\t}\n\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\n\t\t\t// Walk through any loaded providers and initialize them as well.\n\t\t\tlet tmpLoadedProviders = Object.keys(this.pict.providers);\n\t\t\tlet tmpProvidersToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedProviders.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpProvider = this.pict.providers[tmpLoadedProviders[i]];\n\t\t\t\tif (tmpProvider.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpProvidersToInitialize.push(tmpProvider);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\t\ttmpProvidersToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpProvidersToInitialize.length; i++)\n\t\t\t{\n\t\t\t\ttmpProvidersToInitialize[i].initialize();\n\t\t\t}\n\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\ttmpViewsToInitialize[i].initialize();\n\t\t\t}\n\n\t\t\tthis.onAfterInitialize();\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Solve the template synchronously\n\t\t\t\tthis.solve();\n\t\t\t}\n\t\t\t// Now check and see if we should automatically render as well\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Render the template synchronously\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallback)\n\t{\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow APPLICATION [${this.UUID}]::[${this.Hash}] ${this.options.Name} initializeAsync:`);\n\t\t}\n\n\t\t// Allow the callback to be passed in as the last parameter no matter what\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : false;\n\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initializeAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initializeAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\n\t\t\t// Walk through any loaded providers and solve them as well.\n\t\t\tlet tmpLoadedProviders = Object.keys(this.pict.providers);\n\t\t\tlet tmpProvidersToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedProviders.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpProvider = this.pict.providers[tmpLoadedProviders[i]];\n\t\t\t\tif (tmpProvider.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpProvidersToInitialize.push(tmpProvider);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\t\ttmpProvidersToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpProvidersToInitialize.length; i++)\n\t\t\t{\n\t\t\t\ttmpAnticipate.anticipate(tmpProvidersToInitialize[i].initializeAsync.bind(tmpProvidersToInitialize[i]));\n\t\t\t}\n\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\t// TODO: Some optimization cleverness could be gained by grouping them into a parallelized async operation, by ordinal.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority\n\t\t\t// If they are all the default priority 0, it will end up being add order due to JSON Object Property Key order stuff\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = tmpViewsToInitialize[i];\n\t\t\t\ttmpAnticipate.anticipate(tmpView.initializeAsync.bind(tmpView));\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.solveAsync.bind(this));\n\t\t\t}\n\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.renderMainViewportAsync.bind(this));\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn tmpCallback();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn tmpCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data From All Views              */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalFromViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalFromViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalFromViews[i].marshalFromView();\n\t\t}\n\t\tthis.onMarshalFromViews();\n\t\tthis.onAfterMarshalFromViews();\n\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalFromViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t// Allow the callback to be passed in as the last parameter no matter what\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : false;\n\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewsAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewsAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalFromViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalFromViews[i].marshalFromViewAsync.bind(tmpViewsToMarshalFromViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn tmpCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data To All Views                */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalToViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalToViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalToViews[i].marshalToView();\n\t\t}\n\t\tthis.onMarshalToViews();\n\t\tthis.onAfterMarshalToViews();\n\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalToViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t// Allow the callback to be passed in as the last parameter no matter what\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : false;\n\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewsAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewsAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalToViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalToViews[i].marshalToViewAsync.bind(tmpViewsToMarshalToViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn tmpCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Render View                              */\n\t/* -------------------------------------------------------------------------- */\n\trender(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) !== 'string') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) !== 'string') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) !== 'string') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) !== 'string') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow APPLICATION [${this.UUID}]::[${this.Hash}] ${this.options.Name} VIEW Renderable[${tmpRenderableHash}] Destination[${tmpRenderDestinationAddress}] TemplateDataAddress[${tmpTemplateDataAddress}] render:`);\n\t\t}\n\n\t\t// Now get the view (by hash) from the loaded views\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not render from View ${tmpViewIdentifier} because it is not a valid view.`);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn tmpView.render(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress);\n\t}\n\trenderMainViewport()\n\t{\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow APPLICATION [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderMainViewport:`);\n\t\t}\n\n\t\treturn this.render();\n\t}\n\n\trenderAsync(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) !== 'string') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) !== 'string') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) !== 'string') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) !== 'string') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\t// Allow the callback to be passed in as the last parameter no matter what\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback :\n\t\t\t\t\t\t\t(typeof(pTemplateDataAddress) === 'function') ? pTemplateDataAddress :\n\t\t\t\t\t\t\t(typeof(pRenderDestinationAddress) === 'function') ? pRenderDestinationAddress :\n\t\t\t\t\t\t\t(typeof(pRenderableHash) === 'function') ? pRenderableHash :\n\t\t\t\t\t\t\t(typeof(pViewIdentifier) === 'function') ? pViewIdentifier :\n\t\t\t\t\t\t\tfalse;\n\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow APPLICATION [${this.UUID}]::[${this.Hash}] ${this.options.Name} VIEW Renderable[${tmpRenderableHash}] Destination[${tmpRenderDestinationAddress}] TemplateDataAddress[${tmpTemplateDataAddress}] renderAsync:`);\n\t\t}\n\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tlet tmpErrorMessage = `PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not asynchronously render from View ${tmpViewIdentifier} because it is not a valid view.`;\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.error(tmpErrorMessage);\n\t\t\t}\n\t\t\treturn tmpCallback(new Error(tmpErrorMessage));\n\t\t}\n\n\t\treturn tmpView.renderAsync(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress, tmpCallback);\n\t}\n\trenderMainViewportAsync(fCallback)\n\t{\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow APPLICATION [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderMainViewportAsync:`);\n\t\t}\n\n\t\treturn this.renderAsync(fCallback);\n\t}\n\n\trenderAutoViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 0)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} beginning renderAutoViews...`);\n\t\t}\n\t\t// Now walk through any loaded views and sort them by the AutoRender ordinal\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t// Sort the views by their priority\n\t\t// If they are all the default priority 0, it will end up being add order due to JSON Object Property Key order stuff\n\t\ttmpLoadedViews.sort((a, b) => \n\t\t{\n\t\t\treturn this.pict.views[a].options.AutoRenderOrdinal - this.pict.views[b].options.AutoRenderOrdinal;\n\t\t});\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoRender)\n\t\t\t{\n\t\t\t\ttmpView.render();\n\t\t\t}\n\t\t}\n\t\tif (this.pict.LogNoisiness > 0)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderAutoViewsAsync complete.`);\n\t\t}\n\t}\n\trenderAutoViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t// Allow the callback to be passed in as the last parameter no matter what\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback :\n\t\t\t\t\t\t\t(typeof(pTemplateDataAddress) === 'function') ? pTemplateDataAddress :\n\t\t\t\t\t\t\t(typeof(pRenderDestinationAddress) === 'function') ? pRenderDestinationAddress :\n\t\t\t\t\t\t\t(typeof(pRenderableHash) === 'function') ? pRenderableHash :\n\t\t\t\t\t\t\t(typeof(pViewIdentifier) === 'function') ? pViewIdentifier :\n\t\t\t\t\t\t\tfalse;\n\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderAutoViewsAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderAutoViewsAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\tif (this.pict.LogNoisiness > 0)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} beginning renderAutoViewsAsync...`);\n\t\t}\n\n\t\t// Now walk through any loaded views and sort them by the AutoRender ordinal\n\t\t// TODO: Some optimization cleverness could be gained by grouping them into a parallelized async operation, by ordinal.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t// Sort the views by their priority\n\t\t// If they are all the default priority 0, it will end up being add order due to JSON Object Property Key order stuff\n\t\ttmpLoadedViews.sort((a, b) => \n\t\t{\n\t\t\treturn this.pict.views[a].options.AutoRenderOrdinal - this.pict.views[b].options.AutoRenderOrdinal;\n\t\t});\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoRender)\n\t\t\t{\n\t\t\t\ttmpAnticipate.anticipate(tmpView.renderAsync.bind(tmpView));\n\t\t\t}\n\t\t}\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tthis.lastAutoRenderTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderAutoViewsAsync complete.`);\n\t\t\t\t}\n\t\t\t\treturn tmpCallback(pError);\n\t\t\t});\n\t}\n}\n\nmodule.exports = PictApplication;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst defaultPictProviderSettings = (\n\t{\n\t\tProviderIdentifier: false,\n\n\t\t// If this is set to true, when the App initializes this will.\n\t\t// After the App initializes, initialize will be called as soon as it's added.\n\t\tAutoInitialize: true,\n\t\tAutoInitializeOrdinal: 0,\n\n\t\tAutoSolveWithApp: true,\n\t\tAutoSolveOrdinal: 0,\n\n\t\tManifests: {},\n\n\t\tTemplates: []\n\t});\n\nclass PictProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Intersect default options, parent constructor, service information\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictProviderSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tif (!this.options.ProviderIdentifier)\n\t\t{\n\t\t\tthis.options.ProviderIdentifier = `AutoProviderID-${this.fable.getUUID()}`;\n\t\t}\n\n\t\tthis.serviceType = 'PictProvider';\n\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\n\t\t// Wire in the essential Pict application state\n\t\tthis.AppData = this.pict.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\n\t\tfor (let i = 0; i < this.options.Templates.length; i++)\n\t\t{\n\t\t\tlet tmpDefaultTemplate = this.options.Templates[i];\n\n\t\t\tif (!tmpDefaultTemplate.hasOwnProperty('Postfix') || !tmpDefaultTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} could not load Default Template ${i} in the options array.`, tmpDefaultTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpDefaultTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpDefaultTemplate.Source = `PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addDefaultTemplate(tmpDefaultTemplate.Prefix, tmpDefaultTemplate.Postfix, tmpDefaultTemplate.Template, tmpDefaultTemplate.Source);\n\t\t\t}\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                        Code Section: Initialization                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow PROVIDER [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} initialize:`);\n\t\t}\n\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\tthis.onAfterInitialize();\n\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallback)\n\t{\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow PROVIDER [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} initializeAsync:`);\n\t\t}\n\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.info(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.info(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallback();\n\t\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\n\tonPreRender()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} onPreRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonPreRenderAsync(fCallback)\n\t{\n\t\tthis.onPreRender();\n\t\treturn fCallback();\n\t}\n\trender()\n\t{\n\t\treturn this.onPreRender();\n\t}\n\trenderAsync(fCallback)\n\t{\n\t\tthis.onPreRender();\n\t\treturn fCallback();\n\t}\n\n\n\tonPreSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictProvider [${this.UUID}]::[${this.Hash}] ${this.options.ProviderIdentifier} onPreSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonPreSolveAsync(fCallback)\n\t{\n\t\tthis.onPreSolve();\n\t\treturn fCallback();\n\t}\n\tsolve()\n\t{\n\t\treturn this.onPreSolve();\n\t}\n\tsolveAsync(fCallback)\n\t{\n\t\tthis.onPreSolve();\n\t\treturn fCallback();\n\t}\n}\n\nmodule.exports = PictProvider;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst defaultPictViewSettings = (\n\t{\n\t\tDefaultRenderable: false,\n\t\tDefaultDestinationAddress: false,\n\t\tDefaultTemplateRecordAddress: false,\n\n\t\tViewIdentifier: false,\n\n\t\t// If this is set to true, when the App initializes this will.\n\t\t// After the App initializes, initialize will be called as soon as it's added.\n\t\tAutoInitialize: true,\n\t\tAutoInitializeOrdinal: 0,\n\n\t\t// If this is set to true, when the App autorenders (on load) this will.\n\t\t// After the App initializes, render will be called as soon as it's added.\n\t\tAutoRender: true,\n\t\tAutoRenderOrdinal: 0,\n\n\t\tAutoSolveWithApp: true,\n\t\tAutoSolveOrdinal: 0,\n\n\t\tCSSHash: false,\n\t\tCSS: false,\n\t\tCSSProvider: false,\n\t\tCSSPriority: 500,\n\n\t\tTemplates: [],\n\n\t\tDefaultTemplates: [],\n\n\t\tRenderables: [],\n\n\t\tManifests: {}\n\t});\n\nclass PictView extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Intersect default options, parent constructor, service information\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictViewSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tif (!this.options.ViewIdentifier)\n\t\t{\n\t\t\tthis.options.ViewIdentifier = `AutoViewID-${this.fable.getUUID()}`;\n\t\t}\n\t\tthis.serviceType = 'PictView';\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict application state\n\t\tthis.AppData = this.pict.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastRenderedTimestamp = false;\n\t\tthis.lastMarshalFromViewTimestamp = false;\n\t\tthis.lastMarshalToViewTimestamp = false;\n\n\t\t// Load all templates from the array in the options\n\t\t// Templates are in the form of {Hash:'Some-Template-Hash',Template:'Template content',Source:'TemplateSource'}\n\t\tfor (let i = 0; i < this.options.Templates.length; i++)\n\t\t{\n\t\t\tlet tmpTemplate = this.options.Templates[i];\n\n\t\t\tif (!tmpTemplate.hasOwnProperty('Hash') || !tmpTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Template ${i} in the options array.`, tmpTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addTemplate(tmpTemplate.Hash, tmpTemplate.Template, tmpTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load all default templates from the array in the options\n\t\t// Templates are in the form of {Prefix:'',Postfix:'-List-Row',Template:'Template content',Source:'TemplateSourceString'}\n\t\tfor (let i = 0; i < this.options.DefaultTemplates.length; i++)\n\t\t{\n\t\t\tlet tmpDefaultTemplate = this.options.DefaultTemplates[i];\n\n\t\t\tif (!tmpDefaultTemplate.hasOwnProperty('Postfix') || !tmpDefaultTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Default Template ${i} in the options array.`, tmpDefaultTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpDefaultTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpDefaultTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addDefaultTemplate(tmpDefaultTemplate.Prefix, tmpDefaultTemplate.Postfix, tmpDefaultTemplate.Template, tmpDefaultTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load the CSS if it's available\n\t\tif (this.options.CSS)\n\t\t{\n\t\t\tlet tmpCSSHash = this.options.CSSHash ? this.options.CSSHash : `View-${this.options.ViewIdentifier}`;\n\t\t\tlet tmpCSSProvider = this.options.CSSProvider ? this.options.CSSProvider : tmpCSSHash;\n\t\t\tthis.pict.CSSMap.addCSS(tmpCSSHash, this.options.CSS, tmpCSSProvider, this.options.CSSPriority);\n\t\t}\n\n\t\t// Load all renderables\n\t\t// Renderables are launchable renderable instructions with templates\n\t\t// They look as such: {Identifier:'ContentEntry', TemplateHash:'Content-Entry-Section-Main', ContentDestinationAddress:'#ContentSection', RecordAddress:'AppData.Content.DefaultText', ManifestTransformation:'ManyfestHash', ManifestDestinationAddress:'AppData.Content.DataToTransformContent'}\n\t\t// The only parts that are necessary are Identifier and Template\n\t\t// A developer can then do render('ContentEntry') and it just kinda works.  Or they can override the ContentDestinationAddress\n\t\tthis.renderables = {};\n\t\tfor (let i = 0; i < this.options.Renderables.length; i++)\n\t\t{\n\t\t\tlet tmpRenderable = this.options.Renderables[i];\n\t\t\tthis.addRenderable(this.options.Renderables[i]);\n\t\t}\n\t}\n\n\taddRenderable(pRenderableHash, pTemplateHash, pDefaultTemplateDataAddress, pDefaultDestinationAddress, pRenderMethod)\n\t{\n\t\tlet tmpRenderable = false;\n\n\t\tif (typeof(pRenderableHash) == 'object')\n\t\t{\n\t\t\t// The developer passed in the renderable as an object.\n\t\t\t// Use theirs instead!\n\t\t\ttmpRenderable = pRenderableHash;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpRenderMethod = (typeof(pRenderMethod) !== 'string') ? pRenderMethod : 'replace';\n\t\t\ttmpRenderable = (\n\t\t\t\t{\n\t\t\t\t\tRenderableHash: pRenderableHash,\n\t\t\t\t\tTemplateHash: pTemplateHash,\n\t\t\t\t\tDefaultTemplateDataAddress: pDefaultTemplateDataAddress,\n\t\t\t\t\tDefaultDestinationAddress: pDefaultDestinationAddress,\n\t\t\t\t\tRenderMethod: tmpRenderMethod\n\t\t\t\t});\n\t\t}\n\n\t\tif ((typeof(tmpRenderable.RenderableHash) != 'string') || (typeof(tmpRenderable.TemplateHash) != 'string'))\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Renderable; RenderableHash or TemplateHash are invalid.`, tmpRenderable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} adding renderable [${tmpRenderable.RenderableHash}] pointed to template ${tmpRenderable.TemplateHash}.`);\n\t\t\t}\n\n\t\t\tthis.renderables[tmpRenderable.RenderableHash] = tmpRenderable;\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                        Code Section: Initialization                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow VIEW [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialize:`);\n\t\t}\n\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\tthis.onAfterInitialize();\n\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallback)\n\t{\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow VIEW [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initializeAsync:`);\n\t\t}\n\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallback();\n\t\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Render                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeRender(pRenderable, pRenderDestinationAddress, pData)\n\t{\n\t\t// Overload this to mess with stuff before the content gets generated from the template\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeRenderAsync(fCallback)\n\t{\n\t\treturn fCallback();\n\t}\n\n\trender(pRenderable, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it is not a valid renderable.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpDataAddress;\n\t\tlet tmpData;\n\n\t\tif (typeof(pTemplateDataAddress) === 'object')\n\t\t{\n\t\t\ttmpData = pTemplateDataAddress;\n\t\t\ttmpDataAddress = 'Passed in as object';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\t\ttmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\t\t}\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow VIEW [${this.UUID}]::[${this.Hash}] Renderable[${tmpRenderableHash}] Destination[${tmpRenderDestinationAddress}] TemplateDataAddress[${tmpDataAddress}] render:`);\n\t\t}\n\t\tif (this.pict.LogNoisiness > 0)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} Beginning Render of Renderable[${tmpRenderableHash}] to Destination [${tmpRenderDestinationAddress}]...`);\n\t\t}\n\t\t// Generate the content output from the template and data\n\t\tlet tmpContent = this.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData, null, [this])\n\n\t\tif (this.pict.LogNoisiness > 0)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} Assigning Renderable[${tmpRenderableHash}] content length ${tmpContent.length} to Destination [${tmpRenderDestinationAddress}] using render method [${tmpRenderable.RenderMethod}].`);\n\t\t}\n\n\t\t// Assign the content to the destination address\n\t\tswitch(tmpRenderable.RenderMethod)\n\t\t{\n\t\t\tcase 'append':\n\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'prepend':\n\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'append_once':\n\t\t\t\t// Try to find the content in the destination address\n\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t{\n\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'replace':\n\t\t\t\t// TODO: Should this be the default?\n\t\t\tdefault:\n\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Execute the developer-overridable post-render behavior\n\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, tmpContent)\n\n\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\treturn true;\n\t}\n\trenderAsync(pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderableHash) === 'string') ? pRenderableHash :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\n\t\t// Allow the callback to be passed in as the last parameter no matter what\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback :\n\t\t\t\t\t\t\t(typeof(pTemplateDataAddress) === 'function') ? pTemplateDataAddress :\n\t\t\t\t\t\t\t(typeof(pRenderDestinationAddress) === 'function') ? pRenderDestinationAddress :\n\t\t\t\t\t\t\t(typeof(pRenderableHash) === 'function') ? pRenderableHash :\n\t\t\t\t\t\t\tfalse;\n\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.Name} renderAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderableHash}because it is not a valid renderable.`);\n\t\t\treturn tmpCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderableHash}because it is not a valid renderable.`));\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderableHash}) because it does not exist.`);\n\t\t\treturn tmpCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderableHash}) because it does not exist.`));\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderableHash}) because it does not have a valid destination address.`);\n\t\t\treturn tmpCallback(Error(`Could not render ${tmpRenderableHash}`));\n\t\t}\n\n\t\tlet tmpDataAddress;\n\t\tlet tmpData;\n\n\t\tif (typeof(pTemplateDataAddress) === 'object')\n\t\t{\n\t\t\ttmpData = pTemplateDataAddress;\n\t\t\ttmpDataAddress = 'Passed in as object';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\t\ttmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\t\t}\n\n\t\tif (this.pict.LogControlFlow)\n\t\t{\n\t\t\tthis.log.trace(`PICT-ControlFlow VIEW [${this.UUID}]::[${this.Hash}] Renderable[${tmpRenderableHash}] Destination[${tmpRenderDestinationAddress}] TemplateDataAddress[${tmpDataAddress}] renderAsync:`);\n\t\t}\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} Beginning Asynchronous Render (callback-style)...`);\n\t\t}\n\n\t\tlet tmpAnticipate = this.fable.newAnticipate();\n\n\t\ttmpAnticipate.anticipate(\n\t\t\t(fOnBeforeRenderCallback) =>\n\t\t\t{\n\t\t\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\t\t\t\tthis.onBeforeRenderAsync(fOnBeforeRenderCallback);\n\t\t\t});\n\n\t\ttmpAnticipate.anticipate(\n\t\t\t(fAsyncTemplateCallback) =>\n\t\t\t{\n\t\t\t\t// Render the template (asynchronously)\n\t\t\t\tthis.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData,\n\t\t\t\t\t(pError, pContent) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render (asynchronously) ${tmpRenderableHash} (param ${pRenderableHash}) because it did not parse the template.`, pError);\n\t\t\t\t\t\t\treturn fAsyncTemplateCallback(pError);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} Assigning Renderable[${tmpRenderableHash}] content length ${pContent.length} to Destination [${tmpRenderDestinationAddress}] using Async render method ${tmpRenderable.RenderMethod}.`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Assign the content to the destination address\n\t\t\t\t\t\tswitch(tmpRenderable.RenderMethod)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'append':\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'prepend':\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'append_once':\n\t\t\t\t\t\t\t\t// Try to find the content in the destination address\n\t\t\t\t\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\t\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'replace':\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Execute the developer-overridable asynchronous post-render behavior\n\t\t\t\t\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\t\t\treturn fAsyncTemplateCallback();\n\t\t\t\t\t}, [this]);\n\t\t\t});\n\n\t\ttmpAnticipate.anticipate(\n\t\t\t(fOnAfterRenderCallback) =>\n\t\t\t{\n\t\t\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\t\t\t\tthis.onAfterRenderAsync(fOnAfterRenderCallback);\n\t\t\t});\n\n\t\ttmpAnticipate.wait(tmpCallback);\n\t}\n\trenderDefaultAsync(fCallback)\n\t{\n\t\t// Render the default renderable\n\t\tthis.renderAsync(fCallback);\n\t}\n\tonAfterRender(pRenderable, pRenderDestinationAddress, pData)\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterRenderAsync(fCallback)\n\t{\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Solver                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : false;\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn tmpCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal From View                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewAsync(fCallback)\n\t{\n\n\t\tthis.onMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalFromView();\n\t\tthis.onMarshalFromView();\n\t\tthis.onAfterMarshalFromView();\n\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalFromViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : false;\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} marshalFromViewAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn tmpCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal To View                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalToView();\n\t\tthis.onMarshalToView();\n\t\tthis.onAfterMarshalToView();\n\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalToViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\n\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : false;\n\t\tif (!tmpCallback)\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewAsync was called without a valid callback.  A callback will be generated but this could lead to race conditions.`);\n\t\t\ttmpCallback = (pError) => \n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewAsync Auto Callback Error: ${pError}`, pError)\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} marshalToViewAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn tmpCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToView();\n\t\treturn fCallback();\n\t}\n}\n\nmodule.exports = PictView;","/**\n* Precedent Meta-Templating\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Process text streams, parsing out meta-template expressions.\n*/\nvar libWordTree = require(`./WordTree.js`);\nvar libStringParser = require(`./StringParser.js`);\n\nclass Precedent\n{\n\t/**\n\t * Precedent Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser();\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData);\n\t}\n}\n\nmodule.exports = Precedent;\n","/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t */\n\tparseString (pString, pParseTree, pData)\n\t{\n\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\tfor (var i = 0; i < pString.length; i++)\n\t\t{\n\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData);\n\t\t}\n\n\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\treturn tmpParserState.Output;\n\t}\n}\n\nmodule.exports = StringParser;\n","/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowEmptyArrays: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decodeDotInKeys: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    duplicates: 'combine',\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        var existing = has.call(obj, key);\n        if (existing && options.duplicates === 'combine') {\n            obj[key] = utils.combine(obj[key], val);\n        } else if (!existing || options.duplicates === 'last') {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = options.allowEmptyArrays && leaf === '' ? [] : [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, '.') : cleanRoot;\n            var index = parseInt(decodedRoot, 10);\n            if (!options.parseArrays && decodedRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== decodedRoot\n                && String(index) === decodedRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (decodedRoot !== '__proto__') {\n                obj[decodedRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {\n        throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.decoder !== null && typeof opts.decoder !== 'undefined' && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    var duplicates = typeof opts.duplicates === 'undefined' ? defaults.duplicates : opts.duplicates;\n\n    if (duplicates !== 'combine' && duplicates !== 'first' && duplicates !== 'last') {\n        throw new TypeError('The duplicates option must be either combine, first, or last');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decodeDotInKeys: typeof opts.decodeDotInKeys === 'boolean' ? opts.decodeDotInKeys : defaults.decodeDotInKeys,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        duplicates: duplicates,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    allowEmptyArrays,\n    strictNullHandling,\n    skipNulls,\n    encodeDotInKeys,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var encodedPrefix = encodeDotInKeys ? prefix.replace(/\\./g, '%2E') : prefix;\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encodedPrefix + '[]' : encodedPrefix;\n\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjustedPrefix + '[]';\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var encodedKey = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + encodedKey : '[' + encodedKey + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            allowEmptyArrays,\n            strictNullHandling,\n            skipNulls,\n            encodeDotInKeys,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    var arrayFormat;\n    if (opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = defaults.arrayFormat;\n    }\n\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];\n    var commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.allowEmptyArrays,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encodeDotInKeys,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar limit = 1024;\n\n/* eslint operator-linebreak: [2, \"before\"] */\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var j = 0; j < string.length; j += limit) {\n        var segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        var arr = [];\n\n        for (var i = 0; i < segment.length; ++i) {\n            var c = segment.charCodeAt(i);\n            if (\n                c === 0x2D // -\n                || c === 0x2E // .\n                || c === 0x5F // _\n                || c === 0x7E // ~\n                || (c >= 0x30 && c <= 0x39) // 0-9\n                || (c >= 0x41 && c <= 0x5A) // a-z\n                || (c >= 0x61 && c <= 0x7A) // A-Z\n                || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n\n            if (c < 0x80) {\n                arr[arr.length] = hexTable[c];\n                continue;\n            }\n\n            if (c < 0x800) {\n                arr[arr.length] = hexTable[0xC0 | (c >> 6)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            if (c < 0xD800 || c >= 0xE000) {\n                arr[arr.length] = hexTable[0xE0 | (c >> 12)]\n                    + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            i += 1;\n            c = 0x10000 + (((c & 0x3FF) << 10) | (segment.charCodeAt(i) & 0x3FF));\n\n            arr[arr.length] = hexTable[0xF0 | (c >> 18)]\n                + hexTable[0x80 | ((c >> 12) & 0x3F)]\n                + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                + hexTable[0x80 | (c & 0x3F)];\n        }\n\n        out += arr.join('');\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = require('es-errors/type');\nvar $floor = GetIntrinsic('%Math.floor%');\n\n/** @type {import('.')} */\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list. By doing so, all the recently used nodes can be accessed relatively quickly.\n*/\n/** @type {import('.').listGetNode} */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\t/** @type {typeof list | NonNullable<(typeof list)['next']>} */\n\tvar prev = list;\n\t/** @type {(typeof list)['next']} */\n\tvar curr;\n\tfor (; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\tcurr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\n/** @type {import('.').listGet} */\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\n/** @type {import('.').listSet} */\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = /** @type {import('.').ListNode<typeof value>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t});\n\t}\n};\n/** @type {import('.').listHas} */\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n\t/** @type {WeakMap<object, unknown>} */ var $wm;\n\t/** @type {Map<object, unknown>} */ var $m;\n\t/** @type {import('.').RootNode<unknown>} */ var $o;\n\n\t/** @type {import('.').Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n","/*! simple-concat. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function (stream, cb) {\n  var chunks = []\n  stream.on('data', function (chunk) {\n    chunks.push(chunk)\n  })\n  stream.once('end', function () {\n    if (cb) cb(null, Buffer.concat(chunks))\n    cb = null\n  })\n  stream.once('error', function (err) {\n    if (cb) cb(err)\n    cb = null\n  })\n}\n","/*! simple-get. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const originalHost = opts.hostname // hostname before potential redirect\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api\n      // If redirected host is different than original host, drop headers to prevent cookie leak (#73)\n      if (redirectHost !== null && redirectHost !== originalHost) {\n        delete opts.headers.cookie\n        delete opts.headers.authorization\n      }\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};","/*\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nvar punycode = require('punycode');\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n/*\n * define these here so at least they only have to be\n * compiled once on the first module load.\n */\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/,\n\n  /*\n   * RFC 2396: characters reserved for delimiting URLs.\n   * We actually just auto-escape these.\n   */\n  delims = [\n    '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'\n  ],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = [\n    '{', '}', '|', '\\\\', '^', '`'\n  ].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  /*\n   * Characters that are never ever allowed in a hostname.\n   * Note that any invalid chars are also handled, but these\n   * are the ones that are *expected* to be seen, so we fast-path\n   * them.\n   */\n  nonHostChars = [\n    '%', '/', '?', ';', '#'\n  ].concat(autoEscape),\n  hostEndingChars = [\n    '/', '?', '#'\n  ],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    http: true,\n    https: true,\n    ftp: true,\n    gopher: true,\n    file: true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  },\n  querystring = require('qs');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && typeof url === 'object' && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (typeof url !== 'string') {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  /*\n   * Copy chrome, IE, opera backslash-handling behavior.\n   * Back slashes before the query string get converted to forward slashes\n   * See: https://code.google.com/p/chromium/issues/detail?id=25916\n   */\n  var queryIndex = url.indexOf('?'),\n    splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  /*\n   * trim before proceeding.\n   * This is to support parse stuff like \"  http://foo.com  \\n\"\n   */\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  /*\n   * figure out if it's got a host\n   * user@server is *always* interpreted as a hostname, and url\n   * resolution will treat //foo/bar as host=foo,path=bar because that's\n   * how the browser resolves relative URLs.\n   */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@/]+@[^@/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || (proto && !slashedProtocol[proto]))) {\n\n    /*\n     * there's a hostname.\n     * the first instance of /, ?, ;, or # ends the host.\n     *\n     * If there is an @ in the hostname, then non-host chars *are* allowed\n     * to the left of the last @ sign, unless some host-ending character\n     * comes *before* the @-sign.\n     * URLs are obnoxious.\n     *\n     * ex:\n     * http://a@b@c/ => user:a@b host:c\n     * http://a@b?@c => user:a host:c path:/?@c\n     */\n\n    /*\n     * v0.12 TODO(isaacs): This is not quite how Chrome does things.\n     * Review our test case against browsers more comprehensively.\n     */\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n\n    /*\n     * at this point, either we have an explicit point where the\n     * auth portion cannot go past, or the last @ char is the decider.\n     */\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      /*\n       * atSign must be in auth portion.\n       * http://a@b/c@d => host:b auth:a path:/c@d\n       */\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    /*\n     * Now we have a portion which is definitely the auth.\n     * Pull that off.\n     */\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) { hostEnd = rest.length; }\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    /*\n     * we've indicated that there is a hostname,\n     * so even if it's empty, it has to be present.\n     */\n    this.hostname = this.hostname || '';\n\n    /*\n     * if hostname begins with [ and ends with ]\n     * assume that it's an IPv6 address.\n     */\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              /*\n               * we replace non-ASCII char with a temporary placeholder\n               * we need this to make sure size of hostname is not\n               * broken by replacing non-ASCII by nothing\n               */\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      /*\n       * IDNA Support: Returns a punycoded representation of \"domain\".\n       * It only converts parts of the domain name that\n       * have non-ASCII characters, i.e. it doesn't matter if\n       * you call it with a domain that already is ASCII-only.\n       */\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    /*\n     * strip [ and ] from the hostname\n     * the host field still retains them, though\n     */\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  /*\n   * now rest is set to the post-host stuff.\n   * chop off any delim chars.\n   */\n  if (!unsafeProtocol[lowerProto]) {\n\n    /*\n     * First, make 100% sure that any \"autoEscape\" chars get\n     * escaped, even if encodeURIComponent doesn't think they\n     * need to be.\n     */\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) { continue; }\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  /*\n   * ensure it's an object, and not a string url.\n   * If it's an obj, this is a no-op.\n   * this way, you can call url_format() on strings\n   * to clean up potentially wonky urls.\n   */\n  if (typeof obj === 'string') { obj = urlParse(obj); }\n  if (!(obj instanceof Url)) { return Url.prototype.format.call(obj); }\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n    pathname = this.pathname || '',\n    hash = this.hash || '',\n    host = false,\n    query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && typeof this.query === 'object' && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query, {\n      arrayFormat: 'repeat',\n      addQueryPrefix: false\n    });\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') { protocol += ':'; }\n\n  /*\n   * only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n   * unless they had them to begin with.\n   */\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') { pathname = '/' + pathname; }\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') { hash = '#' + hash; }\n  if (search && search.charAt(0) !== '?') { search = '?' + search; }\n\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) { return relative; }\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (typeof relative === 'string') {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  /*\n   * hash is always overridden, no matter what.\n   * even href=\"\" will remove it.\n   */\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') { result[rkey] = relative[rkey]; }\n    }\n\n    // urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.pathname = '/';\n      result.path = result.pathname;\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    /*\n     * if it's a known url protocol, then changing\n     * the protocol does weird things\n     * first, if it's not file:, then we MUST have a host,\n     * and if there was a path\n     * to begin with, then we MUST have a path.\n     * if it is file:, then the host is dropped,\n     * because that's known to be hostless.\n     * anything else is assumed to be absolute.\n     */\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift())) { }\n      if (!relative.host) { relative.host = ''; }\n      if (!relative.hostname) { relative.hostname = ''; }\n      if (relPath[0] !== '') { relPath.unshift(''); }\n      if (relPath.length < 2) { relPath.unshift(''); }\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n    isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n    mustEndAbs = isRelAbs || isSourceAbs || (result.host && relative.pathname),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    relPath = relative.pathname && relative.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  /*\n   * if the url is a non-slashed url, then relative\n   * links like ../.. should be able\n   * to crawl up to the hostname, as well.  This is strange.\n   * result.protocol has already been set by now.\n   * Later on, put the first path part into the host field.\n   */\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') { srcPath[0] = result.host; } else { srcPath.unshift(result.host); }\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') { relPath[0] = relative.host; } else { relPath.unshift(relative.host); }\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    /*\n     * it's relative\n     * throw away the existing file, and take the new path instead.\n     */\n    if (!srcPath) { srcPath = []; }\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search != null) {\n    /*\n     * just pull out the search.\n     * like href='?foo'.\n     * Put this after the other two cases because it simplifies the booleans\n     */\n    if (psychotic) {\n      result.host = srcPath.shift();\n      result.hostname = result.host;\n      /*\n       * occationaly the auth can get stuck only in host\n       * this especially happens in cases like\n       * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n       */\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.hostname = authInHost.shift();\n        result.host = result.hostname;\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    // to support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    /*\n     * no path at all.  easy.\n     * we've already handled the other stuff above.\n     */\n    result.pathname = null;\n    // to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  /*\n   * if a url ENDs in . or .., then it must get a trailing slash.\n   * however, if it ends in anything else non-slashy,\n   * then it must NOT get a trailing slash.\n   */\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === '';\n\n  /*\n   * strip single dots, resolve double dots to parent dir\n   * if the path tries to go above the root, `up` ends up > 0\n   */\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    result.host = result.hostname;\n    /*\n     * occationaly the auth can get stuck only in host\n     * this especially happens in cases like\n     * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n     */\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.hostname = authInHost.shift();\n      result.host = result.hostname;\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (srcPath.length > 0) {\n    result.pathname = srcPath.join('/');\n  } else {\n    result.pathname = null;\n    result.path = null;\n  }\n\n  // to support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","// This assumes Pict has been required in the browser. Delcare these as globals so linter can do its job.\n/* global Pict, _Pict: writeable */\n\n/**\n * Simple function to load a pict Application\n *\n * @param {import('pict-application')} pPictApplication - The pict application to load.\n * @param {number} pLogNoisiness - The log noisiness level.\n */\nmodule.exports = function (pPictApplication, pLogNoisiness)\n{\n\tlet tmpLogNoisiness = (typeof(pLogNoisiness) == 'undefined') ? 0 : pLogNoisiness;\n\n\t// Set up a basal pict on the window object\n\tif (pPictApplication && pPictApplication.hasOwnProperty('default_configuration') && pPictApplication.default_configuration.hasOwnProperty('pict_configuration'))\n\t{\n\t\twindow._Pict = new Pict(pPictApplication.default_configuration.pict_configuration);\n\t}\n\telse\n\t{\n\t\twindow._Pict = new Pict();\n\t}\n\n\twindow._Pict.LogNoisiness = tmpLogNoisiness;\n\n\tlet tmpApplicationHash = 'DefaultApplication';\n\tlet tmpDefaultConfiguration = {};\n\n\tif (pPictApplication.hasOwnProperty('default_configuration'))\n\t{\n\t\ttmpDefaultConfiguration = pPictApplication.default_configuration;\n\n\t\tif (pPictApplication.default_configuration.hasOwnProperty('Hash'))\n\t\t{\n\t\t\ttmpDefaultConfiguration = pPictApplication.default_configuration;\n\t\t\ttmpApplicationHash = pPictApplication.default_configuration.Hash;\n\t\t}\n\t}\n\t_Pict.log.info(`Loading the pict application [${tmpApplicationHash}] and associated views.`);\n\n\t_Pict.addApplication(tmpApplicationHash, tmpDefaultConfiguration, pPictApplication);\n\n\t_Pict.PictApplication.initializeAsync(\n\t\tfunction (pError)\n\t\t{\n\t\t\tif (pError)\n\t\t\t{\n\t\t\t\tconsole.log('Error initializing the pict application: '+pError)\n\t\t\t}\n\t\t\t_Pict.log.info('Loading the Application and associated views.');\n\t\t});\n}\n","\n/**\n * Provide a safe on document ready function (without needing a framework like jquery)\n *\n * @param {function} fCallback - The function to call when the document is ready\n */\nmodule.exports = function (fCallback)\n{\n\tif (!document)\n\t{\n\t\tconsole.log('No document object found; no initialization happening.');\n\t\treturn;\n\t}\n\t// In case the document is already rendered\n\tif (document.readyState!='loading') fCallback();\n\t// Modern browsers have event listener capabilities\n\telse if (document.addEventListener) document.addEventListener('DOMContentLoaded', fCallback);\n\t// IE <= 8 and ... other abominations\n\telse document.attachEvent('onreadystatechange', function() { if (document.readyState=='complete') fCallback(); });\n}\n","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst defaultConfiguration = (\n\t{\n\t\t// This is the address for the <script /> tag that contains the CSS.\n\t\tCSSElementAddress: '#PICT-CSS'\n\t}\n)\n\nclass PictCSS extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\t// No merging of options necessary\n\t\tif (typeof(this.options.CSSElementAddress) === 'undefined')\n\t\t{\n\t\t\tthis.options.CSSElementAddress = defaultConfiguration.CSSElementAddress;\n\t\t}\n\n\t\tthis.inlineCSSMap = {};\n\t}\n\n\t// Add a CSS fragment to the CSS map (each view can have its own CSS fragment)\n\t// Hash is shared across all views, so if 10 views all load the \"My-Table-View\" fragment, it will only be loaded once.\n\taddCSS(pHash, pContent, pPriority, pProvider)\n\t{\n\t\tlet tmpPriority = (typeof(pPriority) !== 'undefined') ? pPriority : 1000;\n\t\tlet tmpProvidor = (typeof(pProvider) === 'string') ? pProvider : 'Unknown';\n\t\tthis.inlineCSSMap[pHash] = { Hash: pHash, Content: pContent, Provider: tmpProvidor, Priority:tmpPriority };\n\t}\n\n\tremoveCSS(pHash)\n\t{\n\t\tdelete this.inlineCSSMap[pHash];\n\t}\n\n\tgenerateCSS()\n\t{\n\t\tlet tmpCSS = '';\n\t\tlet tmpCSSHashes = Object.keys(this.inlineCSSMap);\n\t\t// Sort the hashes by Priority\n\t\ttmpCSSHashes.sort((a, b) => { return this.inlineCSSMap[a].Priority - this.inlineCSSMap[b].Priority; });\n\t\tfor (let i = 0; i < tmpCSSHashes.length; i++)\n\t\t{\n\t\t\tlet tmpCSSFragment = this.inlineCSSMap[tmpCSSHashes[i]];\n\t\t\tlet tmpCSSComment = tmpCSSFragment.Hash;\n\t\t\tif (tmpCSSFragment.Hash != tmpCSSFragment.Provider)\n\t\t\t{\n\t\t\t\ttmpCSSComment = `${tmpCSSComment} from ${tmpCSSFragment.Provider}`;\n\t\t\t}\n\t\t\ttmpCSS += `/* ${tmpCSSComment} */\\n${tmpCSSFragment.Content}\\n`;\n\t\t}\n\t\treturn tmpCSS;\n\t}\n\n\t// Inject the CSS into the magic DOM element for it\n\tinjectCSS()\n\t{\n\t\tthis.services.ContentAssignment.assignContent(this.options.CSSElementAddress, this.generateCSS());\n\t}\n}\n\nmodule.exports = PictCSS;\n","const libFableServiceBase = require('fable').ServiceProviderBase;\n\n/**\n * Class for moving content around in the DOM.\n */\nclass PictContentAssignment extends libFableServiceBase\n{\n\t/**\n\t * @param {object} pFable - The Fable library instance.\n\t * @param {object} pOptions - The options for the service.\n\t * @param {object} pServiceHash - The hash of services.\n\t */\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictContentAssignment';\n\n\t\t// Check to see if we are running in a browser\n\t\tthis.inBrowser = false;\n\t\tthis.hasDocument = false;\n\t\tif (typeof (window) == 'object')\n\t\t{\n\t\t\tthis.inBrowser = true;\n\t\t\t// Now check that the browser has a document object\n\t\t\tif ((typeof (window.document) != 'undefined') && (typeof (window.document.querySelectorAll) == 'function'))\n\t\t\t{\n\t\t\t\tthis.hasDocument = true;\n\t\t\t}\n\t\t}\n\n\t\t// If we're in a browser, check to see if jQuery is available.\n\t\tthis.hasJquery = false;\n\t\tthis.jQuery = false;\n\t\tif (this.inBrowser && typeof (window.jQuery) !== 'undefined')\n\t\t{\n\t\t\tthis.hasJquery = true;\n\t\t}\n\n\t\t/**\n\t\t * Set this to override the default mechanism for setting the content of a DOM element.\n\t\t *\n\t\t * @type {Function}\n\t\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t\t * @param {string} pContent - The content to set.\n\t\t */\n\t\tthis.customAssignFunction = false;\n\t\t/**\n\t\t * Set this to override the default mechanism for prepend content to a DOM element.\n\t\t *\n\t\t * @type {Function}\n\t\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t\t * @param {string} pContent - The content to prepend.\n\t\t */\n\t\tthis.customPrependFunction = false;\n\t\t/**\n\t\t * Set this to override the default mechanism for appending content to a DOM element.\n\t\t *\n\t\t * @type {Function}\n\t\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t\t * @param {string} pContent - The content to append.\n\t\t */\n\t\tthis.customAppendFunction = false;\n\n\t\t/**\n\t\t * Set this to override the default mechanism for reading content from the DOM.\n\t\t *\n\t\t * @type {Function}\n\t\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t\t * @return {string} - The content of the element.\n\t\t */\n\t\tthis.customReadFunction = false;\n\t\t/**\n\t\t * Set this to override the default mechanism for getting elements.\n\t\t *\n\t\t * @type {Function}\n\t\t * @param {string} pAddress - The address of the element.\n\t\t * @return {Array<any>} - The matched elements.\n\t\t */\n\t\tthis.customGetElementFunction = false;\n\n\t\t// API Consumers can also craft their own attribute read function\n\t\tthis.customReadAttributeFunction = false;\n\t\t// API Consumers can also craft their own attribute set function\n\t\tthis.customSetAttributeFunction = false;\n\t\t// API Consumers can also craft their own attribute remove function\n\t\tthis.customRemoveAttributeFunction = false;\n\n\t\t// API Consumers can also craft their own class read function\n\t\tthis.customReadClassFunction = false;\n\t\t// API Consumers can also craft their own class set function\n\t\tthis.customSetClassFunction = false;\n\t\t// API Consumers can also craft their own class remove function\n\t\tthis.customRemoveClassFunction = false;\n\t}\n\n\t/**\n\t * Get an element from the DOM.\n\t *\n\t * @param {string} pAddress - The address of the element.\n\t * @return {Array<any>} - The matched elements.\n\t */\n\tgetElement(pAddress)\n\t{\n\t\tif (this.customGetElementFunction)\n\t\t{\n\t\t\treturn this.customGetElementFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpElements = window.jQuery(pAddress);\n\t\t\tif (tmpElements.length == 0)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// TODO: This isn't the most efficient method, but it is the most compatible.\n\t\t\t\tlet tmpElementSet = [];\n\t\t\t\tfor (let i = 0; i < tmpElements.length; i++)\n\t\t\t\t{\n\t\t\t\t\ttmpElementSet.push(tmpElements[i]);\n\t\t\t\t}\n\t\t\t\treturn tmpElementSet;\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\treturn window.document.querySelectorAll(pAddress);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content GET ELEMENT for [${pAddress}] will return empty because none of the browser methods are available`);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tassignContent(pAddress, pContent)\n\t{\n\t\tif (this.customAssignFunction)\n\t\t{\n\t\t\treturn this.customAssignFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element(s)\n\t\t\tlet tmpTargetElementSet = window.jQuery(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\t// Get the element(s)\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content ASSIGN to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\t/**\n\t * Append content to an element.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t * @param {string} pContent - The content to append.\n\t */\n\tappendContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customAppendFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.append(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"beforeend\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content APPEND to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\t/**\n\t * Prepend content to an element.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t * @param {string} pContent - The content to prepend.\n\t */\n\tprependContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customPrependFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.prepend(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"afterbegin\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content PREPEND in [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\t/**\n\t * Read content from an element.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t *\n\t * @return {string} - The content of the element.\n\t */\n\treadContent(pAddress)\n\t{\n\t\tif (this.customReadFunction)\n\t\t{\n\t\t\treturn this.customReadFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\tswitch (tmpTargetElement.prop('tagName'))\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\treturn tmpTargetElement.val();\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\treturn tmpTargetElement.text();\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn tmpTargetElement.html();\n\t\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tif (tmpTargetElementSet.length < 1)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse if (tmpTargetElementSet.length == 1)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[0].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\treturn tmpTargetElementSet[0].value;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\treturn tmpTargetElementSet[0].text;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn tmpTargetElementSet[0].innerHTML;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content READ from [${pAddress}]...`);\n\t\t\treturn '';\n\t\t}\n\t}\n\n\t/**\n\t * Add a class to an element.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t * @param {string} pClass - The class to add.\n\t */\n\taddClass(pAddress, pClass)\n\t{\n\t\tif (this.customSetClassFunction)\n\t\t{\n\t\t\treturn this.customSetClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.addClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.add(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content ADDCLASS to [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\t/**\n\t * Remove a class from an element.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t * @param {string} pClass - The class to remove.\n\t */\n\tremoveClass(pAddress, pClass)\n\t{\n\t\tif (this.customRemoveClassFunction)\n\t\t{\n\t\t\treturn this.customRemoveClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.remove(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVECLASS from [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\t/**\n\t * Read an attribute from an element.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t * @param {string} pAttribute - The attribute name to read.\n\t */\n\treadAttribute(pAddress, pAttribute)\n\t{\n\t\tif (this.customReadAttributeFunction)\n\t\t{\n\t\t\treturn this.customReadAttributeFunction(pAddress, pAttribute);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\treturn tmpTargetElement.attr(pAttribute);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].getAttribute(pAttribute);\n\t\t\t}\n\t\t\treturn tmpTargetElementSet;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content READATTRIBUTE from [${pAddress}]:`, pAttribute);\n\t\t}\n\t}\n\n\t/**\n\t * Set an attribute on an element.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t * @param {string} pAttribute - The attribute name to set.\n\t * @param {string} pValue - The value to set.\n\t */\n\tsetAttribute(pAddress, pAttribute, pValue)\n\t{\n\t\tif (this.customSetAttributeFunction)\n\t\t{\n\t\t\treturn this.customSetAttributeFunction(pAddress, pAttribute, pValue);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.attr(pAttribute, pValue);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].setAttribute(pAttribute, pValue);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content SETATTRIBUTE for [${pAddress}] ATTRIBUTE [${pAttribute}]:`, pValue);\n\t\t}\n\t}\n\n\t/**\n\t * Remove an attribute from an element.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t * @param {string} pAttribute - The attribute name to remove.\n\t */\n\tremoveAttribute(pAddress, pAttribute)\n\t{\n\t\tif (this.customRemoveAttributeFunction)\n\t\t{\n\t\t\treturn this.customRemoveAttributeFunction(pAddress, pAttribute);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeAttr(pAttribute);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].removeAttribute(pAttribute);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVEATTRIBUTE for [${pAddress}] ATTRIBUTE [${pAttribute}]`);\n\t\t}\n\t}\n\n\t/**\n\t * Check if an element has a class.\n\t *\n\t * @param {string} pAddress - The address of the element. (a CSS selector)\n\t * @param {string} pClass - The class to check for.\n\t *\n\t * @return {boolean} - Whether the element has the class. If multiple elements are matched, returns true if any have the class.\n\t */\n\thasClass(pAddress, pClass)\n\t{\n\t\tif (this.customReadClassFunction)\n\t\t{\n\t\t\treturn this.customReadClassFunction(pAddress, pClass);\n\t\t}\n\t\tif (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\treturn tmpTargetElement.hasClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tif (tmpTargetElementSet[i].classList.contains(pClass))\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content HASCLASS for [${pAddress}] CLASS [${pClass}]:`);\n\t\t}\n\t}\n}\n\nmodule.exports = PictContentAssignment;\n","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictDataProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictDataProvider';\n\t}\n\n\tgetDataByAddress(pAddress, pData)\n\t{\n\t\tlet tmpData = (typeof(pData) === 'undefined') ? {} : pData;\n\n\t\treturn this.fable.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, pAddress);\n\t}\n}\n\nmodule.exports = PictDataProvider;\n","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictMeadowEntityProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictMeadowProvider';\n\n\t\tif (this.fable.settings.PictDefaultURLPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = this.fable.settings.PictDefaultURLPrefix;\n\t\t}\n\t\telse if (!this.options.urlPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = '/1.0/';\n\t\t}\n\n\t\tif (this.fable.settings.PictDefaultDownloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = this.fable.settings.PictDefaultDownloadBatchSize;\n\t\t}\n\t\telse if (!this.options.downloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = 100;\n\t\t}\n\n\t\tthis.restClient = this.fable.instantiateServiceProviderWithoutRegistration('RestClient');\n\n\t\tthis.cache = {};\n\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tinitializeCache(pEntity)\n\t{\n\t\t// This should not be happening as often as it's happening.\n\t\tif (!this.cache.hasOwnProperty(pEntity))\n\t\t{\n\t\t\tthis.cache[pEntity] = this.fable.instantiateServiceProviderWithoutRegistration('ObjectCache');\n\t\t\t// TODO: Make this a configuration?\n\t\t\t// For now cache for 30 seconds.\n\t\t\tthis.cache[pEntity].maxAge = 30000;\n\t\t\tthis.cache[pEntity].maxLength = 10000;\n\n\t\t\tthis.fable.Bundle[pEntity] = this.cache[pEntity].RecordMap;\n\t\t}\n\t}\n\n\tgetEntity(pEntity, pIDRecord, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\tfunction ()\n\t\t\t{\n\t\t\t\tlet tmpPossibleRecord = this.cache[pEntity].read(pIDRecord);\n\n\t\t\t\tif (tmpPossibleRecord)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(null, tmpPossibleRecord);\n\t\t\t\t}\n\n\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}/${pIDRecord}`\n\t\t\t\t\t});\n\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pBody)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.cache[pEntity].put(pBody, pIDRecord);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pBody);\n\t\t\t\t\t});\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySetPage(pEntity, pMeadowFilterExpression, pRecordStartCursor, pRecordCount, fCallback)\n\t{\n\t\tlet tmpURL = `${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${pRecordStartCursor}/${pRecordCount}`;\n\n\t\treturn this.restClient.getJSON(tmpURL,\n\t\t\tfunction (pDownloadError, pDownloadResponse, pDownloadBody)\n\t\t\t{\n\t\t\t\treturn fCallback(pDownloadError, pDownloadBody);\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySetRecordCount(pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\tlet tmpURL = `${this.options.urlPrefix}${pEntity}s/Count/FilteredTo/${pMeadowFilterExpression}`;\n\n\t\treturn this.restClient.getJSON(tmpURL,\n\t\t\tfunction (pError, pResponse, pBody)\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\tthis.log.error(`Error getting entity count of [${pEntity}] filtered to [${pMeadowFilterExpression}] from url [${tmpURL}]: ${pError}`);\n\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t}\n\t\t\t\tlet tmpRecordCount = 0;\n\t\t\t\tif (pBody.Count)\n\t\t\t\t{\n\t\t\t\t\ttmpRecordCount = pBody.Count;\n\t\t\t\t}\n\t\t\t\treturn fCallback(pError, tmpRecordCount);\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySet(pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\t// TODO: Should we test for too many record IDs here by string length in pMeadowFilterExpression?\n\t\t//       FBL~ID${pDestinationEntity}~INN~${tmpIDRecordsCommaSeparated}\n\t\t//       If the list is mega-long we can parse it and break it into chunks.\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\tfunction ()\n\t\t\t{\n\t\t\t\treturn this.getEntitySetRecordCount(pEntity, pMeadowFilterExpression,\n\t\t\t\t\t(pRecordCountError, pRecordCount) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pRecordCountError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn fCallback(pRecordCountError);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet tmpRecordCount = pRecordCount;\n\n\t\t\t\t\t\tif (isNaN(pRecordCount))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Entity count did not return a number for [${pEntity}] filtered to [${pMeadowFilterExpression}]... something is fatally wrong from the server accessed in getEntitySet call.`);\n\t\t\t\t\t\t\treturn fCallback(new Error('Entity count did not return a number in getEntitySet.'));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpDownloadURIFragments = [];\n\t\t\t\t\t\tlet tmpDownloadBatchSize = this.options.downloadBatchSize;\n\t\t\t\t\t\tfor (let i = 0; i < (tmpRecordCount / tmpDownloadBatchSize); i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Generate each of the URI fragments to download\n\t\t\t\t\t\t\ttmpDownloadURIFragments.push(`${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${i * tmpDownloadBatchSize}/${tmpDownloadBatchSize}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpEntitySet = [];\n\n\t\t\t\t\t\t// Now run these in series (it's possible to parallelize the requests but they would not be in server order)\n\t\t\t\t\t\tthis.fable.Utility.eachLimit(tmpDownloadURIFragments, 1,\n\t\t\t\t\t\t\t(pURIFragment, fDownloadCallback) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.restClient.getJSON(pURIFragment,\n\t\t\t\t\t\t\t\t\t(pDownloadError, pDownloadResponse, pDownloadBody) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmpEntitySet = tmpEntitySet.concat(pDownloadBody);\n\t\t\t\t\t\t\t\t\t\t// Should we be caching each record?\n\t\t\t\t\t\t\t\t\t\treturn fDownloadCallback(pDownloadError);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(pFullDownloadError) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(pFullDownloadError, tmpEntitySet);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t}.bind(this));\n\t}\n}\n\nmodule.exports = PictMeadowEntityProvider;\n","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictTemplateProvider extends libFableServiceBase\n{\n\t/**\n\t * @param {Object} pFable - The Fable Framework instance\n\t * @param {Object} pOptions - The options for the service\n\t * @param {String} pServiceHash - The hash of the service\n\t */\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictTemplateProvider';\n\n\t\tthis.templates = {};\n\t\tthis.templateSources = {};\n\n\t\t// Default templates are stored by prefix.\n\t\t// The longest prefix match is used.\n\t\t// Case sensitive.\n\t\tthis.defaultTemplates = [];\n\n\t\t/**\n\t\t * @property {Function} loadTemplateFunction - The function to load a template\n\t\t */\n\t\tthis.loadTemplateFunction = () => { return false; };\n\t}\n\n\t/**\n\t * Add a template to the provider.\n\t *\n\t * @param {String} pTemplateHash - The hash of the template\n\t * @param {String} pTemplate - The template\n\t * @param {String} [pTemplateSource] - (optional) The source of the template\n\t */\n\taddTemplate(pTemplateHash, pTemplate, pTemplateSource)\n\t{\n\t\tthis.templates[pTemplateHash] = pTemplate;\n\n\t\tif (typeof(pTemplateSource) == 'string')\n\t\t{\n\t\t\tthis.templateSources[pTemplateHash] = pTemplateSource;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.templateSources[pTemplateHash] = `Direct addTemplate('${pTemplateHash}') function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`;\n\t\t}\n\t}\n\n\t/**\n\t * Add a default template to the provider.\n\t *\n\t * @param {String} pPrefix - The prefix of the template identifier.\n\t * @param {String} pPostfix - The postfix of the template identifier.\n\t * @param {String} pTemplate - The template\n\t * @param {String} [pSource] - (optional) The source of the template\n\t */\n\taddDefaultTemplate(pPrefix, pPostfix, pTemplate, pSource)\n\t{\n\t\tlet tmpSource = (typeof(pSource) == 'string') ? pSource : `Direct addDefaultTemplate('${pPrefix}','${pPostfix}',..) function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`\n\t\tlet tmpDefaultTemplate = {\n\t\t\tprefix: pPrefix,\n\t\t\tpostfix: pPostfix,\n\t\t\ttemplate: pTemplate,\n\t\t\tsource: tmpSource\n\t\t};\n\t\tif (typeof(pTemplate) != 'string')\n\t\t{\n\t\t\tthis.log.error('PictTemplateProvider.addDefaultTemplate: pTemplate is not a string.');\n\t\t}\n\t\tthis.defaultTemplates.push(tmpDefaultTemplate);\n\t}\n\n\t/**\n\t * Attempt to populate a template to a default template if it matches a given hash.\n\t *\n\t * Default templates are managed by postfix and prefix.  The use case is things like titles, headers, list\n\t * wrappers, rows, etc.\n\t *\n\t * So we might have a default template for a list wrapper and it should expect \"-ListWrap\" as the postfix.\n\t * And we might have a default template for a list row and it should expect \"-ListRow\" as the postfix.\n\t * The list might have a \"-ListTitle\", or we might have shared titles and it would just be \"-Title\".\n\t *\n\t * The idea is to allow fallbacks on defaults.\n\t *\n\t * @param {String} pTemplateHash - The hash of the template\n\t * @return {string} - The template, or false if not found\n\t */\n\tcheckDefaultTemplateHash(pTemplateHash)\n\t{\n\t\tfor (let i = 0; i < this.defaultTemplates.length; i++)\n\t\t{\n\t\t\tif ((pTemplateHash.indexOf(this.defaultTemplates[i].postfix) == pTemplateHash.length - this.defaultTemplates[i].postfix.length)\n\t\t\t\t&& (pTemplateHash.indexOf(this.defaultTemplates[i].prefix) == 0))\n\t\t\t{\n\t\t\t\tthis.templates[pTemplateHash] = this.defaultTemplates[i].template;\n\t\t\t\tthis.templateSources[pTemplateHash] = `Auto created in checkDefaultTemplateHash('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${this.defaultTemplates[i].prefix}]...[${this.defaultTemplates[i].postfix}]`;\n\t\t\t\treturn this.templates[pTemplateHash];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get a template by hash.\n\t *\n\t * @param {String} pTemplateHash - The hash of the template\n\t * @return {String} - The template, or false if not found\n\t */\n\tgetTemplate(pTemplateHash)\n\t{\n\t\t// TODO: Optimize this.\n\t\t// If the template doesn't exist, try to load it with the loading function\n\t\tif (!this.templates.hasOwnProperty(pTemplateHash))\n\t\t{\n\t\t\tthis.loadTemplate(pTemplateHash);\n\t\t}\n\t\t// If the loading function fails, try to load it from the default templates\n\t\tif (!this.templates.hasOwnProperty(pTemplateHash))\n\t\t{\n\t\t\tthis.checkDefaultTemplateHash(pTemplateHash);\n\t\t}\n\t\tif (this.templates.hasOwnProperty(pTemplateHash))\n\t\t{\n\t\t\treturn this.templates[pTemplateHash];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Load a template by hash.\n\t *\n\t * @param {String} pTemplateHash - The hash of the template\n\t */\n\tloadTemplate(pTemplateHash)\n\t{\n\t\tlet tmpTemplate = this.loadTemplateFunction(pTemplateHash);\n\n\t\tif (tmpTemplate)\n\t\t{\n\t\t\tthis.templates[pTemplateHash] = tmpTemplate.template;\n\t\t\tthis.templateSources[pTemplateHash] = `Loaded in loadTemplate('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${tmpTemplate.source}]`;\n\n\t\t}\n\n\t\treturn tmpTemplate;\n\t}\n}\n\nmodule.exports = PictTemplateProvider;\n","/**\n* @author <steven@velozo.com>\n*/\nconst libFable = require('fable');\nconst PictTemplateProvider = require('./Pict-Template-Provider.js');\nconst PictContentAssignment = require('./Pict-Content-Assignment.js');\nconst PictDataProvider = require('./Pict-DataProvider.js');\nconst PictCSS = require('./Pict-CSS.js');\nconst PictMeadowEntityProvider = require('./Pict-Meadow-EntityProvider.js');\n\n/**\n * Pict management object.\n */\nclass Pict extends libFable\n{\n\t/**\n\t * @param {Object} pSettings - The settings for the Pict instance.\n\t */\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\tthis.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n\n\t\t/**\n\t\t * The templateProvider provides a basic key->template mapping with default fallback capabilities\n\t\t *\n\t\t * @type {PictTemplateProvider}\n\t\t */\n\t\tthis.TemplateProvider = null;\n\t\tthis.addAndInstantiateServiceType('TemplateProvider', PictTemplateProvider);\n\t\t/**\n\t\t * The meadow entity provider.\n\t\t *\n\t\t * @type {PictMeadowEntityProvider}\n\t\t */\n\t\tthis.EntityProvider = null;\n\t\tthis.addAndInstantiateServiceType('EntityProvider', PictMeadowEntityProvider);\n\t\t/**\n\t\t * The data provider.\n\t\t *\n\t\t * @type {PictDataProvider}\n\t\t */\n\t\tthis.DataProvider = null;\n\t\tthis.addAndInstantiateServiceType('DataProvider', PictDataProvider);\n\t\t/**\n\t\t * The content assignment module.\n\t\t *\n\t\t * @type {PictContentAssignment}\n\t\t */\n\t\tthis.ContentAssignment = null;\n\t\tthis.addAndInstantiateServiceType('ContentAssignment', PictContentAssignment);\n\t\t/**\n\t\t * The CSS module.\n\t\t *\n\t\t * @type {PictCSS}\n\t\t * @public\n\t\t */\n\t\tthis.CSSMap = null;\n\t\tthis.addAndInstantiateServiceType('CSSMap', PictCSS);\n\n\t\tthis.instantiateServiceProvider('MetaTemplate');\n\t\tthis.instantiateServiceProvider('DataGeneration');\n\n\t\tthis.manifest = this.instantiateServiceProvider('Manifest');\n\n\t\tthis.AppData = {};\n\t\tthis.Bundle = {};\n\n\t\t// Log noisness goes from 0 - 5, where 5 is show me everything.\n\t\tthis.LogNoisiness = 0;\n\t\t// Although we have log noisiness, sometimes we need control flow without all the other noise for hard to diagnose interpreters.\n\t\tthis.LogControlFlow = false;\n\t\t// And an easy way to be introspective about data at various locations\n\t\tthis.LogControlFlowWatchAddressList = [];\n\n\t\t// Load manifest sets\n\t\tif (this.settings.Manifests)\n\t\t{\n\t\t\tthis.loadManifestSet(this.settings.Manifests);\n\t\t}\n\n\t\tthis._DefaultPictTemplatesInitialized = false;\n\t\tthis.initializePictTemplateEngine();\n\n\t\tthis.addServiceType('PictView', require('pict-view'));\n\t\tthis.addServiceType('PictProvider', require('pict-provider'));\n\t\tthis.addServiceType('PictApplication', require('pict-application'));\n\n\t\t// Expose the named views directly, through a convenience accessor\n\t\tthis.views = this.servicesMap.PictView;\n\t\tthis.providers = this.servicesMap.PictProvider;\n\t}\n\n\t/**\n\t * Load manifests in as Hashed services\n\t *\n\t * @param {Object} pManifestSet - The manifest set to load.\n\t */\n\tloadManifestSet(pManifestSet)\n\t{\n\t\tif (typeof(pManifestSet) != 'object')\n\t\t{\n\t\t\tthis.log.warn(`PICT [${this.UUID}] could not load Manifest Set; pManifestSet was not an object.`);\n\t\t\treturn false;\n\t\t}\n\t\tlet tmpManifestKeys = Object.keys(pManifestSet);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++ )\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.instantiateServiceProvider('Manifest', pManifestSet[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Just passing an options will construct one for us.\n\t * Passing a hash will set the hash.\n\t * Passing a prototype will use that!\n\t *\n\t * @param {String} pViewHash - The hash of the view.\n\t * @param {Object} pOptions - The options for the view.\n\t * @param {Object} pViewPrototype - The prototype for the view.\n\t */\n\taddView(pViewHash, pOptions, pViewPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpViewHash = (typeof(pViewHash) == 'string') ? pViewHash : this.fable.getUUID();\n\n\t\tif (this.LogControlFlow)\n\t\t{\n\t\t\tif (this.LogNoisiness > 1)\n\t\t\t{\n\t\t\t\tthis.log.info(`PICT-ControlFlow addView [${tmpViewHash}]:`, {Options:tmpOptions});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.log.info(`PICT-ControlFlow addView [${tmpViewHash}]`)\n\t\t\t}\n\t\t}\n\n\t\tif (typeof(pViewPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pViewPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, JSON.parse(JSON.stringify(pViewPrototype.default_configuration)), tmpOptions);\n\t\t\t}\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictView', tmpOptions, tmpViewHash, pViewPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictView', tmpOptions, tmpViewHash);\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddProvider(pProviderHash, pOptions, pProviderPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpProviderHash = (typeof(pProviderHash) == 'string') ? pProviderHash : this.fable.getUUID();\n\n\t\tif (this.LogControlFlow)\n\t\t{\n\t\t\tif (this.LogNoisiness > 1)\n\t\t\t{\n\t\t\t\tthis.log.info(`PICT-ControlFlow addProvider [${tmpProviderHash}]:`, {Options:tmpOptions});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.log.info(`PICT-ControlFlow addProvider [${tmpProviderHash}]`)\n\t\t\t}\n\t\t}\n\n\t\tif (typeof(pProviderPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pProviderPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pProviderPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictProvider', tmpOptions, tmpProviderHash, pProviderPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictProvider', tmpOptions, tmpProviderHash);\n\t\t}\n\t}\n\n\t/**\n\t * Just passing an options will construct one for us.\n\t * Passing a hash will set the hash.\n\t * Passing a prototype will use that!\n\t *\n\t * @param {String} pApplicationHash - The hash of the application.\n\t * @param {Object} pOptions - The options for the application.\n\t * @param {Object} pApplicationPrototype - The prototype for the application.\n\t */\n\taddApplication(pApplicationHash, pOptions, pApplicationPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpApplicationHash = (typeof(pApplicationHash) == 'string') ? pApplicationHash : this.fable.getUUID();\n\n\t\tif (this.LogControlFlow)\n\t\t{\n\t\t\tif (this.LogNoisiness > 1)\n\t\t\t{\n\t\t\t\tthis.log.info(`PICT-ControlFlow addApplication [${tmpApplicationHash}]:`, {Options:tmpOptions});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.log.info(`PICT-ControlFlow addApplication [${tmpApplicationHash}]`)\n\t\t\t}\n\t\t}\n\n\t\tif (typeof(pApplicationPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pApplicationPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pApplicationPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictApplication', tmpOptions, tmpApplicationHash, pApplicationPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictApplication', tmpOptions, tmpApplicationHash);\n\t\t}\n\t}\n\n\t/**\n\t * Attach the default template engine renderers.\n\t *\n\t * @private\n\t */\n\tinitializePictTemplateEngine()\n\t{\n\t\t/*\n\t\t *\n\t\t * To stave off madness, these are inefficient for now.  The wkhtmltopdf renderer leaves much to be desired\n\t\t * in the way of feedback with regards to javascript compatibility.\n\t\t *\n\t\t */\n\t\tif (!this._DefaultPictTemplatesInitialized)\n\t\t{\n\t\t\t// Expects one of the following:\n\t\t\t// \t\t{~E:Book^AppData.Some.Address.IDBook^Render-Book-Template~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook and render it to Render-Book-Template\n\t\t\tlet fEntityRender = (pHash, pData, fCallback, pContextArray) =>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpEntity = false;\n\t\t\t\t\tlet tmpEntityID = false;\n\t\t\t\t\tlet tmpEntityTemplate = false;\n\n\t\t\t\t\t// This expression requires 2 parts -- a third is optional, and, if present, is the template to render to.\n\t\t\t\t\tlet tmpAddressParts = tmpHash.split('^');\n\n\t\t\t\t\tif (tmpAddressParts.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpEntity = tmpAddressParts[0].trim();\n\t\t\t\t\ttmpEntityID = tmpAddressParts[1].trim();\n\t\t\t\t\ttmpEntityTemplate = tmpAddressParts[2].trim();\n\n\t\t\t\t\tif (!isNaN(tmpEntityID))\n\t\t\t\t\t{\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpEntityID = parseInt(tmpEntityID);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Could not parse entity ID.`);\n\t\t\t\t\t\t\ttmpEntityID = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is an address, so we need to get the value at the address\n\t\t\t\t\t\ttmpEntityID = this.resolveStateFromAddress(tmpEntityID, tmpData, pContextArray);\n\t\t\t\t\t}\n\n\t\t\t\t\t// No Entity or EntityID\n\t\t\t\t\tif (!tmpEntity || !tmpEntityID)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]  Entity: ${tmpEntity} ID: ${tmpEntityID}`);\n\t\t\t\t\t\treturn tmpCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]  Entity: ${tmpEntity} ID: ${tmpEntityID}`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`Pict: Entity Render: Entity [${tmpEntity}] with ID [${tmpEntityID}] as template [${tmpEntityTemplate}] from [${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to get the entity\n\t\t\t\t\tthis.EntityProvider.getEntity(tmpEntity, tmpEntityID,\n\t\t\t\t\t\tfunction (pError, pRecord)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Pict: Entity Render: Error getting entity [${tmpEntity}] with ID [${tmpEntityID}] for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Now render the template\n\t\t\t\t\t\t\tif (tmpEntityTemplate)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpEntityTemplate, pRecord, tmpCallback, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn tmpCallback(null, '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(this));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternAsync('{~E:', '~}', fEntityRender);\n\t\t\tthis.MetaTemplate.addPatternAsync('{~Entity:', '~}', fEntityRender);\n\n\t\t\t// {~T:Template:AddressOfData~}\n\t\t\tlet fTemplateRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData, null, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray), null, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateRenderAsync = (pHash, pData, fCallback, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render Async: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render Async: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray),\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~T:', '~}', fTemplateRender, fTemplateRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~Template:', '~}', fTemplateRender, fTemplateRenderAsync);\n\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateSetRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray), pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateSetRenderAsync = (pHash, pData, fCallback, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0]\n\t\t\t\t\ttmpAddressOfData = tmpTemplateHashPart[1];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\ttmpData = this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray);\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TS:', '~}', fTemplateSetRender, fTemplateSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateSet:', '~}', fTemplateSetRender, fTemplateSetRenderAsync);\n\n\t\t\t// {~TemplateIfAbsolute:Template:AddressOfData:AppData.Some.Address.IDBook^OPERATOR^Absolute_Value~}\n\t\t\t// {~TIfAbs:Template:AddressOfData:AppData.Some.Address.IDBook^OPERATOR^Absolute_Value~}\n\t\t\tlet compareValues = (pValueLeft, pOperator, pValueRight)=>\n\t\t\t{\n\t\t\t\tswitch(pOperator)\n\t\t\t\t{\n\t\t\t\t\tcase 'TRUE':\n\t\t\t\t\t\treturn (pValueLeft === true);\n\t\t\t\t\tcase 'FALSE':\n\t\t\t\t\t\treturn (pValueLeft === false);\n\t\t\t\t\tcase 'LNGT':\n\t\t\t\t\tcase 'LENGTH_GREATER_THAN':\n\t\t\t\t\t\tswitch(typeof(pValueLeft))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'string':\n\t\t\t\t\t\t\t\treturn (pValueLeft.length > pValueRight);\n\t\t\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t\t\treturn (pValueLeft.length > pValueRight);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'LNLT':\n\t\t\t\t\tcase 'LENGTH_LESS_THAN':\n\t\t\t\t\t\tswitch(typeof(pValueLeft))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'string':\n\t\t\t\t\t\t\t\treturn (pValueLeft.length < pValueRight);\n\t\t\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t\t\treturn (pValueLeft.length < pValueRight);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase '!=':\n\t\t\t\t\t\treturn (pValueLeft != pValueRight);\n\t\t\t\t\tcase '<':\n\t\t\t\t\t\treturn (pValueLeft < pValueRight);\n\t\t\t\t\tcase '>':\n\t\t\t\t\t\treturn (pValueLeft > pValueRight);\n\t\t\t\t\tcase '<=':\n\t\t\t\t\t\treturn (pValueLeft <= pValueRight);\n\t\t\t\t\tcase '>=':\n\t\t\t\t\t\treturn (pValueLeft >= pValueRight);\n\t\t\t\t\tcase '===':\n\t\t\t\t\t\treturn (pValueLeft === pValueRight);\n\t\t\t\t\tcase '==':\n\t\t\t\t\t\treturn (pValueLeft == pValueRight);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet fTemplateIfAbsoluteValueRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateIfAbsoluteValueRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateIfAbsoluteValueRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\t\t\t\t\tlet tmpComparisonOperation = false;\n\n\t\t\t\t\tlet tmpHashParts = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpHashParts.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template If Absolute Value Render: TemplateHash not complete for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template If Absolute Value Render: TemplateHash not complete for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateHash = tmpHashParts[0];\n\t\t\t\t\ttmpAddressOfData = tmpHashParts[1];\n\t\t\t\t\ttmpComparisonOperation = tmpHashParts[2];\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\t\t\t\t\t// No comparison operation\n\t\t\t\t\tif (!tmpComparisonOperation)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: Comparison Operation not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: Comparison Operation not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to break the comparison into three parts...\n\t\t\t\t\tlet tmpComparisonParts = tmpComparisonOperation.split('^');\n\t\t\t\t\tif (tmpComparisonParts.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: Comparison Operation not complete (three parts expected) for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: Comparison Operation not complete (three parts expected) for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now look up the data at the comparison location\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpComparisonResult = compareValues(this.resolveStateFromAddress(tmpComparisonParts[0], tmpData, pContextArray), tmpComparisonParts[1], tmpComparisonParts[2]);\n\t\t\t\t\t\tif (!tmpComparisonResult)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData, null, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray), null, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`Pict: Template Render: Error looking up comparison data for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\treturn `Pict: Template Render: Error looking up comparison data for [${tmpHash}]: ${pError}`;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateIfAbsoluteValueRenderAsync = (pHash, pData, fCallback, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateIfAbsoluteValueRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateIfAbsoluteValueRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\t\t\t\t\tlet tmpComparisonOperation = false;\n\n\t\t\t\t\tlet tmpHashParts = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpHashParts.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template If Absolute Value Render: TemplateHash not complete for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(new Error(`Pict: Template If Absolute Value Render: TemplateHash not complete for [${tmpHash}]`));\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateHash = tmpHashParts[0];\n\t\t\t\t\ttmpAddressOfData = tmpHashParts[1];\n\t\t\t\t\ttmpComparisonOperation = tmpHashParts[2];\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(new Error(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`));\n\t\t\t\t\t}\n\t\t\t\t\t// No comparison operation\n\t\t\t\t\tif (!tmpComparisonOperation)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: Comparison Operation not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(new Error(`Pict: Template Render: Comparison Operation not resolved for [${tmpHash}]`));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to break the comparison into three parts...\n\t\t\t\t\tlet tmpComparisonParts = tmpComparisonOperation.split('^');\n\t\t\t\t\tif (tmpComparisonParts.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: Comparison Operation not complete (three parts expected) for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(new Error(`Pict: Template Render: Comparison Operation not complete (three parts expected) for [${tmpHash}]`));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now look up the data at the comparison location\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpComparisonResult = compareValues(this.resolveStateFromAddress(tmpComparisonParts[0], tmpData, pContextArray), tmpComparisonParts[1], tmpComparisonParts[2]);\n\t\t\t\t\t\tif (!tmpComparisonResult)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn tmpCallback(null, '');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData,\n\t\t\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray),\n\t\t\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`Pict: Template Render: Error looking up comparison data for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t// {~TemplateIfAbsolute:Template:AddressOfData:AppData.Some.Address.IDBook^OPERATOR^Absolute_Value~}\n\t\t\t// {~TIfAbs:Template:AddressOfData:AppData.Some.Address.IDBook^OPERATOR^Absolute_Value~}\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateIfAbsolute:', '~}', fTemplateIfAbsoluteValueRender, fTemplateIfAbsoluteValueRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TIfAbs:', '~}', fTemplateIfAbsoluteValueRender, fTemplateIfAbsoluteValueRenderAsync);\n\n\t\t\tlet fTemplateIfRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateIfAbsoluteValueRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateIfAbsoluteValueRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\t\t\t\t\tlet tmpComparisonOperation = false;\n\n\t\t\t\t\tlet tmpHashParts = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpHashParts.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template If Absolute Value Render: TemplateHash not complete for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template If Absolute Value Render: TemplateHash not complete for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateHash = tmpHashParts[0];\n\t\t\t\t\ttmpAddressOfData = tmpHashParts[1];\n\t\t\t\t\ttmpComparisonOperation = tmpHashParts[2];\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\t\t\t\t\t// No comparison operation\n\t\t\t\t\tif (!tmpComparisonOperation)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: Comparison Operation not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: Comparison Operation not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to break the comparison into three parts...\n\t\t\t\t\tlet tmpComparisonParts = tmpComparisonOperation.split('^');\n\t\t\t\t\tif (tmpComparisonParts.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: Comparison Operation not complete (three parts expected) for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: Comparison Operation not complete (three parts expected) for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now look up the data at the comparison location\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpComparisonResult = compareValues(\n\t\t\t\t\t\t\t\tthis.resolveStateFromAddress(tmpComparisonParts[0], tmpData, pContextArray),\n\t\t\t\t\t\t\t\ttmpComparisonParts[1],\n\t\t\t\t\t\t\t\tthis.resolveStateFromAddress(tmpComparisonParts[2], tmpData, pContextArray));\n\n\t\t\t\t\t\tif (!tmpComparisonResult)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData, null, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray), null, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`Pict: Template Render: Error looking up comparison data for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\treturn `Pict: Template Render: Error looking up comparison data for [${tmpHash}]: ${pError}`;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateIfRenderAsync = (pHash, pData, fCallback, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateIfAbsoluteValueRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateIfAbsoluteValueRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\t\t\t\t\tlet tmpComparisonOperation = false;\n\n\t\t\t\t\tlet tmpHashParts = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpHashParts.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template If Absolute Value Render: TemplateHash not complete for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(new Error(`Pict: Template If Absolute Value Render: TemplateHash not complete for [${tmpHash}]`));\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateHash = tmpHashParts[0];\n\t\t\t\t\ttmpAddressOfData = tmpHashParts[1];\n\t\t\t\t\ttmpComparisonOperation = tmpHashParts[2];\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(new Error(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`));\n\t\t\t\t\t}\n\t\t\t\t\t// No comparison operation\n\t\t\t\t\tif (!tmpComparisonOperation)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: Comparison Operation not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(new Error(`Pict: Template Render: Comparison Operation not resolved for [${tmpHash}]`));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to break the comparison into three parts...\n\t\t\t\t\tlet tmpComparisonParts = tmpComparisonOperation.split('^');\n\t\t\t\t\tif (tmpComparisonParts.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: Comparison Operation not complete (three parts expected) for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(new Error(`Pict: Template Render: Comparison Operation not complete (three parts expected) for [${tmpHash}]`));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now look up the data at the comparison location\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the only thing that's different from the absolute value function above.  Collapse these.\n\t\t\t\t\t\tlet tmpComparisonResult = compareValues(\n\t\t\t\t\t\t\t\tthis.resolveStateFromAddress(tmpComparisonParts[0], tmpData, pContextArray),\n\t\t\t\t\t\t\t\ttmpComparisonParts[1],\n\t\t\t\t\t\t\t\tthis.resolveStateFromAddress(tmpComparisonParts[2], tmpData, pContextArray));\n\n\t\t\t\t\t\tif (!tmpComparisonResult)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn tmpCallback(null, '');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData,\n\t\t\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray),\n\t\t\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`Pict: Template Render: Error looking up comparison data for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t// {~TemplateIf:Template:AddressOfData:AppData.Some.Address.IDBook^OPERATOR^AppData.Some.Address2.IDBook~}\n\t\t\t// {~TIf:Template:AddressOfData:AppData.Some.Address.IDBook^OPERATOR^AppData.Some.Address2.IDBook~}\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateIf:', '~}', fTemplateIfRender, fTemplateIfRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TIf:', '~}', fTemplateIfRender, fTemplateIfRenderAsync);\n\n// Refactor: #### DRY PROBLEM Too much dry needing fixed at this point\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateValueSetRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray);\n\n\t\t\t\t\tlet tmpDataValueSet = [];\n\t\t\t\t\tif (Array.isArray(tmpData))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < tmpData.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[i]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof(tmpData) === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueKeys = Object.keys(tmpData);\n\t\t\t\t\t\tfor (let i = 0; i < tmpValueKeys.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[tmpValueKeys[i]]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData});\n\t\t\t\t\t}\n\t\t\t\t\ttmpData = tmpDataValueSet;\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, tmpData, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateValueSetRenderAsync = (pHash, pData, fCallback, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0]\n\t\t\t\t\ttmpAddressOfData = tmpTemplateHashPart[1];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\ttmpData = this.resolveStateFromAddress(tmpAddressOfData, tmpData, pContextArray);\n\n\t\t\t\t\tlet tmpDataValueSet = [];\n\t\t\t\t\tif (Array.isArray(tmpData))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < tmpData.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[i]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof(tmpData) === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueKeys = Object.keys(tmpData);\n\t\t\t\t\t\tfor (let i = 0; i < tmpValueKeys.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[tmpValueKeys[i]]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData});\n\t\t\t\t\t}\n\t\t\t\t\ttmpData = tmpDataValueSet;\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TVS:', '~}', fTemplateValueSetRender, fTemplateValueSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateValueSet:', '~}', fTemplateValueSetRender, fTemplateValueSetRenderAsync);\n\n\t\t\t// {~T:TemplateFromMap:AddressOfData~}\n\t\t\tlet fTemplateFromMapRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.resolveStateFromAddress(tmpAddressOfMap, tmpData, pContextArray);\n\t\t\t\t\tlet tmpKey = this.resolveStateFromAddress(tmpAddressOfKey, tmpData, pContextArray);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, pData, null, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, tmpData, null, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateFromMapRenderAsync = (pHash, pData, fCallback, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.resolveStateFromAddress(tmpAddressOfMap, tmpData, pContextArray);\n\t\t\t\t\tlet tmpKey = this.resolveStateFromAddress(tmpAddressOfKey, tmpData, pContextArray);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from TemplateFromMaps\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TFM:', '~}', fTemplateFromMapRender, fTemplateFromMapRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateFromMap:', '~}', fTemplateFromMapRender, fTemplateFromMapRenderAsync);\n\n\t\t\t// {~TS:TemplateFromMap:AddressOfDataSet~}\n\t\t\tlet fTemplateFromMapSetRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.resolveStateFromAddress(tmpAddressOfMap, tmpData, pContextArray);\n\t\t\t\t\tlet tmpKey = this.resolveStateFromAddress(tmpAddressOfKey, tmpData, pContextArray);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateFromMapSetRenderAsync = (pHash, pData, fCallback, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMapSet Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.resolveStateFromAddress(tmpAddressOfMap, tmpData, pContextArray);\n\t\t\t\t\tlet tmpKey = this.resolveStateFromAddress(tmpAddressOfKey, tmpData, pContextArray);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMapSet Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from TemplateFromMaps\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t}, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TSFM:', '~}', fTemplateFromMapSetRender, fTemplateFromMapSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateSetFromMap:', '~}', fTemplateFromMapSetRender, fTemplateFromMapSetRenderAsync);\n\n\t\t\t// {~DataTree:AppData.Some.Value.to.Render~}\n\t\t\tlet fDataValueTree = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\ttmpData.TemplateHash = pHash.trim();\n\n\t\t\t\t\ttmpData.ValueTreeParameters = tmpData.TemplateHash.split('^');\n\t\t\t\t\tif (tmpData.ValueTreeParameters.length < 1)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\ttmpData.ResolvedValue = this.resolveStateFromAddress(tmpData.ValueTreeParameters[0], tmpData, pContextArray);\n\t\t\t\t\ttmpData.ResolvedValueType = typeof(tmpData.ResolvedValue);\n\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpData.TreeMaxDepth = (tmpData.ValueTreeParameters.length < 2) ? 1 : parseInt(tmpData.ValueTreeParameters[1]);\n\t\t\t\t\t}\n\t\t\t\t\tcatch\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpData.TreeMaxDepth = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpPictObjectWrapTemplate = this.TemplateProvider.getTemplate('PICT-Object-Wrap');\n\t\t\t\t\tif (!tmpPictObjectWrapTemplate)\n\t\t\t\t\t{\n\t\t\t\t\t\t// This template is here because it is a default template.  Users can override this template by providing their own as PICT-Object-Wrap\n\t\t\t\t\t\ttmpPictObjectWrapTemplate = `<div class=\"PICT PICTObjectSet\">{~D:Record.ObjectValueTree~}</div>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tmpData.ResolvedValueType == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpData.ObjectValueTree = fDataValueTreeObjectSet(tmpData.ResolvedValue, tmpData.ResolvedValue, 0, tmpData.TreeMaxDepth, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value Tree: [${tmpData.TemplateHash}] resolved data is not an object.`, tmpData.ResolvedValue);\n\t\t\t\t\t\ttmpData.ObjectValueTree = tmpData.ResolveValue;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.parseTemplate(tmpPictObjectWrapTemplate, tmpData, pContextArray);\n\t\t\t\t};\n\t\t\tlet fDataValueTreeObjectSet = (pObject, pRootObject, pCurrentDepth, pMaxDepth, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpTemplateResult = '';\n\n\t\t\t\t\tif (typeof(pObject) !== 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpTemplateResult;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectValueKeys = Object.keys(pObject);\n\n\t\t\t\t\tlet tmpPictObjectBranchTemplate = this.TemplateProvider.getTemplate('PICT-Object-Branch');\n\t\t\t\t\tif (!tmpPictObjectBranchTemplate)\n\t\t\t\t\t{\n\t\t\t\t\t\t// This template is here because it is a default template.  Users can override this template by providing their own as PICT-Object-Branch\n\t\t\t\t\t\ttmpPictObjectBranchTemplate = `\n<div class=\"PICTObjectBranchDepth_{~D:Record.CurrentDepth~}\"><div class=\"PICTObjectBranch\">{~D:Record.BranchKey~}</div><div class=\"PICTObjectBranchValue\">{~D:Record.BranchValue~}</div></div>\n`\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectValueKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpBranchType = typeof(pObject[tmpObjectValueKeys[i]]);\n\n\t\t\t\t\t\tlet tmpBranchValue = '';\n\n\t\t\t\t\t\tswitch(tmpBranchType)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t\t\tif (pCurrentDepth + 1 > pMaxDepth)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmpBranchValue = '...';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmpBranchValue = fDataValueTreeObjectSet(pObject[tmpObjectValueKeys[i]], pRootObject, pCurrentDepth + 1, pMaxDepth, pContextArray);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\ttmpBranchValue = pObject[tmpObjectValueKeys[i]];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpDataValue =\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tAppData:this.AppData,\n\t\t\t\t\t\t\t\tBundle:this.Bundle,\n\n\t\t\t\t\t\t\t\tRootContainer:pRootObject,\n\n\t\t\t\t\t\t\t\tContainer:pObject,\n\t\t\t\t\t\t\t\tBranchEntryCount:tmpObjectValueKeys.length,\n\n\t\t\t\t\t\t\t\tBranchIndex:i,\n\t\t\t\t\t\t\t\tBranchKey: tmpObjectValueKeys[i],\n\t\t\t\t\t\t\t\tBranchValue: tmpBranchValue,\n\t\t\t\t\t\t\t\tBranchDataType: tmpBranchType,\n\n\t\t\t\t\t\t\t\tCurrentDepth: pCurrentDepth,\n\t\t\t\t\t\t\t\tMaxDepth: pMaxDepth\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\ttmpTemplateResult += this.parseTemplate(tmpPictObjectBranchTemplate, tmpDataValue, pContextArray);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpTemplateResult;\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~DataTree:', '~}',fDataValueTree);\n\t\t\tthis.MetaTemplate.addPattern('{~DT:', '~}',fDataValueTree);\n\n\t\t\t//{~Data:AppData.Some.Value.to.Render~}\n\t\t\tlet fDataRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = '';\n\t\t\t\t\tif (tmpHash != null)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue = this.resolveStateFromAddress(tmpHash, tmpData, pContextArray);\n\t\t\t\t\t}\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn tmpValue;\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~D:', '~}', fDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Data:', '~}', fDataRender);\n\n\t\t\t//<p>{~Join: - ^Record.d1^Record.d1~}</p>\n\t\t\tlet fJoinDataRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash;\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDataAddresses = tmpHash.split('^');\n\t\t\t\t\tif (tmpDataAddresses.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get the separator string\n\t\t\t\t\tlet tmpSeparator = tmpDataAddresses.shift();\n\n\t\t\t\t\tlet tmpValueList = [];\n\t\t\t\t\tfor (let i = 0; i < tmpDataAddresses.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueSet = this.resolveStateFromAddress(tmpDataAddresses[i], tmpData, pContextArray);\n\t\t\t\t\t\tif (tmpValueSet && Array.isArray(tmpValueSet))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (let j = 0; j < tmpValueSet.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValueList.push(tmpValueSet[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (tmpValueSet)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpValueList.push(tmpValueSet);\n\t\t\t\t\t\t}\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpValueList.join(tmpSeparator);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~J:', '~}', fJoinDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Join:', '~}', fJoinDataRender);\n\t\t\t//<p>{~JoinUnique: - ^Record.d1^Record.d1~}</p>\n\t\t\tlet fJoinUniqueDataRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash;\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join Unique [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join Unique [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDataAddresses = tmpHash.split('^');\n\t\t\t\t\tif (tmpDataAddresses.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get the separator string\n\t\t\t\t\tlet tmpSeparator = tmpDataAddresses.shift();\n\n\t\t\t\t\tlet tmpValueList = [];\n\t\t\t\t\tlet tmpValueMap = {};\n\t\t\t\t\tfor (let i = 0; i < tmpDataAddresses.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueSet = this.resolveStateFromAddress(tmpDataAddresses[i], tmpData, pContextArray);\n\n\t\t\t\t\t\tif (tmpValueSet && Array.isArray(tmpValueSet))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (let j = 0; j < tmpValueSet.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!tmpValueMap.hasOwnProperty(tmpValueSet[j]))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmpValueMap[tmpValueSet[j]] = true;\n\t\t\t\t\t\t\t\t\ttmpValueList.push(tmpValueSet[j]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (tmpValueSet)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!tmpValueMap.hasOwnProperty(tmpValueSet))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValueMap[tmpValueSet] = true;\n\t\t\t\t\t\t\t\ttmpValueList.push(tmpValueSet);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpValueList.join(tmpSeparator);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~JU:', '~}', fJoinUniqueDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~JoinUnique:', '~}', fJoinUniqueDataRender);\n\n\t\t\tthis.MetaTemplate.addPattern('{~Dollars:', '~}',\n\t\t\t\t(pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.resolveStateFromAddress(tmpHash, tmpData, pContextArray);\n\t\t\t\t\treturn this.DataFormat.formatterDollars(tmpColumnData);\n\t\t\t\t});\n\t\t\tthis.MetaTemplate.addPattern('{~Digits:', '~}',\n\t\t\t\t(pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.resolveStateFromAddress(tmpHash, tmpData, pContextArray);\n\t\t\t\t\treturn this.DataFormat.formatterAddCommasToNumber(this.DataFormat.formatterRoundNumber(tmpColumnData, 2));\n\t\t\t\t});\n\n\t\t\t// Output the date as a YYYY-MM-DD string\n\t\t\tthis.MetaTemplate.addPattern('{~DateYMD:', '~}',\n\t\t\t\t(pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpDateValue = this.resolveStateFromAddress(tmpHash, tmpData, pContextArray);\n\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: Modularize this\n\t\t\t\t\tlet tmpDayJS = this.fable.Dates.dayJS.utc(tmpDateValue);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Try to cast the day to be a specific timezone if one is set for the app\n\t\t\t\t\t\tif (this.options.Timezone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.options.Timezone);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Error guessing dayJS guess() function; dates may be formatted to GMT by default. (${pError.message || pError})`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch\n\t\t\t\t\t{\n\t\t\t\t\t\t//this.log.error(`Error casting timezone using tz .. casting to the browser guess which is [${this.fable.Dates.dayJS.tz.guess()}].`);\n\t\t\t\t\t\t// Day.js will try to guess the user's timezone for us\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Error guessing dayJS guess() function; dates may be formatted to GMT by default. (${pError.message || pError})`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpDayJS.format('YYYY-MM-DD');\n\t\t\t\t});\n\n\t\t\t// Output the date as a YYYY-MM-DD string\n\t\t\t// Takes in the format as the second parameter: {~DateYMD:AppData.Some.Date^YYYY-MM-DD~}\n\t\t\tthis.MetaTemplate.addPattern('{~DateFormat:', '~}',\n\t\t\t\t(pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpDateValueSet = tmpHash.split('^');\n\n\t\t\t\t\tif (tmpDateValueSet.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PICT Template [fDateFormat]::[${tmpHash}] did not have a valid format string and date.`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDateValue = this.resolveStateFromAddress(tmpDateValueSet[0], tmpData, pContextArray);\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: Modularize this\n\t\t\t\t\tlet tmpDayJS = this.fable.Dates.dayJS.utc(tmpDateValue);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Try to cast the day to be a specific timezone if one is set for the app\n\t\t\t\t\t\tif (this.options.Timezone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.options.Timezone);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Error guessing dayJS guess() function; dates may be formatted to GMT by default. (${pError.message || pError})`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch\n\t\t\t\t\t{\n\t\t\t\t\t\t//this.log.error(`Error casting date passed timezone using tz .. casting to the browser guess which is [${this.fable.Dates.dayJS.tz.guess()}].`);\n\t\t\t\t\t\t// Day.js will try to guess the user's timezone for us\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Error guessing dayJS guess() function; dates may be formatted to GMT by default. (${pError.message || pError})`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpDayJS.format(tmpDateValueSet[1]);\n\t\t\t\t});\n\t\t\t// {NE~Some.Address|If the left value is truthy, render this value.~}\n\t\t\tlet fNotEmptyRender = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Should switch this to indexOf so pipes can be in the content.\n\t\t\t\t\tlet tmpHashParts = tmpHash.split('|');\n\n\t\t\t\t\t// For now just check truthiness\n\t\t\t\t\tif (this.resolveStateFromAddress(tmpHashParts[0], tmpData, pContextArray))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpHashParts[1];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~NotEmpty:', '~}', fNotEmptyRender);\n\t\t\tthis.MetaTemplate.addPattern('{~NE:', '~}', fNotEmptyRender);\n\n\t\t\tlet fRandomNumberString = (pHash)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumberString]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpStringLength = 4;\n\t\t\t\t\tlet tmpMaxNumber = 9999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpStringLength = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpStringLength = 4;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpMaxNumber = 9999;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomNumericString(tmpStringLength, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumberString:', '~}',fRandomNumberString);\n\t\t\tthis.MetaTemplate.addPattern('{~RNS:', '~}',fRandomNumberString);\n\n\t\t\tlet fRandomNumber = (pHash)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumber]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpMinimumNumber = 0;\n\t\t\t\t\tlet tmpMaxNumber = 9999999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpMinimumNumber = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpMinimumNumber = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpMaxNumber = 9999999;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomIntegerBetween(tmpMinimumNumber, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumber:', '~}',fRandomNumber);\n\t\t\tthis.MetaTemplate.addPattern('{~RN:', '~}',fRandomNumber);\n\n\t\t\tlet fPascalCaseIdentifier = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.resolveStateFromAddress(tmpHash, tmpData, pContextArray);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn this.DataFormat.cleanNonAlphaCharacters(this.DataFormat.capitalizeEachWord(tmpValue));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~PascalCaseIdentifier:', '~}',fPascalCaseIdentifier);\n\n\t\t\tlet fLogValue = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tlet tmpValue = this.resolveStateFromAddress(tmpHash, tmpData, pContextArray);\n\t\t\t\t\tlet tmpValueType = typeof(tmpValue);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValueType == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is ${tmpValueType}.`);\n\t\t\t\t\t}\n\t\t\t\t\telse if (tmpValueType == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is an object.`, tmpValue);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is a ${tmpValueType} = [${tmpValue}]`);\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogValue:', '~}',fLogValue);\n\t\t\tthis.MetaTemplate.addPattern('{~LV:', '~}',fLogValue);\n\n\n\t\t\tlet fLogValueTree = (pHash, pData, pContextArray)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\ttmpData.TemplateHash = pHash.trim();\n\n\t\t\t\t\ttmpData.ValueTreeParameters = tmpData.TemplateHash.split('^');\n\t\t\t\t\tif (tmpData.ValueTreeParameters.length < 1)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\ttmpData.ResolvedValue = this.resolveStateFromAddress(tmpData.ValueTreeParameters[0], tmpData, pContextArray);\n\t\t\t\t\ttmpData.ResolvedValueType = typeof(tmpData.ResolvedValue);\n\n\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpData.TreeMaxDepth = (tmpData.ValueTreeParameters.length < 2) ? 1 : parseInt(tmpData.ValueTreeParameters[1]);\n\t\t\t\t\t}\n\t\t\t\t\tcatch\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpData.TreeMaxDepth = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tmpData.ResolvedValueType == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tfLogValueTreeObjectSet(tmpData.ResolvedValue, tmpData.ValueTreeParameters[0], tmpData.ResolvedValue, 0, tmpData.TreeMaxDepth);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value Tree: [${tmpData.TemplateHash}] resolved data is not an object.`, tmpData.ResolvedValue);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tlet fLogValueTreeObjectSet = (pObject, pBaseAddress, pRootObject, pCurrentDepth, pMaxDepth)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpTemplateResult = '';\n\n\t\t\t\t\tif (typeof(pObject) !== 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpTemplateResult;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectValueKeys = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectValueKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpBranchType = typeof(pObject[tmpObjectValueKeys[i]]);\n\t\t\t\t\t\tlet tmpBranchValue = '';\n\n\t\t\t\t\t\tswitch(tmpBranchType)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t\t\ttmpBranchValue = '...';\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\ttmpBranchValue = pObject[tmpObjectValueKeys[i]];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.log.trace(`[${pBaseAddress}.${tmpObjectValueKeys[i]}] (${tmpBranchType}):  ${tmpBranchValue}`);\n\n\t\t\t\t\t\tif (pCurrentDepth + 1 > pMaxDepth)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (tmpBranchType == 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpBranchValue = fLogValueTreeObjectSet(pObject[tmpObjectValueKeys[i]], `${pBaseAddress}.${tmpObjectValueKeys[i]}`, pRootObject, pCurrentDepth + 1, pMaxDepth);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogValueTree:', '~}',fLogValueTree);\n\t\t\tthis.MetaTemplate.addPattern('{~LVT:', '~}',fLogValueTree);\n\n\t\t\tlet fLogStatement = (pHash)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tthis.log.trace(`PICT Template Log Message: ${tmpHash}`);\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogStatement:', '~}',fLogStatement);\n\t\t\tthis.MetaTemplate.addPattern('{~LS:', '~}',fLogStatement);\n\n\t\t\tlet fBreakpoint = (pHash)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpError = new Error(`PICT Template Breakpoint: ${tmpHash}`);\n\t\t\t\t\tthis.log.trace(`PICT Template Breakpoint: ${tmpHash}`, tmpError.stack);\n\t\t\t\t\tdebugger; // eslint-disable-line no-debugger\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~Breakpoint', '~}',fBreakpoint);\n\n\t\t\tthis._DefaultPictTemplatesInitialized = true;\n\t\t}\n\t}\n\n\t/**\n\t * Read a value from a nested object using a dot notation string.\n\t *\n\t * @param {string} pAddress - The address to resolve\n\t * @param {object} pRecord - The record to resolve\n\t * @param {Array<any>} pContextArray - The context array to resolve\n\t *\n\t * @returns {any} The value at the given address, or undefined\n\t */\n\tresolveStateFromAddress(pAddress, pRecord, pContextArray)\n\t{\n\t\tlet tmpContextArray = (Array.isArray(pContextArray)) ? pContextArray : [this];\n\n\t\treturn this.manifest.getValueByHash({Pict:this, AppData:this.AppData, Bundle:this.Bundle, Context:tmpContextArray, Record:pRecord}, pAddress);\n\t}\n\n\t/**\n\t * Parse a template.\n\t *\n\t * @param {String} pTemplateString - The template string to parse\n\t * @param {Object} pData - The data to use in the template\n\t * @param {Function} fCallback - The callback to call when the template is parsed\n\t * @param {Array<any>} pContextArray - The context array to use in the template\n\t */\n\tparseTemplate(pTemplateString, pData, fCallback, pContextArray)\n\t{\n\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\tlet tmpContextArray = (Array.isArray(pContextArray)) ? pContextArray : [this];\n\t\tlet tmpParseUUID;\n\t\tif (this.LogControlFlow)\n\t\t{\n\t\t\ttmpParseUUID = this.fable.getUUID();\n\t\t\tthis.log.info(`PICT-ControlFlow parseTemplate ${tmpParseUUID} [${pTemplateString.substring(0, 50).replace('\\n', '\\\\n')}...${pTemplateString.length}] (fCallback: ${typeof(fCallback)}) with data size [${JSON.stringify(tmpData).length}]`);\n\t\t\tif (this.LogNoisiness > 1)\n\t\t\t{\n\t\t\t\tthis.log.info(`PICT-ControlFlow parseTemplate ${tmpParseUUID} template:\\n${pTemplateString}`);\n\t\t\t}\n\t\t\tif (this.LogControlFlowWatchAddressList.length > 0)\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < this.LogControlFlowWatchAddressList.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.log.info(`PICT-ControlFlow parseTemplate ${tmpParseUUID} Watch Value: [${this.LogControlFlowWatchAddressList[i]}]=>[${this.resolveStateFromAddress(this.LogControlFlowWatchAddressList[i], tmpData)}]`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof(fCallback) === 'function')\n\t\t{\n\t\t\tthis.MetaTemplate.parseString(pTemplateString, tmpData,\n\t\t\t\t(pError, pParsedTemplate) =>\n\t\t\t\t{\n\t\t\t\t\tif (this.LogControlFlow && this.LogNoisiness > 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.info(`PICT-ControlFlow parseTemplate ${tmpParseUUID} Template Async Return Value:\\n${pParsedTemplate}`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallback(pError, pParsedTemplate);\n\t\t\t\t}, tmpContextArray);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpResult = this.MetaTemplate.parseString(pTemplateString, tmpData, null, tmpContextArray);\n\t\t\tif (this.LogControlFlow && this.LogNoisiness > 1)\n\t\t\t{\n\t\t\t\t\tthis.log.info(`PICT-ControlFlow parseTemplate ${tmpParseUUID} Template Return Value:\\n${tmpResult}`);\n\t\t\t}\n\t\t\treturn tmpResult;\n\t\t}\n\t}\n\n\t/**\n\t * Parse a template by hash.\n\t *\n\t * @param {String} pTemplateHash - The hash of the template to parse\n\t * @param {Object} pData - The data to use in the template\n\t * @param {Function} fCallback - The callback to call when the template is parsed\n\t * @param {Array<any>} pContextArray - The context array to use in the template\n\t */\n\tparseTemplateByHash(pTemplateHash, pData, fCallback, pContextArray)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\ttmpTemplateString = '';\n\t\t}\n\t\treturn this.parseTemplate(tmpTemplateString, pData, fCallback, pContextArray);\n\t}\n\n\t/**\n\t * Parse a template set.\n\t *\n\t * @param {String} pTemplateString - The template string to parse\n\t * @param {Array|Object} pDataSet - The data set to use in the template\n\t * @param {Function} fCallback - The callback to call when the template is parsed\n\t * @param {Array<any>} pContextArray - The context array to use in the template\n\t */\n\tparseTemplateSet(pTemplateString, pDataSet, fCallback, pContextArray)\n\t{\n\t\t// TODO: This will need streaming -- for now janky old string append does the trick\n\t\tlet tmpValue = '';\n\t\tif (typeof(fCallback) == 'function')\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tthis.Utility.eachLimit(pDataSet, 1,\n\t\t\t\t\t(pRecord, fRecordTemplateCallback)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplate(pTemplateString, pRecord,\n\t\t\t\t\t\t\t(pError, pTemplateResult)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValue += pTemplateResult;\n\t\t\t\t\t\t\t\treturn fRecordTemplateCallback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t(pError)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fCallback(pError, tmpValue);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn fCallback(Error('Pict: Template Set: pDataSet is not an array or object.'), '');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tif (Array.isArray(pDataSet))\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < pDataSet.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[i], pContextArray);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpKeys = Object.keys(pDataSet);\n\t\t\t\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[tmpKeys[i]], pContextArray);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpValue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Parse a template set by hash.\n\t *\n\t * @param {String} pTemplateHash - The hash of the template to parse\n\t * @param {Array|Object} pDataSet - The data set to use in the template\n\t * @param {Function} fCallback - The callback to call when the template is parsed\n\t * @param {Array<any>} pContextArray - The context array to use in the template\n\t */\n\tparseTemplateSetByHash(pTemplateHash, pDataSet, fCallback, pContextArray)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\ttmpTemplateString = '';\n\t\t}\n\t\treturn this.parseTemplateSet(tmpTemplateString, pDataSet, fCallback, pContextArray);\n\t}\n};\n\nmodule.exports = Pict;\n\nmodule.exports.PictApplicationClass = require('pict-application');\n\nmodule.exports.PictViewClass = require('pict-view');\nmodule.exports.PictProviderClass = require('pict-provider');\n\nmodule.exports.EnvironmentLog = require('./environments/Pict-Environment-Log.js');\nmodule.exports.EnvironmentObject = require('./environments/Pict-Environment-Object.js');\n\n// This is to help understand the type of enivironement we're executing in\nmodule.exports.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n\nmodule.exports.safeOnDocumentReady = require(`./Pict-Browser-SafeOnDocumentReady.js`);\nmodule.exports.safeLoadPictApplication = require(`./Pict-Browser-SafeLoad.js`);\n","/**\n* Pict browser shim loader\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\nclass PictEnvironmentLog\n{\n\t/**\n\t * @typedef {import('../Pict')} Pict\n\t */\n\t/**\n\t * @param {Pict} pPict - The pict object to attach the custom read/write functions to.\n\t * @param {Map<String, any>} pContentMap - The content map to use for custom reads.\n\t */\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\n\t\tthis.pict.ContentAssignment.customReadAttributeFunction = this.customReadAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetAttributeFunction = this.customSetAttributeFunction.bind(this);\n\t}\n\n\t/**\n\t * Create an event log entry.\n\t *\n\t * @param {string} pAddress - The address of the event.\n\t * @param {string} pContent - The content of the event.\n\t */\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\t/**\n\t * Custom GetElement function.\n\t *\n\t * @param {string} pAddress - The address of the element.\n\t */\n\tcustomGetElementFunction(pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\t/**\n\t * Custom Read function.\n\t *\n\t * @param {string} pAddress - The address of the element.\n\t */\n\tcustomReadFunction(pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\t/**\n\t * Custom Append function.\n\t *\n\t * @param {string} pAddress - The address of the element.\n\t * @param {string} pContent - The content to append.\n\t */\n\tcustomAppendFunction(pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\t/**\n\t * Custom Prepend function.\n\t *\n\t * @param {string} pAddress - The address of the element.\n\t * @param {string} pContent - The content to prepend.\n\t */\n\tcustomPrependFunction(pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\t/**\n\t * Custom Assign function.\n\t *\n\t * @param {string} pAddress - The address of the element.\n\t * @param {string} pContent - The content to assign.\n\t */\n\tcustomAssignFunction(pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Assign.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\t/**\n\t * Custom Read Attribute function.\n\t *\n\t * @param {string} pAddress - The address of the element.\n\t * @param {string} pAttribute - The attribute to read.\n\t */\n\tcustomReadAttributeFunction(pAddress, pAttribute)\n\t{\n\t\tthis.pict.log.info(`Mocking an READ ATTRIBUTE from Address -> [${pAddress}]`, {Attribute: pAttribute});\n\t\treturn '';\n\t}\n\n\t/**\n\t * Custom Set Attribute function.\n\t *\n\t * @param {string} pAddress - The address of the element.\n\t * @param {string} pAttribute - The attribute to set.\n\t */\n\tcustomSetAttributeFunction(pAddress, pAttribute, pContent)\n\t{\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an SET ATTRIBUTE to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Attribute: pAttribute, Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an SET ATTRIBUTE to Address -> [${pAddress}]`, {Attribute: pAttribute, Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n}\n\nmodule.exports = PictEnvironmentLog;\n","/**\n* Pict browser shim loader with Object statefulness for the environement\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\nclass PictEnvironmentObject\n{\n\t/**\n\t * @typedef {import('../Pict')} Pict\n\t */\n\t/**\n\t * @param {Pict} pPict - The pict object to attach the custom read/write functions to.q\n\t * @param {Map<String, any>} pContentMap - The content map to use for custom reads.\n\t */\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.contentMap._ATTRIBUTE_MAP = {};\n\t\tthis.contentMap._CLASS_MAP = {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\t\tthis.eventLog.ReadAttribute = [];\n\t\tthis.eventLog.SetAttribute = [];\n\t\tthis.eventLog.RemoveAttribute = [];\n\t\tthis.eventLog.ReadClass = [];\n\t\tthis.eventLog.SetClass = [];\n\t\tthis.eventLog.RemoveClass = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadAttributeFunction = this.customReadAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetAttributeFunction = this.customSetAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customRemoveAttributeFunction = this.customRemoveAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadClassFunction = this.customReadClassFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetClassFunction = this.customSetClassFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customRemoveClassFunction = this.customRemoveClassFunction.bind(this);\n\t}\n\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\tcustomGetElementFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\t}\n\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\tcustomReadFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\t}\n\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\tcustomAppendFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = (typeof(this.contentMap[pAddress]) == 'undefined') ? pContent : this.contentMap[pAddress] + pContent;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\tcustomPrependFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = (typeof(this.contentMap[pAddress]) == 'undefined') ? pContent : pContent + this.contentMap[pAddress];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomAssignFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = pContent;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tinitializeAttributeMapLocation(pAddress, pAttribute)\n\t{\n\t\tif (!this.contentMap._ATTRIBUTE_MAP.hasOwnProperty(pAddress))\n\t\t{\n\t\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress] = {};\n\t\t}\n\t\tif (!this.contentMap._ATTRIBUTE_MAP[pAddress].hasOwnProperty(pAttribute))\n\t\t{\n\t\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute] = false;\n\t\t}\n\t}\n\n\tinitializeClassMapLocation(pAddress)\n\t{\n\t\tif (!this.contentMap._CLASS_MAP.hasOwnProperty(pAddress))\n\t\t{\n\t\t\tthis.contentMap._CLASS_MAP[pAddress] = [];\n\t\t}\n\t}\n\n\tcustomReadAttributeFunction (pAddress, pAttribute)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tlet tmpContent = this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (tmpContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE READ for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: tmpContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE READ for Address -> [${pAddress}]::[${pAttribute}]`, {Content: tmpContent});\n\t\t}\n\t\treturn tmpContent;\n\t}\n\n\tcustomSetAttributeFunction (pAddress, pAttribute, pValue)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute] = pValue;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (pValue.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE SET for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pValue.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE SET for Address -> [${pAddress}]::[${pAttribute}]`, {Content: pValue});\n\t\t}\n\t\treturn pValue;\n\t}\n\n\tcustomRemoveAttributeFunction (pAddress, pAttribute)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tlet tmpContent = this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (tmpContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE REMOVE for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: tmpContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE REMOVE for Address -> [${pAddress}]::[${pAttribute}]`, {Content: tmpContent});\n\t\t}\n\n\t\tdelete this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\treturn true;\n\t}\n\n\tcustomReadClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tconst tmpContent = this.contentMap._CLASS_MAP[pAddress].indexOf(pClass) > -1;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS READ for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent});\n\n\t\treturn tmpContent;\n\t}\n\n\tcustomSetClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tlet tmpContent = this.contentMap._CLASS_MAP[pAddress];\n\n\t\tif (!this.contentMap._CLASS_MAP[pAddress].indexOf(pClass) > -1)\n\t\t{\n\t\t\tthis.contentMap._CLASS_MAP[pAddress].push(pClass);\n\t\t}\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS SET for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent.join(' ')});\n\n\t\treturn tmpContent;\n\t}\n\n\tcustomRemoveClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tlet tmpContent = this.contentMap._CLASS_MAP[pAddress];\n\n\t\tthis.contentMap._CLASS_MAP[pAddress].splice(pClass);\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS REMOVE for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent.join(' ')});\n\n\t\treturn tmpContent;\n\t}\n}\n\nmodule.exports = PictEnvironmentObject;\n"]}