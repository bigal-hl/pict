{"version":3,"sources":["pict.compatible.min.js","node_modules/browser-pack/_prelude.js","node_modules/async.eachlimit/index.js","node_modules/async.iterator/index.js","node_modules/async.util.eachoflimit/index.js","node_modules/async.util.ensureasync/index.js","node_modules/async.util.isarray/index.js","node_modules/async.util.isarraylike/index.js","node_modules/async.util.keyiterator/index.js","node_modules/async.util.keys/index.js","node_modules/async.util.noop/index.js","node_modules/async.util.once/index.js","node_modules/async.util.onlyonce/index.js","node_modules/async.util.restparam/index.js","node_modules/async.util.setimmediate/index.js","node_modules/async.util.withoutindex/index.js","node_modules/async.waterfall/index.js","node_modules/base64-js/index.js","node_modules/big.js/big.js","node_modules/buffer/index.js","node_modules/builtin-status-codes/browser.js","node_modules/cachetrax/source/CacheTrax.js","node_modules/cachetrax/source/LinkedList-Node.js","node_modules/cachetrax/source/LinkedList.js","node_modules/cookie/index.js","node_modules/events/events.js","node_modules/fable-log/source/Fable-Log-BaseLogger.js","node_modules/fable-log/source/Fable-Log-DefaultProviders-Web.js","node_modules/fable-log/source/Fable-Log-DefaultStreams.json","node_modules/fable-log/source/Fable-Log-Logger-Console.js","node_modules/fable-log/source/Fable-Log-Logger-SimpleFlatFile.js","node_modules/fable-log/source/Fable-Log.js","node_modules/fable-serviceproviderbase/source/Fable-ServiceProviderBase-Preinit.js","node_modules/fable-serviceproviderbase/source/Fable-ServiceProviderBase.js","node_modules/fable-settings/source/Fable-Settings-Default.json","node_modules/fable-settings/source/Fable-Settings-TemplateProcessor.js","node_modules/fable-settings/source/Fable-Settings.js","node_modules/fable-uuid/source/Fable-UUID-Random-Browser.js","node_modules/fable-uuid/source/Fable-UUID.js","node_modules/fable/source/Fable-ServiceManager.js","node_modules/fable/source/Fable.js","node_modules/fable/source/services/Fable-Service-Anticipate.js","node_modules/fable/source/services/Fable-Service-CSVParser.js","node_modules/fable/source/services/Fable-Service-DataFormat.js","node_modules/fable/source/services/Fable-Service-DataGeneration-DefaultValues.json","node_modules/fable/source/services/Fable-Service-DataGeneration.js","node_modules/fable/source/services/Fable-Service-EnvironmentData.js","node_modules/fable/source/services/Fable-Service-FilePersistence.js","node_modules/fable/source/services/Fable-Service-MetaTemplate.js","node_modules/fable/source/services/Fable-Service-MetaTemplate/MetaTemplate-StringParser.js","node_modules/fable/source/services/Fable-Service-MetaTemplate/MetaTemplate-WordTree.js","node_modules/fable/source/services/Fable-Service-Operation-DefaultSettings.js","node_modules/fable/source/services/Fable-Service-Operation.js","node_modules/fable/source/services/Fable-Service-RestClient.js","node_modules/fable/source/services/Fable-Service-Template.js","node_modules/fable/source/services/Fable-Service-Utility.js","node_modules/https-browserify/index.js","node_modules/ieee754/index.js","node_modules/inherits/inherits_browser.js","node_modules/manyfest/source/Manyfest-CleanWrapCharacters.js","node_modules/manyfest/source/Manyfest-HashTranslation.js","node_modules/manyfest/source/Manyfest-LogToConsole.js","node_modules/manyfest/source/Manyfest-ObjectAddress-CheckAddressExists.js","node_modules/manyfest/source/Manyfest-ObjectAddress-DeleteValue.js","node_modules/manyfest/source/Manyfest-ObjectAddress-GetValue.js","node_modules/manyfest/source/Manyfest-ObjectAddress-SetValue.js","node_modules/manyfest/source/Manyfest-ObjectAddressGeneration.js","node_modules/manyfest/source/Manyfest-ParseConditionals.js","node_modules/manyfest/source/Manyfest-SchemaManipulation.js","node_modules/manyfest/source/Manyfest.js","node_modules/once/once.js","node_modules/path-browserify/index.js","node_modules/pict-application/source/Pict-Application.js","node_modules/pict-view/source/Pict-View.js","node_modules/precedent/source/Precedent.js","node_modules/precedent/source/StringParser.js","node_modules/precedent/source/WordTree.js","node_modules/process/browser.js","node_modules/punycode/punycode.js","node_modules/querystring-es3/decode.js","node_modules/querystring-es3/encode.js","node_modules/querystring-es3/index.js","node_modules/safe-buffer/index.js","node_modules/simple-concat/index.js","node_modules/simple-get/index.js","node_modules/stream-http/index.js","node_modules/stream-http/lib/capability.js","node_modules/stream-http/lib/request.js","node_modules/stream-http/lib/response.js","node_modules/stream-http/node_modules/readable-stream/errors-browser.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/async_iterator.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/buffer_list.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/from-browser.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/pipeline.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/state.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/stream-http/node_modules/readable-stream/readable-browser.js","node_modules/string_decoder/lib/string_decoder.js","node_modules/timers-browserify/main.js","node_modules/url/url.js","node_modules/url/util.js","node_modules/util-deprecate/browser.js","node_modules/wrappy/wrappy.js","node_modules/xtend/immutable.js","source/Pict-CSS.js","source/Pict-Content-Assignment.js","source/Pict-DataProvider.js","source/Pict-Meadow-EntityProvider.js","source/Pict-Template-Provider.js","source/Pict.js","source/environments/Pict-Environment-Log.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","_defineProperty2","obj","key","value","_toPropertyKey2","defineProperty","enumerable","configurable","writable","_get","Reflect","get","bind","target","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","arguments","apply","this","object","hasOwnProperty","_getPrototypeOf","_classCallCheck2","instance","Constructor","_defineProperties","props","descriptor","_createClass2","protoProps","staticProps","arg","_toPrimitive2","_typeof","String","input","hint","prim","toPrimitive","undefined","res","Number","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","result","Super","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","f","exports","module","define","amd","window","global","Pict","r","t","c","require","u","a","Error","code","eachOfLimit","withoutIndex","limit","cb","tasks","makeCallback","index","fn","next","once","noop","onlyOnce","keyIterator","nextKey","done","running","errored","replenish","err","setImmediate","restParam","args","callback","pop","push","innerArgs","sync","_keys","isArrayLike","coll","keys","k","func","startIndex","Math","max","rest","_setImmediate","fallback","setTimeout","timers","ensureAsync","wrapIterator","concat","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","join","Uint8Array","indexOf","start","end","num","output","GLOBAL","Big","MAX_DP","MAX_POWER","NAME","INVALID","INVALID_DP","INVALID_RM","DIV_BY_ZERO","P","UNDEFINED","NUMERIC","round","x","sd","rm","more","xc","RM","unshift","stringify","doExponential","isNonzero","s","charAt","abs","cmp","y","isneg","yc","j","l","div","b","dp","DP","bl","bt","ri","bz","ai","al","rl","q","qc","qi","shift","eq","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","reverse","mod","ygtx","times","neg","add","pow","one","prec","sqrt","half","toExponential","mul","toFixed","toJSON","NE","PE","toNumber","strict","toPrecision","_Big_","nl","replace","search","substring","parse","roundDown","roundHalfUp","roundHalfEven","roundUp","dup","Buffer","base64","ieee754","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","encodingOrOffset","allocUnsafe","string","encoding","isEncoding","actual","write","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","buffer","array","byteOffset","fromArrayBuffer","isBuffer","checked","copy","numberIsNaN","type","data","fromObject","assertSize","size","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","foo","typedArraySupport","console","error","species","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","trim","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","libFableServiceProviderBase","libLinkedList","CashMoney","_libFableServiceProvi","_super","pFable","pManifest","pServiceHash","_this3","serviceType","_HashMap","_RecordMap","_List","maxLength","maxAge","pData","pHash","Datum","tmpNode","Hash","Metadata","Created","Date","remove","put","fComplete","pRemovedRecords","tmpRemovedRecords","tmpNow","tmpKeys","expire","fPruneFunction","_this4","pruneBasedOnExpiration","fExpirationPruneComplete","pruneBasedOnLength","LinkedListNode","LeftNode","RightNode","__ISNODE","libLinkedListNode","LinkedList","totalNodes","head","tail","pDatum","tmpHash","initializeNode","append","pNode","fAction","_this5","fIterator","pError","pNodeIndex","options","dec","decode","eqIdx","endIdx","tryDecode","serialize","opt","enc","encode","fieldContentRegExp","isNaN","floor","domain","path","expires","__toString","isDate","toUTCString","httpOnly","secure","priority","sameSite","decodeURIComponent","encodeURIComponent","ReflectOwnKeys","R","ReflectApply","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","EventEmitter","init","emitter","Promise","resolve","reject","errorListener","removeListener","resolver","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","events","existing","warning","newListener","emit","warned","w","count","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","addEventListener","wrapListener","removeEventListener","setMaxListeners","getMaxListeners","doError","er","message","context","listeners","addListener","prependListener","prependOnceListener","position","originalListener","spliceOne","off","removeAllListeners","rawListeners","eventNames","BaseLogger","_libFableServiceProvi2","_super2","pLogStreamSettings","pLogStreamHash","_this6","_Settings","loggerUUID","generateInsecureUUID","levels","tmpDate","getTime","pCharacter","tmpRandomData","random","pLogText","pLogObject","pLogLevel","CoreServiceProviderBase","tmpDefaultProviders","loggertype","streamtype","level","ConsoleLogger","_libBaseLogger","_super3","pFableLog","_this7","_ShowTimeStamps","showtimestamps","_FormattedTimeStamps","formattedtimestamps","_ContextMessage","Context","Product","_OutputLogLinesToConsole","outputloglinestoconsole","_OutputObjectsToConsole","outputobjectstoconsole","prefixCache","pLevel","pObject","tmpTimeStamp","toISOString","tmpLogLine","log","JSON","libConsoleLog","libFS","libPath","SimpleFlatFileLogger","_libConsoleLog","_super4","_this8","logFileRawPath","logFilePath","normalize","logFileStreamOptions","fileStreamOptions","fileWriter","createWriteStream","activelyWriting","logLineStrings","logObjectStrings","defaultWriteCompleteCallback","defaultBufferFlushCallback","fCloseComplete","tmpCloseComplete","fFlushComplete","tmpFlushComplete","flushBufferToLogFile","tmpLineStrings","tmpObjectStrings","tmpConstructedBufferOutputString","completeBufferFlushToLogFile","fs","FableLog","_libFableServiceProvi3","_super5","pSettings","_this9","tmpSettings","_Providers","_StreamDefinitions","LogStreams","logStreams","logProviders","activeLogStreams","logStreamsTrace","logStreamsDebug","logStreamsInfo","logStreamsWarn","logStreamsError","logStreamsFatal","datumDecorator","uuid","pLogger","fDatumDecorator","pMessage","tmpDecoratedDatum","trace","debug","info","fatal","tmpStreamDefinition","assign","addLogger","initialize","tmpMessage","tmpTime","pTimeStamp","pTimeDelta","tmpEndTime","tmpMs","tmpSeconds","tmpMinutes","tmpHours","pStartTime","logTimeDelta","getTimeDelta","logTimeDeltaHuman","LogProviderBase","LogProviderConsole","LogProviderFlatfile","FableCoreServiceProviderBase","pOptions","fable","UUID","FableServiceProviderBase","isFable","getUUID","servicesMap","services","ProductVersion","ConfigFile","process","libPrecedent","FableSettingsTemplateProcessor","pDependencies","templateProcessor","addPattern","pTemplateValue","tmpTemplateValue","tmpSeparatorIndex","tmpDefaultValue","tmpEnvironmentVariableName","env","pString","parseString","_process","precedent","libFableSettingsTemplateProcessor","FableSettings","_libFableServiceProvi4","_super6","_this10","settingsTemplateProcessor","_configureEnvTemplating","buildDefaultSettings","merge","DefaultConfigFile","pException","settings","_PerformEnvTemplating","NoEnvReplacement","tmpKey","_resolveEnv","parseSetting","toObject","_this11","_isObject","forEach","fromValue","toValue","_deepMergeObjects","pSettingsFrom","pSettingsTo","tmpSettingsFrom","tmpSettingsTo","tmpSettingsFromCopy","RandomBytes","getRandomValues","crypto","msCrypto","tmpBuffer","tmpValue","generateWhatWGBytes","generateRandomBytes","libRandomByteGenerator","FableUUID","_libFableServiceProvi5","_super7","_this12","_UUIDModeRandom","UUIDModeRandom","_UUIDLength","UUIDLength","_UUIDRandomDictionary","UUIDDictionary","randomByteGenerator","_HexLookup","pBuffer","tmpRandomBytes","generate","bytesToUUID","tmpUUID","generateRandom","generateUUIDv4","libFableServiceBase","FableService","_libFableServiceBase$","_super8","_this13","serviceTypes","serviceClasses","extraServiceInitialization","pServiceType","pServiceClass","isFableService","addServiceType","instantiateServiceProvider","pCustomServiceHash","pServicePrototype","tmpService","setDefaultServiceInstantiation","instantiateServiceProviderWithoutRegistration","pServiceInstance","tmpServiceType","tmpServiceHash","connectFable","ServiceProviderBase","libFableSettings","libFableUUID","libFableLog","libFableServiceManager","Fable","_coreServices","SettingsManager","Logging","ServiceManager","serviceManager","connectPreinitServiceProviderInstance","addAndInstantiateServiceType","cachetrax","manyfest","FableServiceAnticipate","_libFableServiceBase","_super9","_this14","operationQueue","erroredOperations","executingOperationCount","completedOperationCount","maxOperations","lastError","waitingFunctions","tmpOperation","buildAnticipatorCallback","fAsynchronousFunction","checkQueue","tmpCallbackState","Called","OperationSet","fCallback","CSVParser","_libFableServiceProvi6","_super10","_this15","Header","HeaderFieldNames","Delimiter","QuoteCharacter","CleanCharacters","HeaderLineIndex","HasHeader","HasSetHeader","EmitHeader","EmitJSON","EscapedQuoteString","CurrentLine","CurrentRecord","InQuote","InEscapedQuote","LinesParsed","RowsEmitted","pRowArray","tmpObject","pHeaderArray","pFormatAsJSON","tmpFormatAsJSON","tmpCompletedRecord","marshalRowToJSON","pLineString","pushLine","setHeader","emitRow","DataFormat","_libFableServiceProvi7","_super11","_this16","pTargetLength","pPadString","tmpString","stringGeneratePaddingString","_Regex_formatterInsertCommas","_Regex_formatterAddCommasToNumber","_Regex_formatterDollarsRemoveCommas","_Regex_formatterCleanNonAlphaChar","_Regex_formatterCapitalizeEachWord","_Value_MoneySign_Currency","_Value_NaN_Currency","_Value_GroupSeparator_Number","_Value_Prefix_StringHash","_Value_Clean_formatterCleanNonAlpha","_UseEngineStringStartsWith","startsWith","_UseEngineStringEndsWith","endsWith","pSearchString","pStartIndex","stringStartsWith_Polyfill","pEndIndex","stringEndsWith_Polyfill","tmpStringLength","tmpCharacterIndex","pMatch","toUpperCase","pWrapCharacter","tmpReversedWithCommas","stringReverse","match","pSign","pZeros","pBefore","pDecimal","pAfter","formatterInsertCommas","pNumber","processAddCommasToNumberRegex","pValue","tmpDollarAmount","Utility","bigNumber","parseFloat","formatterAddCommasToNumber","pDigits","tmpDigits","tmpTargetLength","tmpPadString","tmpPadLength","repeat","pTimeSpan","stringPadStart","pTimeStart","pTimeEnd","formatTimeSpan","pJavascriptDate","getMonth","pStrict","tmpStrict","tmpMonth","tmpDay","getDate","tmpYear","getFullYear","pDate","tmpStringSplitLocation","pEnclosureStart","pEnclosureEnd","tmpEnclosureStart","tmpEnclosureEnd","tmpEnclosureCount","tmpEnclosureDepth","pEnclosureIndexToGet","tmpEnclosureIndexToGet","tmpMatchedEnclosureIndex","tmpEnclosedValueStartIndex","tmpEnclosedValueEndIndex","pEnclosureIndexToRemove","tmpEnclosureIndexToRemove","tmpEnclosureStartIndex","tmpEnclosureEndIndex","tmpReturnString","DefaultIntegerMinimum","DefaultIntegerMaximum","DefaultNumericStringLength","MonthSet","WeekDaySet","ColorSet","SurNameSet","NameSet","FableServiceDataGeneration","_libFableServiceBase2","_super12","_this17","defaultData","pMinimum","pMaximum","randomIntegerBetween","pLength","pMaxNumber","tmpLength","tmpMaxNumber","randomIntegerUpTo","FableServiceEnvironmentData","_libFableServiceBase3","_super13","_this18","Environment","FableServiceFilePersistence","_libFableServiceBase4","_super14","_this19","Mode","umask","currentInputFolder","currentOutputFolder","pPath","existsSync","pFileName","pFileContent","tmpOptions","writeFileSync","pAppendContent","appendFileSync","unlinkSync","rmdirSync","pFileArray","getDefaultOutputPath","writeFileSyncFromObject","writeFileSyncFromArray","pParameters","_this20","tmpParameters","Path","CurrentPathIndex","ActualPath","ActualPathParts","sep","CurrentPath","open","pFileDescriptor","closeSync","makeFolderRecursive","mkdir","pCreateError","libWordTree","libStringParser","FableServiceMetaTemplate","_libFableServiceBase5","_super15","_this21","WordTree","StringParser","eachLimit","ParseTree","pPatternStart","pPatternEnd","pParser","pParserPromise","addPatternAsync","fEachLimit","pParseTree","Asynchronous","Output","OutputBuffer","Pattern","PatternMatch","PatternMatchEnd","pParserState","flushOutputBuffer","PatternStartNode","StartPatternMatchComplete","EndPatternMatchBegan","appendOutputBuffer","PatternEnd","Parse","PatternStartString","PatternEndString","resetOutputBuffer","isAsync","_this22","pAsyncOutput","PatternStart","_this23","tmpParserState","newParserState","parseCharacter","fCharacterCallback","parseCharacterAsync","pTree","pPattern","fParser","tmpLeaf","addChild","tmpPatternEnd","addEndChild","Title","Summary","Version","Status","Completed","CompletionProgress","CompletionTimeElapsed","Steps","StepsCompleted","StartTime","EndTime","Errors","Log","_OperationStatePrototypeString","FableOperation","_libFableServiceBase6","_super16","_this24","timeStamps","progressTrackers","Name","writeOperationLog","writeOperationErrors","pTimeStampHash","tmpTimeStampHash","tmpOperationTime","pTotalOperations","pProgressTrackerHash","tmpProgressTrackerHash","tmpTotalOperations","tmpProgressTracker","createTimeStamp","CurrentTime","PercentComplete","AverageOperationTime","EstimatedCompletionTime","TotalCount","CurrentCount","createProgressTracker","pCurrentOperations","tmpCurrentOperations","solveProgressTrackerStatus","pIncrementSize","tmpIncrementSize","updateProgressTrackerStatus","libSimpleGet","libCookie","FableServiceRestClient","_libFableServiceBase7","_super17","_this25","TraceLog","dataFormat","cookie","prepareRequestOptions","pRequestOptions","tmpCookieObject","headers","tmpCookieKeys","prepareCookies","_this26","preRequest","RequestStartTime","getTimeStamp","method","url","pResponse","tmpConnectTime","formatTimeDelta","statusCode","tmpData","pChunk","tmpChunkTime","tmpCompletionTime","_this27","json","tmpDataBuffer","_this28","tmpJSONData","pOptionsOrURL","tmpRequestOptions","executeJSONRequest","body","executeChunkedRequest","FableServiceTemplate","_libFableServiceBase8","_super18","_this29","Matchers","Evaluate","Interpolate","Escaper","Unescaper","GuaranteedNonMatch","templateEscapes","u2028","u2029","renderFunction","templateString","renderTemplate","pTemplateText","_this30","TemplateSource","pCode","TemplateSourceCompiled","templateFunction","libAsyncWaterfall","libAsyncEachLimit","libBigNumber","FableServiceUtility","_libFableServiceBase9","_super19","_this31","templates","waterfall","pDestinationObject","tmpSourceObject","tmpObjectProperties","buildTemplateFunction","pTemplateHash","tmpTemplate","pInput","pChunkSize","pChunkCache","tmpInputArray","tmpChunkSize","tmpChunkCache","splice","pISOString","tmpDateParts","tmpReturnDate","tmpTimeZoneOffsetInHours","tmpTimeZoneOffsetInMinutes","setUTCDate","setUTCFullYear","setUTCMonth","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","setHours","getHours","http","https","validateParams","params","protocol","request","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","rt","LN2","ctor","superCtor","super_","TempCtor","libSimpleLog","ManyfestHashTranslation","pInfoLog","pErrorLog","logInfo","logError","translationTable","pTranslation","_this32","pTranslationSource","pTranslationHash","_this33","removeTranslationHash","removeTranslation","pLogLine","ManyfestObjectAddressResolverCheckAddressExists","pAddress","tmpBracketStartIndex","tmpBracketStopIndex","tmpBoxedPropertyName","tmpBoxedPropertyReference","tmpBoxedPropertyNumber","cleanWrapCharacters","tmpSubObjectName","tmpNewAddress","checkAddressExists","fCleanWrapCharacters","fParseConditionals","ManyfestObjectAddressResolverDeleteValue","pRecord","pParentAddress","tmpParentAddress","tmpObjectTypeMarkerIndex","checkFilters","tmpObjectPropertyName","deleteValueAtAddress","tmpArrayProperty","tmpContainerObject","tmpPropertyParentAddress","tmpObjectProperty","tmpObjectPropertyKeys","ManyfestObjectAddressResolverGetValue","pRootObject","tmpRootObject","tmpParentAddressParts","tmpBackNavigationCount","tmpParentAddressLength","tmpRecurseAddress","getValueAtAddress","tmpOutputArray","ManyfestObjectAddressSetValue","setValueAtAddress","ManyfestObjectAddressGeneration","pBaseAddress","pSchema","tmpBaseAddress","tmpSchema","tmpObjectType","tmpSchemaObjectEntry","Address","InSchema","DataType","Default","generateAddressses","_ConditionalStanzaStart","_ConditionalStanzaEnd","testCondition","pManyfest","pSearchAddress","pSearchComparator","tmpKeepRecord","tmpStartIndex","tmpStopIndex","tmpMagicComparisonPatternSet","tmpSearchAddress","tmpSearchComparator","tmpSearchValue","ManyfestSchemaManipulation","pManyfestSchemaDescriptors","pAddressMapping","tmpManyfestAddresses","tmpHashMapping","pInputAddress","tmpNewDescriptorAddress","tmpOldDescriptorAddress","tmpDescriptor","tmpManyfestSchemaDescriptors","resolveAddressMappings","pManyfestSchemaDescriptorsDestination","pManyfestSchemaDescriptorsSource","tmpSource","tmpNewManyfestSchemaDescriptors","pDescriptorAddress","libHashTranslation","libObjectAddressCheckAddressExists","libObjectAddressGetValue","libObjectAddressSetValue","libObjectAddressDeleteValue","libObjectAddressGeneration","libSchemaManipulation","_DefaultConfiguration","Scope","Descriptors","Manyfest","_libFableServiceProvi8","_super20","_this34","objectAddressCheckAddressExists","objectAddressGetValue","objectAddressSetValue","objectAddressDeleteValue","defaultValues","Float","Integer","Binary","DateTime","Null","scope","elementAddresses","elementHashes","elementDescriptors","reset","loadManifest","schemaManipulations","objectAddressGeneration","hashTranslations","tmpNewOptions","tmpNewManyfest","getManifest","addTranslation","pManifestString","tmpManifest","tmpDescriptorKeys","tmpDescriptionAddresses","addDescriptor","HashTranslations","pDescriptor","getDescriptor","resolveHashAddress","tmpDescriptorAddresses","tmpInElementHashTable","tmpInTranslationTable","translate","getDefaultValue","getDescriptorByHash","tmpValidationData","MissingElements","addValidationError","pErrorMessage","tmpValueExists","Required","tmpElementType","tmpDataType","pOverwriteProperties","populateObject","fFilter","_this35","tmpOverwriteProperties","tmpFilterFunction","wrappy","called","onceStrict","onceError","proto","assertPath","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","posix","cwd","resolvedPath","resolvedAbsolute","isAbsolute","trailingSeparator","joined","relative","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","dirname","hasRoot","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","root","_format","delimiter","win32","defaultPictSettings","MainViewportViewIdentifier","MainViewportRenderableHash","MainViewportDestinationAddress","MainViewportDefaultDataAddress","AutoSolveAfterInitialize","AutoRenderMainViewportViewAfterInitialize","Manifests","IdentifierAddressPrefix","PictApplication","_libFableServiceBase10","_super21","_this36","pict","AppData","initializeTimestamp","lastSolvedTimestamp","lastMarshalFromViewsTimestamp","lastMarshalToViewsTimestamp","tmpManifestKeys","tmpManifestKey","LogNoisiness","onBeforeSolve","onSolve","tmpLoadedViews","views","tmpViewsToSolve","tmpView","AutoInitialize","sort","AutoInitializeOrdinal","solve","onAfterSolve","_this37","tmpAnticipate","anticipate","onBeforeSolveAsync","AutoSolveWithApp","AutoSolveOrdinal","solveAsync","onSolveAsync","onAfterSolveAsync","wait","onBeforeInitialize","onInitialize","tmpViewsToInitialize","onAfterInitialize","render","fCallBack","_this38","onBeforeInitializeAsync","onInitializeAsync","initializeAsync","onAfterInitializeAsync","renderMainViewportAsync","onBeforeMarshalFromViews","onMarshalFromViews","tmpViewsToMarshalFromViews","marshalFromView","onAfterMarshalFromViews","_this39","onBeforeMarshalFromViewsAsync","marshalFromViewAsync","onMarshalFromViewsAsync","onAfterMarshalFromViewsAsync","onBeforeMarshalToViews","onMarshalToViews","tmpViewsToMarshalToViews","marshalToView","onAfterMarshalToViews","_this40","onBeforeMarshalToViewsAsync","marshalToViewAsync","onMarshalToViewsAsync","onAfterMarshalToViewsAsync","pViewIdentifier","pRenderableHash","pRenderDestinationAddress","pTemplateDataAddress","tmpViewIdentifier","tmpRenderableHash","tmpRenderDestinationAddress","tmpTemplateDataAddress","PictView","tmpErrorMessage","renderAsync","defaultPictViewSettings","DefaultRenderable","DefaultDestinationAddress","DefaultTemplateRecordAddress","ViewIdentifier","AutoRender","AutoRenderOrdinal","CSSHash","CSS","CSSProvider","CSSPriority","Templates","DefaultTemplates","Renderables","_libFableServiceBase11","_super22","_this41","lastRenderedTimestamp","lastMarshalFromViewTimestamp","lastMarshalToViewTimestamp","Source","TemplateProvider","addTemplate","Template","tmpDefaultTemplate","addDefaultTemplate","Prefix","Postfix","tmpCSSHash","tmpCSSProvider","CSSMap","addCSS","renderables","addRenderable","pDefaultTemplateDataAddress","pDefaultDestinationAddress","pRenderMethod","tmpRenderable","RenderableHash","TemplateHash","DefaultTemplateDataAddress","RenderMethod","_this42","pRenderable","onBeforeRender","ContentDestinationAddress","tmpDataAddress","DataProvider","getDataByAddress","tmpContent","parseTemplateByHash","ContentAssignment","appendContent","prependContent","getElement","assignContent","onAfterRender","_this43","pContent","_this44","onBeforeMarshalFromView","onMarshalFromView","onAfterMarshalFromView","_this45","onBeforeMarshalFromViewAsync","onMarshalFromViewAsync","onAfterMarshalFromViewAsync","onBeforeMarshalToView","onMarshalToView","onAfterMarshalToView","_this46","onBeforeMarshalToViewAsync","onMarshalToViewAsync","onAfterMarshalToViewAsync","Precedent","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","nextTick","title","browser","argv","version","versions","binding","chdir","freeExports","nodeType","freeModule","freeGlobal","punycode","maxInt","tMin","tMax","skew","damp","initialBias","initialN","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","baseMinusTMin","stringFromCharCode","map","mapDomain","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","basic","oldi","baseMinusT","inputLength","bias","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","ucs2","toASCII","toUnicode","prop","qs","regexp","maxKeys","kstr","vstr","v","idx","xs","stringifyPrimitive","objectKeys","ks","copyProps","SafeBuffer","stream","chunks","chunk","simpleGet","decompressResponse","querystring","isStream","pipe","opts","maxRedirects","_url$parse","hostname","port","auth","form","accept","originalHost","req","followRedirects","location","host","resume","redirectHost","authorization","tryUnzip","abort","ClientRequest","response","extend","statusCodes","defaultProtocol","IncomingMessage","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","xtend","xhr","getXHR","XMLHttpRequest","XDomainRequest","checkTypeSupport","responseType","isFunction","fetch","ReadableStream","writableStream","WritableStream","abortController","AbortController","arraybuffer","msstream","mozchunkedarraybuffer","overrideMimeType","capability","inherits","rStates","readyStates","preferBinary","Writable","_opts","_body","_headers","useFetch","mode","_mode","decideMode","_fetchTimer","_socketTimeout","_socketTimer","_onFinish","lowerName","unsafeHeaders","getHeader","header","removeHeader","_destroyed","headersObj","Blob","headersList","keyName","signal","controller","_fetchAbortController","requestTimeout","credentials","withCredentials","then","_fetchResponse","_resetTimers","_connect","reason","_xhr","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","status","statusValid","_write","destroy","flushHeaders","setNoDelay","setSocketKeepAlive","UNSENT","OPENED","HEADERS_RECEIVED","resetTimers","Readable","rawHeaders","trailers","rawTrailers","statusMessage","statusText","_resumeFetch","close","pipeTo","reader","getReader","_pos","responseURL","getAllResponseHeaders","matches","_charset","mimeType","charsetMatch","_read","responseText","newData","MSStreamReader","onload","readAsArrayBuffer","codes","createErrorType","Base","NodeError","_Base","arg1","arg2","arg3","getMessage","oneOf","expected","thing","determiner","msg","this_len","Duplex","allowHalfOpen","readable","onend","_writableState","ended","onEndNT","highWaterMark","getBuffer","_readableState","destroyed","PassThrough","Transform","_transform","ReadableState","EElistenerCount","Stream","OurUint8Array","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","isDuplex","objectMode","readableObjectMode","pipes","pipesCount","flowing","endEmitted","reading","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","decoder","_destroy","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","onEofChunk","chunkInvalid","_uint8ArrayToBuffer","addChunk","maybeReadMore","_undestroy","undestroy","isPaused","setEncoding","content","clear","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","nReadingNextTick","resume_","fromList","first","consume","endReadable","endReadableNT","wState","finished","nOrig","doRead","dest","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","ondata","cleanedUp","needDrain","pipeOnDrain","pause","event","dests","ev","wrap","_this","asyncIterator","_fromList","iterable","util","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","transform","flush","_flush","prefinish","err2","CorkedRequest","entry","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","realHasInstance","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","finalCalled","ending","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writev","_writev","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","rState","current","_","hasInstance","writeAfterEnd","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_Object$setPrototypeO","_defineProperty","_toPrimitive","_toPropertyKey","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","promise","lastPromise","wrapForNext","_this2","_Object$create","enumerableOnly","symbols","filter","sym","_objectSpread","source","getOwnPropertyDescriptors","defineProperties","custom","_classCallCheck","hasStrings","_getString","_getBuffer","nb","depth","customInspect","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ERR_STREAM_PREMATURE_CLOSE","eos","_len","_key","onlegacyfinish","writableEnded","readableEnded","onrequest","isRequest","ERR_MISSING_ARGS","streams","popCallback","destroys","closed","destroyer","reduce","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","pipeline","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","total","utf8CheckIncomplete","clearImmediate","immediateIds","nextImmediateId","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","Url","slashes","hash","query","pathname","href","urlParse","resolveObject","isString","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","hostlessProtocol","slashedProtocol","ftp","gopher","file","parseQueryString","slashesDenoteHost","isObject","queryIndex","splitter","uSplit","simplePath","exec","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","h","ae","esc","escape","qm","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","isNullOrUndefined","authInHost","isNull","hasTrailingSlash","up","config","localStorage","wrapper","defaultConfiguration","PictCSS","_libFableServiceBase12","_super23","_this47","CSSElementAddress","inlineCSSMap","pPriority","pProvider","tmpPriority","tmpProvidor","Content","Provider","Priority","_this48","tmpCSS","tmpCSSHashes","tmpCSSFragment","tmpCSSComment","generateCSS","PictContentAssignment","_libFableServiceBase13","_super24","_this49","inBrowser","hasDocument","document","querySelectorAll","hasJquery","jQuery","customAssignFunction","customPrependFunction","customAppendFunction","customReadFunction","customGetElementFunction","tmpElements","tmpElementSet","html","tmpTargetElementSet","tagName","innerHTML","insertAdjacentHTML","pClass","customAddClassFunction","addClass","classList","customRemoveClassFunction","removeClass","PictDataProvider","_libFableServiceBase14","_super25","_this50","manifest","getValueByHash","Bundle","Record","PictMeadowEntityProvider","_libFableServiceBase15","_super26","_this51","pEntity","pMeadowFilterExpression","_this52","initializeCache","cache","prune","tmpCountOptions","urlPrefix","restClient","getJSON","pBody","tmpRecordCount","Count","tmpDownloadURIFragments","tmpDownloadBatchSize","downloadBatchSize","tmpEntitySet","pURIFragment","fDownloadCallback","pDownloadError","pDownloadResponse","pDownloadBody","pFullDownloadError","PictDefaultURLPrefix","PictDefaultDownloadBatchSize","RecordMap","pIDRecord","_this53","tmpPossibleRecord","PictTemplateProvider","_libFableServiceBase16","_super27","_this54","templateSources","defaultTemplates","loadTemplateFunction","pTemplate","pTemplateSource","pPrefix","pPostfix","pSource","prefix","postfix","template","loadTemplate","checkDefaultTemplateHash","_libFable","_super28","_this55","isBrowser","loadManifestSet","_DefaultPictTemplatesInitialized","initializePictTemplateEngine","pManifestSet","pViewHash","pViewPrototype","tmpViewHash","default_configuration","instantiateServiceProviderFromPrototype","pApplicationHash","pApplicationPrototype","tmpApplicationHash","_this56","fEntityRender","tmpEntity","tmpEntityID","tmpEntityTemplate","tmpHashEntitySeparator","tmpHashTemplateSeparator","EntityProvider","getEntity","MetaTemplate","fNotEmptyRender","tmpHashParts","fTemplateRender","tmpTemplateHash","tmpAddressOfData","fTemplateSetRender","parseTemplateSetByHash","fDataRender","tmpColumnData","formatterDollars","formatterRoundNumber","fRandomNumberString","DataGeneration","randomNumericString","fRandomNumber","tmpMinimumNumber","cleanNonAlphaCharacters","capitalizeEachWord","fLogValue","tmpValueType","fLogStatement","tmpError","stack","pTemplateString","tmpTemplateString","getTemplate","parseTemplate","pDataSet","_this57","fRecordTemplateCallback","pTemplateResult","parseTemplateSet","PictApplicationClass","PictViewClass","EnvironmentLog","PictEnvironmentLog","pPict","pContentMap","contentMap","truncateContentLength","storeEventLog","eventLog","GetElement","Read","Prepend","Append","Assign","TimeStamp","createEventLogEntry"],"mappings":"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","file":"pict.compatible.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Pict = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar eachOfLimit = require('async.util.eachoflimit');\nvar withoutIndex = require('async.util.withoutindex');\n\nmodule.exports = function eachLimit(arr, limit, iterator, cb) {\n    return eachOfLimit(limit)(arr, withoutIndex(iterator), cb);\n};\n\n},{\"async.util.eachoflimit\":3,\"async.util.withoutindex\":14}],2:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(tasks) {\n    function makeCallback(index) {\n        function fn() {\n            if (tasks.length) {\n                tasks[index].apply(null, arguments);\n            }\n            return fn.next();\n        }\n        fn.next = function() {\n            return (index < tasks.length - 1) ? makeCallback(index + 1) : null;\n        };\n        return fn;\n    }\n    return makeCallback(0);\n};\n\n},{}],3:[function(require,module,exports){\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar onlyOnce = require('async.util.onlyonce');\nvar keyIterator = require('async.util.keyiterator');\n\nmodule.exports = function eachOfLimit(limit) {\n    return function(obj, iterator, cb) {\n        cb = once(cb || noop);\n        obj = obj || [];\n        var nextKey = keyIterator(obj);\n        if (limit <= 0) {\n            return cb(null);\n        }\n        var done = false;\n        var running = 0;\n        var errored = false;\n\n        (function replenish() {\n            if (done && running <= 0) {\n                return cb(null);\n            }\n\n            while (running < limit && !errored) {\n                var key = nextKey();\n                if (key === null) {\n                    done = true;\n                    if (running <= 0) {\n                        cb(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iterator(obj[key], key, onlyOnce(function(err) {\n                    running -= 1;\n                    if (err) {\n                        cb(err);\n                        errored = true;\n                    } else {\n                        replenish();\n                    }\n                }));\n            }\n        })();\n    };\n};\n\n},{\"async.util.keyiterator\":7,\"async.util.noop\":9,\"async.util.once\":10,\"async.util.onlyonce\":11}],4:[function(require,module,exports){\n'use strict';\nvar setImmediate = require('async.util.setimmediate');\nvar restParam = require('async.util.restparam');\n\nmodule.exports = function(fn) {\n    return restParam(function(args) {\n        var callback = args.pop();\n        args.push(function() {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate(function() {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        var sync = true;\n        fn.apply(this, args);\n        sync = false;\n    });\n};\n\n},{\"async.util.restparam\":12,\"async.util.setimmediate\":13}],5:[function(require,module,exports){\n'use strict';\n\nmodule.exports = Array.isArray || function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar isArray = require('async.util.isarray');\n\nmodule.exports = function isArrayLike(arr) {\n    return isArray(arr) || (\n        // has a positive integer length property\n        typeof arr.length === 'number' &&\n        arr.length >= 0 &&\n        arr.length % 1 === 0\n    );\n};\n\n},{\"async.util.isarray\":5}],7:[function(require,module,exports){\n'use strict';\n\nvar _keys = require('async.util.keys');\nvar isArrayLike = require('async.util.isarraylike');\n\nmodule.exports = function keyIterator(coll) {\n    var i = -1;\n    var len;\n    var keys;\n    if (isArrayLike(coll)) {\n        len = coll.length;\n        return function next() {\n            i++;\n            return i < len ? i : null;\n        };\n    } else {\n        keys = _keys(coll);\n        len = keys.length;\n        return function next() {\n            i++;\n            return i < len ? keys[i] : null;\n        };\n    }\n};\n\n},{\"async.util.isarraylike\":6,\"async.util.keys\":8}],8:[function(require,module,exports){\n'use strict';\n\nmodule.exports = Object.keys || function keys(obj) {\n    var _keys = [];\n    for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            _keys.push(k);\n        }\n    }\n    return _keys;\n};\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function noop () {};\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function once(fn) {\n    return function() {\n        if (fn === null) return;\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function only_once(fn) {\n    return function() {\n        if (fn === null) throw new Error('Callback was already called.');\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n\n},{}],12:[function(require,module,exports){\n'use strict';\nmodule.exports = function restParam(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n        var length = Math.max(arguments.length - startIndex, 0);\n        var rest = new Array(length);\n        for (var index = 0; index < length; index++) {\n            rest[index] = arguments[index + startIndex];\n        }\n        switch (startIndex) {\n            case 0:\n                return func.call(this, rest);\n            case 1:\n                return func.call(this, arguments[0], rest);\n        }\n    };\n};\n\n},{}],13:[function(require,module,exports){\n(function (setImmediate){(function (){\n'use strict';\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\nvar fallback = function(fn) {\n    setTimeout(fn, 0);\n};\n\nmodule.exports = function setImmediate(fn) {\n    // not a direct alias for IE10 compatibility\n    return (_setImmediate || fallback)(fn);\n};\n\n}).call(this)}).call(this,require(\"timers\").setImmediate)\n\n},{\"timers\":106}],14:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function withoutIndex(iterator) {\n    return function(value, index, callback) {\n        return iterator(value, callback);\n    };\n};\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar isArray = require('async.util.isarray');\nvar restParam = require('async.util.restparam');\nvar ensureAsync = require('async.util.ensureasync');\nvar iterator = require('async.iterator');\n\nmodule.exports = function(tasks, cb) {\n    cb = once(cb || noop);\n    if (!isArray(tasks)) return cb(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return cb();\n\n    function wrapIterator(iterator) {\n        return restParam(function(err, args) {\n            if (err) {\n                cb.apply(null, [err].concat(args));\n            } else {\n                var next = iterator.next();\n                if (next) {\n                    args.push(wrapIterator(next));\n                } else {\n                    args.push(cb);\n                }\n                ensureAsync(iterator).apply(null, args);\n            }\n        });\n    }\n    wrapIterator(iterator(tasks))();\n};\n\n},{\"async.iterator\":2,\"async.util.ensureasync\":4,\"async.util.isarray\":5,\"async.util.noop\":9,\"async.util.once\":10,\"async.util.restparam\":12}],16:[function(require,module,exports){\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n},{}],17:[function(require,module,exports){\n/*\r\n *  big.js v6.2.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2022 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,            // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n    /*\r\n     * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n     * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n     * primitive number without a loss of precision.\r\n     */\r\n    STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        if (typeof n !== 'string') {\r\n          if (Big.strict === true && typeof n !== 'bigint') {\r\n            throw TypeError(INVALID + 'value');\r\n          }\r\n\r\n          // Minus zero?\r\n          n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n        }\r\n\r\n        parse(x, n);\r\n      }\r\n\r\n      // Retain a reference to this Big constructor.\r\n      // Shadow Big.prototype.constructor which points to Object.\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.strict = STRICT;\r\n    Big.roundDown = 0;\r\n    Big.roundHalfUp = 1;\r\n    Big.roundHalfEven = 2;\r\n    Big.roundUp = 3;\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    if (!NUMERIC.test(n)) {\r\n      throw Error(INVALID + 'number');\r\n    }\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n   * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, sd, rm, more) {\r\n    var xc = x.c;\r\n\r\n    if (rm === UNDEFINED) rm = x.constructor.RM;\r\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    if (sd < 1) {\r\n      more =\r\n        rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n        rm === 1 && xc[0] >= 5 ||\r\n        rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n      );\r\n\r\n      xc.length = 1;\r\n\r\n      if (more) {\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        x.e = x.e - sd + 1;\r\n        xc[0] = 1;\r\n      } else {\r\n\r\n        // Zero.\r\n        xc[0] = x.e = 0;\r\n      }\r\n    } else if (sd < xc.length) {\r\n\r\n      // xc[sd] is the digit after the digit that may be rounded up.\r\n      more =\r\n        rm === 1 && xc[sd] >= 5 ||\r\n        rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n          (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n        rm === 3 && (more || !!xc[0]);\r\n\r\n      // Remove any digits after the required precision.\r\n      xc.length = sd;\r\n\r\n      // Round up?\r\n      if (more) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up.\r\n        for (; ++xc[--sd] > 9;) {\r\n          xc[sd] = 0;\r\n          if (sd === 0) {\r\n            ++x.e;\r\n            xc.unshift(1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (sd = xc.length; !xc[--sd];) xc.pop();\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   */\r\n  function stringify(x, doExponential, isNonzero) {\r\n    var e = x.e,\r\n      s = x.c.join(''),\r\n      n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (doExponential) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) {\r\n        for (e -= n; e--;) s += '0';\r\n      } else if (e < n) {\r\n        s = s.slice(0, e) + '.' + s.slice(e);\r\n      }\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && isNonzero ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n   */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) {\r\n      y.s = k;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n    q.s = k;\r\n    k = p < 0 ? 0 : p;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n      p--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (yc[0]) {\r\n        y.s = -b;\r\n      } else if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = 1;\r\n      }\r\n      return y;\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n  \r\n  \r\n  /*\r\n   * Return a new Big whose value is the value of this Big negated.\r\n   */\r\n  P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var e, k, t,\r\n      x = this,\r\n      Big = x.constructor;\r\n\r\n    y = new Big(y);\r\n\r\n    // Signs differ?\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (!yc[0]) {\r\n        if (xc[0]) {\r\n          y = new Big(x);\r\n        } else {\r\n          y.s = x.s;\r\n        }\r\n      }\r\n      return y;\r\n    }\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (e = xe - ye) {\r\n      if (e > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        e = -e;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; e--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    e = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (k) {\r\n      xc.unshift(k);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor('1'),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n      throw Error(INVALID + 'exponent');\r\n    }\r\n\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n   * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.prec = function (sd, rm) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    return round(new this.constructor(this), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n   * using rounding mode rm, or Big.RM if rm is not specified.\r\n   * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.round = function (dp, rm) {\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    return round(new this.constructor(this), dp + this.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big('0.5');\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) {\r\n      throw Error(NAME + 'No square root');\r\n    }\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s + '');\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) {\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = b;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), ++dp, rm);\r\n      for (; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, true, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n      // x.e may have changed if the value is rounded up.\r\n      for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, false, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toJSON = P.toString = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Big as a primitve number.\r\n   */\r\n  P.toNumber = function () {\r\n    var n = Number(stringify(this, true, true));\r\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n      throw Error(NAME + 'Imprecise conversion');\r\n    }\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * rounding mode rm, or Big.RM if rm is not specified.\r\n   * Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      n = x.c[0];\r\n\r\n    if (sd !== UNDEFINED) {\r\n      if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n        throw Error(INVALID + 'precision');\r\n      }\r\n      x = round(new Big(x), sd, rm);\r\n      for (; x.c.length < sd;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    if (Big.strict === true) {\r\n      throw Error(NAME + 'valueOf disallowed');\r\n    }\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n\n},{}],18:[function(require,module,exports){\n\n},{}],19:[function(require,module,exports){\narguments[4][18][0].apply(exports,arguments)\n},{\"dup\":18}],20:[function(require,module,exports){\n(function (Buffer){(function (){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"base64-js\":16,\"buffer\":20,\"ieee754\":58}],21:[function(require,module,exports){\nmodule.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n\n},{}],22:[function(require,module,exports){\n/**\n* Cache data structure with:\n*  - enumerable items\n*  - unique hash item access (if none is passed in, one is generated)\n*  - size (length) expiration\n*  - controllable expiration (e.g. keep in cache longer if older/less likely to change)\n*  - time-based expiration\n*  - custom expiration based on passed-in function\n*\n* Also:\n*  - built to work well with browserify\n*  - no dependencies at all\n*  - pet friendly\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nconst libLinkedList = require(`./LinkedList.js`);\n\nclass CashMoney extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'ObjectCache';\n\n\t\t// The map of node objects by hash because Reasons.\n\t\tthis._HashMap = {};\n\n\t\tthis._RecordMap = {};\n\n\t\tthis._List = new libLinkedList();\n\n\t\t// If the list gets over maxLength, we will automatically remove nodes on insertion.\n\t\tthis.maxLength = 0;\n\n\t\t// If cache entries get over this age, they are removed with prune\n\t\tthis.maxAge = 0;\n\t}\n\n\tget RecordMap()\n\t{\n\t\treturn this._RecordMap;\n\t}\n\n\t// Add (or update) a node in the cache\n\tput(pData, pHash)\n\t{\n\t\t// If the hash of the record exists\n\t\tif (this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\t// Just update the hashed records datum\n\t\t\tthis._HashMap[pHash].Datum = pData;\n\t\t\tthis._RecordMap[pHash] = pData;\n\t\t\treturn this._HashMap[pHash].Datum;\n\t\t}\n\n\t\tlet tmpNode = this._List.push(pData, pHash);\n\t\tthis._HashMap[tmpNode.Hash] = tmpNode;\n\t\tthis._RecordMap[pHash] = pData;\n\n\t\t// Automatically prune if over length, but only prune this nodes worth.\n\t\tif (this.maxLength > 0   &&   this._List.length > this.maxLength)\n\t\t{\n\t\t\t// Pop it off the head of the list\n\t\t\ttmpNode = this._List.pop();\n\t\t\t// Also remove it from the hashmap\n\t\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\t\tdelete this._HashMap[tmpNode.Hash];\n\t\t}\n\n\t\t// Now some expiration properties on the node metadata... namely the birthdate in ms of the node\n\t\ttmpNode.Metadata.Created = +new Date();\n\n\t\treturn tmpNode.Datum;\n\t}\n\n\t// Read a datum by hash from the cache\n\tread(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._HashMap[pHash].Datum;\n\t}\n\n\t// Reinvigorate a node based on hash, updating the timestamp and moving it to the head of the list (also removes custom metadata)\n\ttouch(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get the old node out of the list\n\t\tlet tmpNode = this._List.remove(this._HashMap[pHash]);\n\t\t// Remove it from the hash map\n\t\tdelete this._RecordMap[pHash];\n\t\tdelete this._HashMap[pHash];\n\n\t\t// Now put it back, fresh.\n\t\treturn this.put(tmpNode.Datum, tmpNode.Hash);\n\t}\n\n\t// Expire a cached record based on hash\n\texpire(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpNode = this._HashMap[pHash];\n\n\t\t// Remove it from the list of cached records\n\t\ttmpNode = this._List.remove(tmpNode);\n\t\t// Also remove it from the hashmap\n\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\tdelete this._HashMap[tmpNode.Hash];\n\n\t\t// Return it in case the consumer wants to do anything with it\n\t\treturn tmpNode;\n\t}\n\n\t// Prune records from the cached set based on maxAge\n\tpruneBasedOnExpiration(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tif (this.maxAge < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now enumerate each record and remove any that are expired\n\t\tlet tmpNow = +new Date();\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\t// Expire the node if it is older than max age milliseconds\n\t\t\tif (tmpNow - this._HashMap[tmpKeys[i]].Metadata.Created >= this.maxAge)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on maxLength\n\tpruneBasedOnLength(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\t// Pop records off until we have reached maxLength unless it's 0\n\t\tif (this.maxLength > 0)\n\t\t{\n\t\t\twhile (this._List.length > this.maxLength)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this._List.pop());\n\t\t\t}\n\t\t}\n\n\t\treturn fComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on passed in pPruneFunction(pDatum, pHash, pNode) -- returning true expires it\n\tpruneCustom(fComplete, fPruneFunction, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\tlet tmpNode = this._HashMap[tmpKeys[i]];\n\t\t\t// Expire the node if the passed in function returns true\n\t\t\tif (fPruneFunction(tmpNode.Datum, tmpNode.Hash, tmpNode))\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune the list down to the asserted rules (max age then max length if still too long)\n\tprune(fComplete)\n\t{\n\t\tlet tmpRemovedRecords = [];\n\n\t\t// If there are no cached records, we are done.\n\t\tif (this._List.length < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now prune based on expiration time\n\t\tthis.pruneBasedOnExpiration((fExpirationPruneComplete)=>\n\t\t\t{\n\t\t\t\t// Now prune based on length, then return the removed records in the callback.\n\t\t\t\tthis.pruneBasedOnLength(fComplete, tmpRemovedRecords);\n\t\t\t}, tmpRemovedRecords);\n\t}\n\n\t// Get a low level node (including metadata statistics) by hash from the cache\n\tgetNode(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\n\t\treturn this._HashMap[pHash];\n\t}\n}\n\nmodule.exports = CashMoney;\n},{\"./LinkedList.js\":24,\"fable-serviceproviderbase\":34}],23:[function(require,module,exports){\n/**\n* Double Linked List Node\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Linked List Node Prototype\n*\n* @class LinkedListNode\n* @constructor\n*/\n\nclass LinkedListNode\n{\n\tconstructor()\n\t{\n\t\tthis.Hash = false;\n\t\tthis.Datum = false;\n\n\t\t// This is where expiration and other elements are stored;\n\t\tthis.Metadata = {};\n\n\t\tthis.LeftNode = false;\n\t\tthis.RightNode = false;\n\n\t\t// To allow safe specialty operations on nodes\n\t\tthis.__ISNODE = true;\n\t}\n}\n\nmodule.exports = LinkedListNode;\n},{}],24:[function(require,module,exports){\n\"use strict\"\n/**\n* Simple double linked list to hold the cache entries in, in order.\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module FeeFiFo\n*/\n\nconst libLinkedListNode = require('./LinkedList-Node.js');\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nclass LinkedList\n{\n\tconstructor()\n\t{\n\t\t// Total number of nodes ever processed by this ADT\n\t\tthis.totalNodes = 0;\n\n\t\t// The length of the set of nodes currently in the list\n\t\tthis.length = 0;\n\n\t\tthis.head = false;\n\t\tthis.tail = false;\n\t}\n\n\t// Create a node object.\n\tinitializeNode(pDatum, pHash)\n\t{\n\t\t// Don't allow undefined to be added to the list because of reasons\n\t\tif (typeof(pDatum) === 'undefined')\n\t\t\treturn false;\n\n\t\tthis.totalNodes++;\n\n\t\t// Get (or create) a unique hash\n\t\tlet tmpHash = (typeof(pHash) != 'undefined') ? pHash : `NODE[${this.totalNodes}]`;\n\n\t\tlet tmpNode = new libLinkedListNode();\n\n\t\ttmpNode.Hash = tmpHash;\n\t\ttmpNode.Datum = pDatum;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Add a node to the end (right of tail) of the list.\n\tappend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.tail.RightNode = tmpNode;\n\t\ttmpNode.LeftNode = this.tail;\n\t\tthis.tail = tmpNode;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Append to tail of list (FIFO)\n\tpush(pDatum, pHash)\n\t{\n\t\treturn this.append(pDatum, pHash);\n\t}\n\n\t// Add a node to the beginning (left of head) of the list.\n\tprepend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.head.LeftNode = tmpNode;\n\t\ttmpNode.RightNode = this.head;\n\t\tthis.head = tmpNode;\n\t\treturn tmpNode;\n\t}\n\n\t// Remove a node from the list\n\tremove(pNode)\n\t{\n\t\tif (typeof(pNode) === 'undefined')\n\t\t\treturn false;\n\n\t\tif (!pNode.__ISNODE)\n\t\t\treturn false;\n\n\t\tthis.length--;\n\n\t\t// Last element in list.  Empty it out.\n\t\tif (this.length < 1)\n\t\t{\n\t\t\tthis.head = false;\n\t\t\tthis.tail = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's somewhere in the middle, surgically remove it.\n\t\tif (pNode.LeftNode && pNode.RightNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = pNode.RightNode;\n\t\t\tpNode.RightNode.LeftNode = pNode.LeftNode;\n\n\t\t\tpNode.RightNode = false;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's the tail\n\t\tif (pNode.LeftNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = false;\n\t\t\tthis.tail = pNode.LeftNode;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It must be the head\n\t\tpNode.RightNode.LeftNode = false;\n\t\tthis.head = pNode.RightNode;\n\t\tpNode.RightNode = false;\n\t\treturn pNode;\n\t}\n\n\t// Remove the head of the list (FIFO)\n\tpop()\n\t{\n\t\treturn this.remove(this.head);\n\t}\n\n\t// Enumerate over each node IN ORDER, running the function fAction(pDatum, pHash, fCallback) then calling the function fComplete callback when done\n\teach(fAction, fComplete)\n\t{\n\t\tif (this.length < 1)\n\t\t\treturn fComplete();\n\n\t\tlet tmpNode = false;\n\n\t\tlet fIterator = (pError)=>\n\t\t{\n\t\t\t// If the user passed in a callback with an error, call their callback with the error\n\t\t\tif (pError)\n\t\t\t\treturn fComplete(pError);\n\n\t\t\t// If there is no node, this must be the initial run.\n\t\t\tif (!tmpNode)\n\t\t\t\ttmpNode = this.head;\n\t\t\t// Check if we are at the tail of the list\n\t\t\telse if (!tmpNode.RightNode)\n\t\t\t\treturn fComplete();\n\t\t\t// Proceed to the next node\n\t\t\telse\n\t\t\t\ttmpNode = tmpNode.RightNode;\n\n\t\t\t// Call the actual action\n\t\t\t// I hate this pattern because long tails eventually cause stack overflows.\n\t\t\tfAction(tmpNode.Datum, tmpNode.Hash, fIterator);\n\t\t};\n\n\t\t// Now kick off the iterator\n\t\treturn fIterator();\n\t}\n\n\t// Seek a specific node, 0 is the index of the first node.\n\tseek(pNodeIndex)\n\t{\n\t\tif (!pNodeIndex)\n\t\t\treturn false;\n\t\tif (this.length < 1)\n\t\t\treturn false;\n\t\tif (pNodeIndex >= this.length)\n\t\t\treturn false;\n\n\t\tlet tmpNode = this.head;\n\t\tfor (let i = 0; i < pNodeIndex; i++)\n\t\t{\n\t\t\ttmpNode = tmpNode.RightNode;\n\t\t}\n\n\t\treturn tmpNode;\n\t}\n}\n\nmodule.exports = LinkedList;\n},{\"./LinkedList-Node.js\":23}],25:[function(require,module,exports){\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n},{}],26:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n},{}],27:[function(require,module,exports){\n/**\n* Base Logger Class\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass BaseLogger extends libFableServiceProviderBase\n{\n\tconstructor(pLogStreamSettings, pLogStreamHash)\n\t{\n\t\tsuper(pLogStreamSettings, pLogStreamHash);\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = (typeof(pLogStreamSettings) == 'object') ? pLogStreamSettings : {};\n\n\t\tthis.serviceType = 'Logging-Provider';\n\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\t// We added this as the mechanism for tracking loggers to allow multiple simultaneous streams\n\t\t// to the same provider.\n\t\tthis.loggerUUID = this.generateInsecureUUID();\n\n\t\t// Eventually we can use this array to ompute which levels the provider allows.\n\t\t// For now it's just used to precompute some string concatenations.\n\t\tthis.levels = (\n\t\t\t[\n\t\t\t\t\"trace\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"info\",\n\t\t\t\t\"warn\",\n\t\t\t\t\"error\",\n\t\t\t\t\"fatal\"\n\t\t\t]);\n\t}\n\n\t// This is meant to generate programmatically insecure UUIDs to identify loggers\n\tgenerateInsecureUUID()\n\t{\n\t\tlet tmpDate = new Date().getTime();\n\t\tlet tmpUUID = 'LOGSTREAM-xxxxxx-yxxxxx'.replace(/[xy]/g,\n\t\t\t\t(pCharacter) =>\n\t\t\t\t{\n\t\t\t\t\t// Funny algorithm from w3resource that is twister-ish without the deep math and security\n\t\t\t\t\t// ..but good enough for unique log stream identifiers\n\t\t\t\t\tlet tmpRandomData = (tmpDate + Math.random()*16)%16 | 0;\n\t\t\t\t\ttmpDate = Math.floor(tmpDate/16);\n\n\t\t\t\t\treturn (pCharacter =='x' ? tmpRandomData : (tmpRandomData&0x3|0x8)).toString(16);\n\t\t\t\t});\n\t\treturn tmpUUID;\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n\n},{\"fable-serviceproviderbase\":34}],28:[function(require,module,exports){\n/**\n* Default Logger Provider Function\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\nvar getDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\ttmpDefaultProviders.default = tmpDefaultProviders.console;\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();\n},{\"./Fable-Log-Logger-Console.js\":30}],29:[function(require,module,exports){\nmodule.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]\n},{}],30:[function(require,module,exports){\nlet libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings);\n\n\t\tthis._ShowTimeStamps = this._Settings.hasOwnProperty('showtimestamps') ? (this._Settings.showtimestamps == true) : true;\n\t\tthis._FormattedTimeStamps = this._Settings.hasOwnProperty('formattedtimestamps') ? (this._Settings.formattedtimestamps == true) : true;\n\n\t\tthis._ContextMessage = this._Settings.hasOwnProperty('Context') ? `(${this._Settings.Context})` :\n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? `(${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'Unnamed_Log_Context';\n\n\t\t// Allow the user to decide what gets output to the console\n\t\tthis._OutputLogLinesToConsole = this._Settings.hasOwnProperty('outputloglinestoconsole') ? this._Settings.outputloglinestoconsole : true;\n\t\tthis._OutputObjectsToConsole = this._Settings.hasOwnProperty('outputobjectstoconsole') ? this._Settings.outputobjectstoconsole : true;\n\n\t\t// Precompute the prefix for each level\n\t\tthis.prefixCache = {};\n\t\tfor (let i = 0; i <= this.levels.length; i++)\n\t\t{\n\t\t\tthis.prefixCache[this.levels[i]] = `[${this.levels[i]}] ${this._ContextMessage}: `;\n\n\t\t\tif (this._ShowTimeStamps)\n\t\t\t{\n\t\t\t\t// If there is a timestamp we need a to prepend space before the prefixcache string, since the timestamp comes first\n\t\t\t\tthis.prefixCache[this.levels[i]] = ' '+this.prefixCache[this.levels[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpTimeStamp = '';\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = (new Date()).toISOString();\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = +new Date();\n\t\t}\n\n\t\tlet tmpLogLine = `${tmpTimeStamp}${this.prefixCache[pLevel]}${pLogText}`;\n\n\t\tif (this._OutputLogLinesToConsole)\n\t\t{\n\t\t\tconsole.log(tmpLogLine);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (this._OutputObjectsToConsole && (typeof(pObject) !== 'undefined'))\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 2));\n\t\t}\n\n\t\t// Provide an easy way to be overridden and be consistent\n\t\treturn tmpLogLine;\n\t}\n}\n\nmodule.exports = ConsoleLogger;\n},{\"./Fable-Log-BaseLogger.js\":27}],31:[function(require,module,exports){\nconst libConsoleLog = require('./Fable-Log-Logger-Console.js');\nconst libFS = require('fs');\nconst libPath = require('path');\n\nclass SimpleFlatFileLogger extends libConsoleLog\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings, pFableLog);\n\n\t\t// If a path isn't provided for the logfile, it tries to use the ProductName or Context\n\t\tthis.logFileRawPath = (this._Settings.hasOwnProperty('path')) ? this._Settings.path : `./${this._ContextMessage}.log`;\n\t\tthis.logFilePath = libPath.normalize(this.logFileRawPath);\n\n\t\tthis.logFileStreamOptions = (this._Settings.hasOwnProperty('fileStreamoptions')) ? this._Settings.fileStreamOptions : (\n\t\t\t{\n\t\t\t\t\"flags\": \"a\",\n\t\t\t\t\"encoding\": \"utf8\"\n\t\t\t})\n\n\t\tthis.fileWriter = libFS.createWriteStream(this.logFilePath, this.logFileStreamOptions);\n\n\t\tthis.activelyWriting = false;\n\n\t\tthis.logLineStrings = [];\n\t\tthis.logObjectStrings = [];\n\n\t\tthis.defaultWriteCompleteCallback = ()=>{};\n\t\tthis.defaultBufferFlushCallback = ()=>{};\n\t}\n\n\tcloseWriter(fCloseComplete)\n\t{\n\t\tlet tmpCloseComplete = (typeof(fCloseComplete) == 'function') ? fCloseComplete : ()=>{};\n\t\tif (this.fileWriter)\n\t\t{\n\t\t\tthis.fileWriter.end('\\n');\n\t\t\treturn this.fileWriter.once('finish', tmpCloseComplete.bind(this));\n\t\t}\n\t}\n\n\tcompleteBufferFlushToLogFile(fFlushComplete)\n\t{\n\t\tthis.activelyWriting = false;\n\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\tif (this.logLineStrings.length > 0)\n\t\t{\n\t\t\tthis.flushBufferToLogFile(tmpFlushComplete);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpFlushComplete();\n\t\t}\n\t}\n\n\tflushBufferToLogFile(fFlushComplete)\n\t{\n\t\tif (!this.activelyWriting)\n\t\t{\n\t\t\t// Only want to be writing one thing at a time....\n\t\t\tthis.activelyWriting = true;\n\n\t\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\t\t// Get the current buffer arrays.  These should always have matching number of elements.\n\t\t\tlet tmpLineStrings = this.logLineStrings;\n\t\t\tlet tmpObjectStrings = this.logObjectStrings;\n\n\t\t\t// Reset these to be filled while we process this queue...\n\t\t\tthis.logLineStrings = [];\n\t\t\tthis.logObjectStrings = [];\n\n\t\t\t// This is where we will put each line before writing it to the file...\n\t\t\tlet tmpConstructedBufferOutputString = '';\n\n\t\t\tfor (let i = 0; i < tmpLineStrings.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: Windows Newline?   ....... yo no se!\n\t\t\t\ttmpConstructedBufferOutputString += `${tmpLineStrings[i]}\\n`;\n\t\t\t\tif (tmpObjectStrings[i] !== false)\n\t\t\t\t{\n\t\t\t\t\ttmpConstructedBufferOutputString += `${tmpObjectStrings[i]}\\n`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.fileWriter.write(tmpConstructedBufferOutputString, 'utf8'))\n\t\t\t{\n\t\t\t\t// If the streamwriter returns false, we need to wait for it to drain.\n\t\t\t\tthis.fileWriter.once('drain', this.completeBufferFlushToLogFile.bind(this, tmpFlushComplete));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.completeBufferFlushToLogFile(tmpFlushComplete);\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpLogLine = super.write(pLevel, pLogText, pObject);\n\n\t\t// Use a very simple array as the write buffer\n\t\tthis.logLineStrings.push(tmpLogLine);\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tthis.logObjectStrings.push(JSON.stringify(pObject, null, 4));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logObjectStrings.push(false);\n\t\t}\n\n\t\tthis.flushBufferToLogFile();\n\t}\n}\n\nmodule.exports = SimpleFlatFileLogger;\n},{\"./Fable-Log-Logger-Console.js\":30,\"fs\":19,\"path\":72}],32:[function(require,module,exports){\n/**\n* Fable Logging Service\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass FableLog extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'Logging';\n\n\t\tlet tmpSettings = (typeof(pSettings) === 'object') ? pSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders-Node.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'default',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\nmodule.exports = FableLog;\nmodule.exports.LogProviderBase = require('./Fable-Log-BaseLogger.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-Console.js');\nmodule.exports.LogProviderFlatfile = require('./Fable-Log-Logger-SimpleFlatFile.js');\n\n},{\"./Fable-Log-BaseLogger.js\":27,\"./Fable-Log-DefaultProviders-Node.js\":28,\"./Fable-Log-DefaultStreams.json\":29,\"./Fable-Log-Logger-Console.js\":30,\"./Fable-Log-Logger-SimpleFlatFile.js\":31,\"fable-serviceproviderbase\":34}],33:[function(require,module,exports){\n/**\n* Fable Core Pre-initialization Service Base\n*\n* For a couple services, we need to be able to instantiate them before the Fable object is fully initialized.\n* This is a base class for those services.\n*\n* @author <steven@velozo.com>\n*/\n\nclass FableCoreServiceProviderBase\n{\n\tconstructor(pOptions, pServiceHash)\n\t{\n\t\tthis.fable = false;\n\n\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions : {};\n\n\t\tthis.serviceType = 'Unknown';\n\n\t\t// The hash will be a non-standard UUID ... the UUID service uses this base class!\n\t\tthis.UUID = `CORESVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`;\n\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash : `${this.UUID}`;\n\t}\n\n\n\tstatic isFableService = true;\n\n\t// After fable is initialized, it would be expected to be wired in as a normal service.\n\tconnectFable(pFable)\n\t{\n\t\tthis.fable = pFable;\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = FableCoreServiceProviderBase;\n\n},{}],34:[function(require,module,exports){\n/**\n* Fable Service Base\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tthis.fable = pFable;\n\n\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t: ((typeof(pFable) === 'object') && !pFable.isFable) ? pFable\n\t\t\t\t\t\t: {};\n\n\t\tthis.serviceType = 'Unknown';\n\n\t\tif (typeof(pFable.getUUID) == 'function')\n\t\t{\n\t\t\tthis.UUID = pFable.getUUID();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.UUID = `NoFABLESVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`\n\t\t}\n\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash : `${this.UUID}`;\n\n\t\t// Pull back a few things\n\t\tthis.log = this.fable.log;\n\t\tthis.servicesMap = this.fable.servicesMap;\n\t\tthis.services = this.fable.services;\n\t}\n\n\tstatic isFableService = true;\n}\n\nmodule.exports = FableServiceProviderBase;\n\nmodule.exports.CoreServiceProviderBase = require('./Fable-ServiceProviderBase-Preinit.js');\n},{\"./Fable-ServiceProviderBase-Preinit.js\":33}],35:[function(require,module,exports){\nmodule.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n\n},{}],36:[function(require,module,exports){\n(function (process){(function (){\n/**\n* Fable Settings Template Processor\n*\n* This class allows environment variables to come in via templated expressions, and defaults to be set.\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\nconst libPrecedent = require('precedent');\n\nclass FableSettingsTemplateProcessor\n{\n\tconstructor(pDependencies)\n\t{\n        // Use a no-dependencies templating engine to parse out environment variables\n\t\tthis.templateProcessor = new libPrecedent();\n\n        // TODO: Make the environment variable wrap expression demarcation characters configurable?\n\t\tthis.templateProcessor.addPattern('${', '}',\n\t\t\t(pTemplateValue)=>\n\t\t\t{\n\t\t\t\tlet tmpTemplateValue = pTemplateValue.trim();\n\n\t\t\t\tlet tmpSeparatorIndex = tmpTemplateValue.indexOf('|');\n\n\t\t\t\tconst tmpDefaultValue = tmpSeparatorIndex >= 0 ? tmpTemplateValue.substring(tmpSeparatorIndex+1) : '';\n\n\t\t\t\tlet tmpEnvironmentVariableName = (tmpSeparatorIndex > -1) ? tmpTemplateValue.substring(0, tmpSeparatorIndex) : tmpTemplateValue;\n\n\t\t\t\tif (process.env.hasOwnProperty(tmpEnvironmentVariableName))\n\t\t\t\t{\n\t\t\t\t\treturn process.env[tmpEnvironmentVariableName];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpDefaultValue;\n\t\t\t\t}\n\t\t\t});\n    }\n\n    parseSetting(pString)\n    {\n        return this.templateProcessor.parseString(pString);\n    }\n}\n\nmodule.exports = FableSettingsTemplateProcessor;\n\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":78,\"precedent\":75}],37:[function(require,module,exports){\n/**\n* Fable Settings Add-on\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nconst libFableSettingsTemplateProcessor = require('./Fable-Settings-TemplateProcessor.js');\n\nclass FableSettings extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'SettingsManager';\n\n\t\t// Initialize the settings value template processor\n\t\tthis.settingsTemplateProcessor = new libFableSettingsTemplateProcessor();\n\n\t\t// set straight away so anything that uses it respects the initial setting\n\t\tthis._configureEnvTemplating(pSettings);\n\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')));\n\t}\n\n\t// Update the configuration for environment variable templating based on the current settings object\n\t_configureEnvTemplating(pSettings)\n\t{\n\t\t// default environment variable templating to on\n\t\tthis._PerformEnvTemplating = !pSettings || pSettings.NoEnvReplacement !== true;\n\t}\n\n\t// Resolve (recursive) any environment variables found in settings object.\n\t_resolveEnv(pSettings)\n\t{\n\t\tfor (const tmpKey in pSettings)\n\t\t{\n\t\t\tif (typeof(pSettings[tmpKey]) === 'object')\n\t\t\t{\n\t\t\t\tthis._resolveEnv(pSettings[tmpKey]);\n\t\t\t}\n\t\t\telse if (typeof(pSettings[tmpKey]) === 'string')\n\t\t\t{\n\t\t\t\tpSettings[tmpKey] = this.settingsTemplateProcessor.parseSetting(pSettings[tmpKey]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if a value is an object (but not an array).\n\t */\n\t_isObject(value)\n\t{\n\t\treturn typeof(value) === 'object' && !Array.isArray(value);\n\t}\n\n\t/**\n\t * Merge two plain objects. Keys that are objects in both will be merged property-wise.\n\t */\n\t_deepMergeObjects(toObject, fromObject)\n\t{\n\t\tif (!fromObject || !this._isObject(fromObject))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.keys(fromObject).forEach((key) =>\n\t\t{\n\t\t\tconst fromValue = fromObject[key];\n\t\t\tif (this._isObject(fromValue))\n\t\t\t{\n\t\t\t\tconst toValue = toObject[key];\n\t\t\t\tif (toValue && this._isObject(toValue))\n\t\t\t\t{\n\t\t\t\t\t// both are objects, so do a recursive merge\n\t\t\t\t\tthis._deepMergeObjects(toValue, fromValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoObject[key] = fromValue;\n\t\t});\n\t\treturn toObject;\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\t\ttmpSettingsTo = this._deepMergeObjects(tmpSettingsTo, tmpSettingsFromCopy);\n\n\t\tif (this._PerformEnvTemplating)\n\t\t{\n\t\t\tthis._resolveEnv(tmpSettingsTo);\n\t\t}\n\t\t// Update env tempating config, since we just updated the config object, and it may have changed\n\t\tthis._configureEnvTemplating(tmpSettingsTo);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\n\t\tthis.settings = this._deepMergeObjects(tmpSettingsFromCopy, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = FableSettings;\nmodule.exports.new = autoConstruct;\n},{\"./Fable-Settings-Default\":35,\"./Fable-Settings-TemplateProcessor.js\":36,\"fable-serviceproviderbase\":34}],38:[function(require,module,exports){\n/**\n* Random Byte Generator - Browser version\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn this.generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n\n},{}],39:[function(require,module,exports){\n/**\n* Fable UUID Generator\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;0\n\nconst libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'UUID';\n\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = FableUUID;\nmodule.exports.new = autoConstruct;\n\n},{\"./Fable-UUID-Random.js\":38,\"fable-serviceproviderbase\":34}],40:[function(require,module,exports){\n/**\n* Fable Application Services Management\n* @author <steven@velozo.com>\n*/\n\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableService extends libFableServiceBase.CoreServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'ServiceManager';\n\n\t\tthis.serviceTypes = [];\n\n\t\t// A map of instantiated services\n\t\tthis.servicesMap = {};\n\n\t\t// A map of the default instantiated service by type\n\t\tthis.services = {};\n\n\t\t// A map of class constructors for services\n\t\tthis.serviceClasses = {};\n\n\t\t// If we need extra service initialization capabilities\n\t\tthis.extraServiceInitialization = false;\n\t}\n\n\taddServiceType(pServiceType, pServiceClass)\n\t{\n\t\tif (this.servicesMap.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\t// TODO: Check if any services are running?\n\t\t\tthis.fable.log.warn(`Adding a service type [${pServiceType}] that already exists.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the container for instantiated services to go in\n\t\t\tthis.servicesMap[pServiceType] = {};\n\n\t\t\t// Add the type to the list of types\n\t\t\tthis.serviceTypes.push(pServiceType);\n\t\t}\n\n\t\t// Using the static member of the class is a much more reliable way to check if it is a service class than instanceof\n\t\tif ((typeof(pServiceClass) == 'function') && (pServiceClass.isFableService))\n\t\t{\n\t\t\t// Add the class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = pServiceClass;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the base class to the list of classes\n\t\t\tthis.fable.log.error(`Attempted to add service type [${pServiceType}] with an invalid class.  Using base service class, which will not crash but won't provide meaningful services.`);\n\t\t\tthis.serviceClasses[pServiceType] = libFableServiceBase;\n\t\t}\n\t}\n\n\t// This is for the services that are meant to run mostly single-instance so need a default at initialization\n\taddAndInstantiateServiceType(pServiceType, pServiceClass)\n\t{\n\t\tthis.addServiceType(pServiceType, pServiceClass);\n\t\treturn this.instantiateServiceProvider(pServiceType, {}, `${pServiceType}-Default`);\n\t}\n\n\t// Some services expect to be overloaded / customized class.\n\tinstantiateServiceProviderFromPrototype(pServiceType, pOptions, pCustomServiceHash, pServicePrototype)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new pServicePrototype(this.fable, pOptions, pCustomServiceHash);\n\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\n\tinstantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = this.instantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\t// Create a service provider but don't register it to live forever in fable.services\n\tinstantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new this.serviceClasses[pServiceType](this.fable, pOptions, pCustomServiceHash);\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\t\treturn tmpService;\n\t}\n\n\t// Connect an initialized service provider that came before Fable was initialized\n\tconnectPreinitServiceProviderInstance(pServiceInstance)\n\t{\n\t\tlet tmpServiceType = pServiceInstance.serviceType;\n\t\tlet tmpServiceHash = pServiceInstance.Hash;\n\n\t\t// The service should already be instantiated, so just connect it to fable\n\t\tpServiceInstance.connectFable(this.fable);\n\n\t\tif (!this.servicesMap.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\t// If the core service hasn't registered itself yet, create the service container for it.\n\t\t\t// This means you couldn't register another with this type unless it was later registered with a constructor class.\n\t\t\tthis.servicesMap[tmpServiceType] = {};\n\t\t}\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[tmpServiceType][tmpServiceHash] = pServiceInstance;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(tmpServiceType, tmpServiceHash)\n\t\t}\n\n\t\treturn pServiceInstance;\n\t}\n\n\tsetDefaultServiceInstantiation(pServiceType, pServiceHash)\n\t{\n\t\tif (this.servicesMap[pServiceType].hasOwnProperty(pServiceHash))\n\t\t{\n\t\t\tthis.fable[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\tthis.services[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nmodule.exports = FableService;\n\nmodule.exports.ServiceProviderBase = libFableServiceBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceBase.CoreServiceProviderBase;\n},{\"fable-serviceproviderbase\":34}],41:[function(require,module,exports){\n/**\n* Fable Application Services Support Library\n* @author <steven@velozo.com>\n*/\n// Pre-init services\nconst libFableSettings = require('fable-settings');\nconst libFableUUID = require('fable-uuid');\nconst libFableLog = require('fable-log');\n\nconst libFableServiceManager = require('./Fable-ServiceManager.js');\n\nclass Fable\n{\n\tconstructor(pSettings)\n\t{\n\t\t// Initialization Phase 0: Set up the lowest level state (core services)\n\t\t// Container for the core services prototypes.\n\t\t// This is here so if an API consumer changes the default for a core service,\n\t\t// fable still runs with what was initialized.\n\t\tthis._coreServices = {};\n\n\t\t// Instantiate the default Settings Manager\n\t\tthis._coreServices.SettingsManager = new libFableSettings(pSettings);\n\t\t// Instantiate the UUID generator\n\t\tthis._coreServices.UUID = new libFableUUID(this._coreServices.SettingsManager.settings);\n\t\t// Instantiate the logging system\n\t\tthis._coreServices.Logging = new libFableLog(this._coreServices.SettingsManager.settings);\n\t\tthis._coreServices.Logging.initialize();\n\n\t\t// Initialization Phase 1: Instantiate the service manager\n\t\t// This is the start actual bootstrapping point for fable\n\t\tthis._coreServices.ServiceManager = new libFableServiceManager(this);\n\t\tthis.serviceManager = this._coreServices.ServiceManager;\n\t\tthis.serviceManager.connectFable(this);\n\t\t// Bootstrapping of fable into the Service Manager is complete\n\n\t\t// Initialization Phase 2: Map in the default services.\n\t\t// They will then be available in the Default service provider set as well.\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.ServiceManager);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.UUID);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.Logging);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.SettingsManager);\n\n\t\t// Initialize and instantiate the default baked-in Data Arithmatic service\n\t\tthis.serviceManager.addAndInstantiateServiceType('EnvironmentData', require('./services/Fable-Service-EnvironmentData.js'));\n\t\tthis.serviceManager.addServiceType('Template', require('./services/Fable-Service-Template.js'));\n\t\tthis.serviceManager.addServiceType('MetaTemplate', require('./services/Fable-Service-MetaTemplate.js'));\n\t\tthis.serviceManager.addServiceType('Anticipate', require('./services/Fable-Service-Anticipate.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('DataFormat', require('./services/Fable-Service-DataFormat.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('DataGeneration', require('./services/Fable-Service-DataGeneration.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('Utility', require('./services/Fable-Service-Utility.js'));\n\t\tthis.serviceManager.addServiceType('Operation', require('./services/Fable-Service-Operation.js'));\n\t\tthis.serviceManager.addServiceType('RestClient', require('./services/Fable-Service-RestClient.js'));\n\t\tthis.serviceManager.addServiceType('CSVParser', require('./services/Fable-Service-CSVParser.js'));\n\t\tthis.serviceManager.addServiceType('Manifest', require('manyfest'));\n\t\tthis.serviceManager.addServiceType('ObjectCache', require('cachetrax'));\n\t\tthis.serviceManager.addServiceType('FilePersistence', require('./services/Fable-Service-FilePersistence.js'));\n\t}\n\n\tget isFable()\n\t{\n\t\treturn true;\n\t}\n\n\tget settings()\n\t{\n\t\treturn this._coreServices.SettingsManager.settings;\n\t}\n\n\tget settingsManager()\n\t{\n\t\treturn this._coreServices.SettingsManager;\n\t}\n\n\tget log()\n\t{\n\t\treturn this._coreServices.Logging;\n\t}\n\n\tget services()\n\t{\n\t\treturn this._coreServices.ServiceManager.services;\n\t}\n\n\tget servicesMap()\n\t{\n\t\treturn this._coreServices.ServiceManager.servicesMap;\n\t}\n\n\tgetUUID()\n\t{\n\t\treturn this._coreServices.UUID.getUUID();\n\t}\n\n\tget fable()\n\t{\n\t\treturn this;\n\t};\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = Fable;\nmodule.exports.new = autoConstruct;\n\nmodule.exports.LogProviderBase = libFableLog.LogProviderBase;\nmodule.exports.ServiceProviderBase = libFableServiceManager.ServiceProviderBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceManager.CoreServiceProviderBase;\n\nmodule.exports.precedent = libFableSettings.precedent;\n},{\"./Fable-ServiceManager.js\":40,\"./services/Fable-Service-Anticipate.js\":42,\"./services/Fable-Service-CSVParser.js\":43,\"./services/Fable-Service-DataFormat.js\":44,\"./services/Fable-Service-DataGeneration.js\":46,\"./services/Fable-Service-EnvironmentData.js\":47,\"./services/Fable-Service-FilePersistence.js\":48,\"./services/Fable-Service-MetaTemplate.js\":49,\"./services/Fable-Service-Operation.js\":53,\"./services/Fable-Service-RestClient.js\":54,\"./services/Fable-Service-Template.js\":55,\"./services/Fable-Service-Utility.js\":56,\"cachetrax\":22,\"fable-log\":32,\"fable-settings\":37,\"fable-uuid\":39,\"manyfest\":70}],42:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceAnticipate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'AsyncAnticipate';\n\n\t\t// The queue of operations waiting to run.\n\t\tthis.operationQueue = [];\n\t\tthis.erroredOperations = [];\n\n\t\tthis.executingOperationCount = 0;\n\t\tthis.completedOperationCount = 0;\n\n\t\tthis.maxOperations = 1;\n\n\t\tthis.lastError = undefined;\n\t\tthis.waitingFunctions = [];\n\t}\n\n\tcheckQueue()\n\t{\n\t\t// This checks to see if we need to start any operations.\n\t\tif (this.operationQueue.length > 0 && this.executingOperationCount < this.maxOperations)\n\t\t{\n\t\t\tlet tmpOperation = this.operationQueue.shift();\n\t\t\tthis.executingOperationCount += 1;\n\t\t\ttmpOperation(this.buildAnticipatorCallback());\n\t\t}\n\t\telse if (this.waitingFunctions.length > 0 && this.executingOperationCount < 1)\n\t\t{\n\t\t\t// If there are no operations left, and we have waiting functions, call them.\n\t\t\tfor (let i = 0; i < this.waitingFunctions.length; i++)\n\t\t\t{\n\t\t\t\tthis.waitingFunctions[i](this.lastError);\n\t\t\t}\n\t\t\t// Reset our state\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.waitingFunctions = [];\n\t\t}\n\t}\n\n\t// Expects a function fAsynchronousFunction(fCallback)\n\tanticipate(fAsynchronousFunction)\n\t{\n\t\tthis.operationQueue.push(fAsynchronousFunction);\n\t\tthis.checkQueue();\n\t}\n\n\tbuildAnticipatorCallback()\n\t{\n\t\t// This uses closure-scoped state to track the callback state\n\t\tlet tmpCallbackState = (\n\t\t\t{\n\t\t\t\tCalled: false,\n\t\t\t\tError: undefined,\n\t\t\t\tOperationSet: this\n\t\t\t});\t\t\n\t\treturn hoistedCallback;\n\t\tfunction hoistedCallback(pError)\n\t\t{\n\t\t\tif (tmpCallbackState.Called)\n\t\t\t{\n\t\t\t\t// If they call the callback twice, throw an error\n\t\t\t\tthrow new Error(\"Anticipation async callback called twice...\");\n\t\t\t}\n\t\t\ttmpCallbackState.Called = true;\n\t\t\ttmpCallbackState.error = pError;\n\n\t\t\ttmpCallbackState.OperationSet.executingOperationCount -= 1;\n\t\t\ttmpCallbackState.OperationSet.completedOperationCount += 1;\n\n\t\t\ttmpCallbackState.OperationSet.checkQueue();\n\t\t}\n\t}\n\n\twait(fCallback)\n\t{\n\t\tthis.waitingFunctions.push(fCallback);\n\t\tthis.checkQueue();\n\t}\n}\n\nmodule.exports = FableServiceAnticipate;\n},{\"../Fable-ServiceManager.js\":40}],43:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Parsing CSVs.  Why?  Because it's a thing that needs to be done.\n*\n* 1. And the other node CSV parsers had issues with the really messy files we had.\n* \n*\n* 2. None of the CSV parsers dealt with and multi-line quoted string columns\n*    which are apparently a-ok according to the official spec.\n* Plus a lot of them are asynchronous because apparently that's the best way to\n* do anything; unfortunately some files have a sequence issue with that.\n*\n* @class CSVParser\n*/\nclass CSVParser extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'CSVParser';\n\n        this.Header = [];\n        this.HeaderFieldNames = [];\n\n        this.Delimiter = ',';\n        this.QuoteCharacter = '\"';\n\n        this.CleanCharacters = ['\\r'];\n\n        this.HeaderLineIndex = 0;\n        this.HasHeader = true;\n        this.HasSetHeader = false;\n        this.EmitHeader = false;\n\n        this.EmitJSON = true;\n\n        this.EscapedQuoteString = '&quot;';\n\n        // Current Line Parsing State\n        this.CurrentLine = '';\n        this.CurrentRecord = [];\n\n        this.InQuote = false;\n        this.InEscapedQuote = false;\n\n        this.LinesParsed = 0;\n        this.RowsEmitted = 0;\n    }\n\n    marshalRowToJSON(pRowArray)\n    {\n        if (!Array.isArray(pRowArray))\n        {\n            return false;\n        }\n\n        for (let i = this.HeaderFieldNames.length; i < pRowArray.length; i++)\n        {\n            this.HeaderFieldNames[i] = `${i}`;\n        }\n\n        let tmpObject = {};\n\n        for (let i = 0; i < pRowArray.length; i++)\n        {\n            tmpObject[this.HeaderFieldNames[i]] = pRowArray[i];\n        }\n\n        return tmpObject;\n    }\n\n    // Set the header data, for use in marshalling to JSON.\n    setHeader (pHeaderArray)\n    {\n        this.Header = pHeaderArray;\n\n        for (let i = 0; i < this.Header.length; i++)\n        {\n            if (typeof(this.Header[i]) == 'undefined')\n            {\n                this.HeaderFieldNames[i] = `${i}`;\n            }\n            else\n            {\n                this.HeaderFieldNames[i] = this.Header[i].toString();\n            }\n        }\n    }\n\n    resetRowState()\n    {\n        this.CurrentRecord = [];\n    }\n\n    pushLine()\n    {\n        for (let i = 0; i < this.CleanCharacters.length; i++)\n        {\n            this.CurrentLine = this.CurrentLine.replace(this.CleanCharacters[i],'');\n        }\n        this.CurrentRecord.push(this.CurrentLine);\n        this.CurrentLine = '';\n    }\n\n    emitRow(pFormatAsJSON)\n    {\n        let tmpFormatAsJSON = (typeof(pFormatAsJSON) == 'undefined') ? this.EmitJSON : pFormatAsJSON;\n\n        this.RowsEmitted++;\n        let tmpCompletedRecord = this.CurrentRecord;\n        this.CurrentRecord = [];\n\n        if (tmpFormatAsJSON)\n        {\n            return this.marshalRowToJSON(tmpCompletedRecord);\n        }\n        else\n        {\n            return tmpCompletedRecord;\n        }\n    }\n\n    parseCSVLine (pLineString)\n    {\n        this.LinesParsed++;\n\n        for (let i = 0; i < pLineString.length; i++)\n        {\n            if ((!this.InQuote) && (pLineString[i] == this.Delimiter))\n            {\n                this.pushLine();\n            }\n            else if (pLineString[i] == this.QuoteCharacter)\n            {\n                // If we are in the second part of an escaped quote, ignore it.\n                if (this.InEscapedQuote)\n                {\n                    this.InEscapedQuote = false;\n                }\n                // If we aren't in a quote, enter quote\n                else if (!this.InQuote)\n                {\n                    this.InQuote = true;\n                }\n                // We are in a quote, so peek forward to see if this is an \"escaped\" quote pair\n                else if ((i < pLineString.length) && (pLineString[i+1] == this.QuoteCharacter))\n                {\n                    this.CurrentLine += this.EscapedQuoteString;\n                    this.InEscapedQuote = true;\n                }\n                // We are in a quote, this isn't an \"escaped\" quote pair, so go out of quote mode\n                else\n                {\n                    this.InQuote = false;\n                }\n            }\n            else\n            {\n                this.CurrentLine += pLineString[i];\n            }\n        }\n\n        // See if we are in a multiline quoted entry -- if not, emit the row.\n        if (!this.InQuote)\n        {\n            // Push the last remaining column from the buffer to the current line.\n            this.pushLine();\n\n            // Check to see if there is a header -- and if so, if this is the header row\n            if (this.HasHeader && !this.HasSetHeader && (this.RowsEmitted == this.HeaderLineIndex))\n            {\n                this.HasSetHeader = true;\n                // Override the format as json bit\n                this.setHeader(this.emitRow(false));\n\n                // No matter what, formatting this as JSON is silly and we don't want to go there anyway.\n                if (this.EmitHeader)\n                {\n                    return this.Header;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n            else\n            {\n                return this.emitRow();\n            }\n        }\n        else\n        {\n            return false;\n        }\n    };\n}\n\nmodule.exports = CSVParser;\n},{\"fable-serviceproviderbase\":34}],44:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Data Formatting and Translation Functions\n*\n* @class DataFormat\n*/\nclass DataFormat extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'DataArithmatic';\n\n\t\t// Regular Expressions (so they don't have to be recompiled every time)\n\t\t// These could be defined as static, but I'm not sure if that will work with browserify ... and specifically the QT browser.\n\t\tthis._Regex_formatterInsertCommas = /.{1,3}/g;\n\t\t// Match Function:\n\t\t// function(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t\t// Thoughts about below:   /^([+-]?)(0*)(\\d+)(\\.(\\d+))?$/;\n\t\tthis._Regex_formatterAddCommasToNumber = /^([-+]?)(0?)(\\d+)(.?)(\\d+)$/g;\n\t\tthis._Regex_formatterDollarsRemoveCommas = /,/gi;\n\t\tthis._Regex_formatterCleanNonAlphaChar = /[^a-zA-Z]/gi;\n\t\tthis._Regex_formatterCapitalizeEachWord = /([a-zA-Z]+)/g;\n\n\t\t// TODO: Potentially pull these in from a configuration.\n\t\t// TODO: Use locale data for this if it's defaults all the way down.\n\t\tthis._Value_MoneySign_Currency = '$';\n\t\tthis._Value_NaN_Currency = '--';\n\t\tthis._Value_GroupSeparator_Number = ',';\n\n\t\tthis._Value_Prefix_StringHash = 'HSH';\n\t\tthis._Value_Clean_formatterCleanNonAlpha = '';\n\n\t\tthis._UseEngineStringStartsWith = (typeof(String.prototype.startsWith) === 'function');\n\t\tthis._UseEngineStringEndsWith = (typeof(String.prototype.endsWith) === 'function');\n\t}\n\n\n\t/*************************************************************************\n\t * String Manipulation and Comparison Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Reverse a string\n\t *\n\t * @param {string} pString - The string to reverse\n\t * @returns {string}\n\t */\n\tstringReverse (pString)\n\t{\n\t\t// TODO: Benchmark if there are faster ways we want to do this with all the newer JS stuff\n\t\t//       ... and if it will work with browserify in a clean way.\n\t\treturn pString.split('').reverse().join('');\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pStartIndex\n\t * @returns {*}\n\t */\n\tstringStartsWith (pString, pSearchString, pStartIndex)\n\t{\n\t\tif (this._UseEngineStringStartsWith)\n\t\t{\n\t\t\treturn pString.startsWith(pSearchString, pStartIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringStartsWith_Polyfill.call(pString, pSearchString, pStartIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pStartIndex - The index to start the search at\n\t * @returns {boolean}\n\t */\n\tstringStartsWith_Polyfill (pSearchString, pStartIndex)\n\t{\n\t\treturn this.slice(pStartIndex || 0, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pEndIndex\n\t * @returns {*}\n\t */\n\tstringEndsWith (pString, pSearchString, pEndIndex)\n\t{\n\t\tif (this._UseEngineStringEndsWith)\n\t\t{\n\t\t\treturn pString.endsWith(pSearchString, pEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringEndsWith_Polyfill.call(pString, pSearchString, pEndIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pEndIndex - The index to end the search at\n\t * @returns {boolean}\n\t */\n\tstringEndsWith_Polyfill (pSearchString, pEndIndex)\n\t{\n\t\t// This works much better than >= because\n\t\t// it compensates for NaN:\n\t\tif (!(pEndIndex < this.length))\n\t\t{\n\t\t\tpEndIndex = this.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpEndIndex |= 0; // round position\n\t\t}\n\t\treturn this.substr(pEndIndex - pSearchString.length, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Generate an insecure string hash.  Not meant to be secure, just a quick way to generate a hash for a string.  This is not a cryptographic hash.  Additional warranty and disclaimer ... this is not for passwords!\n\t *\n\t * @param {string} pString\n\t * @returns {string}\n\t */\n\tinsecureStringHash (pString)\n\t{\n\t\tlet tmpHash = 0;\n\t\tlet tmpStringLength = pString.length;\n\t\tlet tmpCharacterIndex = 0;\n\n\t\twhile (tmpCharacterIndex < tmpStringLength)\n\t\t{\n\t\t\ttmpHash = (tmpHash << 5) - tmpHash + pString.charCodeAt(tmpCharacterIndex++) | 0;\n\t\t}\n\n\t\treturn `${this._Value_Prefix_StringHash}${tmpHash}`;\n\t}\n\n\tcapitalizeEachWord (pString)\n\t{\n\t\treturn pString.replace(this._Regex_formatterCapitalizeEachWord,\n\t\t\t(pMatch) =>\n\t\t\t{\n\t\t\t\treturn pMatch.charAt(0).toUpperCase() + pMatch.substr(1);\n\t\t\t});\n\t}\n\n\t/**\n\t * Clean wrapping characters if they exist consistently around the string.  If they do not, the string is returned unchanged.\n\t *\n\t * @param {string} pWrapCharacter - The character expected as the wrapping character\n\t * @param {string} pString - the string to clean\n\t * @returns {string}\n\t */\n\tcleanEnclosureWrapCharacters (pWrapCharacter, pString)\n\t{\n\t\t// # Use case from ManyFest DSL:\n\t\t//\n\t\t// When a boxed property is passed in, it should have quotes of some\n\t\t// kind around it.\n\t\t//\n\t\t// For instance:\n\t\t// \t\tMyValues['Name']\n\t\t// \t\tMyValues[\"Age\"]\n\t\t// \t\tMyValues[`Cost`]\n\t\t//\n\t\t// This function is necessary to remove the wrapping quotes before object\n\t\t// resolution can occur.\n\t\tif (pString.startsWith(pWrapCharacter) && pString.endsWith(pWrapCharacter))\n\t\t{\n\t\t\treturn pString.substring(1, pString.length - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pString;\n\t\t}\n\t}\n\n\t/**\n\t * Clean a string of any non-alpha characters (including numbers)\n\t *\n\t * @param {*} pString\n\t * @returns\n\t */\n\tcleanNonAlphaCharacters (pString)\n\t{\n\t\tif ((typeof(pString) == 'string') && (pString != ''))\n\t\t{\n\t\t\treturn pString.replace(this._Regex_formatterCleanNonAlphaChar, this._Value_Clean_formatterCleanNonAlpha);\n\t\t}\n\n\t\treturn '';\n\t}\n\n\n\t/*************************************************************************\n\t * Number Formatting Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Insert commas every 3 characters from the right.  Used by formatterAddCommasToNumber().\n\t *\n\t * @param {*} pString\n\t * @returns {*}\n\t */\n\tformatterInsertCommas (pString)\n\t{\n\t\t// Reverse, because it's easier to do things from the left, given arbitrary digit counts\n\t\tlet tmpReversed = this.stringReverse(pString);\n\t\t// Add commas every three characters\n\t\tlet tmpReversedWithCommas = tmpReversed.match(this._Regex_formatterInsertCommas).join(',');\n\t\t// Reverse again (back to normal direction)\n\t\treturn this.stringReverse(tmpReversedWithCommas);\n\t}\n\n\tprocessAddCommasToNumberRegex(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t{\n\t\t// If there was no decimal, the last capture grabs the final digit, so\n\t\t// we have to put it back together with the 'before' substring\n\t\treturn pSign + (pDecimal ? this.formatterInsertCommas(pBefore) + pDecimal + pAfter : this.formatterInsertCommas(pBefore + pAfter));\n\t}\n\n\t/**\n\t * Add Commas to a Number for readability.\n\t *\n\t * @param {*} pNumber\n\t * @returns {string}\n\t */\n\tformatterAddCommasToNumber (pNumber)\n\t{\n\t\t// If the regex doesn't match, `replace` returns the string unmodified\n\t\treturn (pNumber.toString()).replace\n\t\t(\n\t\t\tthis._Regex_formatterAddCommasToNumber,\n\t\t\tthis.processAddCommasToNumberRegex.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * This will take a number and format it as a dollar string.  It will also add commas to the number.  If the number is not a number, it will return '--'.\n\t *\n\t * @param {*} pValue\n\t * @returns {string}\n\t */\n\tformatterDollars (pValue)\n\t{\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tlet tmpDollarAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpDollarAmount = tmpDollarAmountArbitrary.toFixed(2);\n\n\t\tif (isNaN(tmpDollarAmount))\n\t\t{\n\t\t\t// Try again and see if what was passed in was a dollars string.\n\t\t\tif (typeof(pValue) == 'string')\n\t\t\t{\n\t\t\t\t// TODO: Better rounding function?  This is a hack to get rid of the currency symbol and commas.\n\t\t\t\ttmpDollarAmount = parseFloat(pValue.replace(this._Value_MoneySign_Currency,'').replace(this._Regex_formatterDollarsRemoveCommas,'')).toFixed(2);\n\t\t\t}\n\t\t\t// If we didn't get a number, return the \"not a number\" string.\n\t\t\tif (isNaN(tmpDollarAmount))\n\t\t\t{\n\t\t\t\treturn this._Value_NaN_Currency;\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Get locale data and use that for this stuff.\n\t\treturn `$${this.formatterAddCommasToNumber(tmpDollarAmount)}`;\n\t}\n\n\t/**\n\t * Round a number to a certain number of digits.  If the number is not a number, it will return 0.  If no digits are specified, it will default to 2 significant digits.\n\t *\n\t * @param {*} pValue\n\t * @param {number} pDigits\n\t * @returns {string}\n\t */\n\tformatterRoundNumber (pValue, pDigits)\n\t{\n\t\tlet tmpDigits = (typeof(pDigits) == 'undefined') ? 2 : pDigits;\n\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\n\t\tlet tmpAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpValue = tmpAmountArbitrary.toFixed(tmpDigits);\n\n\t\tif (isNaN(tmpValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpValue;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate a reapeating padding string to be appended before or after depending on \n\t * which padding function it uses.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringGeneratePaddingString(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpTargetLength = pTargetLength >> 0;\n\t\tlet tmpPadString = String((typeof pPadString !== 'undefined' ? pPadString : ' '));\n\t\tif (pString.length > pTargetLength)\n\t\t{\n\t\t\t// No padding string if the source string is already longer than the target length, return an empty string\n\t\t\treturn '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpPadLength = pTargetLength - pString.length;\n\t\t\tif (tmpPadLength > tmpPadString.length)\n\t\t\t{\n\t\t\t\ttmpPadString += tmpPadString.repeat(tmpTargetLength / tmpPadString.length);\n\t\t\t}\n\t\t\treturn tmpPadString.slice(0, tmpPadLength);\n\t\t}\n\t}\n\n\t/**\n\t * Pad the start of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadStart = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString) + tmpString;\n\t}\n\n\t/**\n\t * Pad the end of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadEnd = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn tmpString + this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString);\n\t}\n\n\t/*************************************************************************\n\t * Time Formatting Functions (milliseconds)\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Format a time length in milliseconds into a human readable string.\n\t * @param {number} pTimeSpan \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeSpan(pTimeSpan)\n\t{\n\t\tif (typeof(pTimeSpan) != 'number')\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpMs = parseInt(pTimeSpan%1000);\n\t\tlet tmpSeconds = parseInt((pTimeSpan/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeSpan/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeSpan/(1000*60*60));\n\n\t\treturn `${this.stringPadStart(tmpHours,2,'0')}:${this.stringPadStart(tmpMinutes,2,'0')}:${this.stringPadStart(tmpSeconds,2,'0')}.${this.stringPadStart(tmpMs,3,'0')}`;\n\t}\n\n\t/**\n\t * Format the time delta between two times in milliseconds into a human readable string.\n\t * \n\t * @param {number} pTimeStart \n\t * @param {number} pTimeEnd \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeDelta(pTimeStart, pTimeEnd)\n\t{\n\t\tif ((typeof(pTimeStart) != 'number') || (typeof(pTimeEnd) != 'number'))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.formatTimeSpan(pTimeEnd-pTimeStart);\n\t}\n\n\t// THE FOLLOWING TERRIBLE FUNCTIONS ARE FOR QT / WKHTMLTOPDF when luxon and moment don't work so well\n\tgetMonthFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tgetMonthAbbreviatedFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tformatMonthDayYearFromDate (pJavascriptDate, pStrict)\n\t{\n\t\tlet tmpStrict = (typeof(pStrict) !== 'undefined') ? pStrict : false;\n\n\t\tlet tmpMonth = pJavascriptDate.getMonth() + 1;\n\t\tlet tmpDay = pJavascriptDate.getDate();\n\t\tlet tmpYear = pJavascriptDate.getFullYear();\n\t\t\n\t\tif (tmpStrict)\n\t\t{\n\t\t\ttmpMonth = this.stringPadStart(tmpMonth, 2, '0');\n\t\t\ttmpDay = this.stringPadStart(tmpDay, 2, '0');\n\t\t\ttmpYear = this.stringPadStart(tmpYear, 4, '0');\n\t\t}\n\n\t\treturn `${tmpMonth}/${tmpDay}/${tmpYear}`;\n\t}\n\t\n\tformatSortableStringFromDate (pDate)\n\t{\n\t\treturn pDate.getFullYear()+this.stringPadStart(pDate.getMonth(),2,'0')+this.stringPadStart(pDate.getDate(),2,'0');\n\t}\n\n\t/*************************************************************************\n\t * String Tokenization Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Return the string before the matched substring.\n\t *\n\t * If the substring is not found, the entire string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringBeforeMatch (pString, pMatch)\n\t{\n\t\treturn pString.split(pMatch)[0];\n\t}\n\n\t/**\n\t * Return the string after the matched substring.\n\t *\n\t * If the substring is not found, an empty string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringAfterMatch (pString, pMatch)\n\t{\n\t\tlet tmpStringSplitLocation = pString.indexOf(pMatch);\n\n\t\tif ((tmpStringSplitLocation < 0) || ((tmpStringSplitLocation + pMatch.length) >= pString.length))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn pString.substring(tmpStringSplitLocation + pMatch.length);\n\t}\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures (pString, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\tif (tmpEnclosureDepth == 0)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t}\n\t\t\t\ttmpEnclosureDepth++;\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpEnclosureCount;\n\t}\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosedValueStartIndex = 0;\n\t\tlet tmpEnclosedValueEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This is the end of an enclosure\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t\t{\n\t\t\t// Return an empty string if the enclosure is not found\n\t\t\treturn '';\n\t\t}\n\n\t\tif ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t\t}\n\t}\n\n\n\t/**\n\t * Remove an enclosure from a string based on the index of the enclosure.\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToRemove\n\t * @param {number} pEnclosureStart\n\t * @param {number} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringRemoveEnclosureByIndex (pString, pEnclosureIndexToRemove, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToRemove = (typeof(pEnclosureIndexToRemove) == 'number') ? pEnclosureIndexToRemove : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosureStartIndex = 0;\n\t\tlet tmpEnclosureEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToRemove == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosureStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosureEndIndex <= tmpEnclosureStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToRemove)\n\t\t{\n\t\t\treturn tmpString;\n\t\t}\n\n\t\tlet tmpReturnString = '';\n\n\t\tif (tmpEnclosureStartIndex > 1)\n\t\t{\n\t\t\ttmpReturnString = tmpString.substring(0, tmpEnclosureStartIndex);\n\t\t}\n\n\t\tif ((tmpString.length > (tmpEnclosureEndIndex + 1)) && (tmpEnclosureEndIndex > tmpEnclosureStartIndex))\n\t\t{\n\t\t\ttmpReturnString += tmpString.substring(tmpEnclosureEndIndex+1);\n\t\t}\n\n\t\treturn tmpReturnString;\n\t}\n}\n\nmodule.exports = DataFormat;\n},{\"fable-serviceproviderbase\":34}],45:[function(require,module,exports){\nmodule.exports={\n\t\"DefaultIntegerMinimum\": 0,\n\t\"DefaultIntegerMaximum\": 9999999,\n\n\t\"DefaultNumericStringLength\": 10,\n\n\t\"MonthSet\": [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n\n\t\"WeekDaySet\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n\n\t\"ColorSet\": \n\t\t[\n\t\t\t\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Indigo\", \"Violet\", \"Pink\", \"Purple\", \"Turquoise\", \"Gold\",\n\t\t\t\"Lime\", \"Maroon\", \"Navy\", \"Coral\", \"Teal\", \"Brown\", \"White\", \"Black\", \"Sky\", \"Berry\",\n\t\t\t\"Grey\", \"Straw\", \"Silver\", \"Sapphire\"\n\t\t],\n\n\t\"SurNameSet\":\n\t\t[\n\t\t\t\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Miller\", \"Davis\", \"Garcia\", \"Rodriguez\", \"Wilson\",\n\t\t\t\"Martinez\", \"Anderson\", \"Taylor\", \"Thomas\", \"Hernandez\", \"Moore\", \"Martin\", \"Jackson\", \"Thompson\", \"White\",\n\t\t\t\"Lopez\", \"Lee\", \"Gonzalez\", \"Harris\", \"Clark\", \"Lewis\", \"Robinson\", \"Walker\", \"Perez\", \"Hall\",\n\t\t\t\"Young\", \"Allen\", \"Sanchez\", \"Wright\", \"King\", \"Scott\", \"Green\", \"Baker\", \"Adams\", \"Nelson\",\n\t\t\t\"Hill\", \"Ramirez\", \"Campbell\", \"Mitchell\", \"Roberts\", \"Carter\", \"Phillips\", \"Evans\", \"Turner\", \"Torres\",\n\t\t\t\"Parker\", \"Collins\", \"Edwards\", \"Stewart\", \"Flores\", \"Morris\", \"Nguyen\", \"Murphy\", \"Rivera\", \"Cook\",\n\t\t\t\"Rogers\", \"Morgan\", \"Peterson\", \"Cooper\", \"Reed\", \"Bailey\", \"Bell\", \"Gomez\", \"Kelly\", \"Howard\",\n\t\t\t\"Ward\", \"Cox\", \"Diaz\", \"Richardson\", \"Wood\", \"Watson\", \"Brooks\", \"Bennett\", \"Gray\", \"James\",\n\t\t\t\"Reyes\", \"Cruz\", \"Hughes\", \"Price\", \"Myers\", \"Long\", \"Foster\", \"Sanders\", \"Ross\", \"Morales\",\n\t\t\t\"Powell\", \"Sullivan\", \"Russell\", \"Ortiz\", \"Jenkins\", \"Gutierrez\", \"Perry\", \"Butler\", \"Barnes\", \"Fisher\"\n\t\t],\n\n\t\"NameSet\":\n\t\t[\n\t\t\t\"Mary\", \"Patricia\", \"Jennifer\", \"Linda\", \"Elizabeth\", \"Barbara\", \"Susan\", \"Jessica\", \"Sarah\", \"Karen\",\n\t\t\t\"Lisa\", \"Nancy\", \"Betty\", \"Sandra\", \"Margaret\", \"Ashley\", \"Kimberly\", \"Emily\", \"Donna\", \"Michelle\",\n\t\t\t\"Carol\", \"Amanda\", \"Melissa\", \"Deborah\", \"Stephanie\", \"Dorothy\", \"Rebecca\", \"Sharon\", \"Laura\", \"Cynthia\",\n\t\t\t\"Amy\", \"Kathleen\", \"Angela\", \"Shirley\", \"Brenda\", \"Emma\", \"Anna\", \"Pamela\", \"Nicole\", \"Samantha\",\n\t\t\t\"Katherine\", \"Christine\", \"Helen\", \"Debra\", \"Rachel\", \"Carolyn\", \"Janet\", \"Maria\", \"Catherine\", \"Heather\",\n\t\t\t\"Diane\", \"Olivia\", \"Julie\", \"Joyce\", \"Victoria\", \"Ruth\", \"Virginia\", \"Lauren\", \"Kelly\", \"Christina\",\n\t\t\t\"Joan\", \"Evelyn\", \"Judith\", \"Andrea\", \"Hannah\", \"Megan\", \"Cheryl\", \"Jacqueline\", \"Martha\", \"Madison\",\n\t\t\t\"Teresa\", \"Gloria\", \"Sara\", \"Janice\", \"Ann\", \"Kathryn\", \"Abigail\", \"Sophia\", \"Frances\", \"Jean\",\n\t\t\t\"Alice\", \"Judy\", \"Isabella\", \"Julia\", \"Grace\", \"Amber\", \"Denise\", \"Danielle\", \"Marilyn\", \"Beverly\",\n\t\t\t\"Charlotte\", \"Natalie\", \"Theresa\", \"Diana\", \"Brittany\", \"Doris\", \"Kayla\", \"Alexis\", \"Lori\", \"Marie\",\n\t\t\t\"James\", \"Robert\", \"John\", \"Michael\", \"David\", \"William\", \"Richard\", \"Joseph\", \"Thomas\", \"Christopher\",\n\t\t\t\"Charles\", \"Daniel\", \"Matthew\", \"Anthony\", \"Mark\", \"Donald\", \"Steven\", \"Andrew\", \"Paul\", \"Joshua\",\n\t\t\t\"Kenneth\", \"Kevin\", \"Brian\", \"George\", \"Timothy\", \"Ronald\", \"Jason\", \"Edward\", \"Jeffrey\", \"Ryan\",\n\t\t\t\"Jacob\", \"Gary\", \"Nicholas\", \"Eric\", \"Jonathan\", \"Stephen\", \"Larry\", \"Justin\", \"Scott\", \"Brandon\",\n\t\t\t\"Benjamin\", \"Samuel\", \"Gregory\", \"Alexander\", \"Patrick\", \"Frank\", \"Raymond\", \"Jack\", \"Dennis\", \"Jerry\",\n\t\t\t\"Tyler\", \"Aaron\", \"Jose\", \"Adam\", \"Nathan\", \"Henry\", \"Zachary\", \"Douglas\", \"Peter\", \"Kyle\",\n\t\t\t\"Noah\", \"Ethan\", \"Jeremy\", \"Walter\", \"Christian\", \"Keith\", \"Roger\", \"Terry\", \"Austin\", \"Sean\",\n\t\t\t\"Gerald\", \"Carl\", \"Harold\", \"Dylan\", \"Arthur\", \"Lawrence\", \"Jordan\", \"Jesse\", \"Bryan\", \"Billy\",\n\t\t\t\"Bruce\", \"Gabriel\", \"Joe\", \"Logan\", \"Alan\", \"Juan\", \"Albert\", \"Willie\", \"Elijah\", \"Wayne\",\n\t\t\t\"Randy\", \"Vincent\", \"Mason\", \"Roy\", \"Ralph\", \"Bobby\", \"Russell\", \"Bradley\", \"Philip\", \"Eugene\"\n\t\t]\n}\n},{}],46:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceDataGeneration extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'DataGeneration';\n\n\t\tthis.defaultData = require('./Fable-Service-DataGeneration-DefaultValues.json');\n\t}\n\n\t// Return a random integer between pMinimum and pMaximum\n\trandomIntegerBetween(pMinimum, pMaximum)\n\t{\n\t\treturn Math.floor(Math.random() * (pMaximum - pMinimum)) + pMinimum;\n\t}\n\t// Return a random integer up to the passed-in maximum\n\trandomIntegerUpTo(pMaximum)\n\t{\n\t\treturn this.randomIntegerBetween(0, pMaximum);\n\t}\n\t// Return a random integer between 0 and 9999999\n\trandomInteger()\n\t{\n\t\treturn Math.floor(Math.random()*this.defaultData.DefaultIntegerMaximum);\n\t}\n\n\n\trandomNumericString(pLength, pMaxNumber)\n\t{\n\t\tlet tmpLength = (typeof(pLength) === 'undefined') ? 10 : pLength;\n\t\tlet tmpMaxNumber = (typeof(pMaxNumber) === 'undefined') ? ((10 ** tmpLength) - 1) : pMaxNumber;\n\n\t\treturn this.services.DataFormat.stringPadStart(this.randomIntegerUpTo(tmpMaxNumber), pLength, '0');\n\t}\n\n\n\trandomMonth()\n\t{\n\t\treturn this.defaultData.MonthSet[this.randomIntegerUpTo(this.defaultData.MonthSet.length-1)];\n\t}\n\trandomDayOfWeek()\n\t{\n\t\treturn this.defaultData.WeekDaySet[this.randomIntegerUpTo(this.defaultData.WeekDaySet.length-1)];\n\t}\n\n\n\trandomColor()\n\t{\n\t\treturn this.defaultData.ColorSet[this.randomIntegerUpTo(this.defaultData.ColorSet.length-1)];\n\t}\n\n\n\trandomName()\n\t{\n\t\treturn this.defaultData.NameSet[this.randomIntegerUpTo(this.defaultData.NameSet.length-1)];\n\t}\n\trandomSurname()\n\t{\n\t\treturn this.defaultData.SurNameSet[this.randomIntegerUpTo(this.defaultData.SurNameSet.length-1)];\n\t}\n}\n\nmodule.exports = FableServiceDataGeneration;\n},{\"../Fable-ServiceManager.js\":40,\"./Fable-Service-DataGeneration-DefaultValues.json\":45}],47:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceEnvironmentData extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'EnvironmentData';\n\n\t\tthis.Environment = `node.js`;\n\t}\n}\n\nmodule.exports = FableServiceEnvironmentData;\n},{\"../Fable-ServiceManager.js\":40}],48:[function(require,module,exports){\n(function (process){(function (){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nconst libFS = require('fs');\nconst libPath = require('path');\n\n\nclass FableServiceFilePersistence extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'FilePersistence';\n\n\t\tif (!this.options.hasOwnProperty('Mode'))\n\t\t{\n\t\t\tthis.options.Mode = parseInt('0777', 8) & ~process.umask();\n\t\t}\n\n\t\tthis.currentInputFolder = `/tmp`;\n\t\tthis.currentOutputFolder = `/tmp`;\n\t}\n\n\tjoinPath(...pPathArray)\n\t{\n\t\treturn libPath.resolve(...pPathArray);\n\t}\n\n\texistsSync(pPath)\n\t{\n\t\treturn libFS.existsSync(pPath);\n\t}\n\n\texists(pPath, fCallback)\n\t{\n\t\tlet tmpFileExists = this.existsSync(pPath);;\n\n\t\treturn fCallback(null, tmpFileExists);\n\t}\n\n\twriteFileSync(pFileName, pFileContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFileSync(pFileName, pFileContent, tmpOptions);\n\t}\n\n\tappendFileSync(pFileName, pAppendContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.appendFileSync(pFileName, pAppendContent, tmpOptions);\n\t}\n\n\tdeleteFileSync(pFileName)\n\t{\n\t\treturn libFS.unlinkSync(pFileName);\n\t}\n\n\tdeleteFolderSync(pFileName)\n\t{\n\t\treturn libFS.rmdirSync(pFileName);\n\t}\n\n\twriteFileSyncFromObject(pFileName, pObject)\n\t{\n\t\treturn this.writeFileSync(pFileName, JSON.stringify(pObject, null, 4));\n\t}\n\n\twriteFileSyncFromArray(pFileName, pFileArray)\n\t{\n\t\tif (!Array.isArray(pFileArray))\n\t\t{\n\t\t\tthis.log.error(`File Persistence Service attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).`);\n\t\t\treturn Error('Attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let i = 0; i < pFileArray.length; i++)\n\t\t\t{\n\t\t\t\treturn this.appendFileSync(pFileName, `${pFileArray[i]}\\n`);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Default folder behaviors\n\n\tgetDefaultOutputPath(pFileName)\n\t{\n\t\treturn libPath.join(this.currentOutputFolder, pFileName);\n\t}\n\n\tdataFolderWriteSync(pFileName, pFileContent)\n\t{\n\t\treturn this.writeFileSync(this.getDefaultOutputPath(pFileName), pFileContent);\n\t}\n\n\tdataFolderWriteSyncFromObject(pFileName, pObject)\n\t{\n\t\treturn this.writeFileSyncFromObject(this.getDefaultOutputPath(pFileName), pObject);\n\t}\n\n\tdataFolderWriteSyncFromArray(pFileName, pFileArray)\n\t{\n\t\treturn this.writeFileSyncFromArray(this.getDefaultOutputPath(pFileName), pFileArray);\n\t}\n\n\t// Folder management\n\tmakeFolderRecursive(pParameters, fCallback)\n\t{\n\t\tlet tmpParameters = pParameters;\n\n\t\tif (typeof(pParameters) == 'string')\n\t\t{\n\t\t\ttmpParameters = { Path: pParameters };\n\t\t}\n\t\telse if (typeof(pParameters) !== 'object')\n\t\t{\n\t\t\tfCallback(new Error('Parameters object or string not properly passed to recursive folder create.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(tmpParameters.Path) !== 'string'))\n\t\t{\n\t\t\tfCallback(new Error('Parameters object needs a path to run the folder create operation.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!tmpParameters.hasOwnProperty('Mode'))\n\t\t{\n\t\t\ttmpParameters.Mode = this.options.Mode;\n\t\t}\n\n\t\t// Check if we are just starting .. if so, build the initial state for our recursive function\n\t\tif (typeof(tmpParameters.CurrentPathIndex) === 'undefined')\n\t\t{\n\t\t\t// Build the tools to start recursing\n\t\t\ttmpParameters.ActualPath = libPath.normalize(tmpParameters.Path);\n\t\t\ttmpParameters.ActualPathParts = tmpParameters.ActualPath.split(libPath.sep);\n\t\t\ttmpParameters.CurrentPathIndex = 0;\n\t\t\ttmpParameters.CurrentPath = '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is not our first run, so we will continue the recursion.\n\t\t\t// Build the new base path\n\t\t\tif (tmpParameters.CurrentPath == libPath.sep)\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\n\t\t\t// Increment the path index\n\t\t\ttmpParameters.CurrentPathIndex++;\n\t\t}\n\n\t\t// Check if the path is fully complete\n\t\tif (tmpParameters.CurrentPathIndex >= tmpParameters.ActualPathParts.length)\n\t\t{\n\t\t\treturn fCallback(null);\n\t\t}\n\n\t\t// Check if the path exists (and is a folder)\n\t\tlibFS.open(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], 'r',\n\t\t\t(pError, pFileDescriptor)=>\n\t\t\t{\n\t\t\t\tif (pFileDescriptor)\n\t\t\t\t{\n\t\t\t\t\tlibFS.closeSync(pFileDescriptor);\n\t\t\t\t}\n\n\t\t\t\tif (pError && pError.code=='ENOENT')\n\t\t\t\t{\n\t\t\t\t\t/* Path doesn't exist, create it */\n\t\t\t\t\tlibFS.mkdir(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], tmpParameters.Mode,\n\t\t\t\t\t\t(pCreateError) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!pCreateError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// We have now created our folder and there was no error -- continue.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (pCreateError.code =='EEXIST')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// The folder exists -- our dev might be running this in parallel/async/whatnot.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(pCreateError.code);\n\t\t\t\t\t\t\t\treturn fCallback(pCreateError);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nmodule.exports = FableServiceFilePersistence;\n}).call(this)}).call(this,require('_process'))\n\n},{\"../Fable-ServiceManager.js\":40,\"_process\":78,\"fs\":19,\"path\":72}],49:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\n/**\n* Precedent Meta-Templating\n* @author      Steven Velozo <steven@velozo.com>\n* @description Process text stream trie and postfix tree, parsing out meta-template expression functions.\n*/\nconst libWordTree = require(`./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js`);\nconst libStringParser = require(`./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js`);\n\n\nclass FableServiceMetaTemplate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'MetaTemplate';\n\n\t\tthis.WordTree = new libWordTree();\n\n\t\t// In order to allow asynchronous template processing we need to use the async.eachLimit function\n\t\tthis.StringParser = new libStringParser(this.fable.services.Utility.eachLimit);\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\taddPatternAsync(pPatternStart, pPatternEnd, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternAsync(pPatternStart, pPatternEnd, pParserPromise);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData, fCallback)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceMetaTemplate;\n},{\"../Fable-ServiceManager.js\":40,\"./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js\":50,\"./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js\":51}],50:[function(require,module,exports){\n/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor(fEachLimit)\n\t{\n\t\tthis.eachLimit = fEachLimit;\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacterAsync (pCharacter, pParserState, pData, fCallback)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\treturn fCallback();\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn fCallback();\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t * @param {function} fCallback - The callback function to call when the parse is complete\n\t */\n\tparseString (pString, pParseTree, pData, fCallback)\n\t{\n\t\tif (typeof(fCallback) !== 'function')\n\t\t{\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\t\tfor (var i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: This is not fast.\n\t\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData, fCallback);\n\t\t\t}\n\n\t\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\t\treturn tmpParserState.Output;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is the async mode\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\t\t\ttmpParserState.Asynchronous = true;\n\n\t\t\tthis.eachLimit(pString, 1,\n\t\t\t\t(pCharacter, fCharacterCallback) =>\n\t\t\t\t{\n\t\t\t\t\tthis.parseCharacterAsync(pCharacter, tmpParserState, pData, fCharacterCallback);\n\t\t\t\t},\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\t// Flush the remaining data\n\t\t\t\t\tthis.flushOutputBuffer(tmpParserState);\n\t\t\t\t\tfCallback(pError, tmpParserState.Output);\n\t\t\t\t});\n\n\t\t}\n\t}\n}\n\nmodule.exports = StringParser;\n\n},{}],51:[function(require,module,exports){\n/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn tmpLeaf;\n\t}\n\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternAsync (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParser);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t}\n\t}\n}\n\nmodule.exports = WordTree;\n\n},{}],52:[function(require,module,exports){\nmodule.exports = (\n    {\n        \"Metadata\": {\n            \"UUID\": false,\n            \"Hash\": false,\n\n            \"Title\": \"\",\n            \"Summary\": \"\",\n\n            \"Version\": 0\n        },\n        \"Status\": {\n            \"Completed\": false,\n\n            \"CompletionProgress\": 0,\n            \"CompletionTimeElapsed\": 0,\n\n            \"Steps\": 1,\n            \"StepsCompleted\": 0,\n\n            \"StartTime\": 0,\n            \"EndTime\": 0\n        },\n        \"Errors\": [],\n        \"Log\": []\n    }\n);\n},{}],53:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nconst _OperationStatePrototypeString = JSON.stringify(require('./Fable-Service-Operation-DefaultSettings.js'));\n\nclass FableOperation extends libFableServiceBase\n{\n\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\t// Timestamps will just be the long ints\n\t\tthis.timeStamps = {};\n\t\t// ProgressTrackers have an object format of: {Hash:'SomeHash',EndTime:UINT,CurrentTime:UINT,TotalCount:INT,CurrentCount:INT}\n\t\tthis.progressTrackers = {};\n\n        this.serviceType = 'PhasedOperation';\n\n\t\tthis.state = JSON.parse(_OperationStatePrototypeString);\n\n\t\t// Match the service instantiation to the operation.\n\t\tthis.state.Metadata.Hash = this.Hash;\n\t\tthis.state.Metadata.UUID = this.UUID;\n\n\t\tthis.name = (typeof(this.options.Name) == 'string') ? this.options.Name : `Unnamed Operation ${this.state.Metadata.UUID}`;\n\n\t\tthis.log = this;\n\t}\n\n\twriteOperationLog(pLogLevel, pLogText, pLogObject)\n\t{\n\t\tthis.state.Log.push(`${new Date().toUTCString()} [${pLogLevel}]: ${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Log.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\twriteOperationErrors(pLogText, pLogObject)\n\t{\n\t\tthis.state.Errors.push(`${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Errors.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('TRACE', pLogText, pLogObject);\n\t\tthis.fable.log.trace(pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('DEBUG', pLogText, pLogObject);\n\t\tthis.fable.log.debug(pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('INFO', pLogText, pLogObject);\n\t\tthis.fable.log.info(pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('WARN', pLogText, pLogObject);\n\t\tthis.fable.log.warn(pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('ERROR', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.error(pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('FATAL', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.fatal(pLogText, pLogObject);\n\t}\n\t\n\t/************************************************************************\n\t * BEGINNING OF -->  Telemetry Helpers\n\t */\n\tcreateTimeStamp(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tthis.timeStamps[tmpTimeStampHash] = +new Date();\n\t\treturn this.timeStamps[tmpTimeStampHash];\n\t}\n\t\n\tgetTimeDelta(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tif (this.timeStamps.hasOwnProperty(tmpTimeStampHash))\n\t\t{\n\t\t\tlet tmpEndTime = +new Date();\n\t\t\treturn tmpEndTime-this.timeStamps[tmpTimeStampHash];\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t}\n\t\n\tlogTimeDelta(pTimeStampHash, pMessage)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : `Elapsed for ${tmpTimeStampHash}: `;\n\t\tlet tmpOperationTime = this.getTimeDelta(pTimeStampHash);\n\t\tthis.info(tmpMessage +' ('+tmpOperationTime+'ms)');\n\t\treturn tmpOperationTime;\n\t}\n\t\n\tcreateProgressTracker(pTotalOperations, pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpTotalOperations = (typeof(pTotalOperations) == 'number') ? pTotalOperations : 100;\n\t\n\t\tlet tmpProgressTracker = (\n\t\t\t{\n\t\t\t\tHash: tmpProgressTrackerHash,\n\t\t\t\tStartTime: this.createTimeStamp(tmpProgressTrackerHash),\n\t\t\t\tEndTime: 0,\n\t\t\t\tCurrentTime: 0,\n\t\t\t\tPercentComplete: -1,\n\t\t\t\tAverageOperationTime: -1,\n\t\t\t\tEstimatedCompletionTime: -1,\n\t\t\t\tTotalCount: tmpTotalOperations,\n\t\t\t\tCurrentCount:-1\n\t\t\t});\n\t\n\t\tthis.progressTrackers[tmpProgressTrackerHash] = tmpProgressTracker;\n\t\n\t\treturn tmpProgressTracker;\n\t}\n\t\n\tsolveProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\t\n\t\tlet tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\t\n\t\ttmpProgressTracker.CurrentTime = this.getTimeDelta(tmpProgressTracker.Hash);\n\t\n\t\tif ((tmpProgressTracker.CurrentCount > 0) && (tmpProgressTracker.TotalCount > 0))\n\t\t{\n\t\t\ttmpProgressTracker.PercentComplete = (tmpProgressTracker.CurrentCount / tmpProgressTracker.TotalCount) * 100.0;\n\t\t}\n\t\n\t\tif ((tmpProgressTracker.CurrentCount > 0) && (tmpProgressTracker.CurrentTime > 0))\n\t\t{\n\t\t\ttmpProgressTracker.AverageOperationTime = tmpProgressTracker.CurrentTime / tmpProgressTracker.CurrentCount;\n\t\t}\n\t\n\t\tif ((tmpProgressTracker.CurrentCount < tmpProgressTracker.TotalCount) && (tmpProgressTracker.AverageOperationTime > 0))\n\t\t{\n\t\t\ttmpProgressTracker.EstimatedCompletionTime = (tmpProgressTracker.TotalCount - tmpProgressTracker.CurrentCount) * tmpProgressTracker.AverageOperationTime;\n\t\t}\n\t}\n\t\n\tupdateProgressTrackerStatus(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\t\n\t\tif (isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\t\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = tmpCurrentOperations;\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentTime = this.getTimeDelta(tmpProgressTrackerHash);\n\t\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\t\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\t\n\tincrementProgressTrackerStatus(pProgressTrackerHash, pIncrementSize)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpIncrementSize = parseInt(pIncrementSize);\n\t\n\t\tif (isNaN(tmpIncrementSize))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\t\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = this.progressTrackers[tmpProgressTrackerHash].CurrentCount + tmpIncrementSize;\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentTime = this.getTimeDelta(tmpProgressTrackerHash);\n\t\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\t\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\t\n\tsetProgressTrackerEndTime(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\t\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (!isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\tthis.updateProgressTrackerStatus(tmpProgressTrackerHash, tmpCurrentOperations);\n\t\t}\n\t\n\t\tthis.progressTrackers[tmpProgressTrackerHash].EndTime = this.getTimeDelta(tmpProgressTrackerHash);\n\t\t\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\t\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\t\n\tprintProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\t\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTrackerHash} does not exist!  No stats to display.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\t\n\t\t\tif (tmpProgressTracker.CurrentCount < 1)\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} has no completed operations.  ${tmpProgressTracker.CurrentTime}ms have elapsed since it was started.`);\n\t\t\t}\n\t\t\telse if (tmpProgressTracker.EndTime < 1)\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} is ${tmpProgressTracker.PercentComplete.toFixed(3)}% completed - ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations over ${tmpProgressTracker.CurrentTime}ms (median ${tmpProgressTracker.AverageOperationTime.toFixed(3)} per).  Estimated completion in ${tmpProgressTracker.EstimatedCompletionTime.toFixed(0)}ms or ${(tmpProgressTracker.EstimatedCompletionTime / 1000 / 60).toFixed(2)}minutes`)\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} is done and completed ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations in ${tmpProgressTracker.EndTime}ms.`)\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// logMemoryResourcesUsed()\n\t// {\n\t// \n\t// \tconst tmpResourcesUsed = process.memoryUsage().heapUsed / 1024 / 1024;\n\t// \tthis.info(`Memory usage at ${Math.round(tmpResourcesUsed * 100) / 100} MB`);\t\t\n\t// }\n\t/*\n\t * END OF       -->  Logging and Telemetry Helpers\n\t ************************************************************************/\n}\n\nmodule.exports = FableOperation;\n},{\"../Fable-ServiceManager.js\":40,\"./Fable-Service-Operation-DefaultSettings.js\":52}],54:[function(require,module,exports){\n(function (Buffer){(function (){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nconst libSimpleGet = require('simple-get');\nconst libCookie = require('cookie');\n\nclass FableServiceRestClient extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.TraceLog = false;\n\t\tif (this.options.TraceLog || this.fable.TraceLog)\n\t\t{\n\t\t\tthis.TraceLog = true;\n\t\t}\n\n\t\tthis.dataFormat = this.fable.services.DataFormat;\n\n\t\tthis.serviceType = 'RestClient';\n\n\t\tthis.cookie = false;\n\n\t\t// This is a function that can be overridden, to allow the management\n\t\t// of the request options before they are passed to the request library.\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tget simpleGet()\n\t{\n\t\treturn libSimpleGet;\n\t}\n\n\tprepareCookies(pRequestOptions)\n\t{\n\t\tif (this.cookie)\n\t\t{\n\t\t\tlet tmpCookieObject = this.cookie;\n\t\t\tif (!pRequestOptions.hasOwnProperty('headers'))\n\t\t\t{\n\t\t\t\tpRequestOptions.headers = {};\n\t\t\t}\n\t\t\tlet tmpCookieKeys = Object.keys(tmpCookieObject);\n\t\t\tif (tmpCookieKeys.length > 0)\n\t\t\t{\n\t\t\t\t// Only grab the first for now.\n\t\t\t\tpRequestOptions.headers.cookie = libCookie.serialize(tmpCookieKeys[0], tmpCookieObject[tmpCookieKeys[0]]);\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn pRequestOptions;\n\t}\n\n\tpreRequest(pOptions)\n\t{\n\t\t// Validate the options object\n\t\tlet tmpOptions = this.prepareCookies(pOptions);\n\t\treturn this.prepareRequestOptions(tmpOptions);\n\t}\n\n\texecuteChunkedRequest(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpData.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpData);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteChunkedRequestBinary(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\ttmpOptions.json = false;\n\t\ttmpOptions.encoding = null;\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpDataBuffer = false;\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: Potentially create a third option that streams this to a file?  So it doesn't have to hold it all in memory.\n\t\t\t\t\t\tif (!tmpDataBuffer)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.from(pChunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.concat([tmpDataBuffer, pChunk]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpDataBuffer.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpDataBuffer);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteJSONRequest(pOptions, fCallback)\n\t{\n\t\tpOptions.json = true;\n\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\tif (!tmpOptions.hasOwnProperty('headers'))\n\t\t{\n\t\t\ttmpOptions.headers = {};\n\t\t}\n\t\t/* Automated headers break some APIs\n\t\tif (!tmpOptions.headers.hasOwnProperty('Content-Type'))\n\t\t{\n\t\t\ttmpOptions.headers['Content-Type'] = 'application/json';\n\t\t}\n\t\t*/\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} JSON request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpJSONData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpJSONData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> JSON ${tmpOptions.method} completed - received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, JSON.parse(tmpJSONData));\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetJSON(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeJSONRequest(tmpRequestOptions, fCallback);\n\t}\n\n\tputJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PUT JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PUT';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpostJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`POST JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'POST';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpatchJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PATCH JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PATCH';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\theadJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`HEAD JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'HEAD';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tdelJSON(pOptions, fCallback)\n\t{\n\t\tpOptions.method = 'DELETE';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tgetRawText(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeChunkedRequest(tmpRequestOptions, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceRestClient;\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"../Fable-ServiceManager.js\":40,\"buffer\":20,\"cookie\":25,\"simple-get\":85}],55:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceTemplate extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Template';\n\n\t\t// These are the exact regex's used in lodash/underscore\n\t\t// TODO: Switch this to precedent\n\t\tthis.Matchers = (\n\t\t\t{\n\t\t\t\tEvaluate: /<%([\\s\\S]+?)%>/g,\n\t\t\t\tInterpolate: /<%=([\\s\\S]+?)%>/g,\n\t\t\t\tEscaper: /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g,\n\t\t\t\tUnescaper: /\\\\(\\\\|'|r|n|t|u2028|u2029)/g,\n\t\t\t\t// This is how underscore does it, so we are keeping it for now.\n\t\t\t\tGuaranteedNonMatch: /.^/\n\t\t\t});\n\n\t\t// This is a helper for the escaper and unescaper functions.\n\t\t// Right now we are going to keep what underscore is doing, but, not forever.\n\t\tthis.templateEscapes = {\n\t\t\t'\\\\': '\\\\',\n\t\t\t\"'\": \"'\",\n\t\t\t'r': '\\r',\n\t\t\t'\\r': 'r',\n\t\t\t'n': '\\n',\n\t\t\t'\\n': 'n',\n\t\t\t't': '\\t',\n\t\t\t'\\t': 't',\n\t\t\t'u2028': '\\u2028',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'u2029': '\\u2029',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\t// This is defined as such to underscore that it is a dynamic programming\n\t\t// function on this class.\n\t\tthis.renderFunction = false;\n        this.templateString = false;\n\t}\n\n\trenderTemplate(pData)\n\t{\n\t\treturn this.renderFunction(pData);\n\t}\n\n\ttemplateFunction(pData)\n\t{\n\t\tlet fRenderTemplateBound = this.renderTemplate.bind(this);\n\t\treturn fRenderTemplateBound;\n\t}\n\n\tbuildTemplateFunction(pTemplateText, pData)\n\t{\n\t\t// For now this is being kept in a weird form ... this is to mimic the old\n\t\t// underscore code until this is rewritten using precedent.\n\t\tthis.TemplateSource = \"__p+='\" + pTemplateText\n\t\t\t.replace(this.Matchers.Escaper,\n\t\t\t\t(pMatch)=>\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\${this.templateEscapes[pMatch]}`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Interpolate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `'+\\n(${decodeURIComponent(pCode)})+\\n'`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Evaluate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `';\\n${decodeURIComponent(pCode)}\\n;__p+='`;\n\t\t\t\t}) + `';\\n`;\n\n\n\t\tthis.TemplateSource = `with(pTemplateDataObject||{}){\\n${this.TemplateSource}}\\n`;\n\t\tthis.TemplateSource = `var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n${this.TemplateSource}return __p;\\n`;\n\n\t\tthis.renderFunction = new Function('pTemplateDataObject', this.TemplateSource);\n\n\t\tif (typeof(pData) != 'undefined')\n\t\t{\n\t\t\treturn this.renderFunction(pData);\n\t\t}\n\n\t\t// Provide the compiled function source as a convenience for build time\n\t\t// precompilation.\n\t\tthis.TemplateSourceCompiled = 'function(obj){\\n' + this.TemplateSource + '}';\n\n\t\treturn this.templateFunction();\n\t}\n}\n\nmodule.exports = FableServiceTemplate;\n},{\"../Fable-ServiceManager.js\":40}],56:[function(require,module,exports){\nconst libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\n// TODO: These are still pretty big -- consider the smaller polyfills\nconst libAsyncWaterfall = require('async.waterfall');\nconst libAsyncEachLimit = require('async.eachlimit');\n\nconst libBigNumber = require('big.js');\n\nclass FableServiceUtility extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\tthis.templates = {};\n\n\t\t// These two functions are used extensively throughout\n\t\tthis.waterfall = libAsyncWaterfall;\n\t\tthis.eachLimit = libAsyncEachLimit;\n\n\t\tthis.bigNumber = libBigNumber;\n\t}\n\n\t// Underscore and lodash have a behavior, _.extend, which merges objects.\n\t// Now that es6 gives us this, use the native thingy.\n\t// Nevermind, the native thing is not stable enough across environments\n\t// Basic shallow copy\n\textend(pDestinationObject, ...pSourceObjects)\n\t{\n\t\tfor (let i = 0; i < pSourceObjects.length; i++)\n\t\t{\n\t\t\tlet tmpSourceObject = pSourceObjects[i];\n\t\t\tif (typeof(tmpSourceObject) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpObjectProperties = Object.keys(tmpSourceObject);\n\t\t\t\tfor (let k = 0; k < tmpObjectProperties.length; k++)\n\t\t\t\t{\n\t\t\t\t\tpDestinationObject[tmpObjectProperties[k]] = tmpSourceObject[tmpObjectProperties[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pDestinationObject;\n\t}\n\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\ttemplate(pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Template');\n\n\t\treturn tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t}\n\n\t// Build a template function from a template hash, and, register it with the service provider\n\tbuildHashedTemplate(pTemplateHash, pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.serviceManager.instantiateServiceProvider('Template', {}, pTemplateHash);\n\n\t\tthis.templates[pTemplateHash] = tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\n\t\treturn this.templates[pTemplateHash];\n\t}\n\n\t// This is a safe, modern version of chunk from underscore\n\t// Algorithm pulled from a mix of these two polyfills:\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\n\t// https://youmightnotneed.com/lodash\n\t// This implementation was most tolerant in browsers.  Uglify can fix the rest.\n\tchunk (pInput, pChunkSize, pChunkCache)\n\t{\n\t\tlet tmpInputArray = [...pInput];\n\t\t// Note lodash defaults to 1, underscore defaults to 0\n\t\tlet tmpChunkSize = (typeof(pChunkSize) == 'number') ? pChunkSize : 0;\n\t\tlet tmpChunkCache = (typeof(pChunkCache) != 'undefined') ? pChunkCache : [];\n\n\t\tif (tmpChunkSize <= 0)\n\t\t{\n\t\t\treturn tmpChunkCache;\n\t\t}\n\n\t\twhile (tmpInputArray.length)\n\t\t{\n\t\t\ttmpChunkCache.push(tmpInputArray.splice(0, tmpChunkSize));\n\t\t}\n\n\t\treturn tmpChunkCache;\n\t}\n\n\t// Convert an ISO string to a javascript date object\n\t// Adapted from https://stackoverflow.com/a/54751179\n\t//\n\t// Takes strings like: 2022-11-04T11:34:45.000Z\n\t//                and: 1986-06-11T09:34:46.012Z+0200\n\t// ... and converts them into javascript timestamps, following the directions of the timezone stuff.\n\t//\n\t// This is not meant to replace the more complex libraries such as moment or luxon.\n\t// This *is* meant to be a simple, small, and fast way to convert ISO strings to dates in engines\n\t// with ultra limited JS capabilities where those don't work.\n\tisoStringToDate (pISOString)\n\t{\n\n\t\t// Split the string into an array based on the digit groups.\n\t\tlet tmpDateParts = pISOString.split( /\\D+/ );\n\n\t\t// Set up a date object with the current time.\n\t\tlet tmpReturnDate = new Date();\n\n\t\t// Track the number of hours we need to adjust the date by based on the timezone.\n\t\tlet tmpTimeZoneOffsetInHours = 0;\n\t\t// Track the number of minutes we need to adjust the date by based on the timezone.\n\t\tlet tmpTimeZoneOffsetInMinutes = 0;\n\n\t\t// This fixes an inconsistency with constructing the date programmatically.\n\t\ttmpReturnDate.setUTCDate(1);\n\n\t\t// Manually parse the parts of the string and set each part for the\n\t\t// date. Note: Using the UTC versions of these functions is necessary\n\t\t// because we're manually adjusting for time zones stored in the\n\t\t// string.\n\t\ttmpReturnDate.setUTCFullYear( parseInt( tmpDateParts[ 0 ] ) );\n\n\t\t// The month numbers are one \"off\" from what normal humans would expect\n\t\t// because January == 0.\n\t\ttmpReturnDate.setUTCMonth( parseInt( tmpDateParts[ 1 ] ) - 1 );\n\n\t\ttmpReturnDate.setUTCDate( parseInt( tmpDateParts[ 2 ] ) );\n\n\t\t// Set the time parts of the date object.\n\t\ttmpReturnDate.setUTCHours( parseInt( tmpDateParts[ 3 ] ) );\n\t\ttmpReturnDate.setUTCMinutes( parseInt( tmpDateParts[ 4 ] ) );\n\t\ttmpReturnDate.setUTCSeconds( parseInt( tmpDateParts[ 5 ] ) );\n\t\ttmpReturnDate.setUTCMilliseconds( parseInt( tmpDateParts[ 6 ] ) );\n\n\t\t// If there's a value for either the hours or minutes offset.\n\t\tif (tmpDateParts[ 7 ] || tmpDateParts[ 8 ])\n\t\t{\n\t\t\t// If there's a value for the minutes offset.\n\t\t\tif (tmpDateParts[8])\n\t\t\t{\n\t\t\t\t// Convert the minutes value into an hours value.\n\t\t\t\ttmpTimeZoneOffsetInMinutes = parseInt(tmpDateParts[8]) / 60;\n\t\t\t}\n\n\t\t\t// Add the hours and minutes values to get the total offset in hours.\n\t\t\ttmpTimeZoneOffsetInHours = parseInt(tmpDateParts[7]) + tmpTimeZoneOffsetInMinutes;\n\n\t\t\t// If the sign for the timezone is a plus to indicate the timezone is ahead of UTC time.\n\t\t\tif (pISOString.substr( -6, 1 ) == \"+\")\n\t\t\t{\n\t\t\t\t// Make the offset negative since the hours will need to be subtracted from the date.\n\t\t\t\ttmpTimeZoneOffsetInHours *= -1;\n\t\t\t}\n\t\t}\n\n\t\t// Get the current hours for the date and add the offset to get the correct time adjusted for timezone.\n\t\ttmpReturnDate.setHours( tmpReturnDate.getHours() + tmpTimeZoneOffsetInHours );\n\n\t\t// Return the Date object calculated from the string.\n\t\treturn tmpReturnDate;\n\t}\n}\n\nmodule.exports = FableServiceUtility;\n},{\"../Fable-ServiceManager.js\":40,\"async.eachlimit\":1,\"async.waterfall\":15,\"big.js\":17}],57:[function(require,module,exports){\nvar http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n\n},{\"http\":86,\"url\":107}],58:[function(require,module,exports){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],59:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n\n},{}],60:[function(require,module,exports){\n// When a boxed property is passed in, it should have quotes of some\n// kind around it.\n//\n// For instance:\n// \t\tMyValues['Name']\n// \t\tMyValues[\"Age\"]\n// \t\tMyValues[`Cost`]\n//\n// This function removes the wrapping quotes.\n//\n// Please note it *DOES NOT PARSE* template literals, so backticks just\n// end up doing the same thing as other quote types.\n//\n// TODO: Should template literals be processed?  If so what state do they have access to?  That should happen here if so.\n// TODO: Make a simple class include library with these\nconst cleanWrapCharacters = (pCharacter, pString) =>\n{\n\tif (pString.startsWith(pCharacter) && pString.endsWith(pCharacter))\n\t{\n\t\treturn pString.substring(1, pString.length - 1);\n\t}\n\telse\n\t{\n\t\treturn pString;\n\t}\n};\n\nmodule.exports = cleanWrapCharacters;\n},{}],61:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Hash Translation\n*\n* This is a very simple translation table for hashes, which allows the same schema to resolve\n* differently based on a loaded translation table.\n*\n* This is to prevent the requirement for mutating schemas over and over again when we want to\n* reuse the structure but look up data elements by different addresses.\n*\n* One side-effect of this is that a translation table can \"override\" the built-in hashes, since\n* this is always used to resolve hashes before any of the functionCallByHash(pHash, ...) perform\n* their lookups by hash.\n*\n* @class ManyfestHashTranslation\n*/\nclass ManyfestHashTranslation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n        this.translationTable = {};\n\t}\n\n    translationCount()\n    {\n        return Object.keys(this.translationTable).length;\n    }\n\n    addTranslation(pTranslation)\n    {\n        // This adds a translation in the form of:\n        // { \"SourceHash\": \"DestinationHash\", \"SecondSourceHash\":\"SecondDestinationHash\" }\n        if (typeof(pTranslation) != 'object')\n        {\n            this.logError(`Hash translation addTranslation expected a translation be type object but was passed in ${typeof(pTranslation)}`);\n            return false;\n        }\n\n        let tmpTranslationSources = Object.keys(pTranslation)\n\n        tmpTranslationSources.forEach(\n            (pTranslationSource) =>\n            {\n                if (typeof(pTranslation[pTranslationSource]) != 'string')\n                {\n                    this.logError(`Hash translation addTranslation expected a translation destination hash for [${pTranslationSource}] to be a string but the referrant was a ${typeof(pTranslation[pTranslationSource])}`);\n                }\n                else\n                {\n                    this.translationTable[pTranslationSource] = pTranslation[pTranslationSource];\n                }\n            });\n    }\n\n    removeTranslationHash(pTranslationHash)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslationHash))\n        {\n            delete this.translationTable[pTranslationHash];\n        }\n    }\n\n    // This removes translations.\n    // If passed a string, just removes the single one.\n    // If passed an object, it does all the source keys.\n    removeTranslation(pTranslation)\n    {\n        if (typeof(pTranslation) == 'string')\n        {\n            this.removeTranslationHash(pTranslation);\n            return true;\n        }\n        else if (typeof(pTranslation) == 'object')\n        {\n            let tmpTranslationSources = Object.keys(pTranslation)\n\n            tmpTranslationSources.forEach(\n                (pTranslationSource) =>\n                {\n                    this.removeTranslation(pTranslationSource);\n                });\n            return true;\n        }\n        else\n        {\n            this.logError(`Hash translation removeTranslation expected either a string or an object but the passed-in translation was type ${typeof(pTranslation)}`);\n            return false;\n        }\n    }\n\n    clearTranslations()\n    {\n        this.translationTable = {};\n    }\n\n    translate(pTranslation)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslation))\n        {\n            return this.translationTable[pTranslation];\n        }\n        else\n        {\n            return pTranslation;\n        }\n    }\n}\n\nmodule.exports = ManyfestHashTranslation;\n},{\"./Manyfest-LogToConsole.js\":62}],62:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\n\n/**\n* Manyfest simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n\n    console.log(`[Manyfest] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject));\n};\n\nmodule.exports = logToConsole;\n},{}],63:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Resolver\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressResolverCheckAddressExists\n*/\nclass ManyfestObjectAddressResolverCheckAddressExists\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// Check if an address exists.\n\t//\n\t// This is necessary because the getValueAtAddress function is ambiguous on\n\t// whether the element/property is actually there or not (it returns\n\t// undefined whether the property exists or not).  This function checks for\n\t// existance and returns true or false dependent.\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\t// TODO: Should these throw an error?\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Check if the property exists.\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName].hasOwnProperty(tmpBoxedPropertyReference);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Use the new in operator to see if the element is in the array\n\t\t\t\t\treturn (tmpBoxedPropertyNumber in pObject[tmpBoxedPropertyName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Check if the property exists\n\t\t\t\treturn pObject.hasOwnProperty(pAddress);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// Because this is an impossible address, the property doesn't exist\n\t\t\t\t\t// TODO: Should we throw an error in this condition?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverCheckAddressExists;\n},{\"./Manyfest-LogToConsole.js\":62}],64:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - DeleteValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverDeleteValue\n*/\nclass ManyfestObjectAddressResolverDeleteValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// TODO: Dry me\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Count from the end to the beginning so splice doesn't %&%#$ up the array\n\t\t\t\tfor (let i = tmpInputArray.length - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Delete elements end to beginning\n\t\t\t\t\t\ttmpInputArray.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tdelete pObject[tmpObjectPropertyName];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tdelete pObject[pAddress];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverDeleteValue;\n},{\"../source/Manyfest-ParseConditionals.js\":68,\"./Manyfest-CleanWrapCharacters.js\":60,\"./Manyfest-LogToConsole.js\":62}],65:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - GetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverGetValue\n*/\nclass ManyfestObjectAddressResolverGetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress, pParentAddress, pRootObject)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// Set the root object to the passed-in object if it isn't set yet.  This is expected to be the root object.\n\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// Adding simple back-navigation in objects\n\t\tif (tmpSeparatorIndex == 0)\n\t\t{\n\t\t\t// Given an address of \"Bundle.Contract.IDContract...Project.IDProject\" the ... would be interpreted as two back-navigations from IDContract.\n\t\t\t// When the address is passed in, though, the first . is already eliminated.  So we can count the dots.\n\t\t\tlet tmpParentAddressParts = tmpParentAddress.split('.');\n\n\t\t\tlet tmpBackNavigationCount = 0;\n\n\t\t\t// Count the number of dots\n\t\t\tfor (let i = 0; i < pAddress.length; i++)\n\t\t\t{\n\t\t\t\tif (pAddress.charAt(i) != '.')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttmpBackNavigationCount++;\n\t\t\t}\n\n\t\t\tlet tmpParentAddressLength = tmpParentAddressParts.length - tmpBackNavigationCount;\n\n\t\t\tif (tmpParentAddressLength < 0)\n\t\t\t{\n\t\t\t\t// We are trying to back navigate more than we can.\n\t\t\t\t// TODO: Should this be undefined or should we bank out at the bottom and try to go forward?\n\t\t\t\t// This seems safest for now.\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are trying to back navigate to a parent object.\n\t\t\t\t// Recurse with the back-propagated parent address, and, the new address without the back-navigation dots.\n\t\t\t\tlet tmpRecurseAddress = pAddress.slice(tmpBackNavigationCount);\n\t\t\t\tif (tmpParentAddressLength > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpRecurseAddress = `${tmpParentAddressParts.slice(0, tmpParentAddressLength).join('.')}.${tmpRecurseAddress}`;\n\t\t\t\t}\n\t\t\t\tthis.logInfo(`Back-navigation detected.  Recursing back to address [${tmpRecurseAddress}]`);\n\t\t\t\treturn this.getValueAtAddress(tmpRootObject, tmpRecurseAddress);\n\t\t\t}\n\t\t}\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\tlet tmpOutputArray = [];\n\t\t\t\tfor (let i = 0; i < tmpInputArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOutputArray.push(tmpInputArray[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpOutputArray;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn pObject[tmpObjectPropertyName];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\treturn pObject[pAddress];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverGetValue;\n},{\"../source/Manyfest-ParseConditionals.js\":68,\"./Manyfest-CleanWrapCharacters.js\":60,\"./Manyfest-LogToConsole.js\":62}],66:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - SetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressSetValue\n*/\nclass ManyfestObjectAddressSetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyReference] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the time in recursion to set the value in the object\n\t\t\t\tpObject[pAddress] = pValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressSetValue;\n},{\"./Manyfest-CleanWrapCharacters.js\":60,\"./Manyfest-LogToConsole.js\":62}],67:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Generation\n*\n* Automagically generate addresses and properties based on a passed-in object,\n* to be used for easy creation of schemas.  Meant to simplify the lives of\n* developers wanting to create schemas without typing a bunch of stuff.\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressGeneration\n*/\nclass ManyfestObjectAddressGeneration\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// generateAddressses\n\t//\n\t// This flattens an object into a set of key:value pairs for *EVERY SINGLE\n\t// POSSIBLE ADDRESS* in the object.  It can get ... really insane really\n\t// quickly.  This is not meant to be used directly to generate schemas, but\n\t// instead as a starting point for scripts or UIs.\n\t//\n\t// This will return a mega set of key:value pairs with all possible schema\n\t// permutations and default values (when not an object) and everything else.\n\tgenerateAddressses (pObject, pBaseAddress, pSchema)\n\t{\n\t\tlet tmpBaseAddress = (typeof(pBaseAddress) == 'string') ? pBaseAddress : '';\n\t\tlet tmpSchema = (typeof(pSchema) == 'object') ? pSchema : {};\n\n\t\tlet tmpObjectType = typeof(pObject);\n\n\t\tlet tmpSchemaObjectEntry = (\n\t\t\t{\n\t\t\t\tAddress: tmpBaseAddress,\n\t\t\t\tHash: tmpBaseAddress,\n\t\t\t\tName: tmpBaseAddress,\n\t\t\t\t// This is so scripts and UI controls can force a developer to opt-in.\n\t\t\t\tInSchema: false\n\t\t\t}\n\t\t)\n\n\t\tif ((tmpObjectType == 'object') && (pObject == null))\n\t\t{\n\t\t\ttmpObjectType = 'null';\n\t\t}\n\n\t\tswitch(tmpObjectType)\n\t\t{\n\t\t\tcase 'string':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'String';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'bigint':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Number';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\tcase 'null':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Any';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif (Array.isArray(pObject))\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Array';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < pObject.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[i], `${tmpBaseAddress}[${i}]`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Object';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t\ttmpBaseAddress += '.';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectProperties = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectProperties.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[tmpObjectProperties[i]], `${tmpBaseAddress}${tmpObjectProperties[i]}`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'symbol':\n\t\t\tcase 'function':\n\t\t\t\t// Symbols and functions neither recurse nor get added to the schema\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tmpSchema;\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressGeneration;\n},{\"./Manyfest-LogToConsole.js\":62}],68:[function(require,module,exports){\n// Given a string, parse out any conditional expressions and set whether or not to keep the record.\n//\n// For instance:\n// \t\t'files[]<<~?format,==,Thumbnail?~>>'\n//      'files[]<<~?format,==,Metadata?~>>'\n//      'files[]<<~?size,>,4000?~>>'\n//\n// The wrapping parts are the <<~? and ?~>> megabrackets.\n//\n// The function does not need to alter the string -- just check the conditionals within.\n\n// TODO: Consider making this an es6 class\n\n// Let's use indexOf since it is apparently the fastest.\nconst _ConditionalStanzaStart = '<<~?';\nconst _ConditionalStanzaStartLength = _ConditionalStanzaStart.length;\nconst _ConditionalStanzaEnd = '?~>>';\nconst _ConditionalStanzaEndLength = _ConditionalStanzaEnd.length;\n\n// Test the condition of a value in a record\nconst testCondition = (pManyfest, pRecord, pSearchAddress, pSearchComparator, pValue) =>\n{\n\tswitch(pSearchComparator)\n\t{\n\t\tcase '!=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) != pValue);\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) < pValue);\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) > pValue);\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) <= pValue);\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) >= pValue);\n\t\t\tbreak;\n\t\tcase '===':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === pValue);\n\t\t\tbreak;\n\t\tcase '==':\n\t\tdefault:\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) == pValue);\n\t\t\tbreak;\n\t}\n};\n\nconst parseConditionals = (pManyfest, pAddress, pRecord) =>\n{\n\tlet tmpKeepRecord = true;\n\n\t/*\n\t\tAlgorithm is simple:\n\n\t\t1.  Enuerate start points\n\n\t\t2.  Find stop points within each start point\n\t\t3. Check the conditional\n\t*/\n\n\tlet tmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart);\n\n\twhile (tmpStartIndex != -1)\n\t{\n\t\tlet tmpStopIndex = pAddress.indexOf(_ConditionalStanzaEnd, tmpStartIndex+_ConditionalStanzaStartLength);\n\n\t\tif (tmpStopIndex != -1)\n\t\t{\n\t\t\tlet tmpMagicComparisonPatternSet = pAddress.substring(tmpStartIndex+_ConditionalStanzaStartLength, tmpStopIndex).split(',');\n\n\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\t\t\tlet tmpSearchComparator = tmpMagicComparisonPatternSet[1];\n\t\t\tlet tmpSearchValue = tmpMagicComparisonPatternSet[2];\n\n\t\t\t// Process the piece\n\t\t\ttmpKeepRecord = tmpKeepRecord && testCondition(pManyfest, pRecord, tmpSearchAddress, tmpSearchComparator, tmpSearchValue);\n\t\t\ttmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart, tmpStopIndex+_ConditionalStanzaEndLength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpStartIndex = -1;\n\t\t}\n\t\t\n\t}\n\n\treturn tmpKeepRecord;\n}\n\nmodule.exports = parseConditionals;\n},{}],69:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Schema Manipulation Functions\n*\n* @class ManyfestSchemaManipulation\n*/\nclass ManyfestSchemaManipulation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n    // This translates the default address mappings to something different.\n    //\n    // For instance you can pass in manyfest schema descriptor object:\n    // \t{\n\t//\t  \"Address.Of.a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t//\t  \"Address.Of.b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t//  }\n    //\n    //\n    // And then an address mapping (basically a Hash->Address map)\n    //  {\n    //    \"a\": \"New.Address.Of.a\",\n    //    \"b\": \"New.Address.Of.b\"\n    //  }\n    //\n    // NOTE: This mutates the schema object permanently, altering the base hash.\n    //       If there is a collision with an existing address, it can lead to overwrites.\n    // TODO: Discuss what should happen on collisions.\n\tresolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\tif (typeof(pManyfestSchemaDescriptors) != 'object')\n\t\t{\n\t\t\tthis.logError(`Attempted to resolve address mapping but the descriptor was not an object.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof(pAddressMapping) != 'object')\n\t\t{\n\t\t\t// No mappings were passed in\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the arrays of both the schema definition and the hash mapping\n\t\tlet tmpManyfestAddresses = Object.keys(pManyfestSchemaDescriptors);\n\t\tlet tmpHashMapping = {};\n\t\ttmpManyfestAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tif (pManyfestSchemaDescriptors[pAddress].hasOwnProperty('Hash'))\n\t\t\t\t{\n\t\t\t\t\ttmpHashMapping[pManyfestSchemaDescriptors[pAddress].Hash] = pAddress;\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet tmpAddressMappingSet = Object.keys(pAddressMapping);\n\n\t\ttmpAddressMappingSet.forEach(\n\t\t\t(pInputAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpNewDescriptorAddress = pAddressMapping[pInputAddress];\n\t\t\t\tlet tmpOldDescriptorAddress = false;\n\t\t\t\tlet tmpDescriptor = false;\n\n\t\t\t\t// See if there is a matching descriptor either by Address directly or Hash\n\t\t\t\tif (pManyfestSchemaDescriptors.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = pInputAddress;\n\t\t\t\t}\n\t\t\t\telse if (tmpHashMapping.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = tmpHashMapping[pInputAddress];\n\t\t\t\t}\n\n\t\t\t\t// If there was a matching descriptor in the manifest, store it in the temporary descriptor\n\t\t\t\tif (tmpOldDescriptorAddress)\n\t\t\t\t{\n\t\t\t\t\ttmpDescriptor = pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t\tdelete pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Create a new descriptor!  Map it to the input address.\n\t\t\t\t\ttmpDescriptor = { Hash:pInputAddress };\n\t\t\t\t}\n\n\t\t\t\t// Now re-add the descriptor to the manyfest schema\n\t\t\t\tpManyfestSchemaDescriptors[tmpNewDescriptorAddress] = tmpDescriptor;\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tsafeResolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\t// This returns the descriptors as a new object, safely remapping without mutating the original schema Descriptors\n\t\tlet tmpManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptors));\n\t\tthis.resolveAddressMappings(tmpManyfestSchemaDescriptors, pAddressMapping);\n\t\treturn tmpManyfestSchemaDescriptors;\n\t}\n\n\tmergeAddressMappings(pManyfestSchemaDescriptorsDestination, pManyfestSchemaDescriptorsSource)\n\t{\n\t\tif ((typeof(pManyfestSchemaDescriptorsSource) != 'object') || (typeof(pManyfestSchemaDescriptorsDestination) != 'object'))\n\t\t{\n\t\t\tthis.logError(`Attempted to merge two schema descriptors but both were not objects.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpSource = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsSource));\n\t\tlet tmpNewManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsDestination));\n\n\t\t// The first passed-in set of descriptors takes precedence.\n\t\tlet tmpDescriptorAddresses = Object.keys(tmpSource);\n\n\t\ttmpDescriptorAddresses.forEach(\n\t\t\t(pDescriptorAddress) =>\n\t\t\t{\n\t\t\t\tif (!tmpNewManyfestSchemaDescriptors.hasOwnProperty(pDescriptorAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpNewManyfestSchemaDescriptors[pDescriptorAddress] = tmpSource[pDescriptorAddress];\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpNewManyfestSchemaDescriptors;\n\t}\n}\n\nmodule.exports = ManyfestSchemaManipulation;\n},{\"./Manyfest-LogToConsole.js\":62}],70:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\nlet libHashTranslation = require('./Manyfest-HashTranslation.js');\nlet libObjectAddressCheckAddressExists = require('./Manyfest-ObjectAddress-CheckAddressExists.js');\nlet libObjectAddressGetValue = require('./Manyfest-ObjectAddress-GetValue.js');\nlet libObjectAddressSetValue = require('./Manyfest-ObjectAddress-SetValue.js');\nlet libObjectAddressDeleteValue = require('./Manyfest-ObjectAddress-DeleteValue.js');\nlet libObjectAddressGeneration = require('./Manyfest-ObjectAddressGeneration.js');\nlet libSchemaManipulation = require('./Manyfest-SchemaManipulation.js');\n\nconst _DefaultConfiguration = { Scope:'DEFAULT', Descriptors: {} }\n\n/**\n* Manyfest object address-based descriptions and manipulations.\n*\n* @class Manyfest\n*/\nclass Manyfest extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'Manifest';\n\n\t\t// Wire in logging\n\t\tthis.logInfo = libSimpleLog;\n\t\tthis.logError = libSimpleLog;\n\n\t\t// Create an object address resolver and map in the functions\n\t\tthis.objectAddressCheckAddressExists = new libObjectAddressCheckAddressExists(this.logInfo, this.logError);\n\t\tthis.objectAddressGetValue = new libObjectAddressGetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressSetValue = new libObjectAddressSetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressDeleteValue = new libObjectAddressDeleteValue(this.logInfo, this.logError);\n\n\t\tif (!this.options.hasOwnProperty('defaultValues'))\n\t\t{\n\t\t\tthis.options.defaultValues = (\n\t\t\t\t{\n\t\t\t\t\t\"String\": \"\",\n\t\t\t\t\t\"Number\": 0,\n\t\t\t\t\t\"Float\": 0.0,\n\t\t\t\t\t\"Integer\": 0,\n\t\t\t\t\t\"Boolean\": false,\n\t\t\t\t\t\"Binary\": 0,\n\t\t\t\t\t\"DateTime\": 0,\n\t\t\t\t\t\"Array\": [],\n\t\t\t\t\t\"Object\": {},\n\t\t\t\t\t\"Null\": null\n\t\t\t\t});\n\t\t}\n\t\tif (!this.options.hasOwnProperty('strict'))\n\t\t{\n\t\t\tthis.options.strict = false;\n\t\t}\n\n\t\tthis.scope = undefined;\n\t\tthis.elementAddresses = undefined;\n\t\tthis.elementHashes = undefined;\n\t\tthis.elementDescriptors = undefined;\n\n\t\tthis.reset();\n\n\t\tif (typeof(this.options) === 'object')\n\t\t{\n\t\t\tthis.loadManifest(this.options);\n\t\t}\n\n\t\tthis.schemaManipulations = new libSchemaManipulation(this.logInfo, this.logError);\n\t\tthis.objectAddressGeneration = new libObjectAddressGeneration(this.logInfo, this.logError);\n\n\t\tthis.hashTranslations = new libHashTranslation(this.logInfo, this.logError);\n\t}\n\n\t/*************************************************************************\n\t * Schema Manifest Loading, Reading, Manipulation and Serialization Functions\n\t */\n\n\t// Reset critical manifest properties\n\treset()\n\t{\n\t\tthis.scope = 'DEFAULT';\n\t\tthis.elementAddresses = [];\n\t\tthis.elementHashes = {};\n\t\tthis.elementDescriptors = {};\n\t}\n\n\tclone()\n\t{\n\t\t// Make a copy of the options in-place\n\t\tlet tmpNewOptions = JSON.parse(JSON.stringify(this.options));\n\n\t\tlet tmpNewManyfest = new Manyfest(this.getManifest(), this.logInfo, this.logError, tmpNewOptions);\n\n\t\t// Import the hash translations\n\t\ttmpNewManyfest.hashTranslations.addTranslation(this.hashTranslations.translationTable);\n\n\t\treturn tmpNewManyfest;\n\t}\n\n\t// Deserialize a Manifest from a string\n\tdeserialize(pManifestString)\n\t{\n\t\t// TODO: Add guards for bad manifest string\n\t\treturn this.loadManifest(JSON.parse(pManifestString));\n\t}\n\n\t// Load a manifest from an object\n\tloadManifest(pManifest)\n\t{\n\t\tif (typeof(pManifest) !== 'object')\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading manifest; expecting an object but parameter was type ${typeof(pManifest)}.`);\n\t\t}\n\n\t\tlet tmpManifest = (typeof(pManifest) == 'object') ? pManifest : {};\n\n\t\tlet tmpDescriptorKeys = Object.keys(_DefaultConfiguration);\n\n\t\tfor (let i = 0; i < tmpDescriptorKeys.length; i++)\n\t\t{\n\t\t\tif (!tmpManifest.hasOwnProperty(tmpDescriptorKeys[i]))\n\t\t\t{\n\t\t\t\ttmpManifest[tmpDescriptorKeys[i]] = JSON.parse(JSON.stringify(_DefaultConfiguration[tmpDescriptorKeys[i]]));\n\t\t\t}\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Scope'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Scope) === 'string')\n\t\t\t{\n\t\t\t\tthis.scope = tmpManifest.Scope;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest; expecting a string but property was type ${typeof(tmpManifest.Scope)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest object.  Property \"Scope\" does not exist in the root of the object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Descriptors'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Descriptors) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpDescriptionAddresses = Object.keys(tmpManifest.Descriptors);\n\t\t\t\tfor (let i = 0; i < tmpDescriptionAddresses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.addDescriptor(tmpDescriptionAddresses[i], tmpManifest.Descriptors[tmpDescriptionAddresses[i]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading description object from manifest object.  Expecting an object in 'Manifest.Descriptors' but the property was type ${typeof(tmpManifest.Descriptors)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object description from manifest object.  Property \"Descriptors\" does not exist in the root of the Manifest object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('HashTranslations'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.HashTranslations) === 'object')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < tmpManifest.HashTranslations.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// Each translation is \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Serialize the Manifest to a string\n\tserialize()\n\t{\n\t\treturn JSON.stringify(this.getManifest());\n\t}\n\n\tgetManifest()\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tScope: this.scope,\n\t\t\t\tDescriptors: JSON.parse(JSON.stringify(this.elementDescriptors)),\n\t\t\t\tHashTranslations: JSON.parse(JSON.stringify(this.hashTranslations.translationTable))\n\t\t\t});\n\t}\n\n\t// Add a descriptor to the manifest\n\taddDescriptor(pAddress, pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) === 'object')\n\t\t{\n\t\t\t// Add the Address into the Descriptor if it doesn't exist:\n\t\t\tif (!pDescriptor.hasOwnProperty('Address'))\n\t\t\t{\n\t\t\t\tpDescriptor.Address = pAddress;\n\t\t\t}\n\n\t\t\tif (!this.elementDescriptors.hasOwnProperty(pAddress))\n\t\t\t{\n\t\t\t\tthis.elementAddresses.push(pAddress);\n\t\t\t}\n\n\t\t\t// Add the element descriptor to the schema\n\t\t\tthis.elementDescriptors[pAddress] = pDescriptor;\n\n\t\t\t// Always add the address as a hash\n\t\t\tthis.elementHashes[pAddress] = pAddress;\n\n\t\t\tif (pDescriptor.hasOwnProperty('Hash'))\n\t\t\t{\n\t\t\t\t// TODO: Check if this is a good idea or not..\n\t\t\t\t//       Collisions are bound to happen with both representations of the address/hash in here and developers being able to create their own hashes.\n\t\t\t\tthis.elementHashes[pDescriptor.Hash] = pAddress;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpDescriptor.Hash = pAddress;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object descriptor for address '${pAddress}' from manifest object.  Expecting an object but property was type ${typeof(pDescriptor)}.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetDescriptorByHash(pHash)\n\t{\n\t\treturn this.getDescriptor(this.resolveHashAddress(pHash));\n\t}\n\n\tgetDescriptor(pAddress)\n\t{\n\t\treturn this.elementDescriptors[pAddress];\n\t}\n\n\t// execute an action function for each descriptor\n\teachDescriptor(fAction)\n\t{\n        let tmpDescriptorAddresses = Object.keys(this.elementDescriptors);\n        for (let i = 0; i < tmpDescriptorAddresses.length; i++)\n        {\n            fAction(this.elementDescriptors[tmpDescriptorAddresses[i]]);\n        }\n\n\t}\n\n\t/*************************************************************************\n\t * Beginning of Object Manipulation (read & write) Functions\n\t */\n\t// Check if an element exists by its hash\n\tcheckAddressExistsByHash (pObject, pHash)\n\t{\n\t\treturn this.checkAddressExists(pObject,this.resolveHashAddress(pHash));\n\t}\n\n\t// Check if an element exists at an address\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\treturn this.objectAddressCheckAddressExists.checkAddressExists(pObject, pAddress);\n\t}\n\n\t// Turn a hash into an address, factoring in the translation table.\n\tresolveHashAddress(pHash)\n\t{\n\t\tlet tmpAddress = undefined;\n\n\t\tlet tmpInElementHashTable = this.elementHashes.hasOwnProperty(pHash);\n\t\tlet tmpInTranslationTable = this.hashTranslations.translationTable.hasOwnProperty(pHash);\n\n\t\t// The most straightforward: the hash exists, no translations.\n\t\tif (tmpInElementHashTable && !tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[pHash];\n\t\t}\n\t\t// There is a translation from one hash to another, and, the elementHashes contains the pointer end\n\t\telse if (tmpInTranslationTable && this.elementHashes.hasOwnProperty(this.hashTranslations.translate(pHash)))\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[this.hashTranslations.translate(pHash)];\n\t\t}\n\t\t// Use the level of indirection only in the Translation Table\n\t\telse if (tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.hashTranslations.translate(pHash);\n\t\t}\n\t\t// Just treat the hash as an address.\n\t\t// TODO: Discuss this ... it is magic but controversial\n\t\telse\n\t\t{\n\t\t\ttmpAddress = pHash;\n\t\t}\n\n\t\treturn tmpAddress;\n\t}\n\n\t// Get the value of an element by its hash\n\tgetValueByHash (pObject, pHash)\n\t{\n\t\tlet tmpValue = this.getValueAtAddress(pObject, this.resolveHashAddress(pHash));\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptorByHash(pHash));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\tlet tmpValue = this.objectAddressGetValue.getValueAtAddress(pObject, pAddress);\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptor(pAddress));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Set the value of an element by its hash\n\tsetValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.setValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressSetValue.setValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Delete the value of an element by its hash\n\tdeleteValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.deleteValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressDeleteValue.deleteValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Validate the consistency of an object against the schema\n\tvalidate(pObject)\n\t{\n\t\tlet tmpValidationData =\n\t\t{\n\t\t\tError: null,\n\t\t\tErrors: [],\n\t\t\tMissingElements:[]\n\t\t};\n\n\t\tif (typeof(pObject) !== 'object')\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Expected passed in object to be type object but was passed in ${typeof(pObject)}`);\n\t\t}\n\n\t\tlet addValidationError = (pAddress, pErrorMessage) =>\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Element at address \"${pAddress}\" ${pErrorMessage}.`);\n\t\t};\n\n\t\t// Now enumerate through the values and check for anomalies based on the schema\n\t\tfor (let i = 0; i < this.elementAddresses.length; i++)\n\t\t{\n\t\t\tlet tmpDescriptor = this.getDescriptor(this.elementAddresses[i]);\n\t\t\tlet tmpValueExists = this.checkAddressExists(pObject, tmpDescriptor.Address);\n\t\t\tlet tmpValue = this.getValueAtAddress(pObject, tmpDescriptor.Address);\n\n\t\t\tif ((typeof(tmpValue) == 'undefined') || !tmpValueExists)\n\t\t\t{\n\t\t\t\t// This will technically mean that `Object.Some.Value = undefined` will end up showing as \"missing\"\n\t\t\t\t// TODO: Do we want to do a different message based on if the property exists but is undefined?\n\t\t\t\ttmpValidationData.MissingElements.push(tmpDescriptor.Address);\n\t\t\t\tif (tmpDescriptor.Required || this.options.strict)\n\t\t\t\t{\n\t\t\t\t\taddValidationError(tmpDescriptor.Address, 'is flagged REQUIRED but is not set in the object');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now see if there is a data type specified for this element\n\t\t\tif (tmpDescriptor.DataType)\n\t\t\t{\n\t\t\t\tlet tmpElementType = typeof(tmpValue);\n\t\t\t\tswitch(tmpDescriptor.DataType.toString().trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpValueString = tmpValue.toString();\n\t\t\t\t\t\t\tif (tmpValueString.indexOf('.') > -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// TODO: Is this an error?\n\t\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but has a decimal point in the number.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DateTime':\n\t\t\t\t\t\tlet tmpValueDate = new Date(tmpValue);\n\t\t\t\t\t\tif (tmpValueDate.toString() == 'Invalid Date')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is not parsable as a Date by Javascript`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Check if this is a string, in the default case\n\t\t\t\t\t\t// Note this is only when a DataType is specified and it is an unrecognized data type.\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} (which auto-converted to String because it was unrecognized) but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpValidationData;\n\t}\n\n\t// Returns a default value, or, the default value for the data type (which is overridable with configuration)\n\tgetDefaultValue(pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) != 'object')\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (pDescriptor.hasOwnProperty('Default'))\n\t\t{\n\t\t\treturn pDescriptor.Default;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Default to a null if it doesn't have a type specified.\n\t\t\t// This will ensure a placeholder is created but isn't misinterpreted.\n\t\t\tlet tmpDataType = (pDescriptor.hasOwnProperty('DataType')) ? pDescriptor.DataType : 'String';\n\t\t\tif (this.options.defaultValues.hasOwnProperty(tmpDataType))\n\t\t\t{\n\t\t\t\treturn this.options.defaultValues[tmpDataType];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// give up and return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enumerate through the schema and populate default values if they don't exist.\n\tpopulateDefaults(pObject, pOverwriteProperties)\n\t{\n\t\treturn this.populateObject(pObject, pOverwriteProperties,\n\t\t\t// This just sets up a simple filter to see if there is a default set.\n\t\t\t(pDescriptor) =>\n\t\t\t{\n\t\t\t\treturn pDescriptor.hasOwnProperty('Default');\n\t\t\t});\n\t}\n\n\t// Forcefully populate all values even if they don't have defaults.\n\t// Based on type, this can do unexpected things.\n\tpopulateObject(pObject, pOverwriteProperties, fFilter)\n\t{\n\t\t// Automatically create an object if one isn't passed in.\n\t\tlet tmpObject = (typeof(pObject) === 'object') ? pObject : {};\n\t\t// Default to *NOT OVERWRITING* properties\n\t\tlet tmpOverwriteProperties = (typeof(pOverwriteProperties) == 'undefined') ? false : pOverwriteProperties;\n\t\t// This is a filter function, which is passed the schema and allows complex filtering of population\n\t\t// The default filter function just returns true, populating everything.\n\t\tlet tmpFilterFunction = (typeof(fFilter) == 'function') ? fFilter : (pDescriptor) => { return true; };\n\n\t\tthis.elementAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpDescriptor = this.getDescriptor(pAddress);\n\t\t\t\t// Check the filter function to see if this is an address we want to set the value for.\n\t\t\t\tif (tmpFilterFunction(tmpDescriptor))\n\t\t\t\t{\n\t\t\t\t\t// If we are overwriting properties OR the property does not exist\n\t\t\t\t\tif (tmpOverwriteProperties || !this.checkAddressExists(tmpObject, pAddress))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setValueAtAddress(tmpObject, pAddress, this.getDefaultValue(tmpDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpObject;\n\t}\n};\n\nmodule.exports = Manyfest;\n},{\"./Manyfest-HashTranslation.js\":61,\"./Manyfest-LogToConsole.js\":62,\"./Manyfest-ObjectAddress-CheckAddressExists.js\":63,\"./Manyfest-ObjectAddress-DeleteValue.js\":64,\"./Manyfest-ObjectAddress-GetValue.js\":65,\"./Manyfest-ObjectAddress-SetValue.js\":66,\"./Manyfest-ObjectAddressGeneration.js\":67,\"./Manyfest-SchemaManipulation.js\":69,\"fable-serviceproviderbase\":34}],71:[function(require,module,exports){\nvar wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n\n},{\"wrappy\":110}],72:[function(require,module,exports){\n(function (process){(function (){\n// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":78}],73:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase')\n\nconst defaultPictSettings = (\n\t{\n\t\tName: 'DefaultPictApplication',\n\n\t\t// The main \"viewport\" is the view that is used to host our application\n\t\tMainViewportViewIdentifier: 'Default-View',\n\t\tMainViewportRenderableHash: false,\n\t\tMainViewportDestinationAddress: false,\n\t\tMainViewportDefaultDataAddress: false,\n\n\t\t// Whether or not we should automatically render the main viewport after we initialize the pict application\n\t\tAutoSolveAfterInitialize: true,\n\t\tAutoRenderMainViewportViewAfterInitialize: true,\n\n\t\tManifests: {},\n\t\t// The prefix to prepend on all template destination hashes\n\t\tIdentifierAddressPrefix: 'PICT-'\n\t});\n\nclass PictApplication extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tthis.serviceType = 'PictApplication';\n\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict state\n\t\tthis.AppData = this.fable.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastMarshalFromViewsTimestamp = false;\n\t\tthis.lastMarshalToViewsTimestamp = false;\n\n\t\t// Load all the manifests for the application\n\t\tlet tmpManifestKeys = Object.keys(this.options.Manifests);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++)\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.fable.serviceManager.instantiateServiceProvider('Manifest', this.options.Manifests[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Solve All Views                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing solve() function...`)\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpViewsToSolve[i].solve();\n\t\t}\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\t// Walk through any loaded views and solve them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoSolveWithApp)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoSolveOrdinal - b.options.AutoSolveOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToSolve[i].solveAsync.bind(tmpViewsToSolve[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Initialize Application                   */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\ttmpViewsToInitialize[i].initialize();\n\t\t\t}\n\t\t\tthis.onAfterInitialize();\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Solve the template synchronously\n\t\t\t\tthis.solve();\n\t\t\t}\n\t\t\t// Now check and see if we should automatically render as well\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Render the template synchronously\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallBack)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\t// TODO: Some optimization cleverness could be gained by grouping them into a parallelized async operation, by ordinal.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority\n\t\t\t// If they are all the default priority 0, it will end up being add order due to JSON Object Property Key order stuff\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = tmpViewsToInitialize[i];\n\t\t\t\ttmpAnticipate.anticipate(tmpView.initializeAsync.bind(tmpView));\n\t\t\t}\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.solveAsync.bind(this));\n\t\t\t}\n\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.renderMainViewportAsync.bind(this));\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallBack();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data From All Views              */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalFromViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalFromViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalFromViews[i].marshalFromView();\n\t\t}\n\t\tthis.onMarshalFromViews();\n\t\tthis.onAfterMarshalFromViews();\n\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalFromViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalFromViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalFromViews[i].marshalFromViewAsync.bind(tmpViewsToMarshalFromViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data To All Views                */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalToViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalToViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalToViews[i].marshalToView();\n\t\t}\n\t\tthis.onMarshalToViews();\n\t\tthis.onAfterMarshalToViews();\n\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalToViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalToViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalToViews[i].marshalToViewAsync.bind(tmpViewsToMarshalToViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Render View                              */\n\t/* -------------------------------------------------------------------------- */\n\trender(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\t// Now get the view (by hash) from the loaded views\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not render from View ${tmpViewIdentifier} because it is not a valid view.`);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn tmpView.render(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress);\n\t}\n\trenderMainViewport()\n\t{\n\t\treturn this.render(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress);\n\t}\n\n\trenderAsync(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tlet tmpErrorMessage = `PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not asynchronously render from View ${tmpViewIdentifier} because it is not a valid view.`;\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.error(tmpErrorMessage);\n\t\t\t}\n\t\t\treturn fCallback(new Error(tmpErrorMessage));\n\t\t}\n\n\t\treturn tmpView.renderAsync(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress, fCallback);\n\t}\n\trenderMainViewportAsync(fCallback)\n\t{\n\t\treturn this.renderAsync(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress, fCallback);\n\t}\n}\n\nmodule.exports = PictApplication;\n},{\"fable-serviceproviderbase\":34}],74:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst defaultPictViewSettings = (\n\t{\n\t\tDefaultRenderable: false,\n\t\tDefaultDestinationAddress: false,\n\t\tDefaultTemplateRecordAddress: false,\n\n\t\tViewIdentifier: false,\n\n\t\t// If this is set to true, when the App initializes this will.\n\t\t// After the App initializes, initialize will be called as soon as it's added.\n\t\tAutoInitialize: true,\n\t\tAutoInitializeOrdinal: 0,\n\n\t\t// If this is set to true, when the App autorenders (on load) this will.\n\t\t// After the App initializes, render will be called as soon as it's added.\n\t\tAutoRender: true,\n\t\tAutoRenderOrdinal: 0,\n\n\t\tAutoSolveWithApp: true,\n\t\tAutoSolveOrdinal: 0,\n\n\t\tCSSHash: false,\n\t\tCSS: false,\n\t\tCSSProvider: false,\n\t\tCSSPriority: 500,\n\n\t\tTemplates: [],\n\n\t\tDefaultTemplates: [],\n\n\t\tRenderables: [],\n\n\t\tManifests: {}\n\t});\n\nclass PictView extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Intersect default options, parent constructor, service information\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictViewSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tif (!this.options.ViewIdentifier)\n\t\t{\n\t\t\tthis.options.ViewIdentifier = `AutoViewID-${this.fable.getUUID()}`;\n\t\t}\n\t\tthis.serviceType = 'PictView';\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict application state\n\t\tthis.AppData = this.pict.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastRenderedTimestamp = false;\n\t\tthis.lastMarshalFromViewTimestamp = false;\n\t\tthis.lastMarshalToViewTimestamp = false;\n\n\t\t// Load all templates from the array in the options\n\t\t// Templates are in the form of {Hash:'Some-Template-Hash',Template:'Template content',Source:'TemplateSource'}\n\t\tfor (let i = 0; i < this.options.Templates.length; i++)\n\t\t{\n\t\t\tlet tmpTemplate = this.options.Templates[i];\n\n\t\t\tif (!tmpTemplate.hasOwnProperty('Hash') || !tmpTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Template ${i} in the options array.`, tmpTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addTemplate(tmpTemplate.Hash, tmpTemplate.Template, tmpTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load all default templates from the array in the options\n\t\t// Templates are in the form of {Prefix:'',Postfix:'-List-Row',Template:'Template content',Source:'TemplateSourceString'}\n\t\tfor (let i = 0; i < this.options.DefaultTemplates.length; i++)\n\t\t{\n\t\t\tlet tmpDefaultTemplate = this.options.DefaultTemplates[i];\n\n\t\t\tif (!tmpDefaultTemplate.hasOwnProperty('Postfix') || !tmpDefaultTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Default Template ${i} in the options array.`, tmpDefaultTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpDefaultTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpDefaultTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addDefaultTemplate(tmpDefaultTemplate.Prefix, tmpDefaultTemplate.Postfix, tmpDefaultTemplate.Template, tmpDefaultTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load the CSS if it's available\n\t\tif (this.options.CSS)\n\t\t{\n\t\t\tlet tmpCSSHash = this.options.CSSHash ? this.options.CSSHash : `View-${this.options.ViewIdentifier}`;\n\t\t\tlet tmpCSSProvider = this.options.CSSProvider ? this.options.CSSProvider : tmpCSSHash;\n\t\t\tthis.pict.CSSMap.addCSS(tmpCSSHash, this.options.CSS, tmpCSSProvider, this.options.CSSPriority);\n\t\t}\n\n\t\t// Load all renderables\n\t\t// Renderables are launchable renderable instructions with templates\n\t\t// They look as such: {Identifier:'ContentEntry', TemplateHash:'Content-Entry-Section-Main', ContentDestinationAddress:'#ContentSection', RecordAddress:'AppData.Content.DefaultText', ManifestTransformation:'ManyfestHash', ManifestDestinationAddress:'AppData.Content.DataToTransformContent'}\n\t\t// The only parts that are necessary are Identifier and Template\n\t\t// A developer can then do render('ContentEntry') and it just kinda works.  Or they can override the ContentDestinationAddress\n\t\tthis.renderables = {};\n\t\tfor (let i = 0; i < this.options.Renderables.length; i++)\n\t\t{\n\t\t\tlet tmpRenderable = this.options.Renderables[i];\n\t\t\tthis.addRenderable(this.options.Renderables[i]);\n\t\t}\n\t}\n\n\taddRenderable(pRenderableHash, pTemplateHash, pDefaultTemplateDataAddress, pDefaultDestinationAddress, pRenderMethod)\n\t{\n\t\tlet tmpRenderable = false;\n\n\t\tif (typeof(pRenderableHash) == 'object')\n\t\t{\n\t\t\t// The developer passed in the renderable as an object.\n\t\t\t// Use theirs instead!\n\t\t\ttmpRenderable = pRenderableHash;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpRenderMethod = (typeof(pRenderMethod) !== 'string') ? pRenderMethod : 'replace';\n\t\t\ttmpRenderable = (\n\t\t\t\t{\n\t\t\t\t\tRenderableHash: pRenderableHash,\n\t\t\t\t\tTemplateHash: pTemplateHash,\n\t\t\t\t\tDefaultTemplateDataAddress: pDefaultTemplateDataAddress,\n\t\t\t\t\tDefaultDestinationAddress: pDefaultDestinationAddress,\n\t\t\t\t\tRenderMethod: tmpRenderMethod\n\t\t\t\t});\n\t\t}\n\n\t\tif ((typeof(tmpRenderable.RenderableHash) != 'string') || (typeof(tmpRenderable.TemplateHash) != 'string'))\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Renderable; RenderableHash or TemplateHash are invalid.`, tmpRenderable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} adding renderable [${tmpRenderable.RenderableHash}] pointed to template ${tmpRenderable.TemplateHash}.`);\n\t\t\t}\n\n\t\t\tthis.renderables[tmpRenderable.RenderableHash] = tmpRenderable;\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                        Code Section: Initialization                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\tthis.onAfterInitialize();\n\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallback)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallback();\n\t\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Render                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeRender(pRenderable, pRenderDestinationAddress, pData)\n\t{\n\t\t// Overload this to mess with stuff before the content gets generated from the template\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeRenderAsync(pRenderable, pRenderDestinationAddress, pData, fCallback)\n\t{\n\t\tthis.onBeforeRender(pRenderable, pRenderDestinationAddress, pData);\n\t\treturn fCallback();\n\t}\n\n\trender(pRenderable, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it is not a valid renderable.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\tlet tmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\t// Generate the content output from the template and data\n\t\tlet tmpContent = this.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData)\n\n\t\t// Assign the content to the destination address\n\t\tswitch(tmpRenderable.RenderMethod)\n\t\t{\n\t\t\tcase 'append':\n\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'prepend':\n\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'append_once':\n\t\t\t\t// Try to find the content in the destination address\n\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t{\n\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\t}\n\t\t\tcase 'replace':\n\t\t\tdefault:\n\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Execute the developer-overridable post-render behavior\n\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, tmpContent)\n\n\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\treturn true;\n\t}\n\trenderAsync(pRenderable, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`));\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`));\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn fCallback(Error(`Could not render ${tmpRenderableHash}`));\n\t\t}\n\n\t\tlet tmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\tlet tmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\t// Render the template (asynchronously)\n\t\tthis.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData,\n\t\t\t(pError, pContent) =>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render (asynchronously) ${tmpRenderableHash} (param ${pRenderable}) because it did not parse the template.`, pError);\n\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t}\n\n\t\t\t\t// Assign the content to the destination address\n\t\t\t\tswitch(tmpRenderable.RenderMethod)\n\t\t\t\t{\n\t\t\t\t\tcase 'append':\n\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'prepend':\n\t\t\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'append_once':\n\t\t\t\t\t\t// Try to find the content in the destination address\n\t\t\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'replace':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Execute the developer-overridable post-render behavior\n\t\t\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, pContent)\n\n\t\t\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\t\t\treturn fCallback(null, pContent);\n\t\t\t});\n\t}\n\n\tonAfterRender()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterRenderAsync(fCallback)\n\t{\n\t\tthis.onAfterRender();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Solver                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal From View                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalFromView();\n\t\tthis.onMarshalFromView();\n\t\tthis.onAfterMarshalFromView();\n\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalFromViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal To View                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalToView();\n\t\tthis.onMarshalToView();\n\t\tthis.onAfterMarshalToView();\n\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalToViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToView();\n\t\treturn fCallback();\n\t}\n}\n\nmodule.exports = PictView;\n},{\"fable-serviceproviderbase\":34}],75:[function(require,module,exports){\n/**\n* Precedent Meta-Templating\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Process text streams, parsing out meta-template expressions.\n*/\nvar libWordTree = require(`./WordTree.js`);\nvar libStringParser = require(`./StringParser.js`);\n\nclass Precedent\n{\n\t/**\n\t * Precedent Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser();\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData);\n\t}\n}\n\nmodule.exports = Precedent;\n\n},{\"./StringParser.js\":76,\"./WordTree.js\":77}],76:[function(require,module,exports){\n/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t */\n\tparseString (pString, pParseTree, pData)\n\t{\n\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\tfor (var i = 0; i < pString.length; i++)\n\t\t{\n\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData);\n\t\t}\n\n\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\treturn tmpParserState.Output;\n\t}\n}\n\nmodule.exports = StringParser;\n\n},{}],77:[function(require,module,exports){\n/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n\n},{}],78:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],79:[function(require,module,exports){\n(function (global){(function (){\n/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],80:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],81:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],82:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":80,\"./encode\":81}],83:[function(require,module,exports){\n/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n},{\"buffer\":20}],84:[function(require,module,exports){\n(function (Buffer){(function (){\n/*! simple-concat. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function (stream, cb) {\n  var chunks = []\n  stream.on('data', function (chunk) {\n    chunks.push(chunk)\n  })\n  stream.once('end', function () {\n    if (cb) cb(null, Buffer.concat(chunks))\n    cb = null\n  })\n  stream.once('error', function (err) {\n    if (cb) cb(err)\n    cb = null\n  })\n}\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":20}],85:[function(require,module,exports){\n(function (Buffer){(function (){\n/*! simple-get. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const originalHost = opts.hostname // hostname before potential redirect\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api\n      // If redirected host is different than original host, drop headers to prevent cookie leak (#73)\n      if (redirectHost !== null && redirectHost !== originalHost) {\n        delete opts.headers.cookie\n        delete opts.headers.authorization\n      }\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":20,\"decompress-response\":18,\"http\":86,\"https\":57,\"once\":71,\"querystring\":82,\"simple-concat\":84,\"url\":107}],86:[function(require,module,exports){\n(function (global){(function (){\nvar ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./lib/request\":88,\"./lib/response\":89,\"builtin-status-codes\":21,\"url\":107,\"xtend\":111}],87:[function(require,module,exports){\n(function (global){(function (){\nexports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],88:[function(require,module,exports){\n(function (process,global,Buffer){(function (){\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"./capability\":87,\"./response\":89,\"_process\":78,\"buffer\":20,\"inherits\":59,\"readable-stream\":104}],89:[function(require,module,exports){\n(function (process,global,Buffer){(function (){\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"./capability\":87,\"_process\":78,\"buffer\":20,\"inherits\":59,\"readable-stream\":104}],90:[function(require,module,exports){\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n\n},{}],91:[function(require,module,exports){\n(function (process){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n}).call(this)}).call(this,require('_process'))\n\n},{\"./_stream_readable\":93,\"./_stream_writable\":95,\"_process\":78,\"inherits\":59}],92:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n},{\"./_stream_transform\":94,\"inherits\":59}],93:[function(require,module,exports){\n(function (process,global){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../errors\":90,\"./_stream_duplex\":91,\"./internal/streams/async_iterator\":96,\"./internal/streams/buffer_list\":97,\"./internal/streams/destroy\":98,\"./internal/streams/from\":100,\"./internal/streams/state\":102,\"./internal/streams/stream\":103,\"_process\":78,\"buffer\":20,\"events\":26,\"inherits\":59,\"string_decoder/\":105,\"util\":18}],94:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}\n},{\"../errors\":90,\"./_stream_duplex\":91,\"inherits\":59}],95:[function(require,module,exports){\n(function (process,global){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../errors\":90,\"./_stream_duplex\":91,\"./internal/streams/destroy\":98,\"./internal/streams/state\":102,\"./internal/streams/stream\":103,\"_process\":78,\"buffer\":20,\"inherits\":59,\"util-deprecate\":109}],96:[function(require,module,exports){\n(function (process){(function (){\n'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;\n}).call(this)}).call(this,require('_process'))\n\n},{\"./end-of-stream\":99,\"_process\":78}],97:[function(require,module,exports){\n'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();\n},{\"buffer\":20,\"util\":18}],98:[function(require,module,exports){\n(function (process){(function (){\n'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":78}],99:[function(require,module,exports){\n// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;\n},{\"../../../errors\":90}],100:[function(require,module,exports){\nmodule.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n\n},{}],101:[function(require,module,exports){\n// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;\n},{\"../../../errors\":90,\"./end-of-stream\":99}],102:[function(require,module,exports){\n'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};\n},{\"../../../errors\":90}],103:[function(require,module,exports){\nmodule.exports = require('events').EventEmitter;\n\n},{\"events\":26}],104:[function(require,module,exports){\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n\n},{\"./lib/_stream_duplex.js\":91,\"./lib/_stream_passthrough.js\":92,\"./lib/_stream_readable.js\":93,\"./lib/_stream_transform.js\":94,\"./lib/_stream_writable.js\":95,\"./lib/internal/streams/end-of-stream.js\":99,\"./lib/internal/streams/pipeline.js\":101}],105:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n},{\"safe-buffer\":83}],106:[function(require,module,exports){\n(function (setImmediate,clearImmediate){(function (){\nvar nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n}).call(this)}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate)\n\n},{\"process/browser.js\":78,\"timers\":106}],107:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n},{\"./util\":108,\"punycode\":79,\"querystring\":82}],108:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n},{}],109:[function(require,module,exports){\n(function (global){(function (){\n\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],110:[function(require,module,exports){\n// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n\n},{}],111:[function(require,module,exports){\nmodule.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n},{}],112:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst defaultConfiguration = (\n\t{\n\t\t// This is the address for the <script /> tag that contains the CSS.\n\t\tCSSElementAddress: '#PICT-CSS'\n\t}\n)\n\nclass PictCSS extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\t// No merging of options necessary\n\t\tif (typeof(this.options.CSSElementAddress) === 'undefined')\n\t\t{\n\t\t\tthis.options.CSSElementAddress = defaultConfiguration.CSSElementAddress;\n\t\t}\n\n\t\tthis.inlineCSSMap = {};\n\t}\n\n\t// Add a CSS fragment to the CSS map (each view can have its own CSS fragment)\n\t// Hash is shared across all views, so if 10 views all load the \"My-Table-View\" fragment, it will only be loaded once.\n\taddCSS(pHash, pContent, pPriority, pProvider)\n\t{\n\t\tlet tmpPriority = (typeof(pPriority) !== 'undefined') ? pPriority : 1000;\n\t\tlet tmpProvidor = (typeof(pProvider) === 'string') ? pProvider : 'Unknown';\n\t\tthis.inlineCSSMap[pHash] = { Hash: pHash, Content: pContent, Provider: tmpProvidor, Priority:tmpPriority };\n\t}\n\n\tremoveCSS(pHash)\n\t{\n\t\tdelete this.inlineCSSMap[pHash];\n\t}\n\n\tgenerateCSS()\n\t{\n\t\tlet tmpCSS = '';\n\t\tlet tmpCSSHashes = Object.keys(this.inlineCSSMap);\n\t\t// Sort the hashes by Priority\n\t\ttmpCSSHashes.sort((a, b) => { return this.inlineCSSMap[a].Priority - this.inlineCSSMap[b].Priority; });\n\t\tfor (let i = 0; i < tmpCSSHashes.length; i++)\n\t\t{\n\t\t\tlet tmpCSSFragment = this.inlineCSSMap[tmpCSSHashes[i]];\n\t\t\tlet tmpCSSComment = tmpCSSFragment.Hash;\n\t\t\tif (tmpCSSFragment.Hash != tmpCSSFragment.Provider)\n\t\t\t{\n\t\t\t\ttmpCSSComment = `${tmpCSSComment} from ${tmpCSSFragment.Provider}`;\n\t\t\t}\n\t\t\ttmpCSS += `/* ${tmpCSSComment} */\\n${tmpCSSFragment.Content}\\n`;\n\t\t}\n\t\treturn tmpCSS;\n\t}\n\n\t// Inject the CSS into the magic DOM element for it\n\tinjectCSS()\n\t{\n\t\tthis.services.ContentAssignment.assignContent(this.options.CSSElementAddress, this.generateCSS());\n\t}\n}\n\nmodule.exports = PictCSS;\n},{\"fable\":41}],113:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictContentAssignment extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictContentAssignment';\n\n\t\t// Check to see if we are running in a browser\n\t\tthis.inBrowser = false;\n\t\tthis.hasDocument = false;\n\t\tif (typeof (window) == 'object')\n\t\t{\n\t\t\tthis.inBrowser = true;\n\t\t\t// Now check that the browser has a document object\n\t\t\tif ((typeof (window.document) != 'undefined') && (typeof (window.document.querySelectorAll) == 'function'))\n\t\t\t{\n\t\t\t\tthis.hasDocument = true;\n\t\t\t}\n\t\t}\n\n\t\t// If we're in a browser, check to see if jQuery is available.\n\t\tthis.hasJquery = false;\n\t\tthis.jQuery = false;\n\t\tif (this.inBrowser && typeof (window.jQuery) !== 'undefined')\n\t\t{\n\t\t\tthis.hasJquery = true;\n\t\t}\n\n\t\t// API Consumers can craft their own assign function\n\t\tthis.customAssignFunction = false;\n\t\t// API Consumers can also craft their own prepend function\n\t\tthis.customPrependFunction = false;\n\t\t// API Consumers can also craft their own append function\n\t\tthis.customAppendFunction = false;\n\n\t\t// API Consumers can also craft their own read function\n\t\tthis.customReadFunction = false;\n\t\t// API Consumers can even craft their own get element function.\n\t\tthis.customGetElementFunction = false;\n\n\n\t}\n\n\tgetElement(pAddress)\n\t{\n\t\tif (this.customGetElementFunction)\n\t\t{\n\t\t\treturn this.customGetElementFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpElements = window.jQuery(pAddress);\n\t\t\tif (tmpElements.length == 0)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// TODO: This isn't the most efficient method, but it is the most compatible.\n\t\t\t\tlet tmpElementSet = [];\n\t\t\t\tfor (let i = 0; i < tmpElements.length; i++)\n\t\t\t\t{\n\t\t\t\t\ttmpElementSet.push(tmpElements[0]);\n\t\t\t\t}\n\t\t\t\treturn tmpElementSet;\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\treturn window.document.querySelectorAll(pAddress);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content GET ELEMENT for [${pAddress}] will return empty because none of the browser methods are available`);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tassignContent(pAddress, pContent)\n\t{\n\t\tif (this.customAssignFunction)\n\t\t{\n\t\t\treturn this.customAssignFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\n\t\t\t// Should we ensure we matched 1 and exactly 1 element?\n\t\t\t//if (tmpTargetElement && tmpTargetElement.length == 1)\n\t\t\t//{\n\t\t\t// Set the content\n\t\t\ttmpTargetElement.html(pContent);\n\t\t\t//}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'BUTTON':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\tcase 'A':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content ASSIGN to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tappendContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customAppendFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.append(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"beforeend\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content APPEND to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tprependContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customPrependFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.prepend(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"afterbegin\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content PREPEND in [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\treadContent(pAddress)\n\t{\n\t\tif (this.customReadFunction)\n\t\t{\n\t\t\treturn this.customReadFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\treturn tmpTargetElement.html();\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tif (tmpTargetElementSet.length < 1)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse if (tmpTargetElementSet.length == 1)\n\t\t\t{\n\t\t\t\tif ((tmpTargetElementSet[0].tagName == 'INPUT') || (tmpTargetElementSet[0].tagName == 'TEXTAREA'))\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].value;\n\t\t\t\t}\n\t\t\t\telse if (tmpTargetElementSet[0].tagName == 'SCRIPT')\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].text;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].innerHTML;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content READ from [${pAddress}]...`);\n\t\t\treturn '';\n\t\t}\n\t}\n\n\n\taddClass(pAddress, pClass)\n\t{\n\t\tif (this.customAddClassFunction)\n\t\t{\n\t\t\treturn this.customAddClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.addClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.add(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content ADDCLASS to [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\tremoveClass(pAddress, pClass)\n\t{\n\t\tif (this.customRemoveClassFunction)\n\t\t{\n\t\t\treturn this.customRemoveClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.remove(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVECLASS from [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\ttoggleClass(pAddress, pClass)\n\t{\n\t\t// STUB\n\t}\n\n\thasClass(pAddress, pClass)\n\t{\n\t\t// STUB\n\t}\n\n}\n\nmodule.exports = PictContentAssignment;\n},{\"fable\":41}],114:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictDataProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictDataProvider';\n\t}\n\n    getDataByAddress(pAddress, pData)\n    {\n        let tmpData = (typeof(pData) === 'undefined') ? {} : pData;\n\n        return this.fable.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, pAddress);\n    }\n}\n\nmodule.exports = PictDataProvider;\n},{\"fable\":41}],115:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictMeadowEntityProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictMeadowProvider';\n\n\t\tif (this.fable.settings.PictDefaultURLPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = this.fable.settings.PictDefaultURLPrefix;\n\t\t}\n\t\telse if (!this.options.urlPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = '/1.0/';\n\t\t}\n\n\t\tif (this.fable.settings.PictDefaultDownloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = this.fable.settings.PictDefaultDownloadBatchSize;\n\t\t}\n\t\telse if (!this.options.downloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = 100;\n\t\t}\n\n\t\tthis.restClient = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('RestClient');\n\n\t\tthis.cache = {};\n\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tinitializeCache(pEntity)\n\t{\n\t\t// This should not be happening as often as it's happening.\n\t\tif (!this.cache.hasOwnProperty(pEntity))\n\t\t{\n\t\t\tthis.cache[pEntity] = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('ObjectCache');\n\t\t\t// TODO: Make this a configuration?\n\t\t\t// For now cache for 30 seconds.\n\t\t\tthis.cache[pEntity].maxAge = 30000;\n\t\t\tthis.cache[pEntity].maxLength = 10000;\n\n\t\t\tthis.fable.Bundle[pEntity] = this.cache[pEntity].RecordMap;\n\t\t}\n\t}\n\n\tgetEntity (pEntity, pIDRecord, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tlet tmpPossibleRecord = this.cache[pEntity].read(pIDRecord);\n\n\t\t\t\tif (tmpPossibleRecord)\n\t\t\t\t{\n\t\t\t\t\treturn tmpPossibleRecord;\n\t\t\t\t}\n\n\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}/${pIDRecord}`\n\t\t\t\t\t});\n\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pBody)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.cache[pEntity].put(pBody, pIDRecord);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pBody);\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tgetEntitySet = function (pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// TODO: Should we test for too many record IDs here by string length?\n\t\t// FBL~ID${pDestinationEntity}~INN~${tmpIDRecordsCommaSeparated}\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tlet tmpCountOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}s/Count/FilteredTo/${pMeadowFilterExpression}`\n\t\t\t\t\t});\n\t\t\t\ttmpCountOptions = this.prepareRequestOptions(tmpCountOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpCountOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Error getting bulk entity count of [${pEntity}] filtered to [${pMeadowFilterExpression}] from server [${tmpCountOptions.url}]: ${pError}`);\n\t\t\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet tmpRecordCount = 0;\n\t\t\t\t\t\tif (pBody.Count)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpRecordCount = pBody.Count;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpDownloadURIFragments = [];\n\t\t\t\t\t\tlet tmpDownloadBatchSize = this.options.downloadBatchSize;\n\t\t\t\t\t\tfor (let i = 0; i < (tmpRecordCount / tmpDownloadBatchSize); i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Generate each of the URI fragments to download\n\t\t\t\t\t\t\ttmpDownloadURIFragments.push(`${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${i*tmpDownloadBatchSize}/${tmpDownloadBatchSize}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpEntitySet = [];\n\t\t\t\t\t\t// Now run these in series (it's possible to parallelize but no reason to)\n\t\t\t\t\t\tthis.fable.Utility.eachLimit(tmpDownloadURIFragments, 1,\n\t\t\t\t\t\t\t(pURIFragment, fDownloadCallback)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\turl: `${this.options.urlPrefix}${pURIFragment}`\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\t\t\t\t\tthis.restClient.getJSON(pURIFragment,\n\t\t\t\t\t\t\t\t\t(pDownloadError, pDownloadResponse, pDownloadBody)=>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmpEntitySet = tmpEntitySet.concat(pDownloadBody);\n\t\t\t\t\t\t\t\t\t\t// Should we be caching each record?\n\t\t\t\t\t\t\t\t\t\treturn fDownloadCallback(pDownloadError);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(pFullDownloadError)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(pFullDownloadError, tmpEntitySet);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t});\n\t}\n}\n\nmodule.exports = PictMeadowEntityProvider;\n},{\"fable\":41}],116:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictTemplateProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictTemplateProvider';\n\n        this.templates = {};\n        this.templateSources = {};\n\n        // Default templates are stored by prefix.\n        // The longest prefix match is used.\n        // Case sensitive.\n        this.defaultTemplates = [];\n\n        // This function can be overloaded to load templates from a database, in a page or other source.\n        this.loadTemplateFunction = (pTemplateHash) => { return false; };\n\t}\n\n    addTemplate(pTemplateHash, pTemplate, pTemplateSource)\n    {\n        this.templates[pTemplateHash] = pTemplate;\n\n        if (typeof(pTemplateSource) == 'string')\n        {\n            this.templateSources[pTemplateHash] = pTemplateSource;\n        }\n        else\n        {\n            this.templateSources[pTemplateHash] = `Direct addTemplate('${pTemplateHash}') function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`;\n        }\n    }\n\n    addDefaultTemplate(pPrefix, pPostfix, pTemplate, pSource)\n    {\n        let tmpSource = (typeof(pSource) == 'string') ? pSource : `Direct addDefaultTemplate('${pPrefix}','${pPostfix}',..) function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`\n        let tmpDefaultTemplate = {\n            prefix: pPrefix,\n            postfix: pPostfix,\n            template: pTemplate,\n            source: tmpSource\n        };\n        if (typeof(pTemplate) != 'string')\n        {\n            this.log.error('PictTemplateProvider.addDefaultTemplate: pTemplate is not a string.');\n        }\n        this.defaultTemplates.push(tmpDefaultTemplate);\n    }\n\n    checkDefaultTemplateHash(pTemplateHash)\n    {\n        /*\n         * Default templates are managed by postfix and prefix.  The use case is things like titles, headers, list \n         * wrappers, rows, etc.\n         *\n         * So we might have a default template for a list wrapper and it should expect \"-ListWrap\" as the postfix.\n         * And we might have a default template for a list row and it should expect \"-ListRow\" as the postfix.\n         * The list might have a \"-ListTitle\", or we might have shared titles and it would just be \"-Title\".\n         * \n         * The idea is to allow fallbacks on defaults.\n         */\n        for (let i = 0; i < this.defaultTemplates.length; i++)\n        {\n            if ((pTemplateHash.indexOf(this.defaultTemplates[i].postfix) == pTemplateHash.length - this.defaultTemplates[i].postfix.length)\n                && (pTemplateHash.indexOf(this.defaultTemplates[i].prefix) == 0))\n            {\n                this.templates[pTemplateHash] = this.defaultTemplates[i].template;\n                this.templateSources[pTemplateHash] = `Auto created in checkDefaultTemplateHash('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${this.defaultTemplates[i].prefix}]...[${this.defaultTemplates[i].postfix}]`;\n                return this.templates[pTemplateHash];\n            }\n        }\n        return false;\n    }\n\n    getTemplate(pTemplateHash)\n    {\n        // TODO: Optimize this.\n        // If the template doesn't exist, try to load it with the loading function\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.loadTemplate(pTemplateHash);\n        }\n        // If the loading function fails, try to load it from the default templates\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.checkDefaultTemplateHash(pTemplateHash);\n        }\n        if (this.templates.hasOwnProperty(pTemplateHash))\n        {\n            return this.templates[pTemplateHash];\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    loadTemplate(pTemplateHash)\n    {\n        let tmpTemplate = this.loadTemplateFunction(pTemplateHash);\n\n        if (tmpTemplate)\n        {\n            this.templates[pTemplateHash] = tmpTemplate.template;\n            this.templateSources[pTemplateHash] = `Loaded in loadTemplate('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${tmpTemplate.source}]`;\n\n        }\n\n        return tmpTemplate;\n    }\n}\n\nmodule.exports = PictTemplateProvider;\n},{\"fable\":41}],117:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nconst libFable = require('fable');\n\nclass Pict extends libFable\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\tthis.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n\n\t\t// The templateProvider provides a basic key->template mapping with default fallback capabilities\n\t\tthis.serviceManager.addAndInstantiateServiceType('TemplateProvider', require('./Pict-Template-Provider.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('EntityProvider',  require('./Pict-Meadow-EntityProvider.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('DataProvider',  require('./Pict-DataProvider.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('ContentAssignment',  require('./Pict-Content-Assignment.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('CSSMap', require('./Pict-CSS.js'));\n\n\t\tthis.serviceManager.instantiateServiceProvider('MetaTemplate');\n\t\tthis.serviceManager.instantiateServiceProvider('DataGeneration');\n\n\t\tthis.manifest = this.serviceManager.instantiateServiceProvider('Manifest');\n\n\t\tthis.AppData = {};\n\t\tthis.Bundle = {};\n\n\t\t// Log noisness goes from 0 - 5, where 5 is show me everything.\n\t\tthis.LogNoisiness = 0;\n\n\t\t// Load manifest sets\n\t\tif (this.settings.Manifests)\n\t\t{\n\t\t\tthis.loadManifestSet(this.settings.Manifests);\n\t\t}\n\n\t\tthis._DefaultPictTemplatesInitialized = false;\n\t\tthis.initializePictTemplateEngine();\n\n\t\tthis.serviceManager.addServiceType('PictView',  require('pict-view'));\n\t\tthis.serviceManager.addServiceType('PictApplication',  require('pict-application'));\n\n\t\t// Expose the named views directly, through a convenience accessor\n\t\tthis.views = this.serviceManager.servicesMap.PictView;\n\t}\n\n\t// Load manifests in as Hashed services\n\tloadManifestSet (pManifestSet)\n\t{\n\t\tif (typeof(pManifestSet) != 'object')\n\t\t{\n\t\t\tthis.log.warn(`PICT [${this.UUID}] could not load Manifest Set; pManifestSet was not an object.`);\n\t\t\treturn false;\n\t\t}\n\t\tlet tmpManifestKeys = Object.keys(pManifestSet);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++ )\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.serviceManager.instantiateServiceProvider('Manifest', pManifestSet[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddView(pViewHash, pOptions, pViewPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpViewHash = (typeof(pViewHash) == 'string') ? pViewHash : this.fable.getUUID();\n\n\t\tif (typeof(pViewPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pViewPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pViewPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\t\t\treturn this.serviceManager.instantiateServiceProviderFromPrototype('PictView', tmpOptions, tmpViewHash, pViewPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.serviceManager.instantiateServiceProvider('PictView', tmpOptions, tmpViewHash);\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddApplication(pApplicationHash, pOptions, pApplicationPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpApplicationHash = (typeof(pApplicationHash) == 'string') ? pApplicationHash : this.fable.getUUID();\n\n\t\tif (typeof(pApplicationPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pApplicationPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pApplicationPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\n\t\t\treturn this.serviceManager.instantiateServiceProviderFromPrototype('PictApplication', tmpOptions, tmpApplicationHash, pApplicationPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.serviceManager.instantiateServiceProvider('PictApplication', tmpOptions, tmpApplicationHash);\n\t\t}\n\t}\n\n\tinitializePictTemplateEngine()\n\t{\n\t\t/*\n\t\t *\n\t\t * To stave off madness, these are inefficient for now.  The wkhtmltopdf renderer leaves much to be desired\n\t\t * in the way of feedback with regards to javascript compatibility.\n\t\t *\n\t\t */\n\t\tif (!this._DefaultPictTemplatesInitialized)\n\t\t{\n\t\t\t// Expects one of the following:\n\t\t\t// \t\t{~Entity:Book:1~}\n\t\t\t//          ...meaning GET BOOK 1\n\t\t\t// \t\t{~Entity:Book:AppData.Some.Address.IDBook~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook\n\t\t\t// \t\t{~E:Book:AppData.Some.Address.IDBook:Render-Book-Template~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook and render it to Render-Book-Template\n\t\t\tlet fEntityRender = (pHash, pData, fCallback) =>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpEntity = false;\n\t\t\t\t\tlet tmpEntityID = false;\n\t\t\t\t\tlet tmpEntityTemplate = false;\n\n\t\t\t\t\t// This expression requires 2 parts -- a third is optional, and, if present, is the template to render to.\n\t\t\t\t\tlet tmpHashSeparator = tmpHash.indexOf('|');\n\n\t\t\t\t\tif (tmpHashSeparator < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\t\tlet tmpHashEntitySeparator = tmpHash.indexOf(':');\n\t\t\t\t\t\ttmpEntity = tmpHash.substring(0, tmpHashEntitySeparator);\n\t\t\t\t\t\ttmpEntityID = tmpHash.substring(tmpHashEntitySeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is a 3 part hash (the entity, the ID, and the template)\n\t\t\t\t\t\tlet tmpHashEntitySeparator = tmpHash.indexOf(':');\n\t\t\t\t\t\ttmpEntity = tmpHash.substring(0, tmpHashEntitySeparator);\n\n\t\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf('|');\n\t\t\t\t\t\ttmpEntityID = tmpHash.substring(tmpHashEntitySeparator + 1, tmpHashTemplateSeparator);\n\n\t\t\t\t\t\ttmpEntityTemplate = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isNaN(tmpEntityID))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpEntityID = parseInt(tmpEntityID);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is an address, so we need to get the value at the address\n\t\t\t\t\t\ttmpEntityID = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpEntityID);\n\t\t\t\t\t}\n\n\t\t\t\t\t// No Entity or EntityID\n\t\t\t\t\tif (!tmpEntity || !tmpEntityID)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to get the entity\n\t\t\t\t\tthis.EntityProvider.getEntity(tmpEntity, tmpEntityID,\n\t\t\t\t\t\t(pError, pRecord) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Pict: Entity Render: Error getting entity [${tmpEntity}] with ID [${tmpEntityID}] for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\t\t\treturn fCallback(pError, '');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Now render the template\n\t\t\t\t\t\t\tif (tmpEntityTemplate)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(null, this.parseTemplateByHash(tmpEntityTemplate, pRecord));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternAsync('{~E:', '~}', fEntityRender);\n\t\t\tthis.MetaTemplate.addPatternAsync('{~Entity:', '~}', fEntityRender);\n\n\t\t\t// {NE~Some.Address|If the left value is truthy, render this value.~}\n\t\t\tlet fNotEmptyRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Should switch this to indexOf so pipes can be in the content.\n\t\t\t\t\tlet tmpHashParts = tmpHash.split('|');\n\n\t\t\t\t\t// For now just check truthiness\n\t\t\t\t\tif (this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHashParts[0]))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpHashParts[1];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~NotEmpty:', '~}', fNotEmptyRender);\n\t\t\tthis.MetaTemplate.addPattern('{~NE:', '~}', fNotEmptyRender);\n\n\t\t\t// {~T:Template:AddressOfData~}\n\t\t\tlet fTemplateRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~T:', '~}', fTemplateRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Template:', '~}', fTemplateRender);\n\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~TS:', '~}', fTemplateSetRender);\n\t\t\tthis.MetaTemplate.addPattern('{~TemplateSet:', '~}', fTemplateSetRender);\n\n\t\t\t//{~Data:AppData.Some.Value.to.Render~}\n\t\t\tlet fDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn tmpValue;\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~D:', '~}', fDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Data:', '~}', fDataRender);\n\n\t\t\tthis.MetaTemplate.addPattern('{~Dollars:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterDollars(tmpColumnData);\n\t\t\t\t});\n\t\t\tthis.MetaTemplate.addPattern('{~Digits:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterAddCommasToNumber(this.DataFormat.formatterRoundNumber(tmpColumnData, 2));\n\t\t\t\t});\n\n\t\t\tlet fRandomNumberString = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumberString]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpStringLength = 4;\n\t\t\t\t\tlet tmpMaxNumber = 9999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpStringLength = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomNumericString(tmpStringLength, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumberString:', '~}',fRandomNumberString);\n\t\t\tthis.MetaTemplate.addPattern('{~RNS:', '~}',fRandomNumberString);\n\n\t\t\tlet fRandomNumber = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumber]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpMinimumNumber = 0;\n\t\t\t\t\tlet tmpMaxNumber = 9999999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMinimumNumber = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomIntegerBetween(tmpMinimumNumber, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumber:', '~}',fRandomNumber);\n\t\t\tthis.MetaTemplate.addPattern('{~RN:', '~}',fRandomNumber);\n\n\t\t\tlet fPascalCaseIdentifier = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn this.DataFormat.cleanNonAlphaCharacters(this.DataFormat.capitalizeEachWord(tmpValue));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~PascalCaseIdentifier:', '~}',fPascalCaseIdentifier);\n\n\t\t\tlet fLogValue = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tlet tmpValueType = typeof(tmpValue);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValueType == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is ${tmpValueType}.`);\n\t\t\t\t\t}\n\t\t\t\t\telse if (tmpValueType == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is an obect.`, tmpValue);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] if a ${tmpValueType} = [${tmpValue}]`);\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogValue:', '~}',fLogValue);\n\t\t\tthis.MetaTemplate.addPattern('{~LV:', '~}',fLogValue);\n\n\n\t\t\tlet fLogStatement = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tthis.log.trace(`PICT Template Log Message: ${tmpHash}`);\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogStatement:', '~}',fLogStatement);\n\t\t\tthis.MetaTemplate.addPattern('{~LS:', '~}',fLogStatement);\n\n\t\t\tlet fBreakpoint = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpError = new Error(`PICT Template Breakpoint: ${tmpHash}`);\n\t\t\t\t\tthis.log.trace(`PICT Template Breakpoint: ${tmpHash}`, tmpError.stack);\n\t\t\t\t\tdebugger;\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~Breakpoint', '~}',fBreakpoint);\n\n\t\t\tthis._DefaultPictTemplatesInitialized = true;\n\t\t}\n\t}\n\n\tparseTemplate (pTemplateString, pData, fCallback)\n\t{\n\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\treturn this.MetaTemplate.parseString(pTemplateString, tmpData, fCallback);\n\t}\n\n\tparseTemplateByHash (pTemplateHash, pData, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn this.parseTemplate(tmpTemplateString, pData, fCallback);\n\t}\n\n\tparseTemplateSet (pTemplateString, pDataSet, fCallback)\n\t{\n\t\t// TODO: This will need streaming -- for now janky old string append does the trick\n\t\tlet tmpValue = '';\n\t\tif (typeof(fCallback) == 'function')\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tthis.Utility.eachLimit(pDataSet, 1,\n\t\t\t\t\t(pRecord, fRecordTemplateCallback)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplate(pTemplateString, pRecord,\n\t\t\t\t\t\t\t(pError, pTemplateResult)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValue += pTemplateResult;\n\t\t\t\t\t\t\t\treturn fRecordTemplateCallback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t(pError)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fCallback(pError, tmpValue);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn fCallback(Error('Pict: Template Set: pDataSet is not an array or object.'), '');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tif (Array.isArray(pDataSet))\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < pDataSet.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpKeys = Object.keys(pDataSet);\n\t\t\t\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[tmpKeys[i]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpValue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\tparseTemplateSetByHash (pTemplateHash, pDataSet, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn this.parseTemplateSet(tmpTemplateString, pDataSet, fCallback);\n\t}\n};\n\nmodule.exports = Pict;\n\nmodule.exports.PictApplicationClass = require('pict-application');\nmodule.exports.PictViewClass = require('pict-view');\n\nmodule.exports.EnvironmentLog = require('./environments/Pict-Environment-Log.js');\n\n// This is to help understand the type of enivironement we're executing in\nmodule.exports.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n},{\"./Pict-CSS.js\":112,\"./Pict-Content-Assignment.js\":113,\"./Pict-DataProvider.js\":114,\"./Pict-Meadow-EntityProvider.js\":115,\"./Pict-Template-Provider.js\":116,\"./environments/Pict-Environment-Log.js\":118,\"fable\":41,\"pict-application\":73,\"pict-view\":74}],118:[function(require,module,exports){\n/**\n* Pict browser shim loader\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\n\nclass PictEnvironmentLog\n{\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\t}\n\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\tcustomGetElementFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\tcustomReadFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\tcustomAppendFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\tcustomPrependFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomAssignFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Assign.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n}\n\nmodule.exports = PictEnvironmentLog;\n},{}]},{},[117])(117)\n});\n\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\nvar eachOfLimit = require('async.util.eachoflimit');\nvar withoutIndex = require('async.util.withoutindex');\n\nmodule.exports = function eachLimit(arr, limit, iterator, cb) {\n    return eachOfLimit(limit)(arr, withoutIndex(iterator), cb);\n};\n","'use strict';\n\nmodule.exports = function(tasks) {\n    function makeCallback(index) {\n        function fn() {\n            if (tasks.length) {\n                tasks[index].apply(null, arguments);\n            }\n            return fn.next();\n        }\n        fn.next = function() {\n            return (index < tasks.length - 1) ? makeCallback(index + 1) : null;\n        };\n        return fn;\n    }\n    return makeCallback(0);\n};\n","var once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar onlyOnce = require('async.util.onlyonce');\nvar keyIterator = require('async.util.keyiterator');\n\nmodule.exports = function eachOfLimit(limit) {\n    return function(obj, iterator, cb) {\n        cb = once(cb || noop);\n        obj = obj || [];\n        var nextKey = keyIterator(obj);\n        if (limit <= 0) {\n            return cb(null);\n        }\n        var done = false;\n        var running = 0;\n        var errored = false;\n\n        (function replenish() {\n            if (done && running <= 0) {\n                return cb(null);\n            }\n\n            while (running < limit && !errored) {\n                var key = nextKey();\n                if (key === null) {\n                    done = true;\n                    if (running <= 0) {\n                        cb(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iterator(obj[key], key, onlyOnce(function(err) {\n                    running -= 1;\n                    if (err) {\n                        cb(err);\n                        errored = true;\n                    } else {\n                        replenish();\n                    }\n                }));\n            }\n        })();\n    };\n};\n","'use strict';\nvar setImmediate = require('async.util.setimmediate');\nvar restParam = require('async.util.restparam');\n\nmodule.exports = function(fn) {\n    return restParam(function(args) {\n        var callback = args.pop();\n        args.push(function() {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate(function() {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        var sync = true;\n        fn.apply(this, args);\n        sync = false;\n    });\n};\n","'use strict';\n\nmodule.exports = Array.isArray || function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n","'use strict';\n\nvar isArray = require('async.util.isarray');\n\nmodule.exports = function isArrayLike(arr) {\n    return isArray(arr) || (\n        // has a positive integer length property\n        typeof arr.length === 'number' &&\n        arr.length >= 0 &&\n        arr.length % 1 === 0\n    );\n};\n","'use strict';\n\nvar _keys = require('async.util.keys');\nvar isArrayLike = require('async.util.isarraylike');\n\nmodule.exports = function keyIterator(coll) {\n    var i = -1;\n    var len;\n    var keys;\n    if (isArrayLike(coll)) {\n        len = coll.length;\n        return function next() {\n            i++;\n            return i < len ? i : null;\n        };\n    } else {\n        keys = _keys(coll);\n        len = keys.length;\n        return function next() {\n            i++;\n            return i < len ? keys[i] : null;\n        };\n    }\n};\n","'use strict';\n\nmodule.exports = Object.keys || function keys(obj) {\n    var _keys = [];\n    for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            _keys.push(k);\n        }\n    }\n    return _keys;\n};\n","'use strict';\n\nmodule.exports = function noop () {};\n","'use strict';\n\nmodule.exports = function once(fn) {\n    return function() {\n        if (fn === null) return;\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n","'use strict';\n\nmodule.exports = function only_once(fn) {\n    return function() {\n        if (fn === null) throw new Error('Callback was already called.');\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n","'use strict';\nmodule.exports = function restParam(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n        var length = Math.max(arguments.length - startIndex, 0);\n        var rest = new Array(length);\n        for (var index = 0; index < length; index++) {\n            rest[index] = arguments[index + startIndex];\n        }\n        switch (startIndex) {\n            case 0:\n                return func.call(this, rest);\n            case 1:\n                return func.call(this, arguments[0], rest);\n        }\n    };\n};\n","'use strict';\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\nvar fallback = function(fn) {\n    setTimeout(fn, 0);\n};\n\nmodule.exports = function setImmediate(fn) {\n    // not a direct alias for IE10 compatibility\n    return (_setImmediate || fallback)(fn);\n};\n","'use strict';\n\nmodule.exports = function withoutIndex(iterator) {\n    return function(value, index, callback) {\n        return iterator(value, callback);\n    };\n};\n","'use strict';\n\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar isArray = require('async.util.isarray');\nvar restParam = require('async.util.restparam');\nvar ensureAsync = require('async.util.ensureasync');\nvar iterator = require('async.iterator');\n\nmodule.exports = function(tasks, cb) {\n    cb = once(cb || noop);\n    if (!isArray(tasks)) return cb(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return cb();\n\n    function wrapIterator(iterator) {\n        return restParam(function(err, args) {\n            if (err) {\n                cb.apply(null, [err].concat(args));\n            } else {\n                var next = iterator.next();\n                if (next) {\n                    args.push(wrapIterator(next));\n                } else {\n                    args.push(cb);\n                }\n                ensureAsync(iterator).apply(null, args);\n            }\n        });\n    }\n    wrapIterator(iterator(tasks))();\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*\r\n *  big.js v6.2.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2022 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,            // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n    /*\r\n     * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n     * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n     * primitive number without a loss of precision.\r\n     */\r\n    STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        if (typeof n !== 'string') {\r\n          if (Big.strict === true && typeof n !== 'bigint') {\r\n            throw TypeError(INVALID + 'value');\r\n          }\r\n\r\n          // Minus zero?\r\n          n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n        }\r\n\r\n        parse(x, n);\r\n      }\r\n\r\n      // Retain a reference to this Big constructor.\r\n      // Shadow Big.prototype.constructor which points to Object.\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.strict = STRICT;\r\n    Big.roundDown = 0;\r\n    Big.roundHalfUp = 1;\r\n    Big.roundHalfEven = 2;\r\n    Big.roundUp = 3;\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    if (!NUMERIC.test(n)) {\r\n      throw Error(INVALID + 'number');\r\n    }\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n   * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, sd, rm, more) {\r\n    var xc = x.c;\r\n\r\n    if (rm === UNDEFINED) rm = x.constructor.RM;\r\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    if (sd < 1) {\r\n      more =\r\n        rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n        rm === 1 && xc[0] >= 5 ||\r\n        rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n      );\r\n\r\n      xc.length = 1;\r\n\r\n      if (more) {\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        x.e = x.e - sd + 1;\r\n        xc[0] = 1;\r\n      } else {\r\n\r\n        // Zero.\r\n        xc[0] = x.e = 0;\r\n      }\r\n    } else if (sd < xc.length) {\r\n\r\n      // xc[sd] is the digit after the digit that may be rounded up.\r\n      more =\r\n        rm === 1 && xc[sd] >= 5 ||\r\n        rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n          (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n        rm === 3 && (more || !!xc[0]);\r\n\r\n      // Remove any digits after the required precision.\r\n      xc.length = sd;\r\n\r\n      // Round up?\r\n      if (more) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up.\r\n        for (; ++xc[--sd] > 9;) {\r\n          xc[sd] = 0;\r\n          if (sd === 0) {\r\n            ++x.e;\r\n            xc.unshift(1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (sd = xc.length; !xc[--sd];) xc.pop();\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   */\r\n  function stringify(x, doExponential, isNonzero) {\r\n    var e = x.e,\r\n      s = x.c.join(''),\r\n      n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (doExponential) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) {\r\n        for (e -= n; e--;) s += '0';\r\n      } else if (e < n) {\r\n        s = s.slice(0, e) + '.' + s.slice(e);\r\n      }\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && isNonzero ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n   */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) {\r\n      y.s = k;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n    q.s = k;\r\n    k = p < 0 ? 0 : p;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n      p--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (yc[0]) {\r\n        y.s = -b;\r\n      } else if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = 1;\r\n      }\r\n      return y;\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n  \r\n  \r\n  /*\r\n   * Return a new Big whose value is the value of this Big negated.\r\n   */\r\n  P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var e, k, t,\r\n      x = this,\r\n      Big = x.constructor;\r\n\r\n    y = new Big(y);\r\n\r\n    // Signs differ?\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (!yc[0]) {\r\n        if (xc[0]) {\r\n          y = new Big(x);\r\n        } else {\r\n          y.s = x.s;\r\n        }\r\n      }\r\n      return y;\r\n    }\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (e = xe - ye) {\r\n      if (e > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        e = -e;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; e--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    e = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (k) {\r\n      xc.unshift(k);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor('1'),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n      throw Error(INVALID + 'exponent');\r\n    }\r\n\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n   * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.prec = function (sd, rm) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    return round(new this.constructor(this), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n   * using rounding mode rm, or Big.RM if rm is not specified.\r\n   * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.round = function (dp, rm) {\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    return round(new this.constructor(this), dp + this.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big('0.5');\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) {\r\n      throw Error(NAME + 'No square root');\r\n    }\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s + '');\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) {\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = b;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), ++dp, rm);\r\n      for (; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, true, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n      // x.e may have changed if the value is rounded up.\r\n      for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, false, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toJSON = P.toString = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Big as a primitve number.\r\n   */\r\n  P.toNumber = function () {\r\n    var n = Number(stringify(this, true, true));\r\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n      throw Error(NAME + 'Imprecise conversion');\r\n    }\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * rounding mode rm, or Big.RM if rm is not specified.\r\n   * Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      n = x.c[0];\r\n\r\n    if (sd !== UNDEFINED) {\r\n      if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n        throw Error(INVALID + 'precision');\r\n      }\r\n      x = round(new Big(x), sd, rm);\r\n      for (; x.c.length < sd;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    if (Big.strict === true) {\r\n      throw Error(NAME + 'valueOf disallowed');\r\n    }\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","/**\n* Cache data structure with:\n*  - enumerable items\n*  - unique hash item access (if none is passed in, one is generated)\n*  - size (length) expiration\n*  - controllable expiration (e.g. keep in cache longer if older/less likely to change)\n*  - time-based expiration\n*  - custom expiration based on passed-in function\n*\n* Also:\n*  - built to work well with browserify\n*  - no dependencies at all\n*  - pet friendly\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nconst libLinkedList = require(`./LinkedList.js`);\n\nclass CashMoney extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'ObjectCache';\n\n\t\t// The map of node objects by hash because Reasons.\n\t\tthis._HashMap = {};\n\n\t\tthis._RecordMap = {};\n\n\t\tthis._List = new libLinkedList();\n\n\t\t// If the list gets over maxLength, we will automatically remove nodes on insertion.\n\t\tthis.maxLength = 0;\n\n\t\t// If cache entries get over this age, they are removed with prune\n\t\tthis.maxAge = 0;\n\t}\n\n\tget RecordMap()\n\t{\n\t\treturn this._RecordMap;\n\t}\n\n\t// Add (or update) a node in the cache\n\tput(pData, pHash)\n\t{\n\t\t// If the hash of the record exists\n\t\tif (this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\t// Just update the hashed records datum\n\t\t\tthis._HashMap[pHash].Datum = pData;\n\t\t\tthis._RecordMap[pHash] = pData;\n\t\t\treturn this._HashMap[pHash].Datum;\n\t\t}\n\n\t\tlet tmpNode = this._List.push(pData, pHash);\n\t\tthis._HashMap[tmpNode.Hash] = tmpNode;\n\t\tthis._RecordMap[pHash] = pData;\n\n\t\t// Automatically prune if over length, but only prune this nodes worth.\n\t\tif (this.maxLength > 0   &&   this._List.length > this.maxLength)\n\t\t{\n\t\t\t// Pop it off the head of the list\n\t\t\ttmpNode = this._List.pop();\n\t\t\t// Also remove it from the hashmap\n\t\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\t\tdelete this._HashMap[tmpNode.Hash];\n\t\t}\n\n\t\t// Now some expiration properties on the node metadata... namely the birthdate in ms of the node\n\t\ttmpNode.Metadata.Created = +new Date();\n\n\t\treturn tmpNode.Datum;\n\t}\n\n\t// Read a datum by hash from the cache\n\tread(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._HashMap[pHash].Datum;\n\t}\n\n\t// Reinvigorate a node based on hash, updating the timestamp and moving it to the head of the list (also removes custom metadata)\n\ttouch(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get the old node out of the list\n\t\tlet tmpNode = this._List.remove(this._HashMap[pHash]);\n\t\t// Remove it from the hash map\n\t\tdelete this._RecordMap[pHash];\n\t\tdelete this._HashMap[pHash];\n\n\t\t// Now put it back, fresh.\n\t\treturn this.put(tmpNode.Datum, tmpNode.Hash);\n\t}\n\n\t// Expire a cached record based on hash\n\texpire(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpNode = this._HashMap[pHash];\n\n\t\t// Remove it from the list of cached records\n\t\ttmpNode = this._List.remove(tmpNode);\n\t\t// Also remove it from the hashmap\n\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\tdelete this._HashMap[tmpNode.Hash];\n\n\t\t// Return it in case the consumer wants to do anything with it\n\t\treturn tmpNode;\n\t}\n\n\t// Prune records from the cached set based on maxAge\n\tpruneBasedOnExpiration(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tif (this.maxAge < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now enumerate each record and remove any that are expired\n\t\tlet tmpNow = +new Date();\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\t// Expire the node if it is older than max age milliseconds\n\t\t\tif (tmpNow - this._HashMap[tmpKeys[i]].Metadata.Created >= this.maxAge)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on maxLength\n\tpruneBasedOnLength(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\t// Pop records off until we have reached maxLength unless it's 0\n\t\tif (this.maxLength > 0)\n\t\t{\n\t\t\twhile (this._List.length > this.maxLength)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this._List.pop());\n\t\t\t}\n\t\t}\n\n\t\treturn fComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on passed in pPruneFunction(pDatum, pHash, pNode) -- returning true expires it\n\tpruneCustom(fComplete, fPruneFunction, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\tlet tmpNode = this._HashMap[tmpKeys[i]];\n\t\t\t// Expire the node if the passed in function returns true\n\t\t\tif (fPruneFunction(tmpNode.Datum, tmpNode.Hash, tmpNode))\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune the list down to the asserted rules (max age then max length if still too long)\n\tprune(fComplete)\n\t{\n\t\tlet tmpRemovedRecords = [];\n\n\t\t// If there are no cached records, we are done.\n\t\tif (this._List.length < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now prune based on expiration time\n\t\tthis.pruneBasedOnExpiration((fExpirationPruneComplete)=>\n\t\t\t{\n\t\t\t\t// Now prune based on length, then return the removed records in the callback.\n\t\t\t\tthis.pruneBasedOnLength(fComplete, tmpRemovedRecords);\n\t\t\t}, tmpRemovedRecords);\n\t}\n\n\t// Get a low level node (including metadata statistics) by hash from the cache\n\tgetNode(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\n\t\treturn this._HashMap[pHash];\n\t}\n}\n\nmodule.exports = CashMoney;","/**\n* Double Linked List Node\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Linked List Node Prototype\n*\n* @class LinkedListNode\n* @constructor\n*/\n\nclass LinkedListNode\n{\n\tconstructor()\n\t{\n\t\tthis.Hash = false;\n\t\tthis.Datum = false;\n\n\t\t// This is where expiration and other elements are stored;\n\t\tthis.Metadata = {};\n\n\t\tthis.LeftNode = false;\n\t\tthis.RightNode = false;\n\n\t\t// To allow safe specialty operations on nodes\n\t\tthis.__ISNODE = true;\n\t}\n}\n\nmodule.exports = LinkedListNode;","\"use strict\"\n/**\n* Simple double linked list to hold the cache entries in, in order.\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module FeeFiFo\n*/\n\nconst libLinkedListNode = require('./LinkedList-Node.js');\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nclass LinkedList\n{\n\tconstructor()\n\t{\n\t\t// Total number of nodes ever processed by this ADT\n\t\tthis.totalNodes = 0;\n\n\t\t// The length of the set of nodes currently in the list\n\t\tthis.length = 0;\n\n\t\tthis.head = false;\n\t\tthis.tail = false;\n\t}\n\n\t// Create a node object.\n\tinitializeNode(pDatum, pHash)\n\t{\n\t\t// Don't allow undefined to be added to the list because of reasons\n\t\tif (typeof(pDatum) === 'undefined')\n\t\t\treturn false;\n\n\t\tthis.totalNodes++;\n\n\t\t// Get (or create) a unique hash\n\t\tlet tmpHash = (typeof(pHash) != 'undefined') ? pHash : `NODE[${this.totalNodes}]`;\n\n\t\tlet tmpNode = new libLinkedListNode();\n\n\t\ttmpNode.Hash = tmpHash;\n\t\ttmpNode.Datum = pDatum;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Add a node to the end (right of tail) of the list.\n\tappend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.tail.RightNode = tmpNode;\n\t\ttmpNode.LeftNode = this.tail;\n\t\tthis.tail = tmpNode;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Append to tail of list (FIFO)\n\tpush(pDatum, pHash)\n\t{\n\t\treturn this.append(pDatum, pHash);\n\t}\n\n\t// Add a node to the beginning (left of head) of the list.\n\tprepend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.head.LeftNode = tmpNode;\n\t\ttmpNode.RightNode = this.head;\n\t\tthis.head = tmpNode;\n\t\treturn tmpNode;\n\t}\n\n\t// Remove a node from the list\n\tremove(pNode)\n\t{\n\t\tif (typeof(pNode) === 'undefined')\n\t\t\treturn false;\n\n\t\tif (!pNode.__ISNODE)\n\t\t\treturn false;\n\n\t\tthis.length--;\n\n\t\t// Last element in list.  Empty it out.\n\t\tif (this.length < 1)\n\t\t{\n\t\t\tthis.head = false;\n\t\t\tthis.tail = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's somewhere in the middle, surgically remove it.\n\t\tif (pNode.LeftNode && pNode.RightNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = pNode.RightNode;\n\t\t\tpNode.RightNode.LeftNode = pNode.LeftNode;\n\n\t\t\tpNode.RightNode = false;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's the tail\n\t\tif (pNode.LeftNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = false;\n\t\t\tthis.tail = pNode.LeftNode;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It must be the head\n\t\tpNode.RightNode.LeftNode = false;\n\t\tthis.head = pNode.RightNode;\n\t\tpNode.RightNode = false;\n\t\treturn pNode;\n\t}\n\n\t// Remove the head of the list (FIFO)\n\tpop()\n\t{\n\t\treturn this.remove(this.head);\n\t}\n\n\t// Enumerate over each node IN ORDER, running the function fAction(pDatum, pHash, fCallback) then calling the function fComplete callback when done\n\teach(fAction, fComplete)\n\t{\n\t\tif (this.length < 1)\n\t\t\treturn fComplete();\n\n\t\tlet tmpNode = false;\n\n\t\tlet fIterator = (pError)=>\n\t\t{\n\t\t\t// If the user passed in a callback with an error, call their callback with the error\n\t\t\tif (pError)\n\t\t\t\treturn fComplete(pError);\n\n\t\t\t// If there is no node, this must be the initial run.\n\t\t\tif (!tmpNode)\n\t\t\t\ttmpNode = this.head;\n\t\t\t// Check if we are at the tail of the list\n\t\t\telse if (!tmpNode.RightNode)\n\t\t\t\treturn fComplete();\n\t\t\t// Proceed to the next node\n\t\t\telse\n\t\t\t\ttmpNode = tmpNode.RightNode;\n\n\t\t\t// Call the actual action\n\t\t\t// I hate this pattern because long tails eventually cause stack overflows.\n\t\t\tfAction(tmpNode.Datum, tmpNode.Hash, fIterator);\n\t\t};\n\n\t\t// Now kick off the iterator\n\t\treturn fIterator();\n\t}\n\n\t// Seek a specific node, 0 is the index of the first node.\n\tseek(pNodeIndex)\n\t{\n\t\tif (!pNodeIndex)\n\t\t\treturn false;\n\t\tif (this.length < 1)\n\t\t\treturn false;\n\t\tif (pNodeIndex >= this.length)\n\t\t\treturn false;\n\n\t\tlet tmpNode = this.head;\n\t\tfor (let i = 0; i < pNodeIndex; i++)\n\t\t{\n\t\t\ttmpNode = tmpNode.RightNode;\n\t\t}\n\n\t\treturn tmpNode;\n\t}\n}\n\nmodule.exports = LinkedList;","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/**\n* Base Logger Class\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass BaseLogger extends libFableServiceProviderBase\n{\n\tconstructor(pLogStreamSettings, pLogStreamHash)\n\t{\n\t\tsuper(pLogStreamSettings, pLogStreamHash);\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = (typeof(pLogStreamSettings) == 'object') ? pLogStreamSettings : {};\n\n\t\tthis.serviceType = 'Logging-Provider';\n\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\t// We added this as the mechanism for tracking loggers to allow multiple simultaneous streams\n\t\t// to the same provider.\n\t\tthis.loggerUUID = this.generateInsecureUUID();\n\n\t\t// Eventually we can use this array to ompute which levels the provider allows.\n\t\t// For now it's just used to precompute some string concatenations.\n\t\tthis.levels = (\n\t\t\t[\n\t\t\t\t\"trace\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"info\",\n\t\t\t\t\"warn\",\n\t\t\t\t\"error\",\n\t\t\t\t\"fatal\"\n\t\t\t]);\n\t}\n\n\t// This is meant to generate programmatically insecure UUIDs to identify loggers\n\tgenerateInsecureUUID()\n\t{\n\t\tlet tmpDate = new Date().getTime();\n\t\tlet tmpUUID = 'LOGSTREAM-xxxxxx-yxxxxx'.replace(/[xy]/g,\n\t\t\t\t(pCharacter) =>\n\t\t\t\t{\n\t\t\t\t\t// Funny algorithm from w3resource that is twister-ish without the deep math and security\n\t\t\t\t\t// ..but good enough for unique log stream identifiers\n\t\t\t\t\tlet tmpRandomData = (tmpDate + Math.random()*16)%16 | 0;\n\t\t\t\t\ttmpDate = Math.floor(tmpDate/16);\n\n\t\t\t\t\treturn (pCharacter =='x' ? tmpRandomData : (tmpRandomData&0x3|0x8)).toString(16);\n\t\t\t\t});\n\t\treturn tmpUUID;\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n","/**\n* Default Logger Provider Function\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\nvar getDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\ttmpDefaultProviders.default = tmpDefaultProviders.console;\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();","module.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]","let libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings);\n\n\t\tthis._ShowTimeStamps = this._Settings.hasOwnProperty('showtimestamps') ? (this._Settings.showtimestamps == true) : true;\n\t\tthis._FormattedTimeStamps = this._Settings.hasOwnProperty('formattedtimestamps') ? (this._Settings.formattedtimestamps == true) : true;\n\n\t\tthis._ContextMessage = this._Settings.hasOwnProperty('Context') ? `(${this._Settings.Context})` :\n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? `(${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'Unnamed_Log_Context';\n\n\t\t// Allow the user to decide what gets output to the console\n\t\tthis._OutputLogLinesToConsole = this._Settings.hasOwnProperty('outputloglinestoconsole') ? this._Settings.outputloglinestoconsole : true;\n\t\tthis._OutputObjectsToConsole = this._Settings.hasOwnProperty('outputobjectstoconsole') ? this._Settings.outputobjectstoconsole : true;\n\n\t\t// Precompute the prefix for each level\n\t\tthis.prefixCache = {};\n\t\tfor (let i = 0; i <= this.levels.length; i++)\n\t\t{\n\t\t\tthis.prefixCache[this.levels[i]] = `[${this.levels[i]}] ${this._ContextMessage}: `;\n\n\t\t\tif (this._ShowTimeStamps)\n\t\t\t{\n\t\t\t\t// If there is a timestamp we need a to prepend space before the prefixcache string, since the timestamp comes first\n\t\t\t\tthis.prefixCache[this.levels[i]] = ' '+this.prefixCache[this.levels[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpTimeStamp = '';\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = (new Date()).toISOString();\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = +new Date();\n\t\t}\n\n\t\tlet tmpLogLine = `${tmpTimeStamp}${this.prefixCache[pLevel]}${pLogText}`;\n\n\t\tif (this._OutputLogLinesToConsole)\n\t\t{\n\t\t\tconsole.log(tmpLogLine);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (this._OutputObjectsToConsole && (typeof(pObject) !== 'undefined'))\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 2));\n\t\t}\n\n\t\t// Provide an easy way to be overridden and be consistent\n\t\treturn tmpLogLine;\n\t}\n}\n\nmodule.exports = ConsoleLogger;","const libConsoleLog = require('./Fable-Log-Logger-Console.js');\nconst libFS = require('fs');\nconst libPath = require('path');\n\nclass SimpleFlatFileLogger extends libConsoleLog\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings, pFableLog);\n\n\t\t// If a path isn't provided for the logfile, it tries to use the ProductName or Context\n\t\tthis.logFileRawPath = (this._Settings.hasOwnProperty('path')) ? this._Settings.path : `./${this._ContextMessage}.log`;\n\t\tthis.logFilePath = libPath.normalize(this.logFileRawPath);\n\n\t\tthis.logFileStreamOptions = (this._Settings.hasOwnProperty('fileStreamoptions')) ? this._Settings.fileStreamOptions : (\n\t\t\t{\n\t\t\t\t\"flags\": \"a\",\n\t\t\t\t\"encoding\": \"utf8\"\n\t\t\t})\n\n\t\tthis.fileWriter = libFS.createWriteStream(this.logFilePath, this.logFileStreamOptions);\n\n\t\tthis.activelyWriting = false;\n\n\t\tthis.logLineStrings = [];\n\t\tthis.logObjectStrings = [];\n\n\t\tthis.defaultWriteCompleteCallback = ()=>{};\n\t\tthis.defaultBufferFlushCallback = ()=>{};\n\t}\n\n\tcloseWriter(fCloseComplete)\n\t{\n\t\tlet tmpCloseComplete = (typeof(fCloseComplete) == 'function') ? fCloseComplete : ()=>{};\n\t\tif (this.fileWriter)\n\t\t{\n\t\t\tthis.fileWriter.end('\\n');\n\t\t\treturn this.fileWriter.once('finish', tmpCloseComplete.bind(this));\n\t\t}\n\t}\n\n\tcompleteBufferFlushToLogFile(fFlushComplete)\n\t{\n\t\tthis.activelyWriting = false;\n\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\tif (this.logLineStrings.length > 0)\n\t\t{\n\t\t\tthis.flushBufferToLogFile(tmpFlushComplete);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpFlushComplete();\n\t\t}\n\t}\n\n\tflushBufferToLogFile(fFlushComplete)\n\t{\n\t\tif (!this.activelyWriting)\n\t\t{\n\t\t\t// Only want to be writing one thing at a time....\n\t\t\tthis.activelyWriting = true;\n\n\t\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\t\t// Get the current buffer arrays.  These should always have matching number of elements.\n\t\t\tlet tmpLineStrings = this.logLineStrings;\n\t\t\tlet tmpObjectStrings = this.logObjectStrings;\n\n\t\t\t// Reset these to be filled while we process this queue...\n\t\t\tthis.logLineStrings = [];\n\t\t\tthis.logObjectStrings = [];\n\n\t\t\t// This is where we will put each line before writing it to the file...\n\t\t\tlet tmpConstructedBufferOutputString = '';\n\n\t\t\tfor (let i = 0; i < tmpLineStrings.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: Windows Newline?   ....... yo no se!\n\t\t\t\ttmpConstructedBufferOutputString += `${tmpLineStrings[i]}\\n`;\n\t\t\t\tif (tmpObjectStrings[i] !== false)\n\t\t\t\t{\n\t\t\t\t\ttmpConstructedBufferOutputString += `${tmpObjectStrings[i]}\\n`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.fileWriter.write(tmpConstructedBufferOutputString, 'utf8'))\n\t\t\t{\n\t\t\t\t// If the streamwriter returns false, we need to wait for it to drain.\n\t\t\t\tthis.fileWriter.once('drain', this.completeBufferFlushToLogFile.bind(this, tmpFlushComplete));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.completeBufferFlushToLogFile(tmpFlushComplete);\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpLogLine = super.write(pLevel, pLogText, pObject);\n\n\t\t// Use a very simple array as the write buffer\n\t\tthis.logLineStrings.push(tmpLogLine);\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tthis.logObjectStrings.push(JSON.stringify(pObject, null, 4));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logObjectStrings.push(false);\n\t\t}\n\n\t\tthis.flushBufferToLogFile();\n\t}\n}\n\nmodule.exports = SimpleFlatFileLogger;","/**\n* Fable Logging Service\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass FableLog extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'Logging';\n\n\t\tlet tmpSettings = (typeof(pSettings) === 'object') ? pSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders-Node.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'default',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\nmodule.exports = FableLog;\nmodule.exports.LogProviderBase = require('./Fable-Log-BaseLogger.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-Console.js');\nmodule.exports.LogProviderFlatfile = require('./Fable-Log-Logger-SimpleFlatFile.js');\n","/**\n* Fable Core Pre-initialization Service Base\n*\n* For a couple services, we need to be able to instantiate them before the Fable object is fully initialized.\n* This is a base class for those services.\n*\n* @author <steven@velozo.com>\n*/\n\nclass FableCoreServiceProviderBase\n{\n\tconstructor(pOptions, pServiceHash)\n\t{\n\t\tthis.fable = false;\n\n\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions : {};\n\n\t\tthis.serviceType = 'Unknown';\n\n\t\t// The hash will be a non-standard UUID ... the UUID service uses this base class!\n\t\tthis.UUID = `CORESVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`;\n\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash : `${this.UUID}`;\n\t}\n\n\n\tstatic isFableService = true;\n\n\t// After fable is initialized, it would be expected to be wired in as a normal service.\n\tconnectFable(pFable)\n\t{\n\t\tthis.fable = pFable;\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = FableCoreServiceProviderBase;\n","/**\n* Fable Service Base\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tthis.fable = pFable;\n\n\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t: ((typeof(pFable) === 'object') && !pFable.isFable) ? pFable\n\t\t\t\t\t\t: {};\n\n\t\tthis.serviceType = 'Unknown';\n\n\t\tif (typeof(pFable.getUUID) == 'function')\n\t\t{\n\t\t\tthis.UUID = pFable.getUUID();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.UUID = `NoFABLESVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`\n\t\t}\n\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash : `${this.UUID}`;\n\n\t\t// Pull back a few things\n\t\tthis.log = this.fable.log;\n\t\tthis.servicesMap = this.fable.servicesMap;\n\t\tthis.services = this.fable.services;\n\t}\n\n\tstatic isFableService = true;\n}\n\nmodule.exports = FableServiceProviderBase;\n\nmodule.exports.CoreServiceProviderBase = require('./Fable-ServiceProviderBase-Preinit.js');","module.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n","/**\n* Fable Settings Template Processor\n*\n* This class allows environment variables to come in via templated expressions, and defaults to be set.\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\nconst libPrecedent = require('precedent');\n\nclass FableSettingsTemplateProcessor\n{\n\tconstructor(pDependencies)\n\t{\n        // Use a no-dependencies templating engine to parse out environment variables\n\t\tthis.templateProcessor = new libPrecedent();\n\n        // TODO: Make the environment variable wrap expression demarcation characters configurable?\n\t\tthis.templateProcessor.addPattern('${', '}',\n\t\t\t(pTemplateValue)=>\n\t\t\t{\n\t\t\t\tlet tmpTemplateValue = pTemplateValue.trim();\n\n\t\t\t\tlet tmpSeparatorIndex = tmpTemplateValue.indexOf('|');\n\n\t\t\t\tconst tmpDefaultValue = tmpSeparatorIndex >= 0 ? tmpTemplateValue.substring(tmpSeparatorIndex+1) : '';\n\n\t\t\t\tlet tmpEnvironmentVariableName = (tmpSeparatorIndex > -1) ? tmpTemplateValue.substring(0, tmpSeparatorIndex) : tmpTemplateValue;\n\n\t\t\t\tif (process.env.hasOwnProperty(tmpEnvironmentVariableName))\n\t\t\t\t{\n\t\t\t\t\treturn process.env[tmpEnvironmentVariableName];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpDefaultValue;\n\t\t\t\t}\n\t\t\t});\n    }\n\n    parseSetting(pString)\n    {\n        return this.templateProcessor.parseString(pString);\n    }\n}\n\nmodule.exports = FableSettingsTemplateProcessor;\n","/**\n* Fable Settings Add-on\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nconst libFableSettingsTemplateProcessor = require('./Fable-Settings-TemplateProcessor.js');\n\nclass FableSettings extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'SettingsManager';\n\n\t\t// Initialize the settings value template processor\n\t\tthis.settingsTemplateProcessor = new libFableSettingsTemplateProcessor();\n\n\t\t// set straight away so anything that uses it respects the initial setting\n\t\tthis._configureEnvTemplating(pSettings);\n\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')));\n\t}\n\n\t// Update the configuration for environment variable templating based on the current settings object\n\t_configureEnvTemplating(pSettings)\n\t{\n\t\t// default environment variable templating to on\n\t\tthis._PerformEnvTemplating = !pSettings || pSettings.NoEnvReplacement !== true;\n\t}\n\n\t// Resolve (recursive) any environment variables found in settings object.\n\t_resolveEnv(pSettings)\n\t{\n\t\tfor (const tmpKey in pSettings)\n\t\t{\n\t\t\tif (typeof(pSettings[tmpKey]) === 'object')\n\t\t\t{\n\t\t\t\tthis._resolveEnv(pSettings[tmpKey]);\n\t\t\t}\n\t\t\telse if (typeof(pSettings[tmpKey]) === 'string')\n\t\t\t{\n\t\t\t\tpSettings[tmpKey] = this.settingsTemplateProcessor.parseSetting(pSettings[tmpKey]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if a value is an object (but not an array).\n\t */\n\t_isObject(value)\n\t{\n\t\treturn typeof(value) === 'object' && !Array.isArray(value);\n\t}\n\n\t/**\n\t * Merge two plain objects. Keys that are objects in both will be merged property-wise.\n\t */\n\t_deepMergeObjects(toObject, fromObject)\n\t{\n\t\tif (!fromObject || !this._isObject(fromObject))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.keys(fromObject).forEach((key) =>\n\t\t{\n\t\t\tconst fromValue = fromObject[key];\n\t\t\tif (this._isObject(fromValue))\n\t\t\t{\n\t\t\t\tconst toValue = toObject[key];\n\t\t\t\tif (toValue && this._isObject(toValue))\n\t\t\t\t{\n\t\t\t\t\t// both are objects, so do a recursive merge\n\t\t\t\t\tthis._deepMergeObjects(toValue, fromValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoObject[key] = fromValue;\n\t\t});\n\t\treturn toObject;\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\t\ttmpSettingsTo = this._deepMergeObjects(tmpSettingsTo, tmpSettingsFromCopy);\n\n\t\tif (this._PerformEnvTemplating)\n\t\t{\n\t\t\tthis._resolveEnv(tmpSettingsTo);\n\t\t}\n\t\t// Update env tempating config, since we just updated the config object, and it may have changed\n\t\tthis._configureEnvTemplating(tmpSettingsTo);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\n\t\tthis.settings = this._deepMergeObjects(tmpSettingsFromCopy, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = FableSettings;\nmodule.exports.new = autoConstruct;","/**\n* Random Byte Generator - Browser version\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn this.generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n","/**\n* Fable UUID Generator\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;0\n\nconst libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'UUID';\n\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = FableUUID;\nmodule.exports.new = autoConstruct;\n","/**\n* Fable Application Services Management\n* @author <steven@velozo.com>\n*/\n\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableService extends libFableServiceBase.CoreServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'ServiceManager';\n\n\t\tthis.serviceTypes = [];\n\n\t\t// A map of instantiated services\n\t\tthis.servicesMap = {};\n\n\t\t// A map of the default instantiated service by type\n\t\tthis.services = {};\n\n\t\t// A map of class constructors for services\n\t\tthis.serviceClasses = {};\n\n\t\t// If we need extra service initialization capabilities\n\t\tthis.extraServiceInitialization = false;\n\t}\n\n\taddServiceType(pServiceType, pServiceClass)\n\t{\n\t\tif (this.servicesMap.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\t// TODO: Check if any services are running?\n\t\t\tthis.fable.log.warn(`Adding a service type [${pServiceType}] that already exists.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the container for instantiated services to go in\n\t\t\tthis.servicesMap[pServiceType] = {};\n\n\t\t\t// Add the type to the list of types\n\t\t\tthis.serviceTypes.push(pServiceType);\n\t\t}\n\n\t\t// Using the static member of the class is a much more reliable way to check if it is a service class than instanceof\n\t\tif ((typeof(pServiceClass) == 'function') && (pServiceClass.isFableService))\n\t\t{\n\t\t\t// Add the class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = pServiceClass;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the base class to the list of classes\n\t\t\tthis.fable.log.error(`Attempted to add service type [${pServiceType}] with an invalid class.  Using base service class, which will not crash but won't provide meaningful services.`);\n\t\t\tthis.serviceClasses[pServiceType] = libFableServiceBase;\n\t\t}\n\t}\n\n\t// This is for the services that are meant to run mostly single-instance so need a default at initialization\n\taddAndInstantiateServiceType(pServiceType, pServiceClass)\n\t{\n\t\tthis.addServiceType(pServiceType, pServiceClass);\n\t\treturn this.instantiateServiceProvider(pServiceType, {}, `${pServiceType}-Default`);\n\t}\n\n\t// Some services expect to be overloaded / customized class.\n\tinstantiateServiceProviderFromPrototype(pServiceType, pOptions, pCustomServiceHash, pServicePrototype)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new pServicePrototype(this.fable, pOptions, pCustomServiceHash);\n\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\n\tinstantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = this.instantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\t// Create a service provider but don't register it to live forever in fable.services\n\tinstantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new this.serviceClasses[pServiceType](this.fable, pOptions, pCustomServiceHash);\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\t\treturn tmpService;\n\t}\n\n\t// Connect an initialized service provider that came before Fable was initialized\n\tconnectPreinitServiceProviderInstance(pServiceInstance)\n\t{\n\t\tlet tmpServiceType = pServiceInstance.serviceType;\n\t\tlet tmpServiceHash = pServiceInstance.Hash;\n\n\t\t// The service should already be instantiated, so just connect it to fable\n\t\tpServiceInstance.connectFable(this.fable);\n\n\t\tif (!this.servicesMap.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\t// If the core service hasn't registered itself yet, create the service container for it.\n\t\t\t// This means you couldn't register another with this type unless it was later registered with a constructor class.\n\t\t\tthis.servicesMap[tmpServiceType] = {};\n\t\t}\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[tmpServiceType][tmpServiceHash] = pServiceInstance;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(tmpServiceType, tmpServiceHash)\n\t\t}\n\n\t\treturn pServiceInstance;\n\t}\n\n\tsetDefaultServiceInstantiation(pServiceType, pServiceHash)\n\t{\n\t\tif (this.servicesMap[pServiceType].hasOwnProperty(pServiceHash))\n\t\t{\n\t\t\tthis.fable[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\tthis.services[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nmodule.exports = FableService;\n\nmodule.exports.ServiceProviderBase = libFableServiceBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceBase.CoreServiceProviderBase;","/**\n* Fable Application Services Support Library\n* @author <steven@velozo.com>\n*/\n// Pre-init services\nconst libFableSettings = require('fable-settings');\nconst libFableUUID = require('fable-uuid');\nconst libFableLog = require('fable-log');\n\nconst libFableServiceManager = require('./Fable-ServiceManager.js');\n\nclass Fable\n{\n\tconstructor(pSettings)\n\t{\n\t\t// Initialization Phase 0: Set up the lowest level state (core services)\n\t\t// Container for the core services prototypes.\n\t\t// This is here so if an API consumer changes the default for a core service,\n\t\t// fable still runs with what was initialized.\n\t\tthis._coreServices = {};\n\n\t\t// Instantiate the default Settings Manager\n\t\tthis._coreServices.SettingsManager = new libFableSettings(pSettings);\n\t\t// Instantiate the UUID generator\n\t\tthis._coreServices.UUID = new libFableUUID(this._coreServices.SettingsManager.settings);\n\t\t// Instantiate the logging system\n\t\tthis._coreServices.Logging = new libFableLog(this._coreServices.SettingsManager.settings);\n\t\tthis._coreServices.Logging.initialize();\n\n\t\t// Initialization Phase 1: Instantiate the service manager\n\t\t// This is the start actual bootstrapping point for fable\n\t\tthis._coreServices.ServiceManager = new libFableServiceManager(this);\n\t\tthis.serviceManager = this._coreServices.ServiceManager;\n\t\tthis.serviceManager.connectFable(this);\n\t\t// Bootstrapping of fable into the Service Manager is complete\n\n\t\t// Initialization Phase 2: Map in the default services.\n\t\t// They will then be available in the Default service provider set as well.\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.ServiceManager);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.UUID);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.Logging);\n\t\tthis.serviceManager.connectPreinitServiceProviderInstance(this._coreServices.SettingsManager);\n\n\t\t// Initialize and instantiate the default baked-in Data Arithmatic service\n\t\tthis.serviceManager.addAndInstantiateServiceType('EnvironmentData', require('./services/Fable-Service-EnvironmentData.js'));\n\t\tthis.serviceManager.addServiceType('Template', require('./services/Fable-Service-Template.js'));\n\t\tthis.serviceManager.addServiceType('MetaTemplate', require('./services/Fable-Service-MetaTemplate.js'));\n\t\tthis.serviceManager.addServiceType('Anticipate', require('./services/Fable-Service-Anticipate.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('DataFormat', require('./services/Fable-Service-DataFormat.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('DataGeneration', require('./services/Fable-Service-DataGeneration.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('Utility', require('./services/Fable-Service-Utility.js'));\n\t\tthis.serviceManager.addServiceType('Operation', require('./services/Fable-Service-Operation.js'));\n\t\tthis.serviceManager.addServiceType('RestClient', require('./services/Fable-Service-RestClient.js'));\n\t\tthis.serviceManager.addServiceType('CSVParser', require('./services/Fable-Service-CSVParser.js'));\n\t\tthis.serviceManager.addServiceType('Manifest', require('manyfest'));\n\t\tthis.serviceManager.addServiceType('ObjectCache', require('cachetrax'));\n\t\tthis.serviceManager.addServiceType('FilePersistence', require('./services/Fable-Service-FilePersistence.js'));\n\t}\n\n\tget isFable()\n\t{\n\t\treturn true;\n\t}\n\n\tget settings()\n\t{\n\t\treturn this._coreServices.SettingsManager.settings;\n\t}\n\n\tget settingsManager()\n\t{\n\t\treturn this._coreServices.SettingsManager;\n\t}\n\n\tget log()\n\t{\n\t\treturn this._coreServices.Logging;\n\t}\n\n\tget services()\n\t{\n\t\treturn this._coreServices.ServiceManager.services;\n\t}\n\n\tget servicesMap()\n\t{\n\t\treturn this._coreServices.ServiceManager.servicesMap;\n\t}\n\n\tgetUUID()\n\t{\n\t\treturn this._coreServices.UUID.getUUID();\n\t}\n\n\tget fable()\n\t{\n\t\treturn this;\n\t};\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = Fable;\nmodule.exports.new = autoConstruct;\n\nmodule.exports.LogProviderBase = libFableLog.LogProviderBase;\nmodule.exports.ServiceProviderBase = libFableServiceManager.ServiceProviderBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceManager.CoreServiceProviderBase;\n\nmodule.exports.precedent = libFableSettings.precedent;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceAnticipate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'AsyncAnticipate';\n\n\t\t// The queue of operations waiting to run.\n\t\tthis.operationQueue = [];\n\t\tthis.erroredOperations = [];\n\n\t\tthis.executingOperationCount = 0;\n\t\tthis.completedOperationCount = 0;\n\n\t\tthis.maxOperations = 1;\n\n\t\tthis.lastError = undefined;\n\t\tthis.waitingFunctions = [];\n\t}\n\n\tcheckQueue()\n\t{\n\t\t// This checks to see if we need to start any operations.\n\t\tif (this.operationQueue.length > 0 && this.executingOperationCount < this.maxOperations)\n\t\t{\n\t\t\tlet tmpOperation = this.operationQueue.shift();\n\t\t\tthis.executingOperationCount += 1;\n\t\t\ttmpOperation(this.buildAnticipatorCallback());\n\t\t}\n\t\telse if (this.waitingFunctions.length > 0 && this.executingOperationCount < 1)\n\t\t{\n\t\t\t// If there are no operations left, and we have waiting functions, call them.\n\t\t\tfor (let i = 0; i < this.waitingFunctions.length; i++)\n\t\t\t{\n\t\t\t\tthis.waitingFunctions[i](this.lastError);\n\t\t\t}\n\t\t\t// Reset our state\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.waitingFunctions = [];\n\t\t}\n\t}\n\n\t// Expects a function fAsynchronousFunction(fCallback)\n\tanticipate(fAsynchronousFunction)\n\t{\n\t\tthis.operationQueue.push(fAsynchronousFunction);\n\t\tthis.checkQueue();\n\t}\n\n\tbuildAnticipatorCallback()\n\t{\n\t\t// This uses closure-scoped state to track the callback state\n\t\tlet tmpCallbackState = (\n\t\t\t{\n\t\t\t\tCalled: false,\n\t\t\t\tError: undefined,\n\t\t\t\tOperationSet: this\n\t\t\t});\t\t\n\t\treturn hoistedCallback;\n\t\tfunction hoistedCallback(pError)\n\t\t{\n\t\t\tif (tmpCallbackState.Called)\n\t\t\t{\n\t\t\t\t// If they call the callback twice, throw an error\n\t\t\t\tthrow new Error(\"Anticipation async callback called twice...\");\n\t\t\t}\n\t\t\ttmpCallbackState.Called = true;\n\t\t\ttmpCallbackState.error = pError;\n\n\t\t\ttmpCallbackState.OperationSet.executingOperationCount -= 1;\n\t\t\ttmpCallbackState.OperationSet.completedOperationCount += 1;\n\n\t\t\ttmpCallbackState.OperationSet.checkQueue();\n\t\t}\n\t}\n\n\twait(fCallback)\n\t{\n\t\tthis.waitingFunctions.push(fCallback);\n\t\tthis.checkQueue();\n\t}\n}\n\nmodule.exports = FableServiceAnticipate;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Parsing CSVs.  Why?  Because it's a thing that needs to be done.\n*\n* 1. And the other node CSV parsers had issues with the really messy files we had.\n* \n*\n* 2. None of the CSV parsers dealt with and multi-line quoted string columns\n*    which are apparently a-ok according to the official spec.\n* Plus a lot of them are asynchronous because apparently that's the best way to\n* do anything; unfortunately some files have a sequence issue with that.\n*\n* @class CSVParser\n*/\nclass CSVParser extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'CSVParser';\n\n        this.Header = [];\n        this.HeaderFieldNames = [];\n\n        this.Delimiter = ',';\n        this.QuoteCharacter = '\"';\n\n        this.CleanCharacters = ['\\r'];\n\n        this.HeaderLineIndex = 0;\n        this.HasHeader = true;\n        this.HasSetHeader = false;\n        this.EmitHeader = false;\n\n        this.EmitJSON = true;\n\n        this.EscapedQuoteString = '&quot;';\n\n        // Current Line Parsing State\n        this.CurrentLine = '';\n        this.CurrentRecord = [];\n\n        this.InQuote = false;\n        this.InEscapedQuote = false;\n\n        this.LinesParsed = 0;\n        this.RowsEmitted = 0;\n    }\n\n    marshalRowToJSON(pRowArray)\n    {\n        if (!Array.isArray(pRowArray))\n        {\n            return false;\n        }\n\n        for (let i = this.HeaderFieldNames.length; i < pRowArray.length; i++)\n        {\n            this.HeaderFieldNames[i] = `${i}`;\n        }\n\n        let tmpObject = {};\n\n        for (let i = 0; i < pRowArray.length; i++)\n        {\n            tmpObject[this.HeaderFieldNames[i]] = pRowArray[i];\n        }\n\n        return tmpObject;\n    }\n\n    // Set the header data, for use in marshalling to JSON.\n    setHeader (pHeaderArray)\n    {\n        this.Header = pHeaderArray;\n\n        for (let i = 0; i < this.Header.length; i++)\n        {\n            if (typeof(this.Header[i]) == 'undefined')\n            {\n                this.HeaderFieldNames[i] = `${i}`;\n            }\n            else\n            {\n                this.HeaderFieldNames[i] = this.Header[i].toString();\n            }\n        }\n    }\n\n    resetRowState()\n    {\n        this.CurrentRecord = [];\n    }\n\n    pushLine()\n    {\n        for (let i = 0; i < this.CleanCharacters.length; i++)\n        {\n            this.CurrentLine = this.CurrentLine.replace(this.CleanCharacters[i],'');\n        }\n        this.CurrentRecord.push(this.CurrentLine);\n        this.CurrentLine = '';\n    }\n\n    emitRow(pFormatAsJSON)\n    {\n        let tmpFormatAsJSON = (typeof(pFormatAsJSON) == 'undefined') ? this.EmitJSON : pFormatAsJSON;\n\n        this.RowsEmitted++;\n        let tmpCompletedRecord = this.CurrentRecord;\n        this.CurrentRecord = [];\n\n        if (tmpFormatAsJSON)\n        {\n            return this.marshalRowToJSON(tmpCompletedRecord);\n        }\n        else\n        {\n            return tmpCompletedRecord;\n        }\n    }\n\n    parseCSVLine (pLineString)\n    {\n        this.LinesParsed++;\n\n        for (let i = 0; i < pLineString.length; i++)\n        {\n            if ((!this.InQuote) && (pLineString[i] == this.Delimiter))\n            {\n                this.pushLine();\n            }\n            else if (pLineString[i] == this.QuoteCharacter)\n            {\n                // If we are in the second part of an escaped quote, ignore it.\n                if (this.InEscapedQuote)\n                {\n                    this.InEscapedQuote = false;\n                }\n                // If we aren't in a quote, enter quote\n                else if (!this.InQuote)\n                {\n                    this.InQuote = true;\n                }\n                // We are in a quote, so peek forward to see if this is an \"escaped\" quote pair\n                else if ((i < pLineString.length) && (pLineString[i+1] == this.QuoteCharacter))\n                {\n                    this.CurrentLine += this.EscapedQuoteString;\n                    this.InEscapedQuote = true;\n                }\n                // We are in a quote, this isn't an \"escaped\" quote pair, so go out of quote mode\n                else\n                {\n                    this.InQuote = false;\n                }\n            }\n            else\n            {\n                this.CurrentLine += pLineString[i];\n            }\n        }\n\n        // See if we are in a multiline quoted entry -- if not, emit the row.\n        if (!this.InQuote)\n        {\n            // Push the last remaining column from the buffer to the current line.\n            this.pushLine();\n\n            // Check to see if there is a header -- and if so, if this is the header row\n            if (this.HasHeader && !this.HasSetHeader && (this.RowsEmitted == this.HeaderLineIndex))\n            {\n                this.HasSetHeader = true;\n                // Override the format as json bit\n                this.setHeader(this.emitRow(false));\n\n                // No matter what, formatting this as JSON is silly and we don't want to go there anyway.\n                if (this.EmitHeader)\n                {\n                    return this.Header;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n            else\n            {\n                return this.emitRow();\n            }\n        }\n        else\n        {\n            return false;\n        }\n    };\n}\n\nmodule.exports = CSVParser;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Data Formatting and Translation Functions\n*\n* @class DataFormat\n*/\nclass DataFormat extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'DataArithmatic';\n\n\t\t// Regular Expressions (so they don't have to be recompiled every time)\n\t\t// These could be defined as static, but I'm not sure if that will work with browserify ... and specifically the QT browser.\n\t\tthis._Regex_formatterInsertCommas = /.{1,3}/g;\n\t\t// Match Function:\n\t\t// function(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t\t// Thoughts about below:   /^([+-]?)(0*)(\\d+)(\\.(\\d+))?$/;\n\t\tthis._Regex_formatterAddCommasToNumber = /^([-+]?)(0?)(\\d+)(.?)(\\d+)$/g;\n\t\tthis._Regex_formatterDollarsRemoveCommas = /,/gi;\n\t\tthis._Regex_formatterCleanNonAlphaChar = /[^a-zA-Z]/gi;\n\t\tthis._Regex_formatterCapitalizeEachWord = /([a-zA-Z]+)/g;\n\n\t\t// TODO: Potentially pull these in from a configuration.\n\t\t// TODO: Use locale data for this if it's defaults all the way down.\n\t\tthis._Value_MoneySign_Currency = '$';\n\t\tthis._Value_NaN_Currency = '--';\n\t\tthis._Value_GroupSeparator_Number = ',';\n\n\t\tthis._Value_Prefix_StringHash = 'HSH';\n\t\tthis._Value_Clean_formatterCleanNonAlpha = '';\n\n\t\tthis._UseEngineStringStartsWith = (typeof(String.prototype.startsWith) === 'function');\n\t\tthis._UseEngineStringEndsWith = (typeof(String.prototype.endsWith) === 'function');\n\t}\n\n\n\t/*************************************************************************\n\t * String Manipulation and Comparison Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Reverse a string\n\t *\n\t * @param {string} pString - The string to reverse\n\t * @returns {string}\n\t */\n\tstringReverse (pString)\n\t{\n\t\t// TODO: Benchmark if there are faster ways we want to do this with all the newer JS stuff\n\t\t//       ... and if it will work with browserify in a clean way.\n\t\treturn pString.split('').reverse().join('');\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pStartIndex\n\t * @returns {*}\n\t */\n\tstringStartsWith (pString, pSearchString, pStartIndex)\n\t{\n\t\tif (this._UseEngineStringStartsWith)\n\t\t{\n\t\t\treturn pString.startsWith(pSearchString, pStartIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringStartsWith_Polyfill.call(pString, pSearchString, pStartIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pStartIndex - The index to start the search at\n\t * @returns {boolean}\n\t */\n\tstringStartsWith_Polyfill (pSearchString, pStartIndex)\n\t{\n\t\treturn this.slice(pStartIndex || 0, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pEndIndex\n\t * @returns {*}\n\t */\n\tstringEndsWith (pString, pSearchString, pEndIndex)\n\t{\n\t\tif (this._UseEngineStringEndsWith)\n\t\t{\n\t\t\treturn pString.endsWith(pSearchString, pEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringEndsWith_Polyfill.call(pString, pSearchString, pEndIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pEndIndex - The index to end the search at\n\t * @returns {boolean}\n\t */\n\tstringEndsWith_Polyfill (pSearchString, pEndIndex)\n\t{\n\t\t// This works much better than >= because\n\t\t// it compensates for NaN:\n\t\tif (!(pEndIndex < this.length))\n\t\t{\n\t\t\tpEndIndex = this.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpEndIndex |= 0; // round position\n\t\t}\n\t\treturn this.substr(pEndIndex - pSearchString.length, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Generate an insecure string hash.  Not meant to be secure, just a quick way to generate a hash for a string.  This is not a cryptographic hash.  Additional warranty and disclaimer ... this is not for passwords!\n\t *\n\t * @param {string} pString\n\t * @returns {string}\n\t */\n\tinsecureStringHash (pString)\n\t{\n\t\tlet tmpHash = 0;\n\t\tlet tmpStringLength = pString.length;\n\t\tlet tmpCharacterIndex = 0;\n\n\t\twhile (tmpCharacterIndex < tmpStringLength)\n\t\t{\n\t\t\ttmpHash = (tmpHash << 5) - tmpHash + pString.charCodeAt(tmpCharacterIndex++) | 0;\n\t\t}\n\n\t\treturn `${this._Value_Prefix_StringHash}${tmpHash}`;\n\t}\n\n\tcapitalizeEachWord (pString)\n\t{\n\t\treturn pString.replace(this._Regex_formatterCapitalizeEachWord,\n\t\t\t(pMatch) =>\n\t\t\t{\n\t\t\t\treturn pMatch.charAt(0).toUpperCase() + pMatch.substr(1);\n\t\t\t});\n\t}\n\n\t/**\n\t * Clean wrapping characters if they exist consistently around the string.  If they do not, the string is returned unchanged.\n\t *\n\t * @param {string} pWrapCharacter - The character expected as the wrapping character\n\t * @param {string} pString - the string to clean\n\t * @returns {string}\n\t */\n\tcleanEnclosureWrapCharacters (pWrapCharacter, pString)\n\t{\n\t\t// # Use case from ManyFest DSL:\n\t\t//\n\t\t// When a boxed property is passed in, it should have quotes of some\n\t\t// kind around it.\n\t\t//\n\t\t// For instance:\n\t\t// \t\tMyValues['Name']\n\t\t// \t\tMyValues[\"Age\"]\n\t\t// \t\tMyValues[`Cost`]\n\t\t//\n\t\t// This function is necessary to remove the wrapping quotes before object\n\t\t// resolution can occur.\n\t\tif (pString.startsWith(pWrapCharacter) && pString.endsWith(pWrapCharacter))\n\t\t{\n\t\t\treturn pString.substring(1, pString.length - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pString;\n\t\t}\n\t}\n\n\t/**\n\t * Clean a string of any non-alpha characters (including numbers)\n\t *\n\t * @param {*} pString\n\t * @returns\n\t */\n\tcleanNonAlphaCharacters (pString)\n\t{\n\t\tif ((typeof(pString) == 'string') && (pString != ''))\n\t\t{\n\t\t\treturn pString.replace(this._Regex_formatterCleanNonAlphaChar, this._Value_Clean_formatterCleanNonAlpha);\n\t\t}\n\n\t\treturn '';\n\t}\n\n\n\t/*************************************************************************\n\t * Number Formatting Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Insert commas every 3 characters from the right.  Used by formatterAddCommasToNumber().\n\t *\n\t * @param {*} pString\n\t * @returns {*}\n\t */\n\tformatterInsertCommas (pString)\n\t{\n\t\t// Reverse, because it's easier to do things from the left, given arbitrary digit counts\n\t\tlet tmpReversed = this.stringReverse(pString);\n\t\t// Add commas every three characters\n\t\tlet tmpReversedWithCommas = tmpReversed.match(this._Regex_formatterInsertCommas).join(',');\n\t\t// Reverse again (back to normal direction)\n\t\treturn this.stringReverse(tmpReversedWithCommas);\n\t}\n\n\tprocessAddCommasToNumberRegex(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t{\n\t\t// If there was no decimal, the last capture grabs the final digit, so\n\t\t// we have to put it back together with the 'before' substring\n\t\treturn pSign + (pDecimal ? this.formatterInsertCommas(pBefore) + pDecimal + pAfter : this.formatterInsertCommas(pBefore + pAfter));\n\t}\n\n\t/**\n\t * Add Commas to a Number for readability.\n\t *\n\t * @param {*} pNumber\n\t * @returns {string}\n\t */\n\tformatterAddCommasToNumber (pNumber)\n\t{\n\t\t// If the regex doesn't match, `replace` returns the string unmodified\n\t\treturn (pNumber.toString()).replace\n\t\t(\n\t\t\tthis._Regex_formatterAddCommasToNumber,\n\t\t\tthis.processAddCommasToNumberRegex.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * This will take a number and format it as a dollar string.  It will also add commas to the number.  If the number is not a number, it will return '--'.\n\t *\n\t * @param {*} pValue\n\t * @returns {string}\n\t */\n\tformatterDollars (pValue)\n\t{\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tlet tmpDollarAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpDollarAmount = tmpDollarAmountArbitrary.toFixed(2);\n\n\t\tif (isNaN(tmpDollarAmount))\n\t\t{\n\t\t\t// Try again and see if what was passed in was a dollars string.\n\t\t\tif (typeof(pValue) == 'string')\n\t\t\t{\n\t\t\t\t// TODO: Better rounding function?  This is a hack to get rid of the currency symbol and commas.\n\t\t\t\ttmpDollarAmount = parseFloat(pValue.replace(this._Value_MoneySign_Currency,'').replace(this._Regex_formatterDollarsRemoveCommas,'')).toFixed(2);\n\t\t\t}\n\t\t\t// If we didn't get a number, return the \"not a number\" string.\n\t\t\tif (isNaN(tmpDollarAmount))\n\t\t\t{\n\t\t\t\treturn this._Value_NaN_Currency;\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Get locale data and use that for this stuff.\n\t\treturn `$${this.formatterAddCommasToNumber(tmpDollarAmount)}`;\n\t}\n\n\t/**\n\t * Round a number to a certain number of digits.  If the number is not a number, it will return 0.  If no digits are specified, it will default to 2 significant digits.\n\t *\n\t * @param {*} pValue\n\t * @param {number} pDigits\n\t * @returns {string}\n\t */\n\tformatterRoundNumber (pValue, pDigits)\n\t{\n\t\tlet tmpDigits = (typeof(pDigits) == 'undefined') ? 2 : pDigits;\n\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\n\t\tlet tmpAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpValue = tmpAmountArbitrary.toFixed(tmpDigits);\n\n\t\tif (isNaN(tmpValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpValue;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate a reapeating padding string to be appended before or after depending on \n\t * which padding function it uses.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringGeneratePaddingString(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpTargetLength = pTargetLength >> 0;\n\t\tlet tmpPadString = String((typeof pPadString !== 'undefined' ? pPadString : ' '));\n\t\tif (pString.length > pTargetLength)\n\t\t{\n\t\t\t// No padding string if the source string is already longer than the target length, return an empty string\n\t\t\treturn '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpPadLength = pTargetLength - pString.length;\n\t\t\tif (tmpPadLength > tmpPadString.length)\n\t\t\t{\n\t\t\t\ttmpPadString += tmpPadString.repeat(tmpTargetLength / tmpPadString.length);\n\t\t\t}\n\t\t\treturn tmpPadString.slice(0, tmpPadLength);\n\t\t}\n\t}\n\n\t/**\n\t * Pad the start of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadStart = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString) + tmpString;\n\t}\n\n\t/**\n\t * Pad the end of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadEnd = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn tmpString + this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString);\n\t}\n\n\t/*************************************************************************\n\t * Time Formatting Functions (milliseconds)\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Format a time length in milliseconds into a human readable string.\n\t * @param {number} pTimeSpan \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeSpan(pTimeSpan)\n\t{\n\t\tif (typeof(pTimeSpan) != 'number')\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpMs = parseInt(pTimeSpan%1000);\n\t\tlet tmpSeconds = parseInt((pTimeSpan/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeSpan/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeSpan/(1000*60*60));\n\n\t\treturn `${this.stringPadStart(tmpHours,2,'0')}:${this.stringPadStart(tmpMinutes,2,'0')}:${this.stringPadStart(tmpSeconds,2,'0')}.${this.stringPadStart(tmpMs,3,'0')}`;\n\t}\n\n\t/**\n\t * Format the time delta between two times in milliseconds into a human readable string.\n\t * \n\t * @param {number} pTimeStart \n\t * @param {number} pTimeEnd \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeDelta(pTimeStart, pTimeEnd)\n\t{\n\t\tif ((typeof(pTimeStart) != 'number') || (typeof(pTimeEnd) != 'number'))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.formatTimeSpan(pTimeEnd-pTimeStart);\n\t}\n\n\t// THE FOLLOWING TERRIBLE FUNCTIONS ARE FOR QT / WKHTMLTOPDF when luxon and moment don't work so well\n\tgetMonthFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tgetMonthAbbreviatedFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tformatMonthDayYearFromDate (pJavascriptDate, pStrict)\n\t{\n\t\tlet tmpStrict = (typeof(pStrict) !== 'undefined') ? pStrict : false;\n\n\t\tlet tmpMonth = pJavascriptDate.getMonth() + 1;\n\t\tlet tmpDay = pJavascriptDate.getDate();\n\t\tlet tmpYear = pJavascriptDate.getFullYear();\n\t\t\n\t\tif (tmpStrict)\n\t\t{\n\t\t\ttmpMonth = this.stringPadStart(tmpMonth, 2, '0');\n\t\t\ttmpDay = this.stringPadStart(tmpDay, 2, '0');\n\t\t\ttmpYear = this.stringPadStart(tmpYear, 4, '0');\n\t\t}\n\n\t\treturn `${tmpMonth}/${tmpDay}/${tmpYear}`;\n\t}\n\t\n\tformatSortableStringFromDate (pDate)\n\t{\n\t\treturn pDate.getFullYear()+this.stringPadStart(pDate.getMonth(),2,'0')+this.stringPadStart(pDate.getDate(),2,'0');\n\t}\n\n\t/*************************************************************************\n\t * String Tokenization Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Return the string before the matched substring.\n\t *\n\t * If the substring is not found, the entire string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringBeforeMatch (pString, pMatch)\n\t{\n\t\treturn pString.split(pMatch)[0];\n\t}\n\n\t/**\n\t * Return the string after the matched substring.\n\t *\n\t * If the substring is not found, an empty string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringAfterMatch (pString, pMatch)\n\t{\n\t\tlet tmpStringSplitLocation = pString.indexOf(pMatch);\n\n\t\tif ((tmpStringSplitLocation < 0) || ((tmpStringSplitLocation + pMatch.length) >= pString.length))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn pString.substring(tmpStringSplitLocation + pMatch.length);\n\t}\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures (pString, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\tif (tmpEnclosureDepth == 0)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t}\n\t\t\t\ttmpEnclosureDepth++;\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpEnclosureCount;\n\t}\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosedValueStartIndex = 0;\n\t\tlet tmpEnclosedValueEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This is the end of an enclosure\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t\t{\n\t\t\t// Return an empty string if the enclosure is not found\n\t\t\treturn '';\n\t\t}\n\n\t\tif ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t\t}\n\t}\n\n\n\t/**\n\t * Remove an enclosure from a string based on the index of the enclosure.\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToRemove\n\t * @param {number} pEnclosureStart\n\t * @param {number} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringRemoveEnclosureByIndex (pString, pEnclosureIndexToRemove, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToRemove = (typeof(pEnclosureIndexToRemove) == 'number') ? pEnclosureIndexToRemove : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosureStartIndex = 0;\n\t\tlet tmpEnclosureEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToRemove == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosureStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosureEndIndex <= tmpEnclosureStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToRemove)\n\t\t{\n\t\t\treturn tmpString;\n\t\t}\n\n\t\tlet tmpReturnString = '';\n\n\t\tif (tmpEnclosureStartIndex > 1)\n\t\t{\n\t\t\ttmpReturnString = tmpString.substring(0, tmpEnclosureStartIndex);\n\t\t}\n\n\t\tif ((tmpString.length > (tmpEnclosureEndIndex + 1)) && (tmpEnclosureEndIndex > tmpEnclosureStartIndex))\n\t\t{\n\t\t\ttmpReturnString += tmpString.substring(tmpEnclosureEndIndex+1);\n\t\t}\n\n\t\treturn tmpReturnString;\n\t}\n}\n\nmodule.exports = DataFormat;","module.exports={\n\t\"DefaultIntegerMinimum\": 0,\n\t\"DefaultIntegerMaximum\": 9999999,\n\n\t\"DefaultNumericStringLength\": 10,\n\n\t\"MonthSet\": [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n\n\t\"WeekDaySet\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n\n\t\"ColorSet\": \n\t\t[\n\t\t\t\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Indigo\", \"Violet\", \"Pink\", \"Purple\", \"Turquoise\", \"Gold\",\n\t\t\t\"Lime\", \"Maroon\", \"Navy\", \"Coral\", \"Teal\", \"Brown\", \"White\", \"Black\", \"Sky\", \"Berry\",\n\t\t\t\"Grey\", \"Straw\", \"Silver\", \"Sapphire\"\n\t\t],\n\n\t\"SurNameSet\":\n\t\t[\n\t\t\t\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Miller\", \"Davis\", \"Garcia\", \"Rodriguez\", \"Wilson\",\n\t\t\t\"Martinez\", \"Anderson\", \"Taylor\", \"Thomas\", \"Hernandez\", \"Moore\", \"Martin\", \"Jackson\", \"Thompson\", \"White\",\n\t\t\t\"Lopez\", \"Lee\", \"Gonzalez\", \"Harris\", \"Clark\", \"Lewis\", \"Robinson\", \"Walker\", \"Perez\", \"Hall\",\n\t\t\t\"Young\", \"Allen\", \"Sanchez\", \"Wright\", \"King\", \"Scott\", \"Green\", \"Baker\", \"Adams\", \"Nelson\",\n\t\t\t\"Hill\", \"Ramirez\", \"Campbell\", \"Mitchell\", \"Roberts\", \"Carter\", \"Phillips\", \"Evans\", \"Turner\", \"Torres\",\n\t\t\t\"Parker\", \"Collins\", \"Edwards\", \"Stewart\", \"Flores\", \"Morris\", \"Nguyen\", \"Murphy\", \"Rivera\", \"Cook\",\n\t\t\t\"Rogers\", \"Morgan\", \"Peterson\", \"Cooper\", \"Reed\", \"Bailey\", \"Bell\", \"Gomez\", \"Kelly\", \"Howard\",\n\t\t\t\"Ward\", \"Cox\", \"Diaz\", \"Richardson\", \"Wood\", \"Watson\", \"Brooks\", \"Bennett\", \"Gray\", \"James\",\n\t\t\t\"Reyes\", \"Cruz\", \"Hughes\", \"Price\", \"Myers\", \"Long\", \"Foster\", \"Sanders\", \"Ross\", \"Morales\",\n\t\t\t\"Powell\", \"Sullivan\", \"Russell\", \"Ortiz\", \"Jenkins\", \"Gutierrez\", \"Perry\", \"Butler\", \"Barnes\", \"Fisher\"\n\t\t],\n\n\t\"NameSet\":\n\t\t[\n\t\t\t\"Mary\", \"Patricia\", \"Jennifer\", \"Linda\", \"Elizabeth\", \"Barbara\", \"Susan\", \"Jessica\", \"Sarah\", \"Karen\",\n\t\t\t\"Lisa\", \"Nancy\", \"Betty\", \"Sandra\", \"Margaret\", \"Ashley\", \"Kimberly\", \"Emily\", \"Donna\", \"Michelle\",\n\t\t\t\"Carol\", \"Amanda\", \"Melissa\", \"Deborah\", \"Stephanie\", \"Dorothy\", \"Rebecca\", \"Sharon\", \"Laura\", \"Cynthia\",\n\t\t\t\"Amy\", \"Kathleen\", \"Angela\", \"Shirley\", \"Brenda\", \"Emma\", \"Anna\", \"Pamela\", \"Nicole\", \"Samantha\",\n\t\t\t\"Katherine\", \"Christine\", \"Helen\", \"Debra\", \"Rachel\", \"Carolyn\", \"Janet\", \"Maria\", \"Catherine\", \"Heather\",\n\t\t\t\"Diane\", \"Olivia\", \"Julie\", \"Joyce\", \"Victoria\", \"Ruth\", \"Virginia\", \"Lauren\", \"Kelly\", \"Christina\",\n\t\t\t\"Joan\", \"Evelyn\", \"Judith\", \"Andrea\", \"Hannah\", \"Megan\", \"Cheryl\", \"Jacqueline\", \"Martha\", \"Madison\",\n\t\t\t\"Teresa\", \"Gloria\", \"Sara\", \"Janice\", \"Ann\", \"Kathryn\", \"Abigail\", \"Sophia\", \"Frances\", \"Jean\",\n\t\t\t\"Alice\", \"Judy\", \"Isabella\", \"Julia\", \"Grace\", \"Amber\", \"Denise\", \"Danielle\", \"Marilyn\", \"Beverly\",\n\t\t\t\"Charlotte\", \"Natalie\", \"Theresa\", \"Diana\", \"Brittany\", \"Doris\", \"Kayla\", \"Alexis\", \"Lori\", \"Marie\",\n\t\t\t\"James\", \"Robert\", \"John\", \"Michael\", \"David\", \"William\", \"Richard\", \"Joseph\", \"Thomas\", \"Christopher\",\n\t\t\t\"Charles\", \"Daniel\", \"Matthew\", \"Anthony\", \"Mark\", \"Donald\", \"Steven\", \"Andrew\", \"Paul\", \"Joshua\",\n\t\t\t\"Kenneth\", \"Kevin\", \"Brian\", \"George\", \"Timothy\", \"Ronald\", \"Jason\", \"Edward\", \"Jeffrey\", \"Ryan\",\n\t\t\t\"Jacob\", \"Gary\", \"Nicholas\", \"Eric\", \"Jonathan\", \"Stephen\", \"Larry\", \"Justin\", \"Scott\", \"Brandon\",\n\t\t\t\"Benjamin\", \"Samuel\", \"Gregory\", \"Alexander\", \"Patrick\", \"Frank\", \"Raymond\", \"Jack\", \"Dennis\", \"Jerry\",\n\t\t\t\"Tyler\", \"Aaron\", \"Jose\", \"Adam\", \"Nathan\", \"Henry\", \"Zachary\", \"Douglas\", \"Peter\", \"Kyle\",\n\t\t\t\"Noah\", \"Ethan\", \"Jeremy\", \"Walter\", \"Christian\", \"Keith\", \"Roger\", \"Terry\", \"Austin\", \"Sean\",\n\t\t\t\"Gerald\", \"Carl\", \"Harold\", \"Dylan\", \"Arthur\", \"Lawrence\", \"Jordan\", \"Jesse\", \"Bryan\", \"Billy\",\n\t\t\t\"Bruce\", \"Gabriel\", \"Joe\", \"Logan\", \"Alan\", \"Juan\", \"Albert\", \"Willie\", \"Elijah\", \"Wayne\",\n\t\t\t\"Randy\", \"Vincent\", \"Mason\", \"Roy\", \"Ralph\", \"Bobby\", \"Russell\", \"Bradley\", \"Philip\", \"Eugene\"\n\t\t]\n}","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceDataGeneration extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'DataGeneration';\n\n\t\tthis.defaultData = require('./Fable-Service-DataGeneration-DefaultValues.json');\n\t}\n\n\t// Return a random integer between pMinimum and pMaximum\n\trandomIntegerBetween(pMinimum, pMaximum)\n\t{\n\t\treturn Math.floor(Math.random() * (pMaximum - pMinimum)) + pMinimum;\n\t}\n\t// Return a random integer up to the passed-in maximum\n\trandomIntegerUpTo(pMaximum)\n\t{\n\t\treturn this.randomIntegerBetween(0, pMaximum);\n\t}\n\t// Return a random integer between 0 and 9999999\n\trandomInteger()\n\t{\n\t\treturn Math.floor(Math.random()*this.defaultData.DefaultIntegerMaximum);\n\t}\n\n\n\trandomNumericString(pLength, pMaxNumber)\n\t{\n\t\tlet tmpLength = (typeof(pLength) === 'undefined') ? 10 : pLength;\n\t\tlet tmpMaxNumber = (typeof(pMaxNumber) === 'undefined') ? ((10 ** tmpLength) - 1) : pMaxNumber;\n\n\t\treturn this.services.DataFormat.stringPadStart(this.randomIntegerUpTo(tmpMaxNumber), pLength, '0');\n\t}\n\n\n\trandomMonth()\n\t{\n\t\treturn this.defaultData.MonthSet[this.randomIntegerUpTo(this.defaultData.MonthSet.length-1)];\n\t}\n\trandomDayOfWeek()\n\t{\n\t\treturn this.defaultData.WeekDaySet[this.randomIntegerUpTo(this.defaultData.WeekDaySet.length-1)];\n\t}\n\n\n\trandomColor()\n\t{\n\t\treturn this.defaultData.ColorSet[this.randomIntegerUpTo(this.defaultData.ColorSet.length-1)];\n\t}\n\n\n\trandomName()\n\t{\n\t\treturn this.defaultData.NameSet[this.randomIntegerUpTo(this.defaultData.NameSet.length-1)];\n\t}\n\trandomSurname()\n\t{\n\t\treturn this.defaultData.SurNameSet[this.randomIntegerUpTo(this.defaultData.SurNameSet.length-1)];\n\t}\n}\n\nmodule.exports = FableServiceDataGeneration;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceEnvironmentData extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'EnvironmentData';\n\n\t\tthis.Environment = `node.js`;\n\t}\n}\n\nmodule.exports = FableServiceEnvironmentData;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nconst libFS = require('fs');\nconst libPath = require('path');\n\n\nclass FableServiceFilePersistence extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'FilePersistence';\n\n\t\tif (!this.options.hasOwnProperty('Mode'))\n\t\t{\n\t\t\tthis.options.Mode = parseInt('0777', 8) & ~process.umask();\n\t\t}\n\n\t\tthis.currentInputFolder = `/tmp`;\n\t\tthis.currentOutputFolder = `/tmp`;\n\t}\n\n\tjoinPath(...pPathArray)\n\t{\n\t\treturn libPath.resolve(...pPathArray);\n\t}\n\n\texistsSync(pPath)\n\t{\n\t\treturn libFS.existsSync(pPath);\n\t}\n\n\texists(pPath, fCallback)\n\t{\n\t\tlet tmpFileExists = this.existsSync(pPath);;\n\n\t\treturn fCallback(null, tmpFileExists);\n\t}\n\n\twriteFileSync(pFileName, pFileContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFileSync(pFileName, pFileContent, tmpOptions);\n\t}\n\n\tappendFileSync(pFileName, pAppendContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.appendFileSync(pFileName, pAppendContent, tmpOptions);\n\t}\n\n\tdeleteFileSync(pFileName)\n\t{\n\t\treturn libFS.unlinkSync(pFileName);\n\t}\n\n\tdeleteFolderSync(pFileName)\n\t{\n\t\treturn libFS.rmdirSync(pFileName);\n\t}\n\n\twriteFileSyncFromObject(pFileName, pObject)\n\t{\n\t\treturn this.writeFileSync(pFileName, JSON.stringify(pObject, null, 4));\n\t}\n\n\twriteFileSyncFromArray(pFileName, pFileArray)\n\t{\n\t\tif (!Array.isArray(pFileArray))\n\t\t{\n\t\t\tthis.log.error(`File Persistence Service attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).`);\n\t\t\treturn Error('Attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let i = 0; i < pFileArray.length; i++)\n\t\t\t{\n\t\t\t\treturn this.appendFileSync(pFileName, `${pFileArray[i]}\\n`);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Default folder behaviors\n\n\tgetDefaultOutputPath(pFileName)\n\t{\n\t\treturn libPath.join(this.currentOutputFolder, pFileName);\n\t}\n\n\tdataFolderWriteSync(pFileName, pFileContent)\n\t{\n\t\treturn this.writeFileSync(this.getDefaultOutputPath(pFileName), pFileContent);\n\t}\n\n\tdataFolderWriteSyncFromObject(pFileName, pObject)\n\t{\n\t\treturn this.writeFileSyncFromObject(this.getDefaultOutputPath(pFileName), pObject);\n\t}\n\n\tdataFolderWriteSyncFromArray(pFileName, pFileArray)\n\t{\n\t\treturn this.writeFileSyncFromArray(this.getDefaultOutputPath(pFileName), pFileArray);\n\t}\n\n\t// Folder management\n\tmakeFolderRecursive(pParameters, fCallback)\n\t{\n\t\tlet tmpParameters = pParameters;\n\n\t\tif (typeof(pParameters) == 'string')\n\t\t{\n\t\t\ttmpParameters = { Path: pParameters };\n\t\t}\n\t\telse if (typeof(pParameters) !== 'object')\n\t\t{\n\t\t\tfCallback(new Error('Parameters object or string not properly passed to recursive folder create.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(tmpParameters.Path) !== 'string'))\n\t\t{\n\t\t\tfCallback(new Error('Parameters object needs a path to run the folder create operation.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!tmpParameters.hasOwnProperty('Mode'))\n\t\t{\n\t\t\ttmpParameters.Mode = this.options.Mode;\n\t\t}\n\n\t\t// Check if we are just starting .. if so, build the initial state for our recursive function\n\t\tif (typeof(tmpParameters.CurrentPathIndex) === 'undefined')\n\t\t{\n\t\t\t// Build the tools to start recursing\n\t\t\ttmpParameters.ActualPath = libPath.normalize(tmpParameters.Path);\n\t\t\ttmpParameters.ActualPathParts = tmpParameters.ActualPath.split(libPath.sep);\n\t\t\ttmpParameters.CurrentPathIndex = 0;\n\t\t\ttmpParameters.CurrentPath = '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is not our first run, so we will continue the recursion.\n\t\t\t// Build the new base path\n\t\t\tif (tmpParameters.CurrentPath == libPath.sep)\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\n\t\t\t// Increment the path index\n\t\t\ttmpParameters.CurrentPathIndex++;\n\t\t}\n\n\t\t// Check if the path is fully complete\n\t\tif (tmpParameters.CurrentPathIndex >= tmpParameters.ActualPathParts.length)\n\t\t{\n\t\t\treturn fCallback(null);\n\t\t}\n\n\t\t// Check if the path exists (and is a folder)\n\t\tlibFS.open(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], 'r',\n\t\t\t(pError, pFileDescriptor)=>\n\t\t\t{\n\t\t\t\tif (pFileDescriptor)\n\t\t\t\t{\n\t\t\t\t\tlibFS.closeSync(pFileDescriptor);\n\t\t\t\t}\n\n\t\t\t\tif (pError && pError.code=='ENOENT')\n\t\t\t\t{\n\t\t\t\t\t/* Path doesn't exist, create it */\n\t\t\t\t\tlibFS.mkdir(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], tmpParameters.Mode,\n\t\t\t\t\t\t(pCreateError) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!pCreateError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// We have now created our folder and there was no error -- continue.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (pCreateError.code =='EEXIST')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// The folder exists -- our dev might be running this in parallel/async/whatnot.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(pCreateError.code);\n\t\t\t\t\t\t\t\treturn fCallback(pCreateError);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nmodule.exports = FableServiceFilePersistence;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\n/**\n* Precedent Meta-Templating\n* @author      Steven Velozo <steven@velozo.com>\n* @description Process text stream trie and postfix tree, parsing out meta-template expression functions.\n*/\nconst libWordTree = require(`./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js`);\nconst libStringParser = require(`./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js`);\n\n\nclass FableServiceMetaTemplate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'MetaTemplate';\n\n\t\tthis.WordTree = new libWordTree();\n\n\t\t// In order to allow asynchronous template processing we need to use the async.eachLimit function\n\t\tthis.StringParser = new libStringParser(this.fable.services.Utility.eachLimit);\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\taddPatternAsync(pPatternStart, pPatternEnd, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternAsync(pPatternStart, pPatternEnd, pParserPromise);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData, fCallback)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceMetaTemplate;","/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor(fEachLimit)\n\t{\n\t\tthis.eachLimit = fEachLimit;\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacterAsync (pCharacter, pParserState, pData, fCallback)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\treturn fCallback();\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn fCallback();\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t * @param {function} fCallback - The callback function to call when the parse is complete\n\t */\n\tparseString (pString, pParseTree, pData, fCallback)\n\t{\n\t\tif (typeof(fCallback) !== 'function')\n\t\t{\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\t\tfor (var i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: This is not fast.\n\t\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData, fCallback);\n\t\t\t}\n\n\t\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\t\treturn tmpParserState.Output;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is the async mode\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\t\t\ttmpParserState.Asynchronous = true;\n\n\t\t\tthis.eachLimit(pString, 1,\n\t\t\t\t(pCharacter, fCharacterCallback) =>\n\t\t\t\t{\n\t\t\t\t\tthis.parseCharacterAsync(pCharacter, tmpParserState, pData, fCharacterCallback);\n\t\t\t\t},\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\t// Flush the remaining data\n\t\t\t\t\tthis.flushOutputBuffer(tmpParserState);\n\t\t\t\t\tfCallback(pError, tmpParserState.Output);\n\t\t\t\t});\n\n\t\t}\n\t}\n}\n\nmodule.exports = StringParser;\n","/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn tmpLeaf;\n\t}\n\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternAsync (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParser);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t}\n\t}\n}\n\nmodule.exports = WordTree;\n","module.exports = (\n    {\n        \"Metadata\": {\n            \"UUID\": false,\n            \"Hash\": false,\n\n            \"Title\": \"\",\n            \"Summary\": \"\",\n\n            \"Version\": 0\n        },\n        \"Status\": {\n            \"Completed\": false,\n\n            \"CompletionProgress\": 0,\n            \"CompletionTimeElapsed\": 0,\n\n            \"Steps\": 1,\n            \"StepsCompleted\": 0,\n\n            \"StartTime\": 0,\n            \"EndTime\": 0\n        },\n        \"Errors\": [],\n        \"Log\": []\n    }\n);","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nconst _OperationStatePrototypeString = JSON.stringify(require('./Fable-Service-Operation-DefaultSettings.js'));\n\nclass FableOperation extends libFableServiceBase\n{\n\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\t// Timestamps will just be the long ints\n\t\tthis.timeStamps = {};\n\t\t// ProgressTrackers have an object format of: {Hash:'SomeHash',EndTime:UINT,CurrentTime:UINT,TotalCount:INT,CurrentCount:INT}\n\t\tthis.progressTrackers = {};\n\n        this.serviceType = 'PhasedOperation';\n\n\t\tthis.state = JSON.parse(_OperationStatePrototypeString);\n\n\t\t// Match the service instantiation to the operation.\n\t\tthis.state.Metadata.Hash = this.Hash;\n\t\tthis.state.Metadata.UUID = this.UUID;\n\n\t\tthis.name = (typeof(this.options.Name) == 'string') ? this.options.Name : `Unnamed Operation ${this.state.Metadata.UUID}`;\n\n\t\tthis.log = this;\n\t}\n\n\twriteOperationLog(pLogLevel, pLogText, pLogObject)\n\t{\n\t\tthis.state.Log.push(`${new Date().toUTCString()} [${pLogLevel}]: ${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Log.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\twriteOperationErrors(pLogText, pLogObject)\n\t{\n\t\tthis.state.Errors.push(`${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Errors.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('TRACE', pLogText, pLogObject);\n\t\tthis.fable.log.trace(pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('DEBUG', pLogText, pLogObject);\n\t\tthis.fable.log.debug(pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('INFO', pLogText, pLogObject);\n\t\tthis.fable.log.info(pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('WARN', pLogText, pLogObject);\n\t\tthis.fable.log.warn(pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('ERROR', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.error(pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('FATAL', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.fatal(pLogText, pLogObject);\n\t}\n\t\n\t/************************************************************************\n\t * BEGINNING OF -->  Telemetry Helpers\n\t */\n\tcreateTimeStamp(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tthis.timeStamps[tmpTimeStampHash] = +new Date();\n\t\treturn this.timeStamps[tmpTimeStampHash];\n\t}\n\t\n\tgetTimeDelta(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tif (this.timeStamps.hasOwnProperty(tmpTimeStampHash))\n\t\t{\n\t\t\tlet tmpEndTime = +new Date();\n\t\t\treturn tmpEndTime-this.timeStamps[tmpTimeStampHash];\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t}\n\t\n\tlogTimeDelta(pTimeStampHash, pMessage)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : `Elapsed for ${tmpTimeStampHash}: `;\n\t\tlet tmpOperationTime = this.getTimeDelta(pTimeStampHash);\n\t\tthis.info(tmpMessage +' ('+tmpOperationTime+'ms)');\n\t\treturn tmpOperationTime;\n\t}\n\t\n\tcreateProgressTracker(pTotalOperations, pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpTotalOperations = (typeof(pTotalOperations) == 'number') ? pTotalOperations : 100;\n\t\n\t\tlet tmpProgressTracker = (\n\t\t\t{\n\t\t\t\tHash: tmpProgressTrackerHash,\n\t\t\t\tStartTime: this.createTimeStamp(tmpProgressTrackerHash),\n\t\t\t\tEndTime: 0,\n\t\t\t\tCurrentTime: 0,\n\t\t\t\tPercentComplete: -1,\n\t\t\t\tAverageOperationTime: -1,\n\t\t\t\tEstimatedCompletionTime: -1,\n\t\t\t\tTotalCount: tmpTotalOperations,\n\t\t\t\tCurrentCount:-1\n\t\t\t});\n\t\n\t\tthis.progressTrackers[tmpProgressTrackerHash] = tmpProgressTracker;\n\t\n\t\treturn tmpProgressTracker;\n\t}\n\t\n\tsolveProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\t\n\t\tlet tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\t\n\t\ttmpProgressTracker.CurrentTime = this.getTimeDelta(tmpProgressTracker.Hash);\n\t\n\t\tif ((tmpProgressTracker.CurrentCount > 0) && (tmpProgressTracker.TotalCount > 0))\n\t\t{\n\t\t\ttmpProgressTracker.PercentComplete = (tmpProgressTracker.CurrentCount / tmpProgressTracker.TotalCount) * 100.0;\n\t\t}\n\t\n\t\tif ((tmpProgressTracker.CurrentCount > 0) && (tmpProgressTracker.CurrentTime > 0))\n\t\t{\n\t\t\ttmpProgressTracker.AverageOperationTime = tmpProgressTracker.CurrentTime / tmpProgressTracker.CurrentCount;\n\t\t}\n\t\n\t\tif ((tmpProgressTracker.CurrentCount < tmpProgressTracker.TotalCount) && (tmpProgressTracker.AverageOperationTime > 0))\n\t\t{\n\t\t\ttmpProgressTracker.EstimatedCompletionTime = (tmpProgressTracker.TotalCount - tmpProgressTracker.CurrentCount) * tmpProgressTracker.AverageOperationTime;\n\t\t}\n\t}\n\t\n\tupdateProgressTrackerStatus(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\t\n\t\tif (isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\t\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = tmpCurrentOperations;\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentTime = this.getTimeDelta(tmpProgressTrackerHash);\n\t\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\t\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\t\n\tincrementProgressTrackerStatus(pProgressTrackerHash, pIncrementSize)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpIncrementSize = parseInt(pIncrementSize);\n\t\n\t\tif (isNaN(tmpIncrementSize))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\t\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = this.progressTrackers[tmpProgressTrackerHash].CurrentCount + tmpIncrementSize;\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentTime = this.getTimeDelta(tmpProgressTrackerHash);\n\t\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\t\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\t\n\tsetProgressTrackerEndTime(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\t\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (!isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\tthis.updateProgressTrackerStatus(tmpProgressTrackerHash, tmpCurrentOperations);\n\t\t}\n\t\n\t\tthis.progressTrackers[tmpProgressTrackerHash].EndTime = this.getTimeDelta(tmpProgressTrackerHash);\n\t\t\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\t\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\t\n\tprintProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\t\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTrackerHash} does not exist!  No stats to display.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\t\n\t\t\tif (tmpProgressTracker.CurrentCount < 1)\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} has no completed operations.  ${tmpProgressTracker.CurrentTime}ms have elapsed since it was started.`);\n\t\t\t}\n\t\t\telse if (tmpProgressTracker.EndTime < 1)\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} is ${tmpProgressTracker.PercentComplete.toFixed(3)}% completed - ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations over ${tmpProgressTracker.CurrentTime}ms (median ${tmpProgressTracker.AverageOperationTime.toFixed(3)} per).  Estimated completion in ${tmpProgressTracker.EstimatedCompletionTime.toFixed(0)}ms or ${(tmpProgressTracker.EstimatedCompletionTime / 1000 / 60).toFixed(2)}minutes`)\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} is done and completed ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations in ${tmpProgressTracker.EndTime}ms.`)\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// logMemoryResourcesUsed()\n\t// {\n\t// \n\t// \tconst tmpResourcesUsed = process.memoryUsage().heapUsed / 1024 / 1024;\n\t// \tthis.info(`Memory usage at ${Math.round(tmpResourcesUsed * 100) / 100} MB`);\t\t\n\t// }\n\t/*\n\t * END OF       -->  Logging and Telemetry Helpers\n\t ************************************************************************/\n}\n\nmodule.exports = FableOperation;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nconst libSimpleGet = require('simple-get');\nconst libCookie = require('cookie');\n\nclass FableServiceRestClient extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.TraceLog = false;\n\t\tif (this.options.TraceLog || this.fable.TraceLog)\n\t\t{\n\t\t\tthis.TraceLog = true;\n\t\t}\n\n\t\tthis.dataFormat = this.fable.services.DataFormat;\n\n\t\tthis.serviceType = 'RestClient';\n\n\t\tthis.cookie = false;\n\n\t\t// This is a function that can be overridden, to allow the management\n\t\t// of the request options before they are passed to the request library.\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tget simpleGet()\n\t{\n\t\treturn libSimpleGet;\n\t}\n\n\tprepareCookies(pRequestOptions)\n\t{\n\t\tif (this.cookie)\n\t\t{\n\t\t\tlet tmpCookieObject = this.cookie;\n\t\t\tif (!pRequestOptions.hasOwnProperty('headers'))\n\t\t\t{\n\t\t\t\tpRequestOptions.headers = {};\n\t\t\t}\n\t\t\tlet tmpCookieKeys = Object.keys(tmpCookieObject);\n\t\t\tif (tmpCookieKeys.length > 0)\n\t\t\t{\n\t\t\t\t// Only grab the first for now.\n\t\t\t\tpRequestOptions.headers.cookie = libCookie.serialize(tmpCookieKeys[0], tmpCookieObject[tmpCookieKeys[0]]);\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn pRequestOptions;\n\t}\n\n\tpreRequest(pOptions)\n\t{\n\t\t// Validate the options object\n\t\tlet tmpOptions = this.prepareCookies(pOptions);\n\t\treturn this.prepareRequestOptions(tmpOptions);\n\t}\n\n\texecuteChunkedRequest(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpData.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpData);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteChunkedRequestBinary(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\ttmpOptions.json = false;\n\t\ttmpOptions.encoding = null;\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpDataBuffer = false;\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: Potentially create a third option that streams this to a file?  So it doesn't have to hold it all in memory.\n\t\t\t\t\t\tif (!tmpDataBuffer)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.from(pChunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.concat([tmpDataBuffer, pChunk]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpDataBuffer.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpDataBuffer);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteJSONRequest(pOptions, fCallback)\n\t{\n\t\tpOptions.json = true;\n\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\tif (!tmpOptions.hasOwnProperty('headers'))\n\t\t{\n\t\t\ttmpOptions.headers = {};\n\t\t}\n\t\t/* Automated headers break some APIs\n\t\tif (!tmpOptions.headers.hasOwnProperty('Content-Type'))\n\t\t{\n\t\t\ttmpOptions.headers['Content-Type'] = 'application/json';\n\t\t}\n\t\t*/\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} JSON request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpJSONData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpJSONData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> JSON ${tmpOptions.method} completed - received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, JSON.parse(tmpJSONData));\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetJSON(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeJSONRequest(tmpRequestOptions, fCallback);\n\t}\n\n\tputJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PUT JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PUT';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpostJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`POST JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'POST';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpatchJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PATCH JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PATCH';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\theadJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`HEAD JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'HEAD';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tdelJSON(pOptions, fCallback)\n\t{\n\t\tpOptions.method = 'DELETE';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tgetRawText(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeChunkedRequest(tmpRequestOptions, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceRestClient;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\nclass FableServiceTemplate extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Template';\n\n\t\t// These are the exact regex's used in lodash/underscore\n\t\t// TODO: Switch this to precedent\n\t\tthis.Matchers = (\n\t\t\t{\n\t\t\t\tEvaluate: /<%([\\s\\S]+?)%>/g,\n\t\t\t\tInterpolate: /<%=([\\s\\S]+?)%>/g,\n\t\t\t\tEscaper: /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g,\n\t\t\t\tUnescaper: /\\\\(\\\\|'|r|n|t|u2028|u2029)/g,\n\t\t\t\t// This is how underscore does it, so we are keeping it for now.\n\t\t\t\tGuaranteedNonMatch: /.^/\n\t\t\t});\n\n\t\t// This is a helper for the escaper and unescaper functions.\n\t\t// Right now we are going to keep what underscore is doing, but, not forever.\n\t\tthis.templateEscapes = {\n\t\t\t'\\\\': '\\\\',\n\t\t\t\"'\": \"'\",\n\t\t\t'r': '\\r',\n\t\t\t'\\r': 'r',\n\t\t\t'n': '\\n',\n\t\t\t'\\n': 'n',\n\t\t\t't': '\\t',\n\t\t\t'\\t': 't',\n\t\t\t'u2028': '\\u2028',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'u2029': '\\u2029',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\t// This is defined as such to underscore that it is a dynamic programming\n\t\t// function on this class.\n\t\tthis.renderFunction = false;\n        this.templateString = false;\n\t}\n\n\trenderTemplate(pData)\n\t{\n\t\treturn this.renderFunction(pData);\n\t}\n\n\ttemplateFunction(pData)\n\t{\n\t\tlet fRenderTemplateBound = this.renderTemplate.bind(this);\n\t\treturn fRenderTemplateBound;\n\t}\n\n\tbuildTemplateFunction(pTemplateText, pData)\n\t{\n\t\t// For now this is being kept in a weird form ... this is to mimic the old\n\t\t// underscore code until this is rewritten using precedent.\n\t\tthis.TemplateSource = \"__p+='\" + pTemplateText\n\t\t\t.replace(this.Matchers.Escaper,\n\t\t\t\t(pMatch)=>\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\${this.templateEscapes[pMatch]}`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Interpolate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `'+\\n(${decodeURIComponent(pCode)})+\\n'`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Evaluate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `';\\n${decodeURIComponent(pCode)}\\n;__p+='`;\n\t\t\t\t}) + `';\\n`;\n\n\n\t\tthis.TemplateSource = `with(pTemplateDataObject||{}){\\n${this.TemplateSource}}\\n`;\n\t\tthis.TemplateSource = `var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n${this.TemplateSource}return __p;\\n`;\n\n\t\tthis.renderFunction = new Function('pTemplateDataObject', this.TemplateSource);\n\n\t\tif (typeof(pData) != 'undefined')\n\t\t{\n\t\t\treturn this.renderFunction(pData);\n\t\t}\n\n\t\t// Provide the compiled function source as a convenience for build time\n\t\t// precompilation.\n\t\tthis.TemplateSourceCompiled = 'function(obj){\\n' + this.TemplateSource + '}';\n\n\t\treturn this.templateFunction();\n\t}\n}\n\nmodule.exports = FableServiceTemplate;","const libFableServiceBase = require('../Fable-ServiceManager.js').ServiceProviderBase;\n\n// TODO: These are still pretty big -- consider the smaller polyfills\nconst libAsyncWaterfall = require('async.waterfall');\nconst libAsyncEachLimit = require('async.eachlimit');\n\nconst libBigNumber = require('big.js');\n\nclass FableServiceUtility extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\tthis.templates = {};\n\n\t\t// These two functions are used extensively throughout\n\t\tthis.waterfall = libAsyncWaterfall;\n\t\tthis.eachLimit = libAsyncEachLimit;\n\n\t\tthis.bigNumber = libBigNumber;\n\t}\n\n\t// Underscore and lodash have a behavior, _.extend, which merges objects.\n\t// Now that es6 gives us this, use the native thingy.\n\t// Nevermind, the native thing is not stable enough across environments\n\t// Basic shallow copy\n\textend(pDestinationObject, ...pSourceObjects)\n\t{\n\t\tfor (let i = 0; i < pSourceObjects.length; i++)\n\t\t{\n\t\t\tlet tmpSourceObject = pSourceObjects[i];\n\t\t\tif (typeof(tmpSourceObject) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpObjectProperties = Object.keys(tmpSourceObject);\n\t\t\t\tfor (let k = 0; k < tmpObjectProperties.length; k++)\n\t\t\t\t{\n\t\t\t\t\tpDestinationObject[tmpObjectProperties[k]] = tmpSourceObject[tmpObjectProperties[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pDestinationObject;\n\t}\n\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\ttemplate(pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Template');\n\n\t\treturn tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t}\n\n\t// Build a template function from a template hash, and, register it with the service provider\n\tbuildHashedTemplate(pTemplateHash, pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.serviceManager.instantiateServiceProvider('Template', {}, pTemplateHash);\n\n\t\tthis.templates[pTemplateHash] = tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\n\t\treturn this.templates[pTemplateHash];\n\t}\n\n\t// This is a safe, modern version of chunk from underscore\n\t// Algorithm pulled from a mix of these two polyfills:\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\n\t// https://youmightnotneed.com/lodash\n\t// This implementation was most tolerant in browsers.  Uglify can fix the rest.\n\tchunk (pInput, pChunkSize, pChunkCache)\n\t{\n\t\tlet tmpInputArray = [...pInput];\n\t\t// Note lodash defaults to 1, underscore defaults to 0\n\t\tlet tmpChunkSize = (typeof(pChunkSize) == 'number') ? pChunkSize : 0;\n\t\tlet tmpChunkCache = (typeof(pChunkCache) != 'undefined') ? pChunkCache : [];\n\n\t\tif (tmpChunkSize <= 0)\n\t\t{\n\t\t\treturn tmpChunkCache;\n\t\t}\n\n\t\twhile (tmpInputArray.length)\n\t\t{\n\t\t\ttmpChunkCache.push(tmpInputArray.splice(0, tmpChunkSize));\n\t\t}\n\n\t\treturn tmpChunkCache;\n\t}\n\n\t// Convert an ISO string to a javascript date object\n\t// Adapted from https://stackoverflow.com/a/54751179\n\t//\n\t// Takes strings like: 2022-11-04T11:34:45.000Z\n\t//                and: 1986-06-11T09:34:46.012Z+0200\n\t// ... and converts them into javascript timestamps, following the directions of the timezone stuff.\n\t//\n\t// This is not meant to replace the more complex libraries such as moment or luxon.\n\t// This *is* meant to be a simple, small, and fast way to convert ISO strings to dates in engines\n\t// with ultra limited JS capabilities where those don't work.\n\tisoStringToDate (pISOString)\n\t{\n\n\t\t// Split the string into an array based on the digit groups.\n\t\tlet tmpDateParts = pISOString.split( /\\D+/ );\n\n\t\t// Set up a date object with the current time.\n\t\tlet tmpReturnDate = new Date();\n\n\t\t// Track the number of hours we need to adjust the date by based on the timezone.\n\t\tlet tmpTimeZoneOffsetInHours = 0;\n\t\t// Track the number of minutes we need to adjust the date by based on the timezone.\n\t\tlet tmpTimeZoneOffsetInMinutes = 0;\n\n\t\t// This fixes an inconsistency with constructing the date programmatically.\n\t\ttmpReturnDate.setUTCDate(1);\n\n\t\t// Manually parse the parts of the string and set each part for the\n\t\t// date. Note: Using the UTC versions of these functions is necessary\n\t\t// because we're manually adjusting for time zones stored in the\n\t\t// string.\n\t\ttmpReturnDate.setUTCFullYear( parseInt( tmpDateParts[ 0 ] ) );\n\n\t\t// The month numbers are one \"off\" from what normal humans would expect\n\t\t// because January == 0.\n\t\ttmpReturnDate.setUTCMonth( parseInt( tmpDateParts[ 1 ] ) - 1 );\n\n\t\ttmpReturnDate.setUTCDate( parseInt( tmpDateParts[ 2 ] ) );\n\n\t\t// Set the time parts of the date object.\n\t\ttmpReturnDate.setUTCHours( parseInt( tmpDateParts[ 3 ] ) );\n\t\ttmpReturnDate.setUTCMinutes( parseInt( tmpDateParts[ 4 ] ) );\n\t\ttmpReturnDate.setUTCSeconds( parseInt( tmpDateParts[ 5 ] ) );\n\t\ttmpReturnDate.setUTCMilliseconds( parseInt( tmpDateParts[ 6 ] ) );\n\n\t\t// If there's a value for either the hours or minutes offset.\n\t\tif (tmpDateParts[ 7 ] || tmpDateParts[ 8 ])\n\t\t{\n\t\t\t// If there's a value for the minutes offset.\n\t\t\tif (tmpDateParts[8])\n\t\t\t{\n\t\t\t\t// Convert the minutes value into an hours value.\n\t\t\t\ttmpTimeZoneOffsetInMinutes = parseInt(tmpDateParts[8]) / 60;\n\t\t\t}\n\n\t\t\t// Add the hours and minutes values to get the total offset in hours.\n\t\t\ttmpTimeZoneOffsetInHours = parseInt(tmpDateParts[7]) + tmpTimeZoneOffsetInMinutes;\n\n\t\t\t// If the sign for the timezone is a plus to indicate the timezone is ahead of UTC time.\n\t\t\tif (pISOString.substr( -6, 1 ) == \"+\")\n\t\t\t{\n\t\t\t\t// Make the offset negative since the hours will need to be subtracted from the date.\n\t\t\t\ttmpTimeZoneOffsetInHours *= -1;\n\t\t\t}\n\t\t}\n\n\t\t// Get the current hours for the date and add the offset to get the correct time adjusted for timezone.\n\t\ttmpReturnDate.setHours( tmpReturnDate.getHours() + tmpTimeZoneOffsetInHours );\n\n\t\t// Return the Date object calculated from the string.\n\t\treturn tmpReturnDate;\n\t}\n}\n\nmodule.exports = FableServiceUtility;","var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// When a boxed property is passed in, it should have quotes of some\n// kind around it.\n//\n// For instance:\n// \t\tMyValues['Name']\n// \t\tMyValues[\"Age\"]\n// \t\tMyValues[`Cost`]\n//\n// This function removes the wrapping quotes.\n//\n// Please note it *DOES NOT PARSE* template literals, so backticks just\n// end up doing the same thing as other quote types.\n//\n// TODO: Should template literals be processed?  If so what state do they have access to?  That should happen here if so.\n// TODO: Make a simple class include library with these\nconst cleanWrapCharacters = (pCharacter, pString) =>\n{\n\tif (pString.startsWith(pCharacter) && pString.endsWith(pCharacter))\n\t{\n\t\treturn pString.substring(1, pString.length - 1);\n\t}\n\telse\n\t{\n\t\treturn pString;\n\t}\n};\n\nmodule.exports = cleanWrapCharacters;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Hash Translation\n*\n* This is a very simple translation table for hashes, which allows the same schema to resolve\n* differently based on a loaded translation table.\n*\n* This is to prevent the requirement for mutating schemas over and over again when we want to\n* reuse the structure but look up data elements by different addresses.\n*\n* One side-effect of this is that a translation table can \"override\" the built-in hashes, since\n* this is always used to resolve hashes before any of the functionCallByHash(pHash, ...) perform\n* their lookups by hash.\n*\n* @class ManyfestHashTranslation\n*/\nclass ManyfestHashTranslation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n        this.translationTable = {};\n\t}\n\n    translationCount()\n    {\n        return Object.keys(this.translationTable).length;\n    }\n\n    addTranslation(pTranslation)\n    {\n        // This adds a translation in the form of:\n        // { \"SourceHash\": \"DestinationHash\", \"SecondSourceHash\":\"SecondDestinationHash\" }\n        if (typeof(pTranslation) != 'object')\n        {\n            this.logError(`Hash translation addTranslation expected a translation be type object but was passed in ${typeof(pTranslation)}`);\n            return false;\n        }\n\n        let tmpTranslationSources = Object.keys(pTranslation)\n\n        tmpTranslationSources.forEach(\n            (pTranslationSource) =>\n            {\n                if (typeof(pTranslation[pTranslationSource]) != 'string')\n                {\n                    this.logError(`Hash translation addTranslation expected a translation destination hash for [${pTranslationSource}] to be a string but the referrant was a ${typeof(pTranslation[pTranslationSource])}`);\n                }\n                else\n                {\n                    this.translationTable[pTranslationSource] = pTranslation[pTranslationSource];\n                }\n            });\n    }\n\n    removeTranslationHash(pTranslationHash)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslationHash))\n        {\n            delete this.translationTable[pTranslationHash];\n        }\n    }\n\n    // This removes translations.\n    // If passed a string, just removes the single one.\n    // If passed an object, it does all the source keys.\n    removeTranslation(pTranslation)\n    {\n        if (typeof(pTranslation) == 'string')\n        {\n            this.removeTranslationHash(pTranslation);\n            return true;\n        }\n        else if (typeof(pTranslation) == 'object')\n        {\n            let tmpTranslationSources = Object.keys(pTranslation)\n\n            tmpTranslationSources.forEach(\n                (pTranslationSource) =>\n                {\n                    this.removeTranslation(pTranslationSource);\n                });\n            return true;\n        }\n        else\n        {\n            this.logError(`Hash translation removeTranslation expected either a string or an object but the passed-in translation was type ${typeof(pTranslation)}`);\n            return false;\n        }\n    }\n\n    clearTranslations()\n    {\n        this.translationTable = {};\n    }\n\n    translate(pTranslation)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslation))\n        {\n            return this.translationTable[pTranslation];\n        }\n        else\n        {\n            return pTranslation;\n        }\n    }\n}\n\nmodule.exports = ManyfestHashTranslation;","/**\n* @author <steven@velozo.com>\n*/\n\n/**\n* Manyfest simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n\n    console.log(`[Manyfest] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject));\n};\n\nmodule.exports = logToConsole;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Resolver\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressResolverCheckAddressExists\n*/\nclass ManyfestObjectAddressResolverCheckAddressExists\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// Check if an address exists.\n\t//\n\t// This is necessary because the getValueAtAddress function is ambiguous on\n\t// whether the element/property is actually there or not (it returns\n\t// undefined whether the property exists or not).  This function checks for\n\t// existance and returns true or false dependent.\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\t// TODO: Should these throw an error?\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Check if the property exists.\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName].hasOwnProperty(tmpBoxedPropertyReference);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Use the new in operator to see if the element is in the array\n\t\t\t\t\treturn (tmpBoxedPropertyNumber in pObject[tmpBoxedPropertyName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Check if the property exists\n\t\t\t\treturn pObject.hasOwnProperty(pAddress);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// Because this is an impossible address, the property doesn't exist\n\t\t\t\t\t// TODO: Should we throw an error in this condition?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverCheckAddressExists;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - DeleteValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverDeleteValue\n*/\nclass ManyfestObjectAddressResolverDeleteValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// TODO: Dry me\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Count from the end to the beginning so splice doesn't %&%#$ up the array\n\t\t\t\tfor (let i = tmpInputArray.length - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Delete elements end to beginning\n\t\t\t\t\t\ttmpInputArray.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tdelete pObject[tmpObjectPropertyName];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tdelete pObject[pAddress];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverDeleteValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - GetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverGetValue\n*/\nclass ManyfestObjectAddressResolverGetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress, pParentAddress, pRootObject)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// Set the root object to the passed-in object if it isn't set yet.  This is expected to be the root object.\n\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// Adding simple back-navigation in objects\n\t\tif (tmpSeparatorIndex == 0)\n\t\t{\n\t\t\t// Given an address of \"Bundle.Contract.IDContract...Project.IDProject\" the ... would be interpreted as two back-navigations from IDContract.\n\t\t\t// When the address is passed in, though, the first . is already eliminated.  So we can count the dots.\n\t\t\tlet tmpParentAddressParts = tmpParentAddress.split('.');\n\n\t\t\tlet tmpBackNavigationCount = 0;\n\n\t\t\t// Count the number of dots\n\t\t\tfor (let i = 0; i < pAddress.length; i++)\n\t\t\t{\n\t\t\t\tif (pAddress.charAt(i) != '.')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttmpBackNavigationCount++;\n\t\t\t}\n\n\t\t\tlet tmpParentAddressLength = tmpParentAddressParts.length - tmpBackNavigationCount;\n\n\t\t\tif (tmpParentAddressLength < 0)\n\t\t\t{\n\t\t\t\t// We are trying to back navigate more than we can.\n\t\t\t\t// TODO: Should this be undefined or should we bank out at the bottom and try to go forward?\n\t\t\t\t// This seems safest for now.\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are trying to back navigate to a parent object.\n\t\t\t\t// Recurse with the back-propagated parent address, and, the new address without the back-navigation dots.\n\t\t\t\tlet tmpRecurseAddress = pAddress.slice(tmpBackNavigationCount);\n\t\t\t\tif (tmpParentAddressLength > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpRecurseAddress = `${tmpParentAddressParts.slice(0, tmpParentAddressLength).join('.')}.${tmpRecurseAddress}`;\n\t\t\t\t}\n\t\t\t\tthis.logInfo(`Back-navigation detected.  Recursing back to address [${tmpRecurseAddress}]`);\n\t\t\t\treturn this.getValueAtAddress(tmpRootObject, tmpRecurseAddress);\n\t\t\t}\n\t\t}\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\tlet tmpOutputArray = [];\n\t\t\t\tfor (let i = 0; i < tmpInputArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOutputArray.push(tmpInputArray[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpOutputArray;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn pObject[tmpObjectPropertyName];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\treturn pObject[pAddress];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverGetValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - SetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressSetValue\n*/\nclass ManyfestObjectAddressSetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyReference] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the time in recursion to set the value in the object\n\t\t\t\tpObject[pAddress] = pValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressSetValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Generation\n*\n* Automagically generate addresses and properties based on a passed-in object,\n* to be used for easy creation of schemas.  Meant to simplify the lives of\n* developers wanting to create schemas without typing a bunch of stuff.\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressGeneration\n*/\nclass ManyfestObjectAddressGeneration\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// generateAddressses\n\t//\n\t// This flattens an object into a set of key:value pairs for *EVERY SINGLE\n\t// POSSIBLE ADDRESS* in the object.  It can get ... really insane really\n\t// quickly.  This is not meant to be used directly to generate schemas, but\n\t// instead as a starting point for scripts or UIs.\n\t//\n\t// This will return a mega set of key:value pairs with all possible schema\n\t// permutations and default values (when not an object) and everything else.\n\tgenerateAddressses (pObject, pBaseAddress, pSchema)\n\t{\n\t\tlet tmpBaseAddress = (typeof(pBaseAddress) == 'string') ? pBaseAddress : '';\n\t\tlet tmpSchema = (typeof(pSchema) == 'object') ? pSchema : {};\n\n\t\tlet tmpObjectType = typeof(pObject);\n\n\t\tlet tmpSchemaObjectEntry = (\n\t\t\t{\n\t\t\t\tAddress: tmpBaseAddress,\n\t\t\t\tHash: tmpBaseAddress,\n\t\t\t\tName: tmpBaseAddress,\n\t\t\t\t// This is so scripts and UI controls can force a developer to opt-in.\n\t\t\t\tInSchema: false\n\t\t\t}\n\t\t)\n\n\t\tif ((tmpObjectType == 'object') && (pObject == null))\n\t\t{\n\t\t\ttmpObjectType = 'null';\n\t\t}\n\n\t\tswitch(tmpObjectType)\n\t\t{\n\t\t\tcase 'string':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'String';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'bigint':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Number';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\tcase 'null':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Any';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif (Array.isArray(pObject))\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Array';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < pObject.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[i], `${tmpBaseAddress}[${i}]`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Object';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t\ttmpBaseAddress += '.';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectProperties = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectProperties.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[tmpObjectProperties[i]], `${tmpBaseAddress}${tmpObjectProperties[i]}`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'symbol':\n\t\t\tcase 'function':\n\t\t\t\t// Symbols and functions neither recurse nor get added to the schema\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tmpSchema;\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressGeneration;","// Given a string, parse out any conditional expressions and set whether or not to keep the record.\n//\n// For instance:\n// \t\t'files[]<<~?format,==,Thumbnail?~>>'\n//      'files[]<<~?format,==,Metadata?~>>'\n//      'files[]<<~?size,>,4000?~>>'\n//\n// The wrapping parts are the <<~? and ?~>> megabrackets.\n//\n// The function does not need to alter the string -- just check the conditionals within.\n\n// TODO: Consider making this an es6 class\n\n// Let's use indexOf since it is apparently the fastest.\nconst _ConditionalStanzaStart = '<<~?';\nconst _ConditionalStanzaStartLength = _ConditionalStanzaStart.length;\nconst _ConditionalStanzaEnd = '?~>>';\nconst _ConditionalStanzaEndLength = _ConditionalStanzaEnd.length;\n\n// Test the condition of a value in a record\nconst testCondition = (pManyfest, pRecord, pSearchAddress, pSearchComparator, pValue) =>\n{\n\tswitch(pSearchComparator)\n\t{\n\t\tcase '!=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) != pValue);\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) < pValue);\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) > pValue);\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) <= pValue);\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) >= pValue);\n\t\t\tbreak;\n\t\tcase '===':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === pValue);\n\t\t\tbreak;\n\t\tcase '==':\n\t\tdefault:\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) == pValue);\n\t\t\tbreak;\n\t}\n};\n\nconst parseConditionals = (pManyfest, pAddress, pRecord) =>\n{\n\tlet tmpKeepRecord = true;\n\n\t/*\n\t\tAlgorithm is simple:\n\n\t\t1.  Enuerate start points\n\n\t\t2.  Find stop points within each start point\n\t\t3. Check the conditional\n\t*/\n\n\tlet tmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart);\n\n\twhile (tmpStartIndex != -1)\n\t{\n\t\tlet tmpStopIndex = pAddress.indexOf(_ConditionalStanzaEnd, tmpStartIndex+_ConditionalStanzaStartLength);\n\n\t\tif (tmpStopIndex != -1)\n\t\t{\n\t\t\tlet tmpMagicComparisonPatternSet = pAddress.substring(tmpStartIndex+_ConditionalStanzaStartLength, tmpStopIndex).split(',');\n\n\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\t\t\tlet tmpSearchComparator = tmpMagicComparisonPatternSet[1];\n\t\t\tlet tmpSearchValue = tmpMagicComparisonPatternSet[2];\n\n\t\t\t// Process the piece\n\t\t\ttmpKeepRecord = tmpKeepRecord && testCondition(pManyfest, pRecord, tmpSearchAddress, tmpSearchComparator, tmpSearchValue);\n\t\t\ttmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart, tmpStopIndex+_ConditionalStanzaEndLength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpStartIndex = -1;\n\t\t}\n\t\t\n\t}\n\n\treturn tmpKeepRecord;\n}\n\nmodule.exports = parseConditionals;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Schema Manipulation Functions\n*\n* @class ManyfestSchemaManipulation\n*/\nclass ManyfestSchemaManipulation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n    // This translates the default address mappings to something different.\n    //\n    // For instance you can pass in manyfest schema descriptor object:\n    // \t{\n\t//\t  \"Address.Of.a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t//\t  \"Address.Of.b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t//  }\n    //\n    //\n    // And then an address mapping (basically a Hash->Address map)\n    //  {\n    //    \"a\": \"New.Address.Of.a\",\n    //    \"b\": \"New.Address.Of.b\"\n    //  }\n    //\n    // NOTE: This mutates the schema object permanently, altering the base hash.\n    //       If there is a collision with an existing address, it can lead to overwrites.\n    // TODO: Discuss what should happen on collisions.\n\tresolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\tif (typeof(pManyfestSchemaDescriptors) != 'object')\n\t\t{\n\t\t\tthis.logError(`Attempted to resolve address mapping but the descriptor was not an object.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof(pAddressMapping) != 'object')\n\t\t{\n\t\t\t// No mappings were passed in\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the arrays of both the schema definition and the hash mapping\n\t\tlet tmpManyfestAddresses = Object.keys(pManyfestSchemaDescriptors);\n\t\tlet tmpHashMapping = {};\n\t\ttmpManyfestAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tif (pManyfestSchemaDescriptors[pAddress].hasOwnProperty('Hash'))\n\t\t\t\t{\n\t\t\t\t\ttmpHashMapping[pManyfestSchemaDescriptors[pAddress].Hash] = pAddress;\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet tmpAddressMappingSet = Object.keys(pAddressMapping);\n\n\t\ttmpAddressMappingSet.forEach(\n\t\t\t(pInputAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpNewDescriptorAddress = pAddressMapping[pInputAddress];\n\t\t\t\tlet tmpOldDescriptorAddress = false;\n\t\t\t\tlet tmpDescriptor = false;\n\n\t\t\t\t// See if there is a matching descriptor either by Address directly or Hash\n\t\t\t\tif (pManyfestSchemaDescriptors.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = pInputAddress;\n\t\t\t\t}\n\t\t\t\telse if (tmpHashMapping.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = tmpHashMapping[pInputAddress];\n\t\t\t\t}\n\n\t\t\t\t// If there was a matching descriptor in the manifest, store it in the temporary descriptor\n\t\t\t\tif (tmpOldDescriptorAddress)\n\t\t\t\t{\n\t\t\t\t\ttmpDescriptor = pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t\tdelete pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Create a new descriptor!  Map it to the input address.\n\t\t\t\t\ttmpDescriptor = { Hash:pInputAddress };\n\t\t\t\t}\n\n\t\t\t\t// Now re-add the descriptor to the manyfest schema\n\t\t\t\tpManyfestSchemaDescriptors[tmpNewDescriptorAddress] = tmpDescriptor;\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tsafeResolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\t// This returns the descriptors as a new object, safely remapping without mutating the original schema Descriptors\n\t\tlet tmpManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptors));\n\t\tthis.resolveAddressMappings(tmpManyfestSchemaDescriptors, pAddressMapping);\n\t\treturn tmpManyfestSchemaDescriptors;\n\t}\n\n\tmergeAddressMappings(pManyfestSchemaDescriptorsDestination, pManyfestSchemaDescriptorsSource)\n\t{\n\t\tif ((typeof(pManyfestSchemaDescriptorsSource) != 'object') || (typeof(pManyfestSchemaDescriptorsDestination) != 'object'))\n\t\t{\n\t\t\tthis.logError(`Attempted to merge two schema descriptors but both were not objects.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpSource = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsSource));\n\t\tlet tmpNewManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsDestination));\n\n\t\t// The first passed-in set of descriptors takes precedence.\n\t\tlet tmpDescriptorAddresses = Object.keys(tmpSource);\n\n\t\ttmpDescriptorAddresses.forEach(\n\t\t\t(pDescriptorAddress) =>\n\t\t\t{\n\t\t\t\tif (!tmpNewManyfestSchemaDescriptors.hasOwnProperty(pDescriptorAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpNewManyfestSchemaDescriptors[pDescriptorAddress] = tmpSource[pDescriptorAddress];\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpNewManyfestSchemaDescriptors;\n\t}\n}\n\nmodule.exports = ManyfestSchemaManipulation;","/**\n* @author <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\nlet libHashTranslation = require('./Manyfest-HashTranslation.js');\nlet libObjectAddressCheckAddressExists = require('./Manyfest-ObjectAddress-CheckAddressExists.js');\nlet libObjectAddressGetValue = require('./Manyfest-ObjectAddress-GetValue.js');\nlet libObjectAddressSetValue = require('./Manyfest-ObjectAddress-SetValue.js');\nlet libObjectAddressDeleteValue = require('./Manyfest-ObjectAddress-DeleteValue.js');\nlet libObjectAddressGeneration = require('./Manyfest-ObjectAddressGeneration.js');\nlet libSchemaManipulation = require('./Manyfest-SchemaManipulation.js');\n\nconst _DefaultConfiguration = { Scope:'DEFAULT', Descriptors: {} }\n\n/**\n* Manyfest object address-based descriptions and manipulations.\n*\n* @class Manyfest\n*/\nclass Manyfest extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'Manifest';\n\n\t\t// Wire in logging\n\t\tthis.logInfo = libSimpleLog;\n\t\tthis.logError = libSimpleLog;\n\n\t\t// Create an object address resolver and map in the functions\n\t\tthis.objectAddressCheckAddressExists = new libObjectAddressCheckAddressExists(this.logInfo, this.logError);\n\t\tthis.objectAddressGetValue = new libObjectAddressGetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressSetValue = new libObjectAddressSetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressDeleteValue = new libObjectAddressDeleteValue(this.logInfo, this.logError);\n\n\t\tif (!this.options.hasOwnProperty('defaultValues'))\n\t\t{\n\t\t\tthis.options.defaultValues = (\n\t\t\t\t{\n\t\t\t\t\t\"String\": \"\",\n\t\t\t\t\t\"Number\": 0,\n\t\t\t\t\t\"Float\": 0.0,\n\t\t\t\t\t\"Integer\": 0,\n\t\t\t\t\t\"Boolean\": false,\n\t\t\t\t\t\"Binary\": 0,\n\t\t\t\t\t\"DateTime\": 0,\n\t\t\t\t\t\"Array\": [],\n\t\t\t\t\t\"Object\": {},\n\t\t\t\t\t\"Null\": null\n\t\t\t\t});\n\t\t}\n\t\tif (!this.options.hasOwnProperty('strict'))\n\t\t{\n\t\t\tthis.options.strict = false;\n\t\t}\n\n\t\tthis.scope = undefined;\n\t\tthis.elementAddresses = undefined;\n\t\tthis.elementHashes = undefined;\n\t\tthis.elementDescriptors = undefined;\n\n\t\tthis.reset();\n\n\t\tif (typeof(this.options) === 'object')\n\t\t{\n\t\t\tthis.loadManifest(this.options);\n\t\t}\n\n\t\tthis.schemaManipulations = new libSchemaManipulation(this.logInfo, this.logError);\n\t\tthis.objectAddressGeneration = new libObjectAddressGeneration(this.logInfo, this.logError);\n\n\t\tthis.hashTranslations = new libHashTranslation(this.logInfo, this.logError);\n\t}\n\n\t/*************************************************************************\n\t * Schema Manifest Loading, Reading, Manipulation and Serialization Functions\n\t */\n\n\t// Reset critical manifest properties\n\treset()\n\t{\n\t\tthis.scope = 'DEFAULT';\n\t\tthis.elementAddresses = [];\n\t\tthis.elementHashes = {};\n\t\tthis.elementDescriptors = {};\n\t}\n\n\tclone()\n\t{\n\t\t// Make a copy of the options in-place\n\t\tlet tmpNewOptions = JSON.parse(JSON.stringify(this.options));\n\n\t\tlet tmpNewManyfest = new Manyfest(this.getManifest(), this.logInfo, this.logError, tmpNewOptions);\n\n\t\t// Import the hash translations\n\t\ttmpNewManyfest.hashTranslations.addTranslation(this.hashTranslations.translationTable);\n\n\t\treturn tmpNewManyfest;\n\t}\n\n\t// Deserialize a Manifest from a string\n\tdeserialize(pManifestString)\n\t{\n\t\t// TODO: Add guards for bad manifest string\n\t\treturn this.loadManifest(JSON.parse(pManifestString));\n\t}\n\n\t// Load a manifest from an object\n\tloadManifest(pManifest)\n\t{\n\t\tif (typeof(pManifest) !== 'object')\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading manifest; expecting an object but parameter was type ${typeof(pManifest)}.`);\n\t\t}\n\n\t\tlet tmpManifest = (typeof(pManifest) == 'object') ? pManifest : {};\n\n\t\tlet tmpDescriptorKeys = Object.keys(_DefaultConfiguration);\n\n\t\tfor (let i = 0; i < tmpDescriptorKeys.length; i++)\n\t\t{\n\t\t\tif (!tmpManifest.hasOwnProperty(tmpDescriptorKeys[i]))\n\t\t\t{\n\t\t\t\ttmpManifest[tmpDescriptorKeys[i]] = JSON.parse(JSON.stringify(_DefaultConfiguration[tmpDescriptorKeys[i]]));\n\t\t\t}\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Scope'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Scope) === 'string')\n\t\t\t{\n\t\t\t\tthis.scope = tmpManifest.Scope;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest; expecting a string but property was type ${typeof(tmpManifest.Scope)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest object.  Property \"Scope\" does not exist in the root of the object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Descriptors'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Descriptors) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpDescriptionAddresses = Object.keys(tmpManifest.Descriptors);\n\t\t\t\tfor (let i = 0; i < tmpDescriptionAddresses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.addDescriptor(tmpDescriptionAddresses[i], tmpManifest.Descriptors[tmpDescriptionAddresses[i]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading description object from manifest object.  Expecting an object in 'Manifest.Descriptors' but the property was type ${typeof(tmpManifest.Descriptors)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object description from manifest object.  Property \"Descriptors\" does not exist in the root of the Manifest object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('HashTranslations'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.HashTranslations) === 'object')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < tmpManifest.HashTranslations.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// Each translation is \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Serialize the Manifest to a string\n\tserialize()\n\t{\n\t\treturn JSON.stringify(this.getManifest());\n\t}\n\n\tgetManifest()\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tScope: this.scope,\n\t\t\t\tDescriptors: JSON.parse(JSON.stringify(this.elementDescriptors)),\n\t\t\t\tHashTranslations: JSON.parse(JSON.stringify(this.hashTranslations.translationTable))\n\t\t\t});\n\t}\n\n\t// Add a descriptor to the manifest\n\taddDescriptor(pAddress, pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) === 'object')\n\t\t{\n\t\t\t// Add the Address into the Descriptor if it doesn't exist:\n\t\t\tif (!pDescriptor.hasOwnProperty('Address'))\n\t\t\t{\n\t\t\t\tpDescriptor.Address = pAddress;\n\t\t\t}\n\n\t\t\tif (!this.elementDescriptors.hasOwnProperty(pAddress))\n\t\t\t{\n\t\t\t\tthis.elementAddresses.push(pAddress);\n\t\t\t}\n\n\t\t\t// Add the element descriptor to the schema\n\t\t\tthis.elementDescriptors[pAddress] = pDescriptor;\n\n\t\t\t// Always add the address as a hash\n\t\t\tthis.elementHashes[pAddress] = pAddress;\n\n\t\t\tif (pDescriptor.hasOwnProperty('Hash'))\n\t\t\t{\n\t\t\t\t// TODO: Check if this is a good idea or not..\n\t\t\t\t//       Collisions are bound to happen with both representations of the address/hash in here and developers being able to create their own hashes.\n\t\t\t\tthis.elementHashes[pDescriptor.Hash] = pAddress;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpDescriptor.Hash = pAddress;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object descriptor for address '${pAddress}' from manifest object.  Expecting an object but property was type ${typeof(pDescriptor)}.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetDescriptorByHash(pHash)\n\t{\n\t\treturn this.getDescriptor(this.resolveHashAddress(pHash));\n\t}\n\n\tgetDescriptor(pAddress)\n\t{\n\t\treturn this.elementDescriptors[pAddress];\n\t}\n\n\t// execute an action function for each descriptor\n\teachDescriptor(fAction)\n\t{\n        let tmpDescriptorAddresses = Object.keys(this.elementDescriptors);\n        for (let i = 0; i < tmpDescriptorAddresses.length; i++)\n        {\n            fAction(this.elementDescriptors[tmpDescriptorAddresses[i]]);\n        }\n\n\t}\n\n\t/*************************************************************************\n\t * Beginning of Object Manipulation (read & write) Functions\n\t */\n\t// Check if an element exists by its hash\n\tcheckAddressExistsByHash (pObject, pHash)\n\t{\n\t\treturn this.checkAddressExists(pObject,this.resolveHashAddress(pHash));\n\t}\n\n\t// Check if an element exists at an address\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\treturn this.objectAddressCheckAddressExists.checkAddressExists(pObject, pAddress);\n\t}\n\n\t// Turn a hash into an address, factoring in the translation table.\n\tresolveHashAddress(pHash)\n\t{\n\t\tlet tmpAddress = undefined;\n\n\t\tlet tmpInElementHashTable = this.elementHashes.hasOwnProperty(pHash);\n\t\tlet tmpInTranslationTable = this.hashTranslations.translationTable.hasOwnProperty(pHash);\n\n\t\t// The most straightforward: the hash exists, no translations.\n\t\tif (tmpInElementHashTable && !tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[pHash];\n\t\t}\n\t\t// There is a translation from one hash to another, and, the elementHashes contains the pointer end\n\t\telse if (tmpInTranslationTable && this.elementHashes.hasOwnProperty(this.hashTranslations.translate(pHash)))\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[this.hashTranslations.translate(pHash)];\n\t\t}\n\t\t// Use the level of indirection only in the Translation Table\n\t\telse if (tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.hashTranslations.translate(pHash);\n\t\t}\n\t\t// Just treat the hash as an address.\n\t\t// TODO: Discuss this ... it is magic but controversial\n\t\telse\n\t\t{\n\t\t\ttmpAddress = pHash;\n\t\t}\n\n\t\treturn tmpAddress;\n\t}\n\n\t// Get the value of an element by its hash\n\tgetValueByHash (pObject, pHash)\n\t{\n\t\tlet tmpValue = this.getValueAtAddress(pObject, this.resolveHashAddress(pHash));\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptorByHash(pHash));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\tlet tmpValue = this.objectAddressGetValue.getValueAtAddress(pObject, pAddress);\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptor(pAddress));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Set the value of an element by its hash\n\tsetValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.setValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressSetValue.setValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Delete the value of an element by its hash\n\tdeleteValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.deleteValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressDeleteValue.deleteValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Validate the consistency of an object against the schema\n\tvalidate(pObject)\n\t{\n\t\tlet tmpValidationData =\n\t\t{\n\t\t\tError: null,\n\t\t\tErrors: [],\n\t\t\tMissingElements:[]\n\t\t};\n\n\t\tif (typeof(pObject) !== 'object')\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Expected passed in object to be type object but was passed in ${typeof(pObject)}`);\n\t\t}\n\n\t\tlet addValidationError = (pAddress, pErrorMessage) =>\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Element at address \"${pAddress}\" ${pErrorMessage}.`);\n\t\t};\n\n\t\t// Now enumerate through the values and check for anomalies based on the schema\n\t\tfor (let i = 0; i < this.elementAddresses.length; i++)\n\t\t{\n\t\t\tlet tmpDescriptor = this.getDescriptor(this.elementAddresses[i]);\n\t\t\tlet tmpValueExists = this.checkAddressExists(pObject, tmpDescriptor.Address);\n\t\t\tlet tmpValue = this.getValueAtAddress(pObject, tmpDescriptor.Address);\n\n\t\t\tif ((typeof(tmpValue) == 'undefined') || !tmpValueExists)\n\t\t\t{\n\t\t\t\t// This will technically mean that `Object.Some.Value = undefined` will end up showing as \"missing\"\n\t\t\t\t// TODO: Do we want to do a different message based on if the property exists but is undefined?\n\t\t\t\ttmpValidationData.MissingElements.push(tmpDescriptor.Address);\n\t\t\t\tif (tmpDescriptor.Required || this.options.strict)\n\t\t\t\t{\n\t\t\t\t\taddValidationError(tmpDescriptor.Address, 'is flagged REQUIRED but is not set in the object');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now see if there is a data type specified for this element\n\t\t\tif (tmpDescriptor.DataType)\n\t\t\t{\n\t\t\t\tlet tmpElementType = typeof(tmpValue);\n\t\t\t\tswitch(tmpDescriptor.DataType.toString().trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpValueString = tmpValue.toString();\n\t\t\t\t\t\t\tif (tmpValueString.indexOf('.') > -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// TODO: Is this an error?\n\t\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but has a decimal point in the number.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DateTime':\n\t\t\t\t\t\tlet tmpValueDate = new Date(tmpValue);\n\t\t\t\t\t\tif (tmpValueDate.toString() == 'Invalid Date')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is not parsable as a Date by Javascript`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Check if this is a string, in the default case\n\t\t\t\t\t\t// Note this is only when a DataType is specified and it is an unrecognized data type.\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} (which auto-converted to String because it was unrecognized) but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpValidationData;\n\t}\n\n\t// Returns a default value, or, the default value for the data type (which is overridable with configuration)\n\tgetDefaultValue(pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) != 'object')\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (pDescriptor.hasOwnProperty('Default'))\n\t\t{\n\t\t\treturn pDescriptor.Default;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Default to a null if it doesn't have a type specified.\n\t\t\t// This will ensure a placeholder is created but isn't misinterpreted.\n\t\t\tlet tmpDataType = (pDescriptor.hasOwnProperty('DataType')) ? pDescriptor.DataType : 'String';\n\t\t\tif (this.options.defaultValues.hasOwnProperty(tmpDataType))\n\t\t\t{\n\t\t\t\treturn this.options.defaultValues[tmpDataType];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// give up and return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enumerate through the schema and populate default values if they don't exist.\n\tpopulateDefaults(pObject, pOverwriteProperties)\n\t{\n\t\treturn this.populateObject(pObject, pOverwriteProperties,\n\t\t\t// This just sets up a simple filter to see if there is a default set.\n\t\t\t(pDescriptor) =>\n\t\t\t{\n\t\t\t\treturn pDescriptor.hasOwnProperty('Default');\n\t\t\t});\n\t}\n\n\t// Forcefully populate all values even if they don't have defaults.\n\t// Based on type, this can do unexpected things.\n\tpopulateObject(pObject, pOverwriteProperties, fFilter)\n\t{\n\t\t// Automatically create an object if one isn't passed in.\n\t\tlet tmpObject = (typeof(pObject) === 'object') ? pObject : {};\n\t\t// Default to *NOT OVERWRITING* properties\n\t\tlet tmpOverwriteProperties = (typeof(pOverwriteProperties) == 'undefined') ? false : pOverwriteProperties;\n\t\t// This is a filter function, which is passed the schema and allows complex filtering of population\n\t\t// The default filter function just returns true, populating everything.\n\t\tlet tmpFilterFunction = (typeof(fFilter) == 'function') ? fFilter : (pDescriptor) => { return true; };\n\n\t\tthis.elementAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpDescriptor = this.getDescriptor(pAddress);\n\t\t\t\t// Check the filter function to see if this is an address we want to set the value for.\n\t\t\t\tif (tmpFilterFunction(tmpDescriptor))\n\t\t\t\t{\n\t\t\t\t\t// If we are overwriting properties OR the property does not exist\n\t\t\t\t\tif (tmpOverwriteProperties || !this.checkAddressExists(tmpObject, pAddress))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setValueAtAddress(tmpObject, pAddress, this.getDefaultValue(tmpDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpObject;\n\t}\n};\n\nmodule.exports = Manyfest;","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","const libFableServiceBase = require('fable-serviceproviderbase')\n\nconst defaultPictSettings = (\n\t{\n\t\tName: 'DefaultPictApplication',\n\n\t\t// The main \"viewport\" is the view that is used to host our application\n\t\tMainViewportViewIdentifier: 'Default-View',\n\t\tMainViewportRenderableHash: false,\n\t\tMainViewportDestinationAddress: false,\n\t\tMainViewportDefaultDataAddress: false,\n\n\t\t// Whether or not we should automatically render the main viewport after we initialize the pict application\n\t\tAutoSolveAfterInitialize: true,\n\t\tAutoRenderMainViewportViewAfterInitialize: true,\n\n\t\tManifests: {},\n\t\t// The prefix to prepend on all template destination hashes\n\t\tIdentifierAddressPrefix: 'PICT-'\n\t});\n\nclass PictApplication extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tthis.serviceType = 'PictApplication';\n\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict state\n\t\tthis.AppData = this.fable.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastMarshalFromViewsTimestamp = false;\n\t\tthis.lastMarshalToViewsTimestamp = false;\n\n\t\t// Load all the manifests for the application\n\t\tlet tmpManifestKeys = Object.keys(this.options.Manifests);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++)\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.fable.serviceManager.instantiateServiceProvider('Manifest', this.options.Manifests[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Solve All Views                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing solve() function...`)\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpViewsToSolve[i].solve();\n\t\t}\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\t// Walk through any loaded views and solve them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoSolveWithApp)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoSolveOrdinal - b.options.AutoSolveOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToSolve[i].solveAsync.bind(tmpViewsToSolve[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Initialize Application                   */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\ttmpViewsToInitialize[i].initialize();\n\t\t\t}\n\t\t\tthis.onAfterInitialize();\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Solve the template synchronously\n\t\t\t\tthis.solve();\n\t\t\t}\n\t\t\t// Now check and see if we should automatically render as well\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Render the template synchronously\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallBack)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\t// TODO: Some optimization cleverness could be gained by grouping them into a parallelized async operation, by ordinal.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority\n\t\t\t// If they are all the default priority 0, it will end up being add order due to JSON Object Property Key order stuff\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = tmpViewsToInitialize[i];\n\t\t\t\ttmpAnticipate.anticipate(tmpView.initializeAsync.bind(tmpView));\n\t\t\t}\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.solveAsync.bind(this));\n\t\t\t}\n\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.renderMainViewportAsync.bind(this));\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallBack();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data From All Views              */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalFromViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalFromViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalFromViews[i].marshalFromView();\n\t\t}\n\t\tthis.onMarshalFromViews();\n\t\tthis.onAfterMarshalFromViews();\n\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalFromViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalFromViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalFromViews[i].marshalFromViewAsync.bind(tmpViewsToMarshalFromViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data To All Views                */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalToViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalToViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalToViews[i].marshalToView();\n\t\t}\n\t\tthis.onMarshalToViews();\n\t\tthis.onAfterMarshalToViews();\n\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalToViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalToViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalToViews[i].marshalToViewAsync.bind(tmpViewsToMarshalToViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Render View                              */\n\t/* -------------------------------------------------------------------------- */\n\trender(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\t// Now get the view (by hash) from the loaded views\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not render from View ${tmpViewIdentifier} because it is not a valid view.`);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn tmpView.render(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress);\n\t}\n\trenderMainViewport()\n\t{\n\t\treturn this.render(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress);\n\t}\n\n\trenderAsync(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tlet tmpErrorMessage = `PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not asynchronously render from View ${tmpViewIdentifier} because it is not a valid view.`;\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.error(tmpErrorMessage);\n\t\t\t}\n\t\t\treturn fCallback(new Error(tmpErrorMessage));\n\t\t}\n\n\t\treturn tmpView.renderAsync(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress, fCallback);\n\t}\n\trenderMainViewportAsync(fCallback)\n\t{\n\t\treturn this.renderAsync(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress, fCallback);\n\t}\n}\n\nmodule.exports = PictApplication;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst defaultPictViewSettings = (\n\t{\n\t\tDefaultRenderable: false,\n\t\tDefaultDestinationAddress: false,\n\t\tDefaultTemplateRecordAddress: false,\n\n\t\tViewIdentifier: false,\n\n\t\t// If this is set to true, when the App initializes this will.\n\t\t// After the App initializes, initialize will be called as soon as it's added.\n\t\tAutoInitialize: true,\n\t\tAutoInitializeOrdinal: 0,\n\n\t\t// If this is set to true, when the App autorenders (on load) this will.\n\t\t// After the App initializes, render will be called as soon as it's added.\n\t\tAutoRender: true,\n\t\tAutoRenderOrdinal: 0,\n\n\t\tAutoSolveWithApp: true,\n\t\tAutoSolveOrdinal: 0,\n\n\t\tCSSHash: false,\n\t\tCSS: false,\n\t\tCSSProvider: false,\n\t\tCSSPriority: 500,\n\n\t\tTemplates: [],\n\n\t\tDefaultTemplates: [],\n\n\t\tRenderables: [],\n\n\t\tManifests: {}\n\t});\n\nclass PictView extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Intersect default options, parent constructor, service information\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictViewSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tif (!this.options.ViewIdentifier)\n\t\t{\n\t\t\tthis.options.ViewIdentifier = `AutoViewID-${this.fable.getUUID()}`;\n\t\t}\n\t\tthis.serviceType = 'PictView';\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict application state\n\t\tthis.AppData = this.pict.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastRenderedTimestamp = false;\n\t\tthis.lastMarshalFromViewTimestamp = false;\n\t\tthis.lastMarshalToViewTimestamp = false;\n\n\t\t// Load all templates from the array in the options\n\t\t// Templates are in the form of {Hash:'Some-Template-Hash',Template:'Template content',Source:'TemplateSource'}\n\t\tfor (let i = 0; i < this.options.Templates.length; i++)\n\t\t{\n\t\t\tlet tmpTemplate = this.options.Templates[i];\n\n\t\t\tif (!tmpTemplate.hasOwnProperty('Hash') || !tmpTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Template ${i} in the options array.`, tmpTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addTemplate(tmpTemplate.Hash, tmpTemplate.Template, tmpTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load all default templates from the array in the options\n\t\t// Templates are in the form of {Prefix:'',Postfix:'-List-Row',Template:'Template content',Source:'TemplateSourceString'}\n\t\tfor (let i = 0; i < this.options.DefaultTemplates.length; i++)\n\t\t{\n\t\t\tlet tmpDefaultTemplate = this.options.DefaultTemplates[i];\n\n\t\t\tif (!tmpDefaultTemplate.hasOwnProperty('Postfix') || !tmpDefaultTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Default Template ${i} in the options array.`, tmpDefaultTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpDefaultTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpDefaultTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addDefaultTemplate(tmpDefaultTemplate.Prefix, tmpDefaultTemplate.Postfix, tmpDefaultTemplate.Template, tmpDefaultTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load the CSS if it's available\n\t\tif (this.options.CSS)\n\t\t{\n\t\t\tlet tmpCSSHash = this.options.CSSHash ? this.options.CSSHash : `View-${this.options.ViewIdentifier}`;\n\t\t\tlet tmpCSSProvider = this.options.CSSProvider ? this.options.CSSProvider : tmpCSSHash;\n\t\t\tthis.pict.CSSMap.addCSS(tmpCSSHash, this.options.CSS, tmpCSSProvider, this.options.CSSPriority);\n\t\t}\n\n\t\t// Load all renderables\n\t\t// Renderables are launchable renderable instructions with templates\n\t\t// They look as such: {Identifier:'ContentEntry', TemplateHash:'Content-Entry-Section-Main', ContentDestinationAddress:'#ContentSection', RecordAddress:'AppData.Content.DefaultText', ManifestTransformation:'ManyfestHash', ManifestDestinationAddress:'AppData.Content.DataToTransformContent'}\n\t\t// The only parts that are necessary are Identifier and Template\n\t\t// A developer can then do render('ContentEntry') and it just kinda works.  Or they can override the ContentDestinationAddress\n\t\tthis.renderables = {};\n\t\tfor (let i = 0; i < this.options.Renderables.length; i++)\n\t\t{\n\t\t\tlet tmpRenderable = this.options.Renderables[i];\n\t\t\tthis.addRenderable(this.options.Renderables[i]);\n\t\t}\n\t}\n\n\taddRenderable(pRenderableHash, pTemplateHash, pDefaultTemplateDataAddress, pDefaultDestinationAddress, pRenderMethod)\n\t{\n\t\tlet tmpRenderable = false;\n\n\t\tif (typeof(pRenderableHash) == 'object')\n\t\t{\n\t\t\t// The developer passed in the renderable as an object.\n\t\t\t// Use theirs instead!\n\t\t\ttmpRenderable = pRenderableHash;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpRenderMethod = (typeof(pRenderMethod) !== 'string') ? pRenderMethod : 'replace';\n\t\t\ttmpRenderable = (\n\t\t\t\t{\n\t\t\t\t\tRenderableHash: pRenderableHash,\n\t\t\t\t\tTemplateHash: pTemplateHash,\n\t\t\t\t\tDefaultTemplateDataAddress: pDefaultTemplateDataAddress,\n\t\t\t\t\tDefaultDestinationAddress: pDefaultDestinationAddress,\n\t\t\t\t\tRenderMethod: tmpRenderMethod\n\t\t\t\t});\n\t\t}\n\n\t\tif ((typeof(tmpRenderable.RenderableHash) != 'string') || (typeof(tmpRenderable.TemplateHash) != 'string'))\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Renderable; RenderableHash or TemplateHash are invalid.`, tmpRenderable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} adding renderable [${tmpRenderable.RenderableHash}] pointed to template ${tmpRenderable.TemplateHash}.`);\n\t\t\t}\n\n\t\t\tthis.renderables[tmpRenderable.RenderableHash] = tmpRenderable;\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                        Code Section: Initialization                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\tthis.onAfterInitialize();\n\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallback)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallback();\n\t\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Render                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeRender(pRenderable, pRenderDestinationAddress, pData)\n\t{\n\t\t// Overload this to mess with stuff before the content gets generated from the template\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeRenderAsync(pRenderable, pRenderDestinationAddress, pData, fCallback)\n\t{\n\t\tthis.onBeforeRender(pRenderable, pRenderDestinationAddress, pData);\n\t\treturn fCallback();\n\t}\n\n\trender(pRenderable, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it is not a valid renderable.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\tlet tmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\t// Generate the content output from the template and data\n\t\tlet tmpContent = this.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData)\n\n\t\t// Assign the content to the destination address\n\t\tswitch(tmpRenderable.RenderMethod)\n\t\t{\n\t\t\tcase 'append':\n\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'prepend':\n\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'append_once':\n\t\t\t\t// Try to find the content in the destination address\n\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t{\n\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\t}\n\t\t\tcase 'replace':\n\t\t\tdefault:\n\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Execute the developer-overridable post-render behavior\n\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, tmpContent)\n\n\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\treturn true;\n\t}\n\trenderAsync(pRenderable, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`));\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`));\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn fCallback(Error(`Could not render ${tmpRenderableHash}`));\n\t\t}\n\n\t\tlet tmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\tlet tmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\t// Render the template (asynchronously)\n\t\tthis.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData,\n\t\t\t(pError, pContent) =>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render (asynchronously) ${tmpRenderableHash} (param ${pRenderable}) because it did not parse the template.`, pError);\n\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t}\n\n\t\t\t\t// Assign the content to the destination address\n\t\t\t\tswitch(tmpRenderable.RenderMethod)\n\t\t\t\t{\n\t\t\t\t\tcase 'append':\n\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'prepend':\n\t\t\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'append_once':\n\t\t\t\t\t\t// Try to find the content in the destination address\n\t\t\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'replace':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Execute the developer-overridable post-render behavior\n\t\t\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, pContent)\n\n\t\t\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\t\t\treturn fCallback(null, pContent);\n\t\t\t});\n\t}\n\n\tonAfterRender()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterRenderAsync(fCallback)\n\t{\n\t\tthis.onAfterRender();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Solver                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal From View                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalFromView();\n\t\tthis.onMarshalFromView();\n\t\tthis.onAfterMarshalFromView();\n\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalFromViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal To View                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalToView();\n\t\tthis.onMarshalToView();\n\t\tthis.onAfterMarshalToView();\n\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalToViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToView();\n\t\treturn fCallback();\n\t}\n}\n\nmodule.exports = PictView;","/**\n* Precedent Meta-Templating\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Process text streams, parsing out meta-template expressions.\n*/\nvar libWordTree = require(`./WordTree.js`);\nvar libStringParser = require(`./StringParser.js`);\n\nclass Precedent\n{\n\t/**\n\t * Precedent Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser();\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData);\n\t}\n}\n\nmodule.exports = Precedent;\n","/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t */\n\tparseString (pString, pParseTree, pData)\n\t{\n\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\tfor (var i = 0; i < pString.length; i++)\n\t\t{\n\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData);\n\t\t}\n\n\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\treturn tmpParserState.Output;\n\t}\n}\n\nmodule.exports = StringParser;\n","/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*! simple-concat. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function (stream, cb) {\n  var chunks = []\n  stream.on('data', function (chunk) {\n    chunks.push(chunk)\n  })\n  stream.once('end', function () {\n    if (cb) cb(null, Buffer.concat(chunks))\n    cb = null\n  })\n  stream.once('error', function (err) {\n    if (cb) cb(err)\n    cb = null\n  })\n}\n","/*! simple-get. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const originalHost = opts.hostname // hostname before potential redirect\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api\n      // If redirected host is different than original host, drop headers to prevent cookie leak (#73)\n      if (redirectHost !== null && redirectHost !== originalHost) {\n        delete opts.headers.cookie\n        delete opts.headers.authorization\n      }\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst defaultConfiguration = (\n\t{\n\t\t// This is the address for the <script /> tag that contains the CSS.\n\t\tCSSElementAddress: '#PICT-CSS'\n\t}\n)\n\nclass PictCSS extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\t// No merging of options necessary\n\t\tif (typeof(this.options.CSSElementAddress) === 'undefined')\n\t\t{\n\t\t\tthis.options.CSSElementAddress = defaultConfiguration.CSSElementAddress;\n\t\t}\n\n\t\tthis.inlineCSSMap = {};\n\t}\n\n\t// Add a CSS fragment to the CSS map (each view can have its own CSS fragment)\n\t// Hash is shared across all views, so if 10 views all load the \"My-Table-View\" fragment, it will only be loaded once.\n\taddCSS(pHash, pContent, pPriority, pProvider)\n\t{\n\t\tlet tmpPriority = (typeof(pPriority) !== 'undefined') ? pPriority : 1000;\n\t\tlet tmpProvidor = (typeof(pProvider) === 'string') ? pProvider : 'Unknown';\n\t\tthis.inlineCSSMap[pHash] = { Hash: pHash, Content: pContent, Provider: tmpProvidor, Priority:tmpPriority };\n\t}\n\n\tremoveCSS(pHash)\n\t{\n\t\tdelete this.inlineCSSMap[pHash];\n\t}\n\n\tgenerateCSS()\n\t{\n\t\tlet tmpCSS = '';\n\t\tlet tmpCSSHashes = Object.keys(this.inlineCSSMap);\n\t\t// Sort the hashes by Priority\n\t\ttmpCSSHashes.sort((a, b) => { return this.inlineCSSMap[a].Priority - this.inlineCSSMap[b].Priority; });\n\t\tfor (let i = 0; i < tmpCSSHashes.length; i++)\n\t\t{\n\t\t\tlet tmpCSSFragment = this.inlineCSSMap[tmpCSSHashes[i]];\n\t\t\tlet tmpCSSComment = tmpCSSFragment.Hash;\n\t\t\tif (tmpCSSFragment.Hash != tmpCSSFragment.Provider)\n\t\t\t{\n\t\t\t\ttmpCSSComment = `${tmpCSSComment} from ${tmpCSSFragment.Provider}`;\n\t\t\t}\n\t\t\ttmpCSS += `/* ${tmpCSSComment} */\\n${tmpCSSFragment.Content}\\n`;\n\t\t}\n\t\treturn tmpCSS;\n\t}\n\n\t// Inject the CSS into the magic DOM element for it\n\tinjectCSS()\n\t{\n\t\tthis.services.ContentAssignment.assignContent(this.options.CSSElementAddress, this.generateCSS());\n\t}\n}\n\nmodule.exports = PictCSS;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictContentAssignment extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictContentAssignment';\n\n\t\t// Check to see if we are running in a browser\n\t\tthis.inBrowser = false;\n\t\tthis.hasDocument = false;\n\t\tif (typeof (window) == 'object')\n\t\t{\n\t\t\tthis.inBrowser = true;\n\t\t\t// Now check that the browser has a document object\n\t\t\tif ((typeof (window.document) != 'undefined') && (typeof (window.document.querySelectorAll) == 'function'))\n\t\t\t{\n\t\t\t\tthis.hasDocument = true;\n\t\t\t}\n\t\t}\n\n\t\t// If we're in a browser, check to see if jQuery is available.\n\t\tthis.hasJquery = false;\n\t\tthis.jQuery = false;\n\t\tif (this.inBrowser && typeof (window.jQuery) !== 'undefined')\n\t\t{\n\t\t\tthis.hasJquery = true;\n\t\t}\n\n\t\t// API Consumers can craft their own assign function\n\t\tthis.customAssignFunction = false;\n\t\t// API Consumers can also craft their own prepend function\n\t\tthis.customPrependFunction = false;\n\t\t// API Consumers can also craft their own append function\n\t\tthis.customAppendFunction = false;\n\n\t\t// API Consumers can also craft their own read function\n\t\tthis.customReadFunction = false;\n\t\t// API Consumers can even craft their own get element function.\n\t\tthis.customGetElementFunction = false;\n\n\n\t}\n\n\tgetElement(pAddress)\n\t{\n\t\tif (this.customGetElementFunction)\n\t\t{\n\t\t\treturn this.customGetElementFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpElements = window.jQuery(pAddress);\n\t\t\tif (tmpElements.length == 0)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// TODO: This isn't the most efficient method, but it is the most compatible.\n\t\t\t\tlet tmpElementSet = [];\n\t\t\t\tfor (let i = 0; i < tmpElements.length; i++)\n\t\t\t\t{\n\t\t\t\t\ttmpElementSet.push(tmpElements[0]);\n\t\t\t\t}\n\t\t\t\treturn tmpElementSet;\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\treturn window.document.querySelectorAll(pAddress);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content GET ELEMENT for [${pAddress}] will return empty because none of the browser methods are available`);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tassignContent(pAddress, pContent)\n\t{\n\t\tif (this.customAssignFunction)\n\t\t{\n\t\t\treturn this.customAssignFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\n\t\t\t// Should we ensure we matched 1 and exactly 1 element?\n\t\t\t//if (tmpTargetElement && tmpTargetElement.length == 1)\n\t\t\t//{\n\t\t\t// Set the content\n\t\t\ttmpTargetElement.html(pContent);\n\t\t\t//}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'BUTTON':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\tcase 'A':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content ASSIGN to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tappendContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customAppendFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.append(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"beforeend\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content APPEND to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tprependContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customPrependFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.prepend(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"afterbegin\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content PREPEND in [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\treadContent(pAddress)\n\t{\n\t\tif (this.customReadFunction)\n\t\t{\n\t\t\treturn this.customReadFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\treturn tmpTargetElement.html();\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tif (tmpTargetElementSet.length < 1)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse if (tmpTargetElementSet.length == 1)\n\t\t\t{\n\t\t\t\tif ((tmpTargetElementSet[0].tagName == 'INPUT') || (tmpTargetElementSet[0].tagName == 'TEXTAREA'))\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].value;\n\t\t\t\t}\n\t\t\t\telse if (tmpTargetElementSet[0].tagName == 'SCRIPT')\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].text;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].innerHTML;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content READ from [${pAddress}]...`);\n\t\t\treturn '';\n\t\t}\n\t}\n\n\n\taddClass(pAddress, pClass)\n\t{\n\t\tif (this.customAddClassFunction)\n\t\t{\n\t\t\treturn this.customAddClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.addClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.add(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content ADDCLASS to [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\tremoveClass(pAddress, pClass)\n\t{\n\t\tif (this.customRemoveClassFunction)\n\t\t{\n\t\t\treturn this.customRemoveClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.remove(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVECLASS from [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\ttoggleClass(pAddress, pClass)\n\t{\n\t\t// STUB\n\t}\n\n\thasClass(pAddress, pClass)\n\t{\n\t\t// STUB\n\t}\n\n}\n\nmodule.exports = PictContentAssignment;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictDataProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictDataProvider';\n\t}\n\n    getDataByAddress(pAddress, pData)\n    {\n        let tmpData = (typeof(pData) === 'undefined') ? {} : pData;\n\n        return this.fable.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, pAddress);\n    }\n}\n\nmodule.exports = PictDataProvider;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictMeadowEntityProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictMeadowProvider';\n\n\t\tif (this.fable.settings.PictDefaultURLPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = this.fable.settings.PictDefaultURLPrefix;\n\t\t}\n\t\telse if (!this.options.urlPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = '/1.0/';\n\t\t}\n\n\t\tif (this.fable.settings.PictDefaultDownloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = this.fable.settings.PictDefaultDownloadBatchSize;\n\t\t}\n\t\telse if (!this.options.downloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = 100;\n\t\t}\n\n\t\tthis.restClient = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('RestClient');\n\n\t\tthis.cache = {};\n\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tinitializeCache(pEntity)\n\t{\n\t\t// This should not be happening as often as it's happening.\n\t\tif (!this.cache.hasOwnProperty(pEntity))\n\t\t{\n\t\t\tthis.cache[pEntity] = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('ObjectCache');\n\t\t\t// TODO: Make this a configuration?\n\t\t\t// For now cache for 30 seconds.\n\t\t\tthis.cache[pEntity].maxAge = 30000;\n\t\t\tthis.cache[pEntity].maxLength = 10000;\n\n\t\t\tthis.fable.Bundle[pEntity] = this.cache[pEntity].RecordMap;\n\t\t}\n\t}\n\n\tgetEntity (pEntity, pIDRecord, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tlet tmpPossibleRecord = this.cache[pEntity].read(pIDRecord);\n\n\t\t\t\tif (tmpPossibleRecord)\n\t\t\t\t{\n\t\t\t\t\treturn tmpPossibleRecord;\n\t\t\t\t}\n\n\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}/${pIDRecord}`\n\t\t\t\t\t});\n\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pBody)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.cache[pEntity].put(pBody, pIDRecord);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pBody);\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tgetEntitySet = function (pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// TODO: Should we test for too many record IDs here by string length?\n\t\t// FBL~ID${pDestinationEntity}~INN~${tmpIDRecordsCommaSeparated}\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tlet tmpCountOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}s/Count/FilteredTo/${pMeadowFilterExpression}`\n\t\t\t\t\t});\n\t\t\t\ttmpCountOptions = this.prepareRequestOptions(tmpCountOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpCountOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Error getting bulk entity count of [${pEntity}] filtered to [${pMeadowFilterExpression}] from server [${tmpCountOptions.url}]: ${pError}`);\n\t\t\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet tmpRecordCount = 0;\n\t\t\t\t\t\tif (pBody.Count)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpRecordCount = pBody.Count;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpDownloadURIFragments = [];\n\t\t\t\t\t\tlet tmpDownloadBatchSize = this.options.downloadBatchSize;\n\t\t\t\t\t\tfor (let i = 0; i < (tmpRecordCount / tmpDownloadBatchSize); i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Generate each of the URI fragments to download\n\t\t\t\t\t\t\ttmpDownloadURIFragments.push(`${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${i*tmpDownloadBatchSize}/${tmpDownloadBatchSize}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpEntitySet = [];\n\t\t\t\t\t\t// Now run these in series (it's possible to parallelize but no reason to)\n\t\t\t\t\t\tthis.fable.Utility.eachLimit(tmpDownloadURIFragments, 1,\n\t\t\t\t\t\t\t(pURIFragment, fDownloadCallback)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\turl: `${this.options.urlPrefix}${pURIFragment}`\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\t\t\t\t\tthis.restClient.getJSON(pURIFragment,\n\t\t\t\t\t\t\t\t\t(pDownloadError, pDownloadResponse, pDownloadBody)=>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmpEntitySet = tmpEntitySet.concat(pDownloadBody);\n\t\t\t\t\t\t\t\t\t\t// Should we be caching each record?\n\t\t\t\t\t\t\t\t\t\treturn fDownloadCallback(pDownloadError);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(pFullDownloadError)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(pFullDownloadError, tmpEntitySet);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t});\n\t}\n}\n\nmodule.exports = PictMeadowEntityProvider;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictTemplateProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictTemplateProvider';\n\n        this.templates = {};\n        this.templateSources = {};\n\n        // Default templates are stored by prefix.\n        // The longest prefix match is used.\n        // Case sensitive.\n        this.defaultTemplates = [];\n\n        // This function can be overloaded to load templates from a database, in a page or other source.\n        this.loadTemplateFunction = (pTemplateHash) => { return false; };\n\t}\n\n    addTemplate(pTemplateHash, pTemplate, pTemplateSource)\n    {\n        this.templates[pTemplateHash] = pTemplate;\n\n        if (typeof(pTemplateSource) == 'string')\n        {\n            this.templateSources[pTemplateHash] = pTemplateSource;\n        }\n        else\n        {\n            this.templateSources[pTemplateHash] = `Direct addTemplate('${pTemplateHash}') function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`;\n        }\n    }\n\n    addDefaultTemplate(pPrefix, pPostfix, pTemplate, pSource)\n    {\n        let tmpSource = (typeof(pSource) == 'string') ? pSource : `Direct addDefaultTemplate('${pPrefix}','${pPostfix}',..) function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`\n        let tmpDefaultTemplate = {\n            prefix: pPrefix,\n            postfix: pPostfix,\n            template: pTemplate,\n            source: tmpSource\n        };\n        if (typeof(pTemplate) != 'string')\n        {\n            this.log.error('PictTemplateProvider.addDefaultTemplate: pTemplate is not a string.');\n        }\n        this.defaultTemplates.push(tmpDefaultTemplate);\n    }\n\n    checkDefaultTemplateHash(pTemplateHash)\n    {\n        /*\n         * Default templates are managed by postfix and prefix.  The use case is things like titles, headers, list \n         * wrappers, rows, etc.\n         *\n         * So we might have a default template for a list wrapper and it should expect \"-ListWrap\" as the postfix.\n         * And we might have a default template for a list row and it should expect \"-ListRow\" as the postfix.\n         * The list might have a \"-ListTitle\", or we might have shared titles and it would just be \"-Title\".\n         * \n         * The idea is to allow fallbacks on defaults.\n         */\n        for (let i = 0; i < this.defaultTemplates.length; i++)\n        {\n            if ((pTemplateHash.indexOf(this.defaultTemplates[i].postfix) == pTemplateHash.length - this.defaultTemplates[i].postfix.length)\n                && (pTemplateHash.indexOf(this.defaultTemplates[i].prefix) == 0))\n            {\n                this.templates[pTemplateHash] = this.defaultTemplates[i].template;\n                this.templateSources[pTemplateHash] = `Auto created in checkDefaultTemplateHash('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${this.defaultTemplates[i].prefix}]...[${this.defaultTemplates[i].postfix}]`;\n                return this.templates[pTemplateHash];\n            }\n        }\n        return false;\n    }\n\n    getTemplate(pTemplateHash)\n    {\n        // TODO: Optimize this.\n        // If the template doesn't exist, try to load it with the loading function\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.loadTemplate(pTemplateHash);\n        }\n        // If the loading function fails, try to load it from the default templates\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.checkDefaultTemplateHash(pTemplateHash);\n        }\n        if (this.templates.hasOwnProperty(pTemplateHash))\n        {\n            return this.templates[pTemplateHash];\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    loadTemplate(pTemplateHash)\n    {\n        let tmpTemplate = this.loadTemplateFunction(pTemplateHash);\n\n        if (tmpTemplate)\n        {\n            this.templates[pTemplateHash] = tmpTemplate.template;\n            this.templateSources[pTemplateHash] = `Loaded in loadTemplate('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${tmpTemplate.source}]`;\n\n        }\n\n        return tmpTemplate;\n    }\n}\n\nmodule.exports = PictTemplateProvider;","/**\n* @author <steven@velozo.com>\n*/\nconst libFable = require('fable');\n\nclass Pict extends libFable\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\tthis.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n\n\t\t// The templateProvider provides a basic key->template mapping with default fallback capabilities\n\t\tthis.serviceManager.addAndInstantiateServiceType('TemplateProvider', require('./Pict-Template-Provider.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('EntityProvider',  require('./Pict-Meadow-EntityProvider.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('DataProvider',  require('./Pict-DataProvider.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('ContentAssignment',  require('./Pict-Content-Assignment.js'));\n\t\tthis.serviceManager.addAndInstantiateServiceType('CSSMap', require('./Pict-CSS.js'));\n\n\t\tthis.serviceManager.instantiateServiceProvider('MetaTemplate');\n\t\tthis.serviceManager.instantiateServiceProvider('DataGeneration');\n\n\t\tthis.manifest = this.serviceManager.instantiateServiceProvider('Manifest');\n\n\t\tthis.AppData = {};\n\t\tthis.Bundle = {};\n\n\t\t// Log noisness goes from 0 - 5, where 5 is show me everything.\n\t\tthis.LogNoisiness = 0;\n\n\t\t// Load manifest sets\n\t\tif (this.settings.Manifests)\n\t\t{\n\t\t\tthis.loadManifestSet(this.settings.Manifests);\n\t\t}\n\n\t\tthis._DefaultPictTemplatesInitialized = false;\n\t\tthis.initializePictTemplateEngine();\n\n\t\tthis.serviceManager.addServiceType('PictView',  require('pict-view'));\n\t\tthis.serviceManager.addServiceType('PictApplication',  require('pict-application'));\n\n\t\t// Expose the named views directly, through a convenience accessor\n\t\tthis.views = this.serviceManager.servicesMap.PictView;\n\t}\n\n\t// Load manifests in as Hashed services\n\tloadManifestSet (pManifestSet)\n\t{\n\t\tif (typeof(pManifestSet) != 'object')\n\t\t{\n\t\t\tthis.log.warn(`PICT [${this.UUID}] could not load Manifest Set; pManifestSet was not an object.`);\n\t\t\treturn false;\n\t\t}\n\t\tlet tmpManifestKeys = Object.keys(pManifestSet);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++ )\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.serviceManager.instantiateServiceProvider('Manifest', pManifestSet[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddView(pViewHash, pOptions, pViewPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpViewHash = (typeof(pViewHash) == 'string') ? pViewHash : this.fable.getUUID();\n\n\t\tif (typeof(pViewPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pViewPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pViewPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\t\t\treturn this.serviceManager.instantiateServiceProviderFromPrototype('PictView', tmpOptions, tmpViewHash, pViewPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.serviceManager.instantiateServiceProvider('PictView', tmpOptions, tmpViewHash);\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddApplication(pApplicationHash, pOptions, pApplicationPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpApplicationHash = (typeof(pApplicationHash) == 'string') ? pApplicationHash : this.fable.getUUID();\n\n\t\tif (typeof(pApplicationPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pApplicationPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pApplicationPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\n\t\t\treturn this.serviceManager.instantiateServiceProviderFromPrototype('PictApplication', tmpOptions, tmpApplicationHash, pApplicationPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.serviceManager.instantiateServiceProvider('PictApplication', tmpOptions, tmpApplicationHash);\n\t\t}\n\t}\n\n\tinitializePictTemplateEngine()\n\t{\n\t\t/*\n\t\t *\n\t\t * To stave off madness, these are inefficient for now.  The wkhtmltopdf renderer leaves much to be desired\n\t\t * in the way of feedback with regards to javascript compatibility.\n\t\t *\n\t\t */\n\t\tif (!this._DefaultPictTemplatesInitialized)\n\t\t{\n\t\t\t// Expects one of the following:\n\t\t\t// \t\t{~Entity:Book:1~}\n\t\t\t//          ...meaning GET BOOK 1\n\t\t\t// \t\t{~Entity:Book:AppData.Some.Address.IDBook~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook\n\t\t\t// \t\t{~E:Book:AppData.Some.Address.IDBook:Render-Book-Template~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook and render it to Render-Book-Template\n\t\t\tlet fEntityRender = (pHash, pData, fCallback) =>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpEntity = false;\n\t\t\t\t\tlet tmpEntityID = false;\n\t\t\t\t\tlet tmpEntityTemplate = false;\n\n\t\t\t\t\t// This expression requires 2 parts -- a third is optional, and, if present, is the template to render to.\n\t\t\t\t\tlet tmpHashSeparator = tmpHash.indexOf('|');\n\n\t\t\t\t\tif (tmpHashSeparator < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\t\tlet tmpHashEntitySeparator = tmpHash.indexOf(':');\n\t\t\t\t\t\ttmpEntity = tmpHash.substring(0, tmpHashEntitySeparator);\n\t\t\t\t\t\ttmpEntityID = tmpHash.substring(tmpHashEntitySeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is a 3 part hash (the entity, the ID, and the template)\n\t\t\t\t\t\tlet tmpHashEntitySeparator = tmpHash.indexOf(':');\n\t\t\t\t\t\ttmpEntity = tmpHash.substring(0, tmpHashEntitySeparator);\n\n\t\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf('|');\n\t\t\t\t\t\ttmpEntityID = tmpHash.substring(tmpHashEntitySeparator + 1, tmpHashTemplateSeparator);\n\n\t\t\t\t\t\ttmpEntityTemplate = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isNaN(tmpEntityID))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpEntityID = parseInt(tmpEntityID);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is an address, so we need to get the value at the address\n\t\t\t\t\t\ttmpEntityID = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpEntityID);\n\t\t\t\t\t}\n\n\t\t\t\t\t// No Entity or EntityID\n\t\t\t\t\tif (!tmpEntity || !tmpEntityID)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to get the entity\n\t\t\t\t\tthis.EntityProvider.getEntity(tmpEntity, tmpEntityID,\n\t\t\t\t\t\t(pError, pRecord) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Pict: Entity Render: Error getting entity [${tmpEntity}] with ID [${tmpEntityID}] for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\t\t\treturn fCallback(pError, '');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Now render the template\n\t\t\t\t\t\t\tif (tmpEntityTemplate)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(null, this.parseTemplateByHash(tmpEntityTemplate, pRecord));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternAsync('{~E:', '~}', fEntityRender);\n\t\t\tthis.MetaTemplate.addPatternAsync('{~Entity:', '~}', fEntityRender);\n\n\t\t\t// {NE~Some.Address|If the left value is truthy, render this value.~}\n\t\t\tlet fNotEmptyRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Should switch this to indexOf so pipes can be in the content.\n\t\t\t\t\tlet tmpHashParts = tmpHash.split('|');\n\n\t\t\t\t\t// For now just check truthiness\n\t\t\t\t\tif (this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHashParts[0]))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpHashParts[1];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~NotEmpty:', '~}', fNotEmptyRender);\n\t\t\tthis.MetaTemplate.addPattern('{~NE:', '~}', fNotEmptyRender);\n\n\t\t\t// {~T:Template:AddressOfData~}\n\t\t\tlet fTemplateRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~T:', '~}', fTemplateRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Template:', '~}', fTemplateRender);\n\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~TS:', '~}', fTemplateSetRender);\n\t\t\tthis.MetaTemplate.addPattern('{~TemplateSet:', '~}', fTemplateSetRender);\n\n\t\t\t//{~Data:AppData.Some.Value.to.Render~}\n\t\t\tlet fDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn tmpValue;\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~D:', '~}', fDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Data:', '~}', fDataRender);\n\n\t\t\tthis.MetaTemplate.addPattern('{~Dollars:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterDollars(tmpColumnData);\n\t\t\t\t});\n\t\t\tthis.MetaTemplate.addPattern('{~Digits:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterAddCommasToNumber(this.DataFormat.formatterRoundNumber(tmpColumnData, 2));\n\t\t\t\t});\n\n\t\t\tlet fRandomNumberString = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumberString]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpStringLength = 4;\n\t\t\t\t\tlet tmpMaxNumber = 9999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpStringLength = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomNumericString(tmpStringLength, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumberString:', '~}',fRandomNumberString);\n\t\t\tthis.MetaTemplate.addPattern('{~RNS:', '~}',fRandomNumberString);\n\n\t\t\tlet fRandomNumber = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumber]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpMinimumNumber = 0;\n\t\t\t\t\tlet tmpMaxNumber = 9999999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMinimumNumber = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomIntegerBetween(tmpMinimumNumber, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumber:', '~}',fRandomNumber);\n\t\t\tthis.MetaTemplate.addPattern('{~RN:', '~}',fRandomNumber);\n\n\t\t\tlet fPascalCaseIdentifier = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn this.DataFormat.cleanNonAlphaCharacters(this.DataFormat.capitalizeEachWord(tmpValue));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~PascalCaseIdentifier:', '~}',fPascalCaseIdentifier);\n\n\t\t\tlet fLogValue = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tlet tmpValueType = typeof(tmpValue);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValueType == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is ${tmpValueType}.`);\n\t\t\t\t\t}\n\t\t\t\t\telse if (tmpValueType == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is an obect.`, tmpValue);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] if a ${tmpValueType} = [${tmpValue}]`);\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogValue:', '~}',fLogValue);\n\t\t\tthis.MetaTemplate.addPattern('{~LV:', '~}',fLogValue);\n\n\n\t\t\tlet fLogStatement = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tthis.log.trace(`PICT Template Log Message: ${tmpHash}`);\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogStatement:', '~}',fLogStatement);\n\t\t\tthis.MetaTemplate.addPattern('{~LS:', '~}',fLogStatement);\n\n\t\t\tlet fBreakpoint = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpError = new Error(`PICT Template Breakpoint: ${tmpHash}`);\n\t\t\t\t\tthis.log.trace(`PICT Template Breakpoint: ${tmpHash}`, tmpError.stack);\n\t\t\t\t\tdebugger;\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~Breakpoint', '~}',fBreakpoint);\n\n\t\t\tthis._DefaultPictTemplatesInitialized = true;\n\t\t}\n\t}\n\n\tparseTemplate (pTemplateString, pData, fCallback)\n\t{\n\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\treturn this.MetaTemplate.parseString(pTemplateString, tmpData, fCallback);\n\t}\n\n\tparseTemplateByHash (pTemplateHash, pData, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn this.parseTemplate(tmpTemplateString, pData, fCallback);\n\t}\n\n\tparseTemplateSet (pTemplateString, pDataSet, fCallback)\n\t{\n\t\t// TODO: This will need streaming -- for now janky old string append does the trick\n\t\tlet tmpValue = '';\n\t\tif (typeof(fCallback) == 'function')\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tthis.Utility.eachLimit(pDataSet, 1,\n\t\t\t\t\t(pRecord, fRecordTemplateCallback)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplate(pTemplateString, pRecord,\n\t\t\t\t\t\t\t(pError, pTemplateResult)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValue += pTemplateResult;\n\t\t\t\t\t\t\t\treturn fRecordTemplateCallback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t(pError)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fCallback(pError, tmpValue);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn fCallback(Error('Pict: Template Set: pDataSet is not an array or object.'), '');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tif (Array.isArray(pDataSet))\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < pDataSet.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpKeys = Object.keys(pDataSet);\n\t\t\t\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[tmpKeys[i]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpValue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\tparseTemplateSetByHash (pTemplateHash, pDataSet, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn this.parseTemplateSet(tmpTemplateString, pDataSet, fCallback);\n\t}\n};\n\nmodule.exports = Pict;\n\nmodule.exports.PictApplicationClass = require('pict-application');\nmodule.exports.PictViewClass = require('pict-view');\n\nmodule.exports.EnvironmentLog = require('./environments/Pict-Environment-Log.js');\n\n// This is to help understand the type of enivironement we're executing in\nmodule.exports.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");","/**\n* Pict browser shim loader\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\n\nclass PictEnvironmentLog\n{\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\t}\n\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\tcustomGetElementFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\tcustomReadFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\tcustomAppendFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\tcustomPrependFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomAssignFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Assign.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n}\n\nmodule.exports = PictEnvironmentLog;"]}