{"version":3,"sources":["pict.min.js","node_modules/browser-pack/_prelude.js","node_modules/async.eachlimit/index.js","node_modules/async.iterator/index.js","node_modules/async.util.eachoflimit/index.js","node_modules/async.util.ensureasync/index.js","node_modules/async.util.isarray/index.js","node_modules/async.util.isarraylike/index.js","node_modules/async.util.keyiterator/index.js","node_modules/async.util.keys/index.js","node_modules/async.util.noop/index.js","node_modules/async.util.once/index.js","node_modules/async.util.onlyonce/index.js","node_modules/async.util.restparam/index.js","node_modules/async.util.setimmediate/index.js","node_modules/async.util.withoutindex/index.js","node_modules/async.waterfall/index.js","node_modules/base64-js/index.js","node_modules/big.js/big.js","node_modules/buffer/index.js","node_modules/builtin-status-codes/browser.js","node_modules/cachetrax/source/CacheTrax.js","node_modules/cachetrax/source/LinkedList-Node.js","node_modules/cachetrax/source/LinkedList.js","node_modules/call-bind/callBound.js","node_modules/call-bind/index.js","node_modules/cookie/index.js","node_modules/dayjs/dayjs.min.js","node_modules/dayjs/plugin/advancedFormat.js","node_modules/dayjs/plugin/isoWeek.js","node_modules/dayjs/plugin/relativeTime.js","node_modules/dayjs/plugin/timezone.js","node_modules/dayjs/plugin/utc.js","node_modules/dayjs/plugin/weekOfYear.js","node_modules/dayjs/plugin/weekday.js","node_modules/events/events.js","node_modules/fable-log/source/Fable-Log-BaseLogger.js","node_modules/fable-log/source/Fable-Log-DefaultProviders-Web.js","node_modules/fable-log/source/Fable-Log-DefaultStreams.json","node_modules/fable-log/source/Fable-Log-Logger-Console.js","node_modules/fable-log/source/Fable-Log-Logger-SimpleFlatFile.js","node_modules/fable-log/source/Fable-Log.js","node_modules/fable-serviceproviderbase/source/Fable-ServiceProviderBase.js","node_modules/fable-settings/source/Fable-Settings-Default.json","node_modules/fable-settings/source/Fable-Settings-TemplateProcessor.js","node_modules/fable-settings/source/Fable-Settings.js","node_modules/fable-uuid/source/Fable-UUID-Random-Browser.js","node_modules/fable-uuid/source/Fable-UUID.js","node_modules/fable/source/Fable.js","node_modules/fable/source/services/Fable-Service-Anticipate.js","node_modules/fable/source/services/Fable-Service-CSVParser.js","node_modules/fable/source/services/Fable-Service-DataFormat.js","node_modules/fable/source/services/Fable-Service-DataGeneration-DefaultValues.json","node_modules/fable/source/services/Fable-Service-DataGeneration.js","node_modules/fable/source/services/Fable-Service-DateManipulation.js","node_modules/fable/source/services/Fable-Service-EnvironmentData.js","node_modules/fable/source/services/Fable-Service-FilePersistence.js","node_modules/fable/source/services/Fable-Service-MetaTemplate.js","node_modules/fable/source/services/Fable-Service-MetaTemplate/MetaTemplate-StringParser.js","node_modules/fable/source/services/Fable-Service-MetaTemplate/MetaTemplate-WordTree.js","node_modules/fable/source/services/Fable-Service-Operation-DefaultSettings.js","node_modules/fable/source/services/Fable-Service-Operation.js","node_modules/fable/source/services/Fable-Service-RestClient.js","node_modules/fable/source/services/Fable-Service-Template.js","node_modules/fable/source/services/Fable-Service-Utility.js","node_modules/function-bind/implementation.js","node_modules/function-bind/index.js","node_modules/get-intrinsic/index.js","node_modules/has-proto/index.js","node_modules/has-symbols/index.js","node_modules/has-symbols/shams.js","node_modules/has/src/index.js","node_modules/https-browserify/index.js","node_modules/ieee754/index.js","node_modules/inherits/inherits_browser.js","node_modules/manyfest/source/Manyfest-CleanWrapCharacters.js","node_modules/manyfest/source/Manyfest-HashTranslation.js","node_modules/manyfest/source/Manyfest-LogToConsole.js","node_modules/manyfest/source/Manyfest-ObjectAddress-CheckAddressExists.js","node_modules/manyfest/source/Manyfest-ObjectAddress-DeleteValue.js","node_modules/manyfest/source/Manyfest-ObjectAddress-GetValue.js","node_modules/manyfest/source/Manyfest-ObjectAddress-SetValue.js","node_modules/manyfest/source/Manyfest-ObjectAddressGeneration.js","node_modules/manyfest/source/Manyfest-ParseConditionals.js","node_modules/manyfest/source/Manyfest-SchemaManipulation.js","node_modules/manyfest/source/Manyfest.js","node_modules/object-inspect/index.js","node_modules/once/once.js","node_modules/path-browserify/index.js","node_modules/pict-application/source/Pict-Application.js","node_modules/pict-view/source/Pict-View.js","node_modules/precedent/source/Precedent.js","node_modules/precedent/source/StringParser.js","node_modules/precedent/source/WordTree.js","node_modules/process/browser.js","node_modules/punycode/punycode.js","node_modules/qs/lib/formats.js","node_modules/qs/lib/index.js","node_modules/qs/lib/parse.js","node_modules/qs/lib/stringify.js","node_modules/qs/lib/utils.js","node_modules/querystring-es3/decode.js","node_modules/querystring-es3/encode.js","node_modules/querystring-es3/index.js","node_modules/safe-buffer/index.js","node_modules/side-channel/index.js","node_modules/simple-concat/index.js","node_modules/simple-get/index.js","node_modules/stream-http/index.js","node_modules/stream-http/lib/capability.js","node_modules/stream-http/lib/request.js","node_modules/stream-http/lib/response.js","node_modules/stream-http/node_modules/readable-stream/errors-browser.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/async_iterator.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/buffer_list.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/from-browser.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/pipeline.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/state.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/stream-http/node_modules/readable-stream/readable-browser.js","node_modules/string_decoder/lib/string_decoder.js","node_modules/timers-browserify/main.js","node_modules/url/url.js","node_modules/util-deprecate/browser.js","node_modules/wrappy/wrappy.js","node_modules/xtend/immutable.js","source/Pict-CSS.js","source/Pict-Content-Assignment.js","source/Pict-DataProvider.js","source/Pict-Meadow-EntityProvider.js","source/Pict-Template-Provider.js","source/Pict.js","source/environments/Pict-Environment-Log.js"],"names":["_defineProperty2","obj","key","value","_toPropertyKey2","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive2","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","f","exports","module","define","amd","window","global","self","this","Pict","r","e","n","t","o","i","c","require","u","a","Error","code","p","length","eachOfLimit","withoutIndex","arr","limit","iterator","cb","tasks","makeCallback","index","fn","apply","arguments","next","once","noop","onlyOnce","keyIterator","nextKey","done","running","errored","replenish","err","setImmediate","restParam","args","callback","pop","push","innerArgs","sync","Array","isArray","prototype","toString","_keys","isArrayLike","coll","len","keys","k","hasOwnProperty","func","startIndex","Math","max","rest","_setImmediate","fallback","setTimeout","timers","ensureAsync","wrapIterator","concat","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","join","Uint8Array","indexOf","start","end","num","output","GLOBAL","Big","MAX_DP","MAX_POWER","NAME","INVALID","INVALID_DP","INVALID_RM","DIV_BY_ZERO","P","UNDEFINED","NUMERIC","round","x","sd","rm","more","xc","constructor","RM","unshift","stringify","doExponential","isNonzero","s","charAt","slice","abs","cmp","y","isneg","yc","j","l","div","b","dp","DP","bl","bt","ri","bz","ai","al","rl","q","qc","qi","shift","eq","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","reverse","mod","ygtx","times","neg","add","pow","one","prec","sqrt","half","toExponential","mul","toFixed","toJSON","NE","PE","toNumber","strict","toPrecision","valueOf","_Big_","nl","test","replace","search","substring","parse","roundDown","roundHalfUp","roundHalfEven","roundUp","dup","Buffer","base64","ieee754","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","__proto__","encodingOrOffset","allocUnsafe","from","string","encoding","isEncoding","actual","write","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","buffer","array","byteOffset","fromArrayBuffer","isBuffer","checked","copy","numberIsNaN","type","data","fromObject","assertSize","size","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","foo","typedArraySupport","console","error","get","species","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","name","libFableServiceProviderBase","libLinkedList","pFable","pManifest","pServiceHash","super","serviceType","_HashMap","_RecordMap","_List","maxLength","maxAge","RecordMap","put","pData","pHash","Datum","tmpNode","Hash","Metadata","Created","Date","touch","remove","expire","pruneBasedOnExpiration","fComplete","pRemovedRecords","tmpRemovedRecords","tmpNow","tmpKeys","pruneBasedOnLength","pruneCustom","fPruneFunction","prune","fExpirationPruneComplete","getNode","LeftNode","RightNode","__ISNODE","libLinkedListNode","totalNodes","head","tail","initializeNode","pDatum","tmpHash","append","prepend","pNode","each","fAction","fIterator","pError","seek","pNodeIndex","GetIntrinsic","callBind","$indexOf","allowMissing","intrinsic","bind","$apply","$call","$reflectApply","$gOPD","$defineProperty","$max","originalFunction","applyBind","options","dec","decode","eqIdx","endIdx","tryDecode","serialize","opt","enc","encode","fieldContentRegExp","isNaN","floor","domain","path","expires","__toString","isDate","toUTCString","httpOnly","secure","priority","sameSite","decodeURIComponent","encodeURIComponent","h","d","$","M","weekdays","months","ordinal","v","z","utcOffset","date","year","month","clone","ceil","w","D","ms","Q","g","S","_","O","locale","$L","utc","$u","$x","$offset","$d","NaN","match","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","isSame","startOf","endOf","isAfter","isBefore","$g","unix","getTime","toDate","$locale","weekStart","$set","daysInMonth","subtract","format","invalidDate","meridiem","monthsShort","weekdaysMin","weekdaysShort","getTimezoneOffset","diff","toISOString","forEach","extend","$i","isDayjs","en","Ls","globalThis","dayjs","weekYear","isoWeekYear","week","isoWeek","offsetName","dayjs_plugin_advancedFormat","isoWeekday","day","dayjs_plugin_isoWeek","future","past","mm","hh","dd","MM","yy","fromToBase","relativeTime","thresholds","rounding","to","toNow","fromNow","dayjs_plugin_relativeTime","hour","minute","second","timeZoneName","Intl","DateTimeFormat","hour12","timeZone","formatToParts","tz","$timezone","guess","find","resolvedOptions","setDefault","dayjs_plugin_timezone","local","getUTCFullYear","getUTCMonth","getUTCDate","getUTCDay","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","$localOffset","isUTC","dayjs_plugin_utc","yearStart","weeks","dayjs_plugin_weekOfYear","weekday","dayjs_plugin_weekday","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","EventEmitter","emitter","Promise","resolve","reject","errorListener","removeListener","resolver","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","events","existing","warning","create","newListener","emit","warned","count","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","addEventListener","wrapListener","removeEventListener","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","message","context","listeners","addListener","prependListener","prependOnceListener","position","originalListener","spliceOne","off","removeAllListeners","rawListeners","eventNames","CoreServiceProviderBase","pLogStreamSettings","pLogStreamHash","_Settings","loggerUUID","generateInsecureUUID","levels","tmpDate","pCharacter","tmpRandomData","random","initialize","trace","pLogText","pLogObject","debug","info","fatal","pLogLevel","getDefaultProviders","tmpDefaultProviders","default","loggertype","streamtype","level","libBaseLogger","pFableLog","_ShowTimeStamps","showtimestamps","_FormattedTimeStamps","formattedtimestamps","_ContextMessage","Context","Product","_OutputLogLinesToConsole","outputloglinestoconsole","_OutputObjectsToConsole","outputobjectstoconsole","prefixCache","pLevel","pObject","tmpTimeStamp","tmpLogLine","log","JSON","libConsoleLog","libFS","libPath","logFileRawPath","logFilePath","normalize","logFileStreamOptions","fileStreamOptions","fileWriter","createWriteStream","activelyWriting","logLineStrings","logObjectStrings","defaultWriteCompleteCallback","defaultBufferFlushCallback","closeWriter","fCloseComplete","tmpCloseComplete","completeBufferFlushToLogFile","fFlushComplete","tmpFlushComplete","flushBufferToLogFile","tmpLineStrings","tmpObjectStrings","tmpConstructedBufferOutputString","fs","pSettings","tmpSettings","_Providers","_StreamDefinitions","LogStreams","logStreams","logProviders","activeLogStreams","logStreamsTrace","logStreamsDebug","logStreamsInfo","logStreamsWarn","logStreamsError","logStreamsFatal","datumDecorator","uuid","addLogger","pLogger","setDatumDecorator","fDatumDecorator","pMessage","tmpDecoratedDatum","tmpStreamDefinition","assign","logTime","tmpMessage","tmpTime","getTimeStamp","getTimeDelta","pTimeStamp","logTimeDelta","pTimeDelta","tmpEndTime","logTimeDeltaHuman","tmpMs","tmpSeconds","tmpMinutes","tmpHours","logTimeDeltaRelative","pStartTime","logTimeDeltaRelativeHuman","LogProviderBase","LogProviderConsole","LogProviderFlatfile","FableServiceProviderBase","pOptions","isFable","connectFable","fable","UUID","getUUID","tmpErrorMessage","Logging","services","servicesMap","ProductVersion","ConfigFile","process","libPrecedent","pDependencies","templateProcessor","addPattern","pTemplateValue","tmpTemplateValue","tmpSeparatorIndex","tmpDefaultValue","tmpEnvironmentVariableName","env","parseSetting","pString","parseString","_process","precedent","libFableSettingsTemplateProcessor","FableSettings","settingsTemplateProcessor","_configureEnvTemplating","buildDefaultSettings","merge","base","DefaultConfigFile","pException","settings","_PerformEnvTemplating","NoEnvReplacement","_resolveEnv","tmpKey","_isObject","_deepMergeObjects","toObject","fromValue","toValue","pSettingsFrom","pSettingsTo","tmpSettingsFrom","tmpSettingsTo","tmpSettingsFromCopy","new","getRandomValues","crypto","msCrypto","generateWhatWGBytes","tmpBuffer","generateRandomBytes","tmpValue","generate","libRandomByteGenerator","FableUUID","_UUIDModeRandom","UUIDModeRandom","_UUIDLength","UUIDLength","_UUIDRandomDictionary","UUIDDictionary","randomByteGenerator","_HexLookup","bytesToUUID","pBuffer","generateUUIDv4","tmpRandomBytes","generateRandom","tmpUUID","libFableSettings","libFableUUID","libFableLog","libFableServiceBase","Fable","serviceTypes","serviceClasses","extraServiceInitialization","SettingsManager","ServiceManager","connectPreinitServiceProviderInstance","addAndInstantiateServiceType","addServiceType","settingsManager","pServiceType","pServiceClass","isFableService","instantiateServiceProvider","instantiateServiceProviderFromPrototype","pCustomServiceHash","pServicePrototype","tmpService","setDefaultServiceInstantiation","instantiateServiceProviderWithoutRegistration","pServiceInstance","tmpServiceType","tmpServiceHash","pOverwriteService","tmpOverwriteService","ServiceProviderBase","cachetrax","manyfest","operationQueue","erroredOperations","executingOperationCount","completedOperationCount","maxOperations","lastError","waitingFunctions","checkQueue","tmpOperation","buildAnticipatorCallback","anticipate","fAsynchronousFunction","tmpCallbackState","Called","OperationSet","wait","fCallback","Header","HeaderFieldNames","Delimiter","QuoteCharacter","CleanCharacters","HeaderLineIndex","HasHeader","HasSetHeader","EmitHeader","EmitJSON","EscapedQuoteString","CurrentLine","CurrentRecord","InQuote","InEscapedQuote","LinesParsed","RowsEmitted","marshalRowToJSON","pRowArray","tmpObject","setHeader","pHeaderArray","resetRowState","pushLine","emitRow","pFormatAsJSON","tmpFormatAsJSON","tmpCompletedRecord","parseCSVLine","pLineString","pTargetLength","pPadString","tmpString","stringGeneratePaddingString","_Regex_formatterInsertCommas","_Regex_formatterAddCommasToNumber","_Regex_formatterDollarsRemoveCommas","_Regex_formatterCleanNonAlphaChar","_Regex_formatterCapitalizeEachWord","_Value_MoneySign_Currency","_Value_NaN_Currency","_Value_GroupSeparator_Number","_Value_Prefix_StringHash","_Value_Clean_formatterCleanNonAlpha","_UseEngineStringStartsWith","startsWith","_UseEngineStringEndsWith","endsWith","stringReverse","stringStartsWith","pSearchString","pStartIndex","stringStartsWith_Polyfill","stringEndsWith","pEndIndex","stringEndsWith_Polyfill","insecureStringHash","tmpStringLength","tmpCharacterIndex","capitalizeEachWord","pMatch","toUpperCase","cleanEnclosureWrapCharacters","pWrapCharacter","cleanNonAlphaCharacters","formatterInsertCommas","tmpReversedWithCommas","processAddCommasToNumberRegex","pSign","pZeros","pBefore","pDecimal","pAfter","formatterAddCommasToNumber","pNumber","formatterDollars","pValue","tmpDollarAmount","Utility","bigNumber","parseFloat","formatterRoundNumber","pDigits","tmpDigits","tmpTargetLength","tmpPadString","tmpPadLength","repeat","formatTimeSpan","pTimeSpan","stringPadStart","formatTimeDelta","pTimeStart","pTimeEnd","getMonthFromDate","pJavascriptDate","getMonthAbbreviatedFromDate","formatMonthDayYearFromDate","pStrict","tmpStrict","tmpMonth","tmpDay","tmpYear","formatSortableStringFromDate","pDate","stringBeforeMatch","stringAfterMatch","tmpStringSplitLocation","stringCountEnclosures","pEnclosureStart","pEnclosureEnd","tmpEnclosureStart","tmpEnclosureEnd","tmpEnclosureCount","tmpEnclosureDepth","stringGetEnclosureValueByIndex","pEnclosureIndexToGet","tmpEnclosureIndexToGet","tmpMatchedEnclosureIndex","tmpEnclosedValueStartIndex","tmpEnclosedValueEndIndex","stringRemoveEnclosureByIndex","pEnclosureIndexToRemove","tmpEnclosureIndexToRemove","tmpEnclosureStartIndex","tmpEnclosureEndIndex","tmpReturnString","DefaultIntegerMinimum","DefaultIntegerMaximum","DefaultNumericStringLength","MonthSet","WeekDaySet","ColorSet","SurNameSet","NameSet","defaultData","randomIntegerBetween","pMinimum","pMaximum","randomIntegerUpTo","randomInteger","randomNumericString","pLength","pMaxNumber","tmpMaxNumber","DataFormat","randomMonth","randomDayOfWeek","randomColor","randomName","randomSurname","dayJS","plugin_weekOfYear","plugin_weekday","plugin_isoWeek","plugin_timezone","plugin_relativetime","plugin_utc","plugin_advancedFormat","Environment","libReadline","Mode","umask","joinPath","existsSync","pPath","exists","appendFileSync","pFileName","pAppendContent","tmpOptions","deleteFileSync","unlinkSync","deleteFolderSync","rmdirSync","readFileSync","pFilePath","readFile","writeFileSync","pFileContent","writeFileSyncFromObject","writeFileSyncFromArray","pFileArray","writeFile","lineReaderFactory","fOnLine","fOnComplete","fOnError","tmpLineReader","filePath","fileStream","createReadStream","reader","createInterface","crlfDelay","makeFolderRecursive","pParameters","tmpParameters","Path","CurrentPathIndex","ActualPath","ActualPathParts","sep","CurrentPath","open","pFileDescriptor","closeSync","mkdir","pCreateError","readline","libWordTree","libStringParser","WordTree","StringParser","eachLimit","ParseTree","pPatternStart","pPatternEnd","pParser","addPatternAsync","pParserPromise","fEachLimit","newParserState","pParseTree","Asynchronous","Output","OutputBuffer","Pattern","PatternMatch","PatternMatchEnd","appendOutputBuffer","pParserState","flushOutputBuffer","resetOutputBuffer","PatternStartNode","StartPatternMatchComplete","EndPatternMatchBegan","parseCharacter","PatternEnd","Parse","PatternStartString","PatternEndString","isAsync","parseCharacterAsync","pAsyncOutput","PatternStart","tmpParserState","fCharacterCallback","addChild","pTree","pPattern","addEndChild","fParser","tmpLeaf","tmpPatternEnd","Name","Summary","Version","Status","Completed","CompletionProgress","CompletionTimeElapsed","TimeStart","TimeEnd","Steps","Errors","Log","_OperationStatePrototypeString","timeStamps","progressTrackers","stepMap","stepFunctions","execute","fExecutionCompleteCallback","tmpAnticipate","GUIDStep","addStep","pGUIDStep","fStepFunction","pStepName","pStepDescription","pStepMetadata","tmpStep","DataGeneration","Description","StepCount","getStep","startStep","stopStep","writeOperationLog","writeOperationErrors","createTimeStamp","pTimeStampHash","tmpTimeStampHash","tmpOperationTime","createProgressTracker","pTotalOperations","pProgressTrackerHash","tmpProgressTrackerHash","tmpTotalOperations","tmpProgressTracker","StartTime","EndTime","CurrentTime","PercentComplete","AverageOperationTime","EstimatedCompletionTime","TotalCount","CurrentCount","solveProgressTrackerStatus","updateProgressTrackerStatus","pCurrentOperations","tmpCurrentOperations","incrementProgressTrackerStatus","pIncrementSize","tmpIncrementSize","setProgressTrackerEndTime","printProgressTrackerStatus","libSimpleGet","libCookie","TraceLog","dataFormat","cookie","prepareRequestOptions","simpleGet","prepareCookies","pRequestOptions","tmpCookieObject","headers","tmpCookieKeys","preRequest","executeChunkedRequest","RequestStartTime","method","url","pResponse","tmpConnectTime","statusCode","tmpData","pChunk","tmpChunkTime","tmpCompletionTime","executeChunkedRequestBinary","json","tmpDataBuffer","executeJSONRequest","tmpJSONData","getJSON","pOptionsOrURL","tmpRequestOptions","putJSON","body","postJSON","patchJSON","headJSON","delJSON","getRawText","Matchers","Evaluate","Interpolate","Escaper","Unescaper","GuaranteedNonMatch","templateEscapes","u2028","u2029","renderFunction","templateString","renderTemplate","templateFunction","buildTemplateFunction","pTemplateText","TemplateSource","pCode","TemplateSourceCompiled","libAsyncWaterfall","libAsyncEachLimit","libBigNumber","templates","waterfall","pDestinationObject","tmpSourceObject","tmpObjectProperties","template","buildHashedTemplate","pTemplateHash","tmpTemplate","chunk","pInput","pChunkSize","pChunkCache","tmpInputArray","tmpChunkSize","tmpChunkCache","splice","isoStringToDate","pISOString","tmpDateParts","tmpReturnDate","tmpTimeZoneOffsetInHours","tmpTimeZoneOffsetInMinutes","setUTCDate","setUTCMonth","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","setUTCFullYear","setHours","toStr","bound","boundLength","boundArgs","result","Empty","implementation","$SyntaxError","SyntaxError","$Function","$TypeError","getEvalledConstructor","expressionSyntax","getOwnPropertyDescriptor","throwTypeError","ThrowTypeError","calleeThrows","gOPDthrows","hasSymbols","hasProto","getProto","needsEval","TypedArray","INTRINSICS","AggregateError","Atomics","BigInt","BigInt64Array","BigUint64Array","Boolean","DataView","decodeURI","encodeURI","eval","EvalError","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","Map","Proxy","ReferenceError","RegExp","Set","SharedArrayBuffer","Uint8ClampedArray","Uint16Array","Uint32Array","URIError","WeakMap","WeakRef","WeakSet","errorProto","doEval","gen","LEGACY_ALIASES","hasOwn","$concat","$spliceApply","$replace","$strSlice","$exec","exec","rePropName","reEscapeChar","getBaseIntrinsic","alias","intrinsicName","first","last","number","quote","subString","stringToPath","intrinsicBaseName","intrinsicRealName","skipFurtherCaching","isOwn","part","desc","has","$Object","origSymbol","hasSymbolSham","sym","symObj","syms","propertyIsEnumerable","descriptor","http","https","validateParams","params","protocol","request","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","ctor","superCtor","super_","TempCtor","cleanWrapCharacters","libSimpleLog","pInfoLog","pErrorLog","logInfo","logError","translationTable","translationCount","addTranslation","pTranslation","pTranslationSource","removeTranslationHash","pTranslationHash","removeTranslation","clearTranslations","translate","logToConsole","pLogLine","checkAddressExists","pAddress","tmpBracketStartIndex","tmpBracketStopIndex","tmpBoxedPropertyName","tmpBoxedPropertyReference","tmpBoxedPropertyNumber","tmpSubObjectName","tmpNewAddress","fCleanWrapCharacters","fParseConditionals","checkFilters","pRecord","deleteValueAtAddress","pParentAddress","tmpParentAddress","tmpObjectTypeMarkerIndex","tmpObjectPropertyName","tmpArrayProperty","tmpContainerObject","tmpPropertyParentAddress","tmpObjectProperty","tmpObjectPropertyKeys","getValueAtAddress","pRootObject","tmpRootObject","tmpParentAddressParts","tmpBackNavigationCount","tmpParentAddressLength","tmpRecurseAddress","tmpOutputArray","setValueAtAddress","generateAddressses","pBaseAddress","pSchema","tmpBaseAddress","tmpSchema","tmpObjectType","tmpSchemaObjectEntry","Address","InSchema","DataType","Default","_ConditionalStanzaStart","_ConditionalStanzaEnd","testCondition","pManyfest","pSearchAddress","pSearchComparator","parseConditionals","tmpKeepRecord","tmpStartIndex","tmpStopIndex","tmpMagicComparisonPatternSet","tmpSearchAddress","tmpSearchComparator","tmpSearchValue","resolveAddressMappings","pManyfestSchemaDescriptors","pAddressMapping","tmpManyfestAddresses","tmpHashMapping","pInputAddress","tmpNewDescriptorAddress","tmpOldDescriptorAddress","tmpDescriptor","safeResolveAddressMappings","tmpManyfestSchemaDescriptors","mergeAddressMappings","pManyfestSchemaDescriptorsDestination","pManyfestSchemaDescriptorsSource","tmpSource","tmpNewManyfestSchemaDescriptors","pDescriptorAddress","libHashTranslation","libObjectAddressCheckAddressExists","libObjectAddressGetValue","libObjectAddressSetValue","libObjectAddressDeleteValue","libObjectAddressGeneration","libSchemaManipulation","_DefaultConfiguration","Scope","Descriptors","Manyfest","objectAddressCheckAddressExists","objectAddressGetValue","objectAddressSetValue","objectAddressDeleteValue","defaultValues","Float","Integer","Binary","DateTime","Null","scope","elementAddresses","elementHashes","elementDescriptors","reset","loadManifest","schemaManipulations","objectAddressGeneration","hashTranslations","tmpNewOptions","tmpNewManyfest","getManifest","deserialize","pManifestString","tmpManifest","tmpDescriptorKeys","tmpDescriptionAddresses","addDescriptor","HashTranslations","pDescriptor","getDescriptorByHash","getDescriptor","resolveHashAddress","eachDescriptor","tmpDescriptorAddresses","checkAddressExistsByHash","tmpAddress","tmpInElementHashTable","tmpInTranslationTable","getValueByHash","getDefaultValue","setValueByHash","deleteValueByHash","validate","tmpValidationData","MissingElements","addValidationError","pErrorMessage","tmpValueExists","Required","tmpElementType","tmpDataType","populateDefaults","pOverwriteProperties","populateObject","fFilter","tmpOverwriteProperties","tmpFilterFunction","hasMap","mapSizeDescriptor","mapSize","mapForEach","hasSet","setSizeDescriptor","setSize","setForEach","weakMapHas","weakSetHas","weakRefDeref","deref","booleanValueOf","objectToString","functionToString","$match","$slice","$toUpperCase","$toLowerCase","$test","$join","$arrSlice","$floor","bigIntValueOf","gOPS","symToString","hasShammedSymbols","toStringTag","isEnumerable","gPO","addNumericSeparator","sepRegex","int","intStr","utilInspect","inspectCustom","custom","inspectSymbol","isSymbol","wrapQuotes","defaultStyle","opts","quoteChar","quoteStyle","isRegExp","inspect_","depth","seen","maxStringLength","customInspect","indent","numericSeparator","inspectString","bigIntStr","maxDepth","baseIndent","prev","getIndent","noIndent","newOpts","nameOf","arrObjKeys","symString","markBoxed","HTMLElement","nodeName","getAttribute","isElement","attrs","attributes","childNodes","xs","singleLineValues","indentedJoin","isError","cause","isMap","mapParts","collectionOf","isSet","setParts","isWeakMap","weakCollectionOf","isWeakSet","isWeakRef","isNumber","isBigInt","isBoolean","isString","ys","isPlainObject","protoTag","stringTag","tag","trailer","lowbyte","entries","lineJoiner","isArr","symMap","wrappy","called","onceStrict","onceError","proto","assertPath","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","posix","cwd","resolvedPath","resolvedAbsolute","isAbsolute","trailingSeparator","joined","relative","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","dirname","hasRoot","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","root","_format","delimiter","win32","defaultPictSettings","MainViewportViewIdentifier","MainViewportRenderableHash","MainViewportDestinationAddress","MainViewportDefaultDataAddress","AutoSolveAfterInitialize","AutoRenderMainViewportViewAfterInitialize","Manifests","IdentifierAddressPrefix","pict","AppData","initializeTimestamp","lastSolvedTimestamp","lastMarshalFromViewsTimestamp","lastMarshalToViewsTimestamp","tmpManifestKeys","tmpManifestKey","serviceManager","onBeforeSolve","LogNoisiness","onBeforeSolveAsync","onSolve","onSolveAsync","solve","tmpLoadedViews","views","tmpViewsToSolve","tmpView","AutoInitialize","sort","AutoInitializeOrdinal","onAfterSolve","solveAsync","AutoSolveWithApp","AutoSolveOrdinal","onAfterSolveAsync","onBeforeInitialize","onBeforeInitializeAsync","onInitialize","onInitializeAsync","tmpViewsToInitialize","onAfterInitialize","render","initializeAsync","fCallBack","onAfterInitializeAsync","renderMainViewportAsync","onBeforeMarshalFromViews","onBeforeMarshalFromViewsAsync","onMarshalFromViews","onMarshalFromViewsAsync","marshalFromViews","tmpViewsToMarshalFromViews","marshalFromView","onAfterMarshalFromViews","marshalFromViewsAsync","marshalFromViewAsync","onAfterMarshalFromViewsAsync","onBeforeMarshalToViews","onBeforeMarshalToViewsAsync","onMarshalToViews","onMarshalToViewsAsync","marshalToViews","tmpViewsToMarshalToViews","marshalToView","onAfterMarshalToViews","marshalToViewsAsync","marshalToViewAsync","onAfterMarshalToViewsAsync","pViewIdentifier","pRenderableHash","pRenderDestinationAddress","pTemplateDataAddress","tmpViewIdentifier","tmpRenderableHash","tmpRenderDestinationAddress","tmpTemplateDataAddress","PictView","renderMainViewport","renderAsync","defaultPictViewSettings","DefaultRenderable","DefaultDestinationAddress","DefaultTemplateRecordAddress","ViewIdentifier","AutoRender","AutoRenderOrdinal","CSSHash","CSS","CSSProvider","CSSPriority","Templates","DefaultTemplates","Renderables","lastRenderedTimestamp","lastMarshalFromViewTimestamp","lastMarshalToViewTimestamp","Source","TemplateProvider","addTemplate","Template","tmpDefaultTemplate","addDefaultTemplate","Prefix","Postfix","tmpCSSHash","tmpCSSProvider","CSSMap","addCSS","renderables","addRenderable","pDefaultTemplateDataAddress","pDefaultDestinationAddress","pRenderMethod","tmpRenderable","RenderableHash","TemplateHash","DefaultTemplateDataAddress","RenderMethod","onBeforeRender","pRenderable","onBeforeRenderAsync","ContentDestinationAddress","tmpDataAddress","DataProvider","getDataByAddress","tmpContent","parseTemplateByHash","ContentAssignment","appendContent","prependContent","getElement","assignContent","onAfterRender","pContent","onAfterRenderAsync","onBeforeMarshalFromView","onBeforeMarshalFromViewAsync","onMarshalFromView","onMarshalFromViewAsync","onAfterMarshalFromView","onAfterMarshalFromViewAsync","onBeforeMarshalToView","onBeforeMarshalToViewAsync","onMarshalToView","onMarshalToViewAsync","onAfterMarshalToView","onAfterMarshalToViewAsync","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","nextTick","title","browser","argv","version","versions","binding","chdir","freeExports","nodeType","freeModule","freeGlobal","punycode","maxInt","tMin","tMax","skew","damp","initialBias","initialN","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","baseMinusTMin","stringFromCharCode","map","mapDomain","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","basic","oldi","baseMinusT","inputLength","bias","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","ucs2","toASCII","toUnicode","percentTwenties","Format","formatters","RFC1738","RFC3986","formats","utils","defaults","allowDots","allowPrototypes","allowSparse","arrayLimit","charset","charsetSentinel","comma","decoder","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","plainObjects","strictNullHandling","$0","numberStr","parseArrayValue","parseKeys","givenKey","valuesParsed","child","segment","parent","chain","leaf","cleanRoot","parseObject","normalizeParseOptions","tempObj","cleanStr","skipIndex","bracketEqualsPos","maybeMap","encodedVal","combine","parseValues","newObj","compact","getSideChannel","arrayPrefixGenerators","brackets","prefix","indices","pushToArray","valueOrArray","toISO","defaultFormat","addQueryPrefix","encoder","encodeValuesOnly","formatter","serializeDate","skipNulls","sentinel","object","generateArrayPrefix","commaRoundTrip","filter","sideChannel","tmpSc","step","findFlag","objKeys","values","adjustedPrefix","keyPrefix","valueSideChannel","normalizeStringifyOptions","arrayFormat","hexTable","arrayToObject","source","reduce","acc","prop","refs","item","compacted","compactQueue","strWithoutPlus","unescape","defaultEncoder","kind","escape","mapped","mergeTarget","targetItem","qs","regexp","maxKeys","kstr","vstr","idx","stringifyPrimitive","objectKeys","ks","copyProps","SafeBuffer","callBound","$WeakMap","$Map","$weakMapGet","$weakMapSet","$weakMapHas","$mapGet","$mapSet","$mapHas","listGetNode","curr","$wm","$o","channel","assert","objects","node","listGet","listHas","listSet","stream","chunks","decompressResponse","querystring","isStream","pipe","maxRedirects","hostname","port","auth","form","accept","originalHost","req","followRedirects","location","host","resume","redirectHost","authorization","tryUnzip","abort","ClientRequest","response","statusCodes","defaultProtocol","IncomingMessage","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","xtend","xhr","getXHR","XMLHttpRequest","XDomainRequest","checkTypeSupport","responseType","isFunction","fetch","ReadableStream","writableStream","WritableStream","abortController","AbortController","arraybuffer","msstream","mozchunkedarraybuffer","overrideMimeType","capability","inherits","rStates","readyStates","preferBinary","Writable","_opts","_body","_headers","useFetch","mode","_mode","decideMode","_fetchTimer","_socketTimeout","_socketTimer","_onFinish","lowerName","unsafeHeaders","getHeader","header","removeHeader","_destroyed","headersObj","Blob","headersList","keyName","signal","controller","_fetchAbortController","requestTimeout","credentials","withCredentials","then","_fetchResponse","_resetTimers","_connect","reason","_xhr","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","status","statusValid","_write","destroy","flushHeaders","setNoDelay","setSocketKeepAlive","UNSENT","OPENED","HEADERS_RECEIVED","resetTimers","Readable","rawHeaders","trailers","rawTrailers","statusMessage","statusText","_resumeFetch","close","pipeTo","catch","getReader","_pos","responseURL","getAllResponseHeaders","matches","_charset","mimeType","charsetMatch","_read","responseText","newData","MSStreamReader","onload","readAsArrayBuffer","codes","createErrorType","Base","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","getMessage","oneOf","expected","thing","determiner","msg","this_len","Duplex","allowHalfOpen","readable","onend","_writableState","ended","onEndNT","highWaterMark","getBuffer","_readableState","destroyed","PassThrough","Transform","_transform","ReadableState","EElistenerCount","Stream","OurUint8Array","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","isDuplex","objectMode","readableObjectMode","pipes","pipesCount","flowing","endEmitted","reading","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","_destroy","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","onEofChunk","chunkInvalid","_uint8ArrayToBuffer","addChunk","maybeReadMore","_undestroy","undestroy","isPaused","setEncoding","content","clear","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","nReadingNextTick","resume_","fromList","consume","endReadable","endReadableNT","wState","finished","nOrig","doRead","dest","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","ondata","cleanedUp","needDrain","pipeOnDrain","pause","event","dests","ev","wrap","_this","asyncIterator","_fromList","iterable","util","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","transform","flush","_flush","prefinish","err2","CorkedRequest","entry","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","realHasInstance","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","finalCalled","ending","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","rState","current","hasInstance","writeAfterEnd","validChunk","newChunk","decodeChunk","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_Object$setPrototypeO","_defineProperty","_toPrimitive","_toPropertyKey","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","promise","lastPromise","wrapForNext","_this2","_Object$create","enumerableOnly","symbols","_objectSpread","getOwnPropertyDescriptors","defineProperties","_defineProperties","props","instance","Constructor","_classCallCheck","protoProps","staticProps","hasStrings","_getString","_getBuffer","nb","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ERR_STREAM_PREMATURE_CLOSE","eos","_len","_key","onlegacyfinish","writableEnded","readableEnded","onrequest","isRequest","ERR_MISSING_ARGS","streams","popCallback","destroys","closed","destroyer","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","pipeline","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","total","utf8CheckIncomplete","clearImmediate","immediateIds","nextImmediateId","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","Url","slashes","hash","query","pathname","href","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","hostlessProtocol","slashedProtocol","ftp","gopher","file","urlParse","parseQueryString","slashesDenoteHost","queryIndex","splitter","uSplit","simplePath","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","newpart","validParts","notHost","bit","ae","esc","qm","resolveObject","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","authInHost","hasTrailingSlash","up","config","localStorage","wrapper","defaultConfiguration","CSSElementAddress","inlineCSSMap","pPriority","pProvider","tmpPriority","tmpProvidor","Content","Provider","Priority","removeCSS","generateCSS","tmpCSS","tmpCSSHashes","tmpCSSFragment","tmpCSSComment","injectCSS","inBrowser","hasDocument","document","querySelectorAll","hasJquery","jQuery","customAssignFunction","customPrependFunction","customAppendFunction","customReadFunction","customGetElementFunction","tmpElements","tmpElementSet","html","tmpTargetElementSet","tagName","innerHTML","insertAdjacentHTML","readContent","addClass","pClass","customAddClassFunction","classList","removeClass","customRemoveClassFunction","toggleClass","hasClass","manifest","Bundle","Record","pEntity","pMeadowFilterExpression","initializeCache","cache","tmpCountOptions","urlPrefix","restClient","pBody","tmpRecordCount","Count","tmpDownloadURIFragments","tmpDownloadBatchSize","downloadBatchSize","tmpEntitySet","pURIFragment","fDownloadCallback","pDownloadError","pDownloadResponse","pDownloadBody","pFullDownloadError","PictDefaultURLPrefix","PictDefaultDownloadBatchSize","getEntity","pIDRecord","tmpPossibleRecord","templateSources","defaultTemplates","loadTemplateFunction","pTemplate","pTemplateSource","pPrefix","pPostfix","pSource","postfix","checkDefaultTemplateHash","getTemplate","loadTemplate","libFable","isBrowser","loadManifestSet","_DefaultPictTemplatesInitialized","initializePictTemplateEngine","pManifestSet","addView","pViewHash","pViewPrototype","tmpViewHash","default_configuration","addApplication","pApplicationHash","pApplicationPrototype","tmpApplicationHash","fEntityRender","tmpEntity","tmpEntityID","tmpEntityTemplate","tmpHashEntitySeparator","tmpHashTemplateSeparator","EntityProvider","MetaTemplate","fNotEmptyRender","tmpHashParts","fTemplateRender","tmpTemplateHash","tmpAddressOfData","fTemplateSetRender","parseTemplateSetByHash","fDataRender","tmpColumnData","fRandomNumberString","fRandomNumber","tmpMinimumNumber","fPascalCaseIdentifier","fLogValue","tmpValueType","fLogStatement","fBreakpoint","tmpError","stack","parseTemplate","pTemplateString","tmpTemplateString","parseTemplateSet","pDataSet","fRecordTemplateCallback","pTemplateResult","PictApplicationClass","PictViewClass","EnvironmentLog","pPict","pContentMap","contentMap","truncateContentLength","storeEventLog","eventLog","GetElement","Read","Prepend","Append","Assign","createEventLogEntry","TimeStamp"],"mappings":"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","file":"pict.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Pict = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar eachOfLimit = require('async.util.eachoflimit');\nvar withoutIndex = require('async.util.withoutindex');\n\nmodule.exports = function eachLimit(arr, limit, iterator, cb) {\n    return eachOfLimit(limit)(arr, withoutIndex(iterator), cb);\n};\n\n},{\"async.util.eachoflimit\":3,\"async.util.withoutindex\":14}],2:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(tasks) {\n    function makeCallback(index) {\n        function fn() {\n            if (tasks.length) {\n                tasks[index].apply(null, arguments);\n            }\n            return fn.next();\n        }\n        fn.next = function() {\n            return (index < tasks.length - 1) ? makeCallback(index + 1) : null;\n        };\n        return fn;\n    }\n    return makeCallback(0);\n};\n\n},{}],3:[function(require,module,exports){\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar onlyOnce = require('async.util.onlyonce');\nvar keyIterator = require('async.util.keyiterator');\n\nmodule.exports = function eachOfLimit(limit) {\n    return function(obj, iterator, cb) {\n        cb = once(cb || noop);\n        obj = obj || [];\n        var nextKey = keyIterator(obj);\n        if (limit <= 0) {\n            return cb(null);\n        }\n        var done = false;\n        var running = 0;\n        var errored = false;\n\n        (function replenish() {\n            if (done && running <= 0) {\n                return cb(null);\n            }\n\n            while (running < limit && !errored) {\n                var key = nextKey();\n                if (key === null) {\n                    done = true;\n                    if (running <= 0) {\n                        cb(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iterator(obj[key], key, onlyOnce(function(err) {\n                    running -= 1;\n                    if (err) {\n                        cb(err);\n                        errored = true;\n                    } else {\n                        replenish();\n                    }\n                }));\n            }\n        })();\n    };\n};\n\n},{\"async.util.keyiterator\":7,\"async.util.noop\":9,\"async.util.once\":10,\"async.util.onlyonce\":11}],4:[function(require,module,exports){\n'use strict';\nvar setImmediate = require('async.util.setimmediate');\nvar restParam = require('async.util.restparam');\n\nmodule.exports = function(fn) {\n    return restParam(function(args) {\n        var callback = args.pop();\n        args.push(function() {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate(function() {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        var sync = true;\n        fn.apply(this, args);\n        sync = false;\n    });\n};\n\n},{\"async.util.restparam\":12,\"async.util.setimmediate\":13}],5:[function(require,module,exports){\n'use strict';\n\nmodule.exports = Array.isArray || function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar isArray = require('async.util.isarray');\n\nmodule.exports = function isArrayLike(arr) {\n    return isArray(arr) || (\n        // has a positive integer length property\n        typeof arr.length === 'number' &&\n        arr.length >= 0 &&\n        arr.length % 1 === 0\n    );\n};\n\n},{\"async.util.isarray\":5}],7:[function(require,module,exports){\n'use strict';\n\nvar _keys = require('async.util.keys');\nvar isArrayLike = require('async.util.isarraylike');\n\nmodule.exports = function keyIterator(coll) {\n    var i = -1;\n    var len;\n    var keys;\n    if (isArrayLike(coll)) {\n        len = coll.length;\n        return function next() {\n            i++;\n            return i < len ? i : null;\n        };\n    } else {\n        keys = _keys(coll);\n        len = keys.length;\n        return function next() {\n            i++;\n            return i < len ? keys[i] : null;\n        };\n    }\n};\n\n},{\"async.util.isarraylike\":6,\"async.util.keys\":8}],8:[function(require,module,exports){\n'use strict';\n\nmodule.exports = Object.keys || function keys(obj) {\n    var _keys = [];\n    for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            _keys.push(k);\n        }\n    }\n    return _keys;\n};\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function noop () {};\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function once(fn) {\n    return function() {\n        if (fn === null) return;\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function only_once(fn) {\n    return function() {\n        if (fn === null) throw new Error('Callback was already called.');\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n\n},{}],12:[function(require,module,exports){\n'use strict';\nmodule.exports = function restParam(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n        var length = Math.max(arguments.length - startIndex, 0);\n        var rest = new Array(length);\n        for (var index = 0; index < length; index++) {\n            rest[index] = arguments[index + startIndex];\n        }\n        switch (startIndex) {\n            case 0:\n                return func.call(this, rest);\n            case 1:\n                return func.call(this, arguments[0], rest);\n        }\n    };\n};\n\n},{}],13:[function(require,module,exports){\n(function (setImmediate){(function (){\n'use strict';\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\nvar fallback = function(fn) {\n    setTimeout(fn, 0);\n};\n\nmodule.exports = function setImmediate(fn) {\n    // not a direct alias for IE10 compatibility\n    return (_setImmediate || fallback)(fn);\n};\n\n}).call(this)}).call(this,require(\"timers\").setImmediate)\n\n},{\"timers\":129}],14:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function withoutIndex(iterator) {\n    return function(value, index, callback) {\n        return iterator(value, callback);\n    };\n};\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar isArray = require('async.util.isarray');\nvar restParam = require('async.util.restparam');\nvar ensureAsync = require('async.util.ensureasync');\nvar iterator = require('async.iterator');\n\nmodule.exports = function(tasks, cb) {\n    cb = once(cb || noop);\n    if (!isArray(tasks)) return cb(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return cb();\n\n    function wrapIterator(iterator) {\n        return restParam(function(err, args) {\n            if (err) {\n                cb.apply(null, [err].concat(args));\n            } else {\n                var next = iterator.next();\n                if (next) {\n                    args.push(wrapIterator(next));\n                } else {\n                    args.push(cb);\n                }\n                ensureAsync(iterator).apply(null, args);\n            }\n        });\n    }\n    wrapIterator(iterator(tasks))();\n};\n\n},{\"async.iterator\":2,\"async.util.ensureasync\":4,\"async.util.isarray\":5,\"async.util.noop\":9,\"async.util.once\":10,\"async.util.restparam\":12}],16:[function(require,module,exports){\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n},{}],17:[function(require,module,exports){\n/*\r\n *  big.js v6.2.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2022 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,            // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n    /*\r\n     * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n     * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n     * primitive number without a loss of precision.\r\n     */\r\n    STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        if (typeof n !== 'string') {\r\n          if (Big.strict === true && typeof n !== 'bigint') {\r\n            throw TypeError(INVALID + 'value');\r\n          }\r\n\r\n          // Minus zero?\r\n          n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n        }\r\n\r\n        parse(x, n);\r\n      }\r\n\r\n      // Retain a reference to this Big constructor.\r\n      // Shadow Big.prototype.constructor which points to Object.\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.strict = STRICT;\r\n    Big.roundDown = 0;\r\n    Big.roundHalfUp = 1;\r\n    Big.roundHalfEven = 2;\r\n    Big.roundUp = 3;\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    if (!NUMERIC.test(n)) {\r\n      throw Error(INVALID + 'number');\r\n    }\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n   * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, sd, rm, more) {\r\n    var xc = x.c;\r\n\r\n    if (rm === UNDEFINED) rm = x.constructor.RM;\r\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    if (sd < 1) {\r\n      more =\r\n        rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n        rm === 1 && xc[0] >= 5 ||\r\n        rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n      );\r\n\r\n      xc.length = 1;\r\n\r\n      if (more) {\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        x.e = x.e - sd + 1;\r\n        xc[0] = 1;\r\n      } else {\r\n\r\n        // Zero.\r\n        xc[0] = x.e = 0;\r\n      }\r\n    } else if (sd < xc.length) {\r\n\r\n      // xc[sd] is the digit after the digit that may be rounded up.\r\n      more =\r\n        rm === 1 && xc[sd] >= 5 ||\r\n        rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n          (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n        rm === 3 && (more || !!xc[0]);\r\n\r\n      // Remove any digits after the required precision.\r\n      xc.length = sd;\r\n\r\n      // Round up?\r\n      if (more) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up.\r\n        for (; ++xc[--sd] > 9;) {\r\n          xc[sd] = 0;\r\n          if (sd === 0) {\r\n            ++x.e;\r\n            xc.unshift(1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (sd = xc.length; !xc[--sd];) xc.pop();\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   */\r\n  function stringify(x, doExponential, isNonzero) {\r\n    var e = x.e,\r\n      s = x.c.join(''),\r\n      n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (doExponential) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) {\r\n        for (e -= n; e--;) s += '0';\r\n      } else if (e < n) {\r\n        s = s.slice(0, e) + '.' + s.slice(e);\r\n      }\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && isNonzero ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n   */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) {\r\n      y.s = k;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n    q.s = k;\r\n    k = p < 0 ? 0 : p;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n      p--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (yc[0]) {\r\n        y.s = -b;\r\n      } else if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = 1;\r\n      }\r\n      return y;\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n  \r\n  \r\n  /*\r\n   * Return a new Big whose value is the value of this Big negated.\r\n   */\r\n  P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var e, k, t,\r\n      x = this,\r\n      Big = x.constructor;\r\n\r\n    y = new Big(y);\r\n\r\n    // Signs differ?\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (!yc[0]) {\r\n        if (xc[0]) {\r\n          y = new Big(x);\r\n        } else {\r\n          y.s = x.s;\r\n        }\r\n      }\r\n      return y;\r\n    }\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (e = xe - ye) {\r\n      if (e > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        e = -e;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; e--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    e = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (k) {\r\n      xc.unshift(k);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor('1'),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n      throw Error(INVALID + 'exponent');\r\n    }\r\n\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n   * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.prec = function (sd, rm) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    return round(new this.constructor(this), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n   * using rounding mode rm, or Big.RM if rm is not specified.\r\n   * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.round = function (dp, rm) {\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    return round(new this.constructor(this), dp + this.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big('0.5');\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) {\r\n      throw Error(NAME + 'No square root');\r\n    }\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s + '');\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) {\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = b;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), ++dp, rm);\r\n      for (; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, true, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n      // x.e may have changed if the value is rounded up.\r\n      for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, false, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toJSON = P.toString = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Big as a primitve number.\r\n   */\r\n  P.toNumber = function () {\r\n    var n = Number(stringify(this, true, true));\r\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n      throw Error(NAME + 'Imprecise conversion');\r\n    }\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * rounding mode rm, or Big.RM if rm is not specified.\r\n   * Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      n = x.c[0];\r\n\r\n    if (sd !== UNDEFINED) {\r\n      if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n        throw Error(INVALID + 'precision');\r\n      }\r\n      x = round(new Big(x), sd, rm);\r\n      for (; x.c.length < sd;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    if (Big.strict === true) {\r\n      throw Error(NAME + 'valueOf disallowed');\r\n    }\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n\n},{}],18:[function(require,module,exports){\n\n},{}],19:[function(require,module,exports){\narguments[4][18][0].apply(exports,arguments)\n},{\"dup\":18}],20:[function(require,module,exports){\n(function (Buffer){(function (){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"base64-js\":16,\"buffer\":20,\"ieee754\":74}],21:[function(require,module,exports){\nmodule.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n\n},{}],22:[function(require,module,exports){\n/**\n* Cache data structure with:\n*  - enumerable items\n*  - unique hash item access (if none is passed in, one is generated)\n*  - size (length) expiration\n*  - controllable expiration (e.g. keep in cache longer if older/less likely to change)\n*  - time-based expiration\n*  - custom expiration based on passed-in function\n*\n* Also:\n*  - built to work well with browserify\n*  - no dependencies at all\n*  - pet friendly\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nconst libLinkedList = require(`./LinkedList.js`);\n\nclass CashMoney extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'ObjectCache';\n\n\t\t// The map of node objects by hash because Reasons.\n\t\tthis._HashMap = {};\n\n\t\tthis._RecordMap = {};\n\n\t\tthis._List = new libLinkedList();\n\n\t\t// If the list gets over maxLength, we will automatically remove nodes on insertion.\n\t\tthis.maxLength = 0;\n\n\t\t// If cache entries get over this age, they are removed with prune\n\t\tthis.maxAge = 0;\n\t}\n\n\tget RecordMap()\n\t{\n\t\treturn this._RecordMap;\n\t}\n\n\t// Add (or update) a node in the cache\n\tput(pData, pHash)\n\t{\n\t\t// If the hash of the record exists\n\t\tif (this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\t// Just update the hashed records datum\n\t\t\tthis._HashMap[pHash].Datum = pData;\n\t\t\tthis._RecordMap[pHash] = pData;\n\t\t\treturn this._HashMap[pHash].Datum;\n\t\t}\n\n\t\tlet tmpNode = this._List.push(pData, pHash);\n\t\tthis._HashMap[tmpNode.Hash] = tmpNode;\n\t\tthis._RecordMap[pHash] = pData;\n\n\t\t// Automatically prune if over length, but only prune this nodes worth.\n\t\tif (this.maxLength > 0   &&   this._List.length > this.maxLength)\n\t\t{\n\t\t\t// Pop it off the head of the list\n\t\t\ttmpNode = this._List.pop();\n\t\t\t// Also remove it from the hashmap\n\t\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\t\tdelete this._HashMap[tmpNode.Hash];\n\t\t}\n\n\t\t// Now some expiration properties on the node metadata... namely the birthdate in ms of the node\n\t\ttmpNode.Metadata.Created = +new Date();\n\n\t\treturn tmpNode.Datum;\n\t}\n\n\t// Read a datum by hash from the cache\n\tread(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._HashMap[pHash].Datum;\n\t}\n\n\t// Reinvigorate a node based on hash, updating the timestamp and moving it to the head of the list (also removes custom metadata)\n\ttouch(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get the old node out of the list\n\t\tlet tmpNode = this._List.remove(this._HashMap[pHash]);\n\t\t// Remove it from the hash map\n\t\tdelete this._RecordMap[pHash];\n\t\tdelete this._HashMap[pHash];\n\n\t\t// Now put it back, fresh.\n\t\treturn this.put(tmpNode.Datum, tmpNode.Hash);\n\t}\n\n\t// Expire a cached record based on hash\n\texpire(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpNode = this._HashMap[pHash];\n\n\t\t// Remove it from the list of cached records\n\t\ttmpNode = this._List.remove(tmpNode);\n\t\t// Also remove it from the hashmap\n\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\tdelete this._HashMap[tmpNode.Hash];\n\n\t\t// Return it in case the consumer wants to do anything with it\n\t\treturn tmpNode;\n\t}\n\n\t// Prune records from the cached set based on maxAge\n\tpruneBasedOnExpiration(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tif (this.maxAge < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now enumerate each record and remove any that are expired\n\t\tlet tmpNow = +new Date();\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\t// Expire the node if it is older than max age milliseconds\n\t\t\tif (tmpNow - this._HashMap[tmpKeys[i]].Metadata.Created >= this.maxAge)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on maxLength\n\tpruneBasedOnLength(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\t// Pop records off until we have reached maxLength unless it's 0\n\t\tif (this.maxLength > 0)\n\t\t{\n\t\t\twhile (this._List.length > this.maxLength)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this._List.pop());\n\t\t\t}\n\t\t}\n\n\t\treturn fComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on passed in pPruneFunction(pDatum, pHash, pNode) -- returning true expires it\n\tpruneCustom(fComplete, fPruneFunction, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\tlet tmpNode = this._HashMap[tmpKeys[i]];\n\t\t\t// Expire the node if the passed in function returns true\n\t\t\tif (fPruneFunction(tmpNode.Datum, tmpNode.Hash, tmpNode))\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune the list down to the asserted rules (max age then max length if still too long)\n\tprune(fComplete)\n\t{\n\t\tlet tmpRemovedRecords = [];\n\n\t\t// If there are no cached records, we are done.\n\t\tif (this._List.length < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now prune based on expiration time\n\t\tthis.pruneBasedOnExpiration((fExpirationPruneComplete)=>\n\t\t\t{\n\t\t\t\t// Now prune based on length, then return the removed records in the callback.\n\t\t\t\tthis.pruneBasedOnLength(fComplete, tmpRemovedRecords);\n\t\t\t}, tmpRemovedRecords);\n\t}\n\n\t// Get a low level node (including metadata statistics) by hash from the cache\n\tgetNode(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\n\t\treturn this._HashMap[pHash];\n\t}\n}\n\nmodule.exports = CashMoney;\n},{\"./LinkedList.js\":24,\"fable-serviceproviderbase\":43}],23:[function(require,module,exports){\n/**\n* Double Linked List Node\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Linked List Node Prototype\n*\n* @class LinkedListNode\n* @constructor\n*/\n\nclass LinkedListNode\n{\n\tconstructor()\n\t{\n\t\tthis.Hash = false;\n\t\tthis.Datum = false;\n\n\t\t// This is where expiration and other elements are stored;\n\t\tthis.Metadata = {};\n\n\t\tthis.LeftNode = false;\n\t\tthis.RightNode = false;\n\n\t\t// To allow safe specialty operations on nodes\n\t\tthis.__ISNODE = true;\n\t}\n}\n\nmodule.exports = LinkedListNode;\n},{}],24:[function(require,module,exports){\n\"use strict\"\n/**\n* Simple double linked list to hold the cache entries in, in order.\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module FeeFiFo\n*/\n\nconst libLinkedListNode = require('./LinkedList-Node.js');\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nclass LinkedList\n{\n\tconstructor()\n\t{\n\t\t// Total number of nodes ever processed by this ADT\n\t\tthis.totalNodes = 0;\n\n\t\t// The length of the set of nodes currently in the list\n\t\tthis.length = 0;\n\n\t\tthis.head = false;\n\t\tthis.tail = false;\n\t}\n\n\t// Create a node object.\n\tinitializeNode(pDatum, pHash)\n\t{\n\t\t// Don't allow undefined to be added to the list because of reasons\n\t\tif (typeof(pDatum) === 'undefined')\n\t\t\treturn false;\n\n\t\tthis.totalNodes++;\n\n\t\t// Get (or create) a unique hash\n\t\tlet tmpHash = (typeof(pHash) != 'undefined') ? pHash : `NODE[${this.totalNodes}]`;\n\n\t\tlet tmpNode = new libLinkedListNode();\n\n\t\ttmpNode.Hash = tmpHash;\n\t\ttmpNode.Datum = pDatum;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Add a node to the end (right of tail) of the list.\n\tappend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.tail.RightNode = tmpNode;\n\t\ttmpNode.LeftNode = this.tail;\n\t\tthis.tail = tmpNode;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Append to tail of list (FIFO)\n\tpush(pDatum, pHash)\n\t{\n\t\treturn this.append(pDatum, pHash);\n\t}\n\n\t// Add a node to the beginning (left of head) of the list.\n\tprepend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.head.LeftNode = tmpNode;\n\t\ttmpNode.RightNode = this.head;\n\t\tthis.head = tmpNode;\n\t\treturn tmpNode;\n\t}\n\n\t// Remove a node from the list\n\tremove(pNode)\n\t{\n\t\tif (typeof(pNode) === 'undefined')\n\t\t\treturn false;\n\n\t\tif (!pNode.__ISNODE)\n\t\t\treturn false;\n\n\t\tthis.length--;\n\n\t\t// Last element in list.  Empty it out.\n\t\tif (this.length < 1)\n\t\t{\n\t\t\tthis.head = false;\n\t\t\tthis.tail = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's somewhere in the middle, surgically remove it.\n\t\tif (pNode.LeftNode && pNode.RightNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = pNode.RightNode;\n\t\t\tpNode.RightNode.LeftNode = pNode.LeftNode;\n\n\t\t\tpNode.RightNode = false;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's the tail\n\t\tif (pNode.LeftNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = false;\n\t\t\tthis.tail = pNode.LeftNode;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It must be the head\n\t\tpNode.RightNode.LeftNode = false;\n\t\tthis.head = pNode.RightNode;\n\t\tpNode.RightNode = false;\n\t\treturn pNode;\n\t}\n\n\t// Remove the head of the list (FIFO)\n\tpop()\n\t{\n\t\treturn this.remove(this.head);\n\t}\n\n\t// Enumerate over each node IN ORDER, running the function fAction(pDatum, pHash, fCallback) then calling the function fComplete callback when done\n\teach(fAction, fComplete)\n\t{\n\t\tif (this.length < 1)\n\t\t\treturn fComplete();\n\n\t\tlet tmpNode = false;\n\n\t\tlet fIterator = (pError)=>\n\t\t{\n\t\t\t// If the user passed in a callback with an error, call their callback with the error\n\t\t\tif (pError)\n\t\t\t\treturn fComplete(pError);\n\n\t\t\t// If there is no node, this must be the initial run.\n\t\t\tif (!tmpNode)\n\t\t\t\ttmpNode = this.head;\n\t\t\t// Check if we are at the tail of the list\n\t\t\telse if (!tmpNode.RightNode)\n\t\t\t\treturn fComplete();\n\t\t\t// Proceed to the next node\n\t\t\telse\n\t\t\t\ttmpNode = tmpNode.RightNode;\n\n\t\t\t// Call the actual action\n\t\t\t// I hate this pattern because long tails eventually cause stack overflows.\n\t\t\tfAction(tmpNode.Datum, tmpNode.Hash, fIterator);\n\t\t};\n\n\t\t// Now kick off the iterator\n\t\treturn fIterator();\n\t}\n\n\t// Seek a specific node, 0 is the index of the first node.\n\tseek(pNodeIndex)\n\t{\n\t\tif (!pNodeIndex)\n\t\t\treturn false;\n\t\tif (this.length < 1)\n\t\t\treturn false;\n\t\tif (pNodeIndex >= this.length)\n\t\t\treturn false;\n\n\t\tlet tmpNode = this.head;\n\t\tfor (let i = 0; i < pNodeIndex; i++)\n\t\t{\n\t\t\ttmpNode = tmpNode.RightNode;\n\t\t}\n\n\t\treturn tmpNode;\n\t}\n}\n\nmodule.exports = LinkedList;\n},{\"./LinkedList-Node.js\":23}],25:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n\n},{\"./\":26,\"get-intrinsic\":68}],26:[function(require,module,exports){\n'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n\n},{\"function-bind\":67,\"get-intrinsic\":68}],27:[function(require,module,exports){\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n},{}],28:[function(require,module,exports){\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));\n},{}],29:[function(require,module,exports){\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_advancedFormat=t()}(this,(function(){\"use strict\";return function(e,t){var r=t.prototype,n=r.format;r.format=function(e){var t=this,r=this.$locale();if(!this.isValid())return n.bind(this)(e);var s=this.$utils(),a=(e||\"YYYY-MM-DDTHH:mm:ssZ\").replace(/\\[([^\\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g,(function(e){switch(e){case\"Q\":return Math.ceil((t.$M+1)/3);case\"Do\":return r.ordinal(t.$D);case\"gggg\":return t.weekYear();case\"GGGG\":return t.isoWeekYear();case\"wo\":return r.ordinal(t.week(),\"W\");case\"w\":case\"ww\":return s.s(t.week(),\"w\"===e?1:2,\"0\");case\"W\":case\"WW\":return s.s(t.isoWeek(),\"W\"===e?1:2,\"0\");case\"k\":case\"kk\":return s.s(String(0===t.$H?24:t.$H),\"k\"===e?1:2,\"0\");case\"X\":return Math.floor(t.$d.getTime()/1e3);case\"x\":return t.$d.getTime();case\"z\":return\"[\"+t.offsetName()+\"]\";case\"zzz\":return\"[\"+t.offsetName(\"long\")+\"]\";default:return e}}));return n.bind(this)(a)}}}));\n},{}],30:[function(require,module,exports){\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isoWeek=t()}(this,(function(){\"use strict\";var e=\"day\";return function(t,i,s){var a=function(t){return t.add(4-t.isoWeekday(),e)},d=i.prototype;d.isoWeekYear=function(){return a(this).year()},d.isoWeek=function(t){if(!this.$utils().u(t))return this.add(7*(t-this.isoWeek()),e);var i,d,n,o,r=a(this),u=(i=this.isoWeekYear(),d=this.$u,n=(d?s.utc:s)().year(i).startOf(\"year\"),o=4-n.isoWeekday(),n.isoWeekday()>4&&(o+=7),n.add(o,e));return r.diff(u,\"week\")+1},d.isoWeekday=function(e){return this.$utils().u(e)?this.day()||7:this.day(this.day()%7?e:e-7)};var n=d.startOf;d.startOf=function(e,t){var i=this.$utils(),s=!!i.u(t)||t;return\"isoweek\"===i.p(e)?s?this.date(this.date()-(this.isoWeekday()-1)).startOf(\"day\"):this.date(this.date()-1-(this.isoWeekday()-1)+7).endOf(\"day\"):n.bind(this)(e,t)}}}));\n},{}],31:[function(require,module,exports){\n!function(r,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(r=\"undefined\"!=typeof globalThis?globalThis:r||self).dayjs_plugin_relativeTime=e()}(this,(function(){\"use strict\";return function(r,e,t){r=r||{};var n=e.prototype,o={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"};function i(r,e,t,o){return n.fromToBase(r,e,t,o)}t.en.relativeTime=o,n.fromToBase=function(e,n,i,d,u){for(var f,a,s,l=i.$locale().relativeTime||o,h=r.thresholds||[{l:\"s\",r:44,d:\"second\"},{l:\"m\",r:89},{l:\"mm\",r:44,d:\"minute\"},{l:\"h\",r:89},{l:\"hh\",r:21,d:\"hour\"},{l:\"d\",r:35},{l:\"dd\",r:25,d:\"day\"},{l:\"M\",r:45},{l:\"MM\",r:10,d:\"month\"},{l:\"y\",r:17},{l:\"yy\",d:\"year\"}],m=h.length,c=0;c<m;c+=1){var y=h[c];y.d&&(f=d?t(e).diff(i,y.d,!0):i.diff(e,y.d,!0));var p=(r.rounding||Math.round)(Math.abs(f));if(s=f>0,p<=y.r||!y.r){p<=1&&c>0&&(y=h[c-1]);var v=l[y.l];u&&(p=u(\"\"+p)),a=\"string\"==typeof v?v.replace(\"%d\",p):v(p,n,y.l,s);break}}if(n)return a;var M=s?l.future:l.past;return\"function\"==typeof M?M(a):M.replace(\"%s\",a)},n.to=function(r,e){return i(r,e,this,!0)},n.from=function(r,e){return i(r,e,this)};var d=function(r){return r.$u?t.utc():t()};n.toNow=function(r){return this.to(d(this),r)},n.fromNow=function(r){return this.from(d(this),r)}}}));\n},{}],32:[function(require,module,exports){\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_timezone=e()}(this,(function(){\"use strict\";var t={year:0,month:1,day:2,hour:3,minute:4,second:5},e={};return function(n,i,o){var r,a=function(t,n,i){void 0===i&&(i={});var o=new Date(t),r=function(t,n){void 0===n&&(n={});var i=n.timeZoneName||\"short\",o=t+\"|\"+i,r=e[o];return r||(r=new Intl.DateTimeFormat(\"en-US\",{hour12:!1,timeZone:t,year:\"numeric\",month:\"2-digit\",day:\"2-digit\",hour:\"2-digit\",minute:\"2-digit\",second:\"2-digit\",timeZoneName:i}),e[o]=r),r}(n,i);return r.formatToParts(o)},u=function(e,n){for(var i=a(e,n),r=[],u=0;u<i.length;u+=1){var f=i[u],s=f.type,m=f.value,c=t[s];c>=0&&(r[c]=parseInt(m,10))}var d=r[3],l=24===d?0:d,h=r[0]+\"-\"+r[1]+\"-\"+r[2]+\" \"+l+\":\"+r[4]+\":\"+r[5]+\":000\",v=+e;return(o.utc(h).valueOf()-(v-=v%1e3))/6e4},f=i.prototype;f.tz=function(t,e){void 0===t&&(t=r);var n=this.utcOffset(),i=this.toDate(),a=i.toLocaleString(\"en-US\",{timeZone:t}),u=Math.round((i-new Date(a))/1e3/60),f=o(a,{locale:this.$L}).$set(\"millisecond\",this.$ms).utcOffset(15*-Math.round(i.getTimezoneOffset()/15)-u,!0);if(e){var s=f.utcOffset();f=f.add(n-s,\"minute\")}return f.$x.$timezone=t,f},f.offsetName=function(t){var e=this.$x.$timezone||o.tz.guess(),n=a(this.valueOf(),e,{timeZoneName:t}).find((function(t){return\"timezonename\"===t.type.toLowerCase()}));return n&&n.value};var s=f.startOf;f.startOf=function(t,e){if(!this.$x||!this.$x.$timezone)return s.call(this,t,e);var n=o(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\"),{locale:this.$L});return s.call(n,t,e).tz(this.$x.$timezone,!0)},o.tz=function(t,e,n){var i=n&&e,a=n||e||r,f=u(+o(),a);if(\"string\"!=typeof t)return o(t).tz(a);var s=function(t,e,n){var i=t-60*e*1e3,o=u(i,n);if(e===o)return[i,e];var r=u(i-=60*(o-e)*1e3,n);return o===r?[i,o]:[t-60*Math.min(o,r)*1e3,Math.max(o,r)]}(o.utc(t,i).valueOf(),f,a),m=s[0],c=s[1],d=o(m).utcOffset(c);return d.$x.$timezone=a,d},o.tz.guess=function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},o.tz.setDefault=function(t){r=t}}}));\n},{}],33:[function(require,module,exports){\n!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_utc=i()}(this,(function(){\"use strict\";var t=\"minute\",i=/[+-]\\d\\d(?::?\\d\\d)?/g,e=/([+-]|\\d\\d)/g;return function(s,f,n){var u=f.prototype;n.utc=function(t){var i={date:t,utc:!0,args:arguments};return new f(i)},u.utc=function(i){var e=n(this.toDate(),{locale:this.$L,utc:!0});return i?e.add(this.utcOffset(),t):e},u.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var o=u.parse;u.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),o.call(this,t)};var r=u.init;u.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else r.call(this)};var a=u.utcOffset;u.utcOffset=function(s,f){var n=this.$utils().u;if(n(s))return this.$u?0:n(this.$offset)?a.call(this):this.$offset;if(\"string\"==typeof s&&(s=function(t){void 0===t&&(t=\"\");var s=t.match(i);if(!s)return null;var f=(\"\"+s[0]).match(e)||[\"-\",0,0],n=f[0],u=60*+f[1]+ +f[2];return 0===u?0:\"+\"===n?u:-u}(s),null===s))return this;var u=Math.abs(s)<=16?60*s:s,o=this;if(f)return o.$offset=u,o.$u=0===s,o;if(0!==s){var r=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(o=this.local().add(u+r,t)).$offset=u,o.$x.$localOffset=r}else o=this.utc();return o};var h=u.format;u.format=function(t){var i=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return h.call(this,i)},u.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*t},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var l=u.toDate;u.toDate=function(t){return\"s\"===t&&this.$offset?n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate():l.call(this)};var c=u.diff;u.diff=function(t,i,e){if(t&&this.$u===t.$u)return c.call(this,t,i,e);var s=this.local(),f=n(t).local();return c.call(s,f,i,e)}}}));\n},{}],34:[function(require,module,exports){\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekOfYear=t()}(this,(function(){\"use strict\";var e=\"week\",t=\"year\";return function(i,n,r){var f=n.prototype;f.week=function(i){if(void 0===i&&(i=null),null!==i)return this.add(7*(i-this.week()),\"day\");var n=this.$locale().yearStart||1;if(11===this.month()&&this.date()>25){var f=r(this).startOf(t).add(1,t).date(n),s=r(this).endOf(e);if(f.isBefore(s))return 1}var a=r(this).startOf(t).date(n).startOf(e).subtract(1,\"millisecond\"),o=this.diff(a,e,!0);return o<0?r(this).startOf(\"week\").week():Math.ceil(o)},f.weeks=function(e){return void 0===e&&(e=null),this.week(e)}}}));\n},{}],35:[function(require,module,exports){\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekday=t()}(this,(function(){\"use strict\";return function(e,t){t.prototype.weekday=function(e){var t=this.$locale().weekStart||0,i=this.$W,n=(i<t?i+7:i)-t;return this.$utils().u(e)?n:this.subtract(n,\"day\").add(e,\"day\")}}}));\n},{}],36:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n},{}],37:[function(require,module,exports){\n/**\n* Base Logger Class\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass BaseLogger extends libFableServiceProviderBase\n{\n\tconstructor(pLogStreamSettings, pLogStreamHash)\n\t{\n\t\tsuper(pLogStreamSettings, pLogStreamHash);\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = (typeof(pLogStreamSettings) == 'object') ? pLogStreamSettings : {};\n\n\t\tthis.serviceType = 'Logging-Provider';\n\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\t// We added this as the mechanism for tracking loggers to allow multiple simultaneous streams\n\t\t// to the same provider.\n\t\tthis.loggerUUID = this.generateInsecureUUID();\n\n\t\t// Eventually we can use this array to ompute which levels the provider allows.\n\t\t// For now it's just used to precompute some string concatenations.\n\t\tthis.levels = (\n\t\t\t[\n\t\t\t\t\"trace\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"info\",\n\t\t\t\t\"warn\",\n\t\t\t\t\"error\",\n\t\t\t\t\"fatal\"\n\t\t\t]);\n\t}\n\n\t// This is meant to generate programmatically insecure UUIDs to identify loggers\n\tgenerateInsecureUUID()\n\t{\n\t\tlet tmpDate = new Date().getTime();\n\t\tlet tmpUUID = 'LOGSTREAM-xxxxxx-yxxxxx'.replace(/[xy]/g,\n\t\t\t\t(pCharacter) =>\n\t\t\t\t{\n\t\t\t\t\t// Funny algorithm from w3resource that is twister-ish without the deep math and security\n\t\t\t\t\t// ..but good enough for unique log stream identifiers\n\t\t\t\t\tlet tmpRandomData = (tmpDate + Math.random()*16)%16 | 0;\n\t\t\t\t\ttmpDate = Math.floor(tmpDate/16);\n\n\t\t\t\t\treturn (pCharacter =='x' ? tmpRandomData : (tmpRandomData&0x3|0x8)).toString(16);\n\t\t\t\t});\n\t\treturn tmpUUID;\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n\n},{\"fable-serviceproviderbase\":43}],38:[function(require,module,exports){\n/**\n* Default Logger Provider Function\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\nvar getDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\ttmpDefaultProviders.default = tmpDefaultProviders.console;\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();\n},{\"./Fable-Log-Logger-Console.js\":40}],39:[function(require,module,exports){\nmodule.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]\n},{}],40:[function(require,module,exports){\nlet libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings);\n\n\t\tthis._ShowTimeStamps = this._Settings.hasOwnProperty('showtimestamps') ? (this._Settings.showtimestamps == true) : true;\n\t\tthis._FormattedTimeStamps = this._Settings.hasOwnProperty('formattedtimestamps') ? (this._Settings.formattedtimestamps == true) : true;\n\n\t\tthis._ContextMessage = this._Settings.hasOwnProperty('Context') ? `(${this._Settings.Context})` :\n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? `(${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'Unnamed_Log_Context';\n\n\t\t// Allow the user to decide what gets output to the console\n\t\tthis._OutputLogLinesToConsole = this._Settings.hasOwnProperty('outputloglinestoconsole') ? this._Settings.outputloglinestoconsole : true;\n\t\tthis._OutputObjectsToConsole = this._Settings.hasOwnProperty('outputobjectstoconsole') ? this._Settings.outputobjectstoconsole : true;\n\n\t\t// Precompute the prefix for each level\n\t\tthis.prefixCache = {};\n\t\tfor (let i = 0; i <= this.levels.length; i++)\n\t\t{\n\t\t\tthis.prefixCache[this.levels[i]] = `[${this.levels[i]}] ${this._ContextMessage}: `;\n\n\t\t\tif (this._ShowTimeStamps)\n\t\t\t{\n\t\t\t\t// If there is a timestamp we need a to prepend space before the prefixcache string, since the timestamp comes first\n\t\t\t\tthis.prefixCache[this.levels[i]] = ' '+this.prefixCache[this.levels[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpTimeStamp = '';\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = (new Date()).toISOString();\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = +new Date();\n\t\t}\n\n\t\tlet tmpLogLine = `${tmpTimeStamp}${this.prefixCache[pLevel]}${pLogText}`;\n\n\t\tif (this._OutputLogLinesToConsole)\n\t\t{\n\t\t\tconsole.log(tmpLogLine);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (this._OutputObjectsToConsole && (typeof(pObject) !== 'undefined'))\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 2));\n\t\t}\n\n\t\t// Provide an easy way to be overridden and be consistent\n\t\treturn tmpLogLine;\n\t}\n}\n\nmodule.exports = ConsoleLogger;\n},{\"./Fable-Log-BaseLogger.js\":37}],41:[function(require,module,exports){\nconst libConsoleLog = require('./Fable-Log-Logger-Console.js');\nconst libFS = require('fs');\nconst libPath = require('path');\n\nclass SimpleFlatFileLogger extends libConsoleLog\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings, pFableLog);\n\n\t\t// If a path isn't provided for the logfile, it tries to use the ProductName or Context\n\t\tthis.logFileRawPath = (this._Settings.hasOwnProperty('path')) ? this._Settings.path : `./${this._ContextMessage}.log`;\n\t\tthis.logFilePath = libPath.normalize(this.logFileRawPath);\n\n\t\tthis.logFileStreamOptions = (this._Settings.hasOwnProperty('fileStreamoptions')) ? this._Settings.fileStreamOptions : (\n\t\t\t{\n\t\t\t\t\"flags\": \"a\",\n\t\t\t\t\"encoding\": \"utf8\"\n\t\t\t})\n\n\t\tthis.fileWriter = libFS.createWriteStream(this.logFilePath, this.logFileStreamOptions);\n\n\t\tthis.activelyWriting = false;\n\n\t\tthis.logLineStrings = [];\n\t\tthis.logObjectStrings = [];\n\n\t\tthis.defaultWriteCompleteCallback = ()=>{};\n\t\tthis.defaultBufferFlushCallback = ()=>{};\n\t}\n\n\tcloseWriter(fCloseComplete)\n\t{\n\t\tlet tmpCloseComplete = (typeof(fCloseComplete) == 'function') ? fCloseComplete : ()=>{};\n\t\tif (this.fileWriter)\n\t\t{\n\t\t\tthis.fileWriter.end('\\n');\n\t\t\treturn this.fileWriter.once('finish', tmpCloseComplete.bind(this));\n\t\t}\n\t}\n\n\tcompleteBufferFlushToLogFile(fFlushComplete)\n\t{\n\t\tthis.activelyWriting = false;\n\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\tif (this.logLineStrings.length > 0)\n\t\t{\n\t\t\tthis.flushBufferToLogFile(tmpFlushComplete);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpFlushComplete();\n\t\t}\n\t}\n\n\tflushBufferToLogFile(fFlushComplete)\n\t{\n\t\tif (!this.activelyWriting)\n\t\t{\n\t\t\t// Only want to be writing one thing at a time....\n\t\t\tthis.activelyWriting = true;\n\n\t\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\t\t// Get the current buffer arrays.  These should always have matching number of elements.\n\t\t\tlet tmpLineStrings = this.logLineStrings;\n\t\t\tlet tmpObjectStrings = this.logObjectStrings;\n\n\t\t\t// Reset these to be filled while we process this queue...\n\t\t\tthis.logLineStrings = [];\n\t\t\tthis.logObjectStrings = [];\n\n\t\t\t// This is where we will put each line before writing it to the file...\n\t\t\tlet tmpConstructedBufferOutputString = '';\n\n\t\t\tfor (let i = 0; i < tmpLineStrings.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: Windows Newline?   ....... yo no se!\n\t\t\t\ttmpConstructedBufferOutputString += `${tmpLineStrings[i]}\\n`;\n\t\t\t\tif (tmpObjectStrings[i] !== false)\n\t\t\t\t{\n\t\t\t\t\ttmpConstructedBufferOutputString += `${tmpObjectStrings[i]}\\n`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.fileWriter.write(tmpConstructedBufferOutputString, 'utf8'))\n\t\t\t{\n\t\t\t\t// If the streamwriter returns false, we need to wait for it to drain.\n\t\t\t\tthis.fileWriter.once('drain', this.completeBufferFlushToLogFile.bind(this, tmpFlushComplete));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.completeBufferFlushToLogFile(tmpFlushComplete);\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpLogLine = super.write(pLevel, pLogText, pObject);\n\n\t\t// Use a very simple array as the write buffer\n\t\tthis.logLineStrings.push(tmpLogLine);\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tthis.logObjectStrings.push(JSON.stringify(pObject, null, 4));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logObjectStrings.push(false);\n\t\t}\n\n\t\tthis.flushBufferToLogFile();\n\t}\n}\n\nmodule.exports = SimpleFlatFileLogger;\n},{\"./Fable-Log-Logger-Console.js\":40,\"fs\":19,\"path\":89}],42:[function(require,module,exports){\n/**\n* Fable Logging Service\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass FableLog extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'Logging';\n\n\t\tlet tmpSettings = (typeof(pSettings) === 'object') ? pSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders-Node.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'default',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\nmodule.exports = FableLog;\nmodule.exports.LogProviderBase = require('./Fable-Log-BaseLogger.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-Console.js');\nmodule.exports.LogProviderFlatfile = require('./Fable-Log-Logger-SimpleFlatFile.js');\n\n},{\"./Fable-Log-BaseLogger.js\":37,\"./Fable-Log-DefaultProviders-Node.js\":38,\"./Fable-Log-DefaultStreams.json\":39,\"./Fable-Log-Logger-Console.js\":40,\"./Fable-Log-Logger-SimpleFlatFile.js\":41,\"fable-serviceproviderbase\":43}],43:[function(require,module,exports){\n/**\n* Fable Service Base\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\t// The constructor can be used in two ways:\n\t// 1) With a fable, options object and service hash (the options object and service hash are optional)\n\t// 2) With an object or nothing as the first parameter, where it will be treated as the options object\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Check if a fable was passed in; connect it if so\n\t\tif ((typeof(pFable) === 'object') && pFable.isFable)\n\t\t{\n\t\t\tthis.connectFable(pFable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.fable = false;\n\t\t}\n\n\t\t// initialize options and UUID based on whether the fable was passed in or not.\n\t\tif (this.fable)\n\t\t{\n\t\t\tthis.UUID = pFable.getUUID();\n\t\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t\t: {};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// With no fable, check to see if there was an object passed into either of the first two\n\t\t\t// Parameters, and if so, treat it as the options object\n\t\t\tthis.options = ((typeof(pFable) === 'object') && !pFable.isFable) ? pFable\n\t\t\t\t\t\t\t: (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t\t: {};\n\t\t\tthis.UUID = `CORE-SVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`\n\t\t}\n\n\t\t// It's expected that the deriving class will set this\n\t\tthis.serviceType = `Unknown-${this.UUID}`;\n\n\t\t// The service hash is used to identify the specific instantiation of the service in the services map\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash \n\t\t\t\t\t: (!this.fable && (typeof(pOptions) === 'string')) ? pOptions\n\t\t\t\t\t: `${this.UUID}`;\n\t}\n\n\tconnectFable(pFable)\n\t{\n\t\tif ((typeof(pFable) !== 'object') || (!pFable.isFable))\n\t\t{\n\t\t\tlet tmpErrorMessage = `Fable Service Provider Base: Cannot connect to Fable, invalid Fable object passed in.  The pFable parameter was a [${typeof(pFable)}].}`;\n\t\t\tconsole.log(tmpErrorMessage);\n\t\t\treturn new Error(tmpErrorMessage);\n\t\t}\n\n\t\tif (!this.fable)\n\t\t{\n\t\t\tthis.fable = pFable;\n\t\t}\n\n\t\tif (!this.log)\n\t\t{\n\t\t\tthis.log = this.fable.Logging;\n\t\t}\n\t\tif (!this.services)\n\t\t{\n\t\t\tthis.services = this.fable.services;\n\t\t}\n\n\t\tif (!this.servicesMap)\n\t\t{\n\t\t\tthis.servicesMap = this.fable.servicesMap;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tstatic isFableService = true;\n}\n\nmodule.exports = FableServiceProviderBase;\n\n// This is left here in case we want to go back to having different code/base class for \"core\" services\nmodule.exports.CoreServiceProviderBase = FableServiceProviderBase;\n},{}],44:[function(require,module,exports){\nmodule.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n\n},{}],45:[function(require,module,exports){\n(function (process){(function (){\n/**\n* Fable Settings Template Processor\n*\n* This class allows environment variables to come in via templated expressions, and defaults to be set.\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\nconst libPrecedent = require('precedent');\n\nclass FableSettingsTemplateProcessor\n{\n\tconstructor(pDependencies)\n\t{\n        // Use a no-dependencies templating engine to parse out environment variables\n\t\tthis.templateProcessor = new libPrecedent();\n\n        // TODO: Make the environment variable wrap expression demarcation characters configurable?\n\t\tthis.templateProcessor.addPattern('${', '}',\n\t\t\t(pTemplateValue)=>\n\t\t\t{\n\t\t\t\tlet tmpTemplateValue = pTemplateValue.trim();\n\n\t\t\t\tlet tmpSeparatorIndex = tmpTemplateValue.indexOf('|');\n\n\t\t\t\tconst tmpDefaultValue = tmpSeparatorIndex >= 0 ? tmpTemplateValue.substring(tmpSeparatorIndex+1) : '';\n\n\t\t\t\tlet tmpEnvironmentVariableName = (tmpSeparatorIndex > -1) ? tmpTemplateValue.substring(0, tmpSeparatorIndex) : tmpTemplateValue;\n\n\t\t\t\tif (process.env.hasOwnProperty(tmpEnvironmentVariableName))\n\t\t\t\t{\n\t\t\t\t\treturn process.env[tmpEnvironmentVariableName];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpDefaultValue;\n\t\t\t\t}\n\t\t\t});\n    }\n\n    parseSetting(pString)\n    {\n        return this.templateProcessor.parseString(pString);\n    }\n}\n\nmodule.exports = FableSettingsTemplateProcessor;\n\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":95,\"precedent\":92}],46:[function(require,module,exports){\n/**\n* Fable Settings Add-on\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nconst libFableSettingsTemplateProcessor = require('./Fable-Settings-TemplateProcessor.js');\n\nclass FableSettings extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'SettingsManager';\n\n\t\t// Initialize the settings value template processor\n\t\tthis.settingsTemplateProcessor = new libFableSettingsTemplateProcessor();\n\n\t\t// set straight away so anything that uses it respects the initial setting\n\t\tthis._configureEnvTemplating(pSettings);\n\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')));\n\t}\n\n\t// Update the configuration for environment variable templating based on the current settings object\n\t_configureEnvTemplating(pSettings)\n\t{\n\t\t// default environment variable templating to on\n\t\tthis._PerformEnvTemplating = !pSettings || pSettings.NoEnvReplacement !== true;\n\t}\n\n\t// Resolve (recursive) any environment variables found in settings object.\n\t_resolveEnv(pSettings)\n\t{\n\t\tfor (const tmpKey in pSettings)\n\t\t{\n\t\t\tif (typeof(pSettings[tmpKey]) === 'object')\n\t\t\t{\n\t\t\t\tthis._resolveEnv(pSettings[tmpKey]);\n\t\t\t}\n\t\t\telse if (typeof(pSettings[tmpKey]) === 'string')\n\t\t\t{\n\t\t\t\tpSettings[tmpKey] = this.settingsTemplateProcessor.parseSetting(pSettings[tmpKey]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if a value is an object (but not an array).\n\t */\n\t_isObject(value)\n\t{\n\t\treturn typeof(value) === 'object' && !Array.isArray(value);\n\t}\n\n\t/**\n\t * Merge two plain objects. Keys that are objects in both will be merged property-wise.\n\t */\n\t_deepMergeObjects(toObject, fromObject)\n\t{\n\t\tif (!fromObject || !this._isObject(fromObject))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.keys(fromObject).forEach((key) =>\n\t\t{\n\t\t\tconst fromValue = fromObject[key];\n\t\t\tif (this._isObject(fromValue))\n\t\t\t{\n\t\t\t\tconst toValue = toObject[key];\n\t\t\t\tif (toValue && this._isObject(toValue))\n\t\t\t\t{\n\t\t\t\t\t// both are objects, so do a recursive merge\n\t\t\t\t\tthis._deepMergeObjects(toValue, fromValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoObject[key] = fromValue;\n\t\t});\n\t\treturn toObject;\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\t\ttmpSettingsTo = this._deepMergeObjects(tmpSettingsTo, tmpSettingsFromCopy);\n\n\t\tif (this._PerformEnvTemplating)\n\t\t{\n\t\t\tthis._resolveEnv(tmpSettingsTo);\n\t\t}\n\t\t// Update env tempating config, since we just updated the config object, and it may have changed\n\t\tthis._configureEnvTemplating(tmpSettingsTo);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\n\t\tthis.settings = this._deepMergeObjects(tmpSettingsFromCopy, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = FableSettings;\nmodule.exports.new = autoConstruct;\n},{\"./Fable-Settings-Default\":44,\"./Fable-Settings-TemplateProcessor.js\":45,\"fable-serviceproviderbase\":43}],47:[function(require,module,exports){\n/**\n* Random Byte Generator - Browser version\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn this.generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n\n},{}],48:[function(require,module,exports){\n/**\n* Fable UUID Generator\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;0\n\nconst libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'UUID';\n\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = FableUUID;\nmodule.exports.new = autoConstruct;\n\n},{\"./Fable-UUID-Random.js\":47,\"fable-serviceproviderbase\":43}],49:[function(require,module,exports){\n/**\n* Fable Application Services Support Library\n* @author <steven@velozo.com>\n*/\n// Pre-init services\nconst libFableSettings = require('fable-settings');\nconst libFableUUID = require('fable-uuid');\nconst libFableLog = require('fable-log');\n\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass Fable extends libFableServiceBase.CoreServiceProviderBase\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\t// Initialization Phase 0: Set up the lowest level state (fable is a utility service manager at heart)\n\t\tthis.serviceType = 'ServiceManager';\n\n\t\t// An array of the types of services available\n\t\tthis.serviceTypes = [];\n\t\t// A map of instantiated services\n\t\tthis.servicesMap = {};\n\t\t// A map of the default instantiated service by type\n\t\tthis.services = {};\n\n\t\t// A map of class constructors for services\n\t\tthis.serviceClasses = {};\n\n\t\t// If we need extra service initialization capabilities\n\t\tthis.extraServiceInitialization = false;\n\n\n\t\t// Initialization Phase 1: Set up the core utility services\n\t\t// These are things like power, water, and sewage.  They are required for fable to run (e.g. logging, settings, etc)\n\n\t\t// Instantiate the default Settings Manager\n\t\tthis.SettingsManager = new libFableSettings(pSettings);\n\t\tthis.SettingsManager = this.SettingsManager;\n\t\t// Instantiate the UUID generator\n\t\tthis.UUID = new libFableUUID(this.SettingsManager.settings);\n\t\t// Instantiate the logging system\n\t\tthis.Logging = new libFableLog(this.SettingsManager.settings);\n\t\tthis.Logging.initialize();\n\n\t\t// Initialization Phase 1.5: Instantiate the service manager\n\t\t// This is the start actual bootstrapping point for fable.\n\t\t// For consistency fable is treated as a service.\n\t\tthis.ServiceManager = this;\n\t\tthis.connectFable(this);\n\t\t// --> Bootstrapping of fable into the Service Manager is complete\n\n\t\t// Initialization Phase 2: Map in the default services.\n\t\t// They will then be available in the Default service provider set as well.\n\t\tthis.connectPreinitServiceProviderInstance(this.UUID);\n\t\tthis.connectPreinitServiceProviderInstance(this.Logging);\n\t\tthis.connectPreinitServiceProviderInstance(this.SettingsManager);\n\n\t\t// Initialize and instantiate the default baked-in Data Arithmatic service\n\t\tthis.addAndInstantiateServiceType('EnvironmentData', require('./services/Fable-Service-EnvironmentData.js'));\n\t\tthis.addServiceType('Template', require('./services/Fable-Service-Template.js'));\n\t\tthis.addServiceType('MetaTemplate', require('./services/Fable-Service-MetaTemplate.js'));\n\t\tthis.addServiceType('Anticipate', require('./services/Fable-Service-Anticipate.js'));\n\t\tthis.addAndInstantiateServiceType('Dates', require('./services/Fable-Service-DateManipulation.js'));\n\t\tthis.addAndInstantiateServiceType('DataFormat', require('./services/Fable-Service-DataFormat.js'));\n\t\tthis.addAndInstantiateServiceType('DataGeneration', require('./services/Fable-Service-DataGeneration.js'));\n\t\tthis.addAndInstantiateServiceType('Utility', require('./services/Fable-Service-Utility.js'));\n\t\tthis.addServiceType('Operation', require('./services/Fable-Service-Operation.js'));\n\t\tthis.addServiceType('RestClient', require('./services/Fable-Service-RestClient.js'));\n\t\tthis.addServiceType('CSVParser', require('./services/Fable-Service-CSVParser.js'));\n\t\tthis.addServiceType('Manifest', require('manyfest'));\n\t\tthis.addServiceType('ObjectCache', require('cachetrax'));\n\t\tthis.addServiceType('FilePersistence', require('./services/Fable-Service-FilePersistence.js'));\n\t}\n\n\t/* State Accessors */\n\tget isFable()\n\t{\n\t\treturn true;\n\t}\n\n\tget settings()\n\t{\n\t\treturn this.SettingsManager.settings;\n\t}\n\n\tget settingsManager()\n\t{\n\t\treturn this.SettingsManager;\n\t}\n\n\t// For backwards compatibility\n\tgetUUID()\n\t{\n\t\treturn this.UUID.getUUID();\n\t}\n\n\t/* Service Manager Methods */\n\taddServiceType(pServiceType, pServiceClass)\n\t{\n\t\tif (this.servicesMap.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\t// TODO: Check if any services are running?\n\t\t\tthis.log.warn(`Adding a service type [${pServiceType}] that already exists.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the container for instantiated services to go in\n\t\t\tthis.servicesMap[pServiceType] = {};\n\n\t\t\t// Add the type to the list of types\n\t\t\tthis.serviceTypes.push(pServiceType);\n\t\t}\n\n\t\t// Using the static member of the class is a much more reliable way to check if it is a service class than instanceof\n\t\tif ((typeof(pServiceClass) == 'function') && (pServiceClass.isFableService))\n\t\t{\n\t\t\t// Add the class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = pServiceClass;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the base class to the list of classes\n\t\t\tthis.log.error(`Attempted to add service type [${pServiceType}] with an invalid class.  Using base service class, which will not crash but won't provide meaningful services.`);\n\t\t\tthis.serviceClasses[pServiceType] = libFableServiceBase;\n\t\t}\n\t}\n\n\t// This is for the services that are meant to run mostly single-instance so need a default at initialization\n\taddAndInstantiateServiceType(pServiceType, pServiceClass)\n\t{\n\t\tthis.addServiceType(pServiceType, pServiceClass);\n\t\treturn this.instantiateServiceProvider(pServiceType, {}, `${pServiceType}-Default`);\n\t}\n\n\t// Some services expect to be overloaded / customized class.\n\tinstantiateServiceProviderFromPrototype(pServiceType, pOptions, pCustomServiceHash, pServicePrototype)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new pServicePrototype(this, pOptions, pCustomServiceHash);\n\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\tinstantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = this.instantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\t// Create a service provider but don't register it to live forever in fable.services\n\tinstantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new this.serviceClasses[pServiceType](this, pOptions, pCustomServiceHash);\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\t\treturn tmpService;\n\t}\n\n\t// Connect an initialized service provider that came before Fable was initialized\n\tconnectPreinitServiceProviderInstance(pServiceInstance)\n\t{\n\t\tlet tmpServiceType = pServiceInstance.serviceType;\n\t\tlet tmpServiceHash = pServiceInstance.Hash;\n\n\t\t// The service should already be instantiated, so just connect it to fable\n\t\tpServiceInstance.connectFable(this);\n\n\t\t// Add the service type to the map if it isn't there yet\n\t\tif (!this.servicesMap.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\t// If the core service hasn't registered itself yet, create the service container for it.\n\t\t\t// This means you couldn't register another with this type unless it was later registered with a constructor class.\n\t\t\tthis.servicesMap[tmpServiceType] = {};\n\t\t}\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[tmpServiceType][tmpServiceHash] = pServiceInstance;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(tmpServiceType, tmpServiceHash, false);\n\t\t}\n\n\t\treturn pServiceInstance;\n\t}\n\n\tsetDefaultServiceInstantiation(pServiceType, pServiceHash, pOverwriteService)\n\t{\n\t\t// Overwrite services by default, unless told not to\n\t\tlet tmpOverwriteService = (typeof(pOverwriteService) === 'undefined') ? true : pOverwriteService;\n\t\t// Make sure the service exists\n\t\tif (this.servicesMap[pServiceType].hasOwnProperty(pServiceHash))\n\t\t{\n\t\t\tif (!this.hasOwnProperty(pServiceType) || tmpOverwriteService)\n\t\t\t{\n\t\t\t\tthis[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\t}\n\t\t\tif (!this.services.hasOwnProperty(pServiceType) || tmpOverwriteService)\n\t\t\t{\n\t\t\t\tthis.services[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\t\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = Fable;\nmodule.exports.new = autoConstruct;\n\nmodule.exports.LogProviderBase = libFableLog.LogProviderBase;\nmodule.exports.ServiceProviderBase = libFableServiceBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceBase.CoreServiceProviderBase;\n\nmodule.exports.precedent = libFableSettings.precedent;\n},{\"./services/Fable-Service-Anticipate.js\":50,\"./services/Fable-Service-CSVParser.js\":51,\"./services/Fable-Service-DataFormat.js\":52,\"./services/Fable-Service-DataGeneration.js\":54,\"./services/Fable-Service-DateManipulation.js\":55,\"./services/Fable-Service-EnvironmentData.js\":56,\"./services/Fable-Service-FilePersistence.js\":57,\"./services/Fable-Service-MetaTemplate.js\":58,\"./services/Fable-Service-Operation.js\":62,\"./services/Fable-Service-RestClient.js\":63,\"./services/Fable-Service-Template.js\":64,\"./services/Fable-Service-Utility.js\":65,\"cachetrax\":22,\"fable-log\":42,\"fable-serviceproviderbase\":43,\"fable-settings\":46,\"fable-uuid\":48,\"manyfest\":86}],50:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceAnticipate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'AsyncAnticipate';\n\n\t\t// The queue of operations waiting to run.\n\t\tthis.operationQueue = [];\n\t\tthis.erroredOperations = [];\n\n\t\tthis.executingOperationCount = 0;\n\t\tthis.completedOperationCount = 0;\n\n\t\tthis.maxOperations = 1;\n\n\t\tthis.lastError = undefined;\n\t\tthis.waitingFunctions = [];\n\t}\n\n\tcheckQueue()\n\t{\n\t\t// This checks to see if we need to start any operations.\n\t\tif (this.operationQueue.length > 0 && this.executingOperationCount < this.maxOperations)\n\t\t{\n\t\t\tlet tmpOperation = this.operationQueue.shift();\n\t\t\tthis.executingOperationCount += 1;\n\t\t\ttmpOperation(this.buildAnticipatorCallback());\n\t\t}\n\t\telse if (this.waitingFunctions.length > 0 && this.executingOperationCount < 1)\n\t\t{\n\t\t\t// If there are no operations left, and we have waiting functions, call them.\n\t\t\tfor (let i = 0; i < this.waitingFunctions.length; i++)\n\t\t\t{\n\t\t\t\tthis.waitingFunctions[i](this.lastError);\n\t\t\t}\n\t\t\t// Reset our state\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.waitingFunctions = [];\n\t\t}\n\t}\n\n\t// Expects a function fAsynchronousFunction(fCallback)\n\tanticipate(fAsynchronousFunction)\n\t{\n\t\tthis.operationQueue.push(fAsynchronousFunction);\n\t\tthis.checkQueue();\n\t}\n\n\tbuildAnticipatorCallback()\n\t{\n\t\t// This uses closure-scoped state to track the callback state\n\t\tlet tmpCallbackState = (\n\t\t\t{\n\t\t\t\tCalled: false,\n\t\t\t\tError: undefined,\n\t\t\t\tOperationSet: this\n\t\t\t});\t\t\n\t\treturn hoistedCallback;\n\t\tfunction hoistedCallback(pError)\n\t\t{\n\t\t\tif (tmpCallbackState.Called)\n\t\t\t{\n\t\t\t\t// If they call the callback twice, throw an error\n\t\t\t\tthrow new Error(\"Anticipation async callback called twice...\");\n\t\t\t}\n\t\t\ttmpCallbackState.Called = true;\n\t\t\ttmpCallbackState.error = pError;\n\n\t\t\ttmpCallbackState.OperationSet.executingOperationCount -= 1;\n\t\t\ttmpCallbackState.OperationSet.completedOperationCount += 1;\n\n\t\t\ttmpCallbackState.OperationSet.checkQueue();\n\t\t}\n\t}\n\n\twait(fCallback)\n\t{\n\t\tthis.waitingFunctions.push(fCallback);\n\t\tthis.checkQueue();\n\t}\n}\n\nmodule.exports = FableServiceAnticipate;\n},{\"fable-serviceproviderbase\":43}],51:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Parsing CSVs.  Why?  Because it's a thing that needs to be done.\n*\n* 1. And the other node CSV parsers had issues with the really messy files we had.\n* \n*\n* 2. None of the CSV parsers dealt with and multi-line quoted string columns\n*    which are apparently a-ok according to the official spec.\n* Plus a lot of them are asynchronous because apparently that's the best way to\n* do anything; unfortunately some files have a sequence issue with that.\n*\n* @class CSVParser\n*/\nclass CSVParser extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'CSVParser';\n\n        this.Header = [];\n        this.HeaderFieldNames = [];\n\n        this.Delimiter = ',';\n        this.QuoteCharacter = '\"';\n\n        this.CleanCharacters = ['\\r'];\n\n        this.HeaderLineIndex = 0;\n        this.HasHeader = true;\n        this.HasSetHeader = false;\n        this.EmitHeader = false;\n\n        this.EmitJSON = true;\n\n        this.EscapedQuoteString = '&quot;';\n\n        // Current Line Parsing State\n        this.CurrentLine = '';\n        this.CurrentRecord = [];\n\n        this.InQuote = false;\n        this.InEscapedQuote = false;\n\n        this.LinesParsed = 0;\n        this.RowsEmitted = 0;\n    }\n\n    marshalRowToJSON(pRowArray)\n    {\n        if (!Array.isArray(pRowArray))\n        {\n            return false;\n        }\n\n        for (let i = this.HeaderFieldNames.length; i < pRowArray.length; i++)\n        {\n            this.HeaderFieldNames[i] = `${i}`;\n        }\n\n        let tmpObject = {};\n\n        for (let i = 0; i < pRowArray.length; i++)\n        {\n            tmpObject[this.HeaderFieldNames[i]] = pRowArray[i];\n        }\n\n        return tmpObject;\n    }\n\n    // Set the header data, for use in marshalling to JSON.\n    setHeader (pHeaderArray)\n    {\n        this.Header = pHeaderArray;\n\n        for (let i = 0; i < this.Header.length; i++)\n        {\n            if (typeof(this.Header[i]) == 'undefined')\n            {\n                this.HeaderFieldNames[i] = `${i}`;\n            }\n            else\n            {\n                this.HeaderFieldNames[i] = this.Header[i].toString();\n            }\n        }\n    }\n\n    resetRowState()\n    {\n        this.CurrentRecord = [];\n    }\n\n    pushLine()\n    {\n        for (let i = 0; i < this.CleanCharacters.length; i++)\n        {\n            this.CurrentLine = this.CurrentLine.replace(this.CleanCharacters[i],'');\n        }\n        this.CurrentRecord.push(this.CurrentLine);\n        this.CurrentLine = '';\n    }\n\n    emitRow(pFormatAsJSON)\n    {\n        let tmpFormatAsJSON = (typeof(pFormatAsJSON) == 'undefined') ? this.EmitJSON : pFormatAsJSON;\n\n        this.RowsEmitted++;\n        let tmpCompletedRecord = this.CurrentRecord;\n        this.CurrentRecord = [];\n\n        if (tmpFormatAsJSON)\n        {\n            return this.marshalRowToJSON(tmpCompletedRecord);\n        }\n        else\n        {\n            return tmpCompletedRecord;\n        }\n    }\n\n    parseCSVLine (pLineString)\n    {\n        this.LinesParsed++;\n\n        for (let i = 0; i < pLineString.length; i++)\n        {\n            if ((!this.InQuote) && (pLineString[i] == this.Delimiter))\n            {\n                this.pushLine();\n            }\n            else if (pLineString[i] == this.QuoteCharacter)\n            {\n                // If we are in the second part of an escaped quote, ignore it.\n                if (this.InEscapedQuote)\n                {\n                    this.InEscapedQuote = false;\n                }\n                // If we aren't in a quote, enter quote\n                else if (!this.InQuote)\n                {\n                    this.InQuote = true;\n                }\n                // We are in a quote, so peek forward to see if this is an \"escaped\" quote pair\n                else if ((i < pLineString.length) && (pLineString[i+1] == this.QuoteCharacter))\n                {\n                    this.CurrentLine += this.EscapedQuoteString;\n                    this.InEscapedQuote = true;\n                }\n                // We are in a quote, this isn't an \"escaped\" quote pair, so go out of quote mode\n                else\n                {\n                    this.InQuote = false;\n                }\n            }\n            else\n            {\n                this.CurrentLine += pLineString[i];\n            }\n        }\n\n        // See if we are in a multiline quoted entry -- if not, emit the row.\n        if (!this.InQuote)\n        {\n            // Push the last remaining column from the buffer to the current line.\n            this.pushLine();\n\n            // Check to see if there is a header -- and if so, if this is the header row\n            if (this.HasHeader && !this.HasSetHeader && (this.RowsEmitted == this.HeaderLineIndex))\n            {\n                this.HasSetHeader = true;\n                // Override the format as json bit\n                this.setHeader(this.emitRow(false));\n\n                // No matter what, formatting this as JSON is silly and we don't want to go there anyway.\n                if (this.EmitHeader)\n                {\n                    return this.Header;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n            else\n            {\n                return this.emitRow();\n            }\n        }\n        else\n        {\n            return false;\n        }\n    };\n}\n\nmodule.exports = CSVParser;\n},{\"fable-serviceproviderbase\":43}],52:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Data Formatting and Translation Functions\n*\n* @class DataFormat\n*/\nclass DataFormat extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'DataArithmatic';\n\n\t\t// Regular Expressions (so they don't have to be recompiled every time)\n\t\t// These could be defined as static, but I'm not sure if that will work with browserify ... and specifically the QT browser.\n\t\tthis._Regex_formatterInsertCommas = /.{1,3}/g;\n\t\t// Match Function:\n\t\t// function(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t\t// Thoughts about below:   /^([+-]?)(0*)(\\d+)(\\.(\\d+))?$/;\n\t\tthis._Regex_formatterAddCommasToNumber = /^([-+]?)(0?)(\\d+)(.?)(\\d+)$/g;\n\t\tthis._Regex_formatterDollarsRemoveCommas = /,/gi;\n\t\tthis._Regex_formatterCleanNonAlphaChar = /[^a-zA-Z]/gi;\n\t\tthis._Regex_formatterCapitalizeEachWord = /([a-zA-Z]+)/g;\n\n\t\t// TODO: Potentially pull these in from a configuration.\n\t\t// TODO: Use locale data for this if it's defaults all the way down.\n\t\tthis._Value_MoneySign_Currency = '$';\n\t\tthis._Value_NaN_Currency = '--';\n\t\tthis._Value_GroupSeparator_Number = ',';\n\n\t\tthis._Value_Prefix_StringHash = 'HSH';\n\t\tthis._Value_Clean_formatterCleanNonAlpha = '';\n\n\t\tthis._UseEngineStringStartsWith = (typeof(String.prototype.startsWith) === 'function');\n\t\tthis._UseEngineStringEndsWith = (typeof(String.prototype.endsWith) === 'function');\n\t}\n\n\n\t/*************************************************************************\n\t * String Manipulation and Comparison Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Reverse a string\n\t *\n\t * @param {string} pString - The string to reverse\n\t * @returns {string}\n\t */\n\tstringReverse (pString)\n\t{\n\t\t// TODO: Benchmark if there are faster ways we want to do this with all the newer JS stuff\n\t\t//       ... and if it will work with browserify in a clean way.\n\t\treturn pString.split('').reverse().join('');\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pStartIndex\n\t * @returns {*}\n\t */\n\tstringStartsWith (pString, pSearchString, pStartIndex)\n\t{\n\t\tif (this._UseEngineStringStartsWith)\n\t\t{\n\t\t\treturn pString.startsWith(pSearchString, pStartIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringStartsWith_Polyfill.call(pString, pSearchString, pStartIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pStartIndex - The index to start the search at\n\t * @returns {boolean}\n\t */\n\tstringStartsWith_Polyfill (pSearchString, pStartIndex)\n\t{\n\t\treturn this.slice(pStartIndex || 0, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pEndIndex\n\t * @returns {*}\n\t */\n\tstringEndsWith (pString, pSearchString, pEndIndex)\n\t{\n\t\tif (this._UseEngineStringEndsWith)\n\t\t{\n\t\t\treturn pString.endsWith(pSearchString, pEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringEndsWith_Polyfill.call(pString, pSearchString, pEndIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pEndIndex - The index to end the search at\n\t * @returns {boolean}\n\t */\n\tstringEndsWith_Polyfill (pSearchString, pEndIndex)\n\t{\n\t\t// This works much better than >= because\n\t\t// it compensates for NaN:\n\t\tif (!(pEndIndex < this.length))\n\t\t{\n\t\t\tpEndIndex = this.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpEndIndex |= 0; // round position\n\t\t}\n\t\treturn this.substr(pEndIndex - pSearchString.length, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Generate an insecure string hash.  Not meant to be secure, just a quick way to generate a hash for a string.  This is not a cryptographic hash.  Additional warranty and disclaimer ... this is not for passwords!\n\t *\n\t * @param {string} pString\n\t * @returns {string}\n\t */\n\tinsecureStringHash (pString)\n\t{\n\t\tlet tmpHash = 0;\n\t\tlet tmpStringLength = pString.length;\n\t\tlet tmpCharacterIndex = 0;\n\n\t\twhile (tmpCharacterIndex < tmpStringLength)\n\t\t{\n\t\t\ttmpHash = (tmpHash << 5) - tmpHash + pString.charCodeAt(tmpCharacterIndex++) | 0;\n\t\t}\n\n\t\treturn `${this._Value_Prefix_StringHash}${tmpHash}`;\n\t}\n\n\tcapitalizeEachWord (pString)\n\t{\n\t\treturn pString.replace(this._Regex_formatterCapitalizeEachWord,\n\t\t\t(pMatch) =>\n\t\t\t{\n\t\t\t\treturn pMatch.charAt(0).toUpperCase() + pMatch.substr(1);\n\t\t\t});\n\t}\n\n\t/**\n\t * Clean wrapping characters if they exist consistently around the string.  If they do not, the string is returned unchanged.\n\t *\n\t * @param {string} pWrapCharacter - The character expected as the wrapping character\n\t * @param {string} pString - the string to clean\n\t * @returns {string}\n\t */\n\tcleanEnclosureWrapCharacters (pWrapCharacter, pString)\n\t{\n\t\t// # Use case from ManyFest DSL:\n\t\t//\n\t\t// When a boxed property is passed in, it should have quotes of some\n\t\t// kind around it.\n\t\t//\n\t\t// For instance:\n\t\t// \t\tMyValues['Name']\n\t\t// \t\tMyValues[\"Age\"]\n\t\t// \t\tMyValues[`Cost`]\n\t\t//\n\t\t// This function is necessary to remove the wrapping quotes before object\n\t\t// resolution can occur.\n\t\tif (pString.startsWith(pWrapCharacter) && pString.endsWith(pWrapCharacter))\n\t\t{\n\t\t\treturn pString.substring(1, pString.length - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pString;\n\t\t}\n\t}\n\n\t/**\n\t * Clean a string of any non-alpha characters (including numbers)\n\t *\n\t * @param {*} pString\n\t * @returns\n\t */\n\tcleanNonAlphaCharacters (pString)\n\t{\n\t\tif ((typeof(pString) == 'string') && (pString != ''))\n\t\t{\n\t\t\treturn pString.replace(this._Regex_formatterCleanNonAlphaChar, this._Value_Clean_formatterCleanNonAlpha);\n\t\t}\n\n\t\treturn '';\n\t}\n\n\n\t/*************************************************************************\n\t * Number Formatting Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Insert commas every 3 characters from the right.  Used by formatterAddCommasToNumber().\n\t *\n\t * @param {*} pString\n\t * @returns {*}\n\t */\n\tformatterInsertCommas (pString)\n\t{\n\t\t// Reverse, because it's easier to do things from the left, given arbitrary digit counts\n\t\tlet tmpReversed = this.stringReverse(pString);\n\t\t// Add commas every three characters\n\t\tlet tmpReversedWithCommas = tmpReversed.match(this._Regex_formatterInsertCommas).join(',');\n\t\t// Reverse again (back to normal direction)\n\t\treturn this.stringReverse(tmpReversedWithCommas);\n\t}\n\n\tprocessAddCommasToNumberRegex(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t{\n\t\t// If there was no decimal, the last capture grabs the final digit, so\n\t\t// we have to put it back together with the 'before' substring\n\t\treturn pSign + (pDecimal ? this.formatterInsertCommas(pBefore) + pDecimal + pAfter : this.formatterInsertCommas(pBefore + pAfter));\n\t}\n\n\t/**\n\t * Add Commas to a Number for readability.\n\t *\n\t * @param {*} pNumber\n\t * @returns {string}\n\t */\n\tformatterAddCommasToNumber (pNumber)\n\t{\n\t\t// If the regex doesn't match, `replace` returns the string unmodified\n\t\treturn (pNumber.toString()).replace\n\t\t(\n\t\t\tthis._Regex_formatterAddCommasToNumber,\n\t\t\tthis.processAddCommasToNumberRegex.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * This will take a number and format it as a dollar string.  It will also add commas to the number.  If the number is not a number, it will return '--'.\n\t *\n\t * @param {*} pValue\n\t * @returns {string}\n\t */\n\tformatterDollars (pValue)\n\t{\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tif (pValue === null || pValue === undefined)\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tlet tmpDollarAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpDollarAmount = tmpDollarAmountArbitrary.toFixed(2);\n\n\t\tif (isNaN(tmpDollarAmount))\n\t\t{\n\t\t\t// Try again and see if what was passed in was a dollars string.\n\t\t\tif (typeof(pValue) == 'string')\n\t\t\t{\n\t\t\t\t// TODO: Better rounding function?  This is a hack to get rid of the currency symbol and commas.\n\t\t\t\ttmpDollarAmount = parseFloat(pValue.replace(this._Value_MoneySign_Currency,'').replace(this._Regex_formatterDollarsRemoveCommas,'')).toFixed(2);\n\t\t\t}\n\t\t\t// If we didn't get a number, return the \"not a number\" string.\n\t\t\tif (isNaN(tmpDollarAmount))\n\t\t\t{\n\t\t\t\treturn this._Value_NaN_Currency;\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Get locale data and use that for this stuff.\n\t\treturn `$${this.formatterAddCommasToNumber(tmpDollarAmount)}`;\n\t}\n\n\t/**\n\t * Round a number to a certain number of digits.  If the number is not a number, it will return 0.  If no digits are specified, it will default to 2 significant digits.\n\t *\n\t * @param {*} pValue\n\t * @param {number} pDigits\n\t * @returns {string}\n\t */\n\tformatterRoundNumber (pValue, pDigits)\n\t{\n\t\tlet tmpDigits = (typeof(pDigits) == 'undefined') ? 2 : pDigits;\n\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\n\t\tif (pValue === null || pValue === undefined)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpValue = tmpAmountArbitrary.toFixed(tmpDigits);\n\n\t\tif (isNaN(tmpValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpValue;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate a reapeating padding string to be appended before or after depending on \n\t * which padding function it uses.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringGeneratePaddingString(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpTargetLength = pTargetLength >> 0;\n\t\tlet tmpPadString = String((typeof pPadString !== 'undefined' ? pPadString : ' '));\n\t\tif (pString.length > pTargetLength)\n\t\t{\n\t\t\t// No padding string if the source string is already longer than the target length, return an empty string\n\t\t\treturn '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpPadLength = pTargetLength - pString.length;\n\t\t\tif (tmpPadLength > tmpPadString.length)\n\t\t\t{\n\t\t\t\ttmpPadString += tmpPadString.repeat(tmpTargetLength / tmpPadString.length);\n\t\t\t}\n\t\t\treturn tmpPadString.slice(0, tmpPadLength);\n\t\t}\n\t}\n\n\t/**\n\t * Pad the start of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadStart = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString) + tmpString;\n\t}\n\n\t/**\n\t * Pad the end of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadEnd = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn tmpString + this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString);\n\t}\n\n\t/*************************************************************************\n\t * Time Formatting Functions (milliseconds)\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Format a time length in milliseconds into a human readable string.\n\t * @param {number} pTimeSpan \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeSpan(pTimeSpan)\n\t{\n\t\tif (typeof(pTimeSpan) != 'number')\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpMs = parseInt(pTimeSpan%1000);\n\t\tlet tmpSeconds = parseInt((pTimeSpan/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeSpan/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeSpan/(1000*60*60));\n\n\t\treturn `${this.stringPadStart(tmpHours,2,'0')}:${this.stringPadStart(tmpMinutes,2,'0')}:${this.stringPadStart(tmpSeconds,2,'0')}.${this.stringPadStart(tmpMs,3,'0')}`;\n\t}\n\n\t/**\n\t * Format the time delta between two times in milliseconds into a human readable string.\n\t * \n\t * @param {number} pTimeStart \n\t * @param {number} pTimeEnd \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeDelta(pTimeStart, pTimeEnd)\n\t{\n\t\tif ((typeof(pTimeStart) != 'number') || (typeof(pTimeEnd) != 'number'))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.formatTimeSpan(pTimeEnd-pTimeStart);\n\t}\n\n\t// THE FOLLOWING TERRIBLE FUNCTIONS ARE FOR QT / WKHTMLTOPDF when luxon and moment don't work so well\n\tgetMonthFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tgetMonthAbbreviatedFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tformatMonthDayYearFromDate (pJavascriptDate, pStrict)\n\t{\n\t\tlet tmpStrict = (typeof(pStrict) !== 'undefined') ? pStrict : false;\n\n\t\tlet tmpMonth = pJavascriptDate.getMonth() + 1;\n\t\tlet tmpDay = pJavascriptDate.getDate();\n\t\tlet tmpYear = pJavascriptDate.getFullYear();\n\t\t\n\t\tif (tmpStrict)\n\t\t{\n\t\t\ttmpMonth = this.stringPadStart(tmpMonth, 2, '0');\n\t\t\ttmpDay = this.stringPadStart(tmpDay, 2, '0');\n\t\t\ttmpYear = this.stringPadStart(tmpYear, 4, '0');\n\t\t}\n\n\t\treturn `${tmpMonth}/${tmpDay}/${tmpYear}`;\n\t}\n\t\n\tformatSortableStringFromDate (pDate)\n\t{\n\t\treturn pDate.getFullYear()+this.stringPadStart(pDate.getMonth(),2,'0')+this.stringPadStart(pDate.getDate(),2,'0');\n\t}\n\n\t/*************************************************************************\n\t * String Tokenization Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Return the string before the matched substring.\n\t *\n\t * If the substring is not found, the entire string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringBeforeMatch (pString, pMatch)\n\t{\n\t\treturn pString.split(pMatch)[0];\n\t}\n\n\t/**\n\t * Return the string after the matched substring.\n\t *\n\t * If the substring is not found, an empty string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringAfterMatch (pString, pMatch)\n\t{\n\t\tlet tmpStringSplitLocation = pString.indexOf(pMatch);\n\n\t\tif ((tmpStringSplitLocation < 0) || ((tmpStringSplitLocation + pMatch.length) >= pString.length))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn pString.substring(tmpStringSplitLocation + pMatch.length);\n\t}\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures (pString, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\tif (tmpEnclosureDepth == 0)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t}\n\t\t\t\ttmpEnclosureDepth++;\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpEnclosureCount;\n\t}\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosedValueStartIndex = 0;\n\t\tlet tmpEnclosedValueEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This is the end of an enclosure\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t\t{\n\t\t\t// Return an empty string if the enclosure is not found\n\t\t\treturn '';\n\t\t}\n\n\t\tif ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t\t}\n\t}\n\n\n\t/**\n\t * Remove an enclosure from a string based on the index of the enclosure.\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToRemove\n\t * @param {number} pEnclosureStart\n\t * @param {number} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringRemoveEnclosureByIndex (pString, pEnclosureIndexToRemove, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToRemove = (typeof(pEnclosureIndexToRemove) == 'number') ? pEnclosureIndexToRemove : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosureStartIndex = 0;\n\t\tlet tmpEnclosureEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToRemove == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosureStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosureEndIndex <= tmpEnclosureStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToRemove)\n\t\t{\n\t\t\treturn tmpString;\n\t\t}\n\n\t\tlet tmpReturnString = '';\n\n\t\tif (tmpEnclosureStartIndex > 1)\n\t\t{\n\t\t\ttmpReturnString = tmpString.substring(0, tmpEnclosureStartIndex);\n\t\t}\n\n\t\tif ((tmpString.length > (tmpEnclosureEndIndex + 1)) && (tmpEnclosureEndIndex > tmpEnclosureStartIndex))\n\t\t{\n\t\t\ttmpReturnString += tmpString.substring(tmpEnclosureEndIndex+1);\n\t\t}\n\n\t\treturn tmpReturnString;\n\t}\n}\n\nmodule.exports = DataFormat;\n},{\"fable-serviceproviderbase\":43}],53:[function(require,module,exports){\nmodule.exports={\n\t\"DefaultIntegerMinimum\": 0,\n\t\"DefaultIntegerMaximum\": 9999999,\n\n\t\"DefaultNumericStringLength\": 10,\n\n\t\"MonthSet\": [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n\n\t\"WeekDaySet\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n\n\t\"ColorSet\": \n\t\t[\n\t\t\t\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Indigo\", \"Violet\", \"Pink\", \"Purple\", \"Turquoise\", \"Gold\",\n\t\t\t\"Lime\", \"Maroon\", \"Navy\", \"Coral\", \"Teal\", \"Brown\", \"White\", \"Black\", \"Sky\", \"Berry\",\n\t\t\t\"Grey\", \"Straw\", \"Silver\", \"Sapphire\"\n\t\t],\n\n\t\"SurNameSet\":\n\t\t[\n\t\t\t\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Miller\", \"Davis\", \"Garcia\", \"Rodriguez\", \"Wilson\",\n\t\t\t\"Martinez\", \"Anderson\", \"Taylor\", \"Thomas\", \"Hernandez\", \"Moore\", \"Martin\", \"Jackson\", \"Thompson\", \"White\",\n\t\t\t\"Lopez\", \"Lee\", \"Gonzalez\", \"Harris\", \"Clark\", \"Lewis\", \"Robinson\", \"Walker\", \"Perez\", \"Hall\",\n\t\t\t\"Young\", \"Allen\", \"Sanchez\", \"Wright\", \"King\", \"Scott\", \"Green\", \"Baker\", \"Adams\", \"Nelson\",\n\t\t\t\"Hill\", \"Ramirez\", \"Campbell\", \"Mitchell\", \"Roberts\", \"Carter\", \"Phillips\", \"Evans\", \"Turner\", \"Torres\",\n\t\t\t\"Parker\", \"Collins\", \"Edwards\", \"Stewart\", \"Flores\", \"Morris\", \"Nguyen\", \"Murphy\", \"Rivera\", \"Cook\",\n\t\t\t\"Rogers\", \"Morgan\", \"Peterson\", \"Cooper\", \"Reed\", \"Bailey\", \"Bell\", \"Gomez\", \"Kelly\", \"Howard\",\n\t\t\t\"Ward\", \"Cox\", \"Diaz\", \"Richardson\", \"Wood\", \"Watson\", \"Brooks\", \"Bennett\", \"Gray\", \"James\",\n\t\t\t\"Reyes\", \"Cruz\", \"Hughes\", \"Price\", \"Myers\", \"Long\", \"Foster\", \"Sanders\", \"Ross\", \"Morales\",\n\t\t\t\"Powell\", \"Sullivan\", \"Russell\", \"Ortiz\", \"Jenkins\", \"Gutierrez\", \"Perry\", \"Butler\", \"Barnes\", \"Fisher\"\n\t\t],\n\n\t\"NameSet\":\n\t\t[\n\t\t\t\"Mary\", \"Patricia\", \"Jennifer\", \"Linda\", \"Elizabeth\", \"Barbara\", \"Susan\", \"Jessica\", \"Sarah\", \"Karen\",\n\t\t\t\"Lisa\", \"Nancy\", \"Betty\", \"Sandra\", \"Margaret\", \"Ashley\", \"Kimberly\", \"Emily\", \"Donna\", \"Michelle\",\n\t\t\t\"Carol\", \"Amanda\", \"Melissa\", \"Deborah\", \"Stephanie\", \"Dorothy\", \"Rebecca\", \"Sharon\", \"Laura\", \"Cynthia\",\n\t\t\t\"Amy\", \"Kathleen\", \"Angela\", \"Shirley\", \"Brenda\", \"Emma\", \"Anna\", \"Pamela\", \"Nicole\", \"Samantha\",\n\t\t\t\"Katherine\", \"Christine\", \"Helen\", \"Debra\", \"Rachel\", \"Carolyn\", \"Janet\", \"Maria\", \"Catherine\", \"Heather\",\n\t\t\t\"Diane\", \"Olivia\", \"Julie\", \"Joyce\", \"Victoria\", \"Ruth\", \"Virginia\", \"Lauren\", \"Kelly\", \"Christina\",\n\t\t\t\"Joan\", \"Evelyn\", \"Judith\", \"Andrea\", \"Hannah\", \"Megan\", \"Cheryl\", \"Jacqueline\", \"Martha\", \"Madison\",\n\t\t\t\"Teresa\", \"Gloria\", \"Sara\", \"Janice\", \"Ann\", \"Kathryn\", \"Abigail\", \"Sophia\", \"Frances\", \"Jean\",\n\t\t\t\"Alice\", \"Judy\", \"Isabella\", \"Julia\", \"Grace\", \"Amber\", \"Denise\", \"Danielle\", \"Marilyn\", \"Beverly\",\n\t\t\t\"Charlotte\", \"Natalie\", \"Theresa\", \"Diana\", \"Brittany\", \"Doris\", \"Kayla\", \"Alexis\", \"Lori\", \"Marie\",\n\t\t\t\"James\", \"Robert\", \"John\", \"Michael\", \"David\", \"William\", \"Richard\", \"Joseph\", \"Thomas\", \"Christopher\",\n\t\t\t\"Charles\", \"Daniel\", \"Matthew\", \"Anthony\", \"Mark\", \"Donald\", \"Steven\", \"Andrew\", \"Paul\", \"Joshua\",\n\t\t\t\"Kenneth\", \"Kevin\", \"Brian\", \"George\", \"Timothy\", \"Ronald\", \"Jason\", \"Edward\", \"Jeffrey\", \"Ryan\",\n\t\t\t\"Jacob\", \"Gary\", \"Nicholas\", \"Eric\", \"Jonathan\", \"Stephen\", \"Larry\", \"Justin\", \"Scott\", \"Brandon\",\n\t\t\t\"Benjamin\", \"Samuel\", \"Gregory\", \"Alexander\", \"Patrick\", \"Frank\", \"Raymond\", \"Jack\", \"Dennis\", \"Jerry\",\n\t\t\t\"Tyler\", \"Aaron\", \"Jose\", \"Adam\", \"Nathan\", \"Henry\", \"Zachary\", \"Douglas\", \"Peter\", \"Kyle\",\n\t\t\t\"Noah\", \"Ethan\", \"Jeremy\", \"Walter\", \"Christian\", \"Keith\", \"Roger\", \"Terry\", \"Austin\", \"Sean\",\n\t\t\t\"Gerald\", \"Carl\", \"Harold\", \"Dylan\", \"Arthur\", \"Lawrence\", \"Jordan\", \"Jesse\", \"Bryan\", \"Billy\",\n\t\t\t\"Bruce\", \"Gabriel\", \"Joe\", \"Logan\", \"Alan\", \"Juan\", \"Albert\", \"Willie\", \"Elijah\", \"Wayne\",\n\t\t\t\"Randy\", \"Vincent\", \"Mason\", \"Roy\", \"Ralph\", \"Bobby\", \"Russell\", \"Bradley\", \"Philip\", \"Eugene\"\n\t\t]\n}\n},{}],54:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceDataGeneration extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'DataGeneration';\n\n\t\tthis.defaultData = require('./Fable-Service-DataGeneration-DefaultValues.json');\n\t}\n\n\t// Return a random integer between pMinimum and pMaximum\n\trandomIntegerBetween(pMinimum, pMaximum)\n\t{\n\t\treturn Math.floor(Math.random() * (pMaximum - pMinimum)) + pMinimum;\n\t}\n\t// Return a random integer up to the passed-in maximum\n\trandomIntegerUpTo(pMaximum)\n\t{\n\t\treturn this.randomIntegerBetween(0, pMaximum);\n\t}\n\t// Return a random integer between 0 and 9999999\n\trandomInteger()\n\t{\n\t\treturn Math.floor(Math.random()*this.defaultData.DefaultIntegerMaximum);\n\t}\n\n\n\trandomNumericString(pLength, pMaxNumber)\n\t{\n\t\tlet tmpLength = (typeof(pLength) === 'undefined') ? 10 : pLength;\n\t\tlet tmpMaxNumber = (typeof(pMaxNumber) === 'undefined') ? ((10 ** tmpLength) - 1) : pMaxNumber;\n\n\t\treturn this.services.DataFormat.stringPadStart(this.randomIntegerUpTo(tmpMaxNumber), pLength, '0');\n\t}\n\n\n\trandomMonth()\n\t{\n\t\treturn this.defaultData.MonthSet[this.randomIntegerUpTo(this.defaultData.MonthSet.length-1)];\n\t}\n\trandomDayOfWeek()\n\t{\n\t\treturn this.defaultData.WeekDaySet[this.randomIntegerUpTo(this.defaultData.WeekDaySet.length-1)];\n\t}\n\n\n\trandomColor()\n\t{\n\t\treturn this.defaultData.ColorSet[this.randomIntegerUpTo(this.defaultData.ColorSet.length-1)];\n\t}\n\n\n\trandomName()\n\t{\n\t\treturn this.defaultData.NameSet[this.randomIntegerUpTo(this.defaultData.NameSet.length-1)];\n\t}\n\trandomSurname()\n\t{\n\t\treturn this.defaultData.SurNameSet[this.randomIntegerUpTo(this.defaultData.SurNameSet.length-1)];\n\t}\n}\n\nmodule.exports = FableServiceDataGeneration;\n},{\"./Fable-Service-DataGeneration-DefaultValues.json\":53,\"fable-serviceproviderbase\":43}],55:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Date management a la Moment using days.js\n*\n* @class DateManipulation\n*/\nclass DateManipulation extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'Dates';\n\n\t\tthis.dayJS = require('dayjs');\n\n\t\t// Include the `weekOfYear` plugin\n\t\tthis.plugin_weekOfYear = require('dayjs/plugin/weekOfYear');\n\t\tthis.dayJS.extend(this.plugin_weekOfYear);\n\t\t// Include the `weekday` plugin\n\t\tthis.plugin_weekday = require('dayjs/plugin/weekday');\n\t\tthis.dayJS.extend(this.plugin_weekday);\n\t\t// Include the `isoWeek` plugin\n\t\tthis.plugin_isoWeek = require('dayjs/plugin/isoWeek');\n\t\tthis.dayJS.extend(this.plugin_isoWeek);\n\t\t// Include the `timezone` plugin\n\t\tthis.plugin_timezone = require('dayjs/plugin/timezone');\n\t\tthis.dayJS.extend(this.plugin_timezone);\n\t\t// Include the `relativetime` plugin\n\t\tthis.plugin_relativetime = require('dayjs/plugin/relativeTime');\n\t\tthis.dayJS.extend(this.plugin_relativetime);\n\t\t// Include the `utc` plugin\n\t\tthis.plugin_utc = require('dayjs/plugin/utc');\n\t\tthis.dayJS.extend(this.plugin_utc);\n\t\t// Include the `advancedFormat` plugin\n\t\tthis.plugin_advancedFormat = require('dayjs/plugin/advancedFormat');\n\t\tthis.dayJS.extend(this.plugin_advancedFormat);\n\n\t\t// A developer can include locales if they want\n\t\t// You would do the following:\n\t\t// const localeDE = require('dayjs/locale/de');\n\t\t// _Fable.Dates.dayJS.locale('de');\n\t}\n}\n\nmodule.exports = DateManipulation;\n},{\"dayjs\":28,\"dayjs/plugin/advancedFormat\":29,\"dayjs/plugin/isoWeek\":30,\"dayjs/plugin/relativeTime\":31,\"dayjs/plugin/timezone\":32,\"dayjs/plugin/utc\":33,\"dayjs/plugin/weekOfYear\":34,\"dayjs/plugin/weekday\":35,\"fable-serviceproviderbase\":43}],56:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceEnvironmentData extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'EnvironmentData';\n\n\t\tthis.Environment = `node.js`;\n\t}\n}\n\nmodule.exports = FableServiceEnvironmentData;\n},{\"fable-serviceproviderbase\":43}],57:[function(require,module,exports){\n(function (process){(function (){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libFS = require('fs');\nconst libPath = require('path');\nconst libReadline = require('readline');\n\n\nclass FableServiceFilePersistence extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'FilePersistence';\n\n\t\tif (!this.options.hasOwnProperty('Mode'))\n\t\t{\n\t\t\tthis.options.Mode = parseInt('0777', 8) & ~process.umask();\n\t\t}\n\n\t\tthis.libFS = libFS;\n\t\tthis.libPath = libPath;\n\t\tthis.libReadline = libReadline;\n\t}\n\n\tjoinPath(...pPathArray)\n\t{\n\t\treturn libPath.resolve(...pPathArray);\n\t}\n\n\texistsSync(pPath)\n\t{\n\t\treturn libFS.existsSync(pPath);\n\t}\n\n\texists(pPath, fCallback)\n\t{\n\t\tlet tmpFileExists = this.existsSync(pPath);;\n\n\t\treturn fCallback(null, tmpFileExists);\n\t}\n\n\tappendFileSync(pFileName, pAppendContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.appendFileSync(pFileName, pAppendContent, tmpOptions);\n\t}\n\n\tdeleteFileSync(pFileName)\n\t{\n\t\treturn libFS.unlinkSync(pFileName);\n\t}\n\n\tdeleteFolderSync(pFileName)\n\t{\n\t\treturn libFS.rmdirSync(pFileName);\n\t}\n\n\treadFileSync(pFilePath, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.readFileSync(pFilePath, tmpOptions);\n\t}\n\n\treadFile(pFilePath, pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.readFile(pFilePath, tmpOptions, fCallback);\n\t}\n\n\twriteFileSync(pFileName, pFileContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFileSync(pFileName, pFileContent, tmpOptions);\n\t}\n\n\twriteFileSyncFromObject(pFileName, pObject)\n\t{\n\t\treturn this.writeFileSync(pFileName, JSON.stringify(pObject, null, 4));\n\t}\n\n\twriteFileSyncFromArray(pFileName, pFileArray)\n\t{\n\t\tif (!Array.isArray(pFileArray))\n\t\t{\n\t\t\tthis.log.error(`File Persistence Service attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).`);\n\t\t\treturn Error('Attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let i = 0; i < pFileArray.length; i++)\n\t\t\t{\n\t\t\t\treturn this.appendFileSync(pFileName, `${pFileArray[i]}\\n`);\n\t\t\t}\n\t\t}\n\t}\n\n\twriteFile(pFileName, pFileContent, pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFile(pFileName, pFileContent, tmpOptions, fCallback);\n\t}\n\n\tlineReaderFactory(pFilePath, fOnLine, fOnComplete, fOnError)\n\t{\n\t\tlet tmpLineReader = {};\n\n\t\tif (typeof(pFilePath) != 'string')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpLineReader.filePath = pFilePath;\n\n\t\ttmpLineReader.fileStream = libFS.createReadStream(tmpLineReader.filePath);\n\n\t\ttmpLineReader.reader = libReadline.createInterface({ input: tmpLineReader.fileStream, crlfDelay: Infinity });\n\n\t\tif (typeof(fOnError) === 'function')\n\t\t{\n\t\t\ttmpLineReader.reader.on('error', fOnError);\n\t\t}\n\n\t\ttmpLineReader.reader.on('line', (typeof(fOnLine) === 'function') ? fOnLine : () => {});\n\n\t\tif (typeof(fOnComplete) === 'function')\n\t\t{\n\t\t\ttmpLineReader.reader.on('close', fOnComplete);\n\t\t}\n\n\t\treturn tmpLineReader;\n\t}\n\n\t// Folder management\n\tmakeFolderRecursive(pParameters, fCallback)\n\t{\n\t\tlet tmpParameters = pParameters;\n\n\t\tif (typeof(pParameters) == 'string')\n\t\t{\n\t\t\ttmpParameters = { Path: pParameters };\n\t\t}\n\t\telse if (typeof(pParameters) !== 'object')\n\t\t{\n\t\t\tfCallback(new Error('Parameters object or string not properly passed to recursive folder create.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(tmpParameters.Path) !== 'string'))\n\t\t{\n\t\t\tfCallback(new Error('Parameters object needs a path to run the folder create operation.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!tmpParameters.hasOwnProperty('Mode'))\n\t\t{\n\t\t\ttmpParameters.Mode = this.options.Mode;\n\t\t}\n\n\t\t// Check if we are just starting .. if so, build the initial state for our recursive function\n\t\tif (typeof(tmpParameters.CurrentPathIndex) === 'undefined')\n\t\t{\n\t\t\t// Build the tools to start recursing\n\t\t\ttmpParameters.ActualPath = libPath.normalize(tmpParameters.Path);\n\t\t\ttmpParameters.ActualPathParts = tmpParameters.ActualPath.split(libPath.sep);\n\t\t\ttmpParameters.CurrentPathIndex = 0;\n\t\t\ttmpParameters.CurrentPath = '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is not our first run, so we will continue the recursion.\n\t\t\t// Build the new base path\n\t\t\tif (tmpParameters.CurrentPath == libPath.sep)\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\n\t\t\t// Increment the path index\n\t\t\ttmpParameters.CurrentPathIndex++;\n\t\t}\n\n\t\t// Check if the path is fully complete\n\t\tif (tmpParameters.CurrentPathIndex >= tmpParameters.ActualPathParts.length)\n\t\t{\n\t\t\treturn fCallback(null);\n\t\t}\n\n\t\t// Check if the path exists (and is a folder)\n\t\tlibFS.open(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], 'r',\n\t\t\t(pError, pFileDescriptor)=>\n\t\t\t{\n\t\t\t\tif (pFileDescriptor)\n\t\t\t\t{\n\t\t\t\t\tlibFS.closeSync(pFileDescriptor);\n\t\t\t\t}\n\n\t\t\t\tif (pError && pError.code=='ENOENT')\n\t\t\t\t{\n\t\t\t\t\t/* Path doesn't exist, create it */\n\t\t\t\t\tlibFS.mkdir(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], tmpParameters.Mode,\n\t\t\t\t\t\t(pCreateError) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!pCreateError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// We have now created our folder and there was no error -- continue.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (pCreateError.code =='EEXIST')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// The folder exists -- our dev might be running this in parallel/async/whatnot.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(pCreateError.code);\n\t\t\t\t\t\t\t\treturn fCallback(pCreateError);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nmodule.exports = FableServiceFilePersistence;\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":95,\"fable-serviceproviderbase\":43,\"fs\":19,\"path\":89,\"readline\":19}],58:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\n/**\n* Precedent Meta-Templating\n* @author      Steven Velozo <steven@velozo.com>\n* @description Process text stream trie and postfix tree, parsing out meta-template expression functions.\n*/\nconst libWordTree = require(`./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js`);\nconst libStringParser = require(`./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js`);\n\n\nclass FableServiceMetaTemplate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'MetaTemplate';\n\n\t\tthis.WordTree = new libWordTree();\n\n\t\t// In order to allow asynchronous template processing we need to use the async.eachLimit function\n\t\tthis.StringParser = new libStringParser(this.fable.services.Utility.eachLimit);\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\taddPatternAsync(pPatternStart, pPatternEnd, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternAsync(pPatternStart, pPatternEnd, pParserPromise);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData, fCallback)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceMetaTemplate;\n},{\"./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js\":59,\"./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js\":60,\"fable-serviceproviderbase\":43}],59:[function(require,module,exports){\n/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor(fEachLimit)\n\t{\n\t\tthis.eachLimit = fEachLimit;\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacterAsync (pCharacter, pParserState, pData, fCallback)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\treturn fCallback();\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn fCallback();\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t * @param {function} fCallback - The callback function to call when the parse is complete\n\t */\n\tparseString (pString, pParseTree, pData, fCallback)\n\t{\n\t\tif (typeof(fCallback) !== 'function')\n\t\t{\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\t\tfor (var i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: This is not fast.\n\t\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData, fCallback);\n\t\t\t}\n\n\t\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\t\treturn tmpParserState.Output;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is the async mode\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\t\t\ttmpParserState.Asynchronous = true;\n\n\t\t\tthis.eachLimit(pString, 1,\n\t\t\t\t(pCharacter, fCharacterCallback) =>\n\t\t\t\t{\n\t\t\t\t\tthis.parseCharacterAsync(pCharacter, tmpParserState, pData, fCharacterCallback);\n\t\t\t\t},\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\t// Flush the remaining data\n\t\t\t\t\tthis.flushOutputBuffer(tmpParserState);\n\t\t\t\t\tfCallback(pError, tmpParserState.Output);\n\t\t\t\t});\n\n\t\t}\n\t}\n}\n\nmodule.exports = StringParser;\n\n},{}],60:[function(require,module,exports){\n/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn tmpLeaf;\n\t}\n\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternAsync (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParser);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t}\n\t}\n}\n\nmodule.exports = WordTree;\n\n},{}],61:[function(require,module,exports){\nmodule.exports = (\n    {\n        \"Metadata\": {\n            \"UUID\": false,\n            \"Hash\": false,\n\n            \"Name\": \"\",\n            \"Summary\": \"\",\n\n            \"Version\": 0\n        },\n        \"Status\": {\n            \"Completed\": false,\n\n            \"CompletionProgress\": 0,\n            \"CompletionTimeElapsed\": 0,\n\n            \"TimeStart\": 0,\n            \"TimeEnd\": 0\n        },\n        \"Steps\": [],\n        \"Errors\": [],\n        \"Log\": []\n    }\n);\n},{}],62:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst _OperationStatePrototypeString = JSON.stringify(require('./Fable-Service-Operation-DefaultSettings.js'));\n\nclass FableOperation extends libFableServiceBase\n{\n\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\t// Timestamps will just be the long ints\n\t\tthis.timeStamps = {};\n\t\t// ProgressTrackers have an object format of: {Hash:'SomeHash',EndTime:UINT,CurrentTime:UINT,TotalCount:INT,CurrentCount:INT}\n\t\tthis.progressTrackers = {};\n\n        this.serviceType = 'PhasedOperation';\n\n\t\tthis.state = JSON.parse(_OperationStatePrototypeString);\n\n\t\tthis.stepMap = {};\n\t\tthis.stepFunctions = {};\n\n\t\t// Match the service instantiation to the operation.\n\t\tthis.state.Metadata.Hash = this.Hash;\n\t\tthis.state.Metadata.UUID = this.UUID;\n\n\t\tthis.state.Metadata.Name = (typeof(this.options.Name) == 'string') ? this.options.Name : `Unnamed Operation ${this.state.Metadata.UUID}`;\n\t\tthis.name = this.state.Metadata.Name;\n\n\t\tthis.log = this;\n\t}\n\n\texecute(fExecutionCompleteCallback)\n\t{\n\t\tif (this.state.Status.TimeStart)\n\t\t{\n\t\t\treturn fExecutionCompleteCallback(new Error(`Operation [${this.state.Metadata.UUID}] ${this.state.Metadata.Name} has already been executed!`));\n\t\t}\n\n\t\tthis.state.Status.TimeStart = +new Date();\n\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\tfor (let i = 0; i < this.state.Steps; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(this.stepFunctions[this.state.Steps[i].GUIDStep].bind(this));\n\t\t}\n\n\t\t// Wait for the anticipation to complete\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tthis.state.Status.TimeEnd = +new Date();\n\t\t\t\treturn fExecutionCompleteCallback();\n\t\t\t});\n\t}\n\n/*\n\tTODO: I've gone back and forth on whether this should be an object, JSON \n\tobject prototype, or set of functions here.  Discuss with colleagues!\n*/\n\taddStep(pGUIDStep, fStepFunction, pStepName, pStepDescription, pStepMetadata)\n\t{\n\t\tlet tmpStep = {};\n\t\ttmpStep.GUIDStep = (typeof(pGUIDStep) !== 'undefined') ? pGUIDStep : `STEP-${this.state.Steps.length}-${this.fable.DataGeneration.randomNumericString()}`;\n\t\ttmpStep.Name = (typeof(pStepName) !== 'undefined') ? pStepName : `Step [${tmpStep.GUIDStep}]`;\n\t\ttmpStep.Description = (typeof(pStepDescription) !== 'undefined') ? pStepDescription : `Step execution of ${tmpStep.Name}.`;\n\t\t// TODO: Right now this allows an Array... do we want to block that?\n\t\ttmpStep.Metadata = (typeof(pStepMetadata) === 'object') ? pStepMetadata : {};\n\n\t\ttmpStep.TimeStart = false;\n\t\ttmpStep.TimeEnd = false;\n\n\t\t// There is an array of steps, in the Operation State itself ... push a step there\n\t\tthis.state.Steps.push(tmpStep);\n\n\t\tthis.stepMap[tmpStep.GUIDStep]\n\t\tthis.stepFunctions[tmpStep.GUIDStep] = fStepFunction;\n\n\t\tthis.state.Status.StepCount++;\n\t\treturn tmpStep;\n\t}\n\n\tgetStep(pGUIDStep)\n\t{\n\t\tif (this.stepMap.hasOwnProperty(pGUIDStep))\n\t\t{\n\t\t\treturn this.stepMap[pGUIDStep];\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tstartStep(pGUIDStep)\n\t{\n\t\tlet tmpStep = this.getStep(pGUIDStep);\n\n\t\tif (tmpStep === false)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpStep.TimeStart = +new Date();\n\n\t\treturn tmpStep;\n\t}\n\n\tstopStep(pGUIDStep)\n\t{\n\t\tlet tmpStep = this.getStep(pGUIDStep);\n\n\t\tif (tmpStep === false)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpStep.TimeEnd = +new Date();\n\n\t\treturn tmpStep;\n\t}\n\n\twriteOperationLog(pLogLevel, pLogText, pLogObject)\n\t{\n\t\tthis.state.Log.push(`[${new Date().toUTCString()}]-[${pLogLevel}]: ${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Log.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\twriteOperationErrors(pLogText, pLogObject)\n\t{\n\t\tthis.state.Errors.push(`${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Errors.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('TRACE', pLogText, pLogObject);\n\t\tthis.fable.log.trace(pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('DEBUG', pLogText, pLogObject);\n\t\tthis.fable.log.debug(pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('INFO', pLogText, pLogObject);\n\t\tthis.fable.log.info(pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('WARN', pLogText, pLogObject);\n\t\tthis.fable.log.warn(pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('ERROR', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.error(pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('FATAL', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.fatal(pLogText, pLogObject);\n\t}\n\n\n\t/************************************************************************\n\t * BEGINNING OF -->  Telemetry Helpers\n\t */\n\tcreateTimeStamp(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tthis.timeStamps[tmpTimeStampHash] = +new Date();\n\t\treturn this.timeStamps[tmpTimeStampHash];\n\t}\n\n\tgetTimeDelta(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tif (this.timeStamps.hasOwnProperty(tmpTimeStampHash))\n\t\t{\n\t\t\tlet tmpEndTime = +new Date();\n\t\t\treturn tmpEndTime-this.timeStamps[tmpTimeStampHash];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tlogTimeDelta(pTimeStampHash, pMessage)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : `Elapsed for ${tmpTimeStampHash}: `;\n\t\tlet tmpOperationTime = this.getTimeDelta(pTimeStampHash);\n\t\tthis.info(tmpMessage +' ('+tmpOperationTime+'ms)');\n\t\treturn tmpOperationTime;\n\t}\n\n\tcreateProgressTracker(pTotalOperations, pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpTotalOperations = (typeof(pTotalOperations) == 'number') ? pTotalOperations : 100;\n\n\t\tlet tmpProgressTracker = (\n\t\t\t{\n\t\t\t\tHash: tmpProgressTrackerHash,\n\t\t\t\tStartTime: this.createTimeStamp(tmpProgressTrackerHash),\n\t\t\t\tEndTime: 0,\n\t\t\t\tCurrentTime: 0,\n\t\t\t\tPercentComplete: -1,\n\t\t\t\tAverageOperationTime: -1,\n\t\t\t\tEstimatedCompletionTime: -1,\n\t\t\t\tTotalCount: tmpTotalOperations,\n\t\t\t\tCurrentCount:-1\n\t\t\t});\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash] = tmpProgressTracker;\n\n\t\treturn tmpProgressTracker;\n\t}\n\n\tsolveProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tlet tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\ttmpProgressTracker.CurrentTime = this.getTimeDelta(tmpProgressTracker.Hash);\n\n\t\tif ((tmpProgressTracker.CurrentCount > 0) && (tmpProgressTracker.TotalCount > 0))\n\t\t{\n\t\t\ttmpProgressTracker.PercentComplete = (tmpProgressTracker.CurrentCount / tmpProgressTracker.TotalCount) * 100.0;\n\t\t}\n\n\t\tif ((tmpProgressTracker.CurrentCount > 0) && (tmpProgressTracker.CurrentTime > 0))\n\t\t{\n\t\t\ttmpProgressTracker.AverageOperationTime = tmpProgressTracker.CurrentTime / tmpProgressTracker.CurrentCount;\n\t\t}\n\n\t\tif ((tmpProgressTracker.CurrentCount < tmpProgressTracker.TotalCount) && (tmpProgressTracker.AverageOperationTime > 0))\n\t\t{\n\t\t\ttmpProgressTracker.EstimatedCompletionTime = (tmpProgressTracker.TotalCount - tmpProgressTracker.CurrentCount) * tmpProgressTracker.AverageOperationTime;\n\t\t}\n\t}\n\n\tupdateProgressTrackerStatus(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\n\t\tif (isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = tmpCurrentOperations;\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tincrementProgressTrackerStatus(pProgressTrackerHash, pIncrementSize)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpIncrementSize = parseInt(pIncrementSize);\n\n\t\tif (isNaN(tmpIncrementSize))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = this.progressTrackers[tmpProgressTrackerHash].CurrentCount + tmpIncrementSize;\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tsetProgressTrackerEndTime(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (!isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\tthis.updateProgressTrackerStatus(tmpProgressTrackerHash, tmpCurrentOperations);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].EndTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tprintProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTrackerHash} does not exist!  No stats to display.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\t\tif (tmpProgressTracker.CurrentCount < 1)\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} has no completed operations.  ${tmpProgressTracker.CurrentTime}ms have elapsed since it was started.`);\n\t\t\t}\n\t\t\telse if (tmpProgressTracker.EndTime < 1)\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} is ${tmpProgressTracker.PercentComplete.toFixed(3)}% completed - ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations over ${tmpProgressTracker.CurrentTime}ms (median ${tmpProgressTracker.AverageOperationTime.toFixed(3)} per).  Estimated completion in ${tmpProgressTracker.EstimatedCompletionTime.toFixed(0)}ms or ${(tmpProgressTracker.EstimatedCompletionTime / 1000 / 60).toFixed(2)}minutes`)\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} is done and completed ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations in ${tmpProgressTracker.EndTime}ms.`)\n\t\t\t}\n\t\t}\n\t}\n\t/*\n\t * END OF       -->  Logging and Telemetry Helpers\n\t ************************************************************************/\n}\n\nmodule.exports = FableOperation;\n},{\"./Fable-Service-Operation-DefaultSettings.js\":61,\"fable-serviceproviderbase\":43}],63:[function(require,module,exports){\n(function (Buffer){(function (){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libSimpleGet = require('simple-get');\nconst libCookie = require('cookie');\n\nclass FableServiceRestClient extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.TraceLog = false;\n\t\tif (this.options.TraceLog || this.fable.TraceLog)\n\t\t{\n\t\t\tthis.TraceLog = true;\n\t\t}\n\n\t\tthis.dataFormat = this.fable.services.DataFormat;\n\n\t\tthis.serviceType = 'RestClient';\n\n\t\tthis.cookie = false;\n\n\t\t// This is a function that can be overridden, to allow the management\n\t\t// of the request options before they are passed to the request library.\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tget simpleGet()\n\t{\n\t\treturn libSimpleGet;\n\t}\n\n\tprepareCookies(pRequestOptions)\n\t{\n\t\tif (this.cookie)\n\t\t{\n\t\t\tlet tmpCookieObject = this.cookie;\n\t\t\tif (!pRequestOptions.hasOwnProperty('headers'))\n\t\t\t{\n\t\t\t\tpRequestOptions.headers = {};\n\t\t\t}\n\t\t\tlet tmpCookieKeys = Object.keys(tmpCookieObject);\n\t\t\tif (tmpCookieKeys.length > 0)\n\t\t\t{\n\t\t\t\t// Only grab the first for now.\n\t\t\t\tpRequestOptions.headers.cookie = libCookie.serialize(tmpCookieKeys[0], tmpCookieObject[tmpCookieKeys[0]]);\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn pRequestOptions;\n\t}\n\n\tpreRequest(pOptions)\n\t{\n\t\t// Validate the options object\n\t\tlet tmpOptions = this.prepareCookies(pOptions);\n\t\treturn this.prepareRequestOptions(tmpOptions);\n\t}\n\n\texecuteChunkedRequest(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpData.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpData);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteChunkedRequestBinary(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\ttmpOptions.json = false;\n\t\ttmpOptions.encoding = null;\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpDataBuffer = false;\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: Potentially create a third option that streams this to a file?  So it doesn't have to hold it all in memory.\n\t\t\t\t\t\tif (!tmpDataBuffer)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.from(pChunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.concat([tmpDataBuffer, pChunk]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpDataBuffer.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpDataBuffer);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteJSONRequest(pOptions, fCallback)\n\t{\n\t\tpOptions.json = true;\n\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\tif (!tmpOptions.hasOwnProperty('headers'))\n\t\t{\n\t\t\ttmpOptions.headers = {};\n\t\t}\n\t\t/* Automated headers break some APIs\n\t\tif (!tmpOptions.headers.hasOwnProperty('Content-Type'))\n\t\t{\n\t\t\ttmpOptions.headers['Content-Type'] = 'application/json';\n\t\t}\n\t\t*/\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} JSON request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpJSONData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpJSONData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> JSON ${tmpOptions.method} completed - received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, JSON.parse(tmpJSONData));\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetJSON(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeJSONRequest(tmpRequestOptions, fCallback);\n\t}\n\n\tputJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PUT JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PUT';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpostJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`POST JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'POST';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpatchJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PATCH JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PATCH';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\theadJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`HEAD JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'HEAD';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tdelJSON(pOptions, fCallback)\n\t{\n\t\tpOptions.method = 'DELETE';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tgetRawText(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeChunkedRequest(tmpRequestOptions, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceRestClient;\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":20,\"cookie\":27,\"fable-serviceproviderbase\":43,\"simple-get\":108}],64:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceTemplate extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Template';\n\n\t\t// These are the exact regex's used in lodash/underscore\n\t\t// TODO: Switch this to precedent\n\t\tthis.Matchers = (\n\t\t\t{\n\t\t\t\tEvaluate: /<%([\\s\\S]+?)%>/g,\n\t\t\t\tInterpolate: /<%=([\\s\\S]+?)%>/g,\n\t\t\t\tEscaper: /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g,\n\t\t\t\tUnescaper: /\\\\(\\\\|'|r|n|t|u2028|u2029)/g,\n\t\t\t\t// This is how underscore does it, so we are keeping it for now.\n\t\t\t\tGuaranteedNonMatch: /.^/\n\t\t\t});\n\n\t\t// This is a helper for the escaper and unescaper functions.\n\t\t// Right now we are going to keep what underscore is doing, but, not forever.\n\t\tthis.templateEscapes = {\n\t\t\t'\\\\': '\\\\',\n\t\t\t\"'\": \"'\",\n\t\t\t'r': '\\r',\n\t\t\t'\\r': 'r',\n\t\t\t'n': '\\n',\n\t\t\t'\\n': 'n',\n\t\t\t't': '\\t',\n\t\t\t'\\t': 't',\n\t\t\t'u2028': '\\u2028',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'u2029': '\\u2029',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\t// This is defined as such to underscore that it is a dynamic programming\n\t\t// function on this class.\n\t\tthis.renderFunction = false;\n        this.templateString = false;\n\t}\n\n\trenderTemplate(pData)\n\t{\n\t\treturn this.renderFunction(pData);\n\t}\n\n\ttemplateFunction(pData)\n\t{\n\t\tlet fRenderTemplateBound = this.renderTemplate.bind(this);\n\t\treturn fRenderTemplateBound;\n\t}\n\n\tbuildTemplateFunction(pTemplateText, pData)\n\t{\n\t\t// For now this is being kept in a weird form ... this is to mimic the old\n\t\t// underscore code until this is rewritten using precedent.\n\t\tthis.TemplateSource = \"__p+='\" + pTemplateText\n\t\t\t.replace(this.Matchers.Escaper,\n\t\t\t\t(pMatch)=>\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\${this.templateEscapes[pMatch]}`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Interpolate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `'+\\n(${decodeURIComponent(pCode)})+\\n'`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Evaluate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `';\\n${decodeURIComponent(pCode)}\\n;__p+='`;\n\t\t\t\t}) + `';\\n`;\n\n\n\t\tthis.TemplateSource = `with(pTemplateDataObject||{}){\\n${this.TemplateSource}}\\n`;\n\t\tthis.TemplateSource = `var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n${this.TemplateSource}return __p;\\n`;\n\n\t\tthis.renderFunction = new Function('pTemplateDataObject', this.TemplateSource);\n\n\t\tif (typeof(pData) != 'undefined')\n\t\t{\n\t\t\treturn this.renderFunction(pData);\n\t\t}\n\n\t\t// Provide the compiled function source as a convenience for build time\n\t\t// precompilation.\n\t\tthis.TemplateSourceCompiled = 'function(obj){\\n' + this.TemplateSource + '}';\n\n\t\treturn this.templateFunction();\n\t}\n}\n\nmodule.exports = FableServiceTemplate;\n},{\"fable-serviceproviderbase\":43}],65:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\n// TODO: These are still pretty big -- consider the smaller polyfills\nconst libAsyncWaterfall = require('async.waterfall');\nconst libAsyncEachLimit = require('async.eachlimit');\n\nconst libBigNumber = require('big.js');\n\nclass FableServiceUtility extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\tthis.templates = {};\n\n\t\t// These two functions are used extensively throughout\n\t\tthis.waterfall = libAsyncWaterfall;\n\t\tthis.eachLimit = libAsyncEachLimit;\n\n\t\tthis.bigNumber = libBigNumber;\n\t}\n\n\t// Underscore and lodash have a behavior, _.extend, which merges objects.\n\t// Now that es6 gives us this, use the native thingy.\n\t// Nevermind, the native thing is not stable enough across environments\n\t// Basic shallow copy\n\textend(pDestinationObject, ...pSourceObjects)\n\t{\n\t\tfor (let i = 0; i < pSourceObjects.length; i++)\n\t\t{\n\t\t\tlet tmpSourceObject = pSourceObjects[i];\n\t\t\tif (typeof(tmpSourceObject) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpObjectProperties = Object.keys(tmpSourceObject);\n\t\t\t\tfor (let k = 0; k < tmpObjectProperties.length; k++)\n\t\t\t\t{\n\t\t\t\t\tpDestinationObject[tmpObjectProperties[k]] = tmpSourceObject[tmpObjectProperties[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pDestinationObject;\n\t}\n\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\ttemplate(pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.instantiateServiceProviderWithoutRegistration('Template');\n\n\t\treturn tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t}\n\n\t// Build a template function from a template hash, and, register it with the service provider\n\tbuildHashedTemplate(pTemplateHash, pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.instantiateServiceProvider('Template', {}, pTemplateHash);\n\n\t\tthis.templates[pTemplateHash] = tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\n\t\treturn this.templates[pTemplateHash];\n\t}\n\n\t// This is a safe, modern version of chunk from underscore\n\t// Algorithm pulled from a mix of these two polyfills:\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\n\t// https://youmightnotneed.com/lodash\n\t// This implementation was most tolerant in browsers.  Uglify can fix the rest.\n\tchunk (pInput, pChunkSize, pChunkCache)\n\t{\n\t\tlet tmpInputArray = [...pInput];\n\t\t// Note lodash defaults to 1, underscore defaults to 0\n\t\tlet tmpChunkSize = (typeof(pChunkSize) == 'number') ? pChunkSize : 0;\n\t\tlet tmpChunkCache = (typeof(pChunkCache) != 'undefined') ? pChunkCache : [];\n\n\t\tif (tmpChunkSize <= 0)\n\t\t{\n\t\t\treturn tmpChunkCache;\n\t\t}\n\n\t\twhile (tmpInputArray.length)\n\t\t{\n\t\t\ttmpChunkCache.push(tmpInputArray.splice(0, tmpChunkSize));\n\t\t}\n\n\t\treturn tmpChunkCache;\n\t}\n\n\t// Convert an ISO string to a javascript date object\n\t// Adapted from https://stackoverflow.com/a/54751179\n\t//\n\t// Takes strings like: 2022-11-04T11:34:45.000Z\n\t//                and: 1986-06-11T09:34:46.012Z+0200\n\t// ... and converts them into javascript timestamps, following the directions of the timezone stuff.\n\t//\n\t// This is not meant to replace the more complex libraries such as moment or luxon.\n\t// This *is* meant to be a simple, small, and fast way to convert ISO strings to dates in engines\n\t// with ultra limited JS capabilities where those don't work.\n\tisoStringToDate (pISOString)\n\t{\n\n\t\t// Split the string into an array based on the digit groups.\n\t\tlet tmpDateParts = pISOString.split( /\\D+/ );\n\n\t\t// Set up a date object with the current time.\n\t\tlet tmpReturnDate = new Date();\n\n\t\t// Track the number of hours we need to adjust the date by based on the timezone.\n\t\tlet tmpTimeZoneOffsetInHours = 0;\n\t\t// Track the number of minutes we need to adjust the date by based on the timezone.\n\t\tlet tmpTimeZoneOffsetInMinutes = 0;\n\n\t\t// This fixes an inconsistency with constructing the date programmatically.\n\t\ttmpReturnDate.setUTCDate(1);\n\t\ttmpReturnDate.setUTCMonth(1);\n\t\ttmpReturnDate.setUTCHours(0);\n\t\ttmpReturnDate.setUTCMinutes(0);\n\t\ttmpReturnDate.setUTCSeconds(0);\n\t\ttmpReturnDate.setUTCMilliseconds(0);\n\n\t\t// Manually parse the parts of the string and set each part for the\n\t\t// date. Note: Using the UTC versions of these functions is necessary\n\t\t// because we're manually adjusting for time zones stored in the\n\t\t// string.\n\t\ttmpReturnDate.setUTCFullYear( parseInt( tmpDateParts[ 0 ] ) );\n\n\t\t// The month numbers are one \"off\" from what normal humans would expect\n\t\t// because January == 0.\n\t\ttmpReturnDate.setUTCMonth( parseInt( tmpDateParts[ 1 ] ) - 1 );\n\n\t\ttmpReturnDate.setUTCDate( parseInt( tmpDateParts[ 2 ] ) );\n\n\t\t// Set the time parts of the date object.\n\t\ttmpReturnDate.setUTCHours( parseInt( tmpDateParts[ 3 ] ) );\n\t\ttmpReturnDate.setUTCMinutes( parseInt( tmpDateParts[ 4 ] ) );\n\t\ttmpReturnDate.setUTCSeconds( parseInt( tmpDateParts[ 5 ] ) );\n\t\ttmpReturnDate.setUTCMilliseconds( parseInt( tmpDateParts[ 6 ] ) );\n\n\t\t// If there's a value for either the hours or minutes offset.\n\t\tif (tmpDateParts[ 7 ] || tmpDateParts[ 8 ])\n\t\t{\n\t\t\t// If there's a value for the minutes offset.\n\t\t\tif (tmpDateParts[8])\n\t\t\t{\n\t\t\t\t// Convert the minutes value into an hours value.\n\t\t\t\ttmpTimeZoneOffsetInMinutes = parseInt(tmpDateParts[8]) / 60;\n\t\t\t}\n\n\t\t\t// Add the hours and minutes values to get the total offset in hours.\n\t\t\ttmpTimeZoneOffsetInHours = parseInt(tmpDateParts[7]) + tmpTimeZoneOffsetInMinutes;\n\n\t\t\t// If the sign for the timezone is a plus to indicate the timezone is ahead of UTC time.\n\t\t\tif (pISOString.substr( -6, 1 ) == \"+\")\n\t\t\t{\n\t\t\t\t// Make the offset negative since the hours will need to be subtracted from the date.\n\t\t\t\ttmpTimeZoneOffsetInHours *= -1;\n\t\t\t}\n\t\t}\n\n\t\t// Get the current hours for the date and add the offset to get the correct time adjusted for timezone.\n\t\ttmpReturnDate.setHours( tmpReturnDate.getHours() + tmpTimeZoneOffsetInHours );\n\n\t\t// Return the Date object calculated from the string.\n\t\treturn tmpReturnDate;\n\t}\n}\n\nmodule.exports = FableServiceUtility;\n},{\"async.eachlimit\":1,\"async.waterfall\":15,\"big.js\":17,\"fable-serviceproviderbase\":43}],66:[function(require,module,exports){\n'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n\n},{}],67:[function(require,module,exports){\n'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n\n},{\"./implementation\":66}],68:[function(require,module,exports){\n'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n\n},{\"function-bind\":67,\"has\":72,\"has-proto\":69,\"has-symbols\":70}],69:[function(require,module,exports){\n'use strict';\n\nvar test = {\n\tfoo: {}\n};\n\nvar $Object = Object;\n\nmodule.exports = function hasProto() {\n\treturn { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);\n};\n\n},{}],70:[function(require,module,exports){\n'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n\n},{\"./shams\":71}],71:[function(require,module,exports){\n'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n\n},{}],72:[function(require,module,exports){\n'use strict';\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar call = Function.prototype.call;\n\nmodule.exports = call.bind ? call.bind(hasOwnProperty) : function (O, P) {\n  return call.call(hasOwnProperty, O, P);\n};\n\n},{}],73:[function(require,module,exports){\nvar http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n\n},{\"http\":109,\"url\":130}],74:[function(require,module,exports){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],75:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n\n},{}],76:[function(require,module,exports){\n// When a boxed property is passed in, it should have quotes of some\n// kind around it.\n//\n// For instance:\n// \t\tMyValues['Name']\n// \t\tMyValues[\"Age\"]\n// \t\tMyValues[`Cost`]\n//\n// This function removes the wrapping quotes.\n//\n// Please note it *DOES NOT PARSE* template literals, so backticks just\n// end up doing the same thing as other quote types.\n//\n// TODO: Should template literals be processed?  If so what state do they have access to?  That should happen here if so.\n// TODO: Make a simple class include library with these\nconst cleanWrapCharacters = (pCharacter, pString) =>\n{\n\tif (pString.startsWith(pCharacter) && pString.endsWith(pCharacter))\n\t{\n\t\treturn pString.substring(1, pString.length - 1);\n\t}\n\telse\n\t{\n\t\treturn pString;\n\t}\n};\n\nmodule.exports = cleanWrapCharacters;\n},{}],77:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Hash Translation\n*\n* This is a very simple translation table for hashes, which allows the same schema to resolve\n* differently based on a loaded translation table.\n*\n* This is to prevent the requirement for mutating schemas over and over again when we want to\n* reuse the structure but look up data elements by different addresses.\n*\n* One side-effect of this is that a translation table can \"override\" the built-in hashes, since\n* this is always used to resolve hashes before any of the functionCallByHash(pHash, ...) perform\n* their lookups by hash.\n*\n* @class ManyfestHashTranslation\n*/\nclass ManyfestHashTranslation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n        this.translationTable = {};\n\t}\n\n    translationCount()\n    {\n        return Object.keys(this.translationTable).length;\n    }\n\n    addTranslation(pTranslation)\n    {\n        // This adds a translation in the form of:\n        // { \"SourceHash\": \"DestinationHash\", \"SecondSourceHash\":\"SecondDestinationHash\" }\n        if (typeof(pTranslation) != 'object')\n        {\n            this.logError(`Hash translation addTranslation expected a translation be type object but was passed in ${typeof(pTranslation)}`);\n            return false;\n        }\n\n        let tmpTranslationSources = Object.keys(pTranslation)\n\n        tmpTranslationSources.forEach(\n            (pTranslationSource) =>\n            {\n                if (typeof(pTranslation[pTranslationSource]) != 'string')\n                {\n                    this.logError(`Hash translation addTranslation expected a translation destination hash for [${pTranslationSource}] to be a string but the referrant was a ${typeof(pTranslation[pTranslationSource])}`);\n                }\n                else\n                {\n                    this.translationTable[pTranslationSource] = pTranslation[pTranslationSource];\n                }\n            });\n    }\n\n    removeTranslationHash(pTranslationHash)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslationHash))\n        {\n            delete this.translationTable[pTranslationHash];\n        }\n    }\n\n    // This removes translations.\n    // If passed a string, just removes the single one.\n    // If passed an object, it does all the source keys.\n    removeTranslation(pTranslation)\n    {\n        if (typeof(pTranslation) == 'string')\n        {\n            this.removeTranslationHash(pTranslation);\n            return true;\n        }\n        else if (typeof(pTranslation) == 'object')\n        {\n            let tmpTranslationSources = Object.keys(pTranslation)\n\n            tmpTranslationSources.forEach(\n                (pTranslationSource) =>\n                {\n                    this.removeTranslation(pTranslationSource);\n                });\n            return true;\n        }\n        else\n        {\n            this.logError(`Hash translation removeTranslation expected either a string or an object but the passed-in translation was type ${typeof(pTranslation)}`);\n            return false;\n        }\n    }\n\n    clearTranslations()\n    {\n        this.translationTable = {};\n    }\n\n    translate(pTranslation)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslation))\n        {\n            return this.translationTable[pTranslation];\n        }\n        else\n        {\n            return pTranslation;\n        }\n    }\n}\n\nmodule.exports = ManyfestHashTranslation;\n},{\"./Manyfest-LogToConsole.js\":78}],78:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\n\n/**\n* Manyfest simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n\n    console.log(`[Manyfest] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject));\n};\n\nmodule.exports = logToConsole;\n},{}],79:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Resolver\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressResolverCheckAddressExists\n*/\nclass ManyfestObjectAddressResolverCheckAddressExists\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// Check if an address exists.\n\t//\n\t// This is necessary because the getValueAtAddress function is ambiguous on\n\t// whether the element/property is actually there or not (it returns\n\t// undefined whether the property exists or not).  This function checks for\n\t// existance and returns true or false dependent.\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\t// TODO: Should these throw an error?\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Check if the property exists.\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName].hasOwnProperty(tmpBoxedPropertyReference);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Use the new in operator to see if the element is in the array\n\t\t\t\t\treturn (tmpBoxedPropertyNumber in pObject[tmpBoxedPropertyName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Check if the property exists\n\t\t\t\treturn pObject.hasOwnProperty(pAddress);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// Because this is an impossible address, the property doesn't exist\n\t\t\t\t\t// TODO: Should we throw an error in this condition?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverCheckAddressExists;\n},{\"./Manyfest-LogToConsole.js\":78}],80:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - DeleteValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverDeleteValue\n*/\nclass ManyfestObjectAddressResolverDeleteValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// TODO: Dry me\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Count from the end to the beginning so splice doesn't %&%#$ up the array\n\t\t\t\tfor (let i = tmpInputArray.length - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Delete elements end to beginning\n\t\t\t\t\t\ttmpInputArray.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tdelete pObject[tmpObjectPropertyName];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tdelete pObject[pAddress];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverDeleteValue;\n},{\"../source/Manyfest-ParseConditionals.js\":84,\"./Manyfest-CleanWrapCharacters.js\":76,\"./Manyfest-LogToConsole.js\":78}],81:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - GetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverGetValue\n*/\nclass ManyfestObjectAddressResolverGetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress, pParentAddress, pRootObject)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// Set the root object to the passed-in object if it isn't set yet.  This is expected to be the root object.\n\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// Adding simple back-navigation in objects\n\t\tif (tmpSeparatorIndex == 0)\n\t\t{\n\t\t\t// Given an address of \"Bundle.Contract.IDContract...Project.IDProject\" the ... would be interpreted as two back-navigations from IDContract.\n\t\t\t// When the address is passed in, though, the first . is already eliminated.  So we can count the dots.\n\t\t\tlet tmpParentAddressParts = tmpParentAddress.split('.');\n\n\t\t\tlet tmpBackNavigationCount = 0;\n\n\t\t\t// Count the number of dots\n\t\t\tfor (let i = 0; i < pAddress.length; i++)\n\t\t\t{\n\t\t\t\tif (pAddress.charAt(i) != '.')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttmpBackNavigationCount++;\n\t\t\t}\n\n\t\t\tlet tmpParentAddressLength = tmpParentAddressParts.length - tmpBackNavigationCount;\n\n\t\t\tif (tmpParentAddressLength < 0)\n\t\t\t{\n\t\t\t\t// We are trying to back navigate more than we can.\n\t\t\t\t// TODO: Should this be undefined or should we bank out at the bottom and try to go forward?\n\t\t\t\t// This seems safest for now.\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are trying to back navigate to a parent object.\n\t\t\t\t// Recurse with the back-propagated parent address, and, the new address without the back-navigation dots.\n\t\t\t\tlet tmpRecurseAddress = pAddress.slice(tmpBackNavigationCount);\n\t\t\t\tif (tmpParentAddressLength > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpRecurseAddress = `${tmpParentAddressParts.slice(0, tmpParentAddressLength).join('.')}.${tmpRecurseAddress}`;\n\t\t\t\t}\n\t\t\t\tthis.logInfo(`Back-navigation detected.  Recursing back to address [${tmpRecurseAddress}]`);\n\t\t\t\treturn this.getValueAtAddress(tmpRootObject, tmpRecurseAddress);\n\t\t\t}\n\t\t}\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\tlet tmpOutputArray = [];\n\t\t\t\tfor (let i = 0; i < tmpInputArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOutputArray.push(tmpInputArray[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpOutputArray;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn pObject[tmpObjectPropertyName];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\treturn pObject[pAddress];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverGetValue;\n},{\"../source/Manyfest-ParseConditionals.js\":84,\"./Manyfest-CleanWrapCharacters.js\":76,\"./Manyfest-LogToConsole.js\":78}],82:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - SetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressSetValue\n*/\nclass ManyfestObjectAddressSetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyReference] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the time in recursion to set the value in the object\n\t\t\t\tpObject[pAddress] = pValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressSetValue;\n},{\"./Manyfest-CleanWrapCharacters.js\":76,\"./Manyfest-LogToConsole.js\":78}],83:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Generation\n*\n* Automagically generate addresses and properties based on a passed-in object,\n* to be used for easy creation of schemas.  Meant to simplify the lives of\n* developers wanting to create schemas without typing a bunch of stuff.\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressGeneration\n*/\nclass ManyfestObjectAddressGeneration\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// generateAddressses\n\t//\n\t// This flattens an object into a set of key:value pairs for *EVERY SINGLE\n\t// POSSIBLE ADDRESS* in the object.  It can get ... really insane really\n\t// quickly.  This is not meant to be used directly to generate schemas, but\n\t// instead as a starting point for scripts or UIs.\n\t//\n\t// This will return a mega set of key:value pairs with all possible schema\n\t// permutations and default values (when not an object) and everything else.\n\tgenerateAddressses (pObject, pBaseAddress, pSchema)\n\t{\n\t\tlet tmpBaseAddress = (typeof(pBaseAddress) == 'string') ? pBaseAddress : '';\n\t\tlet tmpSchema = (typeof(pSchema) == 'object') ? pSchema : {};\n\n\t\tlet tmpObjectType = typeof(pObject);\n\n\t\tlet tmpSchemaObjectEntry = (\n\t\t\t{\n\t\t\t\tAddress: tmpBaseAddress,\n\t\t\t\tHash: tmpBaseAddress,\n\t\t\t\tName: tmpBaseAddress,\n\t\t\t\t// This is so scripts and UI controls can force a developer to opt-in.\n\t\t\t\tInSchema: false\n\t\t\t}\n\t\t)\n\n\t\tif ((tmpObjectType == 'object') && (pObject == null))\n\t\t{\n\t\t\ttmpObjectType = 'null';\n\t\t}\n\n\t\tswitch(tmpObjectType)\n\t\t{\n\t\t\tcase 'string':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'String';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'bigint':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Number';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\tcase 'null':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Any';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif (Array.isArray(pObject))\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Array';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < pObject.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[i], `${tmpBaseAddress}[${i}]`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Object';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t\ttmpBaseAddress += '.';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectProperties = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectProperties.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[tmpObjectProperties[i]], `${tmpBaseAddress}${tmpObjectProperties[i]}`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'symbol':\n\t\t\tcase 'function':\n\t\t\t\t// Symbols and functions neither recurse nor get added to the schema\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tmpSchema;\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressGeneration;\n},{\"./Manyfest-LogToConsole.js\":78}],84:[function(require,module,exports){\n// Given a string, parse out any conditional expressions and set whether or not to keep the record.\n//\n// For instance:\n// \t\t'files[]<<~?format,==,Thumbnail?~>>'\n//      'files[]<<~?format,==,Metadata?~>>'\n//      'files[]<<~?size,>,4000?~>>'\n//\n// The wrapping parts are the <<~? and ?~>> megabrackets.\n//\n// The function does not need to alter the string -- just check the conditionals within.\n\n// TODO: Consider making this an es6 class\n\n// Let's use indexOf since it is apparently the fastest.\nconst _ConditionalStanzaStart = '<<~?';\nconst _ConditionalStanzaStartLength = _ConditionalStanzaStart.length;\nconst _ConditionalStanzaEnd = '?~>>';\nconst _ConditionalStanzaEndLength = _ConditionalStanzaEnd.length;\n\n// Test the condition of a value in a record\nconst testCondition = (pManyfest, pRecord, pSearchAddress, pSearchComparator, pValue) =>\n{\n\tswitch(pSearchComparator)\n\t{\n\t\tcase '!=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) != pValue);\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) < pValue);\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) > pValue);\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) <= pValue);\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) >= pValue);\n\t\t\tbreak;\n\t\tcase '===':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === pValue);\n\t\t\tbreak;\n\t\tcase '==':\n\t\tdefault:\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) == pValue);\n\t\t\tbreak;\n\t}\n};\n\nconst parseConditionals = (pManyfest, pAddress, pRecord) =>\n{\n\tlet tmpKeepRecord = true;\n\n\t/*\n\t\tAlgorithm is simple:\n\n\t\t1.  Enuerate start points\n\n\t\t2.  Find stop points within each start point\n\t\t3. Check the conditional\n\t*/\n\n\tlet tmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart);\n\n\twhile (tmpStartIndex != -1)\n\t{\n\t\tlet tmpStopIndex = pAddress.indexOf(_ConditionalStanzaEnd, tmpStartIndex+_ConditionalStanzaStartLength);\n\n\t\tif (tmpStopIndex != -1)\n\t\t{\n\t\t\tlet tmpMagicComparisonPatternSet = pAddress.substring(tmpStartIndex+_ConditionalStanzaStartLength, tmpStopIndex).split(',');\n\n\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\t\t\tlet tmpSearchComparator = tmpMagicComparisonPatternSet[1];\n\t\t\tlet tmpSearchValue = tmpMagicComparisonPatternSet[2];\n\n\t\t\t// Process the piece\n\t\t\ttmpKeepRecord = tmpKeepRecord && testCondition(pManyfest, pRecord, tmpSearchAddress, tmpSearchComparator, tmpSearchValue);\n\t\t\ttmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart, tmpStopIndex+_ConditionalStanzaEndLength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpStartIndex = -1;\n\t\t}\n\t\t\n\t}\n\n\treturn tmpKeepRecord;\n}\n\nmodule.exports = parseConditionals;\n},{}],85:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Schema Manipulation Functions\n*\n* @class ManyfestSchemaManipulation\n*/\nclass ManyfestSchemaManipulation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n    // This translates the default address mappings to something different.\n    //\n    // For instance you can pass in manyfest schema descriptor object:\n    // \t{\n\t//\t  \"Address.Of.a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t//\t  \"Address.Of.b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t//  }\n    //\n    //\n    // And then an address mapping (basically a Hash->Address map)\n    //  {\n    //    \"a\": \"New.Address.Of.a\",\n    //    \"b\": \"New.Address.Of.b\"\n    //  }\n    //\n    // NOTE: This mutates the schema object permanently, altering the base hash.\n    //       If there is a collision with an existing address, it can lead to overwrites.\n    // TODO: Discuss what should happen on collisions.\n\tresolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\tif (typeof(pManyfestSchemaDescriptors) != 'object')\n\t\t{\n\t\t\tthis.logError(`Attempted to resolve address mapping but the descriptor was not an object.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof(pAddressMapping) != 'object')\n\t\t{\n\t\t\t// No mappings were passed in\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the arrays of both the schema definition and the hash mapping\n\t\tlet tmpManyfestAddresses = Object.keys(pManyfestSchemaDescriptors);\n\t\tlet tmpHashMapping = {};\n\t\ttmpManyfestAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tif (pManyfestSchemaDescriptors[pAddress].hasOwnProperty('Hash'))\n\t\t\t\t{\n\t\t\t\t\ttmpHashMapping[pManyfestSchemaDescriptors[pAddress].Hash] = pAddress;\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet tmpAddressMappingSet = Object.keys(pAddressMapping);\n\n\t\ttmpAddressMappingSet.forEach(\n\t\t\t(pInputAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpNewDescriptorAddress = pAddressMapping[pInputAddress];\n\t\t\t\tlet tmpOldDescriptorAddress = false;\n\t\t\t\tlet tmpDescriptor = false;\n\n\t\t\t\t// See if there is a matching descriptor either by Address directly or Hash\n\t\t\t\tif (pManyfestSchemaDescriptors.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = pInputAddress;\n\t\t\t\t}\n\t\t\t\telse if (tmpHashMapping.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = tmpHashMapping[pInputAddress];\n\t\t\t\t}\n\n\t\t\t\t// If there was a matching descriptor in the manifest, store it in the temporary descriptor\n\t\t\t\tif (tmpOldDescriptorAddress)\n\t\t\t\t{\n\t\t\t\t\ttmpDescriptor = pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t\tdelete pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Create a new descriptor!  Map it to the input address.\n\t\t\t\t\ttmpDescriptor = { Hash:pInputAddress };\n\t\t\t\t}\n\n\t\t\t\t// Now re-add the descriptor to the manyfest schema\n\t\t\t\tpManyfestSchemaDescriptors[tmpNewDescriptorAddress] = tmpDescriptor;\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tsafeResolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\t// This returns the descriptors as a new object, safely remapping without mutating the original schema Descriptors\n\t\tlet tmpManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptors));\n\t\tthis.resolveAddressMappings(tmpManyfestSchemaDescriptors, pAddressMapping);\n\t\treturn tmpManyfestSchemaDescriptors;\n\t}\n\n\tmergeAddressMappings(pManyfestSchemaDescriptorsDestination, pManyfestSchemaDescriptorsSource)\n\t{\n\t\tif ((typeof(pManyfestSchemaDescriptorsSource) != 'object') || (typeof(pManyfestSchemaDescriptorsDestination) != 'object'))\n\t\t{\n\t\t\tthis.logError(`Attempted to merge two schema descriptors but both were not objects.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpSource = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsSource));\n\t\tlet tmpNewManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsDestination));\n\n\t\t// The first passed-in set of descriptors takes precedence.\n\t\tlet tmpDescriptorAddresses = Object.keys(tmpSource);\n\n\t\ttmpDescriptorAddresses.forEach(\n\t\t\t(pDescriptorAddress) =>\n\t\t\t{\n\t\t\t\tif (!tmpNewManyfestSchemaDescriptors.hasOwnProperty(pDescriptorAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpNewManyfestSchemaDescriptors[pDescriptorAddress] = tmpSource[pDescriptorAddress];\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpNewManyfestSchemaDescriptors;\n\t}\n}\n\nmodule.exports = ManyfestSchemaManipulation;\n},{\"./Manyfest-LogToConsole.js\":78}],86:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\nlet libHashTranslation = require('./Manyfest-HashTranslation.js');\nlet libObjectAddressCheckAddressExists = require('./Manyfest-ObjectAddress-CheckAddressExists.js');\nlet libObjectAddressGetValue = require('./Manyfest-ObjectAddress-GetValue.js');\nlet libObjectAddressSetValue = require('./Manyfest-ObjectAddress-SetValue.js');\nlet libObjectAddressDeleteValue = require('./Manyfest-ObjectAddress-DeleteValue.js');\nlet libObjectAddressGeneration = require('./Manyfest-ObjectAddressGeneration.js');\nlet libSchemaManipulation = require('./Manyfest-SchemaManipulation.js');\n\nconst _DefaultConfiguration = { Scope:'DEFAULT', Descriptors: {} }\n\n/**\n* Manyfest object address-based descriptions and manipulations.\n*\n* @class Manyfest\n*/\nclass Manyfest extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'Manifest';\n\n\t\t// Wire in logging\n\t\tthis.logInfo = libSimpleLog;\n\t\tthis.logError = libSimpleLog;\n\n\t\t// Create an object address resolver and map in the functions\n\t\tthis.objectAddressCheckAddressExists = new libObjectAddressCheckAddressExists(this.logInfo, this.logError);\n\t\tthis.objectAddressGetValue = new libObjectAddressGetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressSetValue = new libObjectAddressSetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressDeleteValue = new libObjectAddressDeleteValue(this.logInfo, this.logError);\n\n\t\tif (!this.options.hasOwnProperty('defaultValues'))\n\t\t{\n\t\t\tthis.options.defaultValues = (\n\t\t\t\t{\n\t\t\t\t\t\"String\": \"\",\n\t\t\t\t\t\"Number\": 0,\n\t\t\t\t\t\"Float\": 0.0,\n\t\t\t\t\t\"Integer\": 0,\n\t\t\t\t\t\"Boolean\": false,\n\t\t\t\t\t\"Binary\": 0,\n\t\t\t\t\t\"DateTime\": 0,\n\t\t\t\t\t\"Array\": [],\n\t\t\t\t\t\"Object\": {},\n\t\t\t\t\t\"Null\": null\n\t\t\t\t});\n\t\t}\n\t\tif (!this.options.hasOwnProperty('strict'))\n\t\t{\n\t\t\tthis.options.strict = false;\n\t\t}\n\n\t\tthis.scope = undefined;\n\t\tthis.elementAddresses = undefined;\n\t\tthis.elementHashes = undefined;\n\t\tthis.elementDescriptors = undefined;\n\n\t\tthis.reset();\n\n\t\tif (typeof(this.options) === 'object')\n\t\t{\n\t\t\tthis.loadManifest(this.options);\n\t\t}\n\n\t\tthis.schemaManipulations = new libSchemaManipulation(this.logInfo, this.logError);\n\t\tthis.objectAddressGeneration = new libObjectAddressGeneration(this.logInfo, this.logError);\n\n\t\tthis.hashTranslations = new libHashTranslation(this.logInfo, this.logError);\n\t}\n\n\t/*************************************************************************\n\t * Schema Manifest Loading, Reading, Manipulation and Serialization Functions\n\t */\n\n\t// Reset critical manifest properties\n\treset()\n\t{\n\t\tthis.scope = 'DEFAULT';\n\t\tthis.elementAddresses = [];\n\t\tthis.elementHashes = {};\n\t\tthis.elementDescriptors = {};\n\t}\n\n\tclone()\n\t{\n\t\t// Make a copy of the options in-place\n\t\tlet tmpNewOptions = JSON.parse(JSON.stringify(this.options));\n\n\t\tlet tmpNewManyfest = new Manyfest(this.getManifest(), this.logInfo, this.logError, tmpNewOptions);\n\n\t\t// Import the hash translations\n\t\ttmpNewManyfest.hashTranslations.addTranslation(this.hashTranslations.translationTable);\n\n\t\treturn tmpNewManyfest;\n\t}\n\n\t// Deserialize a Manifest from a string\n\tdeserialize(pManifestString)\n\t{\n\t\t// TODO: Add guards for bad manifest string\n\t\treturn this.loadManifest(JSON.parse(pManifestString));\n\t}\n\n\t// Load a manifest from an object\n\tloadManifest(pManifest)\n\t{\n\t\tif (typeof(pManifest) !== 'object')\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading manifest; expecting an object but parameter was type ${typeof(pManifest)}.`);\n\t\t}\n\n\t\tlet tmpManifest = (typeof(pManifest) == 'object') ? pManifest : {};\n\n\t\tlet tmpDescriptorKeys = Object.keys(_DefaultConfiguration);\n\n\t\tfor (let i = 0; i < tmpDescriptorKeys.length; i++)\n\t\t{\n\t\t\tif (!tmpManifest.hasOwnProperty(tmpDescriptorKeys[i]))\n\t\t\t{\n\t\t\t\ttmpManifest[tmpDescriptorKeys[i]] = JSON.parse(JSON.stringify(_DefaultConfiguration[tmpDescriptorKeys[i]]));\n\t\t\t}\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Scope'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Scope) === 'string')\n\t\t\t{\n\t\t\t\tthis.scope = tmpManifest.Scope;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest; expecting a string but property was type ${typeof(tmpManifest.Scope)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest object.  Property \"Scope\" does not exist in the root of the object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Descriptors'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Descriptors) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpDescriptionAddresses = Object.keys(tmpManifest.Descriptors);\n\t\t\t\tfor (let i = 0; i < tmpDescriptionAddresses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.addDescriptor(tmpDescriptionAddresses[i], tmpManifest.Descriptors[tmpDescriptionAddresses[i]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading description object from manifest object.  Expecting an object in 'Manifest.Descriptors' but the property was type ${typeof(tmpManifest.Descriptors)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object description from manifest object.  Property \"Descriptors\" does not exist in the root of the Manifest object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('HashTranslations'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.HashTranslations) === 'object')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < tmpManifest.HashTranslations.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// Each translation is \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Serialize the Manifest to a string\n\tserialize()\n\t{\n\t\treturn JSON.stringify(this.getManifest());\n\t}\n\n\tgetManifest()\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tScope: this.scope,\n\t\t\t\tDescriptors: JSON.parse(JSON.stringify(this.elementDescriptors)),\n\t\t\t\tHashTranslations: JSON.parse(JSON.stringify(this.hashTranslations.translationTable))\n\t\t\t});\n\t}\n\n\t// Add a descriptor to the manifest\n\taddDescriptor(pAddress, pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) === 'object')\n\t\t{\n\t\t\t// Add the Address into the Descriptor if it doesn't exist:\n\t\t\tif (!pDescriptor.hasOwnProperty('Address'))\n\t\t\t{\n\t\t\t\tpDescriptor.Address = pAddress;\n\t\t\t}\n\n\t\t\tif (!this.elementDescriptors.hasOwnProperty(pAddress))\n\t\t\t{\n\t\t\t\tthis.elementAddresses.push(pAddress);\n\t\t\t}\n\n\t\t\t// Add the element descriptor to the schema\n\t\t\tthis.elementDescriptors[pAddress] = pDescriptor;\n\n\t\t\t// Always add the address as a hash\n\t\t\tthis.elementHashes[pAddress] = pAddress;\n\n\t\t\tif (pDescriptor.hasOwnProperty('Hash'))\n\t\t\t{\n\t\t\t\t// TODO: Check if this is a good idea or not..\n\t\t\t\t//       Collisions are bound to happen with both representations of the address/hash in here and developers being able to create their own hashes.\n\t\t\t\tthis.elementHashes[pDescriptor.Hash] = pAddress;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpDescriptor.Hash = pAddress;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object descriptor for address '${pAddress}' from manifest object.  Expecting an object but property was type ${typeof(pDescriptor)}.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetDescriptorByHash(pHash)\n\t{\n\t\treturn this.getDescriptor(this.resolveHashAddress(pHash));\n\t}\n\n\tgetDescriptor(pAddress)\n\t{\n\t\treturn this.elementDescriptors[pAddress];\n\t}\n\n\t// execute an action function for each descriptor\n\teachDescriptor(fAction)\n\t{\n        let tmpDescriptorAddresses = Object.keys(this.elementDescriptors);\n        for (let i = 0; i < tmpDescriptorAddresses.length; i++)\n        {\n            fAction(this.elementDescriptors[tmpDescriptorAddresses[i]]);\n        }\n\n\t}\n\n\t/*************************************************************************\n\t * Beginning of Object Manipulation (read & write) Functions\n\t */\n\t// Check if an element exists by its hash\n\tcheckAddressExistsByHash (pObject, pHash)\n\t{\n\t\treturn this.checkAddressExists(pObject,this.resolveHashAddress(pHash));\n\t}\n\n\t// Check if an element exists at an address\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\treturn this.objectAddressCheckAddressExists.checkAddressExists(pObject, pAddress);\n\t}\n\n\t// Turn a hash into an address, factoring in the translation table.\n\tresolveHashAddress(pHash)\n\t{\n\t\tlet tmpAddress = undefined;\n\n\t\tlet tmpInElementHashTable = this.elementHashes.hasOwnProperty(pHash);\n\t\tlet tmpInTranslationTable = this.hashTranslations.translationTable.hasOwnProperty(pHash);\n\n\t\t// The most straightforward: the hash exists, no translations.\n\t\tif (tmpInElementHashTable && !tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[pHash];\n\t\t}\n\t\t// There is a translation from one hash to another, and, the elementHashes contains the pointer end\n\t\telse if (tmpInTranslationTable && this.elementHashes.hasOwnProperty(this.hashTranslations.translate(pHash)))\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[this.hashTranslations.translate(pHash)];\n\t\t}\n\t\t// Use the level of indirection only in the Translation Table\n\t\telse if (tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.hashTranslations.translate(pHash);\n\t\t}\n\t\t// Just treat the hash as an address.\n\t\t// TODO: Discuss this ... it is magic but controversial\n\t\telse\n\t\t{\n\t\t\ttmpAddress = pHash;\n\t\t}\n\n\t\treturn tmpAddress;\n\t}\n\n\t// Get the value of an element by its hash\n\tgetValueByHash (pObject, pHash)\n\t{\n\t\tlet tmpValue = this.getValueAtAddress(pObject, this.resolveHashAddress(pHash));\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptorByHash(pHash));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\tlet tmpValue = this.objectAddressGetValue.getValueAtAddress(pObject, pAddress);\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptor(pAddress));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Set the value of an element by its hash\n\tsetValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.setValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressSetValue.setValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Delete the value of an element by its hash\n\tdeleteValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.deleteValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressDeleteValue.deleteValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Validate the consistency of an object against the schema\n\tvalidate(pObject)\n\t{\n\t\tlet tmpValidationData =\n\t\t{\n\t\t\tError: null,\n\t\t\tErrors: [],\n\t\t\tMissingElements:[]\n\t\t};\n\n\t\tif (typeof(pObject) !== 'object')\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Expected passed in object to be type object but was passed in ${typeof(pObject)}`);\n\t\t}\n\n\t\tlet addValidationError = (pAddress, pErrorMessage) =>\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Element at address \"${pAddress}\" ${pErrorMessage}.`);\n\t\t};\n\n\t\t// Now enumerate through the values and check for anomalies based on the schema\n\t\tfor (let i = 0; i < this.elementAddresses.length; i++)\n\t\t{\n\t\t\tlet tmpDescriptor = this.getDescriptor(this.elementAddresses[i]);\n\t\t\tlet tmpValueExists = this.checkAddressExists(pObject, tmpDescriptor.Address);\n\t\t\tlet tmpValue = this.getValueAtAddress(pObject, tmpDescriptor.Address);\n\n\t\t\tif ((typeof(tmpValue) == 'undefined') || !tmpValueExists)\n\t\t\t{\n\t\t\t\t// This will technically mean that `Object.Some.Value = undefined` will end up showing as \"missing\"\n\t\t\t\t// TODO: Do we want to do a different message based on if the property exists but is undefined?\n\t\t\t\ttmpValidationData.MissingElements.push(tmpDescriptor.Address);\n\t\t\t\tif (tmpDescriptor.Required || this.options.strict)\n\t\t\t\t{\n\t\t\t\t\taddValidationError(tmpDescriptor.Address, 'is flagged REQUIRED but is not set in the object');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now see if there is a data type specified for this element\n\t\t\tif (tmpDescriptor.DataType)\n\t\t\t{\n\t\t\t\tlet tmpElementType = typeof(tmpValue);\n\t\t\t\tswitch(tmpDescriptor.DataType.toString().trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpValueString = tmpValue.toString();\n\t\t\t\t\t\t\tif (tmpValueString.indexOf('.') > -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// TODO: Is this an error?\n\t\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but has a decimal point in the number.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DateTime':\n\t\t\t\t\t\tlet tmpValueDate = new Date(tmpValue);\n\t\t\t\t\t\tif (tmpValueDate.toString() == 'Invalid Date')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is not parsable as a Date by Javascript`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Check if this is a string, in the default case\n\t\t\t\t\t\t// Note this is only when a DataType is specified and it is an unrecognized data type.\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} (which auto-converted to String because it was unrecognized) but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpValidationData;\n\t}\n\n\t// Returns a default value, or, the default value for the data type (which is overridable with configuration)\n\tgetDefaultValue(pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) != 'object')\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (pDescriptor.hasOwnProperty('Default'))\n\t\t{\n\t\t\treturn pDescriptor.Default;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Default to a null if it doesn't have a type specified.\n\t\t\t// This will ensure a placeholder is created but isn't misinterpreted.\n\t\t\tlet tmpDataType = (pDescriptor.hasOwnProperty('DataType')) ? pDescriptor.DataType : 'String';\n\t\t\tif (this.options.defaultValues.hasOwnProperty(tmpDataType))\n\t\t\t{\n\t\t\t\treturn this.options.defaultValues[tmpDataType];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// give up and return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enumerate through the schema and populate default values if they don't exist.\n\tpopulateDefaults(pObject, pOverwriteProperties)\n\t{\n\t\treturn this.populateObject(pObject, pOverwriteProperties,\n\t\t\t// This just sets up a simple filter to see if there is a default set.\n\t\t\t(pDescriptor) =>\n\t\t\t{\n\t\t\t\treturn pDescriptor.hasOwnProperty('Default');\n\t\t\t});\n\t}\n\n\t// Forcefully populate all values even if they don't have defaults.\n\t// Based on type, this can do unexpected things.\n\tpopulateObject(pObject, pOverwriteProperties, fFilter)\n\t{\n\t\t// Automatically create an object if one isn't passed in.\n\t\tlet tmpObject = (typeof(pObject) === 'object') ? pObject : {};\n\t\t// Default to *NOT OVERWRITING* properties\n\t\tlet tmpOverwriteProperties = (typeof(pOverwriteProperties) == 'undefined') ? false : pOverwriteProperties;\n\t\t// This is a filter function, which is passed the schema and allows complex filtering of population\n\t\t// The default filter function just returns true, populating everything.\n\t\tlet tmpFilterFunction = (typeof(fFilter) == 'function') ? fFilter : (pDescriptor) => { return true; };\n\n\t\tthis.elementAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpDescriptor = this.getDescriptor(pAddress);\n\t\t\t\t// Check the filter function to see if this is an address we want to set the value for.\n\t\t\t\tif (tmpFilterFunction(tmpDescriptor))\n\t\t\t\t{\n\t\t\t\t\t// If we are overwriting properties OR the property does not exist\n\t\t\t\t\tif (tmpOverwriteProperties || !this.checkAddressExists(tmpObject, pAddress))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setValueAtAddress(tmpObject, pAddress, this.getDefaultValue(tmpDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpObject;\n\t}\n};\n\nmodule.exports = Manyfest;\n},{\"./Manyfest-HashTranslation.js\":77,\"./Manyfest-LogToConsole.js\":78,\"./Manyfest-ObjectAddress-CheckAddressExists.js\":79,\"./Manyfest-ObjectAddress-DeleteValue.js\":80,\"./Manyfest-ObjectAddress-GetValue.js\":81,\"./Manyfest-ObjectAddress-SetValue.js\":82,\"./Manyfest-ObjectAddressGeneration.js\":83,\"./Manyfest-SchemaManipulation.js\":85,\"fable-serviceproviderbase\":43}],87:[function(require,module,exports){\nvar hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n\n},{\"./util.inspect\":18}],88:[function(require,module,exports){\nvar wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n\n},{\"wrappy\":132}],89:[function(require,module,exports){\n(function (process){(function (){\n// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":95}],90:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase')\n\nconst defaultPictSettings = (\n\t{\n\t\tName: 'DefaultPictApplication',\n\n\t\t// The main \"viewport\" is the view that is used to host our application\n\t\tMainViewportViewIdentifier: 'Default-View',\n\t\tMainViewportRenderableHash: false,\n\t\tMainViewportDestinationAddress: false,\n\t\tMainViewportDefaultDataAddress: false,\n\n\t\t// Whether or not we should automatically render the main viewport after we initialize the pict application\n\t\tAutoSolveAfterInitialize: true,\n\t\tAutoRenderMainViewportViewAfterInitialize: true,\n\n\t\tManifests: {},\n\t\t// The prefix to prepend on all template destination hashes\n\t\tIdentifierAddressPrefix: 'PICT-'\n\t});\n\nclass PictApplication extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tthis.serviceType = 'PictApplication';\n\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict state\n\t\tthis.AppData = this.fable.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastMarshalFromViewsTimestamp = false;\n\t\tthis.lastMarshalToViewsTimestamp = false;\n\n\t\t// Load all the manifests for the application\n\t\tlet tmpManifestKeys = Object.keys(this.options.Manifests);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++)\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.fable.serviceManager.instantiateServiceProvider('Manifest', this.options.Manifests[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Solve All Views                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing solve() function...`)\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpViewsToSolve[i].solve();\n\t\t}\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\t// Walk through any loaded views and solve them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoSolveWithApp)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoSolveOrdinal - b.options.AutoSolveOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToSolve[i].solveAsync.bind(tmpViewsToSolve[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Initialize Application                   */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\ttmpViewsToInitialize[i].initialize();\n\t\t\t}\n\t\t\tthis.onAfterInitialize();\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Solve the template synchronously\n\t\t\t\tthis.solve();\n\t\t\t}\n\t\t\t// Now check and see if we should automatically render as well\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Render the template synchronously\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallBack)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\t// TODO: Some optimization cleverness could be gained by grouping them into a parallelized async operation, by ordinal.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority\n\t\t\t// If they are all the default priority 0, it will end up being add order due to JSON Object Property Key order stuff\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = tmpViewsToInitialize[i];\n\t\t\t\ttmpAnticipate.anticipate(tmpView.initializeAsync.bind(tmpView));\n\t\t\t}\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.solveAsync.bind(this));\n\t\t\t}\n\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.renderMainViewportAsync.bind(this));\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallBack();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data From All Views              */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalFromViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalFromViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalFromViews[i].marshalFromView();\n\t\t}\n\t\tthis.onMarshalFromViews();\n\t\tthis.onAfterMarshalFromViews();\n\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalFromViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalFromViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalFromViews[i].marshalFromViewAsync.bind(tmpViewsToMarshalFromViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data To All Views                */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalToViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalToViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalToViews[i].marshalToView();\n\t\t}\n\t\tthis.onMarshalToViews();\n\t\tthis.onAfterMarshalToViews();\n\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalToViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalToViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalToViews[i].marshalToViewAsync.bind(tmpViewsToMarshalToViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Render View                              */\n\t/* -------------------------------------------------------------------------- */\n\trender(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\t// Now get the view (by hash) from the loaded views\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not render from View ${tmpViewIdentifier} because it is not a valid view.`);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn tmpView.render(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress);\n\t}\n\trenderMainViewport()\n\t{\n\t\treturn this.render(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress);\n\t}\n\n\trenderAsync(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tlet tmpErrorMessage = `PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not asynchronously render from View ${tmpViewIdentifier} because it is not a valid view.`;\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.error(tmpErrorMessage);\n\t\t\t}\n\t\t\treturn fCallback(new Error(tmpErrorMessage));\n\t\t}\n\n\t\treturn tmpView.renderAsync(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress, fCallback);\n\t}\n\trenderMainViewportAsync(fCallback)\n\t{\n\t\treturn this.renderAsync(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress, fCallback);\n\t}\n}\n\nmodule.exports = PictApplication;\n},{\"fable-serviceproviderbase\":43}],91:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst defaultPictViewSettings = (\n\t{\n\t\tDefaultRenderable: false,\n\t\tDefaultDestinationAddress: false,\n\t\tDefaultTemplateRecordAddress: false,\n\n\t\tViewIdentifier: false,\n\n\t\t// If this is set to true, when the App initializes this will.\n\t\t// After the App initializes, initialize will be called as soon as it's added.\n\t\tAutoInitialize: true,\n\t\tAutoInitializeOrdinal: 0,\n\n\t\t// If this is set to true, when the App autorenders (on load) this will.\n\t\t// After the App initializes, render will be called as soon as it's added.\n\t\tAutoRender: true,\n\t\tAutoRenderOrdinal: 0,\n\n\t\tAutoSolveWithApp: true,\n\t\tAutoSolveOrdinal: 0,\n\n\t\tCSSHash: false,\n\t\tCSS: false,\n\t\tCSSProvider: false,\n\t\tCSSPriority: 500,\n\n\t\tTemplates: [],\n\n\t\tDefaultTemplates: [],\n\n\t\tRenderables: [],\n\n\t\tManifests: {}\n\t});\n\nclass PictView extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Intersect default options, parent constructor, service information\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictViewSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tif (!this.options.ViewIdentifier)\n\t\t{\n\t\t\tthis.options.ViewIdentifier = `AutoViewID-${this.fable.getUUID()}`;\n\t\t}\n\t\tthis.serviceType = 'PictView';\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict application state\n\t\tthis.AppData = this.pict.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastRenderedTimestamp = false;\n\t\tthis.lastMarshalFromViewTimestamp = false;\n\t\tthis.lastMarshalToViewTimestamp = false;\n\n\t\t// Load all templates from the array in the options\n\t\t// Templates are in the form of {Hash:'Some-Template-Hash',Template:'Template content',Source:'TemplateSource'}\n\t\tfor (let i = 0; i < this.options.Templates.length; i++)\n\t\t{\n\t\t\tlet tmpTemplate = this.options.Templates[i];\n\n\t\t\tif (!tmpTemplate.hasOwnProperty('Hash') || !tmpTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Template ${i} in the options array.`, tmpTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addTemplate(tmpTemplate.Hash, tmpTemplate.Template, tmpTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load all default templates from the array in the options\n\t\t// Templates are in the form of {Prefix:'',Postfix:'-List-Row',Template:'Template content',Source:'TemplateSourceString'}\n\t\tfor (let i = 0; i < this.options.DefaultTemplates.length; i++)\n\t\t{\n\t\t\tlet tmpDefaultTemplate = this.options.DefaultTemplates[i];\n\n\t\t\tif (!tmpDefaultTemplate.hasOwnProperty('Postfix') || !tmpDefaultTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Default Template ${i} in the options array.`, tmpDefaultTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpDefaultTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpDefaultTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addDefaultTemplate(tmpDefaultTemplate.Prefix, tmpDefaultTemplate.Postfix, tmpDefaultTemplate.Template, tmpDefaultTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load the CSS if it's available\n\t\tif (this.options.CSS)\n\t\t{\n\t\t\tlet tmpCSSHash = this.options.CSSHash ? this.options.CSSHash : `View-${this.options.ViewIdentifier}`;\n\t\t\tlet tmpCSSProvider = this.options.CSSProvider ? this.options.CSSProvider : tmpCSSHash;\n\t\t\tthis.pict.CSSMap.addCSS(tmpCSSHash, this.options.CSS, tmpCSSProvider, this.options.CSSPriority);\n\t\t}\n\n\t\t// Load all renderables\n\t\t// Renderables are launchable renderable instructions with templates\n\t\t// They look as such: {Identifier:'ContentEntry', TemplateHash:'Content-Entry-Section-Main', ContentDestinationAddress:'#ContentSection', RecordAddress:'AppData.Content.DefaultText', ManifestTransformation:'ManyfestHash', ManifestDestinationAddress:'AppData.Content.DataToTransformContent'}\n\t\t// The only parts that are necessary are Identifier and Template\n\t\t// A developer can then do render('ContentEntry') and it just kinda works.  Or they can override the ContentDestinationAddress\n\t\tthis.renderables = {};\n\t\tfor (let i = 0; i < this.options.Renderables.length; i++)\n\t\t{\n\t\t\tlet tmpRenderable = this.options.Renderables[i];\n\t\t\tthis.addRenderable(this.options.Renderables[i]);\n\t\t}\n\t}\n\n\taddRenderable(pRenderableHash, pTemplateHash, pDefaultTemplateDataAddress, pDefaultDestinationAddress, pRenderMethod)\n\t{\n\t\tlet tmpRenderable = false;\n\n\t\tif (typeof(pRenderableHash) == 'object')\n\t\t{\n\t\t\t// The developer passed in the renderable as an object.\n\t\t\t// Use theirs instead!\n\t\t\ttmpRenderable = pRenderableHash;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpRenderMethod = (typeof(pRenderMethod) !== 'string') ? pRenderMethod : 'replace';\n\t\t\ttmpRenderable = (\n\t\t\t\t{\n\t\t\t\t\tRenderableHash: pRenderableHash,\n\t\t\t\t\tTemplateHash: pTemplateHash,\n\t\t\t\t\tDefaultTemplateDataAddress: pDefaultTemplateDataAddress,\n\t\t\t\t\tDefaultDestinationAddress: pDefaultDestinationAddress,\n\t\t\t\t\tRenderMethod: tmpRenderMethod\n\t\t\t\t});\n\t\t}\n\n\t\tif ((typeof(tmpRenderable.RenderableHash) != 'string') || (typeof(tmpRenderable.TemplateHash) != 'string'))\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Renderable; RenderableHash or TemplateHash are invalid.`, tmpRenderable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} adding renderable [${tmpRenderable.RenderableHash}] pointed to template ${tmpRenderable.TemplateHash}.`);\n\t\t\t}\n\n\t\t\tthis.renderables[tmpRenderable.RenderableHash] = tmpRenderable;\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                        Code Section: Initialization                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\tthis.onAfterInitialize();\n\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallback)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallback();\n\t\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Render                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeRender(pRenderable, pRenderDestinationAddress, pData)\n\t{\n\t\t// Overload this to mess with stuff before the content gets generated from the template\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeRenderAsync(pRenderable, pRenderDestinationAddress, pData, fCallback)\n\t{\n\t\tthis.onBeforeRender(pRenderable, pRenderDestinationAddress, pData);\n\t\treturn fCallback();\n\t}\n\n\trender(pRenderable, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it is not a valid renderable.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\tlet tmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\t// Generate the content output from the template and data\n\t\tlet tmpContent = this.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData)\n\n\t\t// Assign the content to the destination address\n\t\tswitch(tmpRenderable.RenderMethod)\n\t\t{\n\t\t\tcase 'append':\n\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'prepend':\n\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'append_once':\n\t\t\t\t// Try to find the content in the destination address\n\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t{\n\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\t}\n\t\t\tcase 'replace':\n\t\t\tdefault:\n\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Execute the developer-overridable post-render behavior\n\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, tmpContent)\n\n\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\treturn true;\n\t}\n\trenderAsync(pRenderable, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`));\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`));\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn fCallback(Error(`Could not render ${tmpRenderableHash}`));\n\t\t}\n\n\t\tlet tmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\tlet tmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\t// Render the template (asynchronously)\n\t\tthis.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData,\n\t\t\t(pError, pContent) =>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render (asynchronously) ${tmpRenderableHash} (param ${pRenderable}) because it did not parse the template.`, pError);\n\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t}\n\n\t\t\t\t// Assign the content to the destination address\n\t\t\t\tswitch(tmpRenderable.RenderMethod)\n\t\t\t\t{\n\t\t\t\t\tcase 'append':\n\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'prepend':\n\t\t\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'append_once':\n\t\t\t\t\t\t// Try to find the content in the destination address\n\t\t\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'replace':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Execute the developer-overridable post-render behavior\n\t\t\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, pContent)\n\n\t\t\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\t\t\treturn fCallback(null, pContent);\n\t\t\t});\n\t}\n\n\tonAfterRender()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterRenderAsync(fCallback)\n\t{\n\t\tthis.onAfterRender();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Solver                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal From View                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalFromView();\n\t\tthis.onMarshalFromView();\n\t\tthis.onAfterMarshalFromView();\n\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalFromViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal To View                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalToView();\n\t\tthis.onMarshalToView();\n\t\tthis.onAfterMarshalToView();\n\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalToViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToView();\n\t\treturn fCallback();\n\t}\n}\n\nmodule.exports = PictView;\n},{\"fable-serviceproviderbase\":43}],92:[function(require,module,exports){\n/**\n* Precedent Meta-Templating\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Process text streams, parsing out meta-template expressions.\n*/\nvar libWordTree = require(`./WordTree.js`);\nvar libStringParser = require(`./StringParser.js`);\n\nclass Precedent\n{\n\t/**\n\t * Precedent Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser();\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData);\n\t}\n}\n\nmodule.exports = Precedent;\n\n},{\"./StringParser.js\":93,\"./WordTree.js\":94}],93:[function(require,module,exports){\n/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t */\n\tparseString (pString, pParseTree, pData)\n\t{\n\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\tfor (var i = 0; i < pString.length; i++)\n\t\t{\n\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData);\n\t\t}\n\n\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\treturn tmpParserState.Output;\n\t}\n}\n\nmodule.exports = StringParser;\n\n},{}],94:[function(require,module,exports){\n/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n\n},{}],95:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],96:[function(require,module,exports){\n(function (global){(function (){\n/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],97:[function(require,module,exports){\n'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n\n},{}],98:[function(require,module,exports){\n'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n},{\"./formats\":97,\"./parse\":99,\"./stringify\":100}],99:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n\n},{\"./utils\":101}],100:[function(require,module,exports){\n'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            strictNullHandling,\n            skipNulls,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n\n},{\"./formats\":97,\"./utils\":101,\"side-channel\":106}],101:[function(require,module,exports){\n'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n\n},{\"./formats\":97}],102:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],103:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],104:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":102,\"./encode\":103}],105:[function(require,module,exports){\n/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n},{\"buffer\":20}],106:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n\n},{\"call-bind/callBound\":25,\"get-intrinsic\":68,\"object-inspect\":87}],107:[function(require,module,exports){\n(function (Buffer){(function (){\n/*! simple-concat. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function (stream, cb) {\n  var chunks = []\n  stream.on('data', function (chunk) {\n    chunks.push(chunk)\n  })\n  stream.once('end', function () {\n    if (cb) cb(null, Buffer.concat(chunks))\n    cb = null\n  })\n  stream.once('error', function (err) {\n    if (cb) cb(err)\n    cb = null\n  })\n}\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":20}],108:[function(require,module,exports){\n(function (Buffer){(function (){\n/*! simple-get. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const originalHost = opts.hostname // hostname before potential redirect\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api\n      // If redirected host is different than original host, drop headers to prevent cookie leak (#73)\n      if (redirectHost !== null && redirectHost !== originalHost) {\n        delete opts.headers.cookie\n        delete opts.headers.authorization\n      }\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":20,\"decompress-response\":18,\"http\":109,\"https\":73,\"once\":88,\"querystring\":104,\"simple-concat\":107,\"url\":130}],109:[function(require,module,exports){\n(function (global){(function (){\nvar ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./lib/request\":111,\"./lib/response\":112,\"builtin-status-codes\":21,\"url\":130,\"xtend\":133}],110:[function(require,module,exports){\n(function (global){(function (){\nexports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],111:[function(require,module,exports){\n(function (process,global,Buffer){(function (){\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"./capability\":110,\"./response\":112,\"_process\":95,\"buffer\":20,\"inherits\":75,\"readable-stream\":127}],112:[function(require,module,exports){\n(function (process,global,Buffer){(function (){\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"./capability\":110,\"_process\":95,\"buffer\":20,\"inherits\":75,\"readable-stream\":127}],113:[function(require,module,exports){\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n\n},{}],114:[function(require,module,exports){\n(function (process){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n}).call(this)}).call(this,require('_process'))\n\n},{\"./_stream_readable\":116,\"./_stream_writable\":118,\"_process\":95,\"inherits\":75}],115:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n},{\"./_stream_transform\":117,\"inherits\":75}],116:[function(require,module,exports){\n(function (process,global){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../errors\":113,\"./_stream_duplex\":114,\"./internal/streams/async_iterator\":119,\"./internal/streams/buffer_list\":120,\"./internal/streams/destroy\":121,\"./internal/streams/from\":123,\"./internal/streams/state\":125,\"./internal/streams/stream\":126,\"_process\":95,\"buffer\":20,\"events\":36,\"inherits\":75,\"string_decoder/\":128,\"util\":18}],117:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}\n},{\"../errors\":113,\"./_stream_duplex\":114,\"inherits\":75}],118:[function(require,module,exports){\n(function (process,global){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../errors\":113,\"./_stream_duplex\":114,\"./internal/streams/destroy\":121,\"./internal/streams/state\":125,\"./internal/streams/stream\":126,\"_process\":95,\"buffer\":20,\"inherits\":75,\"util-deprecate\":131}],119:[function(require,module,exports){\n(function (process){(function (){\n'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;\n}).call(this)}).call(this,require('_process'))\n\n},{\"./end-of-stream\":122,\"_process\":95}],120:[function(require,module,exports){\n'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();\n},{\"buffer\":20,\"util\":18}],121:[function(require,module,exports){\n(function (process){(function (){\n'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":95}],122:[function(require,module,exports){\n// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;\n},{\"../../../errors\":113}],123:[function(require,module,exports){\nmodule.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n\n},{}],124:[function(require,module,exports){\n// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;\n},{\"../../../errors\":113,\"./end-of-stream\":122}],125:[function(require,module,exports){\n'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};\n},{\"../../../errors\":113}],126:[function(require,module,exports){\nmodule.exports = require('events').EventEmitter;\n\n},{\"events\":36}],127:[function(require,module,exports){\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n\n},{\"./lib/_stream_duplex.js\":114,\"./lib/_stream_passthrough.js\":115,\"./lib/_stream_readable.js\":116,\"./lib/_stream_transform.js\":117,\"./lib/_stream_writable.js\":118,\"./lib/internal/streams/end-of-stream.js\":122,\"./lib/internal/streams/pipeline.js\":124}],128:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n},{\"safe-buffer\":105}],129:[function(require,module,exports){\n(function (setImmediate,clearImmediate){(function (){\nvar nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n}).call(this)}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate)\n\n},{\"process/browser.js\":95,\"timers\":129}],130:[function(require,module,exports){\n/*\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nvar punycode = require('punycode');\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n/*\n * define these here so at least they only have to be\n * compiled once on the first module load.\n */\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/,\n\n  /*\n   * RFC 2396: characters reserved for delimiting URLs.\n   * We actually just auto-escape these.\n   */\n  delims = [\n    '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'\n  ],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = [\n    '{', '}', '|', '\\\\', '^', '`'\n  ].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  /*\n   * Characters that are never ever allowed in a hostname.\n   * Note that any invalid chars are also handled, but these\n   * are the ones that are *expected* to be seen, so we fast-path\n   * them.\n   */\n  nonHostChars = [\n    '%', '/', '?', ';', '#'\n  ].concat(autoEscape),\n  hostEndingChars = [\n    '/', '?', '#'\n  ],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    http: true,\n    https: true,\n    ftp: true,\n    gopher: true,\n    file: true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  },\n  querystring = require('qs');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && typeof url === 'object' && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (typeof url !== 'string') {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  /*\n   * Copy chrome, IE, opera backslash-handling behavior.\n   * Back slashes before the query string get converted to forward slashes\n   * See: https://code.google.com/p/chromium/issues/detail?id=25916\n   */\n  var queryIndex = url.indexOf('?'),\n    splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  /*\n   * trim before proceeding.\n   * This is to support parse stuff like \"  http://foo.com  \\n\"\n   */\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  /*\n   * figure out if it's got a host\n   * user@server is *always* interpreted as a hostname, and url\n   * resolution will treat //foo/bar as host=foo,path=bar because that's\n   * how the browser resolves relative URLs.\n   */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@/]+@[^@/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || (proto && !slashedProtocol[proto]))) {\n\n    /*\n     * there's a hostname.\n     * the first instance of /, ?, ;, or # ends the host.\n     *\n     * If there is an @ in the hostname, then non-host chars *are* allowed\n     * to the left of the last @ sign, unless some host-ending character\n     * comes *before* the @-sign.\n     * URLs are obnoxious.\n     *\n     * ex:\n     * http://a@b@c/ => user:a@b host:c\n     * http://a@b?@c => user:a host:c path:/?@c\n     */\n\n    /*\n     * v0.12 TODO(isaacs): This is not quite how Chrome does things.\n     * Review our test case against browsers more comprehensively.\n     */\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n\n    /*\n     * at this point, either we have an explicit point where the\n     * auth portion cannot go past, or the last @ char is the decider.\n     */\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      /*\n       * atSign must be in auth portion.\n       * http://a@b/c@d => host:b auth:a path:/c@d\n       */\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    /*\n     * Now we have a portion which is definitely the auth.\n     * Pull that off.\n     */\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) { hostEnd = rest.length; }\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    /*\n     * we've indicated that there is a hostname,\n     * so even if it's empty, it has to be present.\n     */\n    this.hostname = this.hostname || '';\n\n    /*\n     * if hostname begins with [ and ends with ]\n     * assume that it's an IPv6 address.\n     */\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              /*\n               * we replace non-ASCII char with a temporary placeholder\n               * we need this to make sure size of hostname is not\n               * broken by replacing non-ASCII by nothing\n               */\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      /*\n       * IDNA Support: Returns a punycoded representation of \"domain\".\n       * It only converts parts of the domain name that\n       * have non-ASCII characters, i.e. it doesn't matter if\n       * you call it with a domain that already is ASCII-only.\n       */\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    /*\n     * strip [ and ] from the hostname\n     * the host field still retains them, though\n     */\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  /*\n   * now rest is set to the post-host stuff.\n   * chop off any delim chars.\n   */\n  if (!unsafeProtocol[lowerProto]) {\n\n    /*\n     * First, make 100% sure that any \"autoEscape\" chars get\n     * escaped, even if encodeURIComponent doesn't think they\n     * need to be.\n     */\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) { continue; }\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  /*\n   * ensure it's an object, and not a string url.\n   * If it's an obj, this is a no-op.\n   * this way, you can call url_format() on strings\n   * to clean up potentially wonky urls.\n   */\n  if (typeof obj === 'string') { obj = urlParse(obj); }\n  if (!(obj instanceof Url)) { return Url.prototype.format.call(obj); }\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n    pathname = this.pathname || '',\n    hash = this.hash || '',\n    host = false,\n    query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && typeof this.query === 'object' && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query, {\n      arrayFormat: 'repeat',\n      addQueryPrefix: false\n    });\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') { protocol += ':'; }\n\n  /*\n   * only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n   * unless they had them to begin with.\n   */\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') { pathname = '/' + pathname; }\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') { hash = '#' + hash; }\n  if (search && search.charAt(0) !== '?') { search = '?' + search; }\n\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) { return relative; }\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (typeof relative === 'string') {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  /*\n   * hash is always overridden, no matter what.\n   * even href=\"\" will remove it.\n   */\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') { result[rkey] = relative[rkey]; }\n    }\n\n    // urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.pathname = '/';\n      result.path = result.pathname;\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    /*\n     * if it's a known url protocol, then changing\n     * the protocol does weird things\n     * first, if it's not file:, then we MUST have a host,\n     * and if there was a path\n     * to begin with, then we MUST have a path.\n     * if it is file:, then the host is dropped,\n     * because that's known to be hostless.\n     * anything else is assumed to be absolute.\n     */\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift())) { }\n      if (!relative.host) { relative.host = ''; }\n      if (!relative.hostname) { relative.hostname = ''; }\n      if (relPath[0] !== '') { relPath.unshift(''); }\n      if (relPath.length < 2) { relPath.unshift(''); }\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n    isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n    mustEndAbs = isRelAbs || isSourceAbs || (result.host && relative.pathname),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    relPath = relative.pathname && relative.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  /*\n   * if the url is a non-slashed url, then relative\n   * links like ../.. should be able\n   * to crawl up to the hostname, as well.  This is strange.\n   * result.protocol has already been set by now.\n   * Later on, put the first path part into the host field.\n   */\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') { srcPath[0] = result.host; } else { srcPath.unshift(result.host); }\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') { relPath[0] = relative.host; } else { relPath.unshift(relative.host); }\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    /*\n     * it's relative\n     * throw away the existing file, and take the new path instead.\n     */\n    if (!srcPath) { srcPath = []; }\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search != null) {\n    /*\n     * just pull out the search.\n     * like href='?foo'.\n     * Put this after the other two cases because it simplifies the booleans\n     */\n    if (psychotic) {\n      result.host = srcPath.shift();\n      result.hostname = result.host;\n      /*\n       * occationaly the auth can get stuck only in host\n       * this especially happens in cases like\n       * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n       */\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.hostname = authInHost.shift();\n        result.host = result.hostname;\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    // to support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    /*\n     * no path at all.  easy.\n     * we've already handled the other stuff above.\n     */\n    result.pathname = null;\n    // to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  /*\n   * if a url ENDs in . or .., then it must get a trailing slash.\n   * however, if it ends in anything else non-slashy,\n   * then it must NOT get a trailing slash.\n   */\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === '';\n\n  /*\n   * strip single dots, resolve double dots to parent dir\n   * if the path tries to go above the root, `up` ends up > 0\n   */\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    result.host = result.hostname;\n    /*\n     * occationaly the auth can get stuck only in host\n     * this especially happens in cases like\n     * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n     */\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.hostname = authInHost.shift();\n      result.host = result.hostname;\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (srcPath.length > 0) {\n    result.pathname = srcPath.join('/');\n  } else {\n    result.pathname = null;\n    result.path = null;\n  }\n\n  // to support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\n},{\"punycode\":96,\"qs\":98}],131:[function(require,module,exports){\n(function (global){(function (){\n\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],132:[function(require,module,exports){\n// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n\n},{}],133:[function(require,module,exports){\nmodule.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n},{}],134:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst defaultConfiguration = (\n\t{\n\t\t// This is the address for the <script /> tag that contains the CSS.\n\t\tCSSElementAddress: '#PICT-CSS'\n\t}\n)\n\nclass PictCSS extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\t// No merging of options necessary\n\t\tif (typeof(this.options.CSSElementAddress) === 'undefined')\n\t\t{\n\t\t\tthis.options.CSSElementAddress = defaultConfiguration.CSSElementAddress;\n\t\t}\n\n\t\tthis.inlineCSSMap = {};\n\t}\n\n\t// Add a CSS fragment to the CSS map (each view can have its own CSS fragment)\n\t// Hash is shared across all views, so if 10 views all load the \"My-Table-View\" fragment, it will only be loaded once.\n\taddCSS(pHash, pContent, pPriority, pProvider)\n\t{\n\t\tlet tmpPriority = (typeof(pPriority) !== 'undefined') ? pPriority : 1000;\n\t\tlet tmpProvidor = (typeof(pProvider) === 'string') ? pProvider : 'Unknown';\n\t\tthis.inlineCSSMap[pHash] = { Hash: pHash, Content: pContent, Provider: tmpProvidor, Priority:tmpPriority };\n\t}\n\n\tremoveCSS(pHash)\n\t{\n\t\tdelete this.inlineCSSMap[pHash];\n\t}\n\n\tgenerateCSS()\n\t{\n\t\tlet tmpCSS = '';\n\t\tlet tmpCSSHashes = Object.keys(this.inlineCSSMap);\n\t\t// Sort the hashes by Priority\n\t\ttmpCSSHashes.sort((a, b) => { return this.inlineCSSMap[a].Priority - this.inlineCSSMap[b].Priority; });\n\t\tfor (let i = 0; i < tmpCSSHashes.length; i++)\n\t\t{\n\t\t\tlet tmpCSSFragment = this.inlineCSSMap[tmpCSSHashes[i]];\n\t\t\tlet tmpCSSComment = tmpCSSFragment.Hash;\n\t\t\tif (tmpCSSFragment.Hash != tmpCSSFragment.Provider)\n\t\t\t{\n\t\t\t\ttmpCSSComment = `${tmpCSSComment} from ${tmpCSSFragment.Provider}`;\n\t\t\t}\n\t\t\ttmpCSS += `/* ${tmpCSSComment} */\\n${tmpCSSFragment.Content}\\n`;\n\t\t}\n\t\treturn tmpCSS;\n\t}\n\n\t// Inject the CSS into the magic DOM element for it\n\tinjectCSS()\n\t{\n\t\tthis.services.ContentAssignment.assignContent(this.options.CSSElementAddress, this.generateCSS());\n\t}\n}\n\nmodule.exports = PictCSS;\n},{\"fable\":49}],135:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictContentAssignment extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictContentAssignment';\n\n\t\t// Check to see if we are running in a browser\n\t\tthis.inBrowser = false;\n\t\tthis.hasDocument = false;\n\t\tif (typeof (window) == 'object')\n\t\t{\n\t\t\tthis.inBrowser = true;\n\t\t\t// Now check that the browser has a document object\n\t\t\tif ((typeof (window.document) != 'undefined') && (typeof (window.document.querySelectorAll) == 'function'))\n\t\t\t{\n\t\t\t\tthis.hasDocument = true;\n\t\t\t}\n\t\t}\n\n\t\t// If we're in a browser, check to see if jQuery is available.\n\t\tthis.hasJquery = false;\n\t\tthis.jQuery = false;\n\t\tif (this.inBrowser && typeof (window.jQuery) !== 'undefined')\n\t\t{\n\t\t\tthis.hasJquery = true;\n\t\t}\n\n\t\t// API Consumers can craft their own assign function\n\t\tthis.customAssignFunction = false;\n\t\t// API Consumers can also craft their own prepend function\n\t\tthis.customPrependFunction = false;\n\t\t// API Consumers can also craft their own append function\n\t\tthis.customAppendFunction = false;\n\n\t\t// API Consumers can also craft their own read function\n\t\tthis.customReadFunction = false;\n\t\t// API Consumers can even craft their own get element function.\n\t\tthis.customGetElementFunction = false;\n\n\n\t}\n\n\tgetElement(pAddress)\n\t{\n\t\tif (this.customGetElementFunction)\n\t\t{\n\t\t\treturn this.customGetElementFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpElements = window.jQuery(pAddress);\n\t\t\tif (tmpElements.length == 0)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// TODO: This isn't the most efficient method, but it is the most compatible.\n\t\t\t\tlet tmpElementSet = [];\n\t\t\t\tfor (let i = 0; i < tmpElements.length; i++)\n\t\t\t\t{\n\t\t\t\t\ttmpElementSet.push(tmpElements[0]);\n\t\t\t\t}\n\t\t\t\treturn tmpElementSet;\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\treturn window.document.querySelectorAll(pAddress);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content GET ELEMENT for [${pAddress}] will return empty because none of the browser methods are available`);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tassignContent(pAddress, pContent)\n\t{\n\t\tif (this.customAssignFunction)\n\t\t{\n\t\t\treturn this.customAssignFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\n\t\t\t// Should we ensure we matched 1 and exactly 1 element?\n\t\t\t//if (tmpTargetElement && tmpTargetElement.length == 1)\n\t\t\t//{\n\t\t\t// Set the content\n\t\t\ttmpTargetElement.html(pContent);\n\t\t\t//}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'BUTTON':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\tcase 'A':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content ASSIGN to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tappendContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customAppendFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.append(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"beforeend\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content APPEND to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tprependContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customPrependFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.prepend(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"afterbegin\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content PREPEND in [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\treadContent(pAddress)\n\t{\n\t\tif (this.customReadFunction)\n\t\t{\n\t\t\treturn this.customReadFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\treturn tmpTargetElement.html();\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tif (tmpTargetElementSet.length < 1)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse if (tmpTargetElementSet.length == 1)\n\t\t\t{\n\t\t\t\tif ((tmpTargetElementSet[0].tagName == 'INPUT') || (tmpTargetElementSet[0].tagName == 'TEXTAREA'))\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].value;\n\t\t\t\t}\n\t\t\t\telse if (tmpTargetElementSet[0].tagName == 'SCRIPT')\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].text;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].innerHTML;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content READ from [${pAddress}]...`);\n\t\t\treturn '';\n\t\t}\n\t}\n\n\n\taddClass(pAddress, pClass)\n\t{\n\t\tif (this.customAddClassFunction)\n\t\t{\n\t\t\treturn this.customAddClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.addClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.add(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content ADDCLASS to [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\tremoveClass(pAddress, pClass)\n\t{\n\t\tif (this.customRemoveClassFunction)\n\t\t{\n\t\t\treturn this.customRemoveClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.remove(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVECLASS from [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\ttoggleClass(pAddress, pClass)\n\t{\n\t\t// STUB\n\t}\n\n\thasClass(pAddress, pClass)\n\t{\n\t\t// STUB\n\t}\n\n}\n\nmodule.exports = PictContentAssignment;\n},{\"fable\":49}],136:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictDataProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictDataProvider';\n\t}\n\n    getDataByAddress(pAddress, pData)\n    {\n        let tmpData = (typeof(pData) === 'undefined') ? {} : pData;\n\n        return this.fable.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, pAddress);\n    }\n}\n\nmodule.exports = PictDataProvider;\n},{\"fable\":49}],137:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictMeadowEntityProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictMeadowProvider';\n\n\t\tif (this.fable.settings.PictDefaultURLPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = this.fable.settings.PictDefaultURLPrefix;\n\t\t}\n\t\telse if (!this.options.urlPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = '/1.0/';\n\t\t}\n\n\t\tif (this.fable.settings.PictDefaultDownloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = this.fable.settings.PictDefaultDownloadBatchSize;\n\t\t}\n\t\telse if (!this.options.downloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = 100;\n\t\t}\n\n\t\tthis.restClient = this.fable.instantiateServiceProviderWithoutRegistration('RestClient');\n\n\t\tthis.cache = {};\n\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tinitializeCache(pEntity)\n\t{\n\t\t// This should not be happening as often as it's happening.\n\t\tif (!this.cache.hasOwnProperty(pEntity))\n\t\t{\n\t\t\tthis.cache[pEntity] = this.fable.instantiateServiceProviderWithoutRegistration('ObjectCache');\n\t\t\t// TODO: Make this a configuration?\n\t\t\t// For now cache for 30 seconds.\n\t\t\tthis.cache[pEntity].maxAge = 30000;\n\t\t\tthis.cache[pEntity].maxLength = 10000;\n\n\t\t\tthis.fable.Bundle[pEntity] = this.cache[pEntity].RecordMap;\n\t\t}\n\t}\n\n\tgetEntity (pEntity, pIDRecord, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tlet tmpPossibleRecord = this.cache[pEntity].read(pIDRecord);\n\n\t\t\t\tif (tmpPossibleRecord)\n\t\t\t\t{\n\t\t\t\t\treturn tmpPossibleRecord;\n\t\t\t\t}\n\n\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}/${pIDRecord}`\n\t\t\t\t\t});\n\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pBody)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.cache[pEntity].put(pBody, pIDRecord);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pBody);\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tgetEntitySet = function (pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// TODO: Should we test for too many record IDs here by string length?\n\t\t// FBL~ID${pDestinationEntity}~INN~${tmpIDRecordsCommaSeparated}\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tlet tmpCountOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}s/Count/FilteredTo/${pMeadowFilterExpression}`\n\t\t\t\t\t});\n\t\t\t\ttmpCountOptions = this.prepareRequestOptions(tmpCountOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpCountOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Error getting bulk entity count of [${pEntity}] filtered to [${pMeadowFilterExpression}] from server [${tmpCountOptions.url}]: ${pError}`);\n\t\t\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet tmpRecordCount = 0;\n\t\t\t\t\t\tif (pBody.Count)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpRecordCount = pBody.Count;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpDownloadURIFragments = [];\n\t\t\t\t\t\tlet tmpDownloadBatchSize = this.options.downloadBatchSize;\n\t\t\t\t\t\tfor (let i = 0; i < (tmpRecordCount / tmpDownloadBatchSize); i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Generate each of the URI fragments to download\n\t\t\t\t\t\t\ttmpDownloadURIFragments.push(`${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${i*tmpDownloadBatchSize}/${tmpDownloadBatchSize}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpEntitySet = [];\n\t\t\t\t\t\t// Now run these in series (it's possible to parallelize but no reason to)\n\t\t\t\t\t\tthis.fable.Utility.eachLimit(tmpDownloadURIFragments, 1,\n\t\t\t\t\t\t\t(pURIFragment, fDownloadCallback)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\turl: `${this.options.urlPrefix}${pURIFragment}`\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\t\t\t\t\tthis.restClient.getJSON(pURIFragment,\n\t\t\t\t\t\t\t\t\t(pDownloadError, pDownloadResponse, pDownloadBody)=>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmpEntitySet = tmpEntitySet.concat(pDownloadBody);\n\t\t\t\t\t\t\t\t\t\t// Should we be caching each record?\n\t\t\t\t\t\t\t\t\t\treturn fDownloadCallback(pDownloadError);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(pFullDownloadError)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(pFullDownloadError, tmpEntitySet);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t});\n\t}\n}\n\nmodule.exports = PictMeadowEntityProvider;\n},{\"fable\":49}],138:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictTemplateProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictTemplateProvider';\n\n        this.templates = {};\n        this.templateSources = {};\n\n        // Default templates are stored by prefix.\n        // The longest prefix match is used.\n        // Case sensitive.\n        this.defaultTemplates = [];\n\n        // This function can be overloaded to load templates from a database, in a page or other source.\n        this.loadTemplateFunction = (pTemplateHash) => { return false; };\n\t}\n\n    addTemplate(pTemplateHash, pTemplate, pTemplateSource)\n    {\n        this.templates[pTemplateHash] = pTemplate;\n\n        if (typeof(pTemplateSource) == 'string')\n        {\n            this.templateSources[pTemplateHash] = pTemplateSource;\n        }\n        else\n        {\n            this.templateSources[pTemplateHash] = `Direct addTemplate('${pTemplateHash}') function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`;\n        }\n    }\n\n    addDefaultTemplate(pPrefix, pPostfix, pTemplate, pSource)\n    {\n        let tmpSource = (typeof(pSource) == 'string') ? pSource : `Direct addDefaultTemplate('${pPrefix}','${pPostfix}',..) function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`\n        let tmpDefaultTemplate = {\n            prefix: pPrefix,\n            postfix: pPostfix,\n            template: pTemplate,\n            source: tmpSource\n        };\n        if (typeof(pTemplate) != 'string')\n        {\n            this.log.error('PictTemplateProvider.addDefaultTemplate: pTemplate is not a string.');\n        }\n        this.defaultTemplates.push(tmpDefaultTemplate);\n    }\n\n    checkDefaultTemplateHash(pTemplateHash)\n    {\n        /*\n         * Default templates are managed by postfix and prefix.  The use case is things like titles, headers, list \n         * wrappers, rows, etc.\n         *\n         * So we might have a default template for a list wrapper and it should expect \"-ListWrap\" as the postfix.\n         * And we might have a default template for a list row and it should expect \"-ListRow\" as the postfix.\n         * The list might have a \"-ListTitle\", or we might have shared titles and it would just be \"-Title\".\n         * \n         * The idea is to allow fallbacks on defaults.\n         */\n        for (let i = 0; i < this.defaultTemplates.length; i++)\n        {\n            if ((pTemplateHash.indexOf(this.defaultTemplates[i].postfix) == pTemplateHash.length - this.defaultTemplates[i].postfix.length)\n                && (pTemplateHash.indexOf(this.defaultTemplates[i].prefix) == 0))\n            {\n                this.templates[pTemplateHash] = this.defaultTemplates[i].template;\n                this.templateSources[pTemplateHash] = `Auto created in checkDefaultTemplateHash('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${this.defaultTemplates[i].prefix}]...[${this.defaultTemplates[i].postfix}]`;\n                return this.templates[pTemplateHash];\n            }\n        }\n        return false;\n    }\n\n    getTemplate(pTemplateHash)\n    {\n        // TODO: Optimize this.\n        // If the template doesn't exist, try to load it with the loading function\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.loadTemplate(pTemplateHash);\n        }\n        // If the loading function fails, try to load it from the default templates\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.checkDefaultTemplateHash(pTemplateHash);\n        }\n        if (this.templates.hasOwnProperty(pTemplateHash))\n        {\n            return this.templates[pTemplateHash];\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    loadTemplate(pTemplateHash)\n    {\n        let tmpTemplate = this.loadTemplateFunction(pTemplateHash);\n\n        if (tmpTemplate)\n        {\n            this.templates[pTemplateHash] = tmpTemplate.template;\n            this.templateSources[pTemplateHash] = `Loaded in loadTemplate('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${tmpTemplate.source}]`;\n\n        }\n\n        return tmpTemplate;\n    }\n}\n\nmodule.exports = PictTemplateProvider;\n},{\"fable\":49}],139:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nconst libFable = require('fable');\n\nclass Pict extends libFable\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\tthis.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n\n\t\t// The templateProvider provides a basic key->template mapping with default fallback capabilities\n\t\tthis.addAndInstantiateServiceType('TemplateProvider', require('./Pict-Template-Provider.js'));\n\t\tthis.addAndInstantiateServiceType('EntityProvider',  require('./Pict-Meadow-EntityProvider.js'));\n\t\tthis.addAndInstantiateServiceType('DataProvider',  require('./Pict-DataProvider.js'));\n\t\tthis.addAndInstantiateServiceType('ContentAssignment',  require('./Pict-Content-Assignment.js'));\n\t\tthis.addAndInstantiateServiceType('CSSMap', require('./Pict-CSS.js'));\n\n\t\tthis.instantiateServiceProvider('MetaTemplate');\n\t\tthis.instantiateServiceProvider('DataGeneration');\n\n\t\tthis.manifest = this.instantiateServiceProvider('Manifest');\n\n\t\tthis.AppData = {};\n\t\tthis.Bundle = {};\n\n\t\t// Log noisness goes from 0 - 5, where 5 is show me everything.\n\t\tthis.LogNoisiness = 0;\n\n\t\t// Load manifest sets\n\t\tif (this.settings.Manifests)\n\t\t{\n\t\t\tthis.loadManifestSet(this.settings.Manifests);\n\t\t}\n\n\t\tthis._DefaultPictTemplatesInitialized = false;\n\t\tthis.initializePictTemplateEngine();\n\n\t\tthis.addServiceType('PictView',  require('pict-view'));\n\t\tthis.addServiceType('PictApplication',  require('pict-application'));\n\n\t\t// Expose the named views directly, through a convenience accessor\n\t\tthis.views = this.servicesMap.PictView;\n\t}\n\n\t// Load manifests in as Hashed services\n\tloadManifestSet (pManifestSet)\n\t{\n\t\tif (typeof(pManifestSet) != 'object')\n\t\t{\n\t\t\tthis.log.warn(`PICT [${this.UUID}] could not load Manifest Set; pManifestSet was not an object.`);\n\t\t\treturn false;\n\t\t}\n\t\tlet tmpManifestKeys = Object.keys(pManifestSet);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++ )\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.instantiateServiceProvider('Manifest', pManifestSet[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddView(pViewHash, pOptions, pViewPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpViewHash = (typeof(pViewHash) == 'string') ? pViewHash : this.fable.getUUID();\n\n\t\tif (typeof(pViewPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pViewPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pViewPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictView', tmpOptions, tmpViewHash, pViewPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictView', tmpOptions, tmpViewHash);\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddApplication(pApplicationHash, pOptions, pApplicationPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpApplicationHash = (typeof(pApplicationHash) == 'string') ? pApplicationHash : this.fable.getUUID();\n\n\t\tif (typeof(pApplicationPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pApplicationPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pApplicationPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictApplication', tmpOptions, tmpApplicationHash, pApplicationPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictApplication', tmpOptions, tmpApplicationHash);\n\t\t}\n\t}\n\n\tinitializePictTemplateEngine()\n\t{\n\t\t/*\n\t\t *\n\t\t * To stave off madness, these are inefficient for now.  The wkhtmltopdf renderer leaves much to be desired\n\t\t * in the way of feedback with regards to javascript compatibility.\n\t\t *\n\t\t */\n\t\tif (!this._DefaultPictTemplatesInitialized)\n\t\t{\n\t\t\t// Expects one of the following:\n\t\t\t// \t\t{~Entity:Book:1~}\n\t\t\t//          ...meaning GET BOOK 1\n\t\t\t// \t\t{~Entity:Book:AppData.Some.Address.IDBook~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook\n\t\t\t// \t\t{~E:Book:AppData.Some.Address.IDBook:Render-Book-Template~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook and render it to Render-Book-Template\n\t\t\tlet fEntityRender = (pHash, pData, fCallback) =>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpEntity = false;\n\t\t\t\t\tlet tmpEntityID = false;\n\t\t\t\t\tlet tmpEntityTemplate = false;\n\n\t\t\t\t\t// This expression requires 2 parts -- a third is optional, and, if present, is the template to render to.\n\t\t\t\t\tlet tmpHashSeparator = tmpHash.indexOf('|');\n\n\t\t\t\t\tif (tmpHashSeparator < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\t\tlet tmpHashEntitySeparator = tmpHash.indexOf(':');\n\t\t\t\t\t\ttmpEntity = tmpHash.substring(0, tmpHashEntitySeparator);\n\t\t\t\t\t\ttmpEntityID = tmpHash.substring(tmpHashEntitySeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is a 3 part hash (the entity, the ID, and the template)\n\t\t\t\t\t\tlet tmpHashEntitySeparator = tmpHash.indexOf(':');\n\t\t\t\t\t\ttmpEntity = tmpHash.substring(0, tmpHashEntitySeparator);\n\n\t\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf('|');\n\t\t\t\t\t\ttmpEntityID = tmpHash.substring(tmpHashEntitySeparator + 1, tmpHashTemplateSeparator);\n\n\t\t\t\t\t\ttmpEntityTemplate = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isNaN(tmpEntityID))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpEntityID = parseInt(tmpEntityID);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is an address, so we need to get the value at the address\n\t\t\t\t\t\ttmpEntityID = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpEntityID);\n\t\t\t\t\t}\n\n\t\t\t\t\t// No Entity or EntityID\n\t\t\t\t\tif (!tmpEntity || !tmpEntityID)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to get the entity\n\t\t\t\t\tthis.EntityProvider.getEntity(tmpEntity, tmpEntityID,\n\t\t\t\t\t\t(pError, pRecord) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Pict: Entity Render: Error getting entity [${tmpEntity}] with ID [${tmpEntityID}] for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\t\t\treturn fCallback(pError, '');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Now render the template\n\t\t\t\t\t\t\tif (tmpEntityTemplate)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(null, this.parseTemplateByHash(tmpEntityTemplate, pRecord));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternAsync('{~E:', '~}', fEntityRender);\n\t\t\tthis.MetaTemplate.addPatternAsync('{~Entity:', '~}', fEntityRender);\n\n\t\t\t// {NE~Some.Address|If the left value is truthy, render this value.~}\n\t\t\tlet fNotEmptyRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Should switch this to indexOf so pipes can be in the content.\n\t\t\t\t\tlet tmpHashParts = tmpHash.split('|');\n\n\t\t\t\t\t// For now just check truthiness\n\t\t\t\t\tif (this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHashParts[0]))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpHashParts[1];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~NotEmpty:', '~}', fNotEmptyRender);\n\t\t\tthis.MetaTemplate.addPattern('{~NE:', '~}', fNotEmptyRender);\n\n\t\t\t// {~T:Template:AddressOfData~}\n\t\t\tlet fTemplateRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~T:', '~}', fTemplateRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Template:', '~}', fTemplateRender);\n\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~TS:', '~}', fTemplateSetRender);\n\t\t\tthis.MetaTemplate.addPattern('{~TemplateSet:', '~}', fTemplateSetRender);\n\n\t\t\t//{~Data:AppData.Some.Value.to.Render~}\n\t\t\tlet fDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn tmpValue;\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~D:', '~}', fDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Data:', '~}', fDataRender);\n\n\t\t\tthis.MetaTemplate.addPattern('{~Dollars:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterDollars(tmpColumnData);\n\t\t\t\t});\n\t\t\tthis.MetaTemplate.addPattern('{~Digits:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterAddCommasToNumber(this.DataFormat.formatterRoundNumber(tmpColumnData, 2));\n\t\t\t\t});\n\n\t\t\tlet fRandomNumberString = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumberString]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpStringLength = 4;\n\t\t\t\t\tlet tmpMaxNumber = 9999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpStringLength = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomNumericString(tmpStringLength, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumberString:', '~}',fRandomNumberString);\n\t\t\tthis.MetaTemplate.addPattern('{~RNS:', '~}',fRandomNumberString);\n\n\t\t\tlet fRandomNumber = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumber]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpMinimumNumber = 0;\n\t\t\t\t\tlet tmpMaxNumber = 9999999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMinimumNumber = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomIntegerBetween(tmpMinimumNumber, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumber:', '~}',fRandomNumber);\n\t\t\tthis.MetaTemplate.addPattern('{~RN:', '~}',fRandomNumber);\n\n\t\t\tlet fPascalCaseIdentifier = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn this.DataFormat.cleanNonAlphaCharacters(this.DataFormat.capitalizeEachWord(tmpValue));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~PascalCaseIdentifier:', '~}',fPascalCaseIdentifier);\n\n\t\t\tlet fLogValue = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tlet tmpValueType = typeof(tmpValue);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValueType == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is ${tmpValueType}.`);\n\t\t\t\t\t}\n\t\t\t\t\telse if (tmpValueType == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is an obect.`, tmpValue);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] if a ${tmpValueType} = [${tmpValue}]`);\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogValue:', '~}',fLogValue);\n\t\t\tthis.MetaTemplate.addPattern('{~LV:', '~}',fLogValue);\n\n\n\t\t\tlet fLogStatement = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tthis.log.trace(`PICT Template Log Message: ${tmpHash}`);\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogStatement:', '~}',fLogStatement);\n\t\t\tthis.MetaTemplate.addPattern('{~LS:', '~}',fLogStatement);\n\n\t\t\tlet fBreakpoint = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpError = new Error(`PICT Template Breakpoint: ${tmpHash}`);\n\t\t\t\t\tthis.log.trace(`PICT Template Breakpoint: ${tmpHash}`, tmpError.stack);\n\t\t\t\t\tdebugger;\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~Breakpoint', '~}',fBreakpoint);\n\n\t\t\tthis._DefaultPictTemplatesInitialized = true;\n\t\t}\n\t}\n\n\tparseTemplate (pTemplateString, pData, fCallback)\n\t{\n\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\treturn this.MetaTemplate.parseString(pTemplateString, tmpData, fCallback);\n\t}\n\n\tparseTemplateByHash (pTemplateHash, pData, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn this.parseTemplate(tmpTemplateString, pData, fCallback);\n\t}\n\n\tparseTemplateSet (pTemplateString, pDataSet, fCallback)\n\t{\n\t\t// TODO: This will need streaming -- for now janky old string append does the trick\n\t\tlet tmpValue = '';\n\t\tif (typeof(fCallback) == 'function')\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tthis.Utility.eachLimit(pDataSet, 1,\n\t\t\t\t\t(pRecord, fRecordTemplateCallback)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplate(pTemplateString, pRecord,\n\t\t\t\t\t\t\t(pError, pTemplateResult)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValue += pTemplateResult;\n\t\t\t\t\t\t\t\treturn fRecordTemplateCallback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t(pError)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fCallback(pError, tmpValue);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn fCallback(Error('Pict: Template Set: pDataSet is not an array or object.'), '');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tif (Array.isArray(pDataSet))\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < pDataSet.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpKeys = Object.keys(pDataSet);\n\t\t\t\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[tmpKeys[i]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpValue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\tparseTemplateSetByHash (pTemplateHash, pDataSet, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn this.parseTemplateSet(tmpTemplateString, pDataSet, fCallback);\n\t}\n};\n\nmodule.exports = Pict;\n\nmodule.exports.PictApplicationClass = require('pict-application');\nmodule.exports.PictViewClass = require('pict-view');\n\nmodule.exports.EnvironmentLog = require('./environments/Pict-Environment-Log.js');\n\n// This is to help understand the type of enivironement we're executing in\nmodule.exports.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n},{\"./Pict-CSS.js\":134,\"./Pict-Content-Assignment.js\":135,\"./Pict-DataProvider.js\":136,\"./Pict-Meadow-EntityProvider.js\":137,\"./Pict-Template-Provider.js\":138,\"./environments/Pict-Environment-Log.js\":140,\"fable\":49,\"pict-application\":90,\"pict-view\":91}],140:[function(require,module,exports){\n/**\n* Pict browser shim loader\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\n\nclass PictEnvironmentLog\n{\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\t}\n\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\tcustomGetElementFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\tcustomReadFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\tcustomAppendFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\tcustomPrependFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomAssignFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Assign.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n}\n\nmodule.exports = PictEnvironmentLog;\n},{}]},{},[139])(139)\n});\n\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\nvar eachOfLimit = require('async.util.eachoflimit');\nvar withoutIndex = require('async.util.withoutindex');\n\nmodule.exports = function eachLimit(arr, limit, iterator, cb) {\n    return eachOfLimit(limit)(arr, withoutIndex(iterator), cb);\n};\n","'use strict';\n\nmodule.exports = function(tasks) {\n    function makeCallback(index) {\n        function fn() {\n            if (tasks.length) {\n                tasks[index].apply(null, arguments);\n            }\n            return fn.next();\n        }\n        fn.next = function() {\n            return (index < tasks.length - 1) ? makeCallback(index + 1) : null;\n        };\n        return fn;\n    }\n    return makeCallback(0);\n};\n","var once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar onlyOnce = require('async.util.onlyonce');\nvar keyIterator = require('async.util.keyiterator');\n\nmodule.exports = function eachOfLimit(limit) {\n    return function(obj, iterator, cb) {\n        cb = once(cb || noop);\n        obj = obj || [];\n        var nextKey = keyIterator(obj);\n        if (limit <= 0) {\n            return cb(null);\n        }\n        var done = false;\n        var running = 0;\n        var errored = false;\n\n        (function replenish() {\n            if (done && running <= 0) {\n                return cb(null);\n            }\n\n            while (running < limit && !errored) {\n                var key = nextKey();\n                if (key === null) {\n                    done = true;\n                    if (running <= 0) {\n                        cb(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iterator(obj[key], key, onlyOnce(function(err) {\n                    running -= 1;\n                    if (err) {\n                        cb(err);\n                        errored = true;\n                    } else {\n                        replenish();\n                    }\n                }));\n            }\n        })();\n    };\n};\n","'use strict';\nvar setImmediate = require('async.util.setimmediate');\nvar restParam = require('async.util.restparam');\n\nmodule.exports = function(fn) {\n    return restParam(function(args) {\n        var callback = args.pop();\n        args.push(function() {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate(function() {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        var sync = true;\n        fn.apply(this, args);\n        sync = false;\n    });\n};\n","'use strict';\n\nmodule.exports = Array.isArray || function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n","'use strict';\n\nvar isArray = require('async.util.isarray');\n\nmodule.exports = function isArrayLike(arr) {\n    return isArray(arr) || (\n        // has a positive integer length property\n        typeof arr.length === 'number' &&\n        arr.length >= 0 &&\n        arr.length % 1 === 0\n    );\n};\n","'use strict';\n\nvar _keys = require('async.util.keys');\nvar isArrayLike = require('async.util.isarraylike');\n\nmodule.exports = function keyIterator(coll) {\n    var i = -1;\n    var len;\n    var keys;\n    if (isArrayLike(coll)) {\n        len = coll.length;\n        return function next() {\n            i++;\n            return i < len ? i : null;\n        };\n    } else {\n        keys = _keys(coll);\n        len = keys.length;\n        return function next() {\n            i++;\n            return i < len ? keys[i] : null;\n        };\n    }\n};\n","'use strict';\n\nmodule.exports = Object.keys || function keys(obj) {\n    var _keys = [];\n    for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            _keys.push(k);\n        }\n    }\n    return _keys;\n};\n","'use strict';\n\nmodule.exports = function noop () {};\n","'use strict';\n\nmodule.exports = function once(fn) {\n    return function() {\n        if (fn === null) return;\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n","'use strict';\n\nmodule.exports = function only_once(fn) {\n    return function() {\n        if (fn === null) throw new Error('Callback was already called.');\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n","'use strict';\nmodule.exports = function restParam(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n        var length = Math.max(arguments.length - startIndex, 0);\n        var rest = new Array(length);\n        for (var index = 0; index < length; index++) {\n            rest[index] = arguments[index + startIndex];\n        }\n        switch (startIndex) {\n            case 0:\n                return func.call(this, rest);\n            case 1:\n                return func.call(this, arguments[0], rest);\n        }\n    };\n};\n","'use strict';\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\nvar fallback = function(fn) {\n    setTimeout(fn, 0);\n};\n\nmodule.exports = function setImmediate(fn) {\n    // not a direct alias for IE10 compatibility\n    return (_setImmediate || fallback)(fn);\n};\n","'use strict';\n\nmodule.exports = function withoutIndex(iterator) {\n    return function(value, index, callback) {\n        return iterator(value, callback);\n    };\n};\n","'use strict';\n\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar isArray = require('async.util.isarray');\nvar restParam = require('async.util.restparam');\nvar ensureAsync = require('async.util.ensureasync');\nvar iterator = require('async.iterator');\n\nmodule.exports = function(tasks, cb) {\n    cb = once(cb || noop);\n    if (!isArray(tasks)) return cb(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return cb();\n\n    function wrapIterator(iterator) {\n        return restParam(function(err, args) {\n            if (err) {\n                cb.apply(null, [err].concat(args));\n            } else {\n                var next = iterator.next();\n                if (next) {\n                    args.push(wrapIterator(next));\n                } else {\n                    args.push(cb);\n                }\n                ensureAsync(iterator).apply(null, args);\n            }\n        });\n    }\n    wrapIterator(iterator(tasks))();\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*\r\n *  big.js v6.2.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2022 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,            // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n    /*\r\n     * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n     * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n     * primitive number without a loss of precision.\r\n     */\r\n    STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        if (typeof n !== 'string') {\r\n          if (Big.strict === true && typeof n !== 'bigint') {\r\n            throw TypeError(INVALID + 'value');\r\n          }\r\n\r\n          // Minus zero?\r\n          n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n        }\r\n\r\n        parse(x, n);\r\n      }\r\n\r\n      // Retain a reference to this Big constructor.\r\n      // Shadow Big.prototype.constructor which points to Object.\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.strict = STRICT;\r\n    Big.roundDown = 0;\r\n    Big.roundHalfUp = 1;\r\n    Big.roundHalfEven = 2;\r\n    Big.roundUp = 3;\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    if (!NUMERIC.test(n)) {\r\n      throw Error(INVALID + 'number');\r\n    }\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n   * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, sd, rm, more) {\r\n    var xc = x.c;\r\n\r\n    if (rm === UNDEFINED) rm = x.constructor.RM;\r\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    if (sd < 1) {\r\n      more =\r\n        rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n        rm === 1 && xc[0] >= 5 ||\r\n        rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n      );\r\n\r\n      xc.length = 1;\r\n\r\n      if (more) {\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        x.e = x.e - sd + 1;\r\n        xc[0] = 1;\r\n      } else {\r\n\r\n        // Zero.\r\n        xc[0] = x.e = 0;\r\n      }\r\n    } else if (sd < xc.length) {\r\n\r\n      // xc[sd] is the digit after the digit that may be rounded up.\r\n      more =\r\n        rm === 1 && xc[sd] >= 5 ||\r\n        rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n          (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n        rm === 3 && (more || !!xc[0]);\r\n\r\n      // Remove any digits after the required precision.\r\n      xc.length = sd;\r\n\r\n      // Round up?\r\n      if (more) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up.\r\n        for (; ++xc[--sd] > 9;) {\r\n          xc[sd] = 0;\r\n          if (sd === 0) {\r\n            ++x.e;\r\n            xc.unshift(1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (sd = xc.length; !xc[--sd];) xc.pop();\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   */\r\n  function stringify(x, doExponential, isNonzero) {\r\n    var e = x.e,\r\n      s = x.c.join(''),\r\n      n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (doExponential) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) {\r\n        for (e -= n; e--;) s += '0';\r\n      } else if (e < n) {\r\n        s = s.slice(0, e) + '.' + s.slice(e);\r\n      }\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && isNonzero ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n   */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) {\r\n      y.s = k;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n    q.s = k;\r\n    k = p < 0 ? 0 : p;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n      p--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (yc[0]) {\r\n        y.s = -b;\r\n      } else if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = 1;\r\n      }\r\n      return y;\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n  \r\n  \r\n  /*\r\n   * Return a new Big whose value is the value of this Big negated.\r\n   */\r\n  P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var e, k, t,\r\n      x = this,\r\n      Big = x.constructor;\r\n\r\n    y = new Big(y);\r\n\r\n    // Signs differ?\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (!yc[0]) {\r\n        if (xc[0]) {\r\n          y = new Big(x);\r\n        } else {\r\n          y.s = x.s;\r\n        }\r\n      }\r\n      return y;\r\n    }\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (e = xe - ye) {\r\n      if (e > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        e = -e;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; e--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    e = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (k) {\r\n      xc.unshift(k);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor('1'),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n      throw Error(INVALID + 'exponent');\r\n    }\r\n\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n   * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.prec = function (sd, rm) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    return round(new this.constructor(this), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n   * using rounding mode rm, or Big.RM if rm is not specified.\r\n   * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.round = function (dp, rm) {\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    return round(new this.constructor(this), dp + this.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big('0.5');\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) {\r\n      throw Error(NAME + 'No square root');\r\n    }\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s + '');\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) {\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = b;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), ++dp, rm);\r\n      for (; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, true, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n      // x.e may have changed if the value is rounded up.\r\n      for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, false, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toJSON = P.toString = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Big as a primitve number.\r\n   */\r\n  P.toNumber = function () {\r\n    var n = Number(stringify(this, true, true));\r\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n      throw Error(NAME + 'Imprecise conversion');\r\n    }\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * rounding mode rm, or Big.RM if rm is not specified.\r\n   * Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      n = x.c[0];\r\n\r\n    if (sd !== UNDEFINED) {\r\n      if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n        throw Error(INVALID + 'precision');\r\n      }\r\n      x = round(new Big(x), sd, rm);\r\n      for (; x.c.length < sd;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    if (Big.strict === true) {\r\n      throw Error(NAME + 'valueOf disallowed');\r\n    }\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","/**\n* Cache data structure with:\n*  - enumerable items\n*  - unique hash item access (if none is passed in, one is generated)\n*  - size (length) expiration\n*  - controllable expiration (e.g. keep in cache longer if older/less likely to change)\n*  - time-based expiration\n*  - custom expiration based on passed-in function\n*\n* Also:\n*  - built to work well with browserify\n*  - no dependencies at all\n*  - pet friendly\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nconst libLinkedList = require(`./LinkedList.js`);\n\nclass CashMoney extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'ObjectCache';\n\n\t\t// The map of node objects by hash because Reasons.\n\t\tthis._HashMap = {};\n\n\t\tthis._RecordMap = {};\n\n\t\tthis._List = new libLinkedList();\n\n\t\t// If the list gets over maxLength, we will automatically remove nodes on insertion.\n\t\tthis.maxLength = 0;\n\n\t\t// If cache entries get over this age, they are removed with prune\n\t\tthis.maxAge = 0;\n\t}\n\n\tget RecordMap()\n\t{\n\t\treturn this._RecordMap;\n\t}\n\n\t// Add (or update) a node in the cache\n\tput(pData, pHash)\n\t{\n\t\t// If the hash of the record exists\n\t\tif (this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\t// Just update the hashed records datum\n\t\t\tthis._HashMap[pHash].Datum = pData;\n\t\t\tthis._RecordMap[pHash] = pData;\n\t\t\treturn this._HashMap[pHash].Datum;\n\t\t}\n\n\t\tlet tmpNode = this._List.push(pData, pHash);\n\t\tthis._HashMap[tmpNode.Hash] = tmpNode;\n\t\tthis._RecordMap[pHash] = pData;\n\n\t\t// Automatically prune if over length, but only prune this nodes worth.\n\t\tif (this.maxLength > 0   &&   this._List.length > this.maxLength)\n\t\t{\n\t\t\t// Pop it off the head of the list\n\t\t\ttmpNode = this._List.pop();\n\t\t\t// Also remove it from the hashmap\n\t\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\t\tdelete this._HashMap[tmpNode.Hash];\n\t\t}\n\n\t\t// Now some expiration properties on the node metadata... namely the birthdate in ms of the node\n\t\ttmpNode.Metadata.Created = +new Date();\n\n\t\treturn tmpNode.Datum;\n\t}\n\n\t// Read a datum by hash from the cache\n\tread(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._HashMap[pHash].Datum;\n\t}\n\n\t// Reinvigorate a node based on hash, updating the timestamp and moving it to the head of the list (also removes custom metadata)\n\ttouch(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get the old node out of the list\n\t\tlet tmpNode = this._List.remove(this._HashMap[pHash]);\n\t\t// Remove it from the hash map\n\t\tdelete this._RecordMap[pHash];\n\t\tdelete this._HashMap[pHash];\n\n\t\t// Now put it back, fresh.\n\t\treturn this.put(tmpNode.Datum, tmpNode.Hash);\n\t}\n\n\t// Expire a cached record based on hash\n\texpire(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpNode = this._HashMap[pHash];\n\n\t\t// Remove it from the list of cached records\n\t\ttmpNode = this._List.remove(tmpNode);\n\t\t// Also remove it from the hashmap\n\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\tdelete this._HashMap[tmpNode.Hash];\n\n\t\t// Return it in case the consumer wants to do anything with it\n\t\treturn tmpNode;\n\t}\n\n\t// Prune records from the cached set based on maxAge\n\tpruneBasedOnExpiration(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tif (this.maxAge < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now enumerate each record and remove any that are expired\n\t\tlet tmpNow = +new Date();\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\t// Expire the node if it is older than max age milliseconds\n\t\t\tif (tmpNow - this._HashMap[tmpKeys[i]].Metadata.Created >= this.maxAge)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on maxLength\n\tpruneBasedOnLength(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\t// Pop records off until we have reached maxLength unless it's 0\n\t\tif (this.maxLength > 0)\n\t\t{\n\t\t\twhile (this._List.length > this.maxLength)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this._List.pop());\n\t\t\t}\n\t\t}\n\n\t\treturn fComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on passed in pPruneFunction(pDatum, pHash, pNode) -- returning true expires it\n\tpruneCustom(fComplete, fPruneFunction, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\tlet tmpNode = this._HashMap[tmpKeys[i]];\n\t\t\t// Expire the node if the passed in function returns true\n\t\t\tif (fPruneFunction(tmpNode.Datum, tmpNode.Hash, tmpNode))\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune the list down to the asserted rules (max age then max length if still too long)\n\tprune(fComplete)\n\t{\n\t\tlet tmpRemovedRecords = [];\n\n\t\t// If there are no cached records, we are done.\n\t\tif (this._List.length < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now prune based on expiration time\n\t\tthis.pruneBasedOnExpiration((fExpirationPruneComplete)=>\n\t\t\t{\n\t\t\t\t// Now prune based on length, then return the removed records in the callback.\n\t\t\t\tthis.pruneBasedOnLength(fComplete, tmpRemovedRecords);\n\t\t\t}, tmpRemovedRecords);\n\t}\n\n\t// Get a low level node (including metadata statistics) by hash from the cache\n\tgetNode(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\n\t\treturn this._HashMap[pHash];\n\t}\n}\n\nmodule.exports = CashMoney;","/**\n* Double Linked List Node\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Linked List Node Prototype\n*\n* @class LinkedListNode\n* @constructor\n*/\n\nclass LinkedListNode\n{\n\tconstructor()\n\t{\n\t\tthis.Hash = false;\n\t\tthis.Datum = false;\n\n\t\t// This is where expiration and other elements are stored;\n\t\tthis.Metadata = {};\n\n\t\tthis.LeftNode = false;\n\t\tthis.RightNode = false;\n\n\t\t// To allow safe specialty operations on nodes\n\t\tthis.__ISNODE = true;\n\t}\n}\n\nmodule.exports = LinkedListNode;","\"use strict\"\n/**\n* Simple double linked list to hold the cache entries in, in order.\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module FeeFiFo\n*/\n\nconst libLinkedListNode = require('./LinkedList-Node.js');\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nclass LinkedList\n{\n\tconstructor()\n\t{\n\t\t// Total number of nodes ever processed by this ADT\n\t\tthis.totalNodes = 0;\n\n\t\t// The length of the set of nodes currently in the list\n\t\tthis.length = 0;\n\n\t\tthis.head = false;\n\t\tthis.tail = false;\n\t}\n\n\t// Create a node object.\n\tinitializeNode(pDatum, pHash)\n\t{\n\t\t// Don't allow undefined to be added to the list because of reasons\n\t\tif (typeof(pDatum) === 'undefined')\n\t\t\treturn false;\n\n\t\tthis.totalNodes++;\n\n\t\t// Get (or create) a unique hash\n\t\tlet tmpHash = (typeof(pHash) != 'undefined') ? pHash : `NODE[${this.totalNodes}]`;\n\n\t\tlet tmpNode = new libLinkedListNode();\n\n\t\ttmpNode.Hash = tmpHash;\n\t\ttmpNode.Datum = pDatum;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Add a node to the end (right of tail) of the list.\n\tappend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.tail.RightNode = tmpNode;\n\t\ttmpNode.LeftNode = this.tail;\n\t\tthis.tail = tmpNode;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Append to tail of list (FIFO)\n\tpush(pDatum, pHash)\n\t{\n\t\treturn this.append(pDatum, pHash);\n\t}\n\n\t// Add a node to the beginning (left of head) of the list.\n\tprepend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.head.LeftNode = tmpNode;\n\t\ttmpNode.RightNode = this.head;\n\t\tthis.head = tmpNode;\n\t\treturn tmpNode;\n\t}\n\n\t// Remove a node from the list\n\tremove(pNode)\n\t{\n\t\tif (typeof(pNode) === 'undefined')\n\t\t\treturn false;\n\n\t\tif (!pNode.__ISNODE)\n\t\t\treturn false;\n\n\t\tthis.length--;\n\n\t\t// Last element in list.  Empty it out.\n\t\tif (this.length < 1)\n\t\t{\n\t\t\tthis.head = false;\n\t\t\tthis.tail = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's somewhere in the middle, surgically remove it.\n\t\tif (pNode.LeftNode && pNode.RightNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = pNode.RightNode;\n\t\t\tpNode.RightNode.LeftNode = pNode.LeftNode;\n\n\t\t\tpNode.RightNode = false;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's the tail\n\t\tif (pNode.LeftNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = false;\n\t\t\tthis.tail = pNode.LeftNode;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It must be the head\n\t\tpNode.RightNode.LeftNode = false;\n\t\tthis.head = pNode.RightNode;\n\t\tpNode.RightNode = false;\n\t\treturn pNode;\n\t}\n\n\t// Remove the head of the list (FIFO)\n\tpop()\n\t{\n\t\treturn this.remove(this.head);\n\t}\n\n\t// Enumerate over each node IN ORDER, running the function fAction(pDatum, pHash, fCallback) then calling the function fComplete callback when done\n\teach(fAction, fComplete)\n\t{\n\t\tif (this.length < 1)\n\t\t\treturn fComplete();\n\n\t\tlet tmpNode = false;\n\n\t\tlet fIterator = (pError)=>\n\t\t{\n\t\t\t// If the user passed in a callback with an error, call their callback with the error\n\t\t\tif (pError)\n\t\t\t\treturn fComplete(pError);\n\n\t\t\t// If there is no node, this must be the initial run.\n\t\t\tif (!tmpNode)\n\t\t\t\ttmpNode = this.head;\n\t\t\t// Check if we are at the tail of the list\n\t\t\telse if (!tmpNode.RightNode)\n\t\t\t\treturn fComplete();\n\t\t\t// Proceed to the next node\n\t\t\telse\n\t\t\t\ttmpNode = tmpNode.RightNode;\n\n\t\t\t// Call the actual action\n\t\t\t// I hate this pattern because long tails eventually cause stack overflows.\n\t\t\tfAction(tmpNode.Datum, tmpNode.Hash, fIterator);\n\t\t};\n\n\t\t// Now kick off the iterator\n\t\treturn fIterator();\n\t}\n\n\t// Seek a specific node, 0 is the index of the first node.\n\tseek(pNodeIndex)\n\t{\n\t\tif (!pNodeIndex)\n\t\t\treturn false;\n\t\tif (this.length < 1)\n\t\t\treturn false;\n\t\tif (pNodeIndex >= this.length)\n\t\t\treturn false;\n\n\t\tlet tmpNode = this.head;\n\t\tfor (let i = 0; i < pNodeIndex; i++)\n\t\t{\n\t\t\ttmpNode = tmpNode.RightNode;\n\t\t}\n\n\t\treturn tmpNode;\n\t}\n}\n\nmodule.exports = LinkedList;","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_advancedFormat=t()}(this,(function(){\"use strict\";return function(e,t){var r=t.prototype,n=r.format;r.format=function(e){var t=this,r=this.$locale();if(!this.isValid())return n.bind(this)(e);var s=this.$utils(),a=(e||\"YYYY-MM-DDTHH:mm:ssZ\").replace(/\\[([^\\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g,(function(e){switch(e){case\"Q\":return Math.ceil((t.$M+1)/3);case\"Do\":return r.ordinal(t.$D);case\"gggg\":return t.weekYear();case\"GGGG\":return t.isoWeekYear();case\"wo\":return r.ordinal(t.week(),\"W\");case\"w\":case\"ww\":return s.s(t.week(),\"w\"===e?1:2,\"0\");case\"W\":case\"WW\":return s.s(t.isoWeek(),\"W\"===e?1:2,\"0\");case\"k\":case\"kk\":return s.s(String(0===t.$H?24:t.$H),\"k\"===e?1:2,\"0\");case\"X\":return Math.floor(t.$d.getTime()/1e3);case\"x\":return t.$d.getTime();case\"z\":return\"[\"+t.offsetName()+\"]\";case\"zzz\":return\"[\"+t.offsetName(\"long\")+\"]\";default:return e}}));return n.bind(this)(a)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isoWeek=t()}(this,(function(){\"use strict\";var e=\"day\";return function(t,i,s){var a=function(t){return t.add(4-t.isoWeekday(),e)},d=i.prototype;d.isoWeekYear=function(){return a(this).year()},d.isoWeek=function(t){if(!this.$utils().u(t))return this.add(7*(t-this.isoWeek()),e);var i,d,n,o,r=a(this),u=(i=this.isoWeekYear(),d=this.$u,n=(d?s.utc:s)().year(i).startOf(\"year\"),o=4-n.isoWeekday(),n.isoWeekday()>4&&(o+=7),n.add(o,e));return r.diff(u,\"week\")+1},d.isoWeekday=function(e){return this.$utils().u(e)?this.day()||7:this.day(this.day()%7?e:e-7)};var n=d.startOf;d.startOf=function(e,t){var i=this.$utils(),s=!!i.u(t)||t;return\"isoweek\"===i.p(e)?s?this.date(this.date()-(this.isoWeekday()-1)).startOf(\"day\"):this.date(this.date()-1-(this.isoWeekday()-1)+7).endOf(\"day\"):n.bind(this)(e,t)}}}));","!function(r,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(r=\"undefined\"!=typeof globalThis?globalThis:r||self).dayjs_plugin_relativeTime=e()}(this,(function(){\"use strict\";return function(r,e,t){r=r||{};var n=e.prototype,o={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"};function i(r,e,t,o){return n.fromToBase(r,e,t,o)}t.en.relativeTime=o,n.fromToBase=function(e,n,i,d,u){for(var f,a,s,l=i.$locale().relativeTime||o,h=r.thresholds||[{l:\"s\",r:44,d:\"second\"},{l:\"m\",r:89},{l:\"mm\",r:44,d:\"minute\"},{l:\"h\",r:89},{l:\"hh\",r:21,d:\"hour\"},{l:\"d\",r:35},{l:\"dd\",r:25,d:\"day\"},{l:\"M\",r:45},{l:\"MM\",r:10,d:\"month\"},{l:\"y\",r:17},{l:\"yy\",d:\"year\"}],m=h.length,c=0;c<m;c+=1){var y=h[c];y.d&&(f=d?t(e).diff(i,y.d,!0):i.diff(e,y.d,!0));var p=(r.rounding||Math.round)(Math.abs(f));if(s=f>0,p<=y.r||!y.r){p<=1&&c>0&&(y=h[c-1]);var v=l[y.l];u&&(p=u(\"\"+p)),a=\"string\"==typeof v?v.replace(\"%d\",p):v(p,n,y.l,s);break}}if(n)return a;var M=s?l.future:l.past;return\"function\"==typeof M?M(a):M.replace(\"%s\",a)},n.to=function(r,e){return i(r,e,this,!0)},n.from=function(r,e){return i(r,e,this)};var d=function(r){return r.$u?t.utc():t()};n.toNow=function(r){return this.to(d(this),r)},n.fromNow=function(r){return this.from(d(this),r)}}}));","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_timezone=e()}(this,(function(){\"use strict\";var t={year:0,month:1,day:2,hour:3,minute:4,second:5},e={};return function(n,i,o){var r,a=function(t,n,i){void 0===i&&(i={});var o=new Date(t),r=function(t,n){void 0===n&&(n={});var i=n.timeZoneName||\"short\",o=t+\"|\"+i,r=e[o];return r||(r=new Intl.DateTimeFormat(\"en-US\",{hour12:!1,timeZone:t,year:\"numeric\",month:\"2-digit\",day:\"2-digit\",hour:\"2-digit\",minute:\"2-digit\",second:\"2-digit\",timeZoneName:i}),e[o]=r),r}(n,i);return r.formatToParts(o)},u=function(e,n){for(var i=a(e,n),r=[],u=0;u<i.length;u+=1){var f=i[u],s=f.type,m=f.value,c=t[s];c>=0&&(r[c]=parseInt(m,10))}var d=r[3],l=24===d?0:d,h=r[0]+\"-\"+r[1]+\"-\"+r[2]+\" \"+l+\":\"+r[4]+\":\"+r[5]+\":000\",v=+e;return(o.utc(h).valueOf()-(v-=v%1e3))/6e4},f=i.prototype;f.tz=function(t,e){void 0===t&&(t=r);var n=this.utcOffset(),i=this.toDate(),a=i.toLocaleString(\"en-US\",{timeZone:t}),u=Math.round((i-new Date(a))/1e3/60),f=o(a,{locale:this.$L}).$set(\"millisecond\",this.$ms).utcOffset(15*-Math.round(i.getTimezoneOffset()/15)-u,!0);if(e){var s=f.utcOffset();f=f.add(n-s,\"minute\")}return f.$x.$timezone=t,f},f.offsetName=function(t){var e=this.$x.$timezone||o.tz.guess(),n=a(this.valueOf(),e,{timeZoneName:t}).find((function(t){return\"timezonename\"===t.type.toLowerCase()}));return n&&n.value};var s=f.startOf;f.startOf=function(t,e){if(!this.$x||!this.$x.$timezone)return s.call(this,t,e);var n=o(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\"),{locale:this.$L});return s.call(n,t,e).tz(this.$x.$timezone,!0)},o.tz=function(t,e,n){var i=n&&e,a=n||e||r,f=u(+o(),a);if(\"string\"!=typeof t)return o(t).tz(a);var s=function(t,e,n){var i=t-60*e*1e3,o=u(i,n);if(e===o)return[i,e];var r=u(i-=60*(o-e)*1e3,n);return o===r?[i,o]:[t-60*Math.min(o,r)*1e3,Math.max(o,r)]}(o.utc(t,i).valueOf(),f,a),m=s[0],c=s[1],d=o(m).utcOffset(c);return d.$x.$timezone=a,d},o.tz.guess=function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},o.tz.setDefault=function(t){r=t}}}));","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_utc=i()}(this,(function(){\"use strict\";var t=\"minute\",i=/[+-]\\d\\d(?::?\\d\\d)?/g,e=/([+-]|\\d\\d)/g;return function(s,f,n){var u=f.prototype;n.utc=function(t){var i={date:t,utc:!0,args:arguments};return new f(i)},u.utc=function(i){var e=n(this.toDate(),{locale:this.$L,utc:!0});return i?e.add(this.utcOffset(),t):e},u.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var o=u.parse;u.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),o.call(this,t)};var r=u.init;u.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else r.call(this)};var a=u.utcOffset;u.utcOffset=function(s,f){var n=this.$utils().u;if(n(s))return this.$u?0:n(this.$offset)?a.call(this):this.$offset;if(\"string\"==typeof s&&(s=function(t){void 0===t&&(t=\"\");var s=t.match(i);if(!s)return null;var f=(\"\"+s[0]).match(e)||[\"-\",0,0],n=f[0],u=60*+f[1]+ +f[2];return 0===u?0:\"+\"===n?u:-u}(s),null===s))return this;var u=Math.abs(s)<=16?60*s:s,o=this;if(f)return o.$offset=u,o.$u=0===s,o;if(0!==s){var r=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(o=this.local().add(u+r,t)).$offset=u,o.$x.$localOffset=r}else o=this.utc();return o};var h=u.format;u.format=function(t){var i=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return h.call(this,i)},u.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*t},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var l=u.toDate;u.toDate=function(t){return\"s\"===t&&this.$offset?n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate():l.call(this)};var c=u.diff;u.diff=function(t,i,e){if(t&&this.$u===t.$u)return c.call(this,t,i,e);var s=this.local(),f=n(t).local();return c.call(s,f,i,e)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekOfYear=t()}(this,(function(){\"use strict\";var e=\"week\",t=\"year\";return function(i,n,r){var f=n.prototype;f.week=function(i){if(void 0===i&&(i=null),null!==i)return this.add(7*(i-this.week()),\"day\");var n=this.$locale().yearStart||1;if(11===this.month()&&this.date()>25){var f=r(this).startOf(t).add(1,t).date(n),s=r(this).endOf(e);if(f.isBefore(s))return 1}var a=r(this).startOf(t).date(n).startOf(e).subtract(1,\"millisecond\"),o=this.diff(a,e,!0);return o<0?r(this).startOf(\"week\").week():Math.ceil(o)},f.weeks=function(e){return void 0===e&&(e=null),this.week(e)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekday=t()}(this,(function(){\"use strict\";return function(e,t){t.prototype.weekday=function(e){var t=this.$locale().weekStart||0,i=this.$W,n=(i<t?i+7:i)-t;return this.$utils().u(e)?n:this.subtract(n,\"day\").add(e,\"day\")}}}));","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/**\n* Base Logger Class\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass BaseLogger extends libFableServiceProviderBase\n{\n\tconstructor(pLogStreamSettings, pLogStreamHash)\n\t{\n\t\tsuper(pLogStreamSettings, pLogStreamHash);\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = (typeof(pLogStreamSettings) == 'object') ? pLogStreamSettings : {};\n\n\t\tthis.serviceType = 'Logging-Provider';\n\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\t// We added this as the mechanism for tracking loggers to allow multiple simultaneous streams\n\t\t// to the same provider.\n\t\tthis.loggerUUID = this.generateInsecureUUID();\n\n\t\t// Eventually we can use this array to ompute which levels the provider allows.\n\t\t// For now it's just used to precompute some string concatenations.\n\t\tthis.levels = (\n\t\t\t[\n\t\t\t\t\"trace\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"info\",\n\t\t\t\t\"warn\",\n\t\t\t\t\"error\",\n\t\t\t\t\"fatal\"\n\t\t\t]);\n\t}\n\n\t// This is meant to generate programmatically insecure UUIDs to identify loggers\n\tgenerateInsecureUUID()\n\t{\n\t\tlet tmpDate = new Date().getTime();\n\t\tlet tmpUUID = 'LOGSTREAM-xxxxxx-yxxxxx'.replace(/[xy]/g,\n\t\t\t\t(pCharacter) =>\n\t\t\t\t{\n\t\t\t\t\t// Funny algorithm from w3resource that is twister-ish without the deep math and security\n\t\t\t\t\t// ..but good enough for unique log stream identifiers\n\t\t\t\t\tlet tmpRandomData = (tmpDate + Math.random()*16)%16 | 0;\n\t\t\t\t\ttmpDate = Math.floor(tmpDate/16);\n\n\t\t\t\t\treturn (pCharacter =='x' ? tmpRandomData : (tmpRandomData&0x3|0x8)).toString(16);\n\t\t\t\t});\n\t\treturn tmpUUID;\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n","/**\n* Default Logger Provider Function\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\nvar getDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\ttmpDefaultProviders.default = tmpDefaultProviders.console;\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();","module.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]","let libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings);\n\n\t\tthis._ShowTimeStamps = this._Settings.hasOwnProperty('showtimestamps') ? (this._Settings.showtimestamps == true) : true;\n\t\tthis._FormattedTimeStamps = this._Settings.hasOwnProperty('formattedtimestamps') ? (this._Settings.formattedtimestamps == true) : true;\n\n\t\tthis._ContextMessage = this._Settings.hasOwnProperty('Context') ? `(${this._Settings.Context})` :\n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? `(${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'Unnamed_Log_Context';\n\n\t\t// Allow the user to decide what gets output to the console\n\t\tthis._OutputLogLinesToConsole = this._Settings.hasOwnProperty('outputloglinestoconsole') ? this._Settings.outputloglinestoconsole : true;\n\t\tthis._OutputObjectsToConsole = this._Settings.hasOwnProperty('outputobjectstoconsole') ? this._Settings.outputobjectstoconsole : true;\n\n\t\t// Precompute the prefix for each level\n\t\tthis.prefixCache = {};\n\t\tfor (let i = 0; i <= this.levels.length; i++)\n\t\t{\n\t\t\tthis.prefixCache[this.levels[i]] = `[${this.levels[i]}] ${this._ContextMessage}: `;\n\n\t\t\tif (this._ShowTimeStamps)\n\t\t\t{\n\t\t\t\t// If there is a timestamp we need a to prepend space before the prefixcache string, since the timestamp comes first\n\t\t\t\tthis.prefixCache[this.levels[i]] = ' '+this.prefixCache[this.levels[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpTimeStamp = '';\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = (new Date()).toISOString();\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = +new Date();\n\t\t}\n\n\t\tlet tmpLogLine = `${tmpTimeStamp}${this.prefixCache[pLevel]}${pLogText}`;\n\n\t\tif (this._OutputLogLinesToConsole)\n\t\t{\n\t\t\tconsole.log(tmpLogLine);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (this._OutputObjectsToConsole && (typeof(pObject) !== 'undefined'))\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 2));\n\t\t}\n\n\t\t// Provide an easy way to be overridden and be consistent\n\t\treturn tmpLogLine;\n\t}\n}\n\nmodule.exports = ConsoleLogger;","const libConsoleLog = require('./Fable-Log-Logger-Console.js');\nconst libFS = require('fs');\nconst libPath = require('path');\n\nclass SimpleFlatFileLogger extends libConsoleLog\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings, pFableLog);\n\n\t\t// If a path isn't provided for the logfile, it tries to use the ProductName or Context\n\t\tthis.logFileRawPath = (this._Settings.hasOwnProperty('path')) ? this._Settings.path : `./${this._ContextMessage}.log`;\n\t\tthis.logFilePath = libPath.normalize(this.logFileRawPath);\n\n\t\tthis.logFileStreamOptions = (this._Settings.hasOwnProperty('fileStreamoptions')) ? this._Settings.fileStreamOptions : (\n\t\t\t{\n\t\t\t\t\"flags\": \"a\",\n\t\t\t\t\"encoding\": \"utf8\"\n\t\t\t})\n\n\t\tthis.fileWriter = libFS.createWriteStream(this.logFilePath, this.logFileStreamOptions);\n\n\t\tthis.activelyWriting = false;\n\n\t\tthis.logLineStrings = [];\n\t\tthis.logObjectStrings = [];\n\n\t\tthis.defaultWriteCompleteCallback = ()=>{};\n\t\tthis.defaultBufferFlushCallback = ()=>{};\n\t}\n\n\tcloseWriter(fCloseComplete)\n\t{\n\t\tlet tmpCloseComplete = (typeof(fCloseComplete) == 'function') ? fCloseComplete : ()=>{};\n\t\tif (this.fileWriter)\n\t\t{\n\t\t\tthis.fileWriter.end('\\n');\n\t\t\treturn this.fileWriter.once('finish', tmpCloseComplete.bind(this));\n\t\t}\n\t}\n\n\tcompleteBufferFlushToLogFile(fFlushComplete)\n\t{\n\t\tthis.activelyWriting = false;\n\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\tif (this.logLineStrings.length > 0)\n\t\t{\n\t\t\tthis.flushBufferToLogFile(tmpFlushComplete);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpFlushComplete();\n\t\t}\n\t}\n\n\tflushBufferToLogFile(fFlushComplete)\n\t{\n\t\tif (!this.activelyWriting)\n\t\t{\n\t\t\t// Only want to be writing one thing at a time....\n\t\t\tthis.activelyWriting = true;\n\n\t\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\t\t// Get the current buffer arrays.  These should always have matching number of elements.\n\t\t\tlet tmpLineStrings = this.logLineStrings;\n\t\t\tlet tmpObjectStrings = this.logObjectStrings;\n\n\t\t\t// Reset these to be filled while we process this queue...\n\t\t\tthis.logLineStrings = [];\n\t\t\tthis.logObjectStrings = [];\n\n\t\t\t// This is where we will put each line before writing it to the file...\n\t\t\tlet tmpConstructedBufferOutputString = '';\n\n\t\t\tfor (let i = 0; i < tmpLineStrings.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: Windows Newline?   ....... yo no se!\n\t\t\t\ttmpConstructedBufferOutputString += `${tmpLineStrings[i]}\\n`;\n\t\t\t\tif (tmpObjectStrings[i] !== false)\n\t\t\t\t{\n\t\t\t\t\ttmpConstructedBufferOutputString += `${tmpObjectStrings[i]}\\n`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.fileWriter.write(tmpConstructedBufferOutputString, 'utf8'))\n\t\t\t{\n\t\t\t\t// If the streamwriter returns false, we need to wait for it to drain.\n\t\t\t\tthis.fileWriter.once('drain', this.completeBufferFlushToLogFile.bind(this, tmpFlushComplete));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.completeBufferFlushToLogFile(tmpFlushComplete);\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpLogLine = super.write(pLevel, pLogText, pObject);\n\n\t\t// Use a very simple array as the write buffer\n\t\tthis.logLineStrings.push(tmpLogLine);\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tthis.logObjectStrings.push(JSON.stringify(pObject, null, 4));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logObjectStrings.push(false);\n\t\t}\n\n\t\tthis.flushBufferToLogFile();\n\t}\n}\n\nmodule.exports = SimpleFlatFileLogger;","/**\n* Fable Logging Service\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass FableLog extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'Logging';\n\n\t\tlet tmpSettings = (typeof(pSettings) === 'object') ? pSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders-Node.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'default',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\nmodule.exports = FableLog;\nmodule.exports.LogProviderBase = require('./Fable-Log-BaseLogger.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-Console.js');\nmodule.exports.LogProviderFlatfile = require('./Fable-Log-Logger-SimpleFlatFile.js');\n","/**\n* Fable Service Base\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\t// The constructor can be used in two ways:\n\t// 1) With a fable, options object and service hash (the options object and service hash are optional)\n\t// 2) With an object or nothing as the first parameter, where it will be treated as the options object\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Check if a fable was passed in; connect it if so\n\t\tif ((typeof(pFable) === 'object') && pFable.isFable)\n\t\t{\n\t\t\tthis.connectFable(pFable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.fable = false;\n\t\t}\n\n\t\t// initialize options and UUID based on whether the fable was passed in or not.\n\t\tif (this.fable)\n\t\t{\n\t\t\tthis.UUID = pFable.getUUID();\n\t\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t\t: {};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// With no fable, check to see if there was an object passed into either of the first two\n\t\t\t// Parameters, and if so, treat it as the options object\n\t\t\tthis.options = ((typeof(pFable) === 'object') && !pFable.isFable) ? pFable\n\t\t\t\t\t\t\t: (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t\t: {};\n\t\t\tthis.UUID = `CORE-SVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`\n\t\t}\n\n\t\t// It's expected that the deriving class will set this\n\t\tthis.serviceType = `Unknown-${this.UUID}`;\n\n\t\t// The service hash is used to identify the specific instantiation of the service in the services map\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash \n\t\t\t\t\t: (!this.fable && (typeof(pOptions) === 'string')) ? pOptions\n\t\t\t\t\t: `${this.UUID}`;\n\t}\n\n\tconnectFable(pFable)\n\t{\n\t\tif ((typeof(pFable) !== 'object') || (!pFable.isFable))\n\t\t{\n\t\t\tlet tmpErrorMessage = `Fable Service Provider Base: Cannot connect to Fable, invalid Fable object passed in.  The pFable parameter was a [${typeof(pFable)}].}`;\n\t\t\tconsole.log(tmpErrorMessage);\n\t\t\treturn new Error(tmpErrorMessage);\n\t\t}\n\n\t\tif (!this.fable)\n\t\t{\n\t\t\tthis.fable = pFable;\n\t\t}\n\n\t\tif (!this.log)\n\t\t{\n\t\t\tthis.log = this.fable.Logging;\n\t\t}\n\t\tif (!this.services)\n\t\t{\n\t\t\tthis.services = this.fable.services;\n\t\t}\n\n\t\tif (!this.servicesMap)\n\t\t{\n\t\t\tthis.servicesMap = this.fable.servicesMap;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tstatic isFableService = true;\n}\n\nmodule.exports = FableServiceProviderBase;\n\n// This is left here in case we want to go back to having different code/base class for \"core\" services\nmodule.exports.CoreServiceProviderBase = FableServiceProviderBase;","module.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n","/**\n* Fable Settings Template Processor\n*\n* This class allows environment variables to come in via templated expressions, and defaults to be set.\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\nconst libPrecedent = require('precedent');\n\nclass FableSettingsTemplateProcessor\n{\n\tconstructor(pDependencies)\n\t{\n        // Use a no-dependencies templating engine to parse out environment variables\n\t\tthis.templateProcessor = new libPrecedent();\n\n        // TODO: Make the environment variable wrap expression demarcation characters configurable?\n\t\tthis.templateProcessor.addPattern('${', '}',\n\t\t\t(pTemplateValue)=>\n\t\t\t{\n\t\t\t\tlet tmpTemplateValue = pTemplateValue.trim();\n\n\t\t\t\tlet tmpSeparatorIndex = tmpTemplateValue.indexOf('|');\n\n\t\t\t\tconst tmpDefaultValue = tmpSeparatorIndex >= 0 ? tmpTemplateValue.substring(tmpSeparatorIndex+1) : '';\n\n\t\t\t\tlet tmpEnvironmentVariableName = (tmpSeparatorIndex > -1) ? tmpTemplateValue.substring(0, tmpSeparatorIndex) : tmpTemplateValue;\n\n\t\t\t\tif (process.env.hasOwnProperty(tmpEnvironmentVariableName))\n\t\t\t\t{\n\t\t\t\t\treturn process.env[tmpEnvironmentVariableName];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpDefaultValue;\n\t\t\t\t}\n\t\t\t});\n    }\n\n    parseSetting(pString)\n    {\n        return this.templateProcessor.parseString(pString);\n    }\n}\n\nmodule.exports = FableSettingsTemplateProcessor;\n","/**\n* Fable Settings Add-on\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nconst libFableSettingsTemplateProcessor = require('./Fable-Settings-TemplateProcessor.js');\n\nclass FableSettings extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'SettingsManager';\n\n\t\t// Initialize the settings value template processor\n\t\tthis.settingsTemplateProcessor = new libFableSettingsTemplateProcessor();\n\n\t\t// set straight away so anything that uses it respects the initial setting\n\t\tthis._configureEnvTemplating(pSettings);\n\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')));\n\t}\n\n\t// Update the configuration for environment variable templating based on the current settings object\n\t_configureEnvTemplating(pSettings)\n\t{\n\t\t// default environment variable templating to on\n\t\tthis._PerformEnvTemplating = !pSettings || pSettings.NoEnvReplacement !== true;\n\t}\n\n\t// Resolve (recursive) any environment variables found in settings object.\n\t_resolveEnv(pSettings)\n\t{\n\t\tfor (const tmpKey in pSettings)\n\t\t{\n\t\t\tif (typeof(pSettings[tmpKey]) === 'object')\n\t\t\t{\n\t\t\t\tthis._resolveEnv(pSettings[tmpKey]);\n\t\t\t}\n\t\t\telse if (typeof(pSettings[tmpKey]) === 'string')\n\t\t\t{\n\t\t\t\tpSettings[tmpKey] = this.settingsTemplateProcessor.parseSetting(pSettings[tmpKey]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if a value is an object (but not an array).\n\t */\n\t_isObject(value)\n\t{\n\t\treturn typeof(value) === 'object' && !Array.isArray(value);\n\t}\n\n\t/**\n\t * Merge two plain objects. Keys that are objects in both will be merged property-wise.\n\t */\n\t_deepMergeObjects(toObject, fromObject)\n\t{\n\t\tif (!fromObject || !this._isObject(fromObject))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.keys(fromObject).forEach((key) =>\n\t\t{\n\t\t\tconst fromValue = fromObject[key];\n\t\t\tif (this._isObject(fromValue))\n\t\t\t{\n\t\t\t\tconst toValue = toObject[key];\n\t\t\t\tif (toValue && this._isObject(toValue))\n\t\t\t\t{\n\t\t\t\t\t// both are objects, so do a recursive merge\n\t\t\t\t\tthis._deepMergeObjects(toValue, fromValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoObject[key] = fromValue;\n\t\t});\n\t\treturn toObject;\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\t\ttmpSettingsTo = this._deepMergeObjects(tmpSettingsTo, tmpSettingsFromCopy);\n\n\t\tif (this._PerformEnvTemplating)\n\t\t{\n\t\t\tthis._resolveEnv(tmpSettingsTo);\n\t\t}\n\t\t// Update env tempating config, since we just updated the config object, and it may have changed\n\t\tthis._configureEnvTemplating(tmpSettingsTo);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\n\t\tthis.settings = this._deepMergeObjects(tmpSettingsFromCopy, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = FableSettings;\nmodule.exports.new = autoConstruct;","/**\n* Random Byte Generator - Browser version\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn this.generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n","/**\n* Fable UUID Generator\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;0\n\nconst libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'UUID';\n\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = FableUUID;\nmodule.exports.new = autoConstruct;\n","/**\n* Fable Application Services Support Library\n* @author <steven@velozo.com>\n*/\n// Pre-init services\nconst libFableSettings = require('fable-settings');\nconst libFableUUID = require('fable-uuid');\nconst libFableLog = require('fable-log');\n\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass Fable extends libFableServiceBase.CoreServiceProviderBase\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\t// Initialization Phase 0: Set up the lowest level state (fable is a utility service manager at heart)\n\t\tthis.serviceType = 'ServiceManager';\n\n\t\t// An array of the types of services available\n\t\tthis.serviceTypes = [];\n\t\t// A map of instantiated services\n\t\tthis.servicesMap = {};\n\t\t// A map of the default instantiated service by type\n\t\tthis.services = {};\n\n\t\t// A map of class constructors for services\n\t\tthis.serviceClasses = {};\n\n\t\t// If we need extra service initialization capabilities\n\t\tthis.extraServiceInitialization = false;\n\n\n\t\t// Initialization Phase 1: Set up the core utility services\n\t\t// These are things like power, water, and sewage.  They are required for fable to run (e.g. logging, settings, etc)\n\n\t\t// Instantiate the default Settings Manager\n\t\tthis.SettingsManager = new libFableSettings(pSettings);\n\t\tthis.SettingsManager = this.SettingsManager;\n\t\t// Instantiate the UUID generator\n\t\tthis.UUID = new libFableUUID(this.SettingsManager.settings);\n\t\t// Instantiate the logging system\n\t\tthis.Logging = new libFableLog(this.SettingsManager.settings);\n\t\tthis.Logging.initialize();\n\n\t\t// Initialization Phase 1.5: Instantiate the service manager\n\t\t// This is the start actual bootstrapping point for fable.\n\t\t// For consistency fable is treated as a service.\n\t\tthis.ServiceManager = this;\n\t\tthis.connectFable(this);\n\t\t// --> Bootstrapping of fable into the Service Manager is complete\n\n\t\t// Initialization Phase 2: Map in the default services.\n\t\t// They will then be available in the Default service provider set as well.\n\t\tthis.connectPreinitServiceProviderInstance(this.UUID);\n\t\tthis.connectPreinitServiceProviderInstance(this.Logging);\n\t\tthis.connectPreinitServiceProviderInstance(this.SettingsManager);\n\n\t\t// Initialize and instantiate the default baked-in Data Arithmatic service\n\t\tthis.addAndInstantiateServiceType('EnvironmentData', require('./services/Fable-Service-EnvironmentData.js'));\n\t\tthis.addServiceType('Template', require('./services/Fable-Service-Template.js'));\n\t\tthis.addServiceType('MetaTemplate', require('./services/Fable-Service-MetaTemplate.js'));\n\t\tthis.addServiceType('Anticipate', require('./services/Fable-Service-Anticipate.js'));\n\t\tthis.addAndInstantiateServiceType('Dates', require('./services/Fable-Service-DateManipulation.js'));\n\t\tthis.addAndInstantiateServiceType('DataFormat', require('./services/Fable-Service-DataFormat.js'));\n\t\tthis.addAndInstantiateServiceType('DataGeneration', require('./services/Fable-Service-DataGeneration.js'));\n\t\tthis.addAndInstantiateServiceType('Utility', require('./services/Fable-Service-Utility.js'));\n\t\tthis.addServiceType('Operation', require('./services/Fable-Service-Operation.js'));\n\t\tthis.addServiceType('RestClient', require('./services/Fable-Service-RestClient.js'));\n\t\tthis.addServiceType('CSVParser', require('./services/Fable-Service-CSVParser.js'));\n\t\tthis.addServiceType('Manifest', require('manyfest'));\n\t\tthis.addServiceType('ObjectCache', require('cachetrax'));\n\t\tthis.addServiceType('FilePersistence', require('./services/Fable-Service-FilePersistence.js'));\n\t}\n\n\t/* State Accessors */\n\tget isFable()\n\t{\n\t\treturn true;\n\t}\n\n\tget settings()\n\t{\n\t\treturn this.SettingsManager.settings;\n\t}\n\n\tget settingsManager()\n\t{\n\t\treturn this.SettingsManager;\n\t}\n\n\t// For backwards compatibility\n\tgetUUID()\n\t{\n\t\treturn this.UUID.getUUID();\n\t}\n\n\t/* Service Manager Methods */\n\taddServiceType(pServiceType, pServiceClass)\n\t{\n\t\tif (this.servicesMap.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\t// TODO: Check if any services are running?\n\t\t\tthis.log.warn(`Adding a service type [${pServiceType}] that already exists.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the container for instantiated services to go in\n\t\t\tthis.servicesMap[pServiceType] = {};\n\n\t\t\t// Add the type to the list of types\n\t\t\tthis.serviceTypes.push(pServiceType);\n\t\t}\n\n\t\t// Using the static member of the class is a much more reliable way to check if it is a service class than instanceof\n\t\tif ((typeof(pServiceClass) == 'function') && (pServiceClass.isFableService))\n\t\t{\n\t\t\t// Add the class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = pServiceClass;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the base class to the list of classes\n\t\t\tthis.log.error(`Attempted to add service type [${pServiceType}] with an invalid class.  Using base service class, which will not crash but won't provide meaningful services.`);\n\t\t\tthis.serviceClasses[pServiceType] = libFableServiceBase;\n\t\t}\n\t}\n\n\t// This is for the services that are meant to run mostly single-instance so need a default at initialization\n\taddAndInstantiateServiceType(pServiceType, pServiceClass)\n\t{\n\t\tthis.addServiceType(pServiceType, pServiceClass);\n\t\treturn this.instantiateServiceProvider(pServiceType, {}, `${pServiceType}-Default`);\n\t}\n\n\t// Some services expect to be overloaded / customized class.\n\tinstantiateServiceProviderFromPrototype(pServiceType, pOptions, pCustomServiceHash, pServicePrototype)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new pServicePrototype(this, pOptions, pCustomServiceHash);\n\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\tinstantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = this.instantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\t// Create a service provider but don't register it to live forever in fable.services\n\tinstantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new this.serviceClasses[pServiceType](this, pOptions, pCustomServiceHash);\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\t\treturn tmpService;\n\t}\n\n\t// Connect an initialized service provider that came before Fable was initialized\n\tconnectPreinitServiceProviderInstance(pServiceInstance)\n\t{\n\t\tlet tmpServiceType = pServiceInstance.serviceType;\n\t\tlet tmpServiceHash = pServiceInstance.Hash;\n\n\t\t// The service should already be instantiated, so just connect it to fable\n\t\tpServiceInstance.connectFable(this);\n\n\t\t// Add the service type to the map if it isn't there yet\n\t\tif (!this.servicesMap.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\t// If the core service hasn't registered itself yet, create the service container for it.\n\t\t\t// This means you couldn't register another with this type unless it was later registered with a constructor class.\n\t\t\tthis.servicesMap[tmpServiceType] = {};\n\t\t}\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[tmpServiceType][tmpServiceHash] = pServiceInstance;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(tmpServiceType, tmpServiceHash, false);\n\t\t}\n\n\t\treturn pServiceInstance;\n\t}\n\n\tsetDefaultServiceInstantiation(pServiceType, pServiceHash, pOverwriteService)\n\t{\n\t\t// Overwrite services by default, unless told not to\n\t\tlet tmpOverwriteService = (typeof(pOverwriteService) === 'undefined') ? true : pOverwriteService;\n\t\t// Make sure the service exists\n\t\tif (this.servicesMap[pServiceType].hasOwnProperty(pServiceHash))\n\t\t{\n\t\t\tif (!this.hasOwnProperty(pServiceType) || tmpOverwriteService)\n\t\t\t{\n\t\t\t\tthis[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\t}\n\t\t\tif (!this.services.hasOwnProperty(pServiceType) || tmpOverwriteService)\n\t\t\t{\n\t\t\t\tthis.services[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\t\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = Fable;\nmodule.exports.new = autoConstruct;\n\nmodule.exports.LogProviderBase = libFableLog.LogProviderBase;\nmodule.exports.ServiceProviderBase = libFableServiceBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceBase.CoreServiceProviderBase;\n\nmodule.exports.precedent = libFableSettings.precedent;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceAnticipate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'AsyncAnticipate';\n\n\t\t// The queue of operations waiting to run.\n\t\tthis.operationQueue = [];\n\t\tthis.erroredOperations = [];\n\n\t\tthis.executingOperationCount = 0;\n\t\tthis.completedOperationCount = 0;\n\n\t\tthis.maxOperations = 1;\n\n\t\tthis.lastError = undefined;\n\t\tthis.waitingFunctions = [];\n\t}\n\n\tcheckQueue()\n\t{\n\t\t// This checks to see if we need to start any operations.\n\t\tif (this.operationQueue.length > 0 && this.executingOperationCount < this.maxOperations)\n\t\t{\n\t\t\tlet tmpOperation = this.operationQueue.shift();\n\t\t\tthis.executingOperationCount += 1;\n\t\t\ttmpOperation(this.buildAnticipatorCallback());\n\t\t}\n\t\telse if (this.waitingFunctions.length > 0 && this.executingOperationCount < 1)\n\t\t{\n\t\t\t// If there are no operations left, and we have waiting functions, call them.\n\t\t\tfor (let i = 0; i < this.waitingFunctions.length; i++)\n\t\t\t{\n\t\t\t\tthis.waitingFunctions[i](this.lastError);\n\t\t\t}\n\t\t\t// Reset our state\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.waitingFunctions = [];\n\t\t}\n\t}\n\n\t// Expects a function fAsynchronousFunction(fCallback)\n\tanticipate(fAsynchronousFunction)\n\t{\n\t\tthis.operationQueue.push(fAsynchronousFunction);\n\t\tthis.checkQueue();\n\t}\n\n\tbuildAnticipatorCallback()\n\t{\n\t\t// This uses closure-scoped state to track the callback state\n\t\tlet tmpCallbackState = (\n\t\t\t{\n\t\t\t\tCalled: false,\n\t\t\t\tError: undefined,\n\t\t\t\tOperationSet: this\n\t\t\t});\t\t\n\t\treturn hoistedCallback;\n\t\tfunction hoistedCallback(pError)\n\t\t{\n\t\t\tif (tmpCallbackState.Called)\n\t\t\t{\n\t\t\t\t// If they call the callback twice, throw an error\n\t\t\t\tthrow new Error(\"Anticipation async callback called twice...\");\n\t\t\t}\n\t\t\ttmpCallbackState.Called = true;\n\t\t\ttmpCallbackState.error = pError;\n\n\t\t\ttmpCallbackState.OperationSet.executingOperationCount -= 1;\n\t\t\ttmpCallbackState.OperationSet.completedOperationCount += 1;\n\n\t\t\ttmpCallbackState.OperationSet.checkQueue();\n\t\t}\n\t}\n\n\twait(fCallback)\n\t{\n\t\tthis.waitingFunctions.push(fCallback);\n\t\tthis.checkQueue();\n\t}\n}\n\nmodule.exports = FableServiceAnticipate;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Parsing CSVs.  Why?  Because it's a thing that needs to be done.\n*\n* 1. And the other node CSV parsers had issues with the really messy files we had.\n* \n*\n* 2. None of the CSV parsers dealt with and multi-line quoted string columns\n*    which are apparently a-ok according to the official spec.\n* Plus a lot of them are asynchronous because apparently that's the best way to\n* do anything; unfortunately some files have a sequence issue with that.\n*\n* @class CSVParser\n*/\nclass CSVParser extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'CSVParser';\n\n        this.Header = [];\n        this.HeaderFieldNames = [];\n\n        this.Delimiter = ',';\n        this.QuoteCharacter = '\"';\n\n        this.CleanCharacters = ['\\r'];\n\n        this.HeaderLineIndex = 0;\n        this.HasHeader = true;\n        this.HasSetHeader = false;\n        this.EmitHeader = false;\n\n        this.EmitJSON = true;\n\n        this.EscapedQuoteString = '&quot;';\n\n        // Current Line Parsing State\n        this.CurrentLine = '';\n        this.CurrentRecord = [];\n\n        this.InQuote = false;\n        this.InEscapedQuote = false;\n\n        this.LinesParsed = 0;\n        this.RowsEmitted = 0;\n    }\n\n    marshalRowToJSON(pRowArray)\n    {\n        if (!Array.isArray(pRowArray))\n        {\n            return false;\n        }\n\n        for (let i = this.HeaderFieldNames.length; i < pRowArray.length; i++)\n        {\n            this.HeaderFieldNames[i] = `${i}`;\n        }\n\n        let tmpObject = {};\n\n        for (let i = 0; i < pRowArray.length; i++)\n        {\n            tmpObject[this.HeaderFieldNames[i]] = pRowArray[i];\n        }\n\n        return tmpObject;\n    }\n\n    // Set the header data, for use in marshalling to JSON.\n    setHeader (pHeaderArray)\n    {\n        this.Header = pHeaderArray;\n\n        for (let i = 0; i < this.Header.length; i++)\n        {\n            if (typeof(this.Header[i]) == 'undefined')\n            {\n                this.HeaderFieldNames[i] = `${i}`;\n            }\n            else\n            {\n                this.HeaderFieldNames[i] = this.Header[i].toString();\n            }\n        }\n    }\n\n    resetRowState()\n    {\n        this.CurrentRecord = [];\n    }\n\n    pushLine()\n    {\n        for (let i = 0; i < this.CleanCharacters.length; i++)\n        {\n            this.CurrentLine = this.CurrentLine.replace(this.CleanCharacters[i],'');\n        }\n        this.CurrentRecord.push(this.CurrentLine);\n        this.CurrentLine = '';\n    }\n\n    emitRow(pFormatAsJSON)\n    {\n        let tmpFormatAsJSON = (typeof(pFormatAsJSON) == 'undefined') ? this.EmitJSON : pFormatAsJSON;\n\n        this.RowsEmitted++;\n        let tmpCompletedRecord = this.CurrentRecord;\n        this.CurrentRecord = [];\n\n        if (tmpFormatAsJSON)\n        {\n            return this.marshalRowToJSON(tmpCompletedRecord);\n        }\n        else\n        {\n            return tmpCompletedRecord;\n        }\n    }\n\n    parseCSVLine (pLineString)\n    {\n        this.LinesParsed++;\n\n        for (let i = 0; i < pLineString.length; i++)\n        {\n            if ((!this.InQuote) && (pLineString[i] == this.Delimiter))\n            {\n                this.pushLine();\n            }\n            else if (pLineString[i] == this.QuoteCharacter)\n            {\n                // If we are in the second part of an escaped quote, ignore it.\n                if (this.InEscapedQuote)\n                {\n                    this.InEscapedQuote = false;\n                }\n                // If we aren't in a quote, enter quote\n                else if (!this.InQuote)\n                {\n                    this.InQuote = true;\n                }\n                // We are in a quote, so peek forward to see if this is an \"escaped\" quote pair\n                else if ((i < pLineString.length) && (pLineString[i+1] == this.QuoteCharacter))\n                {\n                    this.CurrentLine += this.EscapedQuoteString;\n                    this.InEscapedQuote = true;\n                }\n                // We are in a quote, this isn't an \"escaped\" quote pair, so go out of quote mode\n                else\n                {\n                    this.InQuote = false;\n                }\n            }\n            else\n            {\n                this.CurrentLine += pLineString[i];\n            }\n        }\n\n        // See if we are in a multiline quoted entry -- if not, emit the row.\n        if (!this.InQuote)\n        {\n            // Push the last remaining column from the buffer to the current line.\n            this.pushLine();\n\n            // Check to see if there is a header -- and if so, if this is the header row\n            if (this.HasHeader && !this.HasSetHeader && (this.RowsEmitted == this.HeaderLineIndex))\n            {\n                this.HasSetHeader = true;\n                // Override the format as json bit\n                this.setHeader(this.emitRow(false));\n\n                // No matter what, formatting this as JSON is silly and we don't want to go there anyway.\n                if (this.EmitHeader)\n                {\n                    return this.Header;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n            else\n            {\n                return this.emitRow();\n            }\n        }\n        else\n        {\n            return false;\n        }\n    };\n}\n\nmodule.exports = CSVParser;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Data Formatting and Translation Functions\n*\n* @class DataFormat\n*/\nclass DataFormat extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'DataArithmatic';\n\n\t\t// Regular Expressions (so they don't have to be recompiled every time)\n\t\t// These could be defined as static, but I'm not sure if that will work with browserify ... and specifically the QT browser.\n\t\tthis._Regex_formatterInsertCommas = /.{1,3}/g;\n\t\t// Match Function:\n\t\t// function(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t\t// Thoughts about below:   /^([+-]?)(0*)(\\d+)(\\.(\\d+))?$/;\n\t\tthis._Regex_formatterAddCommasToNumber = /^([-+]?)(0?)(\\d+)(.?)(\\d+)$/g;\n\t\tthis._Regex_formatterDollarsRemoveCommas = /,/gi;\n\t\tthis._Regex_formatterCleanNonAlphaChar = /[^a-zA-Z]/gi;\n\t\tthis._Regex_formatterCapitalizeEachWord = /([a-zA-Z]+)/g;\n\n\t\t// TODO: Potentially pull these in from a configuration.\n\t\t// TODO: Use locale data for this if it's defaults all the way down.\n\t\tthis._Value_MoneySign_Currency = '$';\n\t\tthis._Value_NaN_Currency = '--';\n\t\tthis._Value_GroupSeparator_Number = ',';\n\n\t\tthis._Value_Prefix_StringHash = 'HSH';\n\t\tthis._Value_Clean_formatterCleanNonAlpha = '';\n\n\t\tthis._UseEngineStringStartsWith = (typeof(String.prototype.startsWith) === 'function');\n\t\tthis._UseEngineStringEndsWith = (typeof(String.prototype.endsWith) === 'function');\n\t}\n\n\n\t/*************************************************************************\n\t * String Manipulation and Comparison Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Reverse a string\n\t *\n\t * @param {string} pString - The string to reverse\n\t * @returns {string}\n\t */\n\tstringReverse (pString)\n\t{\n\t\t// TODO: Benchmark if there are faster ways we want to do this with all the newer JS stuff\n\t\t//       ... and if it will work with browserify in a clean way.\n\t\treturn pString.split('').reverse().join('');\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pStartIndex\n\t * @returns {*}\n\t */\n\tstringStartsWith (pString, pSearchString, pStartIndex)\n\t{\n\t\tif (this._UseEngineStringStartsWith)\n\t\t{\n\t\t\treturn pString.startsWith(pSearchString, pStartIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringStartsWith_Polyfill.call(pString, pSearchString, pStartIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pStartIndex - The index to start the search at\n\t * @returns {boolean}\n\t */\n\tstringStartsWith_Polyfill (pSearchString, pStartIndex)\n\t{\n\t\treturn this.slice(pStartIndex || 0, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pEndIndex\n\t * @returns {*}\n\t */\n\tstringEndsWith (pString, pSearchString, pEndIndex)\n\t{\n\t\tif (this._UseEngineStringEndsWith)\n\t\t{\n\t\t\treturn pString.endsWith(pSearchString, pEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringEndsWith_Polyfill.call(pString, pSearchString, pEndIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pEndIndex - The index to end the search at\n\t * @returns {boolean}\n\t */\n\tstringEndsWith_Polyfill (pSearchString, pEndIndex)\n\t{\n\t\t// This works much better than >= because\n\t\t// it compensates for NaN:\n\t\tif (!(pEndIndex < this.length))\n\t\t{\n\t\t\tpEndIndex = this.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpEndIndex |= 0; // round position\n\t\t}\n\t\treturn this.substr(pEndIndex - pSearchString.length, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Generate an insecure string hash.  Not meant to be secure, just a quick way to generate a hash for a string.  This is not a cryptographic hash.  Additional warranty and disclaimer ... this is not for passwords!\n\t *\n\t * @param {string} pString\n\t * @returns {string}\n\t */\n\tinsecureStringHash (pString)\n\t{\n\t\tlet tmpHash = 0;\n\t\tlet tmpStringLength = pString.length;\n\t\tlet tmpCharacterIndex = 0;\n\n\t\twhile (tmpCharacterIndex < tmpStringLength)\n\t\t{\n\t\t\ttmpHash = (tmpHash << 5) - tmpHash + pString.charCodeAt(tmpCharacterIndex++) | 0;\n\t\t}\n\n\t\treturn `${this._Value_Prefix_StringHash}${tmpHash}`;\n\t}\n\n\tcapitalizeEachWord (pString)\n\t{\n\t\treturn pString.replace(this._Regex_formatterCapitalizeEachWord,\n\t\t\t(pMatch) =>\n\t\t\t{\n\t\t\t\treturn pMatch.charAt(0).toUpperCase() + pMatch.substr(1);\n\t\t\t});\n\t}\n\n\t/**\n\t * Clean wrapping characters if they exist consistently around the string.  If they do not, the string is returned unchanged.\n\t *\n\t * @param {string} pWrapCharacter - The character expected as the wrapping character\n\t * @param {string} pString - the string to clean\n\t * @returns {string}\n\t */\n\tcleanEnclosureWrapCharacters (pWrapCharacter, pString)\n\t{\n\t\t// # Use case from ManyFest DSL:\n\t\t//\n\t\t// When a boxed property is passed in, it should have quotes of some\n\t\t// kind around it.\n\t\t//\n\t\t// For instance:\n\t\t// \t\tMyValues['Name']\n\t\t// \t\tMyValues[\"Age\"]\n\t\t// \t\tMyValues[`Cost`]\n\t\t//\n\t\t// This function is necessary to remove the wrapping quotes before object\n\t\t// resolution can occur.\n\t\tif (pString.startsWith(pWrapCharacter) && pString.endsWith(pWrapCharacter))\n\t\t{\n\t\t\treturn pString.substring(1, pString.length - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pString;\n\t\t}\n\t}\n\n\t/**\n\t * Clean a string of any non-alpha characters (including numbers)\n\t *\n\t * @param {*} pString\n\t * @returns\n\t */\n\tcleanNonAlphaCharacters (pString)\n\t{\n\t\tif ((typeof(pString) == 'string') && (pString != ''))\n\t\t{\n\t\t\treturn pString.replace(this._Regex_formatterCleanNonAlphaChar, this._Value_Clean_formatterCleanNonAlpha);\n\t\t}\n\n\t\treturn '';\n\t}\n\n\n\t/*************************************************************************\n\t * Number Formatting Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Insert commas every 3 characters from the right.  Used by formatterAddCommasToNumber().\n\t *\n\t * @param {*} pString\n\t * @returns {*}\n\t */\n\tformatterInsertCommas (pString)\n\t{\n\t\t// Reverse, because it's easier to do things from the left, given arbitrary digit counts\n\t\tlet tmpReversed = this.stringReverse(pString);\n\t\t// Add commas every three characters\n\t\tlet tmpReversedWithCommas = tmpReversed.match(this._Regex_formatterInsertCommas).join(',');\n\t\t// Reverse again (back to normal direction)\n\t\treturn this.stringReverse(tmpReversedWithCommas);\n\t}\n\n\tprocessAddCommasToNumberRegex(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t{\n\t\t// If there was no decimal, the last capture grabs the final digit, so\n\t\t// we have to put it back together with the 'before' substring\n\t\treturn pSign + (pDecimal ? this.formatterInsertCommas(pBefore) + pDecimal + pAfter : this.formatterInsertCommas(pBefore + pAfter));\n\t}\n\n\t/**\n\t * Add Commas to a Number for readability.\n\t *\n\t * @param {*} pNumber\n\t * @returns {string}\n\t */\n\tformatterAddCommasToNumber (pNumber)\n\t{\n\t\t// If the regex doesn't match, `replace` returns the string unmodified\n\t\treturn (pNumber.toString()).replace\n\t\t(\n\t\t\tthis._Regex_formatterAddCommasToNumber,\n\t\t\tthis.processAddCommasToNumberRegex.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * This will take a number and format it as a dollar string.  It will also add commas to the number.  If the number is not a number, it will return '--'.\n\t *\n\t * @param {*} pValue\n\t * @returns {string}\n\t */\n\tformatterDollars (pValue)\n\t{\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tif (pValue === null || pValue === undefined)\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tlet tmpDollarAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpDollarAmount = tmpDollarAmountArbitrary.toFixed(2);\n\n\t\tif (isNaN(tmpDollarAmount))\n\t\t{\n\t\t\t// Try again and see if what was passed in was a dollars string.\n\t\t\tif (typeof(pValue) == 'string')\n\t\t\t{\n\t\t\t\t// TODO: Better rounding function?  This is a hack to get rid of the currency symbol and commas.\n\t\t\t\ttmpDollarAmount = parseFloat(pValue.replace(this._Value_MoneySign_Currency,'').replace(this._Regex_formatterDollarsRemoveCommas,'')).toFixed(2);\n\t\t\t}\n\t\t\t// If we didn't get a number, return the \"not a number\" string.\n\t\t\tif (isNaN(tmpDollarAmount))\n\t\t\t{\n\t\t\t\treturn this._Value_NaN_Currency;\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Get locale data and use that for this stuff.\n\t\treturn `$${this.formatterAddCommasToNumber(tmpDollarAmount)}`;\n\t}\n\n\t/**\n\t * Round a number to a certain number of digits.  If the number is not a number, it will return 0.  If no digits are specified, it will default to 2 significant digits.\n\t *\n\t * @param {*} pValue\n\t * @param {number} pDigits\n\t * @returns {string}\n\t */\n\tformatterRoundNumber (pValue, pDigits)\n\t{\n\t\tlet tmpDigits = (typeof(pDigits) == 'undefined') ? 2 : pDigits;\n\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\n\t\tif (pValue === null || pValue === undefined)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpValue = tmpAmountArbitrary.toFixed(tmpDigits);\n\n\t\tif (isNaN(tmpValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpValue;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate a reapeating padding string to be appended before or after depending on \n\t * which padding function it uses.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringGeneratePaddingString(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpTargetLength = pTargetLength >> 0;\n\t\tlet tmpPadString = String((typeof pPadString !== 'undefined' ? pPadString : ' '));\n\t\tif (pString.length > pTargetLength)\n\t\t{\n\t\t\t// No padding string if the source string is already longer than the target length, return an empty string\n\t\t\treturn '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpPadLength = pTargetLength - pString.length;\n\t\t\tif (tmpPadLength > tmpPadString.length)\n\t\t\t{\n\t\t\t\ttmpPadString += tmpPadString.repeat(tmpTargetLength / tmpPadString.length);\n\t\t\t}\n\t\t\treturn tmpPadString.slice(0, tmpPadLength);\n\t\t}\n\t}\n\n\t/**\n\t * Pad the start of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadStart = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString) + tmpString;\n\t}\n\n\t/**\n\t * Pad the end of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadEnd = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn tmpString + this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString);\n\t}\n\n\t/*************************************************************************\n\t * Time Formatting Functions (milliseconds)\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Format a time length in milliseconds into a human readable string.\n\t * @param {number} pTimeSpan \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeSpan(pTimeSpan)\n\t{\n\t\tif (typeof(pTimeSpan) != 'number')\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpMs = parseInt(pTimeSpan%1000);\n\t\tlet tmpSeconds = parseInt((pTimeSpan/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeSpan/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeSpan/(1000*60*60));\n\n\t\treturn `${this.stringPadStart(tmpHours,2,'0')}:${this.stringPadStart(tmpMinutes,2,'0')}:${this.stringPadStart(tmpSeconds,2,'0')}.${this.stringPadStart(tmpMs,3,'0')}`;\n\t}\n\n\t/**\n\t * Format the time delta between two times in milliseconds into a human readable string.\n\t * \n\t * @param {number} pTimeStart \n\t * @param {number} pTimeEnd \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeDelta(pTimeStart, pTimeEnd)\n\t{\n\t\tif ((typeof(pTimeStart) != 'number') || (typeof(pTimeEnd) != 'number'))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.formatTimeSpan(pTimeEnd-pTimeStart);\n\t}\n\n\t// THE FOLLOWING TERRIBLE FUNCTIONS ARE FOR QT / WKHTMLTOPDF when luxon and moment don't work so well\n\tgetMonthFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tgetMonthAbbreviatedFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tformatMonthDayYearFromDate (pJavascriptDate, pStrict)\n\t{\n\t\tlet tmpStrict = (typeof(pStrict) !== 'undefined') ? pStrict : false;\n\n\t\tlet tmpMonth = pJavascriptDate.getMonth() + 1;\n\t\tlet tmpDay = pJavascriptDate.getDate();\n\t\tlet tmpYear = pJavascriptDate.getFullYear();\n\t\t\n\t\tif (tmpStrict)\n\t\t{\n\t\t\ttmpMonth = this.stringPadStart(tmpMonth, 2, '0');\n\t\t\ttmpDay = this.stringPadStart(tmpDay, 2, '0');\n\t\t\ttmpYear = this.stringPadStart(tmpYear, 4, '0');\n\t\t}\n\n\t\treturn `${tmpMonth}/${tmpDay}/${tmpYear}`;\n\t}\n\t\n\tformatSortableStringFromDate (pDate)\n\t{\n\t\treturn pDate.getFullYear()+this.stringPadStart(pDate.getMonth(),2,'0')+this.stringPadStart(pDate.getDate(),2,'0');\n\t}\n\n\t/*************************************************************************\n\t * String Tokenization Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Return the string before the matched substring.\n\t *\n\t * If the substring is not found, the entire string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringBeforeMatch (pString, pMatch)\n\t{\n\t\treturn pString.split(pMatch)[0];\n\t}\n\n\t/**\n\t * Return the string after the matched substring.\n\t *\n\t * If the substring is not found, an empty string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringAfterMatch (pString, pMatch)\n\t{\n\t\tlet tmpStringSplitLocation = pString.indexOf(pMatch);\n\n\t\tif ((tmpStringSplitLocation < 0) || ((tmpStringSplitLocation + pMatch.length) >= pString.length))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn pString.substring(tmpStringSplitLocation + pMatch.length);\n\t}\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures (pString, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\tif (tmpEnclosureDepth == 0)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t}\n\t\t\t\ttmpEnclosureDepth++;\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpEnclosureCount;\n\t}\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosedValueStartIndex = 0;\n\t\tlet tmpEnclosedValueEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This is the end of an enclosure\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t\t{\n\t\t\t// Return an empty string if the enclosure is not found\n\t\t\treturn '';\n\t\t}\n\n\t\tif ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t\t}\n\t}\n\n\n\t/**\n\t * Remove an enclosure from a string based on the index of the enclosure.\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToRemove\n\t * @param {number} pEnclosureStart\n\t * @param {number} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringRemoveEnclosureByIndex (pString, pEnclosureIndexToRemove, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToRemove = (typeof(pEnclosureIndexToRemove) == 'number') ? pEnclosureIndexToRemove : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosureStartIndex = 0;\n\t\tlet tmpEnclosureEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToRemove == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosureStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosureEndIndex <= tmpEnclosureStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToRemove)\n\t\t{\n\t\t\treturn tmpString;\n\t\t}\n\n\t\tlet tmpReturnString = '';\n\n\t\tif (tmpEnclosureStartIndex > 1)\n\t\t{\n\t\t\ttmpReturnString = tmpString.substring(0, tmpEnclosureStartIndex);\n\t\t}\n\n\t\tif ((tmpString.length > (tmpEnclosureEndIndex + 1)) && (tmpEnclosureEndIndex > tmpEnclosureStartIndex))\n\t\t{\n\t\t\ttmpReturnString += tmpString.substring(tmpEnclosureEndIndex+1);\n\t\t}\n\n\t\treturn tmpReturnString;\n\t}\n}\n\nmodule.exports = DataFormat;","module.exports={\n\t\"DefaultIntegerMinimum\": 0,\n\t\"DefaultIntegerMaximum\": 9999999,\n\n\t\"DefaultNumericStringLength\": 10,\n\n\t\"MonthSet\": [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n\n\t\"WeekDaySet\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n\n\t\"ColorSet\": \n\t\t[\n\t\t\t\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Indigo\", \"Violet\", \"Pink\", \"Purple\", \"Turquoise\", \"Gold\",\n\t\t\t\"Lime\", \"Maroon\", \"Navy\", \"Coral\", \"Teal\", \"Brown\", \"White\", \"Black\", \"Sky\", \"Berry\",\n\t\t\t\"Grey\", \"Straw\", \"Silver\", \"Sapphire\"\n\t\t],\n\n\t\"SurNameSet\":\n\t\t[\n\t\t\t\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Miller\", \"Davis\", \"Garcia\", \"Rodriguez\", \"Wilson\",\n\t\t\t\"Martinez\", \"Anderson\", \"Taylor\", \"Thomas\", \"Hernandez\", \"Moore\", \"Martin\", \"Jackson\", \"Thompson\", \"White\",\n\t\t\t\"Lopez\", \"Lee\", \"Gonzalez\", \"Harris\", \"Clark\", \"Lewis\", \"Robinson\", \"Walker\", \"Perez\", \"Hall\",\n\t\t\t\"Young\", \"Allen\", \"Sanchez\", \"Wright\", \"King\", \"Scott\", \"Green\", \"Baker\", \"Adams\", \"Nelson\",\n\t\t\t\"Hill\", \"Ramirez\", \"Campbell\", \"Mitchell\", \"Roberts\", \"Carter\", \"Phillips\", \"Evans\", \"Turner\", \"Torres\",\n\t\t\t\"Parker\", \"Collins\", \"Edwards\", \"Stewart\", \"Flores\", \"Morris\", \"Nguyen\", \"Murphy\", \"Rivera\", \"Cook\",\n\t\t\t\"Rogers\", \"Morgan\", \"Peterson\", \"Cooper\", \"Reed\", \"Bailey\", \"Bell\", \"Gomez\", \"Kelly\", \"Howard\",\n\t\t\t\"Ward\", \"Cox\", \"Diaz\", \"Richardson\", \"Wood\", \"Watson\", \"Brooks\", \"Bennett\", \"Gray\", \"James\",\n\t\t\t\"Reyes\", \"Cruz\", \"Hughes\", \"Price\", \"Myers\", \"Long\", \"Foster\", \"Sanders\", \"Ross\", \"Morales\",\n\t\t\t\"Powell\", \"Sullivan\", \"Russell\", \"Ortiz\", \"Jenkins\", \"Gutierrez\", \"Perry\", \"Butler\", \"Barnes\", \"Fisher\"\n\t\t],\n\n\t\"NameSet\":\n\t\t[\n\t\t\t\"Mary\", \"Patricia\", \"Jennifer\", \"Linda\", \"Elizabeth\", \"Barbara\", \"Susan\", \"Jessica\", \"Sarah\", \"Karen\",\n\t\t\t\"Lisa\", \"Nancy\", \"Betty\", \"Sandra\", \"Margaret\", \"Ashley\", \"Kimberly\", \"Emily\", \"Donna\", \"Michelle\",\n\t\t\t\"Carol\", \"Amanda\", \"Melissa\", \"Deborah\", \"Stephanie\", \"Dorothy\", \"Rebecca\", \"Sharon\", \"Laura\", \"Cynthia\",\n\t\t\t\"Amy\", \"Kathleen\", \"Angela\", \"Shirley\", \"Brenda\", \"Emma\", \"Anna\", \"Pamela\", \"Nicole\", \"Samantha\",\n\t\t\t\"Katherine\", \"Christine\", \"Helen\", \"Debra\", \"Rachel\", \"Carolyn\", \"Janet\", \"Maria\", \"Catherine\", \"Heather\",\n\t\t\t\"Diane\", \"Olivia\", \"Julie\", \"Joyce\", \"Victoria\", \"Ruth\", \"Virginia\", \"Lauren\", \"Kelly\", \"Christina\",\n\t\t\t\"Joan\", \"Evelyn\", \"Judith\", \"Andrea\", \"Hannah\", \"Megan\", \"Cheryl\", \"Jacqueline\", \"Martha\", \"Madison\",\n\t\t\t\"Teresa\", \"Gloria\", \"Sara\", \"Janice\", \"Ann\", \"Kathryn\", \"Abigail\", \"Sophia\", \"Frances\", \"Jean\",\n\t\t\t\"Alice\", \"Judy\", \"Isabella\", \"Julia\", \"Grace\", \"Amber\", \"Denise\", \"Danielle\", \"Marilyn\", \"Beverly\",\n\t\t\t\"Charlotte\", \"Natalie\", \"Theresa\", \"Diana\", \"Brittany\", \"Doris\", \"Kayla\", \"Alexis\", \"Lori\", \"Marie\",\n\t\t\t\"James\", \"Robert\", \"John\", \"Michael\", \"David\", \"William\", \"Richard\", \"Joseph\", \"Thomas\", \"Christopher\",\n\t\t\t\"Charles\", \"Daniel\", \"Matthew\", \"Anthony\", \"Mark\", \"Donald\", \"Steven\", \"Andrew\", \"Paul\", \"Joshua\",\n\t\t\t\"Kenneth\", \"Kevin\", \"Brian\", \"George\", \"Timothy\", \"Ronald\", \"Jason\", \"Edward\", \"Jeffrey\", \"Ryan\",\n\t\t\t\"Jacob\", \"Gary\", \"Nicholas\", \"Eric\", \"Jonathan\", \"Stephen\", \"Larry\", \"Justin\", \"Scott\", \"Brandon\",\n\t\t\t\"Benjamin\", \"Samuel\", \"Gregory\", \"Alexander\", \"Patrick\", \"Frank\", \"Raymond\", \"Jack\", \"Dennis\", \"Jerry\",\n\t\t\t\"Tyler\", \"Aaron\", \"Jose\", \"Adam\", \"Nathan\", \"Henry\", \"Zachary\", \"Douglas\", \"Peter\", \"Kyle\",\n\t\t\t\"Noah\", \"Ethan\", \"Jeremy\", \"Walter\", \"Christian\", \"Keith\", \"Roger\", \"Terry\", \"Austin\", \"Sean\",\n\t\t\t\"Gerald\", \"Carl\", \"Harold\", \"Dylan\", \"Arthur\", \"Lawrence\", \"Jordan\", \"Jesse\", \"Bryan\", \"Billy\",\n\t\t\t\"Bruce\", \"Gabriel\", \"Joe\", \"Logan\", \"Alan\", \"Juan\", \"Albert\", \"Willie\", \"Elijah\", \"Wayne\",\n\t\t\t\"Randy\", \"Vincent\", \"Mason\", \"Roy\", \"Ralph\", \"Bobby\", \"Russell\", \"Bradley\", \"Philip\", \"Eugene\"\n\t\t]\n}","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceDataGeneration extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'DataGeneration';\n\n\t\tthis.defaultData = require('./Fable-Service-DataGeneration-DefaultValues.json');\n\t}\n\n\t// Return a random integer between pMinimum and pMaximum\n\trandomIntegerBetween(pMinimum, pMaximum)\n\t{\n\t\treturn Math.floor(Math.random() * (pMaximum - pMinimum)) + pMinimum;\n\t}\n\t// Return a random integer up to the passed-in maximum\n\trandomIntegerUpTo(pMaximum)\n\t{\n\t\treturn this.randomIntegerBetween(0, pMaximum);\n\t}\n\t// Return a random integer between 0 and 9999999\n\trandomInteger()\n\t{\n\t\treturn Math.floor(Math.random()*this.defaultData.DefaultIntegerMaximum);\n\t}\n\n\n\trandomNumericString(pLength, pMaxNumber)\n\t{\n\t\tlet tmpLength = (typeof(pLength) === 'undefined') ? 10 : pLength;\n\t\tlet tmpMaxNumber = (typeof(pMaxNumber) === 'undefined') ? ((10 ** tmpLength) - 1) : pMaxNumber;\n\n\t\treturn this.services.DataFormat.stringPadStart(this.randomIntegerUpTo(tmpMaxNumber), pLength, '0');\n\t}\n\n\n\trandomMonth()\n\t{\n\t\treturn this.defaultData.MonthSet[this.randomIntegerUpTo(this.defaultData.MonthSet.length-1)];\n\t}\n\trandomDayOfWeek()\n\t{\n\t\treturn this.defaultData.WeekDaySet[this.randomIntegerUpTo(this.defaultData.WeekDaySet.length-1)];\n\t}\n\n\n\trandomColor()\n\t{\n\t\treturn this.defaultData.ColorSet[this.randomIntegerUpTo(this.defaultData.ColorSet.length-1)];\n\t}\n\n\n\trandomName()\n\t{\n\t\treturn this.defaultData.NameSet[this.randomIntegerUpTo(this.defaultData.NameSet.length-1)];\n\t}\n\trandomSurname()\n\t{\n\t\treturn this.defaultData.SurNameSet[this.randomIntegerUpTo(this.defaultData.SurNameSet.length-1)];\n\t}\n}\n\nmodule.exports = FableServiceDataGeneration;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Date management a la Moment using days.js\n*\n* @class DateManipulation\n*/\nclass DateManipulation extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'Dates';\n\n\t\tthis.dayJS = require('dayjs');\n\n\t\t// Include the `weekOfYear` plugin\n\t\tthis.plugin_weekOfYear = require('dayjs/plugin/weekOfYear');\n\t\tthis.dayJS.extend(this.plugin_weekOfYear);\n\t\t// Include the `weekday` plugin\n\t\tthis.plugin_weekday = require('dayjs/plugin/weekday');\n\t\tthis.dayJS.extend(this.plugin_weekday);\n\t\t// Include the `isoWeek` plugin\n\t\tthis.plugin_isoWeek = require('dayjs/plugin/isoWeek');\n\t\tthis.dayJS.extend(this.plugin_isoWeek);\n\t\t// Include the `timezone` plugin\n\t\tthis.plugin_timezone = require('dayjs/plugin/timezone');\n\t\tthis.dayJS.extend(this.plugin_timezone);\n\t\t// Include the `relativetime` plugin\n\t\tthis.plugin_relativetime = require('dayjs/plugin/relativeTime');\n\t\tthis.dayJS.extend(this.plugin_relativetime);\n\t\t// Include the `utc` plugin\n\t\tthis.plugin_utc = require('dayjs/plugin/utc');\n\t\tthis.dayJS.extend(this.plugin_utc);\n\t\t// Include the `advancedFormat` plugin\n\t\tthis.plugin_advancedFormat = require('dayjs/plugin/advancedFormat');\n\t\tthis.dayJS.extend(this.plugin_advancedFormat);\n\n\t\t// A developer can include locales if they want\n\t\t// You would do the following:\n\t\t// const localeDE = require('dayjs/locale/de');\n\t\t// _Fable.Dates.dayJS.locale('de');\n\t}\n}\n\nmodule.exports = DateManipulation;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceEnvironmentData extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'EnvironmentData';\n\n\t\tthis.Environment = `node.js`;\n\t}\n}\n\nmodule.exports = FableServiceEnvironmentData;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libFS = require('fs');\nconst libPath = require('path');\nconst libReadline = require('readline');\n\n\nclass FableServiceFilePersistence extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'FilePersistence';\n\n\t\tif (!this.options.hasOwnProperty('Mode'))\n\t\t{\n\t\t\tthis.options.Mode = parseInt('0777', 8) & ~process.umask();\n\t\t}\n\n\t\tthis.libFS = libFS;\n\t\tthis.libPath = libPath;\n\t\tthis.libReadline = libReadline;\n\t}\n\n\tjoinPath(...pPathArray)\n\t{\n\t\treturn libPath.resolve(...pPathArray);\n\t}\n\n\texistsSync(pPath)\n\t{\n\t\treturn libFS.existsSync(pPath);\n\t}\n\n\texists(pPath, fCallback)\n\t{\n\t\tlet tmpFileExists = this.existsSync(pPath);;\n\n\t\treturn fCallback(null, tmpFileExists);\n\t}\n\n\tappendFileSync(pFileName, pAppendContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.appendFileSync(pFileName, pAppendContent, tmpOptions);\n\t}\n\n\tdeleteFileSync(pFileName)\n\t{\n\t\treturn libFS.unlinkSync(pFileName);\n\t}\n\n\tdeleteFolderSync(pFileName)\n\t{\n\t\treturn libFS.rmdirSync(pFileName);\n\t}\n\n\treadFileSync(pFilePath, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.readFileSync(pFilePath, tmpOptions);\n\t}\n\n\treadFile(pFilePath, pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.readFile(pFilePath, tmpOptions, fCallback);\n\t}\n\n\twriteFileSync(pFileName, pFileContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFileSync(pFileName, pFileContent, tmpOptions);\n\t}\n\n\twriteFileSyncFromObject(pFileName, pObject)\n\t{\n\t\treturn this.writeFileSync(pFileName, JSON.stringify(pObject, null, 4));\n\t}\n\n\twriteFileSyncFromArray(pFileName, pFileArray)\n\t{\n\t\tif (!Array.isArray(pFileArray))\n\t\t{\n\t\t\tthis.log.error(`File Persistence Service attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).`);\n\t\t\treturn Error('Attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let i = 0; i < pFileArray.length; i++)\n\t\t\t{\n\t\t\t\treturn this.appendFileSync(pFileName, `${pFileArray[i]}\\n`);\n\t\t\t}\n\t\t}\n\t}\n\n\twriteFile(pFileName, pFileContent, pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFile(pFileName, pFileContent, tmpOptions, fCallback);\n\t}\n\n\tlineReaderFactory(pFilePath, fOnLine, fOnComplete, fOnError)\n\t{\n\t\tlet tmpLineReader = {};\n\n\t\tif (typeof(pFilePath) != 'string')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpLineReader.filePath = pFilePath;\n\n\t\ttmpLineReader.fileStream = libFS.createReadStream(tmpLineReader.filePath);\n\n\t\ttmpLineReader.reader = libReadline.createInterface({ input: tmpLineReader.fileStream, crlfDelay: Infinity });\n\n\t\tif (typeof(fOnError) === 'function')\n\t\t{\n\t\t\ttmpLineReader.reader.on('error', fOnError);\n\t\t}\n\n\t\ttmpLineReader.reader.on('line', (typeof(fOnLine) === 'function') ? fOnLine : () => {});\n\n\t\tif (typeof(fOnComplete) === 'function')\n\t\t{\n\t\t\ttmpLineReader.reader.on('close', fOnComplete);\n\t\t}\n\n\t\treturn tmpLineReader;\n\t}\n\n\t// Folder management\n\tmakeFolderRecursive(pParameters, fCallback)\n\t{\n\t\tlet tmpParameters = pParameters;\n\n\t\tif (typeof(pParameters) == 'string')\n\t\t{\n\t\t\ttmpParameters = { Path: pParameters };\n\t\t}\n\t\telse if (typeof(pParameters) !== 'object')\n\t\t{\n\t\t\tfCallback(new Error('Parameters object or string not properly passed to recursive folder create.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(tmpParameters.Path) !== 'string'))\n\t\t{\n\t\t\tfCallback(new Error('Parameters object needs a path to run the folder create operation.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!tmpParameters.hasOwnProperty('Mode'))\n\t\t{\n\t\t\ttmpParameters.Mode = this.options.Mode;\n\t\t}\n\n\t\t// Check if we are just starting .. if so, build the initial state for our recursive function\n\t\tif (typeof(tmpParameters.CurrentPathIndex) === 'undefined')\n\t\t{\n\t\t\t// Build the tools to start recursing\n\t\t\ttmpParameters.ActualPath = libPath.normalize(tmpParameters.Path);\n\t\t\ttmpParameters.ActualPathParts = tmpParameters.ActualPath.split(libPath.sep);\n\t\t\ttmpParameters.CurrentPathIndex = 0;\n\t\t\ttmpParameters.CurrentPath = '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is not our first run, so we will continue the recursion.\n\t\t\t// Build the new base path\n\t\t\tif (tmpParameters.CurrentPath == libPath.sep)\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\n\t\t\t// Increment the path index\n\t\t\ttmpParameters.CurrentPathIndex++;\n\t\t}\n\n\t\t// Check if the path is fully complete\n\t\tif (tmpParameters.CurrentPathIndex >= tmpParameters.ActualPathParts.length)\n\t\t{\n\t\t\treturn fCallback(null);\n\t\t}\n\n\t\t// Check if the path exists (and is a folder)\n\t\tlibFS.open(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], 'r',\n\t\t\t(pError, pFileDescriptor)=>\n\t\t\t{\n\t\t\t\tif (pFileDescriptor)\n\t\t\t\t{\n\t\t\t\t\tlibFS.closeSync(pFileDescriptor);\n\t\t\t\t}\n\n\t\t\t\tif (pError && pError.code=='ENOENT')\n\t\t\t\t{\n\t\t\t\t\t/* Path doesn't exist, create it */\n\t\t\t\t\tlibFS.mkdir(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], tmpParameters.Mode,\n\t\t\t\t\t\t(pCreateError) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!pCreateError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// We have now created our folder and there was no error -- continue.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (pCreateError.code =='EEXIST')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// The folder exists -- our dev might be running this in parallel/async/whatnot.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(pCreateError.code);\n\t\t\t\t\t\t\t\treturn fCallback(pCreateError);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nmodule.exports = FableServiceFilePersistence;","const libFableServiceBase = require('fable-serviceproviderbase');\n\n/**\n* Precedent Meta-Templating\n* @author      Steven Velozo <steven@velozo.com>\n* @description Process text stream trie and postfix tree, parsing out meta-template expression functions.\n*/\nconst libWordTree = require(`./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js`);\nconst libStringParser = require(`./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js`);\n\n\nclass FableServiceMetaTemplate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'MetaTemplate';\n\n\t\tthis.WordTree = new libWordTree();\n\n\t\t// In order to allow asynchronous template processing we need to use the async.eachLimit function\n\t\tthis.StringParser = new libStringParser(this.fable.services.Utility.eachLimit);\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\taddPatternAsync(pPatternStart, pPatternEnd, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternAsync(pPatternStart, pPatternEnd, pParserPromise);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData, fCallback)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceMetaTemplate;","/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor(fEachLimit)\n\t{\n\t\tthis.eachLimit = fEachLimit;\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacterAsync (pCharacter, pParserState, pData, fCallback)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t\t\t\t\t// Trim the start and end tags off the output buffer now\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t\treturn fCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\treturn fCallback();\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn fCallback();\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t * @param {function} fCallback - The callback function to call when the parse is complete\n\t */\n\tparseString (pString, pParseTree, pData, fCallback)\n\t{\n\t\tif (typeof(fCallback) !== 'function')\n\t\t{\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\t\tfor (var i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: This is not fast.\n\t\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData, fCallback);\n\t\t\t}\n\n\t\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\t\treturn tmpParserState.Output;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is the async mode\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\t\t\ttmpParserState.Asynchronous = true;\n\n\t\t\tthis.eachLimit(pString, 1,\n\t\t\t\t(pCharacter, fCharacterCallback) =>\n\t\t\t\t{\n\t\t\t\t\tthis.parseCharacterAsync(pCharacter, tmpParserState, pData, fCharacterCallback);\n\t\t\t\t},\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\t// Flush the remaining data\n\t\t\t\t\tthis.flushOutputBuffer(tmpParserState);\n\t\t\t\t\tfCallback(pError, tmpParserState.Output);\n\t\t\t\t});\n\n\t\t}\n\t}\n}\n\nmodule.exports = StringParser;\n","/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn tmpLeaf;\n\t}\n\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternAsync (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParser);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t}\n\t}\n}\n\nmodule.exports = WordTree;\n","module.exports = (\n    {\n        \"Metadata\": {\n            \"UUID\": false,\n            \"Hash\": false,\n\n            \"Name\": \"\",\n            \"Summary\": \"\",\n\n            \"Version\": 0\n        },\n        \"Status\": {\n            \"Completed\": false,\n\n            \"CompletionProgress\": 0,\n            \"CompletionTimeElapsed\": 0,\n\n            \"TimeStart\": 0,\n            \"TimeEnd\": 0\n        },\n        \"Steps\": [],\n        \"Errors\": [],\n        \"Log\": []\n    }\n);","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst _OperationStatePrototypeString = JSON.stringify(require('./Fable-Service-Operation-DefaultSettings.js'));\n\nclass FableOperation extends libFableServiceBase\n{\n\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\t// Timestamps will just be the long ints\n\t\tthis.timeStamps = {};\n\t\t// ProgressTrackers have an object format of: {Hash:'SomeHash',EndTime:UINT,CurrentTime:UINT,TotalCount:INT,CurrentCount:INT}\n\t\tthis.progressTrackers = {};\n\n        this.serviceType = 'PhasedOperation';\n\n\t\tthis.state = JSON.parse(_OperationStatePrototypeString);\n\n\t\tthis.stepMap = {};\n\t\tthis.stepFunctions = {};\n\n\t\t// Match the service instantiation to the operation.\n\t\tthis.state.Metadata.Hash = this.Hash;\n\t\tthis.state.Metadata.UUID = this.UUID;\n\n\t\tthis.state.Metadata.Name = (typeof(this.options.Name) == 'string') ? this.options.Name : `Unnamed Operation ${this.state.Metadata.UUID}`;\n\t\tthis.name = this.state.Metadata.Name;\n\n\t\tthis.log = this;\n\t}\n\n\texecute(fExecutionCompleteCallback)\n\t{\n\t\tif (this.state.Status.TimeStart)\n\t\t{\n\t\t\treturn fExecutionCompleteCallback(new Error(`Operation [${this.state.Metadata.UUID}] ${this.state.Metadata.Name} has already been executed!`));\n\t\t}\n\n\t\tthis.state.Status.TimeStart = +new Date();\n\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\tfor (let i = 0; i < this.state.Steps; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(this.stepFunctions[this.state.Steps[i].GUIDStep].bind(this));\n\t\t}\n\n\t\t// Wait for the anticipation to complete\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tthis.state.Status.TimeEnd = +new Date();\n\t\t\t\treturn fExecutionCompleteCallback();\n\t\t\t});\n\t}\n\n/*\n\tTODO: I've gone back and forth on whether this should be an object, JSON \n\tobject prototype, or set of functions here.  Discuss with colleagues!\n*/\n\taddStep(pGUIDStep, fStepFunction, pStepName, pStepDescription, pStepMetadata)\n\t{\n\t\tlet tmpStep = {};\n\t\ttmpStep.GUIDStep = (typeof(pGUIDStep) !== 'undefined') ? pGUIDStep : `STEP-${this.state.Steps.length}-${this.fable.DataGeneration.randomNumericString()}`;\n\t\ttmpStep.Name = (typeof(pStepName) !== 'undefined') ? pStepName : `Step [${tmpStep.GUIDStep}]`;\n\t\ttmpStep.Description = (typeof(pStepDescription) !== 'undefined') ? pStepDescription : `Step execution of ${tmpStep.Name}.`;\n\t\t// TODO: Right now this allows an Array... do we want to block that?\n\t\ttmpStep.Metadata = (typeof(pStepMetadata) === 'object') ? pStepMetadata : {};\n\n\t\ttmpStep.TimeStart = false;\n\t\ttmpStep.TimeEnd = false;\n\n\t\t// There is an array of steps, in the Operation State itself ... push a step there\n\t\tthis.state.Steps.push(tmpStep);\n\n\t\tthis.stepMap[tmpStep.GUIDStep]\n\t\tthis.stepFunctions[tmpStep.GUIDStep] = fStepFunction;\n\n\t\tthis.state.Status.StepCount++;\n\t\treturn tmpStep;\n\t}\n\n\tgetStep(pGUIDStep)\n\t{\n\t\tif (this.stepMap.hasOwnProperty(pGUIDStep))\n\t\t{\n\t\t\treturn this.stepMap[pGUIDStep];\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tstartStep(pGUIDStep)\n\t{\n\t\tlet tmpStep = this.getStep(pGUIDStep);\n\n\t\tif (tmpStep === false)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpStep.TimeStart = +new Date();\n\n\t\treturn tmpStep;\n\t}\n\n\tstopStep(pGUIDStep)\n\t{\n\t\tlet tmpStep = this.getStep(pGUIDStep);\n\n\t\tif (tmpStep === false)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpStep.TimeEnd = +new Date();\n\n\t\treturn tmpStep;\n\t}\n\n\twriteOperationLog(pLogLevel, pLogText, pLogObject)\n\t{\n\t\tthis.state.Log.push(`[${new Date().toUTCString()}]-[${pLogLevel}]: ${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Log.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\twriteOperationErrors(pLogText, pLogObject)\n\t{\n\t\tthis.state.Errors.push(`${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Errors.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('TRACE', pLogText, pLogObject);\n\t\tthis.fable.log.trace(pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('DEBUG', pLogText, pLogObject);\n\t\tthis.fable.log.debug(pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('INFO', pLogText, pLogObject);\n\t\tthis.fable.log.info(pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('WARN', pLogText, pLogObject);\n\t\tthis.fable.log.warn(pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('ERROR', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.error(pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('FATAL', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.fatal(pLogText, pLogObject);\n\t}\n\n\n\t/************************************************************************\n\t * BEGINNING OF -->  Telemetry Helpers\n\t */\n\tcreateTimeStamp(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tthis.timeStamps[tmpTimeStampHash] = +new Date();\n\t\treturn this.timeStamps[tmpTimeStampHash];\n\t}\n\n\tgetTimeDelta(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tif (this.timeStamps.hasOwnProperty(tmpTimeStampHash))\n\t\t{\n\t\t\tlet tmpEndTime = +new Date();\n\t\t\treturn tmpEndTime-this.timeStamps[tmpTimeStampHash];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tlogTimeDelta(pTimeStampHash, pMessage)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : `Elapsed for ${tmpTimeStampHash}: `;\n\t\tlet tmpOperationTime = this.getTimeDelta(pTimeStampHash);\n\t\tthis.info(tmpMessage +' ('+tmpOperationTime+'ms)');\n\t\treturn tmpOperationTime;\n\t}\n\n\tcreateProgressTracker(pTotalOperations, pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpTotalOperations = (typeof(pTotalOperations) == 'number') ? pTotalOperations : 100;\n\n\t\tlet tmpProgressTracker = (\n\t\t\t{\n\t\t\t\tHash: tmpProgressTrackerHash,\n\t\t\t\tStartTime: this.createTimeStamp(tmpProgressTrackerHash),\n\t\t\t\tEndTime: 0,\n\t\t\t\tCurrentTime: 0,\n\t\t\t\tPercentComplete: -1,\n\t\t\t\tAverageOperationTime: -1,\n\t\t\t\tEstimatedCompletionTime: -1,\n\t\t\t\tTotalCount: tmpTotalOperations,\n\t\t\t\tCurrentCount:-1\n\t\t\t});\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash] = tmpProgressTracker;\n\n\t\treturn tmpProgressTracker;\n\t}\n\n\tsolveProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tlet tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\ttmpProgressTracker.CurrentTime = this.getTimeDelta(tmpProgressTracker.Hash);\n\n\t\tif ((tmpProgressTracker.CurrentCount > 0) && (tmpProgressTracker.TotalCount > 0))\n\t\t{\n\t\t\ttmpProgressTracker.PercentComplete = (tmpProgressTracker.CurrentCount / tmpProgressTracker.TotalCount) * 100.0;\n\t\t}\n\n\t\tif ((tmpProgressTracker.CurrentCount > 0) && (tmpProgressTracker.CurrentTime > 0))\n\t\t{\n\t\t\ttmpProgressTracker.AverageOperationTime = tmpProgressTracker.CurrentTime / tmpProgressTracker.CurrentCount;\n\t\t}\n\n\t\tif ((tmpProgressTracker.CurrentCount < tmpProgressTracker.TotalCount) && (tmpProgressTracker.AverageOperationTime > 0))\n\t\t{\n\t\t\ttmpProgressTracker.EstimatedCompletionTime = (tmpProgressTracker.TotalCount - tmpProgressTracker.CurrentCount) * tmpProgressTracker.AverageOperationTime;\n\t\t}\n\t}\n\n\tupdateProgressTrackerStatus(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\n\t\tif (isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = tmpCurrentOperations;\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tincrementProgressTrackerStatus(pProgressTrackerHash, pIncrementSize)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpIncrementSize = parseInt(pIncrementSize);\n\n\t\tif (isNaN(tmpIncrementSize))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = this.progressTrackers[tmpProgressTrackerHash].CurrentCount + tmpIncrementSize;\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tsetProgressTrackerEndTime(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (!isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\tthis.updateProgressTrackerStatus(tmpProgressTrackerHash, tmpCurrentOperations);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].EndTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tprintProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTrackerHash} does not exist!  No stats to display.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\t\tif (tmpProgressTracker.CurrentCount < 1)\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} has no completed operations.  ${tmpProgressTracker.CurrentTime}ms have elapsed since it was started.`);\n\t\t\t}\n\t\t\telse if (tmpProgressTracker.EndTime < 1)\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} is ${tmpProgressTracker.PercentComplete.toFixed(3)}% completed - ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations over ${tmpProgressTracker.CurrentTime}ms (median ${tmpProgressTracker.AverageOperationTime.toFixed(3)} per).  Estimated completion in ${tmpProgressTracker.EstimatedCompletionTime.toFixed(0)}ms or ${(tmpProgressTracker.EstimatedCompletionTime / 1000 / 60).toFixed(2)}minutes`)\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} is done and completed ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations in ${tmpProgressTracker.EndTime}ms.`)\n\t\t\t}\n\t\t}\n\t}\n\t/*\n\t * END OF       -->  Logging and Telemetry Helpers\n\t ************************************************************************/\n}\n\nmodule.exports = FableOperation;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libSimpleGet = require('simple-get');\nconst libCookie = require('cookie');\n\nclass FableServiceRestClient extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.TraceLog = false;\n\t\tif (this.options.TraceLog || this.fable.TraceLog)\n\t\t{\n\t\t\tthis.TraceLog = true;\n\t\t}\n\n\t\tthis.dataFormat = this.fable.services.DataFormat;\n\n\t\tthis.serviceType = 'RestClient';\n\n\t\tthis.cookie = false;\n\n\t\t// This is a function that can be overridden, to allow the management\n\t\t// of the request options before they are passed to the request library.\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tget simpleGet()\n\t{\n\t\treturn libSimpleGet;\n\t}\n\n\tprepareCookies(pRequestOptions)\n\t{\n\t\tif (this.cookie)\n\t\t{\n\t\t\tlet tmpCookieObject = this.cookie;\n\t\t\tif (!pRequestOptions.hasOwnProperty('headers'))\n\t\t\t{\n\t\t\t\tpRequestOptions.headers = {};\n\t\t\t}\n\t\t\tlet tmpCookieKeys = Object.keys(tmpCookieObject);\n\t\t\tif (tmpCookieKeys.length > 0)\n\t\t\t{\n\t\t\t\t// Only grab the first for now.\n\t\t\t\tpRequestOptions.headers.cookie = libCookie.serialize(tmpCookieKeys[0], tmpCookieObject[tmpCookieKeys[0]]);\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn pRequestOptions;\n\t}\n\n\tpreRequest(pOptions)\n\t{\n\t\t// Validate the options object\n\t\tlet tmpOptions = this.prepareCookies(pOptions);\n\t\treturn this.prepareRequestOptions(tmpOptions);\n\t}\n\n\texecuteChunkedRequest(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpData.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpData);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteChunkedRequestBinary(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\ttmpOptions.json = false;\n\t\ttmpOptions.encoding = null;\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpDataBuffer = false;\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: Potentially create a third option that streams this to a file?  So it doesn't have to hold it all in memory.\n\t\t\t\t\t\tif (!tmpDataBuffer)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.from(pChunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.concat([tmpDataBuffer, pChunk]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpDataBuffer.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpDataBuffer);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteJSONRequest(pOptions, fCallback)\n\t{\n\t\tpOptions.json = true;\n\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\tif (!tmpOptions.hasOwnProperty('headers'))\n\t\t{\n\t\t\ttmpOptions.headers = {};\n\t\t}\n\t\t/* Automated headers break some APIs\n\t\tif (!tmpOptions.headers.hasOwnProperty('Content-Type'))\n\t\t{\n\t\t\ttmpOptions.headers['Content-Type'] = 'application/json';\n\t\t}\n\t\t*/\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} JSON request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpJSONData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpJSONData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> JSON ${tmpOptions.method} completed - received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, JSON.parse(tmpJSONData));\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetJSON(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeJSONRequest(tmpRequestOptions, fCallback);\n\t}\n\n\tputJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PUT JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PUT';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpostJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`POST JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'POST';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpatchJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PATCH JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PATCH';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\theadJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`HEAD JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'HEAD';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tdelJSON(pOptions, fCallback)\n\t{\n\t\tpOptions.method = 'DELETE';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tgetRawText(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeChunkedRequest(tmpRequestOptions, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceRestClient;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceTemplate extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Template';\n\n\t\t// These are the exact regex's used in lodash/underscore\n\t\t// TODO: Switch this to precedent\n\t\tthis.Matchers = (\n\t\t\t{\n\t\t\t\tEvaluate: /<%([\\s\\S]+?)%>/g,\n\t\t\t\tInterpolate: /<%=([\\s\\S]+?)%>/g,\n\t\t\t\tEscaper: /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g,\n\t\t\t\tUnescaper: /\\\\(\\\\|'|r|n|t|u2028|u2029)/g,\n\t\t\t\t// This is how underscore does it, so we are keeping it for now.\n\t\t\t\tGuaranteedNonMatch: /.^/\n\t\t\t});\n\n\t\t// This is a helper for the escaper and unescaper functions.\n\t\t// Right now we are going to keep what underscore is doing, but, not forever.\n\t\tthis.templateEscapes = {\n\t\t\t'\\\\': '\\\\',\n\t\t\t\"'\": \"'\",\n\t\t\t'r': '\\r',\n\t\t\t'\\r': 'r',\n\t\t\t'n': '\\n',\n\t\t\t'\\n': 'n',\n\t\t\t't': '\\t',\n\t\t\t'\\t': 't',\n\t\t\t'u2028': '\\u2028',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'u2029': '\\u2029',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\t// This is defined as such to underscore that it is a dynamic programming\n\t\t// function on this class.\n\t\tthis.renderFunction = false;\n        this.templateString = false;\n\t}\n\n\trenderTemplate(pData)\n\t{\n\t\treturn this.renderFunction(pData);\n\t}\n\n\ttemplateFunction(pData)\n\t{\n\t\tlet fRenderTemplateBound = this.renderTemplate.bind(this);\n\t\treturn fRenderTemplateBound;\n\t}\n\n\tbuildTemplateFunction(pTemplateText, pData)\n\t{\n\t\t// For now this is being kept in a weird form ... this is to mimic the old\n\t\t// underscore code until this is rewritten using precedent.\n\t\tthis.TemplateSource = \"__p+='\" + pTemplateText\n\t\t\t.replace(this.Matchers.Escaper,\n\t\t\t\t(pMatch)=>\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\${this.templateEscapes[pMatch]}`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Interpolate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `'+\\n(${decodeURIComponent(pCode)})+\\n'`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Evaluate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `';\\n${decodeURIComponent(pCode)}\\n;__p+='`;\n\t\t\t\t}) + `';\\n`;\n\n\n\t\tthis.TemplateSource = `with(pTemplateDataObject||{}){\\n${this.TemplateSource}}\\n`;\n\t\tthis.TemplateSource = `var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n${this.TemplateSource}return __p;\\n`;\n\n\t\tthis.renderFunction = new Function('pTemplateDataObject', this.TemplateSource);\n\n\t\tif (typeof(pData) != 'undefined')\n\t\t{\n\t\t\treturn this.renderFunction(pData);\n\t\t}\n\n\t\t// Provide the compiled function source as a convenience for build time\n\t\t// precompilation.\n\t\tthis.TemplateSourceCompiled = 'function(obj){\\n' + this.TemplateSource + '}';\n\n\t\treturn this.templateFunction();\n\t}\n}\n\nmodule.exports = FableServiceTemplate;","const libFableServiceBase = require('fable-serviceproviderbase');\n\n// TODO: These are still pretty big -- consider the smaller polyfills\nconst libAsyncWaterfall = require('async.waterfall');\nconst libAsyncEachLimit = require('async.eachlimit');\n\nconst libBigNumber = require('big.js');\n\nclass FableServiceUtility extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\tthis.templates = {};\n\n\t\t// These two functions are used extensively throughout\n\t\tthis.waterfall = libAsyncWaterfall;\n\t\tthis.eachLimit = libAsyncEachLimit;\n\n\t\tthis.bigNumber = libBigNumber;\n\t}\n\n\t// Underscore and lodash have a behavior, _.extend, which merges objects.\n\t// Now that es6 gives us this, use the native thingy.\n\t// Nevermind, the native thing is not stable enough across environments\n\t// Basic shallow copy\n\textend(pDestinationObject, ...pSourceObjects)\n\t{\n\t\tfor (let i = 0; i < pSourceObjects.length; i++)\n\t\t{\n\t\t\tlet tmpSourceObject = pSourceObjects[i];\n\t\t\tif (typeof(tmpSourceObject) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpObjectProperties = Object.keys(tmpSourceObject);\n\t\t\t\tfor (let k = 0; k < tmpObjectProperties.length; k++)\n\t\t\t\t{\n\t\t\t\t\tpDestinationObject[tmpObjectProperties[k]] = tmpSourceObject[tmpObjectProperties[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pDestinationObject;\n\t}\n\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\ttemplate(pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.instantiateServiceProviderWithoutRegistration('Template');\n\n\t\treturn tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t}\n\n\t// Build a template function from a template hash, and, register it with the service provider\n\tbuildHashedTemplate(pTemplateHash, pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.instantiateServiceProvider('Template', {}, pTemplateHash);\n\n\t\tthis.templates[pTemplateHash] = tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\n\t\treturn this.templates[pTemplateHash];\n\t}\n\n\t// This is a safe, modern version of chunk from underscore\n\t// Algorithm pulled from a mix of these two polyfills:\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\n\t// https://youmightnotneed.com/lodash\n\t// This implementation was most tolerant in browsers.  Uglify can fix the rest.\n\tchunk (pInput, pChunkSize, pChunkCache)\n\t{\n\t\tlet tmpInputArray = [...pInput];\n\t\t// Note lodash defaults to 1, underscore defaults to 0\n\t\tlet tmpChunkSize = (typeof(pChunkSize) == 'number') ? pChunkSize : 0;\n\t\tlet tmpChunkCache = (typeof(pChunkCache) != 'undefined') ? pChunkCache : [];\n\n\t\tif (tmpChunkSize <= 0)\n\t\t{\n\t\t\treturn tmpChunkCache;\n\t\t}\n\n\t\twhile (tmpInputArray.length)\n\t\t{\n\t\t\ttmpChunkCache.push(tmpInputArray.splice(0, tmpChunkSize));\n\t\t}\n\n\t\treturn tmpChunkCache;\n\t}\n\n\t// Convert an ISO string to a javascript date object\n\t// Adapted from https://stackoverflow.com/a/54751179\n\t//\n\t// Takes strings like: 2022-11-04T11:34:45.000Z\n\t//                and: 1986-06-11T09:34:46.012Z+0200\n\t// ... and converts them into javascript timestamps, following the directions of the timezone stuff.\n\t//\n\t// This is not meant to replace the more complex libraries such as moment or luxon.\n\t// This *is* meant to be a simple, small, and fast way to convert ISO strings to dates in engines\n\t// with ultra limited JS capabilities where those don't work.\n\tisoStringToDate (pISOString)\n\t{\n\n\t\t// Split the string into an array based on the digit groups.\n\t\tlet tmpDateParts = pISOString.split( /\\D+/ );\n\n\t\t// Set up a date object with the current time.\n\t\tlet tmpReturnDate = new Date();\n\n\t\t// Track the number of hours we need to adjust the date by based on the timezone.\n\t\tlet tmpTimeZoneOffsetInHours = 0;\n\t\t// Track the number of minutes we need to adjust the date by based on the timezone.\n\t\tlet tmpTimeZoneOffsetInMinutes = 0;\n\n\t\t// This fixes an inconsistency with constructing the date programmatically.\n\t\ttmpReturnDate.setUTCDate(1);\n\t\ttmpReturnDate.setUTCMonth(1);\n\t\ttmpReturnDate.setUTCHours(0);\n\t\ttmpReturnDate.setUTCMinutes(0);\n\t\ttmpReturnDate.setUTCSeconds(0);\n\t\ttmpReturnDate.setUTCMilliseconds(0);\n\n\t\t// Manually parse the parts of the string and set each part for the\n\t\t// date. Note: Using the UTC versions of these functions is necessary\n\t\t// because we're manually adjusting for time zones stored in the\n\t\t// string.\n\t\ttmpReturnDate.setUTCFullYear( parseInt( tmpDateParts[ 0 ] ) );\n\n\t\t// The month numbers are one \"off\" from what normal humans would expect\n\t\t// because January == 0.\n\t\ttmpReturnDate.setUTCMonth( parseInt( tmpDateParts[ 1 ] ) - 1 );\n\n\t\ttmpReturnDate.setUTCDate( parseInt( tmpDateParts[ 2 ] ) );\n\n\t\t// Set the time parts of the date object.\n\t\ttmpReturnDate.setUTCHours( parseInt( tmpDateParts[ 3 ] ) );\n\t\ttmpReturnDate.setUTCMinutes( parseInt( tmpDateParts[ 4 ] ) );\n\t\ttmpReturnDate.setUTCSeconds( parseInt( tmpDateParts[ 5 ] ) );\n\t\ttmpReturnDate.setUTCMilliseconds( parseInt( tmpDateParts[ 6 ] ) );\n\n\t\t// If there's a value for either the hours or minutes offset.\n\t\tif (tmpDateParts[ 7 ] || tmpDateParts[ 8 ])\n\t\t{\n\t\t\t// If there's a value for the minutes offset.\n\t\t\tif (tmpDateParts[8])\n\t\t\t{\n\t\t\t\t// Convert the minutes value into an hours value.\n\t\t\t\ttmpTimeZoneOffsetInMinutes = parseInt(tmpDateParts[8]) / 60;\n\t\t\t}\n\n\t\t\t// Add the hours and minutes values to get the total offset in hours.\n\t\t\ttmpTimeZoneOffsetInHours = parseInt(tmpDateParts[7]) + tmpTimeZoneOffsetInMinutes;\n\n\t\t\t// If the sign for the timezone is a plus to indicate the timezone is ahead of UTC time.\n\t\t\tif (pISOString.substr( -6, 1 ) == \"+\")\n\t\t\t{\n\t\t\t\t// Make the offset negative since the hours will need to be subtracted from the date.\n\t\t\t\ttmpTimeZoneOffsetInHours *= -1;\n\t\t\t}\n\t\t}\n\n\t\t// Get the current hours for the date and add the offset to get the correct time adjusted for timezone.\n\t\ttmpReturnDate.setHours( tmpReturnDate.getHours() + tmpTimeZoneOffsetInHours );\n\n\t\t// Return the Date object calculated from the string.\n\t\treturn tmpReturnDate;\n\t}\n}\n\nmodule.exports = FableServiceUtility;","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar test = {\n\tfoo: {}\n};\n\nvar $Object = Object;\n\nmodule.exports = function hasProto() {\n\treturn { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar call = Function.prototype.call;\n\nmodule.exports = call.bind ? call.bind(hasOwnProperty) : function (O, P) {\n  return call.call(hasOwnProperty, O, P);\n};\n","var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// When a boxed property is passed in, it should have quotes of some\n// kind around it.\n//\n// For instance:\n// \t\tMyValues['Name']\n// \t\tMyValues[\"Age\"]\n// \t\tMyValues[`Cost`]\n//\n// This function removes the wrapping quotes.\n//\n// Please note it *DOES NOT PARSE* template literals, so backticks just\n// end up doing the same thing as other quote types.\n//\n// TODO: Should template literals be processed?  If so what state do they have access to?  That should happen here if so.\n// TODO: Make a simple class include library with these\nconst cleanWrapCharacters = (pCharacter, pString) =>\n{\n\tif (pString.startsWith(pCharacter) && pString.endsWith(pCharacter))\n\t{\n\t\treturn pString.substring(1, pString.length - 1);\n\t}\n\telse\n\t{\n\t\treturn pString;\n\t}\n};\n\nmodule.exports = cleanWrapCharacters;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Hash Translation\n*\n* This is a very simple translation table for hashes, which allows the same schema to resolve\n* differently based on a loaded translation table.\n*\n* This is to prevent the requirement for mutating schemas over and over again when we want to\n* reuse the structure but look up data elements by different addresses.\n*\n* One side-effect of this is that a translation table can \"override\" the built-in hashes, since\n* this is always used to resolve hashes before any of the functionCallByHash(pHash, ...) perform\n* their lookups by hash.\n*\n* @class ManyfestHashTranslation\n*/\nclass ManyfestHashTranslation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n        this.translationTable = {};\n\t}\n\n    translationCount()\n    {\n        return Object.keys(this.translationTable).length;\n    }\n\n    addTranslation(pTranslation)\n    {\n        // This adds a translation in the form of:\n        // { \"SourceHash\": \"DestinationHash\", \"SecondSourceHash\":\"SecondDestinationHash\" }\n        if (typeof(pTranslation) != 'object')\n        {\n            this.logError(`Hash translation addTranslation expected a translation be type object but was passed in ${typeof(pTranslation)}`);\n            return false;\n        }\n\n        let tmpTranslationSources = Object.keys(pTranslation)\n\n        tmpTranslationSources.forEach(\n            (pTranslationSource) =>\n            {\n                if (typeof(pTranslation[pTranslationSource]) != 'string')\n                {\n                    this.logError(`Hash translation addTranslation expected a translation destination hash for [${pTranslationSource}] to be a string but the referrant was a ${typeof(pTranslation[pTranslationSource])}`);\n                }\n                else\n                {\n                    this.translationTable[pTranslationSource] = pTranslation[pTranslationSource];\n                }\n            });\n    }\n\n    removeTranslationHash(pTranslationHash)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslationHash))\n        {\n            delete this.translationTable[pTranslationHash];\n        }\n    }\n\n    // This removes translations.\n    // If passed a string, just removes the single one.\n    // If passed an object, it does all the source keys.\n    removeTranslation(pTranslation)\n    {\n        if (typeof(pTranslation) == 'string')\n        {\n            this.removeTranslationHash(pTranslation);\n            return true;\n        }\n        else if (typeof(pTranslation) == 'object')\n        {\n            let tmpTranslationSources = Object.keys(pTranslation)\n\n            tmpTranslationSources.forEach(\n                (pTranslationSource) =>\n                {\n                    this.removeTranslation(pTranslationSource);\n                });\n            return true;\n        }\n        else\n        {\n            this.logError(`Hash translation removeTranslation expected either a string or an object but the passed-in translation was type ${typeof(pTranslation)}`);\n            return false;\n        }\n    }\n\n    clearTranslations()\n    {\n        this.translationTable = {};\n    }\n\n    translate(pTranslation)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslation))\n        {\n            return this.translationTable[pTranslation];\n        }\n        else\n        {\n            return pTranslation;\n        }\n    }\n}\n\nmodule.exports = ManyfestHashTranslation;","/**\n* @author <steven@velozo.com>\n*/\n\n/**\n* Manyfest simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n\n    console.log(`[Manyfest] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject));\n};\n\nmodule.exports = logToConsole;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Resolver\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressResolverCheckAddressExists\n*/\nclass ManyfestObjectAddressResolverCheckAddressExists\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// Check if an address exists.\n\t//\n\t// This is necessary because the getValueAtAddress function is ambiguous on\n\t// whether the element/property is actually there or not (it returns\n\t// undefined whether the property exists or not).  This function checks for\n\t// existance and returns true or false dependent.\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\t// TODO: Should these throw an error?\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Check if the property exists.\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName].hasOwnProperty(tmpBoxedPropertyReference);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Use the new in operator to see if the element is in the array\n\t\t\t\t\treturn (tmpBoxedPropertyNumber in pObject[tmpBoxedPropertyName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Check if the property exists\n\t\t\t\treturn pObject.hasOwnProperty(pAddress);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// Because this is an impossible address, the property doesn't exist\n\t\t\t\t\t// TODO: Should we throw an error in this condition?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverCheckAddressExists;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - DeleteValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverDeleteValue\n*/\nclass ManyfestObjectAddressResolverDeleteValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// TODO: Dry me\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Count from the end to the beginning so splice doesn't %&%#$ up the array\n\t\t\t\tfor (let i = tmpInputArray.length - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Delete elements end to beginning\n\t\t\t\t\t\ttmpInputArray.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tdelete pObject[tmpObjectPropertyName];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tdelete pObject[pAddress];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverDeleteValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - GetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverGetValue\n*/\nclass ManyfestObjectAddressResolverGetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress, pParentAddress, pRootObject)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// Set the root object to the passed-in object if it isn't set yet.  This is expected to be the root object.\n\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// Adding simple back-navigation in objects\n\t\tif (tmpSeparatorIndex == 0)\n\t\t{\n\t\t\t// Given an address of \"Bundle.Contract.IDContract...Project.IDProject\" the ... would be interpreted as two back-navigations from IDContract.\n\t\t\t// When the address is passed in, though, the first . is already eliminated.  So we can count the dots.\n\t\t\tlet tmpParentAddressParts = tmpParentAddress.split('.');\n\n\t\t\tlet tmpBackNavigationCount = 0;\n\n\t\t\t// Count the number of dots\n\t\t\tfor (let i = 0; i < pAddress.length; i++)\n\t\t\t{\n\t\t\t\tif (pAddress.charAt(i) != '.')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttmpBackNavigationCount++;\n\t\t\t}\n\n\t\t\tlet tmpParentAddressLength = tmpParentAddressParts.length - tmpBackNavigationCount;\n\n\t\t\tif (tmpParentAddressLength < 0)\n\t\t\t{\n\t\t\t\t// We are trying to back navigate more than we can.\n\t\t\t\t// TODO: Should this be undefined or should we bank out at the bottom and try to go forward?\n\t\t\t\t// This seems safest for now.\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are trying to back navigate to a parent object.\n\t\t\t\t// Recurse with the back-propagated parent address, and, the new address without the back-navigation dots.\n\t\t\t\tlet tmpRecurseAddress = pAddress.slice(tmpBackNavigationCount);\n\t\t\t\tif (tmpParentAddressLength > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpRecurseAddress = `${tmpParentAddressParts.slice(0, tmpParentAddressLength).join('.')}.${tmpRecurseAddress}`;\n\t\t\t\t}\n\t\t\t\tthis.logInfo(`Back-navigation detected.  Recursing back to address [${tmpRecurseAddress}]`);\n\t\t\t\treturn this.getValueAtAddress(tmpRootObject, tmpRecurseAddress);\n\t\t\t}\n\t\t}\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\tlet tmpOutputArray = [];\n\t\t\t\tfor (let i = 0; i < tmpInputArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOutputArray.push(tmpInputArray[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpOutputArray;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn pObject[tmpObjectPropertyName];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\treturn pObject[pAddress];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverGetValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - SetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressSetValue\n*/\nclass ManyfestObjectAddressSetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyReference] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the time in recursion to set the value in the object\n\t\t\t\tpObject[pAddress] = pValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressSetValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Generation\n*\n* Automagically generate addresses and properties based on a passed-in object,\n* to be used for easy creation of schemas.  Meant to simplify the lives of\n* developers wanting to create schemas without typing a bunch of stuff.\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressGeneration\n*/\nclass ManyfestObjectAddressGeneration\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// generateAddressses\n\t//\n\t// This flattens an object into a set of key:value pairs for *EVERY SINGLE\n\t// POSSIBLE ADDRESS* in the object.  It can get ... really insane really\n\t// quickly.  This is not meant to be used directly to generate schemas, but\n\t// instead as a starting point for scripts or UIs.\n\t//\n\t// This will return a mega set of key:value pairs with all possible schema\n\t// permutations and default values (when not an object) and everything else.\n\tgenerateAddressses (pObject, pBaseAddress, pSchema)\n\t{\n\t\tlet tmpBaseAddress = (typeof(pBaseAddress) == 'string') ? pBaseAddress : '';\n\t\tlet tmpSchema = (typeof(pSchema) == 'object') ? pSchema : {};\n\n\t\tlet tmpObjectType = typeof(pObject);\n\n\t\tlet tmpSchemaObjectEntry = (\n\t\t\t{\n\t\t\t\tAddress: tmpBaseAddress,\n\t\t\t\tHash: tmpBaseAddress,\n\t\t\t\tName: tmpBaseAddress,\n\t\t\t\t// This is so scripts and UI controls can force a developer to opt-in.\n\t\t\t\tInSchema: false\n\t\t\t}\n\t\t)\n\n\t\tif ((tmpObjectType == 'object') && (pObject == null))\n\t\t{\n\t\t\ttmpObjectType = 'null';\n\t\t}\n\n\t\tswitch(tmpObjectType)\n\t\t{\n\t\t\tcase 'string':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'String';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'bigint':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Number';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\tcase 'null':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Any';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif (Array.isArray(pObject))\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Array';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < pObject.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[i], `${tmpBaseAddress}[${i}]`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Object';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t\ttmpBaseAddress += '.';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectProperties = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectProperties.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[tmpObjectProperties[i]], `${tmpBaseAddress}${tmpObjectProperties[i]}`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'symbol':\n\t\t\tcase 'function':\n\t\t\t\t// Symbols and functions neither recurse nor get added to the schema\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tmpSchema;\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressGeneration;","// Given a string, parse out any conditional expressions and set whether or not to keep the record.\n//\n// For instance:\n// \t\t'files[]<<~?format,==,Thumbnail?~>>'\n//      'files[]<<~?format,==,Metadata?~>>'\n//      'files[]<<~?size,>,4000?~>>'\n//\n// The wrapping parts are the <<~? and ?~>> megabrackets.\n//\n// The function does not need to alter the string -- just check the conditionals within.\n\n// TODO: Consider making this an es6 class\n\n// Let's use indexOf since it is apparently the fastest.\nconst _ConditionalStanzaStart = '<<~?';\nconst _ConditionalStanzaStartLength = _ConditionalStanzaStart.length;\nconst _ConditionalStanzaEnd = '?~>>';\nconst _ConditionalStanzaEndLength = _ConditionalStanzaEnd.length;\n\n// Test the condition of a value in a record\nconst testCondition = (pManyfest, pRecord, pSearchAddress, pSearchComparator, pValue) =>\n{\n\tswitch(pSearchComparator)\n\t{\n\t\tcase '!=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) != pValue);\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) < pValue);\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) > pValue);\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) <= pValue);\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) >= pValue);\n\t\t\tbreak;\n\t\tcase '===':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === pValue);\n\t\t\tbreak;\n\t\tcase '==':\n\t\tdefault:\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) == pValue);\n\t\t\tbreak;\n\t}\n};\n\nconst parseConditionals = (pManyfest, pAddress, pRecord) =>\n{\n\tlet tmpKeepRecord = true;\n\n\t/*\n\t\tAlgorithm is simple:\n\n\t\t1.  Enuerate start points\n\n\t\t2.  Find stop points within each start point\n\t\t3. Check the conditional\n\t*/\n\n\tlet tmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart);\n\n\twhile (tmpStartIndex != -1)\n\t{\n\t\tlet tmpStopIndex = pAddress.indexOf(_ConditionalStanzaEnd, tmpStartIndex+_ConditionalStanzaStartLength);\n\n\t\tif (tmpStopIndex != -1)\n\t\t{\n\t\t\tlet tmpMagicComparisonPatternSet = pAddress.substring(tmpStartIndex+_ConditionalStanzaStartLength, tmpStopIndex).split(',');\n\n\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\t\t\tlet tmpSearchComparator = tmpMagicComparisonPatternSet[1];\n\t\t\tlet tmpSearchValue = tmpMagicComparisonPatternSet[2];\n\n\t\t\t// Process the piece\n\t\t\ttmpKeepRecord = tmpKeepRecord && testCondition(pManyfest, pRecord, tmpSearchAddress, tmpSearchComparator, tmpSearchValue);\n\t\t\ttmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart, tmpStopIndex+_ConditionalStanzaEndLength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpStartIndex = -1;\n\t\t}\n\t\t\n\t}\n\n\treturn tmpKeepRecord;\n}\n\nmodule.exports = parseConditionals;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Schema Manipulation Functions\n*\n* @class ManyfestSchemaManipulation\n*/\nclass ManyfestSchemaManipulation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n    // This translates the default address mappings to something different.\n    //\n    // For instance you can pass in manyfest schema descriptor object:\n    // \t{\n\t//\t  \"Address.Of.a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t//\t  \"Address.Of.b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t//  }\n    //\n    //\n    // And then an address mapping (basically a Hash->Address map)\n    //  {\n    //    \"a\": \"New.Address.Of.a\",\n    //    \"b\": \"New.Address.Of.b\"\n    //  }\n    //\n    // NOTE: This mutates the schema object permanently, altering the base hash.\n    //       If there is a collision with an existing address, it can lead to overwrites.\n    // TODO: Discuss what should happen on collisions.\n\tresolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\tif (typeof(pManyfestSchemaDescriptors) != 'object')\n\t\t{\n\t\t\tthis.logError(`Attempted to resolve address mapping but the descriptor was not an object.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof(pAddressMapping) != 'object')\n\t\t{\n\t\t\t// No mappings were passed in\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the arrays of both the schema definition and the hash mapping\n\t\tlet tmpManyfestAddresses = Object.keys(pManyfestSchemaDescriptors);\n\t\tlet tmpHashMapping = {};\n\t\ttmpManyfestAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tif (pManyfestSchemaDescriptors[pAddress].hasOwnProperty('Hash'))\n\t\t\t\t{\n\t\t\t\t\ttmpHashMapping[pManyfestSchemaDescriptors[pAddress].Hash] = pAddress;\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet tmpAddressMappingSet = Object.keys(pAddressMapping);\n\n\t\ttmpAddressMappingSet.forEach(\n\t\t\t(pInputAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpNewDescriptorAddress = pAddressMapping[pInputAddress];\n\t\t\t\tlet tmpOldDescriptorAddress = false;\n\t\t\t\tlet tmpDescriptor = false;\n\n\t\t\t\t// See if there is a matching descriptor either by Address directly or Hash\n\t\t\t\tif (pManyfestSchemaDescriptors.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = pInputAddress;\n\t\t\t\t}\n\t\t\t\telse if (tmpHashMapping.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = tmpHashMapping[pInputAddress];\n\t\t\t\t}\n\n\t\t\t\t// If there was a matching descriptor in the manifest, store it in the temporary descriptor\n\t\t\t\tif (tmpOldDescriptorAddress)\n\t\t\t\t{\n\t\t\t\t\ttmpDescriptor = pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t\tdelete pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Create a new descriptor!  Map it to the input address.\n\t\t\t\t\ttmpDescriptor = { Hash:pInputAddress };\n\t\t\t\t}\n\n\t\t\t\t// Now re-add the descriptor to the manyfest schema\n\t\t\t\tpManyfestSchemaDescriptors[tmpNewDescriptorAddress] = tmpDescriptor;\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tsafeResolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\t// This returns the descriptors as a new object, safely remapping without mutating the original schema Descriptors\n\t\tlet tmpManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptors));\n\t\tthis.resolveAddressMappings(tmpManyfestSchemaDescriptors, pAddressMapping);\n\t\treturn tmpManyfestSchemaDescriptors;\n\t}\n\n\tmergeAddressMappings(pManyfestSchemaDescriptorsDestination, pManyfestSchemaDescriptorsSource)\n\t{\n\t\tif ((typeof(pManyfestSchemaDescriptorsSource) != 'object') || (typeof(pManyfestSchemaDescriptorsDestination) != 'object'))\n\t\t{\n\t\t\tthis.logError(`Attempted to merge two schema descriptors but both were not objects.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpSource = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsSource));\n\t\tlet tmpNewManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsDestination));\n\n\t\t// The first passed-in set of descriptors takes precedence.\n\t\tlet tmpDescriptorAddresses = Object.keys(tmpSource);\n\n\t\ttmpDescriptorAddresses.forEach(\n\t\t\t(pDescriptorAddress) =>\n\t\t\t{\n\t\t\t\tif (!tmpNewManyfestSchemaDescriptors.hasOwnProperty(pDescriptorAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpNewManyfestSchemaDescriptors[pDescriptorAddress] = tmpSource[pDescriptorAddress];\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpNewManyfestSchemaDescriptors;\n\t}\n}\n\nmodule.exports = ManyfestSchemaManipulation;","/**\n* @author <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\nlet libHashTranslation = require('./Manyfest-HashTranslation.js');\nlet libObjectAddressCheckAddressExists = require('./Manyfest-ObjectAddress-CheckAddressExists.js');\nlet libObjectAddressGetValue = require('./Manyfest-ObjectAddress-GetValue.js');\nlet libObjectAddressSetValue = require('./Manyfest-ObjectAddress-SetValue.js');\nlet libObjectAddressDeleteValue = require('./Manyfest-ObjectAddress-DeleteValue.js');\nlet libObjectAddressGeneration = require('./Manyfest-ObjectAddressGeneration.js');\nlet libSchemaManipulation = require('./Manyfest-SchemaManipulation.js');\n\nconst _DefaultConfiguration = { Scope:'DEFAULT', Descriptors: {} }\n\n/**\n* Manyfest object address-based descriptions and manipulations.\n*\n* @class Manyfest\n*/\nclass Manyfest extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'Manifest';\n\n\t\t// Wire in logging\n\t\tthis.logInfo = libSimpleLog;\n\t\tthis.logError = libSimpleLog;\n\n\t\t// Create an object address resolver and map in the functions\n\t\tthis.objectAddressCheckAddressExists = new libObjectAddressCheckAddressExists(this.logInfo, this.logError);\n\t\tthis.objectAddressGetValue = new libObjectAddressGetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressSetValue = new libObjectAddressSetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressDeleteValue = new libObjectAddressDeleteValue(this.logInfo, this.logError);\n\n\t\tif (!this.options.hasOwnProperty('defaultValues'))\n\t\t{\n\t\t\tthis.options.defaultValues = (\n\t\t\t\t{\n\t\t\t\t\t\"String\": \"\",\n\t\t\t\t\t\"Number\": 0,\n\t\t\t\t\t\"Float\": 0.0,\n\t\t\t\t\t\"Integer\": 0,\n\t\t\t\t\t\"Boolean\": false,\n\t\t\t\t\t\"Binary\": 0,\n\t\t\t\t\t\"DateTime\": 0,\n\t\t\t\t\t\"Array\": [],\n\t\t\t\t\t\"Object\": {},\n\t\t\t\t\t\"Null\": null\n\t\t\t\t});\n\t\t}\n\t\tif (!this.options.hasOwnProperty('strict'))\n\t\t{\n\t\t\tthis.options.strict = false;\n\t\t}\n\n\t\tthis.scope = undefined;\n\t\tthis.elementAddresses = undefined;\n\t\tthis.elementHashes = undefined;\n\t\tthis.elementDescriptors = undefined;\n\n\t\tthis.reset();\n\n\t\tif (typeof(this.options) === 'object')\n\t\t{\n\t\t\tthis.loadManifest(this.options);\n\t\t}\n\n\t\tthis.schemaManipulations = new libSchemaManipulation(this.logInfo, this.logError);\n\t\tthis.objectAddressGeneration = new libObjectAddressGeneration(this.logInfo, this.logError);\n\n\t\tthis.hashTranslations = new libHashTranslation(this.logInfo, this.logError);\n\t}\n\n\t/*************************************************************************\n\t * Schema Manifest Loading, Reading, Manipulation and Serialization Functions\n\t */\n\n\t// Reset critical manifest properties\n\treset()\n\t{\n\t\tthis.scope = 'DEFAULT';\n\t\tthis.elementAddresses = [];\n\t\tthis.elementHashes = {};\n\t\tthis.elementDescriptors = {};\n\t}\n\n\tclone()\n\t{\n\t\t// Make a copy of the options in-place\n\t\tlet tmpNewOptions = JSON.parse(JSON.stringify(this.options));\n\n\t\tlet tmpNewManyfest = new Manyfest(this.getManifest(), this.logInfo, this.logError, tmpNewOptions);\n\n\t\t// Import the hash translations\n\t\ttmpNewManyfest.hashTranslations.addTranslation(this.hashTranslations.translationTable);\n\n\t\treturn tmpNewManyfest;\n\t}\n\n\t// Deserialize a Manifest from a string\n\tdeserialize(pManifestString)\n\t{\n\t\t// TODO: Add guards for bad manifest string\n\t\treturn this.loadManifest(JSON.parse(pManifestString));\n\t}\n\n\t// Load a manifest from an object\n\tloadManifest(pManifest)\n\t{\n\t\tif (typeof(pManifest) !== 'object')\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading manifest; expecting an object but parameter was type ${typeof(pManifest)}.`);\n\t\t}\n\n\t\tlet tmpManifest = (typeof(pManifest) == 'object') ? pManifest : {};\n\n\t\tlet tmpDescriptorKeys = Object.keys(_DefaultConfiguration);\n\n\t\tfor (let i = 0; i < tmpDescriptorKeys.length; i++)\n\t\t{\n\t\t\tif (!tmpManifest.hasOwnProperty(tmpDescriptorKeys[i]))\n\t\t\t{\n\t\t\t\ttmpManifest[tmpDescriptorKeys[i]] = JSON.parse(JSON.stringify(_DefaultConfiguration[tmpDescriptorKeys[i]]));\n\t\t\t}\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Scope'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Scope) === 'string')\n\t\t\t{\n\t\t\t\tthis.scope = tmpManifest.Scope;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest; expecting a string but property was type ${typeof(tmpManifest.Scope)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest object.  Property \"Scope\" does not exist in the root of the object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Descriptors'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Descriptors) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpDescriptionAddresses = Object.keys(tmpManifest.Descriptors);\n\t\t\t\tfor (let i = 0; i < tmpDescriptionAddresses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.addDescriptor(tmpDescriptionAddresses[i], tmpManifest.Descriptors[tmpDescriptionAddresses[i]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading description object from manifest object.  Expecting an object in 'Manifest.Descriptors' but the property was type ${typeof(tmpManifest.Descriptors)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object description from manifest object.  Property \"Descriptors\" does not exist in the root of the Manifest object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('HashTranslations'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.HashTranslations) === 'object')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < tmpManifest.HashTranslations.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// Each translation is \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Serialize the Manifest to a string\n\tserialize()\n\t{\n\t\treturn JSON.stringify(this.getManifest());\n\t}\n\n\tgetManifest()\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tScope: this.scope,\n\t\t\t\tDescriptors: JSON.parse(JSON.stringify(this.elementDescriptors)),\n\t\t\t\tHashTranslations: JSON.parse(JSON.stringify(this.hashTranslations.translationTable))\n\t\t\t});\n\t}\n\n\t// Add a descriptor to the manifest\n\taddDescriptor(pAddress, pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) === 'object')\n\t\t{\n\t\t\t// Add the Address into the Descriptor if it doesn't exist:\n\t\t\tif (!pDescriptor.hasOwnProperty('Address'))\n\t\t\t{\n\t\t\t\tpDescriptor.Address = pAddress;\n\t\t\t}\n\n\t\t\tif (!this.elementDescriptors.hasOwnProperty(pAddress))\n\t\t\t{\n\t\t\t\tthis.elementAddresses.push(pAddress);\n\t\t\t}\n\n\t\t\t// Add the element descriptor to the schema\n\t\t\tthis.elementDescriptors[pAddress] = pDescriptor;\n\n\t\t\t// Always add the address as a hash\n\t\t\tthis.elementHashes[pAddress] = pAddress;\n\n\t\t\tif (pDescriptor.hasOwnProperty('Hash'))\n\t\t\t{\n\t\t\t\t// TODO: Check if this is a good idea or not..\n\t\t\t\t//       Collisions are bound to happen with both representations of the address/hash in here and developers being able to create their own hashes.\n\t\t\t\tthis.elementHashes[pDescriptor.Hash] = pAddress;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpDescriptor.Hash = pAddress;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object descriptor for address '${pAddress}' from manifest object.  Expecting an object but property was type ${typeof(pDescriptor)}.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetDescriptorByHash(pHash)\n\t{\n\t\treturn this.getDescriptor(this.resolveHashAddress(pHash));\n\t}\n\n\tgetDescriptor(pAddress)\n\t{\n\t\treturn this.elementDescriptors[pAddress];\n\t}\n\n\t// execute an action function for each descriptor\n\teachDescriptor(fAction)\n\t{\n        let tmpDescriptorAddresses = Object.keys(this.elementDescriptors);\n        for (let i = 0; i < tmpDescriptorAddresses.length; i++)\n        {\n            fAction(this.elementDescriptors[tmpDescriptorAddresses[i]]);\n        }\n\n\t}\n\n\t/*************************************************************************\n\t * Beginning of Object Manipulation (read & write) Functions\n\t */\n\t// Check if an element exists by its hash\n\tcheckAddressExistsByHash (pObject, pHash)\n\t{\n\t\treturn this.checkAddressExists(pObject,this.resolveHashAddress(pHash));\n\t}\n\n\t// Check if an element exists at an address\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\treturn this.objectAddressCheckAddressExists.checkAddressExists(pObject, pAddress);\n\t}\n\n\t// Turn a hash into an address, factoring in the translation table.\n\tresolveHashAddress(pHash)\n\t{\n\t\tlet tmpAddress = undefined;\n\n\t\tlet tmpInElementHashTable = this.elementHashes.hasOwnProperty(pHash);\n\t\tlet tmpInTranslationTable = this.hashTranslations.translationTable.hasOwnProperty(pHash);\n\n\t\t// The most straightforward: the hash exists, no translations.\n\t\tif (tmpInElementHashTable && !tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[pHash];\n\t\t}\n\t\t// There is a translation from one hash to another, and, the elementHashes contains the pointer end\n\t\telse if (tmpInTranslationTable && this.elementHashes.hasOwnProperty(this.hashTranslations.translate(pHash)))\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[this.hashTranslations.translate(pHash)];\n\t\t}\n\t\t// Use the level of indirection only in the Translation Table\n\t\telse if (tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.hashTranslations.translate(pHash);\n\t\t}\n\t\t// Just treat the hash as an address.\n\t\t// TODO: Discuss this ... it is magic but controversial\n\t\telse\n\t\t{\n\t\t\ttmpAddress = pHash;\n\t\t}\n\n\t\treturn tmpAddress;\n\t}\n\n\t// Get the value of an element by its hash\n\tgetValueByHash (pObject, pHash)\n\t{\n\t\tlet tmpValue = this.getValueAtAddress(pObject, this.resolveHashAddress(pHash));\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptorByHash(pHash));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\tlet tmpValue = this.objectAddressGetValue.getValueAtAddress(pObject, pAddress);\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptor(pAddress));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Set the value of an element by its hash\n\tsetValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.setValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressSetValue.setValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Delete the value of an element by its hash\n\tdeleteValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.deleteValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressDeleteValue.deleteValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Validate the consistency of an object against the schema\n\tvalidate(pObject)\n\t{\n\t\tlet tmpValidationData =\n\t\t{\n\t\t\tError: null,\n\t\t\tErrors: [],\n\t\t\tMissingElements:[]\n\t\t};\n\n\t\tif (typeof(pObject) !== 'object')\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Expected passed in object to be type object but was passed in ${typeof(pObject)}`);\n\t\t}\n\n\t\tlet addValidationError = (pAddress, pErrorMessage) =>\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Element at address \"${pAddress}\" ${pErrorMessage}.`);\n\t\t};\n\n\t\t// Now enumerate through the values and check for anomalies based on the schema\n\t\tfor (let i = 0; i < this.elementAddresses.length; i++)\n\t\t{\n\t\t\tlet tmpDescriptor = this.getDescriptor(this.elementAddresses[i]);\n\t\t\tlet tmpValueExists = this.checkAddressExists(pObject, tmpDescriptor.Address);\n\t\t\tlet tmpValue = this.getValueAtAddress(pObject, tmpDescriptor.Address);\n\n\t\t\tif ((typeof(tmpValue) == 'undefined') || !tmpValueExists)\n\t\t\t{\n\t\t\t\t// This will technically mean that `Object.Some.Value = undefined` will end up showing as \"missing\"\n\t\t\t\t// TODO: Do we want to do a different message based on if the property exists but is undefined?\n\t\t\t\ttmpValidationData.MissingElements.push(tmpDescriptor.Address);\n\t\t\t\tif (tmpDescriptor.Required || this.options.strict)\n\t\t\t\t{\n\t\t\t\t\taddValidationError(tmpDescriptor.Address, 'is flagged REQUIRED but is not set in the object');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now see if there is a data type specified for this element\n\t\t\tif (tmpDescriptor.DataType)\n\t\t\t{\n\t\t\t\tlet tmpElementType = typeof(tmpValue);\n\t\t\t\tswitch(tmpDescriptor.DataType.toString().trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpValueString = tmpValue.toString();\n\t\t\t\t\t\t\tif (tmpValueString.indexOf('.') > -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// TODO: Is this an error?\n\t\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but has a decimal point in the number.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DateTime':\n\t\t\t\t\t\tlet tmpValueDate = new Date(tmpValue);\n\t\t\t\t\t\tif (tmpValueDate.toString() == 'Invalid Date')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is not parsable as a Date by Javascript`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Check if this is a string, in the default case\n\t\t\t\t\t\t// Note this is only when a DataType is specified and it is an unrecognized data type.\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} (which auto-converted to String because it was unrecognized) but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpValidationData;\n\t}\n\n\t// Returns a default value, or, the default value for the data type (which is overridable with configuration)\n\tgetDefaultValue(pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) != 'object')\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (pDescriptor.hasOwnProperty('Default'))\n\t\t{\n\t\t\treturn pDescriptor.Default;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Default to a null if it doesn't have a type specified.\n\t\t\t// This will ensure a placeholder is created but isn't misinterpreted.\n\t\t\tlet tmpDataType = (pDescriptor.hasOwnProperty('DataType')) ? pDescriptor.DataType : 'String';\n\t\t\tif (this.options.defaultValues.hasOwnProperty(tmpDataType))\n\t\t\t{\n\t\t\t\treturn this.options.defaultValues[tmpDataType];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// give up and return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enumerate through the schema and populate default values if they don't exist.\n\tpopulateDefaults(pObject, pOverwriteProperties)\n\t{\n\t\treturn this.populateObject(pObject, pOverwriteProperties,\n\t\t\t// This just sets up a simple filter to see if there is a default set.\n\t\t\t(pDescriptor) =>\n\t\t\t{\n\t\t\t\treturn pDescriptor.hasOwnProperty('Default');\n\t\t\t});\n\t}\n\n\t// Forcefully populate all values even if they don't have defaults.\n\t// Based on type, this can do unexpected things.\n\tpopulateObject(pObject, pOverwriteProperties, fFilter)\n\t{\n\t\t// Automatically create an object if one isn't passed in.\n\t\tlet tmpObject = (typeof(pObject) === 'object') ? pObject : {};\n\t\t// Default to *NOT OVERWRITING* properties\n\t\tlet tmpOverwriteProperties = (typeof(pOverwriteProperties) == 'undefined') ? false : pOverwriteProperties;\n\t\t// This is a filter function, which is passed the schema and allows complex filtering of population\n\t\t// The default filter function just returns true, populating everything.\n\t\tlet tmpFilterFunction = (typeof(fFilter) == 'function') ? fFilter : (pDescriptor) => { return true; };\n\n\t\tthis.elementAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpDescriptor = this.getDescriptor(pAddress);\n\t\t\t\t// Check the filter function to see if this is an address we want to set the value for.\n\t\t\t\tif (tmpFilterFunction(tmpDescriptor))\n\t\t\t\t{\n\t\t\t\t\t// If we are overwriting properties OR the property does not exist\n\t\t\t\t\tif (tmpOverwriteProperties || !this.checkAddressExists(tmpObject, pAddress))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setValueAtAddress(tmpObject, pAddress, this.getDefaultValue(tmpDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpObject;\n\t}\n};\n\nmodule.exports = Manyfest;","var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","const libFableServiceBase = require('fable-serviceproviderbase')\n\nconst defaultPictSettings = (\n\t{\n\t\tName: 'DefaultPictApplication',\n\n\t\t// The main \"viewport\" is the view that is used to host our application\n\t\tMainViewportViewIdentifier: 'Default-View',\n\t\tMainViewportRenderableHash: false,\n\t\tMainViewportDestinationAddress: false,\n\t\tMainViewportDefaultDataAddress: false,\n\n\t\t// Whether or not we should automatically render the main viewport after we initialize the pict application\n\t\tAutoSolveAfterInitialize: true,\n\t\tAutoRenderMainViewportViewAfterInitialize: true,\n\n\t\tManifests: {},\n\t\t// The prefix to prepend on all template destination hashes\n\t\tIdentifierAddressPrefix: 'PICT-'\n\t});\n\nclass PictApplication extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tthis.serviceType = 'PictApplication';\n\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict state\n\t\tthis.AppData = this.fable.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastMarshalFromViewsTimestamp = false;\n\t\tthis.lastMarshalToViewsTimestamp = false;\n\n\t\t// Load all the manifests for the application\n\t\tlet tmpManifestKeys = Object.keys(this.options.Manifests);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++)\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.fable.serviceManager.instantiateServiceProvider('Manifest', this.options.Manifests[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Solve All Views                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing solve() function...`)\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpViewsToSolve[i].solve();\n\t\t}\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\t// Walk through any loaded views and solve them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoSolveWithApp)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoSolveOrdinal - b.options.AutoSolveOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToSolve[i].solveAsync.bind(tmpViewsToSolve[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Initialize Application                   */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\ttmpViewsToInitialize[i].initialize();\n\t\t\t}\n\t\t\tthis.onAfterInitialize();\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Solve the template synchronously\n\t\t\t\tthis.solve();\n\t\t\t}\n\t\t\t// Now check and see if we should automatically render as well\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Render the template synchronously\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallBack)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\t// TODO: Some optimization cleverness could be gained by grouping them into a parallelized async operation, by ordinal.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority\n\t\t\t// If they are all the default priority 0, it will end up being add order due to JSON Object Property Key order stuff\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = tmpViewsToInitialize[i];\n\t\t\t\ttmpAnticipate.anticipate(tmpView.initializeAsync.bind(tmpView));\n\t\t\t}\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.solveAsync.bind(this));\n\t\t\t}\n\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.renderMainViewportAsync.bind(this));\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallBack();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data From All Views              */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalFromViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalFromViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalFromViews[i].marshalFromView();\n\t\t}\n\t\tthis.onMarshalFromViews();\n\t\tthis.onAfterMarshalFromViews();\n\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalFromViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalFromViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalFromViews[i].marshalFromViewAsync.bind(tmpViewsToMarshalFromViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data To All Views                */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalToViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalToViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalToViews[i].marshalToView();\n\t\t}\n\t\tthis.onMarshalToViews();\n\t\tthis.onAfterMarshalToViews();\n\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalToViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalToViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalToViews[i].marshalToViewAsync.bind(tmpViewsToMarshalToViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Render View                              */\n\t/* -------------------------------------------------------------------------- */\n\trender(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\t// Now get the view (by hash) from the loaded views\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not render from View ${tmpViewIdentifier} because it is not a valid view.`);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn tmpView.render(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress);\n\t}\n\trenderMainViewport()\n\t{\n\t\treturn this.render(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress);\n\t}\n\n\trenderAsync(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tlet tmpErrorMessage = `PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not asynchronously render from View ${tmpViewIdentifier} because it is not a valid view.`;\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.error(tmpErrorMessage);\n\t\t\t}\n\t\t\treturn fCallback(new Error(tmpErrorMessage));\n\t\t}\n\n\t\treturn tmpView.renderAsync(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress, fCallback);\n\t}\n\trenderMainViewportAsync(fCallback)\n\t{\n\t\treturn this.renderAsync(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress, fCallback);\n\t}\n}\n\nmodule.exports = PictApplication;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst defaultPictViewSettings = (\n\t{\n\t\tDefaultRenderable: false,\n\t\tDefaultDestinationAddress: false,\n\t\tDefaultTemplateRecordAddress: false,\n\n\t\tViewIdentifier: false,\n\n\t\t// If this is set to true, when the App initializes this will.\n\t\t// After the App initializes, initialize will be called as soon as it's added.\n\t\tAutoInitialize: true,\n\t\tAutoInitializeOrdinal: 0,\n\n\t\t// If this is set to true, when the App autorenders (on load) this will.\n\t\t// After the App initializes, render will be called as soon as it's added.\n\t\tAutoRender: true,\n\t\tAutoRenderOrdinal: 0,\n\n\t\tAutoSolveWithApp: true,\n\t\tAutoSolveOrdinal: 0,\n\n\t\tCSSHash: false,\n\t\tCSS: false,\n\t\tCSSProvider: false,\n\t\tCSSPriority: 500,\n\n\t\tTemplates: [],\n\n\t\tDefaultTemplates: [],\n\n\t\tRenderables: [],\n\n\t\tManifests: {}\n\t});\n\nclass PictView extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Intersect default options, parent constructor, service information\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictViewSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tif (!this.options.ViewIdentifier)\n\t\t{\n\t\t\tthis.options.ViewIdentifier = `AutoViewID-${this.fable.getUUID()}`;\n\t\t}\n\t\tthis.serviceType = 'PictView';\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict application state\n\t\tthis.AppData = this.pict.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastRenderedTimestamp = false;\n\t\tthis.lastMarshalFromViewTimestamp = false;\n\t\tthis.lastMarshalToViewTimestamp = false;\n\n\t\t// Load all templates from the array in the options\n\t\t// Templates are in the form of {Hash:'Some-Template-Hash',Template:'Template content',Source:'TemplateSource'}\n\t\tfor (let i = 0; i < this.options.Templates.length; i++)\n\t\t{\n\t\t\tlet tmpTemplate = this.options.Templates[i];\n\n\t\t\tif (!tmpTemplate.hasOwnProperty('Hash') || !tmpTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Template ${i} in the options array.`, tmpTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addTemplate(tmpTemplate.Hash, tmpTemplate.Template, tmpTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load all default templates from the array in the options\n\t\t// Templates are in the form of {Prefix:'',Postfix:'-List-Row',Template:'Template content',Source:'TemplateSourceString'}\n\t\tfor (let i = 0; i < this.options.DefaultTemplates.length; i++)\n\t\t{\n\t\t\tlet tmpDefaultTemplate = this.options.DefaultTemplates[i];\n\n\t\t\tif (!tmpDefaultTemplate.hasOwnProperty('Postfix') || !tmpDefaultTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Default Template ${i} in the options array.`, tmpDefaultTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpDefaultTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpDefaultTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addDefaultTemplate(tmpDefaultTemplate.Prefix, tmpDefaultTemplate.Postfix, tmpDefaultTemplate.Template, tmpDefaultTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load the CSS if it's available\n\t\tif (this.options.CSS)\n\t\t{\n\t\t\tlet tmpCSSHash = this.options.CSSHash ? this.options.CSSHash : `View-${this.options.ViewIdentifier}`;\n\t\t\tlet tmpCSSProvider = this.options.CSSProvider ? this.options.CSSProvider : tmpCSSHash;\n\t\t\tthis.pict.CSSMap.addCSS(tmpCSSHash, this.options.CSS, tmpCSSProvider, this.options.CSSPriority);\n\t\t}\n\n\t\t// Load all renderables\n\t\t// Renderables are launchable renderable instructions with templates\n\t\t// They look as such: {Identifier:'ContentEntry', TemplateHash:'Content-Entry-Section-Main', ContentDestinationAddress:'#ContentSection', RecordAddress:'AppData.Content.DefaultText', ManifestTransformation:'ManyfestHash', ManifestDestinationAddress:'AppData.Content.DataToTransformContent'}\n\t\t// The only parts that are necessary are Identifier and Template\n\t\t// A developer can then do render('ContentEntry') and it just kinda works.  Or they can override the ContentDestinationAddress\n\t\tthis.renderables = {};\n\t\tfor (let i = 0; i < this.options.Renderables.length; i++)\n\t\t{\n\t\t\tlet tmpRenderable = this.options.Renderables[i];\n\t\t\tthis.addRenderable(this.options.Renderables[i]);\n\t\t}\n\t}\n\n\taddRenderable(pRenderableHash, pTemplateHash, pDefaultTemplateDataAddress, pDefaultDestinationAddress, pRenderMethod)\n\t{\n\t\tlet tmpRenderable = false;\n\n\t\tif (typeof(pRenderableHash) == 'object')\n\t\t{\n\t\t\t// The developer passed in the renderable as an object.\n\t\t\t// Use theirs instead!\n\t\t\ttmpRenderable = pRenderableHash;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpRenderMethod = (typeof(pRenderMethod) !== 'string') ? pRenderMethod : 'replace';\n\t\t\ttmpRenderable = (\n\t\t\t\t{\n\t\t\t\t\tRenderableHash: pRenderableHash,\n\t\t\t\t\tTemplateHash: pTemplateHash,\n\t\t\t\t\tDefaultTemplateDataAddress: pDefaultTemplateDataAddress,\n\t\t\t\t\tDefaultDestinationAddress: pDefaultDestinationAddress,\n\t\t\t\t\tRenderMethod: tmpRenderMethod\n\t\t\t\t});\n\t\t}\n\n\t\tif ((typeof(tmpRenderable.RenderableHash) != 'string') || (typeof(tmpRenderable.TemplateHash) != 'string'))\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Renderable; RenderableHash or TemplateHash are invalid.`, tmpRenderable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} adding renderable [${tmpRenderable.RenderableHash}] pointed to template ${tmpRenderable.TemplateHash}.`);\n\t\t\t}\n\n\t\t\tthis.renderables[tmpRenderable.RenderableHash] = tmpRenderable;\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                        Code Section: Initialization                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\tthis.onAfterInitialize();\n\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallback)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallback();\n\t\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Render                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeRender(pRenderable, pRenderDestinationAddress, pData)\n\t{\n\t\t// Overload this to mess with stuff before the content gets generated from the template\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeRenderAsync(pRenderable, pRenderDestinationAddress, pData, fCallback)\n\t{\n\t\tthis.onBeforeRender(pRenderable, pRenderDestinationAddress, pData);\n\t\treturn fCallback();\n\t}\n\n\trender(pRenderable, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it is not a valid renderable.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\tlet tmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\t// Generate the content output from the template and data\n\t\tlet tmpContent = this.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData)\n\n\t\t// Assign the content to the destination address\n\t\tswitch(tmpRenderable.RenderMethod)\n\t\t{\n\t\t\tcase 'append':\n\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'prepend':\n\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'append_once':\n\t\t\t\t// Try to find the content in the destination address\n\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t{\n\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\t}\n\t\t\tcase 'replace':\n\t\t\tdefault:\n\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Execute the developer-overridable post-render behavior\n\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, tmpContent)\n\n\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\treturn true;\n\t}\n\trenderAsync(pRenderable, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`));\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`));\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn fCallback(Error(`Could not render ${tmpRenderableHash}`));\n\t\t}\n\n\t\tlet tmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\tlet tmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\t// Render the template (asynchronously)\n\t\tthis.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData,\n\t\t\t(pError, pContent) =>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render (asynchronously) ${tmpRenderableHash} (param ${pRenderable}) because it did not parse the template.`, pError);\n\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t}\n\n\t\t\t\t// Assign the content to the destination address\n\t\t\t\tswitch(tmpRenderable.RenderMethod)\n\t\t\t\t{\n\t\t\t\t\tcase 'append':\n\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'prepend':\n\t\t\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'append_once':\n\t\t\t\t\t\t// Try to find the content in the destination address\n\t\t\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'replace':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Execute the developer-overridable post-render behavior\n\t\t\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, pContent)\n\n\t\t\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\t\t\treturn fCallback(null, pContent);\n\t\t\t});\n\t}\n\n\tonAfterRender()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterRenderAsync(fCallback)\n\t{\n\t\tthis.onAfterRender();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Solver                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal From View                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalFromView();\n\t\tthis.onMarshalFromView();\n\t\tthis.onAfterMarshalFromView();\n\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalFromViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal To View                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalToView();\n\t\tthis.onMarshalToView();\n\t\tthis.onAfterMarshalToView();\n\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalToViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.serviceManager.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToView();\n\t\treturn fCallback();\n\t}\n}\n\nmodule.exports = PictView;","/**\n* Precedent Meta-Templating\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Process text streams, parsing out meta-template expressions.\n*/\nvar libWordTree = require(`./WordTree.js`);\nvar libStringParser = require(`./StringParser.js`);\n\nclass Precedent\n{\n\t/**\n\t * Precedent Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser();\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData);\n\t}\n}\n\nmodule.exports = Precedent;\n","/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t */\n\tparseString (pString, pParseTree, pData)\n\t{\n\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\tfor (var i = 0; i < pString.length; i++)\n\t\t{\n\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData);\n\t\t}\n\n\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\treturn tmpParserState.Output;\n\t}\n}\n\nmodule.exports = StringParser;\n","/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            strictNullHandling,\n            skipNulls,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n","/*! simple-concat. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function (stream, cb) {\n  var chunks = []\n  stream.on('data', function (chunk) {\n    chunks.push(chunk)\n  })\n  stream.once('end', function () {\n    if (cb) cb(null, Buffer.concat(chunks))\n    cb = null\n  })\n  stream.once('error', function (err) {\n    if (cb) cb(err)\n    cb = null\n  })\n}\n","/*! simple-get. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const originalHost = opts.hostname // hostname before potential redirect\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api\n      // If redirected host is different than original host, drop headers to prevent cookie leak (#73)\n      if (redirectHost !== null && redirectHost !== originalHost) {\n        delete opts.headers.cookie\n        delete opts.headers.authorization\n      }\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};","/*\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nvar punycode = require('punycode');\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n/*\n * define these here so at least they only have to be\n * compiled once on the first module load.\n */\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/,\n\n  /*\n   * RFC 2396: characters reserved for delimiting URLs.\n   * We actually just auto-escape these.\n   */\n  delims = [\n    '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'\n  ],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = [\n    '{', '}', '|', '\\\\', '^', '`'\n  ].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  /*\n   * Characters that are never ever allowed in a hostname.\n   * Note that any invalid chars are also handled, but these\n   * are the ones that are *expected* to be seen, so we fast-path\n   * them.\n   */\n  nonHostChars = [\n    '%', '/', '?', ';', '#'\n  ].concat(autoEscape),\n  hostEndingChars = [\n    '/', '?', '#'\n  ],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    http: true,\n    https: true,\n    ftp: true,\n    gopher: true,\n    file: true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  },\n  querystring = require('qs');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && typeof url === 'object' && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (typeof url !== 'string') {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  /*\n   * Copy chrome, IE, opera backslash-handling behavior.\n   * Back slashes before the query string get converted to forward slashes\n   * See: https://code.google.com/p/chromium/issues/detail?id=25916\n   */\n  var queryIndex = url.indexOf('?'),\n    splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  /*\n   * trim before proceeding.\n   * This is to support parse stuff like \"  http://foo.com  \\n\"\n   */\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  /*\n   * figure out if it's got a host\n   * user@server is *always* interpreted as a hostname, and url\n   * resolution will treat //foo/bar as host=foo,path=bar because that's\n   * how the browser resolves relative URLs.\n   */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@/]+@[^@/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || (proto && !slashedProtocol[proto]))) {\n\n    /*\n     * there's a hostname.\n     * the first instance of /, ?, ;, or # ends the host.\n     *\n     * If there is an @ in the hostname, then non-host chars *are* allowed\n     * to the left of the last @ sign, unless some host-ending character\n     * comes *before* the @-sign.\n     * URLs are obnoxious.\n     *\n     * ex:\n     * http://a@b@c/ => user:a@b host:c\n     * http://a@b?@c => user:a host:c path:/?@c\n     */\n\n    /*\n     * v0.12 TODO(isaacs): This is not quite how Chrome does things.\n     * Review our test case against browsers more comprehensively.\n     */\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n\n    /*\n     * at this point, either we have an explicit point where the\n     * auth portion cannot go past, or the last @ char is the decider.\n     */\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      /*\n       * atSign must be in auth portion.\n       * http://a@b/c@d => host:b auth:a path:/c@d\n       */\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    /*\n     * Now we have a portion which is definitely the auth.\n     * Pull that off.\n     */\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) { hostEnd = rest.length; }\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    /*\n     * we've indicated that there is a hostname,\n     * so even if it's empty, it has to be present.\n     */\n    this.hostname = this.hostname || '';\n\n    /*\n     * if hostname begins with [ and ends with ]\n     * assume that it's an IPv6 address.\n     */\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              /*\n               * we replace non-ASCII char with a temporary placeholder\n               * we need this to make sure size of hostname is not\n               * broken by replacing non-ASCII by nothing\n               */\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      /*\n       * IDNA Support: Returns a punycoded representation of \"domain\".\n       * It only converts parts of the domain name that\n       * have non-ASCII characters, i.e. it doesn't matter if\n       * you call it with a domain that already is ASCII-only.\n       */\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    /*\n     * strip [ and ] from the hostname\n     * the host field still retains them, though\n     */\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  /*\n   * now rest is set to the post-host stuff.\n   * chop off any delim chars.\n   */\n  if (!unsafeProtocol[lowerProto]) {\n\n    /*\n     * First, make 100% sure that any \"autoEscape\" chars get\n     * escaped, even if encodeURIComponent doesn't think they\n     * need to be.\n     */\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) { continue; }\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  /*\n   * ensure it's an object, and not a string url.\n   * If it's an obj, this is a no-op.\n   * this way, you can call url_format() on strings\n   * to clean up potentially wonky urls.\n   */\n  if (typeof obj === 'string') { obj = urlParse(obj); }\n  if (!(obj instanceof Url)) { return Url.prototype.format.call(obj); }\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n    pathname = this.pathname || '',\n    hash = this.hash || '',\n    host = false,\n    query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && typeof this.query === 'object' && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query, {\n      arrayFormat: 'repeat',\n      addQueryPrefix: false\n    });\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') { protocol += ':'; }\n\n  /*\n   * only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n   * unless they had them to begin with.\n   */\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') { pathname = '/' + pathname; }\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') { hash = '#' + hash; }\n  if (search && search.charAt(0) !== '?') { search = '?' + search; }\n\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) { return relative; }\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (typeof relative === 'string') {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  /*\n   * hash is always overridden, no matter what.\n   * even href=\"\" will remove it.\n   */\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') { result[rkey] = relative[rkey]; }\n    }\n\n    // urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.pathname = '/';\n      result.path = result.pathname;\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    /*\n     * if it's a known url protocol, then changing\n     * the protocol does weird things\n     * first, if it's not file:, then we MUST have a host,\n     * and if there was a path\n     * to begin with, then we MUST have a path.\n     * if it is file:, then the host is dropped,\n     * because that's known to be hostless.\n     * anything else is assumed to be absolute.\n     */\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift())) { }\n      if (!relative.host) { relative.host = ''; }\n      if (!relative.hostname) { relative.hostname = ''; }\n      if (relPath[0] !== '') { relPath.unshift(''); }\n      if (relPath.length < 2) { relPath.unshift(''); }\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n    isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n    mustEndAbs = isRelAbs || isSourceAbs || (result.host && relative.pathname),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    relPath = relative.pathname && relative.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  /*\n   * if the url is a non-slashed url, then relative\n   * links like ../.. should be able\n   * to crawl up to the hostname, as well.  This is strange.\n   * result.protocol has already been set by now.\n   * Later on, put the first path part into the host field.\n   */\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') { srcPath[0] = result.host; } else { srcPath.unshift(result.host); }\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') { relPath[0] = relative.host; } else { relPath.unshift(relative.host); }\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    /*\n     * it's relative\n     * throw away the existing file, and take the new path instead.\n     */\n    if (!srcPath) { srcPath = []; }\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search != null) {\n    /*\n     * just pull out the search.\n     * like href='?foo'.\n     * Put this after the other two cases because it simplifies the booleans\n     */\n    if (psychotic) {\n      result.host = srcPath.shift();\n      result.hostname = result.host;\n      /*\n       * occationaly the auth can get stuck only in host\n       * this especially happens in cases like\n       * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n       */\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.hostname = authInHost.shift();\n        result.host = result.hostname;\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    // to support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    /*\n     * no path at all.  easy.\n     * we've already handled the other stuff above.\n     */\n    result.pathname = null;\n    // to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  /*\n   * if a url ENDs in . or .., then it must get a trailing slash.\n   * however, if it ends in anything else non-slashy,\n   * then it must NOT get a trailing slash.\n   */\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === '';\n\n  /*\n   * strip single dots, resolve double dots to parent dir\n   * if the path tries to go above the root, `up` ends up > 0\n   */\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    result.host = result.hostname;\n    /*\n     * occationaly the auth can get stuck only in host\n     * this especially happens in cases like\n     * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n     */\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.hostname = authInHost.shift();\n      result.host = result.hostname;\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (srcPath.length > 0) {\n    result.pathname = srcPath.join('/');\n  } else {\n    result.pathname = null;\n    result.path = null;\n  }\n\n  // to support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst defaultConfiguration = (\n\t{\n\t\t// This is the address for the <script /> tag that contains the CSS.\n\t\tCSSElementAddress: '#PICT-CSS'\n\t}\n)\n\nclass PictCSS extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\t// No merging of options necessary\n\t\tif (typeof(this.options.CSSElementAddress) === 'undefined')\n\t\t{\n\t\t\tthis.options.CSSElementAddress = defaultConfiguration.CSSElementAddress;\n\t\t}\n\n\t\tthis.inlineCSSMap = {};\n\t}\n\n\t// Add a CSS fragment to the CSS map (each view can have its own CSS fragment)\n\t// Hash is shared across all views, so if 10 views all load the \"My-Table-View\" fragment, it will only be loaded once.\n\taddCSS(pHash, pContent, pPriority, pProvider)\n\t{\n\t\tlet tmpPriority = (typeof(pPriority) !== 'undefined') ? pPriority : 1000;\n\t\tlet tmpProvidor = (typeof(pProvider) === 'string') ? pProvider : 'Unknown';\n\t\tthis.inlineCSSMap[pHash] = { Hash: pHash, Content: pContent, Provider: tmpProvidor, Priority:tmpPriority };\n\t}\n\n\tremoveCSS(pHash)\n\t{\n\t\tdelete this.inlineCSSMap[pHash];\n\t}\n\n\tgenerateCSS()\n\t{\n\t\tlet tmpCSS = '';\n\t\tlet tmpCSSHashes = Object.keys(this.inlineCSSMap);\n\t\t// Sort the hashes by Priority\n\t\ttmpCSSHashes.sort((a, b) => { return this.inlineCSSMap[a].Priority - this.inlineCSSMap[b].Priority; });\n\t\tfor (let i = 0; i < tmpCSSHashes.length; i++)\n\t\t{\n\t\t\tlet tmpCSSFragment = this.inlineCSSMap[tmpCSSHashes[i]];\n\t\t\tlet tmpCSSComment = tmpCSSFragment.Hash;\n\t\t\tif (tmpCSSFragment.Hash != tmpCSSFragment.Provider)\n\t\t\t{\n\t\t\t\ttmpCSSComment = `${tmpCSSComment} from ${tmpCSSFragment.Provider}`;\n\t\t\t}\n\t\t\ttmpCSS += `/* ${tmpCSSComment} */\\n${tmpCSSFragment.Content}\\n`;\n\t\t}\n\t\treturn tmpCSS;\n\t}\n\n\t// Inject the CSS into the magic DOM element for it\n\tinjectCSS()\n\t{\n\t\tthis.services.ContentAssignment.assignContent(this.options.CSSElementAddress, this.generateCSS());\n\t}\n}\n\nmodule.exports = PictCSS;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictContentAssignment extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictContentAssignment';\n\n\t\t// Check to see if we are running in a browser\n\t\tthis.inBrowser = false;\n\t\tthis.hasDocument = false;\n\t\tif (typeof (window) == 'object')\n\t\t{\n\t\t\tthis.inBrowser = true;\n\t\t\t// Now check that the browser has a document object\n\t\t\tif ((typeof (window.document) != 'undefined') && (typeof (window.document.querySelectorAll) == 'function'))\n\t\t\t{\n\t\t\t\tthis.hasDocument = true;\n\t\t\t}\n\t\t}\n\n\t\t// If we're in a browser, check to see if jQuery is available.\n\t\tthis.hasJquery = false;\n\t\tthis.jQuery = false;\n\t\tif (this.inBrowser && typeof (window.jQuery) !== 'undefined')\n\t\t{\n\t\t\tthis.hasJquery = true;\n\t\t}\n\n\t\t// API Consumers can craft their own assign function\n\t\tthis.customAssignFunction = false;\n\t\t// API Consumers can also craft their own prepend function\n\t\tthis.customPrependFunction = false;\n\t\t// API Consumers can also craft their own append function\n\t\tthis.customAppendFunction = false;\n\n\t\t// API Consumers can also craft their own read function\n\t\tthis.customReadFunction = false;\n\t\t// API Consumers can even craft their own get element function.\n\t\tthis.customGetElementFunction = false;\n\n\n\t}\n\n\tgetElement(pAddress)\n\t{\n\t\tif (this.customGetElementFunction)\n\t\t{\n\t\t\treturn this.customGetElementFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpElements = window.jQuery(pAddress);\n\t\t\tif (tmpElements.length == 0)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// TODO: This isn't the most efficient method, but it is the most compatible.\n\t\t\t\tlet tmpElementSet = [];\n\t\t\t\tfor (let i = 0; i < tmpElements.length; i++)\n\t\t\t\t{\n\t\t\t\t\ttmpElementSet.push(tmpElements[0]);\n\t\t\t\t}\n\t\t\t\treturn tmpElementSet;\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\treturn window.document.querySelectorAll(pAddress);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content GET ELEMENT for [${pAddress}] will return empty because none of the browser methods are available`);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tassignContent(pAddress, pContent)\n\t{\n\t\tif (this.customAssignFunction)\n\t\t{\n\t\t\treturn this.customAssignFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\n\t\t\t// Should we ensure we matched 1 and exactly 1 element?\n\t\t\t//if (tmpTargetElement && tmpTargetElement.length == 1)\n\t\t\t//{\n\t\t\t// Set the content\n\t\t\ttmpTargetElement.html(pContent);\n\t\t\t//}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'BUTTON':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\tcase 'A':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content ASSIGN to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tappendContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customAppendFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.append(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"beforeend\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content APPEND to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tprependContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customPrependFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.prepend(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"afterbegin\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content PREPEND in [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\treadContent(pAddress)\n\t{\n\t\tif (this.customReadFunction)\n\t\t{\n\t\t\treturn this.customReadFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\treturn tmpTargetElement.html();\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tif (tmpTargetElementSet.length < 1)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse if (tmpTargetElementSet.length == 1)\n\t\t\t{\n\t\t\t\tif ((tmpTargetElementSet[0].tagName == 'INPUT') || (tmpTargetElementSet[0].tagName == 'TEXTAREA'))\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].value;\n\t\t\t\t}\n\t\t\t\telse if (tmpTargetElementSet[0].tagName == 'SCRIPT')\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].text;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpTargetElementSet[0].innerHTML;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content READ from [${pAddress}]...`);\n\t\t\treturn '';\n\t\t}\n\t}\n\n\n\taddClass(pAddress, pClass)\n\t{\n\t\tif (this.customAddClassFunction)\n\t\t{\n\t\t\treturn this.customAddClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.addClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.add(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content ADDCLASS to [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\tremoveClass(pAddress, pClass)\n\t{\n\t\tif (this.customRemoveClassFunction)\n\t\t{\n\t\t\treturn this.customRemoveClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.remove(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVECLASS from [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\ttoggleClass(pAddress, pClass)\n\t{\n\t\t// STUB\n\t}\n\n\thasClass(pAddress, pClass)\n\t{\n\t\t// STUB\n\t}\n\n}\n\nmodule.exports = PictContentAssignment;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictDataProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictDataProvider';\n\t}\n\n    getDataByAddress(pAddress, pData)\n    {\n        let tmpData = (typeof(pData) === 'undefined') ? {} : pData;\n\n        return this.fable.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, pAddress);\n    }\n}\n\nmodule.exports = PictDataProvider;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictMeadowEntityProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictMeadowProvider';\n\n\t\tif (this.fable.settings.PictDefaultURLPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = this.fable.settings.PictDefaultURLPrefix;\n\t\t}\n\t\telse if (!this.options.urlPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = '/1.0/';\n\t\t}\n\n\t\tif (this.fable.settings.PictDefaultDownloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = this.fable.settings.PictDefaultDownloadBatchSize;\n\t\t}\n\t\telse if (!this.options.downloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = 100;\n\t\t}\n\n\t\tthis.restClient = this.fable.instantiateServiceProviderWithoutRegistration('RestClient');\n\n\t\tthis.cache = {};\n\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tinitializeCache(pEntity)\n\t{\n\t\t// This should not be happening as often as it's happening.\n\t\tif (!this.cache.hasOwnProperty(pEntity))\n\t\t{\n\t\t\tthis.cache[pEntity] = this.fable.instantiateServiceProviderWithoutRegistration('ObjectCache');\n\t\t\t// TODO: Make this a configuration?\n\t\t\t// For now cache for 30 seconds.\n\t\t\tthis.cache[pEntity].maxAge = 30000;\n\t\t\tthis.cache[pEntity].maxLength = 10000;\n\n\t\t\tthis.fable.Bundle[pEntity] = this.cache[pEntity].RecordMap;\n\t\t}\n\t}\n\n\tgetEntity (pEntity, pIDRecord, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tlet tmpPossibleRecord = this.cache[pEntity].read(pIDRecord);\n\n\t\t\t\tif (tmpPossibleRecord)\n\t\t\t\t{\n\t\t\t\t\treturn tmpPossibleRecord;\n\t\t\t\t}\n\n\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}/${pIDRecord}`\n\t\t\t\t\t});\n\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pBody)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.cache[pEntity].put(pBody, pIDRecord);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pBody);\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tgetEntitySet = function (pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// TODO: Should we test for too many record IDs here by string length?\n\t\t// FBL~ID${pDestinationEntity}~INN~${tmpIDRecordsCommaSeparated}\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\t()=>\n\t\t\t{\n\t\t\t\tlet tmpCountOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}s/Count/FilteredTo/${pMeadowFilterExpression}`\n\t\t\t\t\t});\n\t\t\t\ttmpCountOptions = this.prepareRequestOptions(tmpCountOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpCountOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Error getting bulk entity count of [${pEntity}] filtered to [${pMeadowFilterExpression}] from server [${tmpCountOptions.url}]: ${pError}`);\n\t\t\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet tmpRecordCount = 0;\n\t\t\t\t\t\tif (pBody.Count)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpRecordCount = pBody.Count;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpDownloadURIFragments = [];\n\t\t\t\t\t\tlet tmpDownloadBatchSize = this.options.downloadBatchSize;\n\t\t\t\t\t\tfor (let i = 0; i < (tmpRecordCount / tmpDownloadBatchSize); i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Generate each of the URI fragments to download\n\t\t\t\t\t\t\ttmpDownloadURIFragments.push(`${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${i*tmpDownloadBatchSize}/${tmpDownloadBatchSize}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpEntitySet = [];\n\t\t\t\t\t\t// Now run these in series (it's possible to parallelize but no reason to)\n\t\t\t\t\t\tthis.fable.Utility.eachLimit(tmpDownloadURIFragments, 1,\n\t\t\t\t\t\t\t(pURIFragment, fDownloadCallback)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\turl: `${this.options.urlPrefix}${pURIFragment}`\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\t\t\t\t\tthis.restClient.getJSON(pURIFragment,\n\t\t\t\t\t\t\t\t\t(pDownloadError, pDownloadResponse, pDownloadBody)=>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmpEntitySet = tmpEntitySet.concat(pDownloadBody);\n\t\t\t\t\t\t\t\t\t\t// Should we be caching each record?\n\t\t\t\t\t\t\t\t\t\treturn fDownloadCallback(pDownloadError);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(pFullDownloadError)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(pFullDownloadError, tmpEntitySet);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t});\n\t}\n}\n\nmodule.exports = PictMeadowEntityProvider;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictTemplateProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictTemplateProvider';\n\n        this.templates = {};\n        this.templateSources = {};\n\n        // Default templates are stored by prefix.\n        // The longest prefix match is used.\n        // Case sensitive.\n        this.defaultTemplates = [];\n\n        // This function can be overloaded to load templates from a database, in a page or other source.\n        this.loadTemplateFunction = (pTemplateHash) => { return false; };\n\t}\n\n    addTemplate(pTemplateHash, pTemplate, pTemplateSource)\n    {\n        this.templates[pTemplateHash] = pTemplate;\n\n        if (typeof(pTemplateSource) == 'string')\n        {\n            this.templateSources[pTemplateHash] = pTemplateSource;\n        }\n        else\n        {\n            this.templateSources[pTemplateHash] = `Direct addTemplate('${pTemplateHash}') function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`;\n        }\n    }\n\n    addDefaultTemplate(pPrefix, pPostfix, pTemplate, pSource)\n    {\n        let tmpSource = (typeof(pSource) == 'string') ? pSource : `Direct addDefaultTemplate('${pPrefix}','${pPostfix}',..) function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`\n        let tmpDefaultTemplate = {\n            prefix: pPrefix,\n            postfix: pPostfix,\n            template: pTemplate,\n            source: tmpSource\n        };\n        if (typeof(pTemplate) != 'string')\n        {\n            this.log.error('PictTemplateProvider.addDefaultTemplate: pTemplate is not a string.');\n        }\n        this.defaultTemplates.push(tmpDefaultTemplate);\n    }\n\n    checkDefaultTemplateHash(pTemplateHash)\n    {\n        /*\n         * Default templates are managed by postfix and prefix.  The use case is things like titles, headers, list \n         * wrappers, rows, etc.\n         *\n         * So we might have a default template for a list wrapper and it should expect \"-ListWrap\" as the postfix.\n         * And we might have a default template for a list row and it should expect \"-ListRow\" as the postfix.\n         * The list might have a \"-ListTitle\", or we might have shared titles and it would just be \"-Title\".\n         * \n         * The idea is to allow fallbacks on defaults.\n         */\n        for (let i = 0; i < this.defaultTemplates.length; i++)\n        {\n            if ((pTemplateHash.indexOf(this.defaultTemplates[i].postfix) == pTemplateHash.length - this.defaultTemplates[i].postfix.length)\n                && (pTemplateHash.indexOf(this.defaultTemplates[i].prefix) == 0))\n            {\n                this.templates[pTemplateHash] = this.defaultTemplates[i].template;\n                this.templateSources[pTemplateHash] = `Auto created in checkDefaultTemplateHash('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${this.defaultTemplates[i].prefix}]...[${this.defaultTemplates[i].postfix}]`;\n                return this.templates[pTemplateHash];\n            }\n        }\n        return false;\n    }\n\n    getTemplate(pTemplateHash)\n    {\n        // TODO: Optimize this.\n        // If the template doesn't exist, try to load it with the loading function\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.loadTemplate(pTemplateHash);\n        }\n        // If the loading function fails, try to load it from the default templates\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.checkDefaultTemplateHash(pTemplateHash);\n        }\n        if (this.templates.hasOwnProperty(pTemplateHash))\n        {\n            return this.templates[pTemplateHash];\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    loadTemplate(pTemplateHash)\n    {\n        let tmpTemplate = this.loadTemplateFunction(pTemplateHash);\n\n        if (tmpTemplate)\n        {\n            this.templates[pTemplateHash] = tmpTemplate.template;\n            this.templateSources[pTemplateHash] = `Loaded in loadTemplate('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${tmpTemplate.source}]`;\n\n        }\n\n        return tmpTemplate;\n    }\n}\n\nmodule.exports = PictTemplateProvider;","/**\n* @author <steven@velozo.com>\n*/\nconst libFable = require('fable');\n\nclass Pict extends libFable\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\tthis.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n\n\t\t// The templateProvider provides a basic key->template mapping with default fallback capabilities\n\t\tthis.addAndInstantiateServiceType('TemplateProvider', require('./Pict-Template-Provider.js'));\n\t\tthis.addAndInstantiateServiceType('EntityProvider',  require('./Pict-Meadow-EntityProvider.js'));\n\t\tthis.addAndInstantiateServiceType('DataProvider',  require('./Pict-DataProvider.js'));\n\t\tthis.addAndInstantiateServiceType('ContentAssignment',  require('./Pict-Content-Assignment.js'));\n\t\tthis.addAndInstantiateServiceType('CSSMap', require('./Pict-CSS.js'));\n\n\t\tthis.instantiateServiceProvider('MetaTemplate');\n\t\tthis.instantiateServiceProvider('DataGeneration');\n\n\t\tthis.manifest = this.instantiateServiceProvider('Manifest');\n\n\t\tthis.AppData = {};\n\t\tthis.Bundle = {};\n\n\t\t// Log noisness goes from 0 - 5, where 5 is show me everything.\n\t\tthis.LogNoisiness = 0;\n\n\t\t// Load manifest sets\n\t\tif (this.settings.Manifests)\n\t\t{\n\t\t\tthis.loadManifestSet(this.settings.Manifests);\n\t\t}\n\n\t\tthis._DefaultPictTemplatesInitialized = false;\n\t\tthis.initializePictTemplateEngine();\n\n\t\tthis.addServiceType('PictView',  require('pict-view'));\n\t\tthis.addServiceType('PictApplication',  require('pict-application'));\n\n\t\t// Expose the named views directly, through a convenience accessor\n\t\tthis.views = this.servicesMap.PictView;\n\t}\n\n\t// Load manifests in as Hashed services\n\tloadManifestSet (pManifestSet)\n\t{\n\t\tif (typeof(pManifestSet) != 'object')\n\t\t{\n\t\t\tthis.log.warn(`PICT [${this.UUID}] could not load Manifest Set; pManifestSet was not an object.`);\n\t\t\treturn false;\n\t\t}\n\t\tlet tmpManifestKeys = Object.keys(pManifestSet);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++ )\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.instantiateServiceProvider('Manifest', pManifestSet[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddView(pViewHash, pOptions, pViewPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpViewHash = (typeof(pViewHash) == 'string') ? pViewHash : this.fable.getUUID();\n\n\t\tif (typeof(pViewPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pViewPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pViewPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictView', tmpOptions, tmpViewHash, pViewPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictView', tmpOptions, tmpViewHash);\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddApplication(pApplicationHash, pOptions, pApplicationPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpApplicationHash = (typeof(pApplicationHash) == 'string') ? pApplicationHash : this.fable.getUUID();\n\n\t\tif (typeof(pApplicationPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pApplicationPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pApplicationPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictApplication', tmpOptions, tmpApplicationHash, pApplicationPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictApplication', tmpOptions, tmpApplicationHash);\n\t\t}\n\t}\n\n\tinitializePictTemplateEngine()\n\t{\n\t\t/*\n\t\t *\n\t\t * To stave off madness, these are inefficient for now.  The wkhtmltopdf renderer leaves much to be desired\n\t\t * in the way of feedback with regards to javascript compatibility.\n\t\t *\n\t\t */\n\t\tif (!this._DefaultPictTemplatesInitialized)\n\t\t{\n\t\t\t// Expects one of the following:\n\t\t\t// \t\t{~Entity:Book:1~}\n\t\t\t//          ...meaning GET BOOK 1\n\t\t\t// \t\t{~Entity:Book:AppData.Some.Address.IDBook~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook\n\t\t\t// \t\t{~E:Book:AppData.Some.Address.IDBook:Render-Book-Template~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook and render it to Render-Book-Template\n\t\t\tlet fEntityRender = (pHash, pData, fCallback) =>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpEntity = false;\n\t\t\t\t\tlet tmpEntityID = false;\n\t\t\t\t\tlet tmpEntityTemplate = false;\n\n\t\t\t\t\t// This expression requires 2 parts -- a third is optional, and, if present, is the template to render to.\n\t\t\t\t\tlet tmpHashSeparator = tmpHash.indexOf('|');\n\n\t\t\t\t\tif (tmpHashSeparator < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\t\tlet tmpHashEntitySeparator = tmpHash.indexOf(':');\n\t\t\t\t\t\ttmpEntity = tmpHash.substring(0, tmpHashEntitySeparator);\n\t\t\t\t\t\ttmpEntityID = tmpHash.substring(tmpHashEntitySeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is a 3 part hash (the entity, the ID, and the template)\n\t\t\t\t\t\tlet tmpHashEntitySeparator = tmpHash.indexOf(':');\n\t\t\t\t\t\ttmpEntity = tmpHash.substring(0, tmpHashEntitySeparator);\n\n\t\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf('|');\n\t\t\t\t\t\ttmpEntityID = tmpHash.substring(tmpHashEntitySeparator + 1, tmpHashTemplateSeparator);\n\n\t\t\t\t\t\ttmpEntityTemplate = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isNaN(tmpEntityID))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpEntityID = parseInt(tmpEntityID);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is an address, so we need to get the value at the address\n\t\t\t\t\t\ttmpEntityID = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpEntityID);\n\t\t\t\t\t}\n\n\t\t\t\t\t// No Entity or EntityID\n\t\t\t\t\tif (!tmpEntity || !tmpEntityID)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to get the entity\n\t\t\t\t\tthis.EntityProvider.getEntity(tmpEntity, tmpEntityID,\n\t\t\t\t\t\t(pError, pRecord) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Pict: Entity Render: Error getting entity [${tmpEntity}] with ID [${tmpEntityID}] for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\t\t\treturn fCallback(pError, '');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Now render the template\n\t\t\t\t\t\t\tif (tmpEntityTemplate)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(null, this.parseTemplateByHash(tmpEntityTemplate, pRecord));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternAsync('{~E:', '~}', fEntityRender);\n\t\t\tthis.MetaTemplate.addPatternAsync('{~Entity:', '~}', fEntityRender);\n\n\t\t\t// {NE~Some.Address|If the left value is truthy, render this value.~}\n\t\t\tlet fNotEmptyRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Should switch this to indexOf so pipes can be in the content.\n\t\t\t\t\tlet tmpHashParts = tmpHash.split('|');\n\n\t\t\t\t\t// For now just check truthiness\n\t\t\t\t\tif (this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHashParts[0]))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpHashParts[1];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~NotEmpty:', '~}', fNotEmptyRender);\n\t\t\tthis.MetaTemplate.addPattern('{~NE:', '~}', fNotEmptyRender);\n\n\t\t\t// {~T:Template:AddressOfData~}\n\t\t\tlet fTemplateRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~T:', '~}', fTemplateRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Template:', '~}', fTemplateRender);\n\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~TS:', '~}', fTemplateSetRender);\n\t\t\tthis.MetaTemplate.addPattern('{~TemplateSet:', '~}', fTemplateSetRender);\n\n\t\t\t//{~Data:AppData.Some.Value.to.Render~}\n\t\t\tlet fDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn tmpValue;\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~D:', '~}', fDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Data:', '~}', fDataRender);\n\n\t\t\tthis.MetaTemplate.addPattern('{~Dollars:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterDollars(tmpColumnData);\n\t\t\t\t});\n\t\t\tthis.MetaTemplate.addPattern('{~Digits:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterAddCommasToNumber(this.DataFormat.formatterRoundNumber(tmpColumnData, 2));\n\t\t\t\t});\n\n\t\t\tlet fRandomNumberString = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumberString]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpStringLength = 4;\n\t\t\t\t\tlet tmpMaxNumber = 9999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpStringLength = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomNumericString(tmpStringLength, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumberString:', '~}',fRandomNumberString);\n\t\t\tthis.MetaTemplate.addPattern('{~RNS:', '~}',fRandomNumberString);\n\n\t\t\tlet fRandomNumber = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumber]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpMinimumNumber = 0;\n\t\t\t\t\tlet tmpMaxNumber = 9999999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMinimumNumber = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomIntegerBetween(tmpMinimumNumber, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumber:', '~}',fRandomNumber);\n\t\t\tthis.MetaTemplate.addPattern('{~RN:', '~}',fRandomNumber);\n\n\t\t\tlet fPascalCaseIdentifier = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn this.DataFormat.cleanNonAlphaCharacters(this.DataFormat.capitalizeEachWord(tmpValue));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~PascalCaseIdentifier:', '~}',fPascalCaseIdentifier);\n\n\t\t\tlet fLogValue = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tlet tmpValueType = typeof(tmpValue);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValueType == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is ${tmpValueType}.`);\n\t\t\t\t\t}\n\t\t\t\t\telse if (tmpValueType == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is an obect.`, tmpValue);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] if a ${tmpValueType} = [${tmpValue}]`);\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogValue:', '~}',fLogValue);\n\t\t\tthis.MetaTemplate.addPattern('{~LV:', '~}',fLogValue);\n\n\n\t\t\tlet fLogStatement = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tthis.log.trace(`PICT Template Log Message: ${tmpHash}`);\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogStatement:', '~}',fLogStatement);\n\t\t\tthis.MetaTemplate.addPattern('{~LS:', '~}',fLogStatement);\n\n\t\t\tlet fBreakpoint = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpError = new Error(`PICT Template Breakpoint: ${tmpHash}`);\n\t\t\t\t\tthis.log.trace(`PICT Template Breakpoint: ${tmpHash}`, tmpError.stack);\n\t\t\t\t\tdebugger;\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~Breakpoint', '~}',fBreakpoint);\n\n\t\t\tthis._DefaultPictTemplatesInitialized = true;\n\t\t}\n\t}\n\n\tparseTemplate (pTemplateString, pData, fCallback)\n\t{\n\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\treturn this.MetaTemplate.parseString(pTemplateString, tmpData, fCallback);\n\t}\n\n\tparseTemplateByHash (pTemplateHash, pData, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn this.parseTemplate(tmpTemplateString, pData, fCallback);\n\t}\n\n\tparseTemplateSet (pTemplateString, pDataSet, fCallback)\n\t{\n\t\t// TODO: This will need streaming -- for now janky old string append does the trick\n\t\tlet tmpValue = '';\n\t\tif (typeof(fCallback) == 'function')\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tthis.Utility.eachLimit(pDataSet, 1,\n\t\t\t\t\t(pRecord, fRecordTemplateCallback)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplate(pTemplateString, pRecord,\n\t\t\t\t\t\t\t(pError, pTemplateResult)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValue += pTemplateResult;\n\t\t\t\t\t\t\t\treturn fRecordTemplateCallback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t(pError)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fCallback(pError, tmpValue);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn fCallback(Error('Pict: Template Set: pDataSet is not an array or object.'), '');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tif (Array.isArray(pDataSet))\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < pDataSet.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpKeys = Object.keys(pDataSet);\n\t\t\t\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[tmpKeys[i]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpValue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\tparseTemplateSetByHash (pTemplateHash, pDataSet, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn this.parseTemplateSet(tmpTemplateString, pDataSet, fCallback);\n\t}\n};\n\nmodule.exports = Pict;\n\nmodule.exports.PictApplicationClass = require('pict-application');\nmodule.exports.PictViewClass = require('pict-view');\n\nmodule.exports.EnvironmentLog = require('./environments/Pict-Environment-Log.js');\n\n// This is to help understand the type of enivironement we're executing in\nmodule.exports.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");","/**\n* Pict browser shim loader\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\n\nclass PictEnvironmentLog\n{\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\t}\n\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\tcustomGetElementFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\tcustomReadFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\tcustomAppendFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\tcustomPrependFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomAssignFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Assign.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n}\n\nmodule.exports = PictEnvironmentLog;"]}