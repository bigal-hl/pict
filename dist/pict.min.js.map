{"version":3,"sources":["pict.min.js","node_modules/browser-pack/_prelude.js","node_modules/async.eachlimit/index.js","node_modules/async.iterator/index.js","node_modules/async.util.eachoflimit/index.js","node_modules/async.util.ensureasync/index.js","node_modules/async.util.isarray/index.js","node_modules/async.util.isarraylike/index.js","node_modules/async.util.keyiterator/index.js","node_modules/async.util.keys/index.js","node_modules/async.util.noop/index.js","node_modules/async.util.once/index.js","node_modules/async.util.onlyonce/index.js","node_modules/async.util.restparam/index.js","node_modules/async.util.setimmediate/index.js","node_modules/async.util.withoutindex/index.js","node_modules/async.waterfall/index.js","node_modules/base64-js/index.js","node_modules/big.js/big.js","node_modules/buffer/index.js","node_modules/builtin-status-codes/browser.js","node_modules/cachetrax/source/CacheTrax.js","node_modules/cachetrax/source/LinkedList-Node.js","node_modules/cachetrax/source/LinkedList.js","node_modules/call-bind/callBound.js","node_modules/call-bind/index.js","node_modules/cookie/index.js","node_modules/dayjs/dayjs.min.js","node_modules/dayjs/plugin/advancedFormat.js","node_modules/dayjs/plugin/isoWeek.js","node_modules/dayjs/plugin/relativeTime.js","node_modules/dayjs/plugin/timezone.js","node_modules/dayjs/plugin/utc.js","node_modules/dayjs/plugin/weekOfYear.js","node_modules/dayjs/plugin/weekday.js","node_modules/define-data-property/index.js","node_modules/events/events.js","node_modules/fable-log/source/Fable-Log-BaseLogger.js","node_modules/fable-log/source/Fable-Log-DefaultProviders-Web.js","node_modules/fable-log/source/Fable-Log-DefaultStreams.json","node_modules/fable-log/source/Fable-Log-Logger-Console.js","node_modules/fable-log/source/Fable-Log-Logger-SimpleFlatFile.js","node_modules/fable-log/source/Fable-Log.js","node_modules/fable-serviceproviderbase/source/Fable-ServiceProviderBase.js","node_modules/fable-settings/source/Fable-Settings-Default.json","node_modules/fable-settings/source/Fable-Settings-TemplateProcessor.js","node_modules/fable-settings/source/Fable-Settings.js","node_modules/fable-uuid/source/Fable-UUID-Random-Browser.js","node_modules/fable-uuid/source/Fable-UUID.js","node_modules/fable/source/Fable.js","node_modules/fable/source/services/Fable-Service-Anticipate.js","node_modules/fable/source/services/Fable-Service-CSVParser.js","node_modules/fable/source/services/Fable-Service-DataFormat.js","node_modules/fable/source/services/Fable-Service-DataGeneration-DefaultValues.json","node_modules/fable/source/services/Fable-Service-DataGeneration.js","node_modules/fable/source/services/Fable-Service-DateManipulation.js","node_modules/fable/source/services/Fable-Service-EnvironmentData.js","node_modules/fable/source/services/Fable-Service-FilePersistence.js","node_modules/fable/source/services/Fable-Service-MetaTemplate.js","node_modules/fable/source/services/Fable-Service-MetaTemplate/MetaTemplate-StringParser.js","node_modules/fable/source/services/Fable-Service-MetaTemplate/MetaTemplate-WordTree.js","node_modules/fable/source/services/Fable-Service-Operation-DefaultSettings.js","node_modules/fable/source/services/Fable-Service-Operation.js","node_modules/fable/source/services/Fable-Service-RestClient.js","node_modules/fable/source/services/Fable-Service-Template.js","node_modules/fable/source/services/Fable-Service-Utility.js","node_modules/function-bind/implementation.js","node_modules/function-bind/index.js","node_modules/get-intrinsic/index.js","node_modules/gopd/index.js","node_modules/has-property-descriptors/index.js","node_modules/has-proto/index.js","node_modules/has-symbols/index.js","node_modules/has-symbols/shams.js","node_modules/hasown/index.js","node_modules/https-browserify/index.js","node_modules/ieee754/index.js","node_modules/inherits/inherits_browser.js","node_modules/manyfest/source/Manyfest-CleanWrapCharacters.js","node_modules/manyfest/source/Manyfest-HashTranslation.js","node_modules/manyfest/source/Manyfest-LogToConsole.js","node_modules/manyfest/source/Manyfest-ObjectAddress-CheckAddressExists.js","node_modules/manyfest/source/Manyfest-ObjectAddress-DeleteValue.js","node_modules/manyfest/source/Manyfest-ObjectAddress-GetValue.js","node_modules/manyfest/source/Manyfest-ObjectAddress-SetValue.js","node_modules/manyfest/source/Manyfest-ObjectAddressGeneration.js","node_modules/manyfest/source/Manyfest-ParseConditionals.js","node_modules/manyfest/source/Manyfest-SchemaManipulation.js","node_modules/manyfest/source/Manyfest.js","node_modules/object-inspect/index.js","node_modules/once/once.js","node_modules/path-browserify/index.js","node_modules/pict-application/source/Pict-Application.js","node_modules/pict-view/source/Pict-View.js","node_modules/precedent/source/Precedent.js","node_modules/precedent/source/StringParser.js","node_modules/precedent/source/WordTree.js","node_modules/process/browser.js","node_modules/punycode/punycode.js","node_modules/qs/lib/formats.js","node_modules/qs/lib/index.js","node_modules/qs/lib/parse.js","node_modules/qs/lib/stringify.js","node_modules/qs/lib/utils.js","node_modules/querystring-es3/decode.js","node_modules/querystring-es3/encode.js","node_modules/querystring-es3/index.js","node_modules/safe-buffer/index.js","node_modules/set-function-length/index.js","node_modules/side-channel/index.js","node_modules/simple-concat/index.js","node_modules/simple-get/index.js","node_modules/stream-http/index.js","node_modules/stream-http/lib/capability.js","node_modules/stream-http/lib/request.js","node_modules/stream-http/lib/response.js","node_modules/stream-http/node_modules/readable-stream/errors-browser.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js","node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/async_iterator.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/buffer_list.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/from-browser.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/pipeline.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/state.js","node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/stream-http/node_modules/readable-stream/readable-browser.js","node_modules/string_decoder/lib/string_decoder.js","node_modules/timers-browserify/main.js","node_modules/url/url.js","node_modules/util-deprecate/browser.js","node_modules/wrappy/wrappy.js","node_modules/xtend/immutable.js","source/Pict-CSS.js","source/Pict-Content-Assignment.js","source/Pict-DataProvider.js","source/Pict-Meadow-EntityProvider.js","source/Pict-Template-Provider.js","source/Pict.js","source/environments/Pict-Environment-Log.js","source/environments/Pict-Environment-Object.js"],"names":["_defineProperty2","obj","key","value","_toPropertyKey2","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive2","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","f","exports","module","define","amd","window","global","self","this","Pict","r","e","n","t","o","i","c","require","u","a","Error","code","p","length","eachOfLimit","withoutIndex","arr","limit","iterator","cb","tasks","makeCallback","index","fn","apply","arguments","next","once","noop","onlyOnce","keyIterator","nextKey","done","running","errored","replenish","err","setImmediate","restParam","args","callback","pop","push","innerArgs","sync","Array","isArray","prototype","toString","_keys","isArrayLike","coll","len","keys","k","hasOwnProperty","func","startIndex","Math","max","rest","_setImmediate","fallback","setTimeout","timers","ensureAsync","wrapIterator","concat","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","join","Uint8Array","indexOf","start","end","num","output","GLOBAL","Big","MAX_DP","MAX_POWER","NAME","INVALID","INVALID_DP","INVALID_RM","DIV_BY_ZERO","P","UNDEFINED","NUMERIC","round","x","sd","rm","more","xc","constructor","RM","unshift","stringify","doExponential","isNonzero","s","charAt","slice","abs","cmp","y","isneg","yc","j","l","div","b","dp","DP","bl","bt","ri","bz","ai","al","rl","q","qc","qi","shift","eq","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","reverse","mod","ygtx","times","neg","add","pow","one","prec","sqrt","half","toExponential","mul","toFixed","toJSON","NE","PE","toNumber","strict","toPrecision","valueOf","_Big_","nl","test","replace","search","substring","parse","roundDown","roundHalfUp","roundHalfEven","roundUp","dup","Buffer","base64","ieee754","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","__proto__","encodingOrOffset","allocUnsafe","from","string","encoding","isEncoding","actual","write","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","buffer","array","byteOffset","fromArrayBuffer","isBuffer","checked","copy","numberIsNaN","type","data","fromObject","assertSize","size","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","foo","typedArraySupport","console","error","get","species","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","name","libFableServiceProviderBase","libLinkedList","pFable","pManifest","pServiceHash","super","serviceType","_HashMap","_RecordMap","_List","maxLength","maxAge","RecordMap","put","pData","pHash","Datum","tmpNode","Hash","Metadata","Created","Date","touch","remove","expire","pruneBasedOnExpiration","fComplete","pRemovedRecords","tmpRemovedRecords","tmpNow","tmpKeys","pruneBasedOnLength","pruneCustom","fPruneFunction","prune","fExpirationPruneComplete","getNode","LeftNode","RightNode","__ISNODE","libLinkedListNode","totalNodes","head","tail","initializeNode","pDatum","tmpHash","append","prepend","pNode","each","fAction","fIterator","pError","seek","pNodeIndex","GetIntrinsic","callBind","$indexOf","allowMissing","intrinsic","bind","setFunctionLength","$TypeError","$apply","$call","$reflectApply","$defineProperty","$max","originalFunction","applyBind","options","dec","decode","eqIdx","endIdx","tryDecode","serialize","opt","enc","encode","fieldContentRegExp","isNaN","floor","domain","path","expires","__toString","isDate","toUTCString","httpOnly","secure","partitioned","priority","sameSite","decodeURIComponent","encodeURIComponent","h","d","$","M","weekdays","months","ordinal","v","z","utcOffset","date","year","month","clone","ceil","w","D","ms","Q","g","S","_","O","locale","$L","utc","$u","$x","$offset","$d","NaN","match","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","isSame","startOf","endOf","isAfter","isBefore","$g","unix","getTime","toDate","$locale","weekStart","$set","daysInMonth","subtract","format","invalidDate","meridiem","monthsShort","weekdaysMin","weekdaysShort","getTimezoneOffset","diff","toISOString","forEach","extend","$i","isDayjs","en","Ls","globalThis","dayjs","weekYear","isoWeekYear","week","isoWeek","offsetName","dayjs_plugin_advancedFormat","isoWeekday","day","dayjs_plugin_isoWeek","future","past","mm","hh","dd","MM","yy","fromToBase","relativeTime","thresholds","rounding","to","toNow","fromNow","dayjs_plugin_relativeTime","hour","minute","second","timeZoneName","Intl","DateTimeFormat","hour12","timeZone","formatToParts","tz","$timezone","guess","find","resolvedOptions","setDefault","dayjs_plugin_timezone","local","getUTCFullYear","getUTCMonth","getUTCDate","getUTCDay","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","$localOffset","isUTC","dayjs_plugin_utc","yearStart","weeks","dayjs_plugin_weekOfYear","weekday","dayjs_plugin_weekday","hasPropertyDescriptors","$SyntaxError","gopd","property","nonEnumerable","nonWritable","nonConfigurable","loose","desc","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","EventEmitter","emitter","Promise","resolve","reject","errorListener","removeListener","resolver","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","events","existing","warning","create","newListener","emit","warned","count","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","addEventListener","wrapListener","removeEventListener","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","message","context","listeners","addListener","prependListener","prependOnceListener","position","originalListener","spliceOne","off","removeAllListeners","rawListeners","eventNames","CoreServiceProviderBase","pLogStreamSettings","pLogStreamHash","_Settings","loggerUUID","generateInsecureUUID","levels","tmpDate","pCharacter","tmpRandomData","random","initialize","trace","pLogText","pLogObject","debug","info","fatal","pLogLevel","getDefaultProviders","tmpDefaultProviders","default","loggertype","streamtype","level","libBaseLogger","pFableLog","_ShowTimeStamps","showtimestamps","_FormattedTimeStamps","formattedtimestamps","_ContextMessage","Context","Product","_OutputLogLinesToConsole","outputloglinestoconsole","_OutputObjectsToConsole","outputobjectstoconsole","prefixCache","pLevel","pObject","tmpTimeStamp","tmpLogLine","log","JSON","libConsoleLog","libFS","libPath","logFileRawPath","logFilePath","normalize","logFileStreamOptions","fileStreamOptions","fileWriter","createWriteStream","activelyWriting","logLineStrings","logObjectStrings","defaultWriteCompleteCallback","defaultBufferFlushCallback","closeWriter","fCloseComplete","tmpCloseComplete","completeBufferFlushToLogFile","fFlushComplete","tmpFlushComplete","flushBufferToLogFile","tmpLineStrings","tmpObjectStrings","tmpConstructedBufferOutputString","fs","pSettings","tmpSettings","_Providers","_StreamDefinitions","LogStreams","logStreams","logProviders","activeLogStreams","logStreamsTrace","logStreamsDebug","logStreamsInfo","logStreamsWarn","logStreamsError","logStreamsFatal","datumDecorator","uuid","addLogger","pLogger","setDatumDecorator","fDatumDecorator","pMessage","tmpDecoratedDatum","tmpStreamDefinition","assign","logTime","tmpMessage","tmpTime","getTimeStamp","getTimeDelta","pTimeStamp","logTimeDelta","pTimeDelta","tmpEndTime","logTimeDeltaHuman","tmpMs","tmpSeconds","tmpMinutes","tmpHours","logTimeDeltaRelative","pStartTime","logTimeDeltaRelativeHuman","LogProviderBase","LogProviderConsole","LogProviderFlatfile","FableServiceProviderBase","pOptions","isFable","connectFable","fable","UUID","getUUID","tmpErrorMessage","Logging","services","servicesMap","ProductVersion","ConfigFile","process","libPrecedent","pDependencies","templateProcessor","addPattern","pTemplateValue","tmpTemplateValue","tmpSeparatorIndex","tmpDefaultValue","tmpEnvironmentVariableName","env","parseSetting","pString","parseString","_process","precedent","libFableSettingsTemplateProcessor","FableSettings","settingsTemplateProcessor","_configureEnvTemplating","buildDefaultSettings","merge","base","DefaultConfigFile","pException","settings","_PerformEnvTemplating","NoEnvReplacement","_resolveEnv","tmpKey","_isObject","_deepMergeObjects","toObject","fromValue","toValue","pSettingsFrom","pSettingsTo","tmpSettingsFrom","tmpSettingsTo","tmpSettingsFromCopy","new","getRandomValues","crypto","msCrypto","generateWhatWGBytes","tmpBuffer","generateRandomBytes","tmpValue","generate","libRandomByteGenerator","FableUUID","_UUIDModeRandom","UUIDModeRandom","_UUIDLength","UUIDLength","_UUIDRandomDictionary","UUIDDictionary","randomByteGenerator","_HexLookup","bytesToUUID","pBuffer","generateUUIDv4","tmpRandomBytes","generateRandom","tmpUUID","libFableSettings","libFableUUID","libFableLog","libFableServiceBase","Fable","serviceTypes","serviceClasses","extraServiceInitialization","LogNoisiness","SettingsManager","ServiceManager","serviceManager","connectPreinitServiceProviderInstance","addAndInstantiateServiceType","addServiceType","settingsManager","newAnticipate","instantiateServiceProviderWithoutRegistration","pServiceType","pServiceClass","isFableService","instantiateServiceProvider","instantiateServiceProviderFromPrototype","pCustomServiceHash","pServicePrototype","tmpService","setDefaultServiceInstantiation","pServiceInstance","tmpServiceType","tmpServiceHash","pOverwriteService","tmpOverwriteService","ServiceProviderBase","cachetrax","manyfest","operationQueue","erroredOperations","executingOperationCount","completedOperationCount","callDepth","maxOperations","lastError","waitingFunctions","checkQueue","tmpOperation","buildAnticipatorCallback","anticipate","fAsynchronousFunction","tmpCallbackState","Called","OperationSet","wait","fCallback","Header","HeaderFieldNames","Delimiter","QuoteCharacter","CleanCharacters","HeaderLineIndex","HasHeader","HasSetHeader","EmitHeader","EmitJSON","EscapedQuoteString","CurrentLine","CurrentRecord","InQuote","InEscapedQuote","LinesParsed","RowsEmitted","marshalRowToJSON","pRowArray","tmpObject","setHeader","pHeaderArray","resetRowState","pushLine","emitRow","pFormatAsJSON","tmpFormatAsJSON","tmpCompletedRecord","parseCSVLine","pLineString","pTargetLength","pPadString","tmpString","stringGeneratePaddingString","_Regex_formatterInsertCommas","_Regex_formatterAddCommasToNumber","_Regex_formatterDollarsRemoveCommas","_Regex_formatterCleanNonAlphaChar","_Regex_formatterCapitalizeEachWord","_Value_MoneySign_Currency","_Value_NaN_Currency","_Value_GroupSeparator_Number","_Value_Prefix_StringHash","_Value_Clean_formatterCleanNonAlpha","_UseEngineStringStartsWith","startsWith","_UseEngineStringEndsWith","endsWith","stringReverse","stringStartsWith","pSearchString","pStartIndex","stringStartsWith_Polyfill","stringEndsWith","pEndIndex","stringEndsWith_Polyfill","insecureStringHash","tmpStringLength","tmpCharacterIndex","capitalizeEachWord","pMatch","toUpperCase","cleanEnclosureWrapCharacters","pWrapCharacter","cleanNonAlphaCharacters","formatterInsertCommas","tmpReversedWithCommas","processAddCommasToNumberRegex","pSign","pZeros","pBefore","pDecimal","pAfter","formatterAddCommasToNumber","pNumber","formatterDollars","pValue","tmpDollarAmount","Utility","bigNumber","parseFloat","formatterRoundNumber","pDigits","tmpDigits","tmpTargetLength","tmpPadString","tmpPadLength","repeat","formatTimeSpan","pTimeSpan","stringPadStart","formatTimeDelta","pTimeStart","pTimeEnd","getMonthFromDate","pJavascriptDate","getMonthAbbreviatedFromDate","formatMonthDayYearFromDate","pStrict","tmpStrict","tmpMonth","tmpDay","tmpYear","formatSortableStringFromDate","pDate","stringBeforeMatch","stringAfterMatch","tmpStringSplitLocation","stringCountEnclosures","pEnclosureStart","pEnclosureEnd","tmpEnclosureStart","tmpEnclosureEnd","tmpEnclosureCount","tmpEnclosureDepth","stringGetEnclosureValueByIndex","pEnclosureIndexToGet","tmpEnclosureIndexToGet","tmpMatchedEnclosureIndex","tmpEnclosedValueStartIndex","tmpEnclosedValueEndIndex","stringRemoveEnclosureByIndex","pEnclosureIndexToRemove","tmpEnclosureIndexToRemove","tmpEnclosureStartIndex","tmpEnclosureEndIndex","tmpReturnString","DefaultIntegerMinimum","DefaultIntegerMaximum","DefaultNumericStringLength","MonthSet","WeekDaySet","ColorSet","SurNameSet","NameSet","defaultData","randomIntegerBetween","pMinimum","pMaximum","randomIntegerUpTo","randomInteger","randomNumericString","pLength","pMaxNumber","tmpMaxNumber","DataFormat","randomMonth","randomDayOfWeek","randomColor","randomName","randomSurname","dayJS","plugin_weekOfYear","plugin_weekday","plugin_isoWeek","plugin_timezone","plugin_relativetime","plugin_utc","plugin_advancedFormat","Environment","libReadline","Mode","umask","joinPath","existsSync","pPath","exists","appendFileSync","pFileName","pAppendContent","tmpOptions","deleteFileSync","unlinkSync","deleteFolderSync","rmdirSync","readFileSync","pFilePath","readFile","writeFileSync","pFileContent","writeFileSyncFromObject","writeFileSyncFromArray","pFileArray","writeFile","lineReaderFactory","fOnLine","fOnComplete","fOnError","tmpLineReader","filePath","fileStream","createReadStream","reader","createInterface","crlfDelay","makeFolderRecursive","pParameters","tmpParameters","Path","CurrentPathIndex","ActualPath","ActualPathParts","sep","CurrentPath","open","pFileDescriptor","closeSync","mkdir","pCreateError","readline","libWordTree","libStringParser","WordTree","StringParser","ParseTree","pPatternStart","pPatternEnd","pParser","addPatternAsync","pParserPromise","addPatternBoth","TemplateData","newParserState","pParseTree","Asynchronous","Output","OutputBuffer","Pattern","PatternMatch","PatternMatchEnd","appendOutputBuffer","pParserState","flushOutputBuffer","resetOutputBuffer","PatternStartNode","StartPatternMatchComplete","EndPatternMatchBegan","parseCharacter","PatternEnd","isAsync","isBoth","PatternStartString","Parse","PatternEndString","executePatternAsync","pAsyncOutput","PatternStart","ParseAsync","parseCharacterAsync","tmpParserState","tmpAnticipate","addChild","pTree","pPattern","addEndChild","fParser","tmpLeaf","tmpPatternEnd","fParserAsync","Name","Summary","Version","Status","Completed","CompletionProgress","CompletionTimeElapsed","TimeStart","TimeEnd","Steps","Errors","Log","_OperationStatePrototypeString","timeStamps","progressTrackers","stepMap","stepFunctions","execute","fExecutionCompleteCallback","GUIDStep","addStep","pGUIDStep","fStepFunction","pStepName","pStepDescription","pStepMetadata","tmpStep","DataGeneration","Description","StepCount","getStep","startStep","stopStep","writeOperationLog","writeOperationErrors","createTimeStamp","pTimeStampHash","tmpTimeStampHash","tmpOperationTime","createProgressTracker","pTotalOperations","pProgressTrackerHash","tmpProgressTrackerHash","tmpTotalOperations","tmpProgressTracker","StartTime","EndTime","CurrentTime","PercentComplete","AverageOperationTime","EstimatedCompletionTime","TotalCount","CurrentCount","solveProgressTrackerStatus","updateProgressTrackerStatus","pCurrentOperations","tmpCurrentOperations","incrementProgressTrackerStatus","pIncrementSize","tmpIncrementSize","setProgressTrackerEndTime","printProgressTrackerStatus","libSimpleGet","libCookie","TraceLog","dataFormat","cookie","prepareRequestOptions","simpleGet","prepareCookies","pRequestOptions","tmpCookieObject","headers","tmpCookieKeys","preRequest","url","RestClientURLPrefix","executeChunkedRequest","RequestStartTime","method","pResponse","tmpConnectTime","statusCode","tmpData","pChunk","tmpChunkTime","tmpCompletionTime","executeChunkedRequestBinary","json","tmpDataBuffer","executeJSONRequest","tmpJSONData","getJSON","pOptionsOrURL","tmpRequestOptions","putJSON","body","postJSON","patchJSON","headJSON","delJSON","getRawText","Matchers","Evaluate","Interpolate","Escaper","Unescaper","GuaranteedNonMatch","templateEscapes","u2028","u2029","renderFunction","templateString","renderTemplate","templateFunction","buildTemplateFunction","pTemplateText","TemplateSource","pCode","TemplateSourceCompiled","libAsyncWaterfall","libAsyncEachLimit","libBigNumber","templates","waterfall","eachLimit","pDestinationObject","tmpSourceObject","tmpObjectProperties","template","buildHashedTemplate","pTemplateHash","tmpTemplate","chunk","pInput","pChunkSize","pChunkCache","tmpInputArray","tmpChunkSize","tmpChunkCache","splice","isoStringToDate","pISOString","Dates","toStr","concatty","bound","arrLike","slicy","boundLength","boundArgs","joiner","joiny","result","Empty","implementation","SyntaxError","$Function","getEvalledConstructor","expressionSyntax","$gOPD","getOwnPropertyDescriptor","throwTypeError","ThrowTypeError","calleeThrows","gOPDthrows","hasSymbols","hasProto","getProto","needsEval","TypedArray","INTRINSICS","AggregateError","Atomics","BigInt","BigInt64Array","BigUint64Array","Boolean","DataView","decodeURI","encodeURI","eval","EvalError","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","Map","Proxy","ReferenceError","RegExp","Set","SharedArrayBuffer","Uint8ClampedArray","Uint16Array","Uint32Array","URIError","WeakMap","WeakRef","WeakSet","errorProto","doEval","gen","LEGACY_ALIASES","hasOwn","$concat","$spliceApply","$replace","$strSlice","$exec","exec","rePropName","reEscapeChar","getBaseIntrinsic","alias","intrinsicName","first","last","number","quote","subString","stringToPath","intrinsicBaseName","intrinsicRealName","skipFurtherCaching","isOwn","part","hasown","hasArrayLengthDefineBug","$Object","origSymbol","hasSymbolSham","sym","symObj","syms","propertyIsEnumerable","descriptor","$hasOwn","http","https","validateParams","params","protocol","request","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","ctor","superCtor","super_","TempCtor","cleanWrapCharacters","libSimpleLog","pInfoLog","pErrorLog","logInfo","logError","translationTable","translationCount","addTranslation","pTranslation","pTranslationSource","removeTranslationHash","pTranslationHash","removeTranslation","clearTranslations","translate","logToConsole","pLogLine","checkAddressExists","pAddress","tmpBracketStartIndex","tmpBracketStopIndex","tmpBoxedPropertyName","tmpBoxedPropertyReference","tmpBoxedPropertyNumber","tmpSubObjectName","tmpNewAddress","fCleanWrapCharacters","fParseConditionals","checkFilters","pRecord","deleteValueAtAddress","pParentAddress","tmpParentAddress","tmpObjectTypeMarkerIndex","tmpObjectPropertyName","tmpArrayProperty","tmpContainerObject","tmpPropertyParentAddress","tmpObjectProperty","tmpObjectPropertyKeys","getValueAtAddress","pRootObject","tmpRootObject","tmpParentAddressParts","tmpBackNavigationCount","tmpParentAddressLength","tmpRecurseAddress","tmpOutputArray","setValueAtAddress","generateAddressses","pBaseAddress","pSchema","tmpBaseAddress","tmpSchema","tmpObjectType","tmpSchemaObjectEntry","Address","InSchema","DataType","Default","_ConditionalStanzaStart","_ConditionalStanzaEnd","testCondition","pManyfest","pSearchAddress","pSearchComparator","parseConditionals","tmpKeepRecord","tmpStartIndex","tmpStopIndex","tmpMagicComparisonPatternSet","tmpSearchAddress","tmpSearchComparator","tmpSearchValue","resolveAddressMappings","pManyfestSchemaDescriptors","pAddressMapping","tmpManyfestAddresses","tmpHashMapping","pInputAddress","tmpNewDescriptorAddress","tmpOldDescriptorAddress","tmpDescriptor","safeResolveAddressMappings","tmpManyfestSchemaDescriptors","mergeAddressMappings","pManyfestSchemaDescriptorsDestination","pManyfestSchemaDescriptorsSource","tmpSource","tmpNewManyfestSchemaDescriptors","pDescriptorAddress","libHashTranslation","libObjectAddressCheckAddressExists","libObjectAddressGetValue","libObjectAddressSetValue","libObjectAddressDeleteValue","libObjectAddressGeneration","libSchemaManipulation","_DefaultConfiguration","Scope","Descriptors","Manyfest","objectAddressCheckAddressExists","objectAddressGetValue","objectAddressSetValue","objectAddressDeleteValue","defaultValues","Float","Integer","Binary","DateTime","Null","scope","elementAddresses","elementHashes","elementDescriptors","reset","loadManifest","schemaManipulations","objectAddressGeneration","hashTranslations","tmpNewOptions","tmpNewManyfest","getManifest","deserialize","pManifestString","tmpManifest","tmpDescriptorKeys","tmpDescriptionAddresses","addDescriptor","HashTranslations","pDescriptor","getDescriptorByHash","getDescriptor","resolveHashAddress","eachDescriptor","tmpDescriptorAddresses","checkAddressExistsByHash","tmpAddress","tmpInElementHashTable","tmpInTranslationTable","getValueByHash","getDefaultValue","setValueByHash","deleteValueByHash","validate","tmpValidationData","MissingElements","addValidationError","pErrorMessage","tmpValueExists","Required","tmpElementType","tmpDataType","populateDefaults","pOverwriteProperties","populateObject","fFilter","tmpOverwriteProperties","tmpFilterFunction","hasMap","mapSizeDescriptor","mapSize","mapForEach","hasSet","setSizeDescriptor","setSize","setForEach","weakMapHas","has","weakSetHas","weakRefDeref","deref","booleanValueOf","objectToString","functionToString","$match","$slice","$toUpperCase","$toLowerCase","$test","$join","$arrSlice","$floor","bigIntValueOf","gOPS","symToString","hasShammedSymbols","toStringTag","isEnumerable","gPO","addNumericSeparator","sepRegex","int","intStr","utilInspect","inspectCustom","custom","inspectSymbol","isSymbol","wrapQuotes","defaultStyle","opts","quoteChar","quoteStyle","isRegExp","inspect_","depth","seen","maxStringLength","customInspect","indent","numericSeparator","inspectString","bigIntStr","maxDepth","baseIndent","prev","getIndent","noIndent","newOpts","nameOf","arrObjKeys","symString","markBoxed","HTMLElement","nodeName","getAttribute","isElement","attrs","attributes","childNodes","xs","singleLineValues","indentedJoin","isError","cause","isMap","mapParts","collectionOf","isSet","setParts","isWeakMap","weakCollectionOf","isWeakSet","isWeakRef","isNumber","isBigInt","isBoolean","isString","ys","isPlainObject","protoTag","stringTag","tag","trailer","lowbyte","entries","lineJoiner","isArr","symMap","wrappy","called","onceStrict","onceError","proto","assertPath","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","posix","cwd","resolvedPath","resolvedAbsolute","isAbsolute","trailingSeparator","joined","relative","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","dirname","hasRoot","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","root","_format","delimiter","win32","defaultPictSettings","MainViewportViewIdentifier","MainViewportRenderableHash","MainViewportDestinationAddress","MainViewportDefaultDataAddress","AutoSolveAfterInitialize","AutoRenderMainViewportViewAfterInitialize","Manifests","IdentifierAddressPrefix","pict","AppData","initializeTimestamp","lastSolvedTimestamp","lastMarshalFromViewsTimestamp","lastMarshalToViewsTimestamp","tmpManifestKeys","tmpManifestKey","onBeforeSolve","onBeforeSolveAsync","onSolve","onSolveAsync","solve","tmpLoadedViews","views","tmpViewsToSolve","tmpView","AutoInitialize","sort","AutoInitializeOrdinal","onAfterSolve","solveAsync","AutoSolveWithApp","AutoSolveOrdinal","onAfterSolveAsync","onBeforeInitialize","onBeforeInitializeAsync","onInitialize","onInitializeAsync","tmpViewsToInitialize","onAfterInitialize","render","initializeAsync","fCallBack","onAfterInitializeAsync","renderMainViewportAsync","onBeforeMarshalFromViews","onBeforeMarshalFromViewsAsync","onMarshalFromViews","onMarshalFromViewsAsync","marshalFromViews","tmpViewsToMarshalFromViews","marshalFromView","onAfterMarshalFromViews","marshalFromViewsAsync","marshalFromViewAsync","onAfterMarshalFromViewsAsync","onBeforeMarshalToViews","onBeforeMarshalToViewsAsync","onMarshalToViews","onMarshalToViewsAsync","marshalToViews","tmpViewsToMarshalToViews","marshalToView","onAfterMarshalToViews","marshalToViewsAsync","marshalToViewAsync","onAfterMarshalToViewsAsync","pViewIdentifier","pRenderableHash","pRenderDestinationAddress","pTemplateDataAddress","tmpViewIdentifier","tmpRenderableHash","tmpRenderDestinationAddress","tmpTemplateDataAddress","PictView","renderMainViewport","renderAsync","defaultPictViewSettings","DefaultRenderable","DefaultDestinationAddress","DefaultTemplateRecordAddress","ViewIdentifier","AutoRender","AutoRenderOrdinal","CSSHash","CSS","CSSProvider","CSSPriority","Templates","DefaultTemplates","Renderables","lastRenderedTimestamp","lastMarshalFromViewTimestamp","lastMarshalToViewTimestamp","Source","TemplateProvider","addTemplate","Template","tmpDefaultTemplate","addDefaultTemplate","Prefix","Postfix","tmpCSSHash","tmpCSSProvider","CSSMap","addCSS","renderables","addRenderable","pDefaultTemplateDataAddress","pDefaultDestinationAddress","pRenderMethod","tmpRenderable","RenderableHash","TemplateHash","DefaultTemplateDataAddress","RenderMethod","onBeforeRender","pRenderable","onBeforeRenderAsync","tmpDataAddress","ContentDestinationAddress","DataProvider","getDataByAddress","tmpContent","parseTemplateByHash","ContentAssignment","appendContent","prependContent","getElement","assignContent","onAfterRender","fOnBeforeRenderCallback","fAsyncTemplateCallback","pContent","onAfterRenderAsync","onBeforeMarshalFromView","onBeforeMarshalFromViewAsync","onMarshalFromView","onMarshalFromViewAsync","onAfterMarshalFromView","onAfterMarshalFromViewAsync","onBeforeMarshalToView","onBeforeMarshalToViewAsync","onMarshalToView","onMarshalToViewAsync","onAfterMarshalToView","onAfterMarshalToViewAsync","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","nextTick","title","browser","argv","version","versions","binding","chdir","freeExports","nodeType","freeModule","freeGlobal","punycode","maxInt","tMin","tMax","skew","damp","initialBias","initialN","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","baseMinusTMin","stringFromCharCode","map","mapDomain","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","basic","oldi","baseMinusT","inputLength","bias","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","ucs2","toASCII","toUnicode","percentTwenties","Format","formatters","RFC1738","RFC3986","formats","utils","defaults","allowDots","allowPrototypes","allowSparse","arrayLimit","charset","charsetSentinel","comma","decoder","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","plainObjects","strictNullHandling","$0","numberStr","parseArrayValue","parseKeys","givenKey","valuesParsed","child","segment","parent","chain","leaf","cleanRoot","parseObject","normalizeParseOptions","tempObj","cleanStr","skipIndex","bracketEqualsPos","maybeMap","encodedVal","combine","parseValues","newObj","compact","getSideChannel","arrayPrefixGenerators","brackets","prefix","indices","pushToArray","valueOrArray","toISO","defaultFormat","addQueryPrefix","encoder","encodeValuesOnly","formatter","serializeDate","skipNulls","sentinel","object","generateArrayPrefix","commaRoundTrip","filter","sideChannel","tmpSc","step","findFlag","objKeys","values","adjustedPrefix","keyPrefix","valueSideChannel","normalizeStringifyOptions","arrayFormat","hexTable","arrayToObject","source","reduce","acc","prop","refs","item","compacted","compactQueue","strWithoutPlus","unescape","defaultEncoder","kind","escape","mapped","mergeTarget","targetItem","qs","regexp","maxKeys","kstr","vstr","idx","stringifyPrimitive","objectKeys","ks","copyProps","SafeBuffer","hasDescriptors","gOPD","functionLengthIsConfigurable","functionLengthIsWritable","callBound","$WeakMap","$Map","$weakMapGet","$weakMapSet","$weakMapHas","$mapGet","$mapSet","$mapHas","listGetNode","curr","$wm","$o","channel","assert","objects","node","listGet","listHas","listSet","stream","chunks","decompressResponse","querystring","isStream","pipe","maxRedirects","hostname","port","auth","form","accept","originalHost","req","followRedirects","location","host","resume","redirectHost","authorization","tryUnzip","abort","ClientRequest","response","statusCodes","defaultProtocol","IncomingMessage","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","xtend","xhr","getXHR","XMLHttpRequest","XDomainRequest","checkTypeSupport","responseType","isFunction","fetch","ReadableStream","writableStream","WritableStream","abortController","AbortController","arraybuffer","msstream","mozchunkedarraybuffer","overrideMimeType","capability","inherits","rStates","readyStates","preferBinary","Writable","_opts","_body","_headers","useFetch","mode","_mode","decideMode","_fetchTimer","_socketTimeout","_socketTimer","_onFinish","lowerName","unsafeHeaders","getHeader","header","removeHeader","_destroyed","headersObj","Blob","headersList","keyName","signal","controller","_fetchAbortController","requestTimeout","credentials","withCredentials","then","_fetchResponse","_resetTimers","_connect","reason","_xhr","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","status","statusValid","_write","destroy","flushHeaders","setNoDelay","setSocketKeepAlive","UNSENT","OPENED","HEADERS_RECEIVED","resetTimers","Readable","rawHeaders","trailers","rawTrailers","statusMessage","statusText","_resumeFetch","close","pipeTo","catch","getReader","_pos","responseURL","getAllResponseHeaders","matches","_charset","mimeType","charsetMatch","_read","responseText","newData","MSStreamReader","onload","readAsArrayBuffer","codes","createErrorType","Base","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","getMessage","oneOf","expected","thing","determiner","msg","this_len","Duplex","allowHalfOpen","readable","onend","_writableState","ended","onEndNT","highWaterMark","getBuffer","_readableState","destroyed","PassThrough","Transform","_transform","ReadableState","EElistenerCount","Stream","OurUint8Array","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","isDuplex","objectMode","readableObjectMode","pipes","pipesCount","flowing","endEmitted","reading","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","_destroy","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","onEofChunk","chunkInvalid","_uint8ArrayToBuffer","addChunk","maybeReadMore","_undestroy","undestroy","isPaused","setEncoding","content","clear","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","nReadingNextTick","resume_","fromList","consume","endReadable","endReadableNT","wState","finished","nOrig","doRead","dest","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","ondata","cleanedUp","needDrain","pipeOnDrain","pause","event","dests","ev","wrap","_this","asyncIterator","_fromList","iterable","util","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","transform","flush","_flush","prefinish","err2","CorkedRequest","entry","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","realHasInstance","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","finalCalled","ending","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","rState","current","hasInstance","writeAfterEnd","validChunk","newChunk","decodeChunk","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_Object$setPrototypeO","_defineProperty","_toPrimitive","_toPropertyKey","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","promise","lastPromise","wrapForNext","_this2","_Object$create","enumerableOnly","symbols","_objectSpread","getOwnPropertyDescriptors","defineProperties","_defineProperties","props","instance","Constructor","_classCallCheck","protoProps","staticProps","hasStrings","_getString","_getBuffer","nb","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ERR_STREAM_PREMATURE_CLOSE","eos","_len","_key","onlegacyfinish","writableEnded","readableEnded","onrequest","isRequest","ERR_MISSING_ARGS","streams","popCallback","destroys","closed","destroyer","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","pipeline","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","total","utf8CheckIncomplete","clearImmediate","immediateIds","nextImmediateId","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","Url","slashes","hash","query","pathname","href","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","hostlessProtocol","slashedProtocol","ftp","gopher","file","urlParse","parseQueryString","slashesDenoteHost","queryIndex","splitter","uSplit","simplePath","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","newpart","validParts","notHost","bit","ae","esc","qm","resolveObject","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","authInHost","hasTrailingSlash","up","config","localStorage","wrapper","defaultConfiguration","CSSElementAddress","inlineCSSMap","pPriority","pProvider","tmpPriority","tmpProvidor","Content","Provider","Priority","removeCSS","generateCSS","tmpCSS","tmpCSSHashes","tmpCSSFragment","tmpCSSComment","injectCSS","inBrowser","hasDocument","document","querySelectorAll","hasJquery","jQuery","customAssignFunction","customPrependFunction","customAppendFunction","customReadFunction","customGetElementFunction","customReadAttributeFunction","customSetAttributeFunction","customRemoveAttributeFunction","customReadClassFunction","customSetClassFunction","customRemoveClassFunction","tmpElements","tmpElementSet","tmpTargetElementSet","tagName","innerHTML","insertAdjacentHTML","readContent","tmpTargetElement","html","addClass","pClass","classList","removeClass","readAttribute","pAttribute","attr","setAttribute","removeAttribute","removeAttr","hasClass","contains","manifest","Bundle","Record","PictDefaultURLPrefix","urlPrefix","PictDefaultDownloadBatchSize","downloadBatchSize","restClient","cache","initializeCache","pEntity","getEntity","pIDRecord","tmpPossibleRecord","pBody","getEntitySetPage","pMeadowFilterExpression","pRecordStartCursor","pRecordCount","tmpURL","pDownloadError","pDownloadResponse","pDownloadBody","getEntitySetRecordCount","tmpRecordCount","Count","getEntitySet","pRecordCountError","tmpDownloadURIFragments","tmpDownloadBatchSize","tmpEntitySet","pURIFragment","fDownloadCallback","pFullDownloadError","templateSources","defaultTemplates","loadTemplateFunction","pTemplate","pTemplateSource","pPrefix","pPostfix","pSource","postfix","checkDefaultTemplateHash","getTemplate","loadTemplate","libFable","isBrowser","loadManifestSet","_DefaultPictTemplatesInitialized","initializePictTemplateEngine","pManifestSet","addView","pViewHash","pViewPrototype","tmpViewHash","default_configuration","addApplication","pApplicationHash","pApplicationPrototype","tmpApplicationHash","fEntityRender","tmpCallback","tmpEntity","tmpEntityID","tmpEntityTemplate","tmpAddressParts","EntityProvider","MetaTemplate","fTemplateRender","tmpTemplateHash","tmpAddressOfData","tmpHashTemplateSeparator","fTemplateRenderAsync","fTemplateSetRender","parseTemplateSetByHash","fTemplateSetRenderAsync","tmpTemplateFromMapHash","tmpTemplateHashPart","fTemplateValueSetRender","tmpDataValueSet","Value","tmpValueKeys","fTemplateValueSetRenderAsync","fTemplateFromMapRender","tmpAddressOfMap","tmpAddressOfKey","tmpMap","fTemplateFromMapRenderAsync","fTemplateFromMapSetRender","fTemplateFromMapSetRenderAsync","fDataRender","fJoinDataRender","tmpDataAddresses","tmpSeparator","tmpValueList","fJoinUniqueDataRender","tmpValueMap","tmpColumnData","tmpDateValue","tmpDayJS","Timezone","_unused","tmpSQLDateTime","DocumentData","tmpDateValueSet","_unused2","fNotEmptyRender","tmpHashParts","fRandomNumberString","fRandomNumber","tmpMinimumNumber","fPascalCaseIdentifier","fLogValue","tmpValueType","fLogStatement","fBreakpoint","tmpError","stack","parseTemplate","pTemplateString","tmpTemplateString","parseTemplateSet","pDataSet","fRecordTemplateCallback","pTemplateResult","PictApplicationClass","PictViewClass","EnvironmentLog","EnvironmentObject","pPict","pContentMap","contentMap","truncateContentLength","storeEventLog","eventLog","GetElement","Read","Prepend","Append","Assign","createEventLogEntry","TimeStamp","Attribute","_ATTRIBUTE_MAP","_CLASS_MAP","ReadAttribute","SetAttribute","RemoveAttribute","ReadClass","SetClass","RemoveClass","initializeAttributeMapLocation","initializeClassMapLocation"],"mappings":"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","file":"pict.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Pict = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar eachOfLimit = require('async.util.eachoflimit');\nvar withoutIndex = require('async.util.withoutindex');\n\nmodule.exports = function eachLimit(arr, limit, iterator, cb) {\n    return eachOfLimit(limit)(arr, withoutIndex(iterator), cb);\n};\n\n},{\"async.util.eachoflimit\":3,\"async.util.withoutindex\":14}],2:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(tasks) {\n    function makeCallback(index) {\n        function fn() {\n            if (tasks.length) {\n                tasks[index].apply(null, arguments);\n            }\n            return fn.next();\n        }\n        fn.next = function() {\n            return (index < tasks.length - 1) ? makeCallback(index + 1) : null;\n        };\n        return fn;\n    }\n    return makeCallback(0);\n};\n\n},{}],3:[function(require,module,exports){\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar onlyOnce = require('async.util.onlyonce');\nvar keyIterator = require('async.util.keyiterator');\n\nmodule.exports = function eachOfLimit(limit) {\n    return function(obj, iterator, cb) {\n        cb = once(cb || noop);\n        obj = obj || [];\n        var nextKey = keyIterator(obj);\n        if (limit <= 0) {\n            return cb(null);\n        }\n        var done = false;\n        var running = 0;\n        var errored = false;\n\n        (function replenish() {\n            if (done && running <= 0) {\n                return cb(null);\n            }\n\n            while (running < limit && !errored) {\n                var key = nextKey();\n                if (key === null) {\n                    done = true;\n                    if (running <= 0) {\n                        cb(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iterator(obj[key], key, onlyOnce(function(err) {\n                    running -= 1;\n                    if (err) {\n                        cb(err);\n                        errored = true;\n                    } else {\n                        replenish();\n                    }\n                }));\n            }\n        })();\n    };\n};\n\n},{\"async.util.keyiterator\":7,\"async.util.noop\":9,\"async.util.once\":10,\"async.util.onlyonce\":11}],4:[function(require,module,exports){\n'use strict';\nvar setImmediate = require('async.util.setimmediate');\nvar restParam = require('async.util.restparam');\n\nmodule.exports = function(fn) {\n    return restParam(function(args) {\n        var callback = args.pop();\n        args.push(function() {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate(function() {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        var sync = true;\n        fn.apply(this, args);\n        sync = false;\n    });\n};\n\n},{\"async.util.restparam\":12,\"async.util.setimmediate\":13}],5:[function(require,module,exports){\n'use strict';\n\nmodule.exports = Array.isArray || function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar isArray = require('async.util.isarray');\n\nmodule.exports = function isArrayLike(arr) {\n    return isArray(arr) || (\n        // has a positive integer length property\n        typeof arr.length === 'number' &&\n        arr.length >= 0 &&\n        arr.length % 1 === 0\n    );\n};\n\n},{\"async.util.isarray\":5}],7:[function(require,module,exports){\n'use strict';\n\nvar _keys = require('async.util.keys');\nvar isArrayLike = require('async.util.isarraylike');\n\nmodule.exports = function keyIterator(coll) {\n    var i = -1;\n    var len;\n    var keys;\n    if (isArrayLike(coll)) {\n        len = coll.length;\n        return function next() {\n            i++;\n            return i < len ? i : null;\n        };\n    } else {\n        keys = _keys(coll);\n        len = keys.length;\n        return function next() {\n            i++;\n            return i < len ? keys[i] : null;\n        };\n    }\n};\n\n},{\"async.util.isarraylike\":6,\"async.util.keys\":8}],8:[function(require,module,exports){\n'use strict';\n\nmodule.exports = Object.keys || function keys(obj) {\n    var _keys = [];\n    for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            _keys.push(k);\n        }\n    }\n    return _keys;\n};\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function noop () {};\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function once(fn) {\n    return function() {\n        if (fn === null) return;\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function only_once(fn) {\n    return function() {\n        if (fn === null) throw new Error('Callback was already called.');\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n\n},{}],12:[function(require,module,exports){\n'use strict';\nmodule.exports = function restParam(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n        var length = Math.max(arguments.length - startIndex, 0);\n        var rest = new Array(length);\n        for (var index = 0; index < length; index++) {\n            rest[index] = arguments[index + startIndex];\n        }\n        switch (startIndex) {\n            case 0:\n                return func.call(this, rest);\n            case 1:\n                return func.call(this, arguments[0], rest);\n        }\n    };\n};\n\n},{}],13:[function(require,module,exports){\n(function (setImmediate){(function (){\n'use strict';\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\nvar fallback = function(fn) {\n    setTimeout(fn, 0);\n};\n\nmodule.exports = function setImmediate(fn) {\n    // not a direct alias for IE10 compatibility\n    return (_setImmediate || fallback)(fn);\n};\n\n}).call(this)}).call(this,require(\"timers\").setImmediate)\n\n},{\"timers\":133}],14:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function withoutIndex(iterator) {\n    return function(value, index, callback) {\n        return iterator(value, callback);\n    };\n};\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar isArray = require('async.util.isarray');\nvar restParam = require('async.util.restparam');\nvar ensureAsync = require('async.util.ensureasync');\nvar iterator = require('async.iterator');\n\nmodule.exports = function(tasks, cb) {\n    cb = once(cb || noop);\n    if (!isArray(tasks)) return cb(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return cb();\n\n    function wrapIterator(iterator) {\n        return restParam(function(err, args) {\n            if (err) {\n                cb.apply(null, [err].concat(args));\n            } else {\n                var next = iterator.next();\n                if (next) {\n                    args.push(wrapIterator(next));\n                } else {\n                    args.push(cb);\n                }\n                ensureAsync(iterator).apply(null, args);\n            }\n        });\n    }\n    wrapIterator(iterator(tasks))();\n};\n\n},{\"async.iterator\":2,\"async.util.ensureasync\":4,\"async.util.isarray\":5,\"async.util.noop\":9,\"async.util.once\":10,\"async.util.restparam\":12}],16:[function(require,module,exports){\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n},{}],17:[function(require,module,exports){\n/*\r\n *  big.js v6.2.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2022 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,            // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n    /*\r\n     * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n     * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n     * primitive number without a loss of precision.\r\n     */\r\n    STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        if (typeof n !== 'string') {\r\n          if (Big.strict === true && typeof n !== 'bigint') {\r\n            throw TypeError(INVALID + 'value');\r\n          }\r\n\r\n          // Minus zero?\r\n          n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n        }\r\n\r\n        parse(x, n);\r\n      }\r\n\r\n      // Retain a reference to this Big constructor.\r\n      // Shadow Big.prototype.constructor which points to Object.\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.strict = STRICT;\r\n    Big.roundDown = 0;\r\n    Big.roundHalfUp = 1;\r\n    Big.roundHalfEven = 2;\r\n    Big.roundUp = 3;\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    if (!NUMERIC.test(n)) {\r\n      throw Error(INVALID + 'number');\r\n    }\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n   * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, sd, rm, more) {\r\n    var xc = x.c;\r\n\r\n    if (rm === UNDEFINED) rm = x.constructor.RM;\r\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    if (sd < 1) {\r\n      more =\r\n        rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n        rm === 1 && xc[0] >= 5 ||\r\n        rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n      );\r\n\r\n      xc.length = 1;\r\n\r\n      if (more) {\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        x.e = x.e - sd + 1;\r\n        xc[0] = 1;\r\n      } else {\r\n\r\n        // Zero.\r\n        xc[0] = x.e = 0;\r\n      }\r\n    } else if (sd < xc.length) {\r\n\r\n      // xc[sd] is the digit after the digit that may be rounded up.\r\n      more =\r\n        rm === 1 && xc[sd] >= 5 ||\r\n        rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n          (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n        rm === 3 && (more || !!xc[0]);\r\n\r\n      // Remove any digits after the required precision.\r\n      xc.length = sd;\r\n\r\n      // Round up?\r\n      if (more) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up.\r\n        for (; ++xc[--sd] > 9;) {\r\n          xc[sd] = 0;\r\n          if (sd === 0) {\r\n            ++x.e;\r\n            xc.unshift(1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (sd = xc.length; !xc[--sd];) xc.pop();\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   */\r\n  function stringify(x, doExponential, isNonzero) {\r\n    var e = x.e,\r\n      s = x.c.join(''),\r\n      n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (doExponential) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) {\r\n        for (e -= n; e--;) s += '0';\r\n      } else if (e < n) {\r\n        s = s.slice(0, e) + '.' + s.slice(e);\r\n      }\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && isNonzero ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n   */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) {\r\n      y.s = k;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n    q.s = k;\r\n    k = p < 0 ? 0 : p;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n      p--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (yc[0]) {\r\n        y.s = -b;\r\n      } else if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = 1;\r\n      }\r\n      return y;\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n  \r\n  \r\n  /*\r\n   * Return a new Big whose value is the value of this Big negated.\r\n   */\r\n  P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var e, k, t,\r\n      x = this,\r\n      Big = x.constructor;\r\n\r\n    y = new Big(y);\r\n\r\n    // Signs differ?\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (!yc[0]) {\r\n        if (xc[0]) {\r\n          y = new Big(x);\r\n        } else {\r\n          y.s = x.s;\r\n        }\r\n      }\r\n      return y;\r\n    }\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (e = xe - ye) {\r\n      if (e > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        e = -e;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; e--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    e = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (k) {\r\n      xc.unshift(k);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor('1'),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n      throw Error(INVALID + 'exponent');\r\n    }\r\n\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n   * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.prec = function (sd, rm) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    return round(new this.constructor(this), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n   * using rounding mode rm, or Big.RM if rm is not specified.\r\n   * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.round = function (dp, rm) {\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    return round(new this.constructor(this), dp + this.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big('0.5');\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) {\r\n      throw Error(NAME + 'No square root');\r\n    }\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s + '');\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) {\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = b;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), ++dp, rm);\r\n      for (; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, true, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n      // x.e may have changed if the value is rounded up.\r\n      for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, false, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toJSON = P.toString = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Big as a primitve number.\r\n   */\r\n  P.toNumber = function () {\r\n    var n = Number(stringify(this, true, true));\r\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n      throw Error(NAME + 'Imprecise conversion');\r\n    }\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * rounding mode rm, or Big.RM if rm is not specified.\r\n   * Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      n = x.c[0];\r\n\r\n    if (sd !== UNDEFINED) {\r\n      if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n        throw Error(INVALID + 'precision');\r\n      }\r\n      x = round(new Big(x), sd, rm);\r\n      for (; x.c.length < sd;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    if (Big.strict === true) {\r\n      throw Error(NAME + 'valueOf disallowed');\r\n    }\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n\n},{}],18:[function(require,module,exports){\n\n},{}],19:[function(require,module,exports){\narguments[4][18][0].apply(exports,arguments)\n},{\"dup\":18}],20:[function(require,module,exports){\n(function (Buffer){(function (){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"base64-js\":16,\"buffer\":20,\"ieee754\":77}],21:[function(require,module,exports){\nmodule.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n\n},{}],22:[function(require,module,exports){\n/**\n* Cache data structure with:\n*  - enumerable items\n*  - unique hash item access (if none is passed in, one is generated)\n*  - size (length) expiration\n*  - controllable expiration (e.g. keep in cache longer if older/less likely to change)\n*  - time-based expiration\n*  - custom expiration based on passed-in function\n*\n* Also:\n*  - built to work well with browserify\n*  - no dependencies at all\n*  - pet friendly\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nconst libLinkedList = require(`./LinkedList.js`);\n\nclass CashMoney extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'ObjectCache';\n\n\t\t// The map of node objects by hash because Reasons.\n\t\tthis._HashMap = {};\n\n\t\tthis._RecordMap = {};\n\n\t\tthis._List = new libLinkedList();\n\n\t\t// If the list gets over maxLength, we will automatically remove nodes on insertion.\n\t\tthis.maxLength = 0;\n\n\t\t// If cache entries get over this age, they are removed with prune\n\t\tthis.maxAge = 0;\n\t}\n\n\tget RecordMap()\n\t{\n\t\treturn this._RecordMap;\n\t}\n\n\t// Add (or update) a node in the cache\n\tput(pData, pHash)\n\t{\n\t\t// If the hash of the record exists\n\t\tif (this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\t// Just update the hashed records datum\n\t\t\tthis._HashMap[pHash].Datum = pData;\n\t\t\tthis._RecordMap[pHash] = pData;\n\t\t\treturn this._HashMap[pHash].Datum;\n\t\t}\n\n\t\tlet tmpNode = this._List.push(pData, pHash);\n\t\tthis._HashMap[tmpNode.Hash] = tmpNode;\n\t\tthis._RecordMap[pHash] = pData;\n\n\t\t// Automatically prune if over length, but only prune this nodes worth.\n\t\tif (this.maxLength > 0   &&   this._List.length > this.maxLength)\n\t\t{\n\t\t\t// Pop it off the head of the list\n\t\t\ttmpNode = this._List.pop();\n\t\t\t// Also remove it from the hashmap\n\t\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\t\tdelete this._HashMap[tmpNode.Hash];\n\t\t}\n\n\t\t// Now some expiration properties on the node metadata... namely the birthdate in ms of the node\n\t\ttmpNode.Metadata.Created = +new Date();\n\n\t\treturn tmpNode.Datum;\n\t}\n\n\t// Read a datum by hash from the cache\n\tread(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._HashMap[pHash].Datum;\n\t}\n\n\t// Reinvigorate a node based on hash, updating the timestamp and moving it to the head of the list (also removes custom metadata)\n\ttouch(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get the old node out of the list\n\t\tlet tmpNode = this._List.remove(this._HashMap[pHash]);\n\t\t// Remove it from the hash map\n\t\tdelete this._RecordMap[pHash];\n\t\tdelete this._HashMap[pHash];\n\n\t\t// Now put it back, fresh.\n\t\treturn this.put(tmpNode.Datum, tmpNode.Hash);\n\t}\n\n\t// Expire a cached record based on hash\n\texpire(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpNode = this._HashMap[pHash];\n\n\t\t// Remove it from the list of cached records\n\t\ttmpNode = this._List.remove(tmpNode);\n\t\t// Also remove it from the hashmap\n\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\tdelete this._HashMap[tmpNode.Hash];\n\n\t\t// Return it in case the consumer wants to do anything with it\n\t\treturn tmpNode;\n\t}\n\n\t// Prune records from the cached set based on maxAge\n\tpruneBasedOnExpiration(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tif (this.maxAge < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now enumerate each record and remove any that are expired\n\t\tlet tmpNow = +new Date();\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\t// Expire the node if it is older than max age milliseconds\n\t\t\tif (tmpNow - this._HashMap[tmpKeys[i]].Metadata.Created >= this.maxAge)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on maxLength\n\tpruneBasedOnLength(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\t// Pop records off until we have reached maxLength unless it's 0\n\t\tif (this.maxLength > 0)\n\t\t{\n\t\t\twhile (this._List.length > this.maxLength)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this._List.pop());\n\t\t\t}\n\t\t}\n\n\t\treturn fComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on passed in pPruneFunction(pDatum, pHash, pNode) -- returning true expires it\n\tpruneCustom(fComplete, fPruneFunction, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\tlet tmpNode = this._HashMap[tmpKeys[i]];\n\t\t\t// Expire the node if the passed in function returns true\n\t\t\tif (fPruneFunction(tmpNode.Datum, tmpNode.Hash, tmpNode))\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune the list down to the asserted rules (max age then max length if still too long)\n\tprune(fComplete)\n\t{\n\t\tlet tmpRemovedRecords = [];\n\n\t\t// If there are no cached records, we are done.\n\t\tif (this._List.length < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now prune based on expiration time\n\t\tthis.pruneBasedOnExpiration((fExpirationPruneComplete)=>\n\t\t\t{\n\t\t\t\t// Now prune based on length, then return the removed records in the callback.\n\t\t\t\tthis.pruneBasedOnLength(fComplete, tmpRemovedRecords);\n\t\t\t}, tmpRemovedRecords);\n\t}\n\n\t// Get a low level node (including metadata statistics) by hash from the cache\n\tgetNode(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\n\t\treturn this._HashMap[pHash];\n\t}\n}\n\nmodule.exports = CashMoney;\n},{\"./LinkedList.js\":24,\"fable-serviceproviderbase\":44}],23:[function(require,module,exports){\n/**\n* Double Linked List Node\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Linked List Node Prototype\n*\n* @class LinkedListNode\n* @constructor\n*/\n\nclass LinkedListNode\n{\n\tconstructor()\n\t{\n\t\tthis.Hash = false;\n\t\tthis.Datum = false;\n\n\t\t// This is where expiration and other elements are stored;\n\t\tthis.Metadata = {};\n\n\t\tthis.LeftNode = false;\n\t\tthis.RightNode = false;\n\n\t\t// To allow safe specialty operations on nodes\n\t\tthis.__ISNODE = true;\n\t}\n}\n\nmodule.exports = LinkedListNode;\n},{}],24:[function(require,module,exports){\n\"use strict\"\n/**\n* Simple double linked list to hold the cache entries in, in order.\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module FeeFiFo\n*/\n\nconst libLinkedListNode = require('./LinkedList-Node.js');\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nclass LinkedList\n{\n\tconstructor()\n\t{\n\t\t// Total number of nodes ever processed by this ADT\n\t\tthis.totalNodes = 0;\n\n\t\t// The length of the set of nodes currently in the list\n\t\tthis.length = 0;\n\n\t\tthis.head = false;\n\t\tthis.tail = false;\n\t}\n\n\t// Create a node object.\n\tinitializeNode(pDatum, pHash)\n\t{\n\t\t// Don't allow undefined to be added to the list because of reasons\n\t\tif (typeof(pDatum) === 'undefined')\n\t\t\treturn false;\n\n\t\tthis.totalNodes++;\n\n\t\t// Get (or create) a unique hash\n\t\tlet tmpHash = (typeof(pHash) != 'undefined') ? pHash : `NODE[${this.totalNodes}]`;\n\n\t\tlet tmpNode = new libLinkedListNode();\n\n\t\ttmpNode.Hash = tmpHash;\n\t\ttmpNode.Datum = pDatum;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Add a node to the end (right of tail) of the list.\n\tappend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.tail.RightNode = tmpNode;\n\t\ttmpNode.LeftNode = this.tail;\n\t\tthis.tail = tmpNode;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Append to tail of list (FIFO)\n\tpush(pDatum, pHash)\n\t{\n\t\treturn this.append(pDatum, pHash);\n\t}\n\n\t// Add a node to the beginning (left of head) of the list.\n\tprepend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.head.LeftNode = tmpNode;\n\t\ttmpNode.RightNode = this.head;\n\t\tthis.head = tmpNode;\n\t\treturn tmpNode;\n\t}\n\n\t// Remove a node from the list\n\tremove(pNode)\n\t{\n\t\tif (typeof(pNode) === 'undefined')\n\t\t\treturn false;\n\n\t\tif (!pNode.__ISNODE)\n\t\t\treturn false;\n\n\t\tthis.length--;\n\n\t\t// Last element in list.  Empty it out.\n\t\tif (this.length < 1)\n\t\t{\n\t\t\tthis.head = false;\n\t\t\tthis.tail = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's somewhere in the middle, surgically remove it.\n\t\tif (pNode.LeftNode && pNode.RightNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = pNode.RightNode;\n\t\t\tpNode.RightNode.LeftNode = pNode.LeftNode;\n\n\t\t\tpNode.RightNode = false;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's the tail\n\t\tif (pNode.LeftNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = false;\n\t\t\tthis.tail = pNode.LeftNode;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It must be the head\n\t\tpNode.RightNode.LeftNode = false;\n\t\tthis.head = pNode.RightNode;\n\t\tpNode.RightNode = false;\n\t\treturn pNode;\n\t}\n\n\t// Remove the head of the list (FIFO)\n\tpop()\n\t{\n\t\treturn this.remove(this.head);\n\t}\n\n\t// Enumerate over each node IN ORDER, running the function fAction(pDatum, pHash, fCallback) then calling the function fComplete callback when done\n\teach(fAction, fComplete)\n\t{\n\t\tif (this.length < 1)\n\t\t\treturn fComplete();\n\n\t\tlet tmpNode = false;\n\n\t\tlet fIterator = (pError)=>\n\t\t{\n\t\t\t// If the user passed in a callback with an error, call their callback with the error\n\t\t\tif (pError)\n\t\t\t\treturn fComplete(pError);\n\n\t\t\t// If there is no node, this must be the initial run.\n\t\t\tif (!tmpNode)\n\t\t\t\ttmpNode = this.head;\n\t\t\t// Check if we are at the tail of the list\n\t\t\telse if (!tmpNode.RightNode)\n\t\t\t\treturn fComplete();\n\t\t\t// Proceed to the next node\n\t\t\telse\n\t\t\t\ttmpNode = tmpNode.RightNode;\n\n\t\t\t// Call the actual action\n\t\t\t// I hate this pattern because long tails eventually cause stack overflows.\n\t\t\tfAction(tmpNode.Datum, tmpNode.Hash, fIterator);\n\t\t};\n\n\t\t// Now kick off the iterator\n\t\treturn fIterator();\n\t}\n\n\t// Seek a specific node, 0 is the index of the first node.\n\tseek(pNodeIndex)\n\t{\n\t\tif (!pNodeIndex)\n\t\t\treturn false;\n\t\tif (this.length < 1)\n\t\t\treturn false;\n\t\tif (pNodeIndex >= this.length)\n\t\t\treturn false;\n\n\t\tlet tmpNode = this.head;\n\t\tfor (let i = 0; i < pNodeIndex; i++)\n\t\t{\n\t\t\ttmpNode = tmpNode.RightNode;\n\t\t}\n\n\t\treturn tmpNode;\n\t}\n}\n\nmodule.exports = LinkedList;\n},{\"./LinkedList-Node.js\":23}],25:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n\n},{\"./\":26,\"get-intrinsic\":69}],26:[function(require,module,exports){\n'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\nvar setFunctionLength = require('set-function-length');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tif (typeof originalFunction !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\tvar func = $reflectApply(bind, $call, arguments);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + $max(0, originalFunction.length - (arguments.length - 1)),\n\t\ttrue\n\t);\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n\n},{\"function-bind\":68,\"get-intrinsic\":69,\"set-function-length\":109}],27:[function(require,module,exports){\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.partitioned) {\n    str += '; Partitioned'\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} val\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n},{}],28:[function(require,module,exports){\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));\n},{}],29:[function(require,module,exports){\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_advancedFormat=t()}(this,(function(){\"use strict\";return function(e,t){var r=t.prototype,n=r.format;r.format=function(e){var t=this,r=this.$locale();if(!this.isValid())return n.bind(this)(e);var s=this.$utils(),a=(e||\"YYYY-MM-DDTHH:mm:ssZ\").replace(/\\[([^\\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g,(function(e){switch(e){case\"Q\":return Math.ceil((t.$M+1)/3);case\"Do\":return r.ordinal(t.$D);case\"gggg\":return t.weekYear();case\"GGGG\":return t.isoWeekYear();case\"wo\":return r.ordinal(t.week(),\"W\");case\"w\":case\"ww\":return s.s(t.week(),\"w\"===e?1:2,\"0\");case\"W\":case\"WW\":return s.s(t.isoWeek(),\"W\"===e?1:2,\"0\");case\"k\":case\"kk\":return s.s(String(0===t.$H?24:t.$H),\"k\"===e?1:2,\"0\");case\"X\":return Math.floor(t.$d.getTime()/1e3);case\"x\":return t.$d.getTime();case\"z\":return\"[\"+t.offsetName()+\"]\";case\"zzz\":return\"[\"+t.offsetName(\"long\")+\"]\";default:return e}}));return n.bind(this)(a)}}}));\n},{}],30:[function(require,module,exports){\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isoWeek=t()}(this,(function(){\"use strict\";var e=\"day\";return function(t,i,s){var a=function(t){return t.add(4-t.isoWeekday(),e)},d=i.prototype;d.isoWeekYear=function(){return a(this).year()},d.isoWeek=function(t){if(!this.$utils().u(t))return this.add(7*(t-this.isoWeek()),e);var i,d,n,o,r=a(this),u=(i=this.isoWeekYear(),d=this.$u,n=(d?s.utc:s)().year(i).startOf(\"year\"),o=4-n.isoWeekday(),n.isoWeekday()>4&&(o+=7),n.add(o,e));return r.diff(u,\"week\")+1},d.isoWeekday=function(e){return this.$utils().u(e)?this.day()||7:this.day(this.day()%7?e:e-7)};var n=d.startOf;d.startOf=function(e,t){var i=this.$utils(),s=!!i.u(t)||t;return\"isoweek\"===i.p(e)?s?this.date(this.date()-(this.isoWeekday()-1)).startOf(\"day\"):this.date(this.date()-1-(this.isoWeekday()-1)+7).endOf(\"day\"):n.bind(this)(e,t)}}}));\n},{}],31:[function(require,module,exports){\n!function(r,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(r=\"undefined\"!=typeof globalThis?globalThis:r||self).dayjs_plugin_relativeTime=e()}(this,(function(){\"use strict\";return function(r,e,t){r=r||{};var n=e.prototype,o={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"};function i(r,e,t,o){return n.fromToBase(r,e,t,o)}t.en.relativeTime=o,n.fromToBase=function(e,n,i,d,u){for(var f,a,s,l=i.$locale().relativeTime||o,h=r.thresholds||[{l:\"s\",r:44,d:\"second\"},{l:\"m\",r:89},{l:\"mm\",r:44,d:\"minute\"},{l:\"h\",r:89},{l:\"hh\",r:21,d:\"hour\"},{l:\"d\",r:35},{l:\"dd\",r:25,d:\"day\"},{l:\"M\",r:45},{l:\"MM\",r:10,d:\"month\"},{l:\"y\",r:17},{l:\"yy\",d:\"year\"}],m=h.length,c=0;c<m;c+=1){var y=h[c];y.d&&(f=d?t(e).diff(i,y.d,!0):i.diff(e,y.d,!0));var p=(r.rounding||Math.round)(Math.abs(f));if(s=f>0,p<=y.r||!y.r){p<=1&&c>0&&(y=h[c-1]);var v=l[y.l];u&&(p=u(\"\"+p)),a=\"string\"==typeof v?v.replace(\"%d\",p):v(p,n,y.l,s);break}}if(n)return a;var M=s?l.future:l.past;return\"function\"==typeof M?M(a):M.replace(\"%s\",a)},n.to=function(r,e){return i(r,e,this,!0)},n.from=function(r,e){return i(r,e,this)};var d=function(r){return r.$u?t.utc():t()};n.toNow=function(r){return this.to(d(this),r)},n.fromNow=function(r){return this.from(d(this),r)}}}));\n},{}],32:[function(require,module,exports){\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_timezone=e()}(this,(function(){\"use strict\";var t={year:0,month:1,day:2,hour:3,minute:4,second:5},e={};return function(n,i,o){var r,a=function(t,n,i){void 0===i&&(i={});var o=new Date(t),r=function(t,n){void 0===n&&(n={});var i=n.timeZoneName||\"short\",o=t+\"|\"+i,r=e[o];return r||(r=new Intl.DateTimeFormat(\"en-US\",{hour12:!1,timeZone:t,year:\"numeric\",month:\"2-digit\",day:\"2-digit\",hour:\"2-digit\",minute:\"2-digit\",second:\"2-digit\",timeZoneName:i}),e[o]=r),r}(n,i);return r.formatToParts(o)},u=function(e,n){for(var i=a(e,n),r=[],u=0;u<i.length;u+=1){var f=i[u],s=f.type,m=f.value,c=t[s];c>=0&&(r[c]=parseInt(m,10))}var d=r[3],l=24===d?0:d,h=r[0]+\"-\"+r[1]+\"-\"+r[2]+\" \"+l+\":\"+r[4]+\":\"+r[5]+\":000\",v=+e;return(o.utc(h).valueOf()-(v-=v%1e3))/6e4},f=i.prototype;f.tz=function(t,e){void 0===t&&(t=r);var n=this.utcOffset(),i=this.toDate(),a=i.toLocaleString(\"en-US\",{timeZone:t}),u=Math.round((i-new Date(a))/1e3/60),f=o(a,{locale:this.$L}).$set(\"millisecond\",this.$ms).utcOffset(15*-Math.round(i.getTimezoneOffset()/15)-u,!0);if(e){var s=f.utcOffset();f=f.add(n-s,\"minute\")}return f.$x.$timezone=t,f},f.offsetName=function(t){var e=this.$x.$timezone||o.tz.guess(),n=a(this.valueOf(),e,{timeZoneName:t}).find((function(t){return\"timezonename\"===t.type.toLowerCase()}));return n&&n.value};var s=f.startOf;f.startOf=function(t,e){if(!this.$x||!this.$x.$timezone)return s.call(this,t,e);var n=o(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\"),{locale:this.$L});return s.call(n,t,e).tz(this.$x.$timezone,!0)},o.tz=function(t,e,n){var i=n&&e,a=n||e||r,f=u(+o(),a);if(\"string\"!=typeof t)return o(t).tz(a);var s=function(t,e,n){var i=t-60*e*1e3,o=u(i,n);if(e===o)return[i,e];var r=u(i-=60*(o-e)*1e3,n);return o===r?[i,o]:[t-60*Math.min(o,r)*1e3,Math.max(o,r)]}(o.utc(t,i).valueOf(),f,a),m=s[0],c=s[1],d=o(m).utcOffset(c);return d.$x.$timezone=a,d},o.tz.guess=function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},o.tz.setDefault=function(t){r=t}}}));\n},{}],33:[function(require,module,exports){\n!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_utc=i()}(this,(function(){\"use strict\";var t=\"minute\",i=/[+-]\\d\\d(?::?\\d\\d)?/g,e=/([+-]|\\d\\d)/g;return function(s,f,n){var u=f.prototype;n.utc=function(t){var i={date:t,utc:!0,args:arguments};return new f(i)},u.utc=function(i){var e=n(this.toDate(),{locale:this.$L,utc:!0});return i?e.add(this.utcOffset(),t):e},u.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var o=u.parse;u.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),o.call(this,t)};var r=u.init;u.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else r.call(this)};var a=u.utcOffset;u.utcOffset=function(s,f){var n=this.$utils().u;if(n(s))return this.$u?0:n(this.$offset)?a.call(this):this.$offset;if(\"string\"==typeof s&&(s=function(t){void 0===t&&(t=\"\");var s=t.match(i);if(!s)return null;var f=(\"\"+s[0]).match(e)||[\"-\",0,0],n=f[0],u=60*+f[1]+ +f[2];return 0===u?0:\"+\"===n?u:-u}(s),null===s))return this;var u=Math.abs(s)<=16?60*s:s,o=this;if(f)return o.$offset=u,o.$u=0===s,o;if(0!==s){var r=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(o=this.local().add(u+r,t)).$offset=u,o.$x.$localOffset=r}else o=this.utc();return o};var h=u.format;u.format=function(t){var i=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return h.call(this,i)},u.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*t},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var l=u.toDate;u.toDate=function(t){return\"s\"===t&&this.$offset?n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate():l.call(this)};var c=u.diff;u.diff=function(t,i,e){if(t&&this.$u===t.$u)return c.call(this,t,i,e);var s=this.local(),f=n(t).local();return c.call(s,f,i,e)}}}));\n},{}],34:[function(require,module,exports){\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekOfYear=t()}(this,(function(){\"use strict\";var e=\"week\",t=\"year\";return function(i,n,r){var f=n.prototype;f.week=function(i){if(void 0===i&&(i=null),null!==i)return this.add(7*(i-this.week()),\"day\");var n=this.$locale().yearStart||1;if(11===this.month()&&this.date()>25){var f=r(this).startOf(t).add(1,t).date(n),s=r(this).endOf(e);if(f.isBefore(s))return 1}var a=r(this).startOf(t).date(n).startOf(e).subtract(1,\"millisecond\"),o=this.diff(a,e,!0);return o<0?r(this).startOf(\"week\").week():Math.ceil(o)},f.weeks=function(e){return void 0===e&&(e=null),this.week(e)}}}));\n},{}],35:[function(require,module,exports){\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekday=t()}(this,(function(){\"use strict\";return function(e,t){t.prototype.weekday=function(e){var t=this.$locale().weekStart||0,i=this.$W,n=(i<t?i+7:i)-t;return this.$utils().u(e)?n:this.subtract(n,\"day\").add(e,\"day\")}}}));\n},{}],36:[function(require,module,exports){\n'use strict';\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = hasPropertyDescriptors && GetIntrinsic('%Object.defineProperty%', true);\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar gopd = require('gopd');\n\n/** @type {(obj: Record<PropertyKey, unknown>, property: PropertyKey, value: unknown, nonEnumerable?: boolean | null, nonWritable?: boolean | null, nonConfigurable?: boolean | null, loose?: boolean) => void} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n\n},{\"get-intrinsic\":69,\"gopd\":70,\"has-property-descriptors\":71}],37:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n},{}],38:[function(require,module,exports){\n/**\n* Base Logger Class\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass BaseLogger extends libFableServiceProviderBase\n{\n\tconstructor(pLogStreamSettings, pLogStreamHash)\n\t{\n\t\tsuper(pLogStreamSettings, pLogStreamHash);\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = (typeof(pLogStreamSettings) == 'object') ? pLogStreamSettings : {};\n\n\t\tthis.serviceType = 'Logging-Provider';\n\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\t// We added this as the mechanism for tracking loggers to allow multiple simultaneous streams\n\t\t// to the same provider.\n\t\tthis.loggerUUID = this.generateInsecureUUID();\n\n\t\t// Eventually we can use this array to ompute which levels the provider allows.\n\t\t// For now it's just used to precompute some string concatenations.\n\t\tthis.levels = (\n\t\t\t[\n\t\t\t\t\"trace\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"info\",\n\t\t\t\t\"warn\",\n\t\t\t\t\"error\",\n\t\t\t\t\"fatal\"\n\t\t\t]);\n\t}\n\n\t// This is meant to generate programmatically insecure UUIDs to identify loggers\n\tgenerateInsecureUUID()\n\t{\n\t\tlet tmpDate = new Date().getTime();\n\t\tlet tmpUUID = 'LOGSTREAM-xxxxxx-yxxxxx'.replace(/[xy]/g,\n\t\t\t\t(pCharacter) =>\n\t\t\t\t{\n\t\t\t\t\t// Funny algorithm from w3resource that is twister-ish without the deep math and security\n\t\t\t\t\t// ..but good enough for unique log stream identifiers\n\t\t\t\t\tlet tmpRandomData = (tmpDate + Math.random()*16)%16 | 0;\n\t\t\t\t\ttmpDate = Math.floor(tmpDate/16);\n\n\t\t\t\t\treturn (pCharacter =='x' ? tmpRandomData : (tmpRandomData&0x3|0x8)).toString(16);\n\t\t\t\t});\n\t\treturn tmpUUID;\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n\n},{\"fable-serviceproviderbase\":44}],39:[function(require,module,exports){\n/**\n* Default Logger Provider Function\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\nvar getDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\ttmpDefaultProviders.default = tmpDefaultProviders.console;\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();\n},{\"./Fable-Log-Logger-Console.js\":41}],40:[function(require,module,exports){\nmodule.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]\n},{}],41:[function(require,module,exports){\nlet libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings);\n\n\t\tthis._ShowTimeStamps = this._Settings.hasOwnProperty('showtimestamps') ? (this._Settings.showtimestamps == true) : true;\n\t\tthis._FormattedTimeStamps = this._Settings.hasOwnProperty('formattedtimestamps') ? (this._Settings.formattedtimestamps == true) : true;\n\n\t\tthis._ContextMessage = this._Settings.hasOwnProperty('Context') ? `(${this._Settings.Context})` :\n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? `(${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'Unnamed_Log_Context';\n\n\t\t// Allow the user to decide what gets output to the console\n\t\tthis._OutputLogLinesToConsole = this._Settings.hasOwnProperty('outputloglinestoconsole') ? this._Settings.outputloglinestoconsole : true;\n\t\tthis._OutputObjectsToConsole = this._Settings.hasOwnProperty('outputobjectstoconsole') ? this._Settings.outputobjectstoconsole : true;\n\n\t\t// Precompute the prefix for each level\n\t\tthis.prefixCache = {};\n\t\tfor (let i = 0; i <= this.levels.length; i++)\n\t\t{\n\t\t\tthis.prefixCache[this.levels[i]] = `[${this.levels[i]}] ${this._ContextMessage}: `;\n\n\t\t\tif (this._ShowTimeStamps)\n\t\t\t{\n\t\t\t\t// If there is a timestamp we need a to prepend space before the prefixcache string, since the timestamp comes first\n\t\t\t\tthis.prefixCache[this.levels[i]] = ' '+this.prefixCache[this.levels[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpTimeStamp = '';\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = (new Date()).toISOString();\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = +new Date();\n\t\t}\n\n\t\tlet tmpLogLine = `${tmpTimeStamp}${this.prefixCache[pLevel]}${pLogText}`;\n\n\t\tif (this._OutputLogLinesToConsole)\n\t\t{\n\t\t\tconsole.log(tmpLogLine);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (this._OutputObjectsToConsole && (typeof(pObject) !== 'undefined'))\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 2));\n\t\t}\n\n\t\t// Provide an easy way to be overridden and be consistent\n\t\treturn tmpLogLine;\n\t}\n}\n\nmodule.exports = ConsoleLogger;\n},{\"./Fable-Log-BaseLogger.js\":38}],42:[function(require,module,exports){\nconst libConsoleLog = require('./Fable-Log-Logger-Console.js');\nconst libFS = require('fs');\nconst libPath = require('path');\n\nclass SimpleFlatFileLogger extends libConsoleLog\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings, pFableLog);\n\n\t\t// If a path isn't provided for the logfile, it tries to use the ProductName or Context\n\t\tthis.logFileRawPath = (this._Settings.hasOwnProperty('path')) ? this._Settings.path : `./${this._ContextMessage}.log`;\n\t\tthis.logFilePath = libPath.normalize(this.logFileRawPath);\n\n\t\tthis.logFileStreamOptions = (this._Settings.hasOwnProperty('fileStreamoptions')) ? this._Settings.fileStreamOptions : (\n\t\t\t{\n\t\t\t\t\"flags\": \"a\",\n\t\t\t\t\"encoding\": \"utf8\"\n\t\t\t})\n\n\t\tthis.fileWriter = libFS.createWriteStream(this.logFilePath, this.logFileStreamOptions);\n\n\t\tthis.activelyWriting = false;\n\n\t\tthis.logLineStrings = [];\n\t\tthis.logObjectStrings = [];\n\n\t\tthis.defaultWriteCompleteCallback = ()=>{};\n\t\tthis.defaultBufferFlushCallback = ()=>{};\n\t}\n\n\tcloseWriter(fCloseComplete)\n\t{\n\t\tlet tmpCloseComplete = (typeof(fCloseComplete) == 'function') ? fCloseComplete : ()=>{};\n\t\tif (this.fileWriter)\n\t\t{\n\t\t\tthis.fileWriter.end('\\n');\n\t\t\treturn this.fileWriter.once('finish', tmpCloseComplete.bind(this));\n\t\t}\n\t}\n\n\tcompleteBufferFlushToLogFile(fFlushComplete)\n\t{\n\t\tthis.activelyWriting = false;\n\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\tif (this.logLineStrings.length > 0)\n\t\t{\n\t\t\tthis.flushBufferToLogFile(tmpFlushComplete);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpFlushComplete();\n\t\t}\n\t}\n\n\tflushBufferToLogFile(fFlushComplete)\n\t{\n\t\tif (!this.activelyWriting)\n\t\t{\n\t\t\t// Only want to be writing one thing at a time....\n\t\t\tthis.activelyWriting = true;\n\n\t\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\t\t// Get the current buffer arrays.  These should always have matching number of elements.\n\t\t\tlet tmpLineStrings = this.logLineStrings;\n\t\t\tlet tmpObjectStrings = this.logObjectStrings;\n\n\t\t\t// Reset these to be filled while we process this queue...\n\t\t\tthis.logLineStrings = [];\n\t\t\tthis.logObjectStrings = [];\n\n\t\t\t// This is where we will put each line before writing it to the file...\n\t\t\tlet tmpConstructedBufferOutputString = '';\n\n\t\t\tfor (let i = 0; i < tmpLineStrings.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: Windows Newline?   ....... yo no se!\n\t\t\t\ttmpConstructedBufferOutputString += `${tmpLineStrings[i]}\\n`;\n\t\t\t\tif (tmpObjectStrings[i] !== false)\n\t\t\t\t{\n\t\t\t\t\ttmpConstructedBufferOutputString += `${tmpObjectStrings[i]}\\n`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.fileWriter.write(tmpConstructedBufferOutputString, 'utf8'))\n\t\t\t{\n\t\t\t\t// If the streamwriter returns false, we need to wait for it to drain.\n\t\t\t\tthis.fileWriter.once('drain', this.completeBufferFlushToLogFile.bind(this, tmpFlushComplete));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.completeBufferFlushToLogFile(tmpFlushComplete);\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpLogLine = super.write(pLevel, pLogText, pObject);\n\n\t\t// Use a very simple array as the write buffer\n\t\tthis.logLineStrings.push(tmpLogLine);\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tthis.logObjectStrings.push(JSON.stringify(pObject, null, 4));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logObjectStrings.push(false);\n\t\t}\n\n\t\tthis.flushBufferToLogFile();\n\t}\n}\n\nmodule.exports = SimpleFlatFileLogger;\n},{\"./Fable-Log-Logger-Console.js\":41,\"fs\":19,\"path\":92}],43:[function(require,module,exports){\n/**\n* Fable Logging Service\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass FableLog extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'Logging';\n\n\t\tlet tmpSettings = (typeof(pSettings) === 'object') ? pSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders-Node.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'default',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\nmodule.exports = FableLog;\nmodule.exports.LogProviderBase = require('./Fable-Log-BaseLogger.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-Console.js');\nmodule.exports.LogProviderFlatfile = require('./Fable-Log-Logger-SimpleFlatFile.js');\n\n},{\"./Fable-Log-BaseLogger.js\":38,\"./Fable-Log-DefaultProviders-Node.js\":39,\"./Fable-Log-DefaultStreams.json\":40,\"./Fable-Log-Logger-Console.js\":41,\"./Fable-Log-Logger-SimpleFlatFile.js\":42,\"fable-serviceproviderbase\":44}],44:[function(require,module,exports){\n/**\n* Fable Service Base\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\t// The constructor can be used in two ways:\n\t// 1) With a fable, options object and service hash (the options object and service hash are optional)\n\t// 2) With an object or nothing as the first parameter, where it will be treated as the options object\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Check if a fable was passed in; connect it if so\n\t\tif ((typeof(pFable) === 'object') && pFable.isFable)\n\t\t{\n\t\t\tthis.connectFable(pFable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.fable = false;\n\t\t}\n\n\t\t// initialize options and UUID based on whether the fable was passed in or not.\n\t\tif (this.fable)\n\t\t{\n\t\t\tthis.UUID = pFable.getUUID();\n\t\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t\t: {};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// With no fable, check to see if there was an object passed into either of the first two\n\t\t\t// Parameters, and if so, treat it as the options object\n\t\t\tthis.options = ((typeof(pFable) === 'object') && !pFable.isFable) ? pFable\n\t\t\t\t\t\t\t: (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t\t: {};\n\t\t\tthis.UUID = `CORE-SVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`\n\t\t}\n\n\t\t// It's expected that the deriving class will set this\n\t\tthis.serviceType = `Unknown-${this.UUID}`;\n\n\t\t// The service hash is used to identify the specific instantiation of the service in the services map\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash \n\t\t\t\t\t: (!this.fable && (typeof(pOptions) === 'string')) ? pOptions\n\t\t\t\t\t: `${this.UUID}`;\n\t}\n\n\tconnectFable(pFable)\n\t{\n\t\tif ((typeof(pFable) !== 'object') || (!pFable.isFable))\n\t\t{\n\t\t\tlet tmpErrorMessage = `Fable Service Provider Base: Cannot connect to Fable, invalid Fable object passed in.  The pFable parameter was a [${typeof(pFable)}].}`;\n\t\t\tconsole.log(tmpErrorMessage);\n\t\t\treturn new Error(tmpErrorMessage);\n\t\t}\n\n\t\tif (!this.fable)\n\t\t{\n\t\t\tthis.fable = pFable;\n\t\t}\n\n\t\tif (!this.log)\n\t\t{\n\t\t\tthis.log = this.fable.Logging;\n\t\t}\n\t\tif (!this.services)\n\t\t{\n\t\t\tthis.services = this.fable.services;\n\t\t}\n\n\t\tif (!this.servicesMap)\n\t\t{\n\t\t\tthis.servicesMap = this.fable.servicesMap;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tstatic isFableService = true;\n}\n\nmodule.exports = FableServiceProviderBase;\n\n// This is left here in case we want to go back to having different code/base class for \"core\" services\nmodule.exports.CoreServiceProviderBase = FableServiceProviderBase;\n},{}],45:[function(require,module,exports){\nmodule.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n\n},{}],46:[function(require,module,exports){\n(function (process){(function (){\n/**\n* Fable Settings Template Processor\n*\n* This class allows environment variables to come in via templated expressions, and defaults to be set.\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\nconst libPrecedent = require('precedent');\n\nclass FableSettingsTemplateProcessor\n{\n\tconstructor(pDependencies)\n\t{\n        // Use a no-dependencies templating engine to parse out environment variables\n\t\tthis.templateProcessor = new libPrecedent();\n\n        // TODO: Make the environment variable wrap expression demarcation characters configurable?\n\t\tthis.templateProcessor.addPattern('${', '}',\n\t\t\t(pTemplateValue)=>\n\t\t\t{\n\t\t\t\tlet tmpTemplateValue = pTemplateValue.trim();\n\n\t\t\t\tlet tmpSeparatorIndex = tmpTemplateValue.indexOf('|');\n\n\t\t\t\tconst tmpDefaultValue = tmpSeparatorIndex >= 0 ? tmpTemplateValue.substring(tmpSeparatorIndex+1) : '';\n\n\t\t\t\tlet tmpEnvironmentVariableName = (tmpSeparatorIndex > -1) ? tmpTemplateValue.substring(0, tmpSeparatorIndex) : tmpTemplateValue;\n\n\t\t\t\tif (process.env.hasOwnProperty(tmpEnvironmentVariableName))\n\t\t\t\t{\n\t\t\t\t\treturn process.env[tmpEnvironmentVariableName];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpDefaultValue;\n\t\t\t\t}\n\t\t\t});\n    }\n\n    parseSetting(pString)\n    {\n        return this.templateProcessor.parseString(pString);\n    }\n}\n\nmodule.exports = FableSettingsTemplateProcessor;\n\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":98,\"precedent\":95}],47:[function(require,module,exports){\n/**\n* Fable Settings Add-on\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nconst libFableSettingsTemplateProcessor = require('./Fable-Settings-TemplateProcessor.js');\n\nclass FableSettings extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'SettingsManager';\n\n\t\t// Initialize the settings value template processor\n\t\tthis.settingsTemplateProcessor = new libFableSettingsTemplateProcessor();\n\n\t\t// set straight away so anything that uses it respects the initial setting\n\t\tthis._configureEnvTemplating(pSettings);\n\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')));\n\t}\n\n\t// Update the configuration for environment variable templating based on the current settings object\n\t_configureEnvTemplating(pSettings)\n\t{\n\t\t// default environment variable templating to on\n\t\tthis._PerformEnvTemplating = !pSettings || pSettings.NoEnvReplacement !== true;\n\t}\n\n\t// Resolve (recursive) any environment variables found in settings object.\n\t_resolveEnv(pSettings)\n\t{\n\t\tfor (const tmpKey in pSettings)\n\t\t{\n\t\t\tif (typeof(pSettings[tmpKey]) === 'object')\n\t\t\t{\n\t\t\t\tthis._resolveEnv(pSettings[tmpKey]);\n\t\t\t}\n\t\t\telse if (typeof(pSettings[tmpKey]) === 'string')\n\t\t\t{\n\t\t\t\tpSettings[tmpKey] = this.settingsTemplateProcessor.parseSetting(pSettings[tmpKey]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if a value is an object (but not an array).\n\t */\n\t_isObject(value)\n\t{\n\t\treturn typeof(value) === 'object' && !Array.isArray(value);\n\t}\n\n\t/**\n\t * Merge two plain objects. Keys that are objects in both will be merged property-wise.\n\t */\n\t_deepMergeObjects(toObject, fromObject)\n\t{\n\t\tif (!fromObject || !this._isObject(fromObject))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.keys(fromObject).forEach((key) =>\n\t\t{\n\t\t\tconst fromValue = fromObject[key];\n\t\t\tif (this._isObject(fromValue))\n\t\t\t{\n\t\t\t\tconst toValue = toObject[key];\n\t\t\t\tif (toValue && this._isObject(toValue))\n\t\t\t\t{\n\t\t\t\t\t// both are objects, so do a recursive merge\n\t\t\t\t\tthis._deepMergeObjects(toValue, fromValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoObject[key] = fromValue;\n\t\t});\n\t\treturn toObject;\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\t\ttmpSettingsTo = this._deepMergeObjects(tmpSettingsTo, tmpSettingsFromCopy);\n\n\t\tif (this._PerformEnvTemplating)\n\t\t{\n\t\t\tthis._resolveEnv(tmpSettingsTo);\n\t\t}\n\t\t// Update env tempating config, since we just updated the config object, and it may have changed\n\t\tthis._configureEnvTemplating(tmpSettingsTo);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\n\t\tthis.settings = this._deepMergeObjects(tmpSettingsFromCopy, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = FableSettings;\nmodule.exports.new = autoConstruct;\n},{\"./Fable-Settings-Default\":45,\"./Fable-Settings-TemplateProcessor.js\":46,\"fable-serviceproviderbase\":44}],48:[function(require,module,exports){\n/**\n* Random Byte Generator - Browser version\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn this.generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n\n},{}],49:[function(require,module,exports){\n/**\n* Fable UUID Generator\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;0\n\nconst libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'UUID';\n\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = FableUUID;\nmodule.exports.new = autoConstruct;\n\n},{\"./Fable-UUID-Random.js\":48,\"fable-serviceproviderbase\":44}],50:[function(require,module,exports){\n/**\n* Fable Application Services Support Library\n* @author <steven@velozo.com>\n*/\n// Pre-init services\nconst libFableSettings = require('fable-settings');\nconst libFableUUID = require('fable-uuid');\nconst libFableLog = require('fable-log');\n\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass Fable extends libFableServiceBase.CoreServiceProviderBase\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\t// Initialization Phase 0: Set up the lowest level state (fable is a utility service manager at heart)\n\t\tthis.serviceType = 'ServiceManager';\n\n\t\t// An array of the types of services available\n\t\tthis.serviceTypes = [];\n\t\t// A map of instantiated services\n\t\tthis.servicesMap = {};\n\t\t// A map of the default instantiated service by type\n\t\tthis.services = {};\n\n\t\t// A map of class constructors for services\n\t\tthis.serviceClasses = {};\n\n\t\t// If we need extra service initialization capabilities\n\t\tthis.extraServiceInitialization = false;\n\n\t\t// Set how noisy the system is about signaling complexity\n\t\tthis.LogNoisiness = 0;\n\n\t\t// Initialization Phase 1: Set up the core utility services\n\t\t// These are things like power, water, and sewage.  They are required for fable to run (e.g. logging, settings, etc)\n\n\t\t// Instantiate the default Settings Manager\n\t\tthis.SettingsManager = new libFableSettings(pSettings);\n\t\tthis.SettingsManager = this.SettingsManager;\n\t\t// Instantiate the UUID generator\n\t\tthis.UUID = new libFableUUID(this.SettingsManager.settings);\n\t\t// Instantiate the logging system\n\t\tthis.Logging = new libFableLog(this.SettingsManager.settings);\n\t\tthis.Logging.initialize();\n\n\t\t// Initialization Phase 1.5: Instantiate the service manager\n\t\t// This is the start actual bootstrapping point for fable.\n\t\t// For consistency fable is treated as a service.\n\t\tthis.ServiceManager = this;\n\t\t// TODO: Remove this when Orator and meadow-endpoints are shifted to this new pattern\n\t\tthis.serviceManager = this;\n\t\t// END TODO\n\t\tthis.connectFable(this);\n\t\t// --> Bootstrapping of fable into the Service Manager is complete\n\n\t\t// Initialization Phase 2: Map in the default services.\n\t\t// They will then be available in the Default service provider set as well.\n\t\tthis.connectPreinitServiceProviderInstance(this.UUID);\n\t\tthis.connectPreinitServiceProviderInstance(this.Logging);\n\t\tthis.connectPreinitServiceProviderInstance(this.SettingsManager);\n\n\t\t// Initialize and instantiate the default baked-in Data Arithmatic service\n\t\tthis.addAndInstantiateServiceType('EnvironmentData', require('./services/Fable-Service-EnvironmentData.js'));\n\t\tthis.addServiceType('Template', require('./services/Fable-Service-Template.js'));\n\t\tthis.addServiceType('MetaTemplate', require('./services/Fable-Service-MetaTemplate.js'));\n\t\tthis.addServiceType('Anticipate', require('./services/Fable-Service-Anticipate.js'));\n\t\tthis.addAndInstantiateServiceType('Dates', require('./services/Fable-Service-DateManipulation.js'));\n\t\tthis.addAndInstantiateServiceType('DataFormat', require('./services/Fable-Service-DataFormat.js'));\n\t\tthis.addAndInstantiateServiceType('DataGeneration', require('./services/Fable-Service-DataGeneration.js'));\n\t\tthis.addAndInstantiateServiceType('Utility', require('./services/Fable-Service-Utility.js'));\n\t\tthis.addServiceType('Operation', require('./services/Fable-Service-Operation.js'));\n\t\tthis.addServiceType('RestClient', require('./services/Fable-Service-RestClient.js'));\n\t\tthis.addServiceType('CSVParser', require('./services/Fable-Service-CSVParser.js'));\n\t\tthis.addServiceType('Manifest', require('manyfest'));\n\t\tthis.addServiceType('ObjectCache', require('cachetrax'));\n\t\tthis.addServiceType('FilePersistence', require('./services/Fable-Service-FilePersistence.js'));\n\t}\n\n\t/* State Accessors */\n\tget isFable()\n\t{\n\t\treturn true;\n\t}\n\n\tget settings()\n\t{\n\t\treturn this.SettingsManager.settings;\n\t}\n\n\tget settingsManager()\n\t{\n\t\treturn this.SettingsManager;\n\t}\n\n\t// For backwards compatibility\n\tgetUUID()\n\t{\n\t\treturn this.UUID.getUUID();\n\t}\n\n\tnewAnticipate()\n\t{\n\t\treturn this.instantiateServiceProviderWithoutRegistration('Anticipate');\n\t}\n\n\t/* Service Manager Methods */\n\taddServiceType(pServiceType, pServiceClass)\n\t{\n\t\tif (this.servicesMap.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\t// TODO: Check if any services are running?\n\t\t\tthis.log.warn(`Adding a service type [${pServiceType}] that already exists.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the container for instantiated services to go in\n\t\t\tthis.servicesMap[pServiceType] = {};\n\n\t\t\t// Add the type to the list of types\n\t\t\tthis.serviceTypes.push(pServiceType);\n\t\t}\n\n\t\t// Using the static member of the class is a much more reliable way to check if it is a service class than instanceof\n\t\tif ((typeof(pServiceClass) == 'function') && (pServiceClass.isFableService))\n\t\t{\n\t\t\t// Add the class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = pServiceClass;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the base class to the list of classes\n\t\t\tthis.log.error(`Attempted to add service type [${pServiceType}] with an invalid class.  Using base service class, which will not crash but won't provide meaningful services.`);\n\t\t\tthis.serviceClasses[pServiceType] = libFableServiceBase;\n\t\t}\n\t}\n\n\t// This is for the services that are meant to run mostly single-instance so need a default at initialization\n\taddAndInstantiateServiceType(pServiceType, pServiceClass)\n\t{\n\t\tthis.addServiceType(pServiceType, pServiceClass);\n\t\treturn this.instantiateServiceProvider(pServiceType, {}, `${pServiceType}-Default`);\n\t}\n\n\t// Some services expect to be overloaded / customized class.\n\tinstantiateServiceProviderFromPrototype(pServiceType, pOptions, pCustomServiceHash, pServicePrototype)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new pServicePrototype(this, pOptions, pCustomServiceHash);\n\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\tinstantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = this.instantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\t// Create a service provider but don't register it to live forever in fable.services\n\tinstantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new this.serviceClasses[pServiceType](this, pOptions, pCustomServiceHash);\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\t\treturn tmpService;\n\t}\n\n\t// Connect an initialized service provider that came before Fable was initialized\n\tconnectPreinitServiceProviderInstance(pServiceInstance)\n\t{\n\t\tlet tmpServiceType = pServiceInstance.serviceType;\n\t\tlet tmpServiceHash = pServiceInstance.Hash;\n\n\t\t// The service should already be instantiated, so just connect it to fable\n\t\tpServiceInstance.connectFable(this);\n\n\t\t// Add the service type to the map if it isn't there yet\n\t\tif (!this.servicesMap.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\t// If the core service hasn't registered itself yet, create the service container for it.\n\t\t\t// This means you couldn't register another with this type unless it was later registered with a constructor class.\n\t\t\tthis.servicesMap[tmpServiceType] = {};\n\t\t}\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[tmpServiceType][tmpServiceHash] = pServiceInstance;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(tmpServiceType, tmpServiceHash, false);\n\t\t}\n\n\t\treturn pServiceInstance;\n\t}\n\n\tsetDefaultServiceInstantiation(pServiceType, pServiceHash, pOverwriteService)\n\t{\n\t\t// Overwrite services by default, unless told not to\n\t\tlet tmpOverwriteService = (typeof(pOverwriteService) === 'undefined') ? true : pOverwriteService;\n\t\t// Make sure the service exists\n\t\tif (this.servicesMap[pServiceType].hasOwnProperty(pServiceHash))\n\t\t{\n\t\t\tif (!this.hasOwnProperty(pServiceType) || tmpOverwriteService)\n\t\t\t{\n\t\t\t\tthis[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\t}\n\t\t\tif (!this.services.hasOwnProperty(pServiceType) || tmpOverwriteService)\n\t\t\t{\n\t\t\t\tthis.services[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\t\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = Fable;\nmodule.exports.new = autoConstruct;\n\nmodule.exports.LogProviderBase = libFableLog.LogProviderBase;\nmodule.exports.ServiceProviderBase = libFableServiceBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceBase.CoreServiceProviderBase;\n\nmodule.exports.precedent = libFableSettings.precedent;\n\n},{\"./services/Fable-Service-Anticipate.js\":51,\"./services/Fable-Service-CSVParser.js\":52,\"./services/Fable-Service-DataFormat.js\":53,\"./services/Fable-Service-DataGeneration.js\":55,\"./services/Fable-Service-DateManipulation.js\":56,\"./services/Fable-Service-EnvironmentData.js\":57,\"./services/Fable-Service-FilePersistence.js\":58,\"./services/Fable-Service-MetaTemplate.js\":59,\"./services/Fable-Service-Operation.js\":63,\"./services/Fable-Service-RestClient.js\":64,\"./services/Fable-Service-Template.js\":65,\"./services/Fable-Service-Utility.js\":66,\"cachetrax\":22,\"fable-log\":43,\"fable-serviceproviderbase\":44,\"fable-settings\":47,\"fable-uuid\":49,\"manyfest\":89}],51:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceAnticipate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'AsyncAnticipate';\n\n\t\t// The queue of operations waiting to run.\n\t\tthis.operationQueue = [];\n\t\tthis.erroredOperations = [];\n\n\t\tthis.executingOperationCount = 0;\n\t\tthis.completedOperationCount = 0;\n\n\t\tthis.callDepth = 0;\n\n\t\tthis.maxOperations = 1;\n\n\t\tthis.lastError = undefined;\n\t\tthis.waitingFunctions = [];\n\t}\n\n\tcheckQueue()\n\t{\n\t\t// This checks to see if we need to start any operations.\n\t\tif (this.operationQueue.length > 0 && this.executingOperationCount < this.maxOperations)\n\t\t{\n\t\t\tlet tmpOperation = this.operationQueue.shift();\n\t\t\tthis.executingOperationCount += 1;\n\t\t\ttmpOperation(this.buildAnticipatorCallback());\n\t\t}\n\t\telse if (this.waitingFunctions.length > 0 && this.executingOperationCount < 1)\n\t\t{\n\t\t\t// If there are no operations left, and we have waiting functions, call them.\n\t\t\tfor (let i = 0; i < this.waitingFunctions.length; i++)\n\t\t\t{\n\t\t\t\t//this.log.trace('Calling waiting function.')\n\t\t\t\tthis.waitingFunctions[i](this.lastError);\n\t\t\t}\n\t\t\t// Reset our state\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.waitingFunctions = [];\n\t\t}\n\t}\n\n\t// Expects a function fAsynchronousFunction(fCallback)\n\tanticipate(fAsynchronousFunction)\n\t{\n\t\t//this.log.trace('Adding a function...')\n\t\tthis.operationQueue.push(fAsynchronousFunction);\n\t\tthis.checkQueue();\n\t}\n\n\tbuildAnticipatorCallback()\n\t{\n\t\t// This uses closure-scoped state to track the callback state\n\t\tlet tmpCallbackState = (\n\t\t\t{\n\t\t\t\tCalled: false,\n\t\t\t\tError: undefined,\n\t\t\t\tOperationSet: this\n\t\t\t});\n\t\treturn hoistedCallback.bind(this);\n\t\tfunction hoistedCallback(pError)\n\t\t{\n\t\t\tif (tmpCallbackState.Called)\n\t\t\t{\n\t\t\t\t// If they call the callback twice, throw an error\n\t\t\t\tthrow new Error(\"Anticipation async callback called twice...\");\n\t\t\t}\n\t\t\ttmpCallbackState.Called = true;\n\t\t\ttmpCallbackState.error = pError;\n\n\t\t\ttmpCallbackState.OperationSet.executingOperationCount -= 1;\n\t\t\ttmpCallbackState.OperationSet.completedOperationCount += 1;\n\n\t\t\ttmpCallbackState.OperationSet.callDepth++;\n\n\t\t\t// TODO: Figure out a better pattern for chaining templates so the call stack doesn't get abused.\n\t\t\tif (tmpCallbackState.OperationSet.callDepth > 400)\n\t\t\t{\n\t\t\t\ttmpCallbackState.OperationSet.callDepth = 0;\n\t\t\t\tsetTimeout(tmpCallbackState.OperationSet.checkQueue.bind(this), 0);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpCallbackState.OperationSet.checkQueue();\n\t\t\t}\n\t\t}\n\t}\n\n\twait(fCallback)\n\t{\n\t\tthis.waitingFunctions.push(fCallback);\n\t\tthis.checkQueue();\n\t}\n}\n\nmodule.exports = FableServiceAnticipate;\n},{\"fable-serviceproviderbase\":44}],52:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Parsing CSVs.  Why?  Because it's a thing that needs to be done.\n*\n* 1. And the other node CSV parsers had issues with the really messy files we had.\n* \n*\n* 2. None of the CSV parsers dealt with and multi-line quoted string columns\n*    which are apparently a-ok according to the official spec.\n* Plus a lot of them are asynchronous because apparently that's the best way to\n* do anything; unfortunately some files have a sequence issue with that.\n*\n* @class CSVParser\n*/\nclass CSVParser extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'CSVParser';\n\n        this.Header = [];\n        this.HeaderFieldNames = [];\n\n        this.Delimiter = ',';\n        this.QuoteCharacter = '\"';\n\n        this.CleanCharacters = ['\\r'];\n\n        this.HeaderLineIndex = 0;\n        this.HasHeader = true;\n        this.HasSetHeader = false;\n        this.EmitHeader = false;\n\n        this.EmitJSON = true;\n\n        this.EscapedQuoteString = '&quot;';\n\n        // Current Line Parsing State\n        this.CurrentLine = '';\n        this.CurrentRecord = [];\n\n        this.InQuote = false;\n        this.InEscapedQuote = false;\n\n        this.LinesParsed = 0;\n        this.RowsEmitted = 0;\n    }\n\n    marshalRowToJSON(pRowArray)\n    {\n        if (!Array.isArray(pRowArray))\n        {\n            return false;\n        }\n\n        for (let i = this.HeaderFieldNames.length; i < pRowArray.length; i++)\n        {\n            this.HeaderFieldNames[i] = `${i}`;\n        }\n\n        let tmpObject = {};\n\n        for (let i = 0; i < pRowArray.length; i++)\n        {\n            tmpObject[this.HeaderFieldNames[i]] = pRowArray[i];\n        }\n\n        return tmpObject;\n    }\n\n    // Set the header data, for use in marshalling to JSON.\n    setHeader (pHeaderArray)\n    {\n        this.Header = pHeaderArray;\n\n        for (let i = 0; i < this.Header.length; i++)\n        {\n            if (typeof(this.Header[i]) == 'undefined')\n            {\n                this.HeaderFieldNames[i] = `${i}`;\n            }\n            else\n            {\n                this.HeaderFieldNames[i] = this.Header[i].toString().trim();\n            }\n        }\n    }\n\n    resetRowState()\n    {\n        this.CurrentRecord = [];\n    }\n\n    pushLine()\n    {\n        for (let i = 0; i < this.CleanCharacters.length; i++)\n        {\n            this.CurrentLine = this.CurrentLine.replace(this.CleanCharacters[i],'');\n        }\n        this.CurrentRecord.push(this.CurrentLine);\n        this.CurrentLine = '';\n    }\n\n    emitRow(pFormatAsJSON)\n    {\n        let tmpFormatAsJSON = (typeof(pFormatAsJSON) == 'undefined') ? this.EmitJSON : pFormatAsJSON;\n\n        this.RowsEmitted++;\n        let tmpCompletedRecord = this.CurrentRecord;\n        this.CurrentRecord = [];\n\n        if (tmpFormatAsJSON)\n        {\n            return this.marshalRowToJSON(tmpCompletedRecord);\n        }\n        else\n        {\n            return tmpCompletedRecord;\n        }\n    }\n\n    parseCSVLine (pLineString)\n    {\n        this.LinesParsed++;\n\n        for (let i = 0; i < pLineString.length; i++)\n        {\n            if ((!this.InQuote) && (pLineString[i] == this.Delimiter))\n            {\n                this.pushLine();\n            }\n            else if (pLineString[i] == this.QuoteCharacter)\n            {\n                // If we are in the second part of an escaped quote, ignore it.\n                if (this.InEscapedQuote)\n                {\n                    this.InEscapedQuote = false;\n                }\n                // If we aren't in a quote, enter quote\n                else if (!this.InQuote)\n                {\n                    this.InQuote = true;\n                }\n                // We are in a quote, so peek forward to see if this is an \"escaped\" quote pair\n                else if ((i < pLineString.length) && (pLineString[i+1] == this.QuoteCharacter))\n                {\n                    this.CurrentLine += this.EscapedQuoteString;\n                    this.InEscapedQuote = true;\n                }\n                // We are in a quote, this isn't an \"escaped\" quote pair, so go out of quote mode\n                else\n                {\n                    this.InQuote = false;\n                }\n            }\n            else\n            {\n                this.CurrentLine += pLineString[i];\n            }\n        }\n\n        // See if we are in a multiline quoted entry -- if not, emit the row.\n        if (!this.InQuote)\n        {\n            // Push the last remaining column from the buffer to the current line.\n            this.pushLine();\n\n            // Check to see if there is a header -- and if so, if this is the header row\n            if (this.HasHeader && !this.HasSetHeader && (this.RowsEmitted == this.HeaderLineIndex))\n            {\n                this.HasSetHeader = true;\n                // Override the format as json bit\n                this.setHeader(this.emitRow(false));\n\n                // No matter what, formatting this as JSON is silly and we don't want to go there anyway.\n                if (this.EmitHeader)\n                {\n                    return this.Header;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n            else\n            {\n                return this.emitRow();\n            }\n        }\n        else\n        {\n            return false;\n        }\n    };\n}\n\nmodule.exports = CSVParser;\n},{\"fable-serviceproviderbase\":44}],53:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Data Formatting and Translation Functions\n*\n* @class DataFormat\n*/\nclass DataFormat extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'DataArithmatic';\n\n\t\t// Regular Expressions (so they don't have to be recompiled every time)\n\t\t// These could be defined as static, but I'm not sure if that will work with browserify ... and specifically the QT browser.\n\t\tthis._Regex_formatterInsertCommas = /.{1,3}/g;\n\t\t// Match Function:\n\t\t// function(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t\t// Thoughts about below:   /^([+-]?)(0*)(\\d+)(\\.(\\d+))?$/;\n\t\tthis._Regex_formatterAddCommasToNumber = /^([-+]?)(0?)(\\d+)(.?)(\\d+)$/g;\n\t\tthis._Regex_formatterDollarsRemoveCommas = /,/gi;\n\t\tthis._Regex_formatterCleanNonAlphaChar = /[^a-zA-Z]/gi;\n\t\tthis._Regex_formatterCapitalizeEachWord = /([a-zA-Z]+)/g;\n\n\t\t// TODO: Potentially pull these in from a configuration.\n\t\t// TODO: Use locale data for this if it's defaults all the way down.\n\t\tthis._Value_MoneySign_Currency = '$';\n\t\tthis._Value_NaN_Currency = '--';\n\t\tthis._Value_GroupSeparator_Number = ',';\n\n\t\tthis._Value_Prefix_StringHash = 'HSH';\n\t\tthis._Value_Clean_formatterCleanNonAlpha = '';\n\n\t\tthis._UseEngineStringStartsWith = (typeof(String.prototype.startsWith) === 'function');\n\t\tthis._UseEngineStringEndsWith = (typeof(String.prototype.endsWith) === 'function');\n\t}\n\n\n\t/*************************************************************************\n\t * String Manipulation and Comparison Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Reverse a string\n\t *\n\t * @param {string} pString - The string to reverse\n\t * @returns {string}\n\t */\n\tstringReverse (pString)\n\t{\n\t\t// TODO: Benchmark if there are faster ways we want to do this with all the newer JS stuff\n\t\t//       ... and if it will work with browserify in a clean way.\n\t\treturn pString.split('').reverse().join('');\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pStartIndex\n\t * @returns {*}\n\t */\n\tstringStartsWith (pString, pSearchString, pStartIndex)\n\t{\n\t\tif (this._UseEngineStringStartsWith)\n\t\t{\n\t\t\treturn pString.startsWith(pSearchString, pStartIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringStartsWith_Polyfill.call(pString, pSearchString, pStartIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pStartIndex - The index to start the search at\n\t * @returns {boolean}\n\t */\n\tstringStartsWith_Polyfill (pSearchString, pStartIndex)\n\t{\n\t\treturn this.slice(pStartIndex || 0, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pEndIndex\n\t * @returns {*}\n\t */\n\tstringEndsWith (pString, pSearchString, pEndIndex)\n\t{\n\t\tif (this._UseEngineStringEndsWith)\n\t\t{\n\t\t\treturn pString.endsWith(pSearchString, pEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringEndsWith_Polyfill.call(pString, pSearchString, pEndIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pEndIndex - The index to end the search at\n\t * @returns {boolean}\n\t */\n\tstringEndsWith_Polyfill (pSearchString, pEndIndex)\n\t{\n\t\t// This works much better than >= because\n\t\t// it compensates for NaN:\n\t\tif (!(pEndIndex < this.length))\n\t\t{\n\t\t\tpEndIndex = this.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpEndIndex |= 0; // round position\n\t\t}\n\t\treturn this.substr(pEndIndex - pSearchString.length, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Generate an insecure string hash.  Not meant to be secure, just a quick way to generate a hash for a string.  This is not a cryptographic hash.  Additional warranty and disclaimer ... this is not for passwords!\n\t *\n\t * @param {string} pString\n\t * @returns {string}\n\t */\n\tinsecureStringHash (pString)\n\t{\n\t\tlet tmpHash = 0;\n\t\tlet tmpStringLength = pString.length;\n\t\tlet tmpCharacterIndex = 0;\n\n\t\twhile (tmpCharacterIndex < tmpStringLength)\n\t\t{\n\t\t\ttmpHash = (tmpHash << 5) - tmpHash + pString.charCodeAt(tmpCharacterIndex++) | 0;\n\t\t}\n\n\t\treturn `${this._Value_Prefix_StringHash}${tmpHash}`;\n\t}\n\n\tcapitalizeEachWord (pString)\n\t{\n\t\treturn pString.replace(this._Regex_formatterCapitalizeEachWord,\n\t\t\t(pMatch) =>\n\t\t\t{\n\t\t\t\treturn pMatch.charAt(0).toUpperCase() + pMatch.substr(1);\n\t\t\t});\n\t}\n\n\t/**\n\t * Clean wrapping characters if they exist consistently around the string.  If they do not, the string is returned unchanged.\n\t *\n\t * @param {string} pWrapCharacter - The character expected as the wrapping character\n\t * @param {string} pString - the string to clean\n\t * @returns {string}\n\t */\n\tcleanEnclosureWrapCharacters (pWrapCharacter, pString)\n\t{\n\t\t// # Use case from ManyFest DSL:\n\t\t//\n\t\t// When a boxed property is passed in, it should have quotes of some\n\t\t// kind around it.\n\t\t//\n\t\t// For instance:\n\t\t// \t\tMyValues['Name']\n\t\t// \t\tMyValues[\"Age\"]\n\t\t// \t\tMyValues[`Cost`]\n\t\t//\n\t\t// This function is necessary to remove the wrapping quotes before object\n\t\t// resolution can occur.\n\t\tif (pString.startsWith(pWrapCharacter) && pString.endsWith(pWrapCharacter))\n\t\t{\n\t\t\treturn pString.substring(1, pString.length - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pString;\n\t\t}\n\t}\n\n\t/**\n\t * Clean a string of any non-alpha characters (including numbers)\n\t *\n\t * @param {*} pString\n\t * @returns\n\t */\n\tcleanNonAlphaCharacters (pString)\n\t{\n\t\tif ((typeof(pString) == 'string') && (pString != ''))\n\t\t{\n\t\t\treturn pString.replace(this._Regex_formatterCleanNonAlphaChar, this._Value_Clean_formatterCleanNonAlpha);\n\t\t}\n\n\t\treturn '';\n\t}\n\n\n\t/*************************************************************************\n\t * Number Formatting Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Insert commas every 3 characters from the right.  Used by formatterAddCommasToNumber().\n\t *\n\t * @param {*} pString\n\t * @returns {*}\n\t */\n\tformatterInsertCommas (pString)\n\t{\n\t\t// Reverse, because it's easier to do things from the left, given arbitrary digit counts\n\t\tlet tmpReversed = this.stringReverse(pString);\n\t\t// Add commas every three characters\n\t\tlet tmpReversedWithCommas = tmpReversed.match(this._Regex_formatterInsertCommas).join(',');\n\t\t// Reverse again (back to normal direction)\n\t\treturn this.stringReverse(tmpReversedWithCommas);\n\t}\n\n\tprocessAddCommasToNumberRegex(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t{\n\t\t// If there was no decimal, the last capture grabs the final digit, so\n\t\t// we have to put it back together with the 'before' substring\n\t\treturn pSign + (pDecimal ? this.formatterInsertCommas(pBefore) + pDecimal + pAfter : this.formatterInsertCommas(pBefore + pAfter));\n\t}\n\n\t/**\n\t * Add Commas to a Number for readability.\n\t *\n\t * @param {*} pNumber\n\t * @returns {string}\n\t */\n\tformatterAddCommasToNumber (pNumber)\n\t{\n\t\t// If the regex doesn't match, `replace` returns the string unmodified\n\t\treturn (pNumber.toString()).replace\n\t\t(\n\t\t\tthis._Regex_formatterAddCommasToNumber,\n\t\t\tthis.processAddCommasToNumberRegex.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * This will take a number and format it as a dollar string.  It will also add commas to the number.  If the number is not a number, it will return '--'.\n\t *\n\t * @param {*} pValue\n\t * @returns {string}\n\t */\n\tformatterDollars (pValue)\n\t{\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tif (pValue === null || pValue === undefined)\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tlet tmpDollarAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpDollarAmount = tmpDollarAmountArbitrary.toFixed(2);\n\n\t\tif (isNaN(tmpDollarAmount))\n\t\t{\n\t\t\t// Try again and see if what was passed in was a dollars string.\n\t\t\tif (typeof(pValue) == 'string')\n\t\t\t{\n\t\t\t\t// TODO: Better rounding function?  This is a hack to get rid of the currency symbol and commas.\n\t\t\t\ttmpDollarAmount = parseFloat(pValue.replace(this._Value_MoneySign_Currency,'').replace(this._Regex_formatterDollarsRemoveCommas,'')).toFixed(2);\n\t\t\t}\n\t\t\t// If we didn't get a number, return the \"not a number\" string.\n\t\t\tif (isNaN(tmpDollarAmount))\n\t\t\t{\n\t\t\t\treturn this._Value_NaN_Currency;\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Get locale data and use that for this stuff.\n\t\treturn `$${this.formatterAddCommasToNumber(tmpDollarAmount)}`;\n\t}\n\n\t/**\n\t * Round a number to a certain number of digits.  If the number is not a number, it will return 0.  If no digits are specified, it will default to 2 significant digits.\n\t *\n\t * @param {*} pValue\n\t * @param {number} pDigits\n\t * @returns {string}\n\t */\n\tformatterRoundNumber (pValue, pDigits)\n\t{\n\t\tlet tmpDigits = (typeof(pDigits) == 'undefined') ? 2 : pDigits;\n\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\n\t\tif (pValue === null || pValue === undefined)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpValue = tmpAmountArbitrary.toFixed(tmpDigits);\n\n\t\tif (isNaN(tmpValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpValue;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate a reapeating padding string to be appended before or after depending on \n\t * which padding function it uses.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringGeneratePaddingString(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpTargetLength = pTargetLength >> 0;\n\t\tlet tmpPadString = String((typeof pPadString !== 'undefined' ? pPadString : ' '));\n\t\tif (pString.length > pTargetLength)\n\t\t{\n\t\t\t// No padding string if the source string is already longer than the target length, return an empty string\n\t\t\treturn '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpPadLength = pTargetLength - pString.length;\n\t\t\tif (tmpPadLength > tmpPadString.length)\n\t\t\t{\n\t\t\t\ttmpPadString += tmpPadString.repeat(tmpTargetLength / tmpPadString.length);\n\t\t\t}\n\t\t\treturn tmpPadString.slice(0, tmpPadLength);\n\t\t}\n\t}\n\n\t/**\n\t * Pad the start of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadStart = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString) + tmpString;\n\t}\n\n\t/**\n\t * Pad the end of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadEnd = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn tmpString + this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString);\n\t}\n\n\t/*************************************************************************\n\t * Time Formatting Functions (milliseconds)\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Format a time length in milliseconds into a human readable string.\n\t * @param {number} pTimeSpan \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeSpan(pTimeSpan)\n\t{\n\t\tif (typeof(pTimeSpan) != 'number')\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpMs = parseInt(pTimeSpan%1000);\n\t\tlet tmpSeconds = parseInt((pTimeSpan/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeSpan/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeSpan/(1000*60*60));\n\n\t\treturn `${this.stringPadStart(tmpHours,2,'0')}:${this.stringPadStart(tmpMinutes,2,'0')}:${this.stringPadStart(tmpSeconds,2,'0')}.${this.stringPadStart(tmpMs,3,'0')}`;\n\t}\n\n\t/**\n\t * Format the time delta between two times in milliseconds into a human readable string.\n\t * \n\t * @param {number} pTimeStart \n\t * @param {number} pTimeEnd \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeDelta(pTimeStart, pTimeEnd)\n\t{\n\t\tif ((typeof(pTimeStart) != 'number') || (typeof(pTimeEnd) != 'number'))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.formatTimeSpan(pTimeEnd-pTimeStart);\n\t}\n\n\t// THE FOLLOWING TERRIBLE FUNCTIONS ARE FOR QT / WKHTMLTOPDF when luxon and moment don't work so well\n\tgetMonthFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tgetMonthAbbreviatedFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tformatMonthDayYearFromDate (pJavascriptDate, pStrict)\n\t{\n\t\tlet tmpStrict = (typeof(pStrict) !== 'undefined') ? pStrict : false;\n\n\t\tlet tmpMonth = pJavascriptDate.getMonth() + 1;\n\t\tlet tmpDay = pJavascriptDate.getDate();\n\t\tlet tmpYear = pJavascriptDate.getFullYear();\n\t\t\n\t\tif (tmpStrict)\n\t\t{\n\t\t\ttmpMonth = this.stringPadStart(tmpMonth, 2, '0');\n\t\t\ttmpDay = this.stringPadStart(tmpDay, 2, '0');\n\t\t\ttmpYear = this.stringPadStart(tmpYear, 4, '0');\n\t\t}\n\n\t\treturn `${tmpMonth}/${tmpDay}/${tmpYear}`;\n\t}\n\t\n\tformatSortableStringFromDate (pDate)\n\t{\n\t\treturn pDate.getFullYear()+this.stringPadStart(pDate.getMonth(),2,'0')+this.stringPadStart(pDate.getDate(),2,'0');\n\t}\n\n\t/*************************************************************************\n\t * String Tokenization Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Return the string before the matched substring.\n\t *\n\t * If the substring is not found, the entire string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringBeforeMatch (pString, pMatch)\n\t{\n\t\treturn pString.split(pMatch)[0];\n\t}\n\n\t/**\n\t * Return the string after the matched substring.\n\t *\n\t * If the substring is not found, an empty string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringAfterMatch (pString, pMatch)\n\t{\n\t\tlet tmpStringSplitLocation = pString.indexOf(pMatch);\n\n\t\tif ((tmpStringSplitLocation < 0) || ((tmpStringSplitLocation + pMatch.length) >= pString.length))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn pString.substring(tmpStringSplitLocation + pMatch.length);\n\t}\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures (pString, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\tif (tmpEnclosureDepth == 0)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t}\n\t\t\t\ttmpEnclosureDepth++;\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpEnclosureCount;\n\t}\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosedValueStartIndex = 0;\n\t\tlet tmpEnclosedValueEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This is the end of an enclosure\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t\t{\n\t\t\t// Return an empty string if the enclosure is not found\n\t\t\treturn '';\n\t\t}\n\n\t\tif ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t\t}\n\t}\n\n\n\t/**\n\t * Remove an enclosure from a string based on the index of the enclosure.\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToRemove\n\t * @param {number} pEnclosureStart\n\t * @param {number} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringRemoveEnclosureByIndex (pString, pEnclosureIndexToRemove, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToRemove = (typeof(pEnclosureIndexToRemove) == 'number') ? pEnclosureIndexToRemove : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosureStartIndex = 0;\n\t\tlet tmpEnclosureEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToRemove == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosureStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosureEndIndex <= tmpEnclosureStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToRemove)\n\t\t{\n\t\t\treturn tmpString;\n\t\t}\n\n\t\tlet tmpReturnString = '';\n\n\t\tif (tmpEnclosureStartIndex > 1)\n\t\t{\n\t\t\ttmpReturnString = tmpString.substring(0, tmpEnclosureStartIndex);\n\t\t}\n\n\t\tif ((tmpString.length > (tmpEnclosureEndIndex + 1)) && (tmpEnclosureEndIndex > tmpEnclosureStartIndex))\n\t\t{\n\t\t\ttmpReturnString += tmpString.substring(tmpEnclosureEndIndex+1);\n\t\t}\n\n\t\treturn tmpReturnString;\n\t}\n}\n\nmodule.exports = DataFormat;\n},{\"fable-serviceproviderbase\":44}],54:[function(require,module,exports){\nmodule.exports={\n\t\"DefaultIntegerMinimum\": 0,\n\t\"DefaultIntegerMaximum\": 9999999,\n\n\t\"DefaultNumericStringLength\": 10,\n\n\t\"MonthSet\": [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n\n\t\"WeekDaySet\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n\n\t\"ColorSet\": \n\t\t[\n\t\t\t\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Indigo\", \"Violet\", \"Pink\", \"Purple\", \"Turquoise\", \"Gold\",\n\t\t\t\"Lime\", \"Maroon\", \"Navy\", \"Coral\", \"Teal\", \"Brown\", \"White\", \"Black\", \"Sky\", \"Berry\",\n\t\t\t\"Grey\", \"Straw\", \"Silver\", \"Sapphire\"\n\t\t],\n\n\t\"SurNameSet\":\n\t\t[\n\t\t\t\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Miller\", \"Davis\", \"Garcia\", \"Rodriguez\", \"Wilson\",\n\t\t\t\"Martinez\", \"Anderson\", \"Taylor\", \"Thomas\", \"Hernandez\", \"Moore\", \"Martin\", \"Jackson\", \"Thompson\", \"White\",\n\t\t\t\"Lopez\", \"Lee\", \"Gonzalez\", \"Harris\", \"Clark\", \"Lewis\", \"Robinson\", \"Walker\", \"Perez\", \"Hall\",\n\t\t\t\"Young\", \"Allen\", \"Sanchez\", \"Wright\", \"King\", \"Scott\", \"Green\", \"Baker\", \"Adams\", \"Nelson\",\n\t\t\t\"Hill\", \"Ramirez\", \"Campbell\", \"Mitchell\", \"Roberts\", \"Carter\", \"Phillips\", \"Evans\", \"Turner\", \"Torres\",\n\t\t\t\"Parker\", \"Collins\", \"Edwards\", \"Stewart\", \"Flores\", \"Morris\", \"Nguyen\", \"Murphy\", \"Rivera\", \"Cook\",\n\t\t\t\"Rogers\", \"Morgan\", \"Peterson\", \"Cooper\", \"Reed\", \"Bailey\", \"Bell\", \"Gomez\", \"Kelly\", \"Howard\",\n\t\t\t\"Ward\", \"Cox\", \"Diaz\", \"Richardson\", \"Wood\", \"Watson\", \"Brooks\", \"Bennett\", \"Gray\", \"James\",\n\t\t\t\"Reyes\", \"Cruz\", \"Hughes\", \"Price\", \"Myers\", \"Long\", \"Foster\", \"Sanders\", \"Ross\", \"Morales\",\n\t\t\t\"Powell\", \"Sullivan\", \"Russell\", \"Ortiz\", \"Jenkins\", \"Gutierrez\", \"Perry\", \"Butler\", \"Barnes\", \"Fisher\"\n\t\t],\n\n\t\"NameSet\":\n\t\t[\n\t\t\t\"Mary\", \"Patricia\", \"Jennifer\", \"Linda\", \"Elizabeth\", \"Barbara\", \"Susan\", \"Jessica\", \"Sarah\", \"Karen\",\n\t\t\t\"Lisa\", \"Nancy\", \"Betty\", \"Sandra\", \"Margaret\", \"Ashley\", \"Kimberly\", \"Emily\", \"Donna\", \"Michelle\",\n\t\t\t\"Carol\", \"Amanda\", \"Melissa\", \"Deborah\", \"Stephanie\", \"Dorothy\", \"Rebecca\", \"Sharon\", \"Laura\", \"Cynthia\",\n\t\t\t\"Amy\", \"Kathleen\", \"Angela\", \"Shirley\", \"Brenda\", \"Emma\", \"Anna\", \"Pamela\", \"Nicole\", \"Samantha\",\n\t\t\t\"Katherine\", \"Christine\", \"Helen\", \"Debra\", \"Rachel\", \"Carolyn\", \"Janet\", \"Maria\", \"Catherine\", \"Heather\",\n\t\t\t\"Diane\", \"Olivia\", \"Julie\", \"Joyce\", \"Victoria\", \"Ruth\", \"Virginia\", \"Lauren\", \"Kelly\", \"Christina\",\n\t\t\t\"Joan\", \"Evelyn\", \"Judith\", \"Andrea\", \"Hannah\", \"Megan\", \"Cheryl\", \"Jacqueline\", \"Martha\", \"Madison\",\n\t\t\t\"Teresa\", \"Gloria\", \"Sara\", \"Janice\", \"Ann\", \"Kathryn\", \"Abigail\", \"Sophia\", \"Frances\", \"Jean\",\n\t\t\t\"Alice\", \"Judy\", \"Isabella\", \"Julia\", \"Grace\", \"Amber\", \"Denise\", \"Danielle\", \"Marilyn\", \"Beverly\",\n\t\t\t\"Charlotte\", \"Natalie\", \"Theresa\", \"Diana\", \"Brittany\", \"Doris\", \"Kayla\", \"Alexis\", \"Lori\", \"Marie\",\n\t\t\t\"James\", \"Robert\", \"John\", \"Michael\", \"David\", \"William\", \"Richard\", \"Joseph\", \"Thomas\", \"Christopher\",\n\t\t\t\"Charles\", \"Daniel\", \"Matthew\", \"Anthony\", \"Mark\", \"Donald\", \"Steven\", \"Andrew\", \"Paul\", \"Joshua\",\n\t\t\t\"Kenneth\", \"Kevin\", \"Brian\", \"George\", \"Timothy\", \"Ronald\", \"Jason\", \"Edward\", \"Jeffrey\", \"Ryan\",\n\t\t\t\"Jacob\", \"Gary\", \"Nicholas\", \"Eric\", \"Jonathan\", \"Stephen\", \"Larry\", \"Justin\", \"Scott\", \"Brandon\",\n\t\t\t\"Benjamin\", \"Samuel\", \"Gregory\", \"Alexander\", \"Patrick\", \"Frank\", \"Raymond\", \"Jack\", \"Dennis\", \"Jerry\",\n\t\t\t\"Tyler\", \"Aaron\", \"Jose\", \"Adam\", \"Nathan\", \"Henry\", \"Zachary\", \"Douglas\", \"Peter\", \"Kyle\",\n\t\t\t\"Noah\", \"Ethan\", \"Jeremy\", \"Walter\", \"Christian\", \"Keith\", \"Roger\", \"Terry\", \"Austin\", \"Sean\",\n\t\t\t\"Gerald\", \"Carl\", \"Harold\", \"Dylan\", \"Arthur\", \"Lawrence\", \"Jordan\", \"Jesse\", \"Bryan\", \"Billy\",\n\t\t\t\"Bruce\", \"Gabriel\", \"Joe\", \"Logan\", \"Alan\", \"Juan\", \"Albert\", \"Willie\", \"Elijah\", \"Wayne\",\n\t\t\t\"Randy\", \"Vincent\", \"Mason\", \"Roy\", \"Ralph\", \"Bobby\", \"Russell\", \"Bradley\", \"Philip\", \"Eugene\"\n\t\t]\n}\n},{}],55:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceDataGeneration extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'DataGeneration';\n\n\t\tthis.defaultData = require('./Fable-Service-DataGeneration-DefaultValues.json');\n\t}\n\n\t// Return a random integer between pMinimum and pMaximum\n\trandomIntegerBetween(pMinimum, pMaximum)\n\t{\n\t\treturn Math.floor(Math.random() * (pMaximum - pMinimum)) + pMinimum;\n\t}\n\t// Return a random integer up to the passed-in maximum\n\trandomIntegerUpTo(pMaximum)\n\t{\n\t\treturn this.randomIntegerBetween(0, pMaximum);\n\t}\n\t// Return a random integer between 0 and 9999999\n\trandomInteger()\n\t{\n\t\treturn Math.floor(Math.random()*this.defaultData.DefaultIntegerMaximum);\n\t}\n\n\n\trandomNumericString(pLength, pMaxNumber)\n\t{\n\t\tlet tmpLength = (typeof(pLength) === 'undefined') ? 10 : pLength;\n\t\tlet tmpMaxNumber = (typeof(pMaxNumber) === 'undefined') ? ((10 ** tmpLength) - 1) : pMaxNumber;\n\n\t\treturn this.services.DataFormat.stringPadStart(this.randomIntegerUpTo(tmpMaxNumber), pLength, '0');\n\t}\n\n\n\trandomMonth()\n\t{\n\t\treturn this.defaultData.MonthSet[this.randomIntegerUpTo(this.defaultData.MonthSet.length-1)];\n\t}\n\trandomDayOfWeek()\n\t{\n\t\treturn this.defaultData.WeekDaySet[this.randomIntegerUpTo(this.defaultData.WeekDaySet.length-1)];\n\t}\n\n\n\trandomColor()\n\t{\n\t\treturn this.defaultData.ColorSet[this.randomIntegerUpTo(this.defaultData.ColorSet.length-1)];\n\t}\n\n\n\trandomName()\n\t{\n\t\treturn this.defaultData.NameSet[this.randomIntegerUpTo(this.defaultData.NameSet.length-1)];\n\t}\n\trandomSurname()\n\t{\n\t\treturn this.defaultData.SurNameSet[this.randomIntegerUpTo(this.defaultData.SurNameSet.length-1)];\n\t}\n}\n\nmodule.exports = FableServiceDataGeneration;\n},{\"./Fable-Service-DataGeneration-DefaultValues.json\":54,\"fable-serviceproviderbase\":44}],56:[function(require,module,exports){\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Date management a la Moment using days.js\n*\n* @class DateManipulation\n*/\nclass DateManipulation extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'Dates';\n\n\t\tthis.dayJS = require('dayjs');\n\n\t\t// Include the `weekOfYear` plugin\n\t\tthis.plugin_weekOfYear = require('dayjs/plugin/weekOfYear');\n\t\tthis.dayJS.extend(this.plugin_weekOfYear);\n\t\t// Include the `weekday` plugin\n\t\tthis.plugin_weekday = require('dayjs/plugin/weekday');\n\t\tthis.dayJS.extend(this.plugin_weekday);\n\t\t// Include the `isoWeek` plugin\n\t\tthis.plugin_isoWeek = require('dayjs/plugin/isoWeek');\n\t\tthis.dayJS.extend(this.plugin_isoWeek);\n\t\t// Include the `timezone` plugin\n\t\tthis.plugin_timezone = require('dayjs/plugin/timezone');\n\t\tthis.dayJS.extend(this.plugin_timezone);\n\t\t// Include the `relativetime` plugin\n\t\tthis.plugin_relativetime = require('dayjs/plugin/relativeTime');\n\t\tthis.dayJS.extend(this.plugin_relativetime);\n\t\t// Include the `utc` plugin\n\t\tthis.plugin_utc = require('dayjs/plugin/utc');\n\t\tthis.dayJS.extend(this.plugin_utc);\n\t\t// Include the `advancedFormat` plugin\n\t\tthis.plugin_advancedFormat = require('dayjs/plugin/advancedFormat');\n\t\tthis.dayJS.extend(this.plugin_advancedFormat);\n\n\t\t// A developer can include locales if they want\n\t\t// You would do the following:\n\t\t// const localeDE = require('dayjs/locale/de');\n\t\t// _Fable.Dates.dayJS.locale('de');\n\t}\n}\n\nmodule.exports = DateManipulation;\n},{\"dayjs\":28,\"dayjs/plugin/advancedFormat\":29,\"dayjs/plugin/isoWeek\":30,\"dayjs/plugin/relativeTime\":31,\"dayjs/plugin/timezone\":32,\"dayjs/plugin/utc\":33,\"dayjs/plugin/weekOfYear\":34,\"dayjs/plugin/weekday\":35,\"fable-serviceproviderbase\":44}],57:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceEnvironmentData extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'EnvironmentData';\n\n\t\tthis.Environment = `node.js`;\n\t}\n}\n\nmodule.exports = FableServiceEnvironmentData;\n},{\"fable-serviceproviderbase\":44}],58:[function(require,module,exports){\n(function (process){(function (){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libFS = require('fs');\nconst libPath = require('path');\nconst libReadline = require('readline');\n\n\nclass FableServiceFilePersistence extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'FilePersistence';\n\n\t\tif (!this.options.hasOwnProperty('Mode'))\n\t\t{\n\t\t\tthis.options.Mode = parseInt('0777', 8) & ~process.umask();\n\t\t}\n\n\t\tthis.libFS = libFS;\n\t\tthis.libPath = libPath;\n\t\tthis.libReadline = libReadline;\n\t}\n\n\tjoinPath(...pPathArray)\n\t{\n\t\treturn libPath.resolve(...pPathArray);\n\t}\n\n\texistsSync(pPath)\n\t{\n\t\treturn libFS.existsSync(pPath);\n\t}\n\n\texists(pPath, fCallback)\n\t{\n\t\tlet tmpFileExists = this.existsSync(pPath);;\n\n\t\treturn fCallback(null, tmpFileExists);\n\t}\n\n\tappendFileSync(pFileName, pAppendContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.appendFileSync(pFileName, pAppendContent, tmpOptions);\n\t}\n\n\tdeleteFileSync(pFileName)\n\t{\n\t\treturn libFS.unlinkSync(pFileName);\n\t}\n\n\tdeleteFolderSync(pFileName)\n\t{\n\t\treturn libFS.rmdirSync(pFileName);\n\t}\n\n\treadFileSync(pFilePath, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.readFileSync(pFilePath, tmpOptions);\n\t}\n\n\treadFile(pFilePath, pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.readFile(pFilePath, tmpOptions, fCallback);\n\t}\n\n\twriteFileSync(pFileName, pFileContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFileSync(pFileName, pFileContent, tmpOptions);\n\t}\n\n\twriteFileSyncFromObject(pFileName, pObject)\n\t{\n\t\treturn this.writeFileSync(pFileName, JSON.stringify(pObject, null, 4));\n\t}\n\n\twriteFileSyncFromArray(pFileName, pFileArray)\n\t{\n\t\tif (!Array.isArray(pFileArray))\n\t\t{\n\t\t\tthis.log.error(`File Persistence Service attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).`);\n\t\t\treturn Error('Attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let i = 0; i < pFileArray.length; i++)\n\t\t\t{\n\t\t\t\treturn this.appendFileSync(pFileName, `${pFileArray[i]}\\n`);\n\t\t\t}\n\t\t}\n\t}\n\n\twriteFile(pFileName, pFileContent, pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFile(pFileName, pFileContent, tmpOptions, fCallback);\n\t}\n\n\tlineReaderFactory(pFilePath, fOnLine, fOnComplete, fOnError)\n\t{\n\t\tlet tmpLineReader = {};\n\n\t\tif (typeof(pFilePath) != 'string')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpLineReader.filePath = pFilePath;\n\n\t\ttmpLineReader.fileStream = libFS.createReadStream(tmpLineReader.filePath);\n\n\t\ttmpLineReader.reader = libReadline.createInterface({ input: tmpLineReader.fileStream, crlfDelay: Infinity });\n\n\t\tif (typeof(fOnError) === 'function')\n\t\t{\n\t\t\ttmpLineReader.reader.on('error', fOnError);\n\t\t}\n\n\t\ttmpLineReader.reader.on('line', (typeof(fOnLine) === 'function') ? fOnLine : () => {});\n\n\t\tif (typeof(fOnComplete) === 'function')\n\t\t{\n\t\t\ttmpLineReader.reader.on('close', fOnComplete);\n\t\t}\n\n\t\treturn tmpLineReader;\n\t}\n\n\t// Folder management\n\tmakeFolderRecursive(pParameters, fCallback)\n\t{\n\t\tlet tmpParameters = pParameters;\n\n\t\tif (typeof(pParameters) == 'string')\n\t\t{\n\t\t\ttmpParameters = { Path: pParameters };\n\t\t}\n\t\telse if (typeof(pParameters) !== 'object')\n\t\t{\n\t\t\tfCallback(new Error('Parameters object or string not properly passed to recursive folder create.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(tmpParameters.Path) !== 'string'))\n\t\t{\n\t\t\tfCallback(new Error('Parameters object needs a path to run the folder create operation.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!tmpParameters.hasOwnProperty('Mode'))\n\t\t{\n\t\t\ttmpParameters.Mode = this.options.Mode;\n\t\t}\n\n\t\t// Check if we are just starting .. if so, build the initial state for our recursive function\n\t\tif (typeof(tmpParameters.CurrentPathIndex) === 'undefined')\n\t\t{\n\t\t\t// Build the tools to start recursing\n\t\t\ttmpParameters.ActualPath = libPath.normalize(tmpParameters.Path);\n\t\t\ttmpParameters.ActualPathParts = tmpParameters.ActualPath.split(libPath.sep);\n\t\t\ttmpParameters.CurrentPathIndex = 0;\n\t\t\ttmpParameters.CurrentPath = '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is not our first run, so we will continue the recursion.\n\t\t\t// Build the new base path\n\t\t\tif (tmpParameters.CurrentPath == libPath.sep)\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\n\t\t\t// Increment the path index\n\t\t\ttmpParameters.CurrentPathIndex++;\n\t\t}\n\n\t\t// Check if the path is fully complete\n\t\tif (tmpParameters.CurrentPathIndex >= tmpParameters.ActualPathParts.length)\n\t\t{\n\t\t\treturn fCallback(null);\n\t\t}\n\n\t\t// Check if the path exists (and is a folder)\n\t\tlibFS.open(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], 'r',\n\t\t\t(pError, pFileDescriptor)=>\n\t\t\t{\n\t\t\t\tif (pFileDescriptor)\n\t\t\t\t{\n\t\t\t\t\tlibFS.closeSync(pFileDescriptor);\n\t\t\t\t}\n\n\t\t\t\tif (pError && pError.code=='ENOENT')\n\t\t\t\t{\n\t\t\t\t\t/* Path doesn't exist, create it */\n\t\t\t\t\tlibFS.mkdir(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], tmpParameters.Mode,\n\t\t\t\t\t\t(pCreateError) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!pCreateError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// We have now created our folder and there was no error -- continue.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (pCreateError.code =='EEXIST')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// The folder exists -- our dev might be running this in parallel/async/whatnot.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(pCreateError.code);\n\t\t\t\t\t\t\t\treturn fCallback(pCreateError);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nmodule.exports = FableServiceFilePersistence;\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":98,\"fable-serviceproviderbase\":44,\"fs\":19,\"path\":92,\"readline\":19}],59:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\n/**\n* Precedent Meta-Templating\n* @author      Steven Velozo <steven@velozo.com>\n* @description Process text stream trie and postfix tree, parsing out meta-template expression functions.\n*/\nconst libWordTree = require(`./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js`);\nconst libStringParser = require(`./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js`);\n\n\nclass FableServiceMetaTemplate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'MetaTemplate';\n\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser(this.fable);\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\taddPatternAsync(pPatternStart, pPatternEnd, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternAsync(pPatternStart, pPatternEnd, pParserPromise);\n\t}\n\n\taddPatternBoth(pPatternStart, pPatternEnd, pParser, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternBoth(pPatternStart, pPatternEnd, pParser, pParserPromise);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData, fCallback)\n\t{\n\t\tif (this.LogNoisiness > 4)\n\t\t{\n\t\t\tthis.fable.log.trace(`Metatemplate parsing template string [${pString}] where the callback is a ${typeof(fCallback)}`, {TemplateData:pData});\n\t\t}\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceMetaTemplate;\n},{\"./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js\":60,\"./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js\":61,\"fable-serviceproviderbase\":44}],60:[function(require,module,exports){\n/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor(pFable)\n\t{\n\t\tthis.fable = pFable;\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse') && (!pParserState.Pattern.isAsync || pParserState.Pattern.isBoth))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync && !pParserState.Pattern.isBoth)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texecutePatternAsync(pParserState, pData, fCallback)\n\t{\n\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t// Trim the start and end tags off the output buffer now\n\t\tif (pParserState.Pattern.isAsync && !pParserState.Pattern.isBoth)\n\t\t{\n\t\t\t// Run the function\n\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\treturn fCallback();\n\t\t\t\t});\n\t\t}\n\t\telse if (pParserState.Pattern.isAsync && pParserState.Pattern.isBoth)\n\t\t{\n\t\t\t// Run the function when both async and non async were provided with the pattern\n\t\t\treturn pParserState.Pattern.ParseAsync(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\treturn fCallback();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Run the t*mplate function\n\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacterAsync (pCharacter, pParserState, pData, fCallback)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.executePatternAsync(pParserState, pData, fCallback);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.executePatternAsync(pParserState, pData, fCallback);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\telse\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\t// Without this, templates of all sizes work fine in node.  They do not in the browser.\n\t\t// Trying this out without the timout on non asynchronous template flips.\n\t\treturn fCallback();\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t * @param {function} fCallback - The callback function to call when the parse is complete\n\t */\n\tparseString (pString, pParseTree, pData, fCallback)\n\t{\n\t\tif (typeof(fCallback) !== 'function')\n\t\t{\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\t\tfor (var i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: This is not fast.\n\t\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData, fCallback);\n\t\t\t}\n\n\t\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\t\treturn tmpParserState.Output;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is the async mode\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\t\t\ttmpParserState.Asynchronous = true;\n\n\t\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tfor (let i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\ttmpAnticipate.anticipate(\n\t\t\t\t\t(fCallback) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.parseCharacterAsync(pString[i], tmpParserState, pData, fCallback);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\t// Flush the remaining data\n\t\t\t\t\tthis.flushOutputBuffer(tmpParserState);\n\t\t\t\t\treturn fCallback(pError, tmpParserState.Output);\n\t\t\t\t});\n\t\t}\n\t}\n}\n\nmodule.exports = StringParser;\n\n},{}],61:[function(require,module,exports){\n/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn tmpLeaf;\n\t}\n\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPatternAsync\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParserAsync - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternAsync (pPatternStart, pPatternEnd, fParserAsync)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParserAsync);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t}\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPatternBoth\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternBoth (pPatternStart, pPatternEnd, fParser, fParserAsync)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParser);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t\ttmpLeaf.isBoth = true;\n\t\t\t// When a leaf has both async and non-async versions of the functions, we store the async in fParserAsync.\n\t\t\ttmpLeaf.ParseAsync = fParserAsync;\n\t\t}\n\t}\n}\n\nmodule.exports = WordTree;\n\n},{}],62:[function(require,module,exports){\nmodule.exports = (\n    {\n        \"Metadata\": {\n            \"UUID\": false,\n            \"Hash\": false,\n\n            \"Name\": \"\",\n            \"Summary\": \"\",\n\n            \"Version\": 0\n        },\n        \"Status\": {\n            \"Completed\": false,\n\n            \"CompletionProgress\": 0,\n            \"CompletionTimeElapsed\": 0,\n\n            \"TimeStart\": 0,\n            \"TimeEnd\": 0\n        },\n        \"Steps\": [],\n        \"Errors\": [],\n        \"Log\": []\n    }\n);\n},{}],63:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst _OperationStatePrototypeString = JSON.stringify(require('./Fable-Service-Operation-DefaultSettings.js'));\n\nclass FableOperation extends libFableServiceBase\n{\n\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\t// Timestamps will just be the long ints\n\t\tthis.timeStamps = {};\n\t\t// ProgressTrackers have an object format of: {Hash:'SomeHash',EndTime:UINT,CurrentTime:UINT,TotalCount:INT,CurrentCount:INT}\n\t\tthis.progressTrackers = {};\n\n        this.serviceType = 'PhasedOperation';\n\n\t\tthis.state = JSON.parse(_OperationStatePrototypeString);\n\n\t\tthis.stepMap = {};\n\t\tthis.stepFunctions = {};\n\n\t\t// Match the service instantiation to the operation.\n\t\tthis.state.Metadata.Hash = this.Hash;\n\t\tthis.state.Metadata.UUID = this.UUID;\n\n\t\tthis.state.Metadata.Name = (typeof(this.options.Name) == 'string') ? this.options.Name : `Unnamed Operation ${this.state.Metadata.UUID}`;\n\t\tthis.name = this.state.Metadata.Name;\n\n\t\tthis.log = this;\n\t}\n\n\texecute(fExecutionCompleteCallback)\n\t{\n\t\tif (this.state.Status.TimeStart)\n\t\t{\n\t\t\treturn fExecutionCompleteCallback(new Error(`Operation [${this.state.Metadata.UUID}] ${this.state.Metadata.Name} has already been executed!`));\n\t\t}\n\n\t\tthis.state.Status.TimeStart = +new Date();\n\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\tfor (let i = 0; i < this.state.Steps; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(this.stepFunctions[this.state.Steps[i].GUIDStep].bind(this));\n\t\t}\n\n\t\t// Wait for the anticipation to complete\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tthis.state.Status.TimeEnd = +new Date();\n\t\t\t\treturn fExecutionCompleteCallback();\n\t\t\t});\n\t}\n\n/*\n\tTODO: I've gone back and forth on whether this should be an object, JSON \n\tobject prototype, or set of functions here.  Discuss with colleagues!\n*/\n\taddStep(pGUIDStep, fStepFunction, pStepName, pStepDescription, pStepMetadata)\n\t{\n\t\tlet tmpStep = {};\n\t\ttmpStep.GUIDStep = (typeof(pGUIDStep) !== 'undefined') ? pGUIDStep : `STEP-${this.state.Steps.length}-${this.fable.DataGeneration.randomNumericString()}`;\n\t\ttmpStep.Name = (typeof(pStepName) !== 'undefined') ? pStepName : `Step [${tmpStep.GUIDStep}]`;\n\t\ttmpStep.Description = (typeof(pStepDescription) !== 'undefined') ? pStepDescription : `Step execution of ${tmpStep.Name}.`;\n\t\t// TODO: Right now this allows an Array... do we want to block that?\n\t\ttmpStep.Metadata = (typeof(pStepMetadata) === 'object') ? pStepMetadata : {};\n\n\t\ttmpStep.TimeStart = false;\n\t\ttmpStep.TimeEnd = false;\n\n\t\t// There is an array of steps, in the Operation State itself ... push a step there\n\t\tthis.state.Steps.push(tmpStep);\n\n\t\tthis.stepMap[tmpStep.GUIDStep]\n\t\tthis.stepFunctions[tmpStep.GUIDStep] = fStepFunction;\n\n\t\tthis.state.Status.StepCount++;\n\t\treturn tmpStep;\n\t}\n\n\tgetStep(pGUIDStep)\n\t{\n\t\tif (this.stepMap.hasOwnProperty(pGUIDStep))\n\t\t{\n\t\t\treturn this.stepMap[pGUIDStep];\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tstartStep(pGUIDStep)\n\t{\n\t\tlet tmpStep = this.getStep(pGUIDStep);\n\n\t\tif (tmpStep === false)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpStep.TimeStart = +new Date();\n\n\t\treturn tmpStep;\n\t}\n\n\tstopStep(pGUIDStep)\n\t{\n\t\tlet tmpStep = this.getStep(pGUIDStep);\n\n\t\tif (tmpStep === false)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpStep.TimeEnd = +new Date();\n\n\t\treturn tmpStep;\n\t}\n\n\twriteOperationLog(pLogLevel, pLogText, pLogObject)\n\t{\n\t\tthis.state.Log.push(`[${new Date().toUTCString()}]-[${pLogLevel}]: ${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Log.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\twriteOperationErrors(pLogText, pLogObject)\n\t{\n\t\tthis.state.Errors.push(`${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Errors.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('TRACE', pLogText, pLogObject);\n\t\tthis.fable.log.trace(pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('DEBUG', pLogText, pLogObject);\n\t\tthis.fable.log.debug(pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('INFO', pLogText, pLogObject);\n\t\tthis.fable.log.info(pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('WARN', pLogText, pLogObject);\n\t\tthis.fable.log.warn(pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('ERROR', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.error(pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('FATAL', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.fatal(pLogText, pLogObject);\n\t}\n\n\n\t/************************************************************************\n\t * BEGINNING OF -->  Telemetry Helpers\n\t */\n\tcreateTimeStamp(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tthis.timeStamps[tmpTimeStampHash] = +new Date();\n\t\treturn this.timeStamps[tmpTimeStampHash];\n\t}\n\n\tgetTimeDelta(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tif (this.timeStamps.hasOwnProperty(tmpTimeStampHash))\n\t\t{\n\t\t\tlet tmpEndTime = +new Date();\n\t\t\treturn tmpEndTime-this.timeStamps[tmpTimeStampHash];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tlogTimeDelta(pTimeStampHash, pMessage)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : `Elapsed for ${tmpTimeStampHash}: `;\n\t\tlet tmpOperationTime = this.getTimeDelta(pTimeStampHash);\n\t\tthis.info(tmpMessage +' ('+tmpOperationTime+'ms)');\n\t\treturn tmpOperationTime;\n\t}\n\n\tcreateProgressTracker(pTotalOperations, pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpTotalOperations = (typeof(pTotalOperations) == 'number') ? pTotalOperations : 100;\n\n\t\tlet tmpProgressTracker = (\n\t\t\t{\n\t\t\t\tHash: tmpProgressTrackerHash,\n\t\t\t\tStartTime: this.createTimeStamp(tmpProgressTrackerHash),\n\t\t\t\tEndTime: 0,\n\t\t\t\tCurrentTime: 0,\n\t\t\t\tPercentComplete: -1,\n\t\t\t\tAverageOperationTime: -1,\n\t\t\t\tEstimatedCompletionTime: -1,\n\t\t\t\tTotalCount: tmpTotalOperations,\n\t\t\t\tCurrentCount:-1\n\t\t\t});\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash] = tmpProgressTracker;\n\n\t\treturn tmpProgressTracker;\n\t}\n\n\tsolveProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tlet tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\ttmpProgressTracker.CurrentTime = this.getTimeDelta(tmpProgressTracker.Hash);\n\n\t\tif ((tmpProgressTracker.CurrentCount > 0) && (tmpProgressTracker.TotalCount > 0))\n\t\t{\n\t\t\ttmpProgressTracker.PercentComplete = (tmpProgressTracker.CurrentCount / tmpProgressTracker.TotalCount) * 100.0;\n\t\t}\n\n\t\tif ((tmpProgressTracker.CurrentCount > 0) && (tmpProgressTracker.CurrentTime > 0))\n\t\t{\n\t\t\ttmpProgressTracker.AverageOperationTime = tmpProgressTracker.CurrentTime / tmpProgressTracker.CurrentCount;\n\t\t}\n\n\t\tif ((tmpProgressTracker.CurrentCount < tmpProgressTracker.TotalCount) && (tmpProgressTracker.AverageOperationTime > 0))\n\t\t{\n\t\t\ttmpProgressTracker.EstimatedCompletionTime = (tmpProgressTracker.TotalCount - tmpProgressTracker.CurrentCount) * tmpProgressTracker.AverageOperationTime;\n\t\t}\n\t}\n\n\tupdateProgressTrackerStatus(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\n\t\tif (isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = tmpCurrentOperations;\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tincrementProgressTrackerStatus(pProgressTrackerHash, pIncrementSize)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpIncrementSize = parseInt(pIncrementSize);\n\n\t\tif (isNaN(tmpIncrementSize))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = this.progressTrackers[tmpProgressTrackerHash].CurrentCount + tmpIncrementSize;\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tsetProgressTrackerEndTime(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (!isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\tthis.updateProgressTrackerStatus(tmpProgressTrackerHash, tmpCurrentOperations);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].EndTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tprintProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTrackerHash} does not exist!  No stats to display.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\t\tif (tmpProgressTracker.CurrentCount < 1)\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} has no completed operations.  ${tmpProgressTracker.CurrentTime}ms have elapsed since it was started.`);\n\t\t\t}\n\t\t\telse if (tmpProgressTracker.EndTime < 1)\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} is ${tmpProgressTracker.PercentComplete.toFixed(3)}% completed - ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations over ${tmpProgressTracker.CurrentTime}ms (median ${tmpProgressTracker.AverageOperationTime.toFixed(3)} per).  Estimated completion in ${tmpProgressTracker.EstimatedCompletionTime.toFixed(0)}ms or ${(tmpProgressTracker.EstimatedCompletionTime / 1000 / 60).toFixed(2)}minutes`)\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} is done and completed ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations in ${tmpProgressTracker.EndTime}ms.`)\n\t\t\t}\n\t\t}\n\t}\n\t/*\n\t * END OF       -->  Logging and Telemetry Helpers\n\t ************************************************************************/\n}\n\nmodule.exports = FableOperation;\n},{\"./Fable-Service-Operation-DefaultSettings.js\":62,\"fable-serviceproviderbase\":44}],64:[function(require,module,exports){\n(function (Buffer){(function (){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libSimpleGet = require('simple-get');\nconst libCookie = require('cookie');\n\nclass FableServiceRestClient extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.TraceLog = false;\n\t\tif (this.options.TraceLog || this.fable.TraceLog)\n\t\t{\n\t\t\tthis.TraceLog = true;\n\t\t}\n\n\t\tthis.dataFormat = this.fable.services.DataFormat;\n\n\t\tthis.serviceType = 'RestClient';\n\n\t\tthis.cookie = false;\n\n\t\t// This is a function that can be overridden, to allow the management\n\t\t// of the request options before they are passed to the request library.\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tget simpleGet()\n\t{\n\t\treturn libSimpleGet;\n\t}\n\n\tprepareCookies(pRequestOptions)\n\t{\n\t\tif (this.cookie)\n\t\t{\n\t\t\tlet tmpCookieObject = this.cookie;\n\t\t\tif (!pRequestOptions.hasOwnProperty('headers'))\n\t\t\t{\n\t\t\t\tpRequestOptions.headers = {};\n\t\t\t}\n\t\t\tlet tmpCookieKeys = Object.keys(tmpCookieObject);\n\t\t\tif (tmpCookieKeys.length > 0)\n\t\t\t{\n\t\t\t\t// Only grab the first for now.\n\t\t\t\tpRequestOptions.headers.cookie = libCookie.serialize(tmpCookieKeys[0], tmpCookieObject[tmpCookieKeys[0]]);\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn pRequestOptions;\n\t}\n\n\tpreRequest(pOptions)\n\t{\n\t\t// Validate the options object\n\t\tlet tmpOptions = this.prepareCookies(pOptions);\n\n\t\t// Prepend a string to the URL if it exists in the Fable Config\n\t\tif (this.fable.settings.hasOwnProperty('RestClientURLPrefix'))\n\t\t{\n\t\t\ttmpOptions.url = this.fable.settings.RestClientURLPrefix + tmpOptions.url;\n\t\t}\n\n\t\treturn this.prepareRequestOptions(tmpOptions);\n\t}\n\n\texecuteChunkedRequest(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpData.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpData);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteChunkedRequestBinary(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\ttmpOptions.json = false;\n\t\ttmpOptions.encoding = null;\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpDataBuffer = false;\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: Potentially create a third option that streams this to a file?  So it doesn't have to hold it all in memory.\n\t\t\t\t\t\tif (!tmpDataBuffer)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.from(pChunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.concat([tmpDataBuffer, pChunk]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpDataBuffer.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpDataBuffer);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteJSONRequest(pOptions, fCallback)\n\t{\n\t\tpOptions.json = true;\n\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\tif (!tmpOptions.hasOwnProperty('headers'))\n\t\t{\n\t\t\ttmpOptions.headers = {};\n\t\t}\n\t\t/* Automated headers break some APIs\n\t\tif (!tmpOptions.headers.hasOwnProperty('Content-Type'))\n\t\t{\n\t\t\ttmpOptions.headers['Content-Type'] = 'application/json';\n\t\t}\n\t\t*/\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} JSON request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpJSONData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpJSONData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> JSON ${tmpOptions.method} completed - received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, JSON.parse(tmpJSONData));\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetJSON(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeJSONRequest(tmpRequestOptions, fCallback);\n\t}\n\n\tputJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PUT JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PUT';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpostJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`POST JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'POST';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpatchJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PATCH JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PATCH';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\theadJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`HEAD JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'HEAD';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tdelJSON(pOptions, fCallback)\n\t{\n\t\tpOptions.method = 'DELETE';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tgetRawText(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeChunkedRequest(tmpRequestOptions, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceRestClient;\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":20,\"cookie\":27,\"fable-serviceproviderbase\":44,\"simple-get\":112}],65:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceTemplate extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Template';\n\n\t\t// These are the exact regex's used in lodash/underscore\n\t\t// TODO: Switch this to precedent\n\t\tthis.Matchers = (\n\t\t\t{\n\t\t\t\tEvaluate: /<%([\\s\\S]+?)%>/g,\n\t\t\t\tInterpolate: /<%=([\\s\\S]+?)%>/g,\n\t\t\t\tEscaper: /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g,\n\t\t\t\tUnescaper: /\\\\(\\\\|'|r|n|t|u2028|u2029)/g,\n\t\t\t\t// This is how underscore does it, so we are keeping it for now.\n\t\t\t\tGuaranteedNonMatch: /.^/\n\t\t\t});\n\n\t\t// This is a helper for the escaper and unescaper functions.\n\t\t// Right now we are going to keep what underscore is doing, but, not forever.\n\t\tthis.templateEscapes = {\n\t\t\t'\\\\': '\\\\',\n\t\t\t\"'\": \"'\",\n\t\t\t'r': '\\r',\n\t\t\t'\\r': 'r',\n\t\t\t'n': '\\n',\n\t\t\t'\\n': 'n',\n\t\t\t't': '\\t',\n\t\t\t'\\t': 't',\n\t\t\t'u2028': '\\u2028',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'u2029': '\\u2029',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\t// This is defined as such to underscore that it is a dynamic programming\n\t\t// function on this class.\n\t\tthis.renderFunction = false;\n        this.templateString = false;\n\t}\n\n\trenderTemplate(pData)\n\t{\n\t\treturn this.renderFunction(pData);\n\t}\n\n\ttemplateFunction(pData)\n\t{\n\t\tlet fRenderTemplateBound = this.renderTemplate.bind(this);\n\t\treturn fRenderTemplateBound;\n\t}\n\n\tbuildTemplateFunction(pTemplateText, pData)\n\t{\n\t\t// For now this is being kept in a weird form ... this is to mimic the old\n\t\t// underscore code until this is rewritten using precedent.\n\t\tthis.TemplateSource = \"__p+='\" + pTemplateText\n\t\t\t.replace(this.Matchers.Escaper,\n\t\t\t\t(pMatch)=>\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\${this.templateEscapes[pMatch]}`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Interpolate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `'+\\n(${decodeURIComponent(pCode)})+\\n'`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Evaluate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `';\\n${decodeURIComponent(pCode)}\\n;__p+='`;\n\t\t\t\t}) + `';\\n`;\n\n\n\t\tthis.TemplateSource = `with(pTemplateDataObject||{}){\\n${this.TemplateSource}}\\n`;\n\t\tthis.TemplateSource = `var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n${this.TemplateSource}return __p;\\n`;\n\n\t\tthis.renderFunction = new Function('pTemplateDataObject', this.TemplateSource);\n\n\t\tif (typeof(pData) != 'undefined')\n\t\t{\n\t\t\treturn this.renderFunction(pData);\n\t\t}\n\n\t\t// Provide the compiled function source as a convenience for build time\n\t\t// precompilation.\n\t\tthis.TemplateSourceCompiled = 'function(obj){\\n' + this.TemplateSource + '}';\n\n\t\treturn this.templateFunction();\n\t}\n}\n\nmodule.exports = FableServiceTemplate;\n},{\"fable-serviceproviderbase\":44}],66:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\n// TODO: These are still pretty big -- consider the smaller polyfills\nconst libAsyncWaterfall = require('async.waterfall');\nconst libAsyncEachLimit = require('async.eachlimit');\n\nconst libBigNumber = require('big.js');\n\nclass FableServiceUtility extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\tthis.templates = {};\n\n\t\t// These two functions are used extensively throughout\n\t\tthis.waterfall = libAsyncWaterfall;\n\t\tthis.eachLimit = libAsyncEachLimit;\n\n\t\tthis.bigNumber = libBigNumber;\n\t}\n\n\t// Underscore and lodash have a behavior, _.extend, which merges objects.\n\t// Now that es6 gives us this, use the native thingy.\n\t// Nevermind, the native thing is not stable enough across environments\n\t// Basic shallow copy\n\textend(pDestinationObject, ...pSourceObjects)\n\t{\n\t\tfor (let i = 0; i < pSourceObjects.length; i++)\n\t\t{\n\t\t\tlet tmpSourceObject = pSourceObjects[i];\n\t\t\tif (typeof(tmpSourceObject) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpObjectProperties = Object.keys(tmpSourceObject);\n\t\t\t\tfor (let k = 0; k < tmpObjectProperties.length; k++)\n\t\t\t\t{\n\t\t\t\t\tpDestinationObject[tmpObjectProperties[k]] = tmpSourceObject[tmpObjectProperties[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pDestinationObject;\n\t}\n\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\ttemplate(pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.instantiateServiceProviderWithoutRegistration('Template');\n\t\treturn tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t}\n\n\t// Build a template function from a template hash, and, register it with the service provider\n\tbuildHashedTemplate(pTemplateHash, pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.instantiateServiceProvider('Template', {}, pTemplateHash);\n\t\tthis.templates[pTemplateHash] = tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t\treturn this.templates[pTemplateHash];\n\t}\n\n\t// This is a safe, modern version of chunk from underscore\n\t// Algorithm pulled from a mix of these two polyfills:\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\n\t// https://youmightnotneed.com/lodash\n\t// This implementation was most tolerant in browsers.  Uglify can fix the rest.\n\tchunk (pInput, pChunkSize, pChunkCache)\n\t{\n\t\tlet tmpInputArray = [...pInput];\n\t\t// Note lodash defaults to 1, underscore defaults to 0\n\t\tlet tmpChunkSize = (typeof(pChunkSize) == 'number') ? pChunkSize : 0;\n\t\tlet tmpChunkCache = (typeof(pChunkCache) != 'undefined') ? pChunkCache : [];\n\n\t\tif (tmpChunkSize <= 0)\n\t\t{\n\t\t\treturn tmpChunkCache;\n\t\t}\n\n\t\twhile (tmpInputArray.length)\n\t\t{\n\t\t\ttmpChunkCache.push(tmpInputArray.splice(0, tmpChunkSize));\n\t\t}\n\n\t\treturn tmpChunkCache;\n\t}\n\n\t// Convert an ISO string to a javascript date object\n\t// Adapted from https://stackoverflow.com/a/54751179\n\t//\n\t// Takes strings like: 2022-11-04T11:34:45.000Z\n\t//                and: 1986-06-11T09:34:46.012Z+0200\n\t// ... and converts them into javascript timestamps, following the directions of the timezone stuff.\n\t//\n\t// This is not meant to replace the more complex libraries such as moment or luxon.\n\t// This *is* meant to be a simple, small, and fast way to convert ISO strings to dates in engines\n\t// with ultra limited JS capabilities where those don't work.\n\tisoStringToDate (pISOString)\n\t{\n\t\tif (!this.fable.hasOwnProperty('Dates'))\n\t\t{\n\t\t\tthis.fable.instantiateServiceProvider('Dates');\n\t\t}\n\n\t\tlet tmpDate = false;\n\n\t\ttry\n\t\t{\n\t\t\ttmpDate = this.fable.Dates.dayJS.utc(pISOString);\n\t\t}\n\t\tcatch(pError)\n\t\t{\n\t\t\t// TODO: Should this throw?  Doubtful.\n\t\t\tthis.fable.log.error(`Could not parse date string ${pISOString} with dayJS.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (tmpDate)\n\t\t{\n\t\t\treturn tmpDate.toDate();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nmodule.exports = FableServiceUtility;\n},{\"async.eachlimit\":1,\"async.waterfall\":15,\"big.js\":17,\"fable-serviceproviderbase\":44}],67:[function(require,module,exports){\n'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n\n},{}],68:[function(require,module,exports){\n'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n\n},{\"./implementation\":67}],69:[function(require,module,exports){\n'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n\n},{\"function-bind\":68,\"has-proto\":72,\"has-symbols\":73,\"hasown\":75}],70:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n\n},{\"get-intrinsic\":69}],71:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\tif ($defineProperty) {\n\t\ttry {\n\t\t\t$defineProperty({}, 'a', { value: 1 });\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// IE 8 has a broken defineProperty\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!hasPropertyDescriptors()) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n\n},{\"get-intrinsic\":69}],72:[function(require,module,exports){\n'use strict';\n\nvar test = {\n\tfoo: {}\n};\n\nvar $Object = Object;\n\nmodule.exports = function hasProto() {\n\treturn { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);\n};\n\n},{}],73:[function(require,module,exports){\n'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n\n},{\"./shams\":74}],74:[function(require,module,exports){\n'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n\n},{}],75:[function(require,module,exports){\n'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {(o: {}, p: PropertyKey) => p is keyof o} */\nmodule.exports = bind.call(call, $hasOwn);\n\n},{\"function-bind\":68}],76:[function(require,module,exports){\nvar http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n\n},{\"http\":113,\"url\":134}],77:[function(require,module,exports){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],78:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n\n},{}],79:[function(require,module,exports){\n// When a boxed property is passed in, it should have quotes of some\n// kind around it.\n//\n// For instance:\n// \t\tMyValues['Name']\n// \t\tMyValues[\"Age\"]\n// \t\tMyValues[`Cost`]\n//\n// This function removes the wrapping quotes.\n//\n// Please note it *DOES NOT PARSE* template literals, so backticks just\n// end up doing the same thing as other quote types.\n//\n// TODO: Should template literals be processed?  If so what state do they have access to?  That should happen here if so.\n// TODO: Make a simple class include library with these\nconst cleanWrapCharacters = (pCharacter, pString) =>\n{\n\tif (pString.startsWith(pCharacter) && pString.endsWith(pCharacter))\n\t{\n\t\treturn pString.substring(1, pString.length - 1);\n\t}\n\telse\n\t{\n\t\treturn pString;\n\t}\n};\n\nmodule.exports = cleanWrapCharacters;\n},{}],80:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Hash Translation\n*\n* This is a very simple translation table for hashes, which allows the same schema to resolve\n* differently based on a loaded translation table.\n*\n* This is to prevent the requirement for mutating schemas over and over again when we want to\n* reuse the structure but look up data elements by different addresses.\n*\n* One side-effect of this is that a translation table can \"override\" the built-in hashes, since\n* this is always used to resolve hashes before any of the functionCallByHash(pHash, ...) perform\n* their lookups by hash.\n*\n* @class ManyfestHashTranslation\n*/\nclass ManyfestHashTranslation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n        this.translationTable = {};\n\t}\n\n    translationCount()\n    {\n        return Object.keys(this.translationTable).length;\n    }\n\n    addTranslation(pTranslation)\n    {\n        // This adds a translation in the form of:\n        // { \"SourceHash\": \"DestinationHash\", \"SecondSourceHash\":\"SecondDestinationHash\" }\n        if (typeof(pTranslation) != 'object')\n        {\n            this.logError(`Hash translation addTranslation expected a translation be type object but was passed in ${typeof(pTranslation)}`);\n            return false;\n        }\n\n        let tmpTranslationSources = Object.keys(pTranslation)\n\n        tmpTranslationSources.forEach(\n            (pTranslationSource) =>\n            {\n                if (typeof(pTranslation[pTranslationSource]) != 'string')\n                {\n                    this.logError(`Hash translation addTranslation expected a translation destination hash for [${pTranslationSource}] to be a string but the referrant was a ${typeof(pTranslation[pTranslationSource])}`);\n                }\n                else\n                {\n                    this.translationTable[pTranslationSource] = pTranslation[pTranslationSource];\n                }\n            });\n    }\n\n    removeTranslationHash(pTranslationHash)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslationHash))\n        {\n            delete this.translationTable[pTranslationHash];\n        }\n    }\n\n    // This removes translations.\n    // If passed a string, just removes the single one.\n    // If passed an object, it does all the source keys.\n    removeTranslation(pTranslation)\n    {\n        if (typeof(pTranslation) == 'string')\n        {\n            this.removeTranslationHash(pTranslation);\n            return true;\n        }\n        else if (typeof(pTranslation) == 'object')\n        {\n            let tmpTranslationSources = Object.keys(pTranslation)\n\n            tmpTranslationSources.forEach(\n                (pTranslationSource) =>\n                {\n                    this.removeTranslation(pTranslationSource);\n                });\n            return true;\n        }\n        else\n        {\n            this.logError(`Hash translation removeTranslation expected either a string or an object but the passed-in translation was type ${typeof(pTranslation)}`);\n            return false;\n        }\n    }\n\n    clearTranslations()\n    {\n        this.translationTable = {};\n    }\n\n    translate(pTranslation)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslation))\n        {\n            return this.translationTable[pTranslation];\n        }\n        else\n        {\n            return pTranslation;\n        }\n    }\n}\n\nmodule.exports = ManyfestHashTranslation;\n},{\"./Manyfest-LogToConsole.js\":81}],81:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\n\n/**\n* Manyfest simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n\n    console.log(`[Manyfest] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject));\n};\n\nmodule.exports = logToConsole;\n},{}],82:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Resolver\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressResolverCheckAddressExists\n*/\nclass ManyfestObjectAddressResolverCheckAddressExists\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// Check if an address exists.\n\t//\n\t// This is necessary because the getValueAtAddress function is ambiguous on\n\t// whether the element/property is actually there or not (it returns\n\t// undefined whether the property exists or not).  This function checks for\n\t// existance and returns true or false dependent.\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\t// TODO: Should these throw an error?\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Check if the property exists.\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName].hasOwnProperty(tmpBoxedPropertyReference);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Use the new in operator to see if the element is in the array\n\t\t\t\t\treturn (tmpBoxedPropertyNumber in pObject[tmpBoxedPropertyName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Check if the property exists\n\t\t\t\treturn pObject.hasOwnProperty(pAddress);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// Because this is an impossible address, the property doesn't exist\n\t\t\t\t\t// TODO: Should we throw an error in this condition?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverCheckAddressExists;\n},{\"./Manyfest-LogToConsole.js\":81}],83:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - DeleteValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverDeleteValue\n*/\nclass ManyfestObjectAddressResolverDeleteValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// TODO: Dry me\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Count from the end to the beginning so splice doesn't %&%#$ up the array\n\t\t\t\tfor (let i = tmpInputArray.length - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Delete elements end to beginning\n\t\t\t\t\t\ttmpInputArray.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tdelete pObject[tmpObjectPropertyName];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tdelete pObject[pAddress];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverDeleteValue;\n},{\"../source/Manyfest-ParseConditionals.js\":87,\"./Manyfest-CleanWrapCharacters.js\":79,\"./Manyfest-LogToConsole.js\":81}],84:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - GetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverGetValue\n*/\nclass ManyfestObjectAddressResolverGetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress, pParentAddress, pRootObject)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// Set the root object to the passed-in object if it isn't set yet.  This is expected to be the root object.\n\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// Adding simple back-navigation in objects\n\t\tif (tmpSeparatorIndex == 0)\n\t\t{\n\t\t\t// Given an address of \"Bundle.Contract.IDContract...Project.IDProject\" the ... would be interpreted as two back-navigations from IDContract.\n\t\t\t// When the address is passed in, though, the first . is already eliminated.  So we can count the dots.\n\t\t\tlet tmpParentAddressParts = tmpParentAddress.split('.');\n\n\t\t\tlet tmpBackNavigationCount = 0;\n\n\t\t\t// Count the number of dots\n\t\t\tfor (let i = 0; i < pAddress.length; i++)\n\t\t\t{\n\t\t\t\tif (pAddress.charAt(i) != '.')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttmpBackNavigationCount++;\n\t\t\t}\n\n\t\t\tlet tmpParentAddressLength = tmpParentAddressParts.length - tmpBackNavigationCount;\n\n\t\t\tif (tmpParentAddressLength < 0)\n\t\t\t{\n\t\t\t\t// We are trying to back navigate more than we can.\n\t\t\t\t// TODO: Should this be undefined or should we bank out at the bottom and try to go forward?\n\t\t\t\t// This seems safest for now.\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are trying to back navigate to a parent object.\n\t\t\t\t// Recurse with the back-propagated parent address, and, the new address without the back-navigation dots.\n\t\t\t\tlet tmpRecurseAddress = pAddress.slice(tmpBackNavigationCount);\n\t\t\t\tif (tmpParentAddressLength > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpRecurseAddress = `${tmpParentAddressParts.slice(0, tmpParentAddressLength).join('.')}.${tmpRecurseAddress}`;\n\t\t\t\t}\n\t\t\t\tthis.logInfo(`Back-navigation detected.  Recursing back to address [${tmpRecurseAddress}]`);\n\t\t\t\treturn this.getValueAtAddress(tmpRootObject, tmpRecurseAddress);\n\t\t\t}\n\t\t}\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\tlet tmpOutputArray = [];\n\t\t\t\tfor (let i = 0; i < tmpInputArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOutputArray.push(tmpInputArray[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpOutputArray;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn pObject[tmpObjectPropertyName];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tif (typeof(pObject[pAddress]) != null)\n\t\t\t\t{\n\t\t\t\t\treturn pObject[pAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverGetValue;\n},{\"../source/Manyfest-ParseConditionals.js\":87,\"./Manyfest-CleanWrapCharacters.js\":79,\"./Manyfest-LogToConsole.js\":81}],85:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - SetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressSetValue\n*/\nclass ManyfestObjectAddressSetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyReference] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the time in recursion to set the value in the object\n\t\t\t\tpObject[pAddress] = pValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressSetValue;\n},{\"./Manyfest-CleanWrapCharacters.js\":79,\"./Manyfest-LogToConsole.js\":81}],86:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Generation\n*\n* Automagically generate addresses and properties based on a passed-in object,\n* to be used for easy creation of schemas.  Meant to simplify the lives of\n* developers wanting to create schemas without typing a bunch of stuff.\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressGeneration\n*/\nclass ManyfestObjectAddressGeneration\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// generateAddressses\n\t//\n\t// This flattens an object into a set of key:value pairs for *EVERY SINGLE\n\t// POSSIBLE ADDRESS* in the object.  It can get ... really insane really\n\t// quickly.  This is not meant to be used directly to generate schemas, but\n\t// instead as a starting point for scripts or UIs.\n\t//\n\t// This will return a mega set of key:value pairs with all possible schema\n\t// permutations and default values (when not an object) and everything else.\n\tgenerateAddressses (pObject, pBaseAddress, pSchema)\n\t{\n\t\tlet tmpBaseAddress = (typeof(pBaseAddress) == 'string') ? pBaseAddress : '';\n\t\tlet tmpSchema = (typeof(pSchema) == 'object') ? pSchema : {};\n\n\t\tlet tmpObjectType = typeof(pObject);\n\n\t\tlet tmpSchemaObjectEntry = (\n\t\t\t{\n\t\t\t\tAddress: tmpBaseAddress,\n\t\t\t\tHash: tmpBaseAddress,\n\t\t\t\tName: tmpBaseAddress,\n\t\t\t\t// This is so scripts and UI controls can force a developer to opt-in.\n\t\t\t\tInSchema: false\n\t\t\t}\n\t\t)\n\n\t\tif ((tmpObjectType == 'object') && (pObject == null))\n\t\t{\n\t\t\ttmpObjectType = 'null';\n\t\t}\n\n\t\tswitch(tmpObjectType)\n\t\t{\n\t\t\tcase 'string':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'String';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'bigint':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Number';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\tcase 'null':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Any';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif (Array.isArray(pObject))\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Array';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < pObject.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[i], `${tmpBaseAddress}[${i}]`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Object';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t\ttmpBaseAddress += '.';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectProperties = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectProperties.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[tmpObjectProperties[i]], `${tmpBaseAddress}${tmpObjectProperties[i]}`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'symbol':\n\t\t\tcase 'function':\n\t\t\t\t// Symbols and functions neither recurse nor get added to the schema\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tmpSchema;\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressGeneration;\n},{\"./Manyfest-LogToConsole.js\":81}],87:[function(require,module,exports){\n// Given a string, parse out any conditional expressions and set whether or not to keep the record.\n//\n// For instance:\n// \t\t'files[]<<~?format,==,Thumbnail?~>>'\n//      'files[]<<~?format,==,Metadata?~>>'\n//      'files[]<<~?size,>,4000?~>>'\n//\n// The wrapping parts are the <<~? and ?~>> megabrackets.\n//\n// The function does not need to alter the string -- just check the conditionals within.\n\n// TODO: Consider making this an es6 class\n\n// Let's use indexOf since it is apparently the fastest.\nconst _ConditionalStanzaStart = '<<~?';\nconst _ConditionalStanzaStartLength = _ConditionalStanzaStart.length;\nconst _ConditionalStanzaEnd = '?~>>';\nconst _ConditionalStanzaEndLength = _ConditionalStanzaEnd.length;\n\n// Test the condition of a value in a record\nconst testCondition = (pManyfest, pRecord, pSearchAddress, pSearchComparator, pValue) =>\n{\n\tswitch(pSearchComparator)\n\t{\n\t\tcase '!=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) != pValue);\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) < pValue);\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) > pValue);\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) <= pValue);\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) >= pValue);\n\t\t\tbreak;\n\t\tcase '===':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === pValue);\n\t\t\tbreak;\n\t\tcase '==':\n\t\tdefault:\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) == pValue);\n\t\t\tbreak;\n\t}\n};\n\nconst parseConditionals = (pManyfest, pAddress, pRecord) =>\n{\n\tlet tmpKeepRecord = true;\n\n\t/*\n\t\tAlgorithm is simple:\n\n\t\t1.  Enuerate start points\n\n\t\t2.  Find stop points within each start point\n\t\t3. Check the conditional\n\t*/\n\n\tlet tmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart);\n\n\twhile (tmpStartIndex != -1)\n\t{\n\t\tlet tmpStopIndex = pAddress.indexOf(_ConditionalStanzaEnd, tmpStartIndex+_ConditionalStanzaStartLength);\n\n\t\tif (tmpStopIndex != -1)\n\t\t{\n\t\t\tlet tmpMagicComparisonPatternSet = pAddress.substring(tmpStartIndex+_ConditionalStanzaStartLength, tmpStopIndex).split(',');\n\n\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\t\t\tlet tmpSearchComparator = tmpMagicComparisonPatternSet[1];\n\t\t\tlet tmpSearchValue = tmpMagicComparisonPatternSet[2];\n\n\t\t\t// Process the piece\n\t\t\ttmpKeepRecord = tmpKeepRecord && testCondition(pManyfest, pRecord, tmpSearchAddress, tmpSearchComparator, tmpSearchValue);\n\t\t\ttmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart, tmpStopIndex+_ConditionalStanzaEndLength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpStartIndex = -1;\n\t\t}\n\t\t\n\t}\n\n\treturn tmpKeepRecord;\n}\n\nmodule.exports = parseConditionals;\n},{}],88:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Schema Manipulation Functions\n*\n* @class ManyfestSchemaManipulation\n*/\nclass ManyfestSchemaManipulation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n    // This translates the default address mappings to something different.\n    //\n    // For instance you can pass in manyfest schema descriptor object:\n    // \t{\n\t//\t  \"Address.Of.a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t//\t  \"Address.Of.b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t//  }\n    //\n    //\n    // And then an address mapping (basically a Hash->Address map)\n    //  {\n    //    \"a\": \"New.Address.Of.a\",\n    //    \"b\": \"New.Address.Of.b\"\n    //  }\n    //\n    // NOTE: This mutates the schema object permanently, altering the base hash.\n    //       If there is a collision with an existing address, it can lead to overwrites.\n    // TODO: Discuss what should happen on collisions.\n\tresolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\tif (typeof(pManyfestSchemaDescriptors) != 'object')\n\t\t{\n\t\t\tthis.logError(`Attempted to resolve address mapping but the descriptor was not an object.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof(pAddressMapping) != 'object')\n\t\t{\n\t\t\t// No mappings were passed in\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the arrays of both the schema definition and the hash mapping\n\t\tlet tmpManyfestAddresses = Object.keys(pManyfestSchemaDescriptors);\n\t\tlet tmpHashMapping = {};\n\t\ttmpManyfestAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tif (pManyfestSchemaDescriptors[pAddress].hasOwnProperty('Hash'))\n\t\t\t\t{\n\t\t\t\t\ttmpHashMapping[pManyfestSchemaDescriptors[pAddress].Hash] = pAddress;\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet tmpAddressMappingSet = Object.keys(pAddressMapping);\n\n\t\ttmpAddressMappingSet.forEach(\n\t\t\t(pInputAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpNewDescriptorAddress = pAddressMapping[pInputAddress];\n\t\t\t\tlet tmpOldDescriptorAddress = false;\n\t\t\t\tlet tmpDescriptor = false;\n\n\t\t\t\t// See if there is a matching descriptor either by Address directly or Hash\n\t\t\t\tif (pManyfestSchemaDescriptors.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = pInputAddress;\n\t\t\t\t}\n\t\t\t\telse if (tmpHashMapping.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = tmpHashMapping[pInputAddress];\n\t\t\t\t}\n\n\t\t\t\t// If there was a matching descriptor in the manifest, store it in the temporary descriptor\n\t\t\t\tif (tmpOldDescriptorAddress)\n\t\t\t\t{\n\t\t\t\t\ttmpDescriptor = pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t\tdelete pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Create a new descriptor!  Map it to the input address.\n\t\t\t\t\ttmpDescriptor = { Hash:pInputAddress };\n\t\t\t\t}\n\n\t\t\t\t// Now re-add the descriptor to the manyfest schema\n\t\t\t\tpManyfestSchemaDescriptors[tmpNewDescriptorAddress] = tmpDescriptor;\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tsafeResolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\t// This returns the descriptors as a new object, safely remapping without mutating the original schema Descriptors\n\t\tlet tmpManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptors));\n\t\tthis.resolveAddressMappings(tmpManyfestSchemaDescriptors, pAddressMapping);\n\t\treturn tmpManyfestSchemaDescriptors;\n\t}\n\n\tmergeAddressMappings(pManyfestSchemaDescriptorsDestination, pManyfestSchemaDescriptorsSource)\n\t{\n\t\tif ((typeof(pManyfestSchemaDescriptorsSource) != 'object') || (typeof(pManyfestSchemaDescriptorsDestination) != 'object'))\n\t\t{\n\t\t\tthis.logError(`Attempted to merge two schema descriptors but both were not objects.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpSource = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsSource));\n\t\tlet tmpNewManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsDestination));\n\n\t\t// The first passed-in set of descriptors takes precedence.\n\t\tlet tmpDescriptorAddresses = Object.keys(tmpSource);\n\n\t\ttmpDescriptorAddresses.forEach(\n\t\t\t(pDescriptorAddress) =>\n\t\t\t{\n\t\t\t\tif (!tmpNewManyfestSchemaDescriptors.hasOwnProperty(pDescriptorAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpNewManyfestSchemaDescriptors[pDescriptorAddress] = tmpSource[pDescriptorAddress];\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpNewManyfestSchemaDescriptors;\n\t}\n}\n\nmodule.exports = ManyfestSchemaManipulation;\n},{\"./Manyfest-LogToConsole.js\":81}],89:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\nlet libHashTranslation = require('./Manyfest-HashTranslation.js');\nlet libObjectAddressCheckAddressExists = require('./Manyfest-ObjectAddress-CheckAddressExists.js');\nlet libObjectAddressGetValue = require('./Manyfest-ObjectAddress-GetValue.js');\nlet libObjectAddressSetValue = require('./Manyfest-ObjectAddress-SetValue.js');\nlet libObjectAddressDeleteValue = require('./Manyfest-ObjectAddress-DeleteValue.js');\nlet libObjectAddressGeneration = require('./Manyfest-ObjectAddressGeneration.js');\nlet libSchemaManipulation = require('./Manyfest-SchemaManipulation.js');\n\nconst _DefaultConfiguration = { Scope:'DEFAULT', Descriptors: {} }\n\n/**\n* Manyfest object address-based descriptions and manipulations.\n*\n* @class Manyfest\n*/\nclass Manyfest extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'Manifest';\n\n\t\t// Wire in logging\n\t\tthis.logInfo = libSimpleLog;\n\t\tthis.logError = libSimpleLog;\n\n\t\t// Create an object address resolver and map in the functions\n\t\tthis.objectAddressCheckAddressExists = new libObjectAddressCheckAddressExists(this.logInfo, this.logError);\n\t\tthis.objectAddressGetValue = new libObjectAddressGetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressSetValue = new libObjectAddressSetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressDeleteValue = new libObjectAddressDeleteValue(this.logInfo, this.logError);\n\n\t\tif (!this.options.hasOwnProperty('defaultValues'))\n\t\t{\n\t\t\tthis.options.defaultValues = (\n\t\t\t\t{\n\t\t\t\t\t\"String\": \"\",\n\t\t\t\t\t\"Number\": 0,\n\t\t\t\t\t\"Float\": 0.0,\n\t\t\t\t\t\"Integer\": 0,\n\t\t\t\t\t\"Boolean\": false,\n\t\t\t\t\t\"Binary\": 0,\n\t\t\t\t\t\"DateTime\": 0,\n\t\t\t\t\t\"Array\": [],\n\t\t\t\t\t\"Object\": {},\n\t\t\t\t\t\"Null\": null\n\t\t\t\t});\n\t\t}\n\t\tif (!this.options.hasOwnProperty('strict'))\n\t\t{\n\t\t\tthis.options.strict = false;\n\t\t}\n\n\t\tthis.scope = undefined;\n\t\tthis.elementAddresses = undefined;\n\t\tthis.elementHashes = undefined;\n\t\tthis.elementDescriptors = undefined;\n\n\t\tthis.reset();\n\n\t\tif (typeof(this.options) === 'object')\n\t\t{\n\t\t\tthis.loadManifest(this.options);\n\t\t}\n\n\t\tthis.schemaManipulations = new libSchemaManipulation(this.logInfo, this.logError);\n\t\tthis.objectAddressGeneration = new libObjectAddressGeneration(this.logInfo, this.logError);\n\n\t\tthis.hashTranslations = new libHashTranslation(this.logInfo, this.logError);\n\t}\n\n\t/*************************************************************************\n\t * Schema Manifest Loading, Reading, Manipulation and Serialization Functions\n\t */\n\n\t// Reset critical manifest properties\n\treset()\n\t{\n\t\tthis.scope = 'DEFAULT';\n\t\tthis.elementAddresses = [];\n\t\tthis.elementHashes = {};\n\t\tthis.elementDescriptors = {};\n\t}\n\n\tclone()\n\t{\n\t\t// Make a copy of the options in-place\n\t\tlet tmpNewOptions = JSON.parse(JSON.stringify(this.options));\n\n\t\tlet tmpNewManyfest = new Manyfest(this.getManifest(), this.logInfo, this.logError, tmpNewOptions);\n\n\t\t// Import the hash translations\n\t\ttmpNewManyfest.hashTranslations.addTranslation(this.hashTranslations.translationTable);\n\n\t\treturn tmpNewManyfest;\n\t}\n\n\t// Deserialize a Manifest from a string\n\tdeserialize(pManifestString)\n\t{\n\t\t// TODO: Add guards for bad manifest string\n\t\treturn this.loadManifest(JSON.parse(pManifestString));\n\t}\n\n\t// Load a manifest from an object\n\tloadManifest(pManifest)\n\t{\n\t\tif (typeof(pManifest) !== 'object')\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading manifest; expecting an object but parameter was type ${typeof(pManifest)}.`);\n\t\t}\n\n\t\tlet tmpManifest = (typeof(pManifest) == 'object') ? pManifest : {};\n\n\t\tlet tmpDescriptorKeys = Object.keys(_DefaultConfiguration);\n\n\t\tfor (let i = 0; i < tmpDescriptorKeys.length; i++)\n\t\t{\n\t\t\tif (!tmpManifest.hasOwnProperty(tmpDescriptorKeys[i]))\n\t\t\t{\n\t\t\t\ttmpManifest[tmpDescriptorKeys[i]] = JSON.parse(JSON.stringify(_DefaultConfiguration[tmpDescriptorKeys[i]]));\n\t\t\t}\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Scope'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Scope) === 'string')\n\t\t\t{\n\t\t\t\tthis.scope = tmpManifest.Scope;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest; expecting a string but property was type ${typeof(tmpManifest.Scope)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest object.  Property \"Scope\" does not exist in the root of the object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Descriptors'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Descriptors) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpDescriptionAddresses = Object.keys(tmpManifest.Descriptors);\n\t\t\t\tfor (let i = 0; i < tmpDescriptionAddresses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.addDescriptor(tmpDescriptionAddresses[i], tmpManifest.Descriptors[tmpDescriptionAddresses[i]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading description object from manifest object.  Expecting an object in 'Manifest.Descriptors' but the property was type ${typeof(tmpManifest.Descriptors)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object description from manifest object.  Property \"Descriptors\" does not exist in the root of the Manifest object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('HashTranslations'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.HashTranslations) === 'object')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < tmpManifest.HashTranslations.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// Each translation is \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Serialize the Manifest to a string\n\tserialize()\n\t{\n\t\treturn JSON.stringify(this.getManifest());\n\t}\n\n\tgetManifest()\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tScope: this.scope,\n\t\t\t\tDescriptors: JSON.parse(JSON.stringify(this.elementDescriptors)),\n\t\t\t\tHashTranslations: JSON.parse(JSON.stringify(this.hashTranslations.translationTable))\n\t\t\t});\n\t}\n\n\t// Add a descriptor to the manifest\n\taddDescriptor(pAddress, pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) === 'object')\n\t\t{\n\t\t\t// Add the Address into the Descriptor if it doesn't exist:\n\t\t\tif (!pDescriptor.hasOwnProperty('Address'))\n\t\t\t{\n\t\t\t\tpDescriptor.Address = pAddress;\n\t\t\t}\n\n\t\t\tif (!this.elementDescriptors.hasOwnProperty(pAddress))\n\t\t\t{\n\t\t\t\tthis.elementAddresses.push(pAddress);\n\t\t\t}\n\n\t\t\t// Add the element descriptor to the schema\n\t\t\tthis.elementDescriptors[pAddress] = pDescriptor;\n\n\t\t\t// Always add the address as a hash\n\t\t\tthis.elementHashes[pAddress] = pAddress;\n\n\t\t\tif (pDescriptor.hasOwnProperty('Hash'))\n\t\t\t{\n\t\t\t\t// TODO: Check if this is a good idea or not..\n\t\t\t\t//       Collisions are bound to happen with both representations of the address/hash in here and developers being able to create their own hashes.\n\t\t\t\tthis.elementHashes[pDescriptor.Hash] = pAddress;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpDescriptor.Hash = pAddress;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object descriptor for address '${pAddress}' from manifest object.  Expecting an object but property was type ${typeof(pDescriptor)}.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetDescriptorByHash(pHash)\n\t{\n\t\treturn this.getDescriptor(this.resolveHashAddress(pHash));\n\t}\n\n\tgetDescriptor(pAddress)\n\t{\n\t\treturn this.elementDescriptors[pAddress];\n\t}\n\n\t// execute an action function for each descriptor\n\teachDescriptor(fAction)\n\t{\n        let tmpDescriptorAddresses = Object.keys(this.elementDescriptors);\n        for (let i = 0; i < tmpDescriptorAddresses.length; i++)\n        {\n            fAction(this.elementDescriptors[tmpDescriptorAddresses[i]]);\n        }\n\n\t}\n\n\t/*************************************************************************\n\t * Beginning of Object Manipulation (read & write) Functions\n\t */\n\t// Check if an element exists by its hash\n\tcheckAddressExistsByHash (pObject, pHash)\n\t{\n\t\treturn this.checkAddressExists(pObject,this.resolveHashAddress(pHash));\n\t}\n\n\t// Check if an element exists at an address\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\treturn this.objectAddressCheckAddressExists.checkAddressExists(pObject, pAddress);\n\t}\n\n\t// Turn a hash into an address, factoring in the translation table.\n\tresolveHashAddress(pHash)\n\t{\n\t\tlet tmpAddress = undefined;\n\n\t\tlet tmpInElementHashTable = this.elementHashes.hasOwnProperty(pHash);\n\t\tlet tmpInTranslationTable = this.hashTranslations.translationTable.hasOwnProperty(pHash);\n\n\t\t// The most straightforward: the hash exists, no translations.\n\t\tif (tmpInElementHashTable && !tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[pHash];\n\t\t}\n\t\t// There is a translation from one hash to another, and, the elementHashes contains the pointer end\n\t\telse if (tmpInTranslationTable && this.elementHashes.hasOwnProperty(this.hashTranslations.translate(pHash)))\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[this.hashTranslations.translate(pHash)];\n\t\t}\n\t\t// Use the level of indirection only in the Translation Table\n\t\telse if (tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.hashTranslations.translate(pHash);\n\t\t}\n\t\t// Just treat the hash as an address.\n\t\t// TODO: Discuss this ... it is magic but controversial\n\t\telse\n\t\t{\n\t\t\ttmpAddress = pHash;\n\t\t}\n\n\t\treturn tmpAddress;\n\t}\n\n\t// Get the value of an element by its hash\n\tgetValueByHash (pObject, pHash)\n\t{\n\t\tlet tmpValue = this.getValueAtAddress(pObject, this.resolveHashAddress(pHash));\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptorByHash(pHash));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\tlet tmpValue = this.objectAddressGetValue.getValueAtAddress(pObject, pAddress);\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptor(pAddress));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Set the value of an element by its hash\n\tsetValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.setValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressSetValue.setValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Delete the value of an element by its hash\n\tdeleteValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.deleteValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressDeleteValue.deleteValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Validate the consistency of an object against the schema\n\tvalidate(pObject)\n\t{\n\t\tlet tmpValidationData =\n\t\t{\n\t\t\tError: null,\n\t\t\tErrors: [],\n\t\t\tMissingElements:[]\n\t\t};\n\n\t\tif (typeof(pObject) !== 'object')\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Expected passed in object to be type object but was passed in ${typeof(pObject)}`);\n\t\t}\n\n\t\tlet addValidationError = (pAddress, pErrorMessage) =>\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Element at address \"${pAddress}\" ${pErrorMessage}.`);\n\t\t};\n\n\t\t// Now enumerate through the values and check for anomalies based on the schema\n\t\tfor (let i = 0; i < this.elementAddresses.length; i++)\n\t\t{\n\t\t\tlet tmpDescriptor = this.getDescriptor(this.elementAddresses[i]);\n\t\t\tlet tmpValueExists = this.checkAddressExists(pObject, tmpDescriptor.Address);\n\t\t\tlet tmpValue = this.getValueAtAddress(pObject, tmpDescriptor.Address);\n\n\t\t\tif ((typeof(tmpValue) == 'undefined') || !tmpValueExists)\n\t\t\t{\n\t\t\t\t// This will technically mean that `Object.Some.Value = undefined` will end up showing as \"missing\"\n\t\t\t\t// TODO: Do we want to do a different message based on if the property exists but is undefined?\n\t\t\t\ttmpValidationData.MissingElements.push(tmpDescriptor.Address);\n\t\t\t\tif (tmpDescriptor.Required || this.options.strict)\n\t\t\t\t{\n\t\t\t\t\taddValidationError(tmpDescriptor.Address, 'is flagged REQUIRED but is not set in the object');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now see if there is a data type specified for this element\n\t\t\tif (tmpDescriptor.DataType)\n\t\t\t{\n\t\t\t\tlet tmpElementType = typeof(tmpValue);\n\t\t\t\tswitch(tmpDescriptor.DataType.toString().trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpValueString = tmpValue.toString();\n\t\t\t\t\t\t\tif (tmpValueString.indexOf('.') > -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// TODO: Is this an error?\n\t\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but has a decimal point in the number.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DateTime':\n\t\t\t\t\t\tlet tmpValueDate = new Date(tmpValue);\n\t\t\t\t\t\tif (tmpValueDate.toString() == 'Invalid Date')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is not parsable as a Date by Javascript`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Check if this is a string, in the default case\n\t\t\t\t\t\t// Note this is only when a DataType is specified and it is an unrecognized data type.\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} (which auto-converted to String because it was unrecognized) but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpValidationData;\n\t}\n\n\t// Returns a default value, or, the default value for the data type (which is overridable with configuration)\n\tgetDefaultValue(pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) != 'object')\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (pDescriptor.hasOwnProperty('Default'))\n\t\t{\n\t\t\treturn pDescriptor.Default;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Default to a null if it doesn't have a type specified.\n\t\t\t// This will ensure a placeholder is created but isn't misinterpreted.\n\t\t\tlet tmpDataType = (pDescriptor.hasOwnProperty('DataType')) ? pDescriptor.DataType : 'String';\n\t\t\tif (this.options.defaultValues.hasOwnProperty(tmpDataType))\n\t\t\t{\n\t\t\t\treturn this.options.defaultValues[tmpDataType];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// give up and return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enumerate through the schema and populate default values if they don't exist.\n\tpopulateDefaults(pObject, pOverwriteProperties)\n\t{\n\t\treturn this.populateObject(pObject, pOverwriteProperties,\n\t\t\t// This just sets up a simple filter to see if there is a default set.\n\t\t\t(pDescriptor) =>\n\t\t\t{\n\t\t\t\treturn pDescriptor.hasOwnProperty('Default');\n\t\t\t});\n\t}\n\n\t// Forcefully populate all values even if they don't have defaults.\n\t// Based on type, this can do unexpected things.\n\tpopulateObject(pObject, pOverwriteProperties, fFilter)\n\t{\n\t\t// Automatically create an object if one isn't passed in.\n\t\tlet tmpObject = (typeof(pObject) === 'object') ? pObject : {};\n\t\t// Default to *NOT OVERWRITING* properties\n\t\tlet tmpOverwriteProperties = (typeof(pOverwriteProperties) == 'undefined') ? false : pOverwriteProperties;\n\t\t// This is a filter function, which is passed the schema and allows complex filtering of population\n\t\t// The default filter function just returns true, populating everything.\n\t\tlet tmpFilterFunction = (typeof(fFilter) == 'function') ? fFilter : (pDescriptor) => { return true; };\n\n\t\tthis.elementAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpDescriptor = this.getDescriptor(pAddress);\n\t\t\t\t// Check the filter function to see if this is an address we want to set the value for.\n\t\t\t\tif (tmpFilterFunction(tmpDescriptor))\n\t\t\t\t{\n\t\t\t\t\t// If we are overwriting properties OR the property does not exist\n\t\t\t\t\tif (tmpOverwriteProperties || !this.checkAddressExists(tmpObject, pAddress))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setValueAtAddress(tmpObject, pAddress, this.getDefaultValue(tmpDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpObject;\n\t}\n};\n\nmodule.exports = Manyfest;\n},{\"./Manyfest-HashTranslation.js\":80,\"./Manyfest-LogToConsole.js\":81,\"./Manyfest-ObjectAddress-CheckAddressExists.js\":82,\"./Manyfest-ObjectAddress-DeleteValue.js\":83,\"./Manyfest-ObjectAddress-GetValue.js\":84,\"./Manyfest-ObjectAddress-SetValue.js\":85,\"./Manyfest-ObjectAddressGeneration.js\":86,\"./Manyfest-SchemaManipulation.js\":88,\"fable-serviceproviderbase\":44}],90:[function(require,module,exports){\n(function (global){(function (){\nvar hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (obj === global) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./util.inspect\":18}],91:[function(require,module,exports){\nvar wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n\n},{\"wrappy\":136}],92:[function(require,module,exports){\n(function (process){(function (){\n// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":98}],93:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase')\n\nconst defaultPictSettings = (\n\t{\n\t\tName: 'DefaultPictApplication',\n\n\t\t// The main \"viewport\" is the view that is used to host our application\n\t\tMainViewportViewIdentifier: 'Default-View',\n\t\tMainViewportRenderableHash: false,\n\t\tMainViewportDestinationAddress: false,\n\t\tMainViewportDefaultDataAddress: false,\n\n\t\t// Whether or not we should automatically render the main viewport after we initialize the pict application\n\t\tAutoSolveAfterInitialize: true,\n\t\tAutoRenderMainViewportViewAfterInitialize: true,\n\n\t\tManifests: {},\n\t\t// The prefix to prepend on all template destination hashes\n\t\tIdentifierAddressPrefix: 'PICT-'\n\t});\n\nclass PictApplication extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tthis.serviceType = 'PictApplication';\n\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict state\n\t\tthis.AppData = this.fable.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastMarshalFromViewsTimestamp = false;\n\t\tthis.lastMarshalToViewsTimestamp = false;\n\n\t\t// Load all the manifests for the application\n\t\tlet tmpManifestKeys = Object.keys(this.options.Manifests);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++)\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.fable.instantiateServiceProvider('Manifest', this.options.Manifests[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Solve All Views                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing solve() function...`)\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpViewsToSolve[i].solve();\n\t\t}\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\t// Walk through any loaded views and solve them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoSolveWithApp)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoSolveOrdinal - b.options.AutoSolveOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToSolve[i].solveAsync.bind(tmpViewsToSolve[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Initialize Application                   */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\ttmpViewsToInitialize[i].initialize();\n\t\t\t}\n\t\t\tthis.onAfterInitialize();\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Solve the template synchronously\n\t\t\t\tthis.solve();\n\t\t\t}\n\t\t\t// Now check and see if we should automatically render as well\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Render the template synchronously\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallBack)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\t// TODO: Some optimization cleverness could be gained by grouping them into a parallelized async operation, by ordinal.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority\n\t\t\t// If they are all the default priority 0, it will end up being add order due to JSON Object Property Key order stuff\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = tmpViewsToInitialize[i];\n\t\t\t\ttmpAnticipate.anticipate(tmpView.initializeAsync.bind(tmpView));\n\t\t\t}\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.solveAsync.bind(this));\n\t\t\t}\n\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.renderMainViewportAsync.bind(this));\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallBack();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data From All Views              */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalFromViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalFromViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalFromViews[i].marshalFromView();\n\t\t}\n\t\tthis.onMarshalFromViews();\n\t\tthis.onAfterMarshalFromViews();\n\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalFromViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalFromViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalFromViews[i].marshalFromViewAsync.bind(tmpViewsToMarshalFromViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data To All Views                */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalToViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalToViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalToViews[i].marshalToView();\n\t\t}\n\t\tthis.onMarshalToViews();\n\t\tthis.onAfterMarshalToViews();\n\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalToViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalToViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalToViews[i].marshalToViewAsync.bind(tmpViewsToMarshalToViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Render View                              */\n\t/* -------------------------------------------------------------------------- */\n\trender(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\t// Now get the view (by hash) from the loaded views\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not render from View ${tmpViewIdentifier} because it is not a valid view.`);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn tmpView.render(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress);\n\t}\n\trenderMainViewport()\n\t{\n\t\treturn this.render(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress);\n\t}\n\n\trenderAsync(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tlet tmpErrorMessage = `PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not asynchronously render from View ${tmpViewIdentifier} because it is not a valid view.`;\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.error(tmpErrorMessage);\n\t\t\t}\n\t\t\treturn fCallback(new Error(tmpErrorMessage));\n\t\t}\n\n\t\treturn tmpView.renderAsync(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress, fCallback);\n\t}\n\trenderMainViewportAsync(fCallback)\n\t{\n\t\treturn this.renderAsync(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress, fCallback);\n\t}\n}\n\nmodule.exports = PictApplication;\n},{\"fable-serviceproviderbase\":44}],94:[function(require,module,exports){\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nconst defaultPictViewSettings = (\n\t{\n\t\tDefaultRenderable: false,\n\t\tDefaultDestinationAddress: false,\n\t\tDefaultTemplateRecordAddress: false,\n\n\t\tViewIdentifier: false,\n\n\t\t// If this is set to true, when the App initializes this will.\n\t\t// After the App initializes, initialize will be called as soon as it's added.\n\t\tAutoInitialize: true,\n\t\tAutoInitializeOrdinal: 0,\n\n\t\t// If this is set to true, when the App autorenders (on load) this will.\n\t\t// After the App initializes, render will be called as soon as it's added.\n\t\tAutoRender: true,\n\t\tAutoRenderOrdinal: 0,\n\n\t\tAutoSolveWithApp: true,\n\t\tAutoSolveOrdinal: 0,\n\n\t\tCSSHash: false,\n\t\tCSS: false,\n\t\tCSSProvider: false,\n\t\tCSSPriority: 500,\n\n\t\tTemplates: [],\n\n\t\tDefaultTemplates: [],\n\n\t\tRenderables: [],\n\n\t\tManifests: {}\n\t});\n\nclass PictView extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Intersect default options, parent constructor, service information\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictViewSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tif (!this.options.ViewIdentifier)\n\t\t{\n\t\t\tthis.options.ViewIdentifier = `AutoViewID-${this.fable.getUUID()}`;\n\t\t}\n\t\tthis.serviceType = 'PictView';\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict application state\n\t\tthis.AppData = this.pict.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastRenderedTimestamp = false;\n\t\tthis.lastMarshalFromViewTimestamp = false;\n\t\tthis.lastMarshalToViewTimestamp = false;\n\n\t\t// Load all templates from the array in the options\n\t\t// Templates are in the form of {Hash:'Some-Template-Hash',Template:'Template content',Source:'TemplateSource'}\n\t\tfor (let i = 0; i < this.options.Templates.length; i++)\n\t\t{\n\t\t\tlet tmpTemplate = this.options.Templates[i];\n\n\t\t\tif (!tmpTemplate.hasOwnProperty('Hash') || !tmpTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Template ${i} in the options array.`, tmpTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addTemplate(tmpTemplate.Hash, tmpTemplate.Template, tmpTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load all default templates from the array in the options\n\t\t// Templates are in the form of {Prefix:'',Postfix:'-List-Row',Template:'Template content',Source:'TemplateSourceString'}\n\t\tfor (let i = 0; i < this.options.DefaultTemplates.length; i++)\n\t\t{\n\t\t\tlet tmpDefaultTemplate = this.options.DefaultTemplates[i];\n\n\t\t\tif (!tmpDefaultTemplate.hasOwnProperty('Postfix') || !tmpDefaultTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Default Template ${i} in the options array.`, tmpDefaultTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpDefaultTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpDefaultTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addDefaultTemplate(tmpDefaultTemplate.Prefix, tmpDefaultTemplate.Postfix, tmpDefaultTemplate.Template, tmpDefaultTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load the CSS if it's available\n\t\tif (this.options.CSS)\n\t\t{\n\t\t\tlet tmpCSSHash = this.options.CSSHash ? this.options.CSSHash : `View-${this.options.ViewIdentifier}`;\n\t\t\tlet tmpCSSProvider = this.options.CSSProvider ? this.options.CSSProvider : tmpCSSHash;\n\t\t\tthis.pict.CSSMap.addCSS(tmpCSSHash, this.options.CSS, tmpCSSProvider, this.options.CSSPriority);\n\t\t}\n\n\t\t// Load all renderables\n\t\t// Renderables are launchable renderable instructions with templates\n\t\t// They look as such: {Identifier:'ContentEntry', TemplateHash:'Content-Entry-Section-Main', ContentDestinationAddress:'#ContentSection', RecordAddress:'AppData.Content.DefaultText', ManifestTransformation:'ManyfestHash', ManifestDestinationAddress:'AppData.Content.DataToTransformContent'}\n\t\t// The only parts that are necessary are Identifier and Template\n\t\t// A developer can then do render('ContentEntry') and it just kinda works.  Or they can override the ContentDestinationAddress\n\t\tthis.renderables = {};\n\t\tfor (let i = 0; i < this.options.Renderables.length; i++)\n\t\t{\n\t\t\tlet tmpRenderable = this.options.Renderables[i];\n\t\t\tthis.addRenderable(this.options.Renderables[i]);\n\t\t}\n\t}\n\n\taddRenderable(pRenderableHash, pTemplateHash, pDefaultTemplateDataAddress, pDefaultDestinationAddress, pRenderMethod)\n\t{\n\t\tlet tmpRenderable = false;\n\n\t\tif (typeof(pRenderableHash) == 'object')\n\t\t{\n\t\t\t// The developer passed in the renderable as an object.\n\t\t\t// Use theirs instead!\n\t\t\ttmpRenderable = pRenderableHash;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpRenderMethod = (typeof(pRenderMethod) !== 'string') ? pRenderMethod : 'replace';\n\t\t\ttmpRenderable = (\n\t\t\t\t{\n\t\t\t\t\tRenderableHash: pRenderableHash,\n\t\t\t\t\tTemplateHash: pTemplateHash,\n\t\t\t\t\tDefaultTemplateDataAddress: pDefaultTemplateDataAddress,\n\t\t\t\t\tDefaultDestinationAddress: pDefaultDestinationAddress,\n\t\t\t\t\tRenderMethod: tmpRenderMethod\n\t\t\t\t});\n\t\t}\n\n\t\tif ((typeof(tmpRenderable.RenderableHash) != 'string') || (typeof(tmpRenderable.TemplateHash) != 'string'))\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Renderable; RenderableHash or TemplateHash are invalid.`, tmpRenderable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} adding renderable [${tmpRenderable.RenderableHash}] pointed to template ${tmpRenderable.TemplateHash}.`);\n\t\t\t}\n\n\t\t\tthis.renderables[tmpRenderable.RenderableHash] = tmpRenderable;\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                        Code Section: Initialization                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\tthis.onAfterInitialize();\n\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallback)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallback();\n\t\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Render                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeRender(pRenderable, pRenderDestinationAddress, pData)\n\t{\n\t\t// Overload this to mess with stuff before the content gets generated from the template\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeRenderAsync(fCallback)\n\t{\n\t\treturn fCallback();\n\t}\n\n\trender(pRenderable, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it is not a valid renderable.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpDataAddress;\n\t\tlet tmpData;\n\n\t\tif (typeof(pTemplateDataAddress) === 'object')\n\t\t{\n\t\t\ttmpData = pTemplateDataAddress;\n\t\t\ttmpDataAddress = 'Passed in as object';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\t\ttmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\t\t}\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\t// Generate the content output from the template and data\n\t\tlet tmpContent = this.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData)\n\n\t\t// Assign the content to the destination address\n\t\tswitch(tmpRenderable.RenderMethod)\n\t\t{\n\t\t\tcase 'append':\n\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'prepend':\n\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'append_once':\n\t\t\t\t// Try to find the content in the destination address\n\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t{\n\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'replace':\n\t\t\t\t// TODO: Should this be the default?\n\t\t\tdefault:\n\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Execute the developer-overridable post-render behavior\n\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, tmpContent)\n\n\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\treturn true;\n\t}\n\trenderAsync(pRenderable, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`));\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`));\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn fCallback(Error(`Could not render ${tmpRenderableHash}`));\n\t\t}\n\n\t\tlet tmpDataAddress;\n\t\tlet tmpData;\n\n\t\tif (typeof(pTemplateDataAddress) === 'object')\n\t\t{\n\t\t\ttmpData = pTemplateDataAddress;\n\t\t\ttmpDataAddress = 'Passed in as object';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\t\ttmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\t\t}\n\n\t\tlet tmpAnticipate = this.fable.newAnticipate();\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\t//\n\n\t\ttmpAnticipate.anticipate(\n\t\t\t(fOnBeforeRenderCallback) =>\n\t\t\t{\n\t\t\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\t\t\t\tthis.onBeforeRenderAsync(\n\t\t\t\t\t(pError) =>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fOnBeforeRenderCallback(pError);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\ttmpAnticipate.anticipate(\n\t\t\t(fAsyncTemplateCallback) =>\n\t\t\t{\n\t\t\t\t// Render the template (asynchronously)\n\t\t\t\tthis.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData,\n\t\t\t\t\t(pError, pContent) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render (asynchronously) ${tmpRenderableHash} (param ${pRenderable}) because it did not parse the template.`, pError);\n\t\t\t\t\t\t\treturn fAsyncTemplateCallback(pError);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Assign the content to the destination address\n\t\t\t\t\t\tswitch(tmpRenderable.RenderMethod)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'append':\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'prepend':\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'append_once':\n\t\t\t\t\t\t\t\t// Try to find the content in the destination address\n\t\t\t\t\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\t\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'replace':\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Execute the developer-overridable asynchronous post-render behavior\n\t\t\t\t\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\t\t\t\t\treturn this.onAfterRenderAsync(fAsyncTemplateCallback, pContent);\n\t\t\t\t\t});\n\t\t\t});\n\t\ttmpAnticipate.wait(fCallback);\n\t}\n\n\tonAfterRender()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterRenderAsync(fCallback)\n\t{\n\t\tthis.onAfterRender();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Solver                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal From View                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalFromView();\n\t\tthis.onMarshalFromView();\n\t\tthis.onAfterMarshalFromView();\n\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalFromViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal To View                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalToView();\n\t\tthis.onMarshalToView();\n\t\tthis.onAfterMarshalToView();\n\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalToViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToView();\n\t\treturn fCallback();\n\t}\n}\n\nmodule.exports = PictView;\n},{\"fable-serviceproviderbase\":44}],95:[function(require,module,exports){\n/**\n* Precedent Meta-Templating\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Process text streams, parsing out meta-template expressions.\n*/\nvar libWordTree = require(`./WordTree.js`);\nvar libStringParser = require(`./StringParser.js`);\n\nclass Precedent\n{\n\t/**\n\t * Precedent Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser();\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData);\n\t}\n}\n\nmodule.exports = Precedent;\n\n},{\"./StringParser.js\":96,\"./WordTree.js\":97}],96:[function(require,module,exports){\n/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t */\n\tparseString (pString, pParseTree, pData)\n\t{\n\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\tfor (var i = 0; i < pString.length; i++)\n\t\t{\n\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData);\n\t\t}\n\n\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\treturn tmpParserState.Output;\n\t}\n}\n\nmodule.exports = StringParser;\n\n},{}],97:[function(require,module,exports){\n/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n\n},{}],98:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],99:[function(require,module,exports){\n(function (global){(function (){\n/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],100:[function(require,module,exports){\n'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n\n},{}],101:[function(require,module,exports){\n'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n},{\"./formats\":100,\"./parse\":102,\"./stringify\":103}],102:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n\n},{\"./utils\":104}],103:[function(require,module,exports){\n'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            strictNullHandling,\n            skipNulls,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n\n},{\"./formats\":100,\"./utils\":104,\"side-channel\":110}],104:[function(require,module,exports){\n'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n\n},{\"./formats\":100}],105:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],106:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],107:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":105,\"./encode\":106}],108:[function(require,module,exports){\n/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n},{\"buffer\":20}],109:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $floor = GetIntrinsic('%Math.floor%');\n\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(fn, 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(fn, 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n\n},{\"define-data-property\":36,\"get-intrinsic\":69,\"gopd\":70,\"has-property-descriptors\":71}],110:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n\n},{\"call-bind/callBound\":25,\"get-intrinsic\":69,\"object-inspect\":90}],111:[function(require,module,exports){\n(function (Buffer){(function (){\n/*! simple-concat. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function (stream, cb) {\n  var chunks = []\n  stream.on('data', function (chunk) {\n    chunks.push(chunk)\n  })\n  stream.once('end', function () {\n    if (cb) cb(null, Buffer.concat(chunks))\n    cb = null\n  })\n  stream.once('error', function (err) {\n    if (cb) cb(err)\n    cb = null\n  })\n}\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":20}],112:[function(require,module,exports){\n(function (Buffer){(function (){\n/*! simple-get. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const originalHost = opts.hostname // hostname before potential redirect\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api\n      // If redirected host is different than original host, drop headers to prevent cookie leak (#73)\n      if (redirectHost !== null && redirectHost !== originalHost) {\n        delete opts.headers.cookie\n        delete opts.headers.authorization\n      }\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n\n}).call(this)}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":20,\"decompress-response\":18,\"http\":113,\"https\":76,\"once\":91,\"querystring\":107,\"simple-concat\":111,\"url\":134}],113:[function(require,module,exports){\n(function (global){(function (){\nvar ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./lib/request\":115,\"./lib/response\":116,\"builtin-status-codes\":21,\"url\":134,\"xtend\":137}],114:[function(require,module,exports){\n(function (global){(function (){\nexports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],115:[function(require,module,exports){\n(function (process,global,Buffer){(function (){\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"./capability\":114,\"./response\":116,\"_process\":98,\"buffer\":20,\"inherits\":78,\"readable-stream\":131}],116:[function(require,module,exports){\n(function (process,global,Buffer){(function (){\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"./capability\":114,\"_process\":98,\"buffer\":20,\"inherits\":78,\"readable-stream\":131}],117:[function(require,module,exports){\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n\n},{}],118:[function(require,module,exports){\n(function (process){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n}).call(this)}).call(this,require('_process'))\n\n},{\"./_stream_readable\":120,\"./_stream_writable\":122,\"_process\":98,\"inherits\":78}],119:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n},{\"./_stream_transform\":121,\"inherits\":78}],120:[function(require,module,exports){\n(function (process,global){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../errors\":117,\"./_stream_duplex\":118,\"./internal/streams/async_iterator\":123,\"./internal/streams/buffer_list\":124,\"./internal/streams/destroy\":125,\"./internal/streams/from\":127,\"./internal/streams/state\":129,\"./internal/streams/stream\":130,\"_process\":98,\"buffer\":20,\"events\":37,\"inherits\":78,\"string_decoder/\":132,\"util\":18}],121:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}\n},{\"../errors\":117,\"./_stream_duplex\":118,\"inherits\":78}],122:[function(require,module,exports){\n(function (process,global){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n}).call(this)}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../errors\":117,\"./_stream_duplex\":118,\"./internal/streams/destroy\":125,\"./internal/streams/state\":129,\"./internal/streams/stream\":130,\"_process\":98,\"buffer\":20,\"inherits\":78,\"util-deprecate\":135}],123:[function(require,module,exports){\n(function (process){(function (){\n'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;\n}).call(this)}).call(this,require('_process'))\n\n},{\"./end-of-stream\":126,\"_process\":98}],124:[function(require,module,exports){\n'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();\n},{\"buffer\":20,\"util\":18}],125:[function(require,module,exports){\n(function (process){(function (){\n'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};\n}).call(this)}).call(this,require('_process'))\n\n},{\"_process\":98}],126:[function(require,module,exports){\n// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;\n},{\"../../../errors\":117}],127:[function(require,module,exports){\nmodule.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n\n},{}],128:[function(require,module,exports){\n// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;\n},{\"../../../errors\":117,\"./end-of-stream\":126}],129:[function(require,module,exports){\n'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};\n},{\"../../../errors\":117}],130:[function(require,module,exports){\nmodule.exports = require('events').EventEmitter;\n\n},{\"events\":37}],131:[function(require,module,exports){\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n\n},{\"./lib/_stream_duplex.js\":118,\"./lib/_stream_passthrough.js\":119,\"./lib/_stream_readable.js\":120,\"./lib/_stream_transform.js\":121,\"./lib/_stream_writable.js\":122,\"./lib/internal/streams/end-of-stream.js\":126,\"./lib/internal/streams/pipeline.js\":128}],132:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n},{\"safe-buffer\":108}],133:[function(require,module,exports){\n(function (setImmediate,clearImmediate){(function (){\nvar nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n}).call(this)}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate)\n\n},{\"process/browser.js\":98,\"timers\":133}],134:[function(require,module,exports){\n/*\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nvar punycode = require('punycode');\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n/*\n * define these here so at least they only have to be\n * compiled once on the first module load.\n */\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/,\n\n  /*\n   * RFC 2396: characters reserved for delimiting URLs.\n   * We actually just auto-escape these.\n   */\n  delims = [\n    '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'\n  ],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = [\n    '{', '}', '|', '\\\\', '^', '`'\n  ].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  /*\n   * Characters that are never ever allowed in a hostname.\n   * Note that any invalid chars are also handled, but these\n   * are the ones that are *expected* to be seen, so we fast-path\n   * them.\n   */\n  nonHostChars = [\n    '%', '/', '?', ';', '#'\n  ].concat(autoEscape),\n  hostEndingChars = [\n    '/', '?', '#'\n  ],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    http: true,\n    https: true,\n    ftp: true,\n    gopher: true,\n    file: true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  },\n  querystring = require('qs');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && typeof url === 'object' && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (typeof url !== 'string') {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  /*\n   * Copy chrome, IE, opera backslash-handling behavior.\n   * Back slashes before the query string get converted to forward slashes\n   * See: https://code.google.com/p/chromium/issues/detail?id=25916\n   */\n  var queryIndex = url.indexOf('?'),\n    splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  /*\n   * trim before proceeding.\n   * This is to support parse stuff like \"  http://foo.com  \\n\"\n   */\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  /*\n   * figure out if it's got a host\n   * user@server is *always* interpreted as a hostname, and url\n   * resolution will treat //foo/bar as host=foo,path=bar because that's\n   * how the browser resolves relative URLs.\n   */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@/]+@[^@/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || (proto && !slashedProtocol[proto]))) {\n\n    /*\n     * there's a hostname.\n     * the first instance of /, ?, ;, or # ends the host.\n     *\n     * If there is an @ in the hostname, then non-host chars *are* allowed\n     * to the left of the last @ sign, unless some host-ending character\n     * comes *before* the @-sign.\n     * URLs are obnoxious.\n     *\n     * ex:\n     * http://a@b@c/ => user:a@b host:c\n     * http://a@b?@c => user:a host:c path:/?@c\n     */\n\n    /*\n     * v0.12 TODO(isaacs): This is not quite how Chrome does things.\n     * Review our test case against browsers more comprehensively.\n     */\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n\n    /*\n     * at this point, either we have an explicit point where the\n     * auth portion cannot go past, or the last @ char is the decider.\n     */\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      /*\n       * atSign must be in auth portion.\n       * http://a@b/c@d => host:b auth:a path:/c@d\n       */\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    /*\n     * Now we have a portion which is definitely the auth.\n     * Pull that off.\n     */\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) { hostEnd = rest.length; }\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    /*\n     * we've indicated that there is a hostname,\n     * so even if it's empty, it has to be present.\n     */\n    this.hostname = this.hostname || '';\n\n    /*\n     * if hostname begins with [ and ends with ]\n     * assume that it's an IPv6 address.\n     */\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              /*\n               * we replace non-ASCII char with a temporary placeholder\n               * we need this to make sure size of hostname is not\n               * broken by replacing non-ASCII by nothing\n               */\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      /*\n       * IDNA Support: Returns a punycoded representation of \"domain\".\n       * It only converts parts of the domain name that\n       * have non-ASCII characters, i.e. it doesn't matter if\n       * you call it with a domain that already is ASCII-only.\n       */\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    /*\n     * strip [ and ] from the hostname\n     * the host field still retains them, though\n     */\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  /*\n   * now rest is set to the post-host stuff.\n   * chop off any delim chars.\n   */\n  if (!unsafeProtocol[lowerProto]) {\n\n    /*\n     * First, make 100% sure that any \"autoEscape\" chars get\n     * escaped, even if encodeURIComponent doesn't think they\n     * need to be.\n     */\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) { continue; }\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  /*\n   * ensure it's an object, and not a string url.\n   * If it's an obj, this is a no-op.\n   * this way, you can call url_format() on strings\n   * to clean up potentially wonky urls.\n   */\n  if (typeof obj === 'string') { obj = urlParse(obj); }\n  if (!(obj instanceof Url)) { return Url.prototype.format.call(obj); }\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n    pathname = this.pathname || '',\n    hash = this.hash || '',\n    host = false,\n    query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && typeof this.query === 'object' && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query, {\n      arrayFormat: 'repeat',\n      addQueryPrefix: false\n    });\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') { protocol += ':'; }\n\n  /*\n   * only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n   * unless they had them to begin with.\n   */\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') { pathname = '/' + pathname; }\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') { hash = '#' + hash; }\n  if (search && search.charAt(0) !== '?') { search = '?' + search; }\n\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) { return relative; }\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (typeof relative === 'string') {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  /*\n   * hash is always overridden, no matter what.\n   * even href=\"\" will remove it.\n   */\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') { result[rkey] = relative[rkey]; }\n    }\n\n    // urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.pathname = '/';\n      result.path = result.pathname;\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    /*\n     * if it's a known url protocol, then changing\n     * the protocol does weird things\n     * first, if it's not file:, then we MUST have a host,\n     * and if there was a path\n     * to begin with, then we MUST have a path.\n     * if it is file:, then the host is dropped,\n     * because that's known to be hostless.\n     * anything else is assumed to be absolute.\n     */\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift())) { }\n      if (!relative.host) { relative.host = ''; }\n      if (!relative.hostname) { relative.hostname = ''; }\n      if (relPath[0] !== '') { relPath.unshift(''); }\n      if (relPath.length < 2) { relPath.unshift(''); }\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n    isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n    mustEndAbs = isRelAbs || isSourceAbs || (result.host && relative.pathname),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    relPath = relative.pathname && relative.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  /*\n   * if the url is a non-slashed url, then relative\n   * links like ../.. should be able\n   * to crawl up to the hostname, as well.  This is strange.\n   * result.protocol has already been set by now.\n   * Later on, put the first path part into the host field.\n   */\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') { srcPath[0] = result.host; } else { srcPath.unshift(result.host); }\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') { relPath[0] = relative.host; } else { relPath.unshift(relative.host); }\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    /*\n     * it's relative\n     * throw away the existing file, and take the new path instead.\n     */\n    if (!srcPath) { srcPath = []; }\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search != null) {\n    /*\n     * just pull out the search.\n     * like href='?foo'.\n     * Put this after the other two cases because it simplifies the booleans\n     */\n    if (psychotic) {\n      result.host = srcPath.shift();\n      result.hostname = result.host;\n      /*\n       * occationaly the auth can get stuck only in host\n       * this especially happens in cases like\n       * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n       */\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.hostname = authInHost.shift();\n        result.host = result.hostname;\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    // to support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    /*\n     * no path at all.  easy.\n     * we've already handled the other stuff above.\n     */\n    result.pathname = null;\n    // to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  /*\n   * if a url ENDs in . or .., then it must get a trailing slash.\n   * however, if it ends in anything else non-slashy,\n   * then it must NOT get a trailing slash.\n   */\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === '';\n\n  /*\n   * strip single dots, resolve double dots to parent dir\n   * if the path tries to go above the root, `up` ends up > 0\n   */\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    result.host = result.hostname;\n    /*\n     * occationaly the auth can get stuck only in host\n     * this especially happens in cases like\n     * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n     */\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.hostname = authInHost.shift();\n      result.host = result.hostname;\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (srcPath.length > 0) {\n    result.pathname = srcPath.join('/');\n  } else {\n    result.pathname = null;\n    result.path = null;\n  }\n\n  // to support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\n},{\"punycode\":99,\"qs\":101}],135:[function(require,module,exports){\n(function (global){(function (){\n\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],136:[function(require,module,exports){\n// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n\n},{}],137:[function(require,module,exports){\nmodule.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n},{}],138:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst defaultConfiguration = (\n\t{\n\t\t// This is the address for the <script /> tag that contains the CSS.\n\t\tCSSElementAddress: '#PICT-CSS'\n\t}\n)\n\nclass PictCSS extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\t// No merging of options necessary\n\t\tif (typeof(this.options.CSSElementAddress) === 'undefined')\n\t\t{\n\t\t\tthis.options.CSSElementAddress = defaultConfiguration.CSSElementAddress;\n\t\t}\n\n\t\tthis.inlineCSSMap = {};\n\t}\n\n\t// Add a CSS fragment to the CSS map (each view can have its own CSS fragment)\n\t// Hash is shared across all views, so if 10 views all load the \"My-Table-View\" fragment, it will only be loaded once.\n\taddCSS(pHash, pContent, pPriority, pProvider)\n\t{\n\t\tlet tmpPriority = (typeof(pPriority) !== 'undefined') ? pPriority : 1000;\n\t\tlet tmpProvidor = (typeof(pProvider) === 'string') ? pProvider : 'Unknown';\n\t\tthis.inlineCSSMap[pHash] = { Hash: pHash, Content: pContent, Provider: tmpProvidor, Priority:tmpPriority };\n\t}\n\n\tremoveCSS(pHash)\n\t{\n\t\tdelete this.inlineCSSMap[pHash];\n\t}\n\n\tgenerateCSS()\n\t{\n\t\tlet tmpCSS = '';\n\t\tlet tmpCSSHashes = Object.keys(this.inlineCSSMap);\n\t\t// Sort the hashes by Priority\n\t\ttmpCSSHashes.sort((a, b) => { return this.inlineCSSMap[a].Priority - this.inlineCSSMap[b].Priority; });\n\t\tfor (let i = 0; i < tmpCSSHashes.length; i++)\n\t\t{\n\t\t\tlet tmpCSSFragment = this.inlineCSSMap[tmpCSSHashes[i]];\n\t\t\tlet tmpCSSComment = tmpCSSFragment.Hash;\n\t\t\tif (tmpCSSFragment.Hash != tmpCSSFragment.Provider)\n\t\t\t{\n\t\t\t\ttmpCSSComment = `${tmpCSSComment} from ${tmpCSSFragment.Provider}`;\n\t\t\t}\n\t\t\ttmpCSS += `/* ${tmpCSSComment} */\\n${tmpCSSFragment.Content}\\n`;\n\t\t}\n\t\treturn tmpCSS;\n\t}\n\n\t// Inject the CSS into the magic DOM element for it\n\tinjectCSS()\n\t{\n\t\tthis.services.ContentAssignment.assignContent(this.options.CSSElementAddress, this.generateCSS());\n\t}\n}\n\nmodule.exports = PictCSS;\n},{\"fable\":50}],139:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictContentAssignment extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictContentAssignment';\n\n\t\t// Check to see if we are running in a browser\n\t\tthis.inBrowser = false;\n\t\tthis.hasDocument = false;\n\t\tif (typeof (window) == 'object')\n\t\t{\n\t\t\tthis.inBrowser = true;\n\t\t\t// Now check that the browser has a document object\n\t\t\tif ((typeof (window.document) != 'undefined') && (typeof (window.document.querySelectorAll) == 'function'))\n\t\t\t{\n\t\t\t\tthis.hasDocument = true;\n\t\t\t}\n\t\t}\n\n\t\t// If we're in a browser, check to see if jQuery is available.\n\t\tthis.hasJquery = false;\n\t\tthis.jQuery = false;\n\t\tif (this.inBrowser && typeof (window.jQuery) !== 'undefined')\n\t\t{\n\t\t\tthis.hasJquery = true;\n\t\t}\n\n\t\t// API Consumers can craft their own assign function\n\t\tthis.customAssignFunction = false;\n\t\t// API Consumers can also craft their own prepend function\n\t\tthis.customPrependFunction = false;\n\t\t// API Consumers can also craft their own append function\n\t\tthis.customAppendFunction = false;\n\n\t\t// API Consumers can also craft their own read function\n\t\tthis.customReadFunction = false;\n\t\t// API Consumers can even craft their own get element function.\n\t\tthis.customGetElementFunction = false;\n\n\t\t// API Consumers can also craft their own attribute read function\n\t\tthis.customReadAttributeFunction = false;\n\t\t// API Consumers can also craft their own attribute set function\n\t\tthis.customSetAttributeFunction = false;\n\t\t// API Consumers can also craft their own attribute remove function\n\t\tthis.customRemoveAttributeFunction = false;\n\n\t\t// API Consumers can also craft their own class read function\n\t\tthis.customReadClassFunction = false;\n\t\t// API Consumers can also craft their own class set function\n\t\tthis.customSetClassFunction = false;\n\t\t// API Consumers can also craft their own class remove function\n\t\tthis.customRemoveClassFunction = false;\n\t}\n\n\tgetElement(pAddress)\n\t{\n\t\tif (this.customGetElementFunction)\n\t\t{\n\t\t\treturn this.customGetElementFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpElements = window.jQuery(pAddress);\n\t\t\tif (tmpElements.length == 0)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// TODO: This isn't the most efficient method, but it is the most compatible.\n\t\t\t\tlet tmpElementSet = [];\n\t\t\t\tfor (let i = 0; i < tmpElements.length; i++)\n\t\t\t\t{\n\t\t\t\t\ttmpElementSet.push(tmpElements[0]);\n\t\t\t\t}\n\t\t\t\treturn tmpElementSet;\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\treturn window.document.querySelectorAll(pAddress);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content GET ELEMENT for [${pAddress}] will return empty because none of the browser methods are available`);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tassignContent(pAddress, pContent)\n\t{\n\t\tif (this.customAssignFunction)\n\t\t{\n\t\t\treturn this.customAssignFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element(s)\n\t\t\tlet tmpTargetElementSet = window.jQuery(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\t// Get the element(s)\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content ASSIGN to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tappendContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customAppendFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.append(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"beforeend\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content APPEND to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tprependContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customPrependFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.prepend(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"afterbegin\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content PREPEND in [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\treadContent(pAddress)\n\t{\n\t\tif (this.customReadFunction)\n\t\t{\n\t\t\treturn this.customReadFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\tswitch (tmpTargetElement.prop('tagName'))\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\treturn tmpTargetElement.val();\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\treturn tmpTargetElement.text();\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn tmpTargetElement.html();\n\t\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tif (tmpTargetElementSet.length < 1)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse if (tmpTargetElementSet.length == 1)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[0].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\treturn tmpTargetElementSet[0].value;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\treturn tmpTargetElementSet[0].text;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn tmpTargetElementSet[0].innerHTML;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content READ from [${pAddress}]...`);\n\t\t\treturn '';\n\t\t}\n\t}\n\n\n\taddClass(pAddress, pClass)\n\t{\n\t\tif (this.customSetClassFunction)\n\t\t{\n\t\t\treturn this.customSetClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.addClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.add(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content ADDCLASS to [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\tremoveClass(pAddress, pClass)\n\t{\n\t\tif (this.customRemoveClassFunction)\n\t\t{\n\t\t\treturn this.customRemoveClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.remove(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVECLASS from [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\treadAttribute(pAddress, pAttribute)\n\t{\n\t\tif (this.customReadAttributeFunction)\n\t\t{\n\t\t\treturn this.customReadAttributeFunction(pAddress, pAttribute);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.attr(pAttribute);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].getAttribute(pAttribute);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content READATTRIBUTE from [${pAddress}]:`, pAttribute);\n\t\t}\n\t}\n\n\tsetAttribute(pAddress, pAttribute, pValue)\n\t{\n\t\tif (this.customSetAttributeFunction)\n\t\t{\n\t\t\treturn this.customSetAttributeFunction(pAddress, pAttribute, pValue);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.attr(pAttribute, pValue);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].setAttribute(pAttribute, pValue);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content SETATTRIBUTE for [${pAddress}] ATTRIBUTE [${pAttribute}]:`, pValue);\n\t\t}\n\t}\n\n\tremoveAttribute(pAddress, pAttribute)\n\t{\n\t\tif (this.customRemoveAttributeFunction)\n\t\t{\n\t\t\treturn this.customRemoveAttributeFunction(pAddress, pAttribute);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeAttr(pAttribute);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].removeAttribute(pAttribute);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVEATTRIBUTE for [${pAddress}] ATTRIBUTE [${pAttribute}]`);\n\t\t}\n\t}\n\n\thasClass(pAddress, pClass)\n\t{\n\t\tif (this.customReadClassFunction)\n\t\t{\n\t\t\treturn this.customReadClassFunction(pAddress, pClass);\n\t\t}\n\t\tif (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\treturn tmpTargetElement.hasClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\treturn tmpTargetElementSet[i].classList.contains(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content HASCLASS for [${pAddress}] CLASS [${pClass}]:`);\n\t\t}\n\t}\n}\n\nmodule.exports = PictContentAssignment;\n},{\"fable\":50}],140:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictDataProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictDataProvider';\n\t}\n\n    getDataByAddress(pAddress, pData)\n    {\n        let tmpData = (typeof(pData) === 'undefined') ? {} : pData;\n\n        return this.fable.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, pAddress);\n    }\n}\n\nmodule.exports = PictDataProvider;\n},{\"fable\":50}],141:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictMeadowEntityProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictMeadowProvider';\n\n\t\tif (this.fable.settings.PictDefaultURLPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = this.fable.settings.PictDefaultURLPrefix;\n\t\t}\n\t\telse if (!this.options.urlPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = '/1.0/';\n\t\t}\n\n\t\tif (this.fable.settings.PictDefaultDownloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = this.fable.settings.PictDefaultDownloadBatchSize;\n\t\t}\n\t\telse if (!this.options.downloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = 100;\n\t\t}\n\n\t\tthis.restClient = this.fable.instantiateServiceProviderWithoutRegistration('RestClient');\n\n\t\tthis.cache = {};\n\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tinitializeCache(pEntity)\n\t{\n\t\t// This should not be happening as often as it's happening.\n\t\tif (!this.cache.hasOwnProperty(pEntity))\n\t\t{\n\t\t\tthis.cache[pEntity] = this.fable.instantiateServiceProviderWithoutRegistration('ObjectCache');\n\t\t\t// TODO: Make this a configuration?\n\t\t\t// For now cache for 30 seconds.\n\t\t\tthis.cache[pEntity].maxAge = 30000;\n\t\t\tthis.cache[pEntity].maxLength = 10000;\n\n\t\t\tthis.fable.Bundle[pEntity] = this.cache[pEntity].RecordMap;\n\t\t}\n\t}\n\n\tgetEntity(pEntity, pIDRecord, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\tfunction ()\n\t\t\t{\n\t\t\t\tlet tmpPossibleRecord = this.cache[pEntity].read(pIDRecord);\n\n\t\t\t\tif (tmpPossibleRecord)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(null, tmpPossibleRecord);\n\t\t\t\t}\n\n\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}/${pIDRecord}`\n\t\t\t\t\t});\n\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pBody)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.cache[pEntity].put(pBody, pIDRecord);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pBody);\n\t\t\t\t\t});\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySetPage(pEntity, pMeadowFilterExpression, pRecordStartCursor, pRecordCount, fCallback)\n\t{\n\t\tlet tmpURL = `${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${pRecordStartCursor}/${pRecordCount}`;\n\n\t\treturn this.restClient.getJSON(tmpURL,\n\t\t\tfunction (pDownloadError, pDownloadResponse, pDownloadBody)\n\t\t\t{\n\t\t\t\treturn fCallback(pDownloadError, pDownloadBody);\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySetRecordCount(pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\tlet tmpURL = `${this.options.urlPrefix}${pEntity}s/Count/FilteredTo/${pMeadowFilterExpression}`;\n\n\t\treturn this.restClient.getJSON(tmpURL,\n\t\t\tfunction (pError, pResponse, pBody)\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\tthis.log.error(`Error getting entity count of [${pEntity}] filtered to [${pMeadowFilterExpression}] from url [${tmpURL}]: ${pError}`);\n\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t}\n\t\t\t\tlet tmpRecordCount = 0;\n\t\t\t\tif (pBody.Count)\n\t\t\t\t{\n\t\t\t\t\ttmpRecordCount = pBody.Count;\n\t\t\t\t}\n\t\t\t\treturn fCallback(pError, tmpRecordCount);\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySet(pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\t// TODO: Should we test for too many record IDs here by string length in pMeadowFilterExpression?\n\t\t//       FBL~ID${pDestinationEntity}~INN~${tmpIDRecordsCommaSeparated}\n\t\t//       If the list is mega-long we can parse it and break it into chunks.\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\tfunction ()\n\t\t\t{\n\t\t\t\treturn this.getEntitySetRecordCount(pEntity, pMeadowFilterExpression,\n\t\t\t\t\t(pRecordCountError, pRecordCount) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pRecordCountError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn fCallback(pRecordCountError);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet tmpRecordCount = pRecordCount;\n\n\t\t\t\t\t\tif (isNaN(pRecordCount))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Entity count did not return a number for [${pEntity}] filtered to [${pMeadowFilterExpression}]... something is fatally wrong from the server accessed in getEntitySet call.`);\n\t\t\t\t\t\t\treturn fCallback(new Error('Entity count did not return a number in getEntitySet.'));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpDownloadURIFragments = [];\n\t\t\t\t\t\tlet tmpDownloadBatchSize = this.options.downloadBatchSize;\n\t\t\t\t\t\tfor (let i = 0; i < (tmpRecordCount / tmpDownloadBatchSize); i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Generate each of the URI fragments to download\n\t\t\t\t\t\t\ttmpDownloadURIFragments.push(`${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${i * tmpDownloadBatchSize}/${tmpDownloadBatchSize}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpEntitySet = [];\n\n\t\t\t\t\t\t// Now run these in series (it's possible to parallelize the requests but they would not be in server order)\n\t\t\t\t\t\tthis.fable.Utility.eachLimit(tmpDownloadURIFragments, 1,\n\t\t\t\t\t\t\t(pURIFragment, fDownloadCallback) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.restClient.getJSON(pURIFragment,\n\t\t\t\t\t\t\t\t\t(pDownloadError, pDownloadResponse, pDownloadBody) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmpEntitySet = tmpEntitySet.concat(pDownloadBody);\n\t\t\t\t\t\t\t\t\t\t// Should we be caching each record?\n\t\t\t\t\t\t\t\t\t\treturn fDownloadCallback(pDownloadError);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(pFullDownloadError) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(pFullDownloadError, tmpEntitySet);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t}.bind(this));\n\t}\n}\n\nmodule.exports = PictMeadowEntityProvider;\n},{\"fable\":50}],142:[function(require,module,exports){\nconst libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictTemplateProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictTemplateProvider';\n\n        this.templates = {};\n        this.templateSources = {};\n\n        // Default templates are stored by prefix.\n        // The longest prefix match is used.\n        // Case sensitive.\n        this.defaultTemplates = [];\n\n        // This function can be overloaded to load templates from a database, in a page or other source.\n        this.loadTemplateFunction = (pTemplateHash) => { return false; };\n\t}\n\n    addTemplate(pTemplateHash, pTemplate, pTemplateSource)\n    {\n        this.templates[pTemplateHash] = pTemplate;\n\n        if (typeof(pTemplateSource) == 'string')\n        {\n            this.templateSources[pTemplateHash] = pTemplateSource;\n        }\n        else\n        {\n            this.templateSources[pTemplateHash] = `Direct addTemplate('${pTemplateHash}') function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`;\n        }\n    }\n\n    addDefaultTemplate(pPrefix, pPostfix, pTemplate, pSource)\n    {\n        let tmpSource = (typeof(pSource) == 'string') ? pSource : `Direct addDefaultTemplate('${pPrefix}','${pPostfix}',..) function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`\n        let tmpDefaultTemplate = {\n            prefix: pPrefix,\n            postfix: pPostfix,\n            template: pTemplate,\n            source: tmpSource\n        };\n        if (typeof(pTemplate) != 'string')\n        {\n            this.log.error('PictTemplateProvider.addDefaultTemplate: pTemplate is not a string.');\n        }\n        this.defaultTemplates.push(tmpDefaultTemplate);\n    }\n\n    checkDefaultTemplateHash(pTemplateHash)\n    {\n        /*\n         * Default templates are managed by postfix and prefix.  The use case is things like titles, headers, list \n         * wrappers, rows, etc.\n         *\n         * So we might have a default template for a list wrapper and it should expect \"-ListWrap\" as the postfix.\n         * And we might have a default template for a list row and it should expect \"-ListRow\" as the postfix.\n         * The list might have a \"-ListTitle\", or we might have shared titles and it would just be \"-Title\".\n         * \n         * The idea is to allow fallbacks on defaults.\n         */\n        for (let i = 0; i < this.defaultTemplates.length; i++)\n        {\n            if ((pTemplateHash.indexOf(this.defaultTemplates[i].postfix) == pTemplateHash.length - this.defaultTemplates[i].postfix.length)\n                && (pTemplateHash.indexOf(this.defaultTemplates[i].prefix) == 0))\n            {\n                this.templates[pTemplateHash] = this.defaultTemplates[i].template;\n                this.templateSources[pTemplateHash] = `Auto created in checkDefaultTemplateHash('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${this.defaultTemplates[i].prefix}]...[${this.defaultTemplates[i].postfix}]`;\n                return this.templates[pTemplateHash];\n            }\n        }\n        return false;\n    }\n\n    getTemplate(pTemplateHash)\n    {\n        // TODO: Optimize this.\n        // If the template doesn't exist, try to load it with the loading function\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.loadTemplate(pTemplateHash);\n        }\n        // If the loading function fails, try to load it from the default templates\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.checkDefaultTemplateHash(pTemplateHash);\n        }\n        if (this.templates.hasOwnProperty(pTemplateHash))\n        {\n            return this.templates[pTemplateHash];\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    loadTemplate(pTemplateHash)\n    {\n        let tmpTemplate = this.loadTemplateFunction(pTemplateHash);\n\n        if (tmpTemplate)\n        {\n            this.templates[pTemplateHash] = tmpTemplate.template;\n            this.templateSources[pTemplateHash] = `Loaded in loadTemplate('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${tmpTemplate.source}]`;\n\n        }\n\n        return tmpTemplate;\n    }\n}\n\nmodule.exports = PictTemplateProvider;\n},{\"fable\":50}],143:[function(require,module,exports){\n/**\n* @author <steven@velozo.com>\n*/\nconst libFable = require('fable');\n\nclass Pict extends libFable\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\tthis.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n\n\t\t// The templateProvider provides a basic key->template mapping with default fallback capabilities\n\t\tthis.addAndInstantiateServiceType('TemplateProvider', require('./Pict-Template-Provider.js'));\n\t\tthis.addAndInstantiateServiceType('EntityProvider',  require('./Pict-Meadow-EntityProvider.js'));\n\t\tthis.addAndInstantiateServiceType('DataProvider',  require('./Pict-DataProvider.js'));\n\t\tthis.addAndInstantiateServiceType('ContentAssignment',  require('./Pict-Content-Assignment.js'));\n\t\tthis.addAndInstantiateServiceType('CSSMap', require('./Pict-CSS.js'));\n\n\t\tthis.instantiateServiceProvider('MetaTemplate');\n\t\tthis.instantiateServiceProvider('DataGeneration');\n\n\t\tthis.manifest = this.instantiateServiceProvider('Manifest');\n\n\t\tthis.AppData = {};\n\t\tthis.Bundle = {};\n\n\t\t// Log noisness goes from 0 - 5, where 5 is show me everything.\n\t\tthis.LogNoisiness = 0;\n\n\t\t// Load manifest sets\n\t\tif (this.settings.Manifests)\n\t\t{\n\t\t\tthis.loadManifestSet(this.settings.Manifests);\n\t\t}\n\n\t\tthis._DefaultPictTemplatesInitialized = false;\n\t\tthis.initializePictTemplateEngine();\n\n\t\tthis.addServiceType('PictView',  require('pict-view'));\n\t\tthis.addServiceType('PictApplication',  require('pict-application'));\n\n\t\t// Expose the named views directly, through a convenience accessor\n\t\tthis.views = this.servicesMap.PictView;\n\t}\n\n\t// Load manifests in as Hashed services\n\tloadManifestSet (pManifestSet)\n\t{\n\t\tif (typeof(pManifestSet) != 'object')\n\t\t{\n\t\t\tthis.log.warn(`PICT [${this.UUID}] could not load Manifest Set; pManifestSet was not an object.`);\n\t\t\treturn false;\n\t\t}\n\t\tlet tmpManifestKeys = Object.keys(pManifestSet);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++ )\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.instantiateServiceProvider('Manifest', pManifestSet[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddView(pViewHash, pOptions, pViewPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpViewHash = (typeof(pViewHash) == 'string') ? pViewHash : this.fable.getUUID();\n\n\t\tif (typeof(pViewPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pViewPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pViewPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictView', tmpOptions, tmpViewHash, pViewPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictView', tmpOptions, tmpViewHash);\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddApplication(pApplicationHash, pOptions, pApplicationPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpApplicationHash = (typeof(pApplicationHash) == 'string') ? pApplicationHash : this.fable.getUUID();\n\n\t\tif (typeof(pApplicationPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pApplicationPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pApplicationPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictApplication', tmpOptions, tmpApplicationHash, pApplicationPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictApplication', tmpOptions, tmpApplicationHash);\n\t\t}\n\t}\n\n\tinitializePictTemplateEngine()\n\t{\n\t\t/*\n\t\t *\n\t\t * To stave off madness, these are inefficient for now.  The wkhtmltopdf renderer leaves much to be desired\n\t\t * in the way of feedback with regards to javascript compatibility.\n\t\t *\n\t\t */\n\t\tif (!this._DefaultPictTemplatesInitialized)\n\t\t{\n\t\t\t// Expects one of the following:\n\t\t\t// \t\t{~E:Book^AppData.Some.Address.IDBook^Render-Book-Template~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook and render it to Render-Book-Template\n\t\t\tlet fEntityRender = (pHash, pData, fCallback) =>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpEntity = false;\n\t\t\t\t\tlet tmpEntityID = false;\n\t\t\t\t\tlet tmpEntityTemplate = false;\n\n\t\t\t\t\t// This expression requires 2 parts -- a third is optional, and, if present, is the template to render to.\n\t\t\t\t\tlet tmpAddressParts = tmpHash.split('^');\n\n\t\t\t\t\tif (tmpAddressParts.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpEntity = tmpAddressParts[0].trim();\n\t\t\t\t\ttmpEntityID = tmpAddressParts[1].trim();\n\t\t\t\t\ttmpEntityTemplate = tmpAddressParts[2].trim();\n\n\t\t\t\t\tif (!isNaN(tmpEntityID))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpEntityID = parseInt(tmpEntityID);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is an address, so we need to get the value at the address\n\t\t\t\t\t\ttmpEntityID = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpEntityID);\n\t\t\t\t\t}\n\n\t\t\t\t\t// No Entity or EntityID\n\t\t\t\t\tif (!tmpEntity || !tmpEntityID)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]  Entity: ${tmpEntity} ID: ${tmpEntityID}`);\n\t\t\t\t\t\treturn tmpCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]  Entity: ${tmpEntity} ID: ${tmpEntityID}`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`Pict: Entity Render: Entity [${tmpEntity}] with ID [${tmpEntityID}] as template [${tmpEntityTemplate}] from [${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to get the entity\n\t\t\t\t\tthis.EntityProvider.getEntity(tmpEntity, tmpEntityID,\n\t\t\t\t\t\tfunction (pError, pRecord)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Pict: Entity Render: Error getting entity [${tmpEntity}] with ID [${tmpEntityID}] for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Now render the template\n\t\t\t\t\t\t\tif (tmpEntityTemplate)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpEntityTemplate, pRecord, tmpCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn tmpCallback(null, '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(this));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternAsync('{~E:', '~}', fEntityRender);\n\t\t\tthis.MetaTemplate.addPatternAsync('{~Entity:', '~}', fEntityRender);\n\n\t\t\t// {~T:Template:AddressOfData~}\n\t\t\tlet fTemplateRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render Async: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render Async: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData),\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~T:', '~}', fTemplateRender, fTemplateRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~Template:', '~}', fTemplateRender, fTemplateRenderAsync);\n\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateSetRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0]\n\t\t\t\t\ttmpAddressOfData = tmpTemplateHashPart[1];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\ttmpData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData);\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TS:', '~}', fTemplateSetRender, fTemplateSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateSet:', '~}', fTemplateSetRender, fTemplateSetRenderAsync);\n\n// Refactor: #### DRY PROBLEM Too much dry needing fixed at this point\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateValueSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData);\n\n\t\t\t\t\tlet tmpDataValueSet = [];\n\t\t\t\t\tif (Array.isArray(tmpData))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < tmpData.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[i]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof(tmpData) === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueKeys = Object.keys(tmpData);\n\t\t\t\t\t\tfor (let i = 0; i < tmpValueKeys.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[tmpValueKeys[i]]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData});\n\t\t\t\t\t}\n\t\t\t\t\ttmpData = tmpDataValueSet;\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, tmpData);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateValueSetRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0]\n\t\t\t\t\ttmpAddressOfData = tmpTemplateHashPart[1];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\ttmpData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData);\n\n\t\t\t\t\tlet tmpDataValueSet = [];\n\t\t\t\t\tif (Array.isArray(tmpData))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < tmpData.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[i]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof(tmpData) === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueKeys = Object.keys(tmpData);\n\t\t\t\t\t\tfor (let i = 0; i < tmpValueKeys.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[tmpValueKeys[i]]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData});\n\t\t\t\t\t}\n\t\t\t\t\ttmpData = tmpDataValueSet;\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TVS:', '~}', fTemplateValueSetRender, fTemplateValueSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateValueSet:', '~}', fTemplateValueSetRender, fTemplateValueSetRenderAsync);\n\n\t\t\t// {~T:TemplateFromMap:AddressOfData~}\n\t\t\tlet fTemplateFromMapRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfMap);\n\t\t\t\t\tlet tmpKey = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfKey);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, tmpData);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateFromMapRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfMap);\n\t\t\t\t\tlet tmpKey = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfKey);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from TemplateFromMaps\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TFM:', '~}', fTemplateFromMapRender, fTemplateFromMapRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateFromMap:', '~}', fTemplateFromMapRender, fTemplateFromMapRenderAsync);\n\n\t\t\t// {~TS:TemplateFromMap:AddressOfDataSet~}\n\t\t\tlet fTemplateFromMapSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfMap);\n\t\t\t\t\tlet tmpKey = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfKey);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateFromMapSetRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMapSet Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfMap);\n\t\t\t\t\tlet tmpKey = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfKey);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMapSet Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from TemplateFromMaps\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TSFM:', '~}', fTemplateFromMapSetRender, fTemplateFromMapSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateSetFromMap:', '~}', fTemplateFromMapSetRender, fTemplateFromMapSetRenderAsync);\n// Refactor: #### END OF DRY PROBLEM\n\n\n\n\t\t\t//{~Data:AppData.Some.Value.to.Render~}\n\t\t\tlet fDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = '';\n\t\t\t\t\tif (tmpHash != null)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\t}\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn tmpValue;\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~D:', '~}', fDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Data:', '~}', fDataRender);\n\n\t\t\t//<p>{~Join: - ^Record.d1^Record.d1~}</p>\n\t\t\tlet fJoinDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash;\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDataAddresses = tmpHash.split('^');\n\t\t\t\t\tif (tmpDataAddresses.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get the separator string\n\t\t\t\t\tlet tmpSeparator = tmpDataAddresses.shift();\n\n\t\t\t\t\tlet tmpValueList = [];\n\t\t\t\t\tfor (let i = 0; i < tmpDataAddresses.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpDataAddresses[i]);\n\t\t\t\t\t\tif (tmpValue)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpValueList.push(tmpValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpValueList.join(tmpSeparator);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~J:', '~}', fJoinDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Join:', '~}', fJoinDataRender);\n\n\t\t\t//<p>{~JoinUnique: - ^Record.d1^Record.d1~}</p>\n\t\t\tlet fJoinUniqueDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash;\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join Unique [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join Unique [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDataAddresses = tmpHash.split('^');\n\t\t\t\t\tif (tmpDataAddresses.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get the separator string\n\t\t\t\t\tlet tmpSeparator = tmpDataAddresses.shift();\n\n\t\t\t\t\tlet tmpValueList = [];\n\t\t\t\t\tlet tmpValueMap = {};\n\t\t\t\t\tfor (let i = 0; i < tmpDataAddresses.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpDataAddresses[i]);\n\t\t\t\t\t\tif (tmpValue)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!tmpValueMap.hasOwnProperty(tmpValue))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValueMap[tmpValue] = true;\n\t\t\t\t\t\t\t\ttmpValueList.push(tmpValue);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpValueList.join(tmpSeparator);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~JU:', '~}', fJoinUniqueDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~JoinUnique:', '~}', fJoinUniqueDataRender);\n\n\t\t\tthis.MetaTemplate.addPattern('{~Dollars:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterDollars(tmpColumnData);\n\t\t\t\t});\n\t\t\tthis.MetaTemplate.addPattern('{~Digits:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterAddCommasToNumber(this.DataFormat.formatterRoundNumber(tmpColumnData, 2));\n\t\t\t\t});\n\t\t\t\n\t\t\t// Output the date as a YYYY-MM-DD string\n\t\t\tthis.MetaTemplate.addPattern('{~DateYMD:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpDateValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: Modularize this\n\t\t\t\t\tlet tmpDayJS = this.fable.Dates.dayJS.utc(tmpDateValue);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Try to cast the day to be a specific timezone if one is set for the app\n\t\t\t\t\t\tif (this.options.Timezone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.options.Timezone);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`Error casting Document date ${tmpSQLDateTime} to the Document timezone using tz in this.AppData.DocumentData.Timezone: [${this.AppData.DocumentData.Timezone}] .. casting to the browser guess which is [${this.fable.Dates.dayJS.tz.guess()}].`);\n\t\t\t\t\t\t// Day.js will try to guess the user's timezone for us\n\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpDayJS.format('YYYY-MM-DD');\n\t\t\t\t});\n\n\t\t\t\n\t\t\t// Output the date as a YYYY-MM-DD string\n\t\t\t// Takes in the format as the second parameter: {~DateYMD:AppData.Some.Date^YYYY-MM-DD~}\n\t\t\tthis.MetaTemplate.addPattern('{~DateFormat:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpDateValueSet = tmpHash.split('^');\n\n\t\t\t\t\tif (tmpDateValueSet.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PICT Template [fDateFormat]::[${tmpHash}] did not have a valid format string and date.`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDateValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpDateValueSet[0]);\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: Modularize this\n\t\t\t\t\tlet tmpDayJS = this.fable.Dates.dayJS.utc(tmpDateValue);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Try to cast the day to be a specific timezone if one is set for the app\n\t\t\t\t\t\tif (this.options.Timezone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.options.Timezone);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`Error casting Document date ${tmpSQLDateTime} to the Document timezone using tz in this.AppData.DocumentData.Timezone: [${this.AppData.DocumentData.Timezone}] .. casting to the browser guess which is [${this.fable.Dates.dayJS.tz.guess()}].`);\n\t\t\t\t\t\t// Day.js will try to guess the user's timezone for us\n\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpDayJS.format(tmpDateValueSet[1]);\n\t\t\t\t});\n\t\t\t// {NE~Some.Address|If the left value is truthy, render this value.~}\n\t\t\tlet fNotEmptyRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Should switch this to indexOf so pipes can be in the content.\n\t\t\t\t\tlet tmpHashParts = tmpHash.split('|');\n\n\t\t\t\t\t// For now just check truthiness\n\t\t\t\t\tif (this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHashParts[0]))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpHashParts[1];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~NotEmpty:', '~}', fNotEmptyRender);\n\t\t\tthis.MetaTemplate.addPattern('{~NE:', '~}', fNotEmptyRender);\n\n\t\t\tlet fRandomNumberString = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumberString]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpStringLength = 4;\n\t\t\t\t\tlet tmpMaxNumber = 9999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpStringLength = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomNumericString(tmpStringLength, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumberString:', '~}',fRandomNumberString);\n\t\t\tthis.MetaTemplate.addPattern('{~RNS:', '~}',fRandomNumberString);\n\n\t\t\tlet fRandomNumber = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumber]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpMinimumNumber = 0;\n\t\t\t\t\tlet tmpMaxNumber = 9999999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMinimumNumber = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomIntegerBetween(tmpMinimumNumber, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumber:', '~}',fRandomNumber);\n\t\t\tthis.MetaTemplate.addPattern('{~RN:', '~}',fRandomNumber);\n\n\t\t\tlet fPascalCaseIdentifier = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn this.DataFormat.cleanNonAlphaCharacters(this.DataFormat.capitalizeEachWord(tmpValue));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~PascalCaseIdentifier:', '~}',fPascalCaseIdentifier);\n\n\t\t\tlet fLogValue = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tlet tmpValueType = typeof(tmpValue);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValueType == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is ${tmpValueType}.`);\n\t\t\t\t\t}\n\t\t\t\t\telse if (tmpValueType == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is an obect.`, tmpValue);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is a ${tmpValueType} = [${tmpValue}]`);\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogValue:', '~}',fLogValue);\n\t\t\tthis.MetaTemplate.addPattern('{~LV:', '~}',fLogValue);\n\n\n\t\t\tlet fLogStatement = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tthis.log.trace(`PICT Template Log Message: ${tmpHash}`);\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogStatement:', '~}',fLogStatement);\n\t\t\tthis.MetaTemplate.addPattern('{~LS:', '~}',fLogStatement);\n\n\t\t\tlet fBreakpoint = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpError = new Error(`PICT Template Breakpoint: ${tmpHash}`);\n\t\t\t\t\tthis.log.trace(`PICT Template Breakpoint: ${tmpHash}`, tmpError.stack);\n\t\t\t\t\tdebugger;\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~Breakpoint', '~}',fBreakpoint);\n\n\t\t\tthis._DefaultPictTemplatesInitialized = true;\n\t\t}\n\t}\n\n\tparseTemplate (pTemplateString, pData, fCallback)\n\t{\n\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\treturn this.MetaTemplate.parseString(pTemplateString, tmpData, fCallback);\n\t}\n\n\tparseTemplateByHash (pTemplateHash, pData, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\ttmpTemplateString = '';\n\t\t}\n\t\treturn this.parseTemplate(tmpTemplateString, pData, fCallback);\n\t}\n\n\tparseTemplateSet (pTemplateString, pDataSet, fCallback)\n\t{\n\t\t// TODO: This will need streaming -- for now janky old string append does the trick\n\t\tlet tmpValue = '';\n\t\tif (typeof(fCallback) == 'function')\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tthis.Utility.eachLimit(pDataSet, 1,\n\t\t\t\t\t(pRecord, fRecordTemplateCallback)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplate(pTemplateString, pRecord,\n\t\t\t\t\t\t\t(pError, pTemplateResult)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValue += pTemplateResult;\n\t\t\t\t\t\t\t\treturn fRecordTemplateCallback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t(pError)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fCallback(pError, tmpValue);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn fCallback(Error('Pict: Template Set: pDataSet is not an array or object.'), '');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tif (Array.isArray(pDataSet))\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < pDataSet.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpKeys = Object.keys(pDataSet);\n\t\t\t\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[tmpKeys[i]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpValue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\tparseTemplateSetByHash (pTemplateHash, pDataSet, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\ttmpTemplateString = '';\n\t\t}\n\t\treturn this.parseTemplateSet(tmpTemplateString, pDataSet, fCallback);\n\t}\n};\n\nmodule.exports = Pict;\n\nmodule.exports.PictApplicationClass = require('pict-application');\nmodule.exports.PictViewClass = require('pict-view');\n\nmodule.exports.EnvironmentLog = require('./environments/Pict-Environment-Log.js');\nmodule.exports.EnvironmentObject = require('./environments/Pict-Environment-Object.js');\n\n// This is to help understand the type of enivironement we're executing in\nmodule.exports.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n},{\"./Pict-CSS.js\":138,\"./Pict-Content-Assignment.js\":139,\"./Pict-DataProvider.js\":140,\"./Pict-Meadow-EntityProvider.js\":141,\"./Pict-Template-Provider.js\":142,\"./environments/Pict-Environment-Log.js\":144,\"./environments/Pict-Environment-Object.js\":145,\"fable\":50,\"pict-application\":93,\"pict-view\":94}],144:[function(require,module,exports){\n/**\n* Pict browser shim loader\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\n\nclass PictEnvironmentLog\n{\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\n\t\tthis.pict.ContentAssignment.customReadAttributeFunction = this.customReadAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetAttributeFunction = this.customSetAttributeFunction.bind(this);\n\t}\n\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\tcustomGetElementFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\tcustomReadFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\tcustomAppendFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\tcustomPrependFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomAssignFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Assign.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomReadAttributeFunction (pAddress, pAttribute)\n\t{\n\t\tthis.pict.log.info(`Mocking an READ ATTRIBUTE from Address -> [${pAddress}]`, {Attribute: pAttribute});\n\t\treturn '';\n\t}\n\n\tcustomSetAttributeFunction (pAddress, pAttribute, pContent)\n\t{\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an SET ATTRIBUTE to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Attribute: pAttribute, Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an SET ATTRIBUTE to Address -> [${pAddress}]`, {Attribute: pAttribute, Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n}\n\nmodule.exports = PictEnvironmentLog;\n},{}],145:[function(require,module,exports){\n/**\n* Pict browser shim loader with Object statefulness for the environement\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\n\nclass PictEnvironmentObject\n{\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.contentMap._ATTRIBUTE_MAP = {};\n\t\tthis.contentMap._CLASS_MAP = {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\t\tthis.eventLog.ReadAttribute = [];\n\t\tthis.eventLog.SetAttribute = [];\n\t\tthis.eventLog.RemoveAttribute = [];\n\t\tthis.eventLog.ReadClass = [];\n\t\tthis.eventLog.SetClass = [];\n\t\tthis.eventLog.RemoveClass = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadAttributeFunction = this.customReadAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetAttributeFunction = this.customSetAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customRemoveAttributeFunction = this.customRemoveAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadClassFunction = this.customReadClassFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetClassFunction = this.customSetClassFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customRemoveClassFunction = this.customRemoveClassFunction.bind(this);\n\t}\n\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\tcustomGetElementFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\t}\n\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\tcustomReadFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\t}\n\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\tcustomAppendFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = (typeof(this.contentMap[pAddress]) == 'undefined') ? pContent : this.contentMap[pAddress] + pContent;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\tcustomPrependFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = (typeof(this.contentMap[pAddress]) == 'undefined') ? pContent : pContent + this.contentMap[pAddress];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomAssignFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = pContent;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tinitializeAttributeMapLocation(pAddress, pAttribute)\n\t{\n\t\tif (!this.contentMap._ATTRIBUTE_MAP.hasOwnProperty(pAddress))\n\t\t{\n\t\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress] = {};\n\t\t}\n\t\tif (!this.contentMap._ATTRIBUTE_MAP[pAddress].hasOwnProperty(pAttribute))\n\t\t{\n\t\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute] = false;\n\t\t}\n\t}\n\n\tinitializeClassMapLocation(pAddress)\n\t{\n\t\tif (!this.contentMap._CLASS_MAP.hasOwnProperty(pAddress))\n\t\t{\n\t\t\tthis.contentMap._CLASS_MAP[pAddress] = [];\n\t\t}\n\t}\n\n\tcustomReadAttributeFunction (pAddress, pAttribute)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tlet tmpContent = this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (tmpContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE READ for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: tmpContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE READ for Address -> [${pAddress}]::[${pAttribute}]`, {Content: tmpContent});\n\t\t}\n\t\treturn tmpContent;\n\t}\n\n\tcustomSetAttributeFunction (pAddress, pAttribute, pValue)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute] = pValue;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (pValue.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE SET for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pValue.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE SET for Address -> [${pAddress}]::[${pAttribute}]`, {Content: pValue});\n\t\t}\n\t\treturn pValue;\n\t}\n\n\tcustomRemoveAttributeFunction (pAddress, pAttribute)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tlet tmpContent = this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (tmpContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE REMOVE for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: tmpContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE REMOVE for Address -> [${pAddress}]::[${pAttribute}]`, {Content: tmpContent});\n\t\t}\n\n\t\tdelete this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\treturn true;\n\t}\n\n\tcustomReadClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tconst tmpContent = this.contentMap._CLASS_MAP[pAddress].indexOf(pClass) > -1;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS READ for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent});\n\n\t\treturn tmpContent;\n\t}\n\n\tcustomSetClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tlet tmpContent = this.contentMap._CLASS_MAP[pAddress];\n\n\t\tif (!this.contentMap._CLASS_MAP[pAddress].indexOf(pClass) > -1)\n\t\t{\n\t\t\tthis.contentMap._CLASS_MAP[pAddress].push(pClass);\n\t\t}\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS SET for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent.join(' ')});\n\n\t\treturn tmpContent;\n\t}\n\n\tcustomRemoveClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tlet tmpContent = this.contentMap._CLASS_MAP[pAddress];\n\n\t\tthis.contentMap._CLASS_MAP[pAddress].splice(pClass);\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS REMOVE for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent.join(' ')});\n\n\t\treturn tmpContent;\n\t}\n}\n\nmodule.exports = PictEnvironmentObject;\n},{}]},{},[143])(143)\n});\n\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\nvar eachOfLimit = require('async.util.eachoflimit');\nvar withoutIndex = require('async.util.withoutindex');\n\nmodule.exports = function eachLimit(arr, limit, iterator, cb) {\n    return eachOfLimit(limit)(arr, withoutIndex(iterator), cb);\n};\n","'use strict';\n\nmodule.exports = function(tasks) {\n    function makeCallback(index) {\n        function fn() {\n            if (tasks.length) {\n                tasks[index].apply(null, arguments);\n            }\n            return fn.next();\n        }\n        fn.next = function() {\n            return (index < tasks.length - 1) ? makeCallback(index + 1) : null;\n        };\n        return fn;\n    }\n    return makeCallback(0);\n};\n","var once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar onlyOnce = require('async.util.onlyonce');\nvar keyIterator = require('async.util.keyiterator');\n\nmodule.exports = function eachOfLimit(limit) {\n    return function(obj, iterator, cb) {\n        cb = once(cb || noop);\n        obj = obj || [];\n        var nextKey = keyIterator(obj);\n        if (limit <= 0) {\n            return cb(null);\n        }\n        var done = false;\n        var running = 0;\n        var errored = false;\n\n        (function replenish() {\n            if (done && running <= 0) {\n                return cb(null);\n            }\n\n            while (running < limit && !errored) {\n                var key = nextKey();\n                if (key === null) {\n                    done = true;\n                    if (running <= 0) {\n                        cb(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iterator(obj[key], key, onlyOnce(function(err) {\n                    running -= 1;\n                    if (err) {\n                        cb(err);\n                        errored = true;\n                    } else {\n                        replenish();\n                    }\n                }));\n            }\n        })();\n    };\n};\n","'use strict';\nvar setImmediate = require('async.util.setimmediate');\nvar restParam = require('async.util.restparam');\n\nmodule.exports = function(fn) {\n    return restParam(function(args) {\n        var callback = args.pop();\n        args.push(function() {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate(function() {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        var sync = true;\n        fn.apply(this, args);\n        sync = false;\n    });\n};\n","'use strict';\n\nmodule.exports = Array.isArray || function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n","'use strict';\n\nvar isArray = require('async.util.isarray');\n\nmodule.exports = function isArrayLike(arr) {\n    return isArray(arr) || (\n        // has a positive integer length property\n        typeof arr.length === 'number' &&\n        arr.length >= 0 &&\n        arr.length % 1 === 0\n    );\n};\n","'use strict';\n\nvar _keys = require('async.util.keys');\nvar isArrayLike = require('async.util.isarraylike');\n\nmodule.exports = function keyIterator(coll) {\n    var i = -1;\n    var len;\n    var keys;\n    if (isArrayLike(coll)) {\n        len = coll.length;\n        return function next() {\n            i++;\n            return i < len ? i : null;\n        };\n    } else {\n        keys = _keys(coll);\n        len = keys.length;\n        return function next() {\n            i++;\n            return i < len ? keys[i] : null;\n        };\n    }\n};\n","'use strict';\n\nmodule.exports = Object.keys || function keys(obj) {\n    var _keys = [];\n    for (var k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            _keys.push(k);\n        }\n    }\n    return _keys;\n};\n","'use strict';\n\nmodule.exports = function noop () {};\n","'use strict';\n\nmodule.exports = function once(fn) {\n    return function() {\n        if (fn === null) return;\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n","'use strict';\n\nmodule.exports = function only_once(fn) {\n    return function() {\n        if (fn === null) throw new Error('Callback was already called.');\n        fn.apply(this, arguments);\n        fn = null;\n    };\n};\n","'use strict';\nmodule.exports = function restParam(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n        var length = Math.max(arguments.length - startIndex, 0);\n        var rest = new Array(length);\n        for (var index = 0; index < length; index++) {\n            rest[index] = arguments[index + startIndex];\n        }\n        switch (startIndex) {\n            case 0:\n                return func.call(this, rest);\n            case 1:\n                return func.call(this, arguments[0], rest);\n        }\n    };\n};\n","'use strict';\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\nvar fallback = function(fn) {\n    setTimeout(fn, 0);\n};\n\nmodule.exports = function setImmediate(fn) {\n    // not a direct alias for IE10 compatibility\n    return (_setImmediate || fallback)(fn);\n};\n","'use strict';\n\nmodule.exports = function withoutIndex(iterator) {\n    return function(value, index, callback) {\n        return iterator(value, callback);\n    };\n};\n","'use strict';\n\nvar once = require('async.util.once');\nvar noop = require('async.util.noop');\nvar isArray = require('async.util.isarray');\nvar restParam = require('async.util.restparam');\nvar ensureAsync = require('async.util.ensureasync');\nvar iterator = require('async.iterator');\n\nmodule.exports = function(tasks, cb) {\n    cb = once(cb || noop);\n    if (!isArray(tasks)) return cb(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return cb();\n\n    function wrapIterator(iterator) {\n        return restParam(function(err, args) {\n            if (err) {\n                cb.apply(null, [err].concat(args));\n            } else {\n                var next = iterator.next();\n                if (next) {\n                    args.push(wrapIterator(next));\n                } else {\n                    args.push(cb);\n                }\n                ensureAsync(iterator).apply(null, args);\n            }\n        });\n    }\n    wrapIterator(iterator(tasks))();\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*\r\n *  big.js v6.2.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2022 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,            // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n    /*\r\n     * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n     * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n     * primitive number without a loss of precision.\r\n     */\r\n    STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        if (typeof n !== 'string') {\r\n          if (Big.strict === true && typeof n !== 'bigint') {\r\n            throw TypeError(INVALID + 'value');\r\n          }\r\n\r\n          // Minus zero?\r\n          n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n        }\r\n\r\n        parse(x, n);\r\n      }\r\n\r\n      // Retain a reference to this Big constructor.\r\n      // Shadow Big.prototype.constructor which points to Object.\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.strict = STRICT;\r\n    Big.roundDown = 0;\r\n    Big.roundHalfUp = 1;\r\n    Big.roundHalfEven = 2;\r\n    Big.roundUp = 3;\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    if (!NUMERIC.test(n)) {\r\n      throw Error(INVALID + 'number');\r\n    }\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n   * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, sd, rm, more) {\r\n    var xc = x.c;\r\n\r\n    if (rm === UNDEFINED) rm = x.constructor.RM;\r\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    if (sd < 1) {\r\n      more =\r\n        rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n        rm === 1 && xc[0] >= 5 ||\r\n        rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n      );\r\n\r\n      xc.length = 1;\r\n\r\n      if (more) {\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        x.e = x.e - sd + 1;\r\n        xc[0] = 1;\r\n      } else {\r\n\r\n        // Zero.\r\n        xc[0] = x.e = 0;\r\n      }\r\n    } else if (sd < xc.length) {\r\n\r\n      // xc[sd] is the digit after the digit that may be rounded up.\r\n      more =\r\n        rm === 1 && xc[sd] >= 5 ||\r\n        rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n          (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n        rm === 3 && (more || !!xc[0]);\r\n\r\n      // Remove any digits after the required precision.\r\n      xc.length = sd;\r\n\r\n      // Round up?\r\n      if (more) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up.\r\n        for (; ++xc[--sd] > 9;) {\r\n          xc[sd] = 0;\r\n          if (sd === 0) {\r\n            ++x.e;\r\n            xc.unshift(1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (sd = xc.length; !xc[--sd];) xc.pop();\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   */\r\n  function stringify(x, doExponential, isNonzero) {\r\n    var e = x.e,\r\n      s = x.c.join(''),\r\n      n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (doExponential) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) {\r\n        for (e -= n; e--;) s += '0';\r\n      } else if (e < n) {\r\n        s = s.slice(0, e) + '.' + s.slice(e);\r\n      }\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && isNonzero ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n   */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) {\r\n      y.s = k;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n    q.s = k;\r\n    k = p < 0 ? 0 : p;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n      p--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (yc[0]) {\r\n        y.s = -b;\r\n      } else if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = 1;\r\n      }\r\n      return y;\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n  \r\n  \r\n  /*\r\n   * Return a new Big whose value is the value of this Big negated.\r\n   */\r\n  P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var e, k, t,\r\n      x = this,\r\n      Big = x.constructor;\r\n\r\n    y = new Big(y);\r\n\r\n    // Signs differ?\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (!yc[0]) {\r\n        if (xc[0]) {\r\n          y = new Big(x);\r\n        } else {\r\n          y.s = x.s;\r\n        }\r\n      }\r\n      return y;\r\n    }\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (e = xe - ye) {\r\n      if (e > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        e = -e;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; e--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    e = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (k) {\r\n      xc.unshift(k);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor('1'),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n      throw Error(INVALID + 'exponent');\r\n    }\r\n\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n   * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.prec = function (sd, rm) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    return round(new this.constructor(this), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n   * using rounding mode rm, or Big.RM if rm is not specified.\r\n   * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.round = function (dp, rm) {\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    return round(new this.constructor(this), dp + this.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big('0.5');\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) {\r\n      throw Error(NAME + 'No square root');\r\n    }\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s + '');\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) {\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = b;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), ++dp, rm);\r\n      for (; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, true, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n      // x.e may have changed if the value is rounded up.\r\n      for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, false, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toJSON = P.toString = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Big as a primitve number.\r\n   */\r\n  P.toNumber = function () {\r\n    var n = Number(stringify(this, true, true));\r\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n      throw Error(NAME + 'Imprecise conversion');\r\n    }\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * rounding mode rm, or Big.RM if rm is not specified.\r\n   * Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      n = x.c[0];\r\n\r\n    if (sd !== UNDEFINED) {\r\n      if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n        throw Error(INVALID + 'precision');\r\n      }\r\n      x = round(new Big(x), sd, rm);\r\n      for (; x.c.length < sd;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    if (Big.strict === true) {\r\n      throw Error(NAME + 'valueOf disallowed');\r\n    }\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","/**\n* Cache data structure with:\n*  - enumerable items\n*  - unique hash item access (if none is passed in, one is generated)\n*  - size (length) expiration\n*  - controllable expiration (e.g. keep in cache longer if older/less likely to change)\n*  - time-based expiration\n*  - custom expiration based on passed-in function\n*\n* Also:\n*  - built to work well with browserify\n*  - no dependencies at all\n*  - pet friendly\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nconst libLinkedList = require(`./LinkedList.js`);\n\nclass CashMoney extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'ObjectCache';\n\n\t\t// The map of node objects by hash because Reasons.\n\t\tthis._HashMap = {};\n\n\t\tthis._RecordMap = {};\n\n\t\tthis._List = new libLinkedList();\n\n\t\t// If the list gets over maxLength, we will automatically remove nodes on insertion.\n\t\tthis.maxLength = 0;\n\n\t\t// If cache entries get over this age, they are removed with prune\n\t\tthis.maxAge = 0;\n\t}\n\n\tget RecordMap()\n\t{\n\t\treturn this._RecordMap;\n\t}\n\n\t// Add (or update) a node in the cache\n\tput(pData, pHash)\n\t{\n\t\t// If the hash of the record exists\n\t\tif (this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\t// Just update the hashed records datum\n\t\t\tthis._HashMap[pHash].Datum = pData;\n\t\t\tthis._RecordMap[pHash] = pData;\n\t\t\treturn this._HashMap[pHash].Datum;\n\t\t}\n\n\t\tlet tmpNode = this._List.push(pData, pHash);\n\t\tthis._HashMap[tmpNode.Hash] = tmpNode;\n\t\tthis._RecordMap[pHash] = pData;\n\n\t\t// Automatically prune if over length, but only prune this nodes worth.\n\t\tif (this.maxLength > 0   &&   this._List.length > this.maxLength)\n\t\t{\n\t\t\t// Pop it off the head of the list\n\t\t\ttmpNode = this._List.pop();\n\t\t\t// Also remove it from the hashmap\n\t\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\t\tdelete this._HashMap[tmpNode.Hash];\n\t\t}\n\n\t\t// Now some expiration properties on the node metadata... namely the birthdate in ms of the node\n\t\ttmpNode.Metadata.Created = +new Date();\n\n\t\treturn tmpNode.Datum;\n\t}\n\n\t// Read a datum by hash from the cache\n\tread(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._HashMap[pHash].Datum;\n\t}\n\n\t// Reinvigorate a node based on hash, updating the timestamp and moving it to the head of the list (also removes custom metadata)\n\ttouch(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get the old node out of the list\n\t\tlet tmpNode = this._List.remove(this._HashMap[pHash]);\n\t\t// Remove it from the hash map\n\t\tdelete this._RecordMap[pHash];\n\t\tdelete this._HashMap[pHash];\n\n\t\t// Now put it back, fresh.\n\t\treturn this.put(tmpNode.Datum, tmpNode.Hash);\n\t}\n\n\t// Expire a cached record based on hash\n\texpire(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpNode = this._HashMap[pHash];\n\n\t\t// Remove it from the list of cached records\n\t\ttmpNode = this._List.remove(tmpNode);\n\t\t// Also remove it from the hashmap\n\t\tdelete this._RecordMap[tmpNode.Hash];\n\t\tdelete this._HashMap[tmpNode.Hash];\n\n\t\t// Return it in case the consumer wants to do anything with it\n\t\treturn tmpNode;\n\t}\n\n\t// Prune records from the cached set based on maxAge\n\tpruneBasedOnExpiration(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tif (this.maxAge < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now enumerate each record and remove any that are expired\n\t\tlet tmpNow = +new Date();\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\t// Expire the node if it is older than max age milliseconds\n\t\t\tif (tmpNow - this._HashMap[tmpKeys[i]].Metadata.Created >= this.maxAge)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on maxLength\n\tpruneBasedOnLength(fComplete, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\t// Pop records off until we have reached maxLength unless it's 0\n\t\tif (this.maxLength > 0)\n\t\t{\n\t\t\twhile (this._List.length > this.maxLength)\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this._List.pop());\n\t\t\t}\n\t\t}\n\n\t\treturn fComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune records from the cached set based on passed in pPruneFunction(pDatum, pHash, pNode) -- returning true expires it\n\tpruneCustom(fComplete, fPruneFunction, pRemovedRecords)\n\t{\n\t\tlet tmpRemovedRecords = (typeof(pRemovedRecords) === 'undefined') ? [] : pRemovedRecords;\n\n\t\tlet tmpKeys = Object.keys(this._HashMap);\n\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t{\n\t\t\tlet tmpNode = this._HashMap[tmpKeys[i]];\n\t\t\t// Expire the node if the passed in function returns true\n\t\t\tif (fPruneFunction(tmpNode.Datum, tmpNode.Hash, tmpNode))\n\t\t\t{\n\t\t\t\ttmpRemovedRecords.push(this.expire(tmpKeys[i]));\n\t\t\t}\n\t\t}\n\t\tfComplete(tmpRemovedRecords);\n\t}\n\n\t// Prune the list down to the asserted rules (max age then max length if still too long)\n\tprune(fComplete)\n\t{\n\t\tlet tmpRemovedRecords = [];\n\n\t\t// If there are no cached records, we are done.\n\t\tif (this._List.length < 1)\n\t\t{\n\t\t\treturn fComplete(tmpRemovedRecords);\n\t\t}\n\n\t\t// Now prune based on expiration time\n\t\tthis.pruneBasedOnExpiration((fExpirationPruneComplete)=>\n\t\t\t{\n\t\t\t\t// Now prune based on length, then return the removed records in the callback.\n\t\t\t\tthis.pruneBasedOnLength(fComplete, tmpRemovedRecords);\n\t\t\t}, tmpRemovedRecords);\n\t}\n\n\t// Get a low level node (including metadata statistics) by hash from the cache\n\tgetNode(pHash)\n\t{\n\t\tif (!this._HashMap.hasOwnProperty(pHash))\n\t\t\treturn false;\n\n\t\treturn this._HashMap[pHash];\n\t}\n}\n\nmodule.exports = CashMoney;","/**\n* Double Linked List Node\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module CashMoney\n*/\n\n/**\n* Linked List Node Prototype\n*\n* @class LinkedListNode\n* @constructor\n*/\n\nclass LinkedListNode\n{\n\tconstructor()\n\t{\n\t\tthis.Hash = false;\n\t\tthis.Datum = false;\n\n\t\t// This is where expiration and other elements are stored;\n\t\tthis.Metadata = {};\n\n\t\tthis.LeftNode = false;\n\t\tthis.RightNode = false;\n\n\t\t// To allow safe specialty operations on nodes\n\t\tthis.__ISNODE = true;\n\t}\n}\n\nmodule.exports = LinkedListNode;","\"use strict\"\n/**\n* Simple double linked list to hold the cache entries in, in order.\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module FeeFiFo\n*/\n\nconst libLinkedListNode = require('./LinkedList-Node.js');\n\n/**\n* Quality Cache Goodness\n*\n* @class CashMoney\n* @constructor\n*/\n\nclass LinkedList\n{\n\tconstructor()\n\t{\n\t\t// Total number of nodes ever processed by this ADT\n\t\tthis.totalNodes = 0;\n\n\t\t// The length of the set of nodes currently in the list\n\t\tthis.length = 0;\n\n\t\tthis.head = false;\n\t\tthis.tail = false;\n\t}\n\n\t// Create a node object.\n\tinitializeNode(pDatum, pHash)\n\t{\n\t\t// Don't allow undefined to be added to the list because of reasons\n\t\tif (typeof(pDatum) === 'undefined')\n\t\t\treturn false;\n\n\t\tthis.totalNodes++;\n\n\t\t// Get (or create) a unique hash\n\t\tlet tmpHash = (typeof(pHash) != 'undefined') ? pHash : `NODE[${this.totalNodes}]`;\n\n\t\tlet tmpNode = new libLinkedListNode();\n\n\t\ttmpNode.Hash = tmpHash;\n\t\ttmpNode.Datum = pDatum;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Add a node to the end (right of tail) of the list.\n\tappend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.tail.RightNode = tmpNode;\n\t\ttmpNode.LeftNode = this.tail;\n\t\tthis.tail = tmpNode;\n\n\t\treturn tmpNode;\n\t}\n\n\t// Append to tail of list (FIFO)\n\tpush(pDatum, pHash)\n\t{\n\t\treturn this.append(pDatum, pHash);\n\t}\n\n\t// Add a node to the beginning (left of head) of the list.\n\tprepend(pDatum, pHash)\n\t{\n\t\t// TODO: Should we check if pDatum is actually a node and do the \"right\" thing?\n\t\tlet tmpNode = this.initializeNode(pDatum, pHash);\n\t\tif (!tmpNode)\n\t\t\treturn false;\n\n\t\t// The list just got longer!\n\t\tthis.length++;\n\n\t\t// If the list was empty, create a new list from it (it isn't possible to have a tail with no head)\n\t\tif (this.length == 1)\n\t\t{\n\t\t\tthis.head = tmpNode;\n\t\t\tthis.tail = tmpNode;\n\t\t\treturn tmpNode;\n\t\t}\n\n\t\tthis.head.LeftNode = tmpNode;\n\t\ttmpNode.RightNode = this.head;\n\t\tthis.head = tmpNode;\n\t\treturn tmpNode;\n\t}\n\n\t// Remove a node from the list\n\tremove(pNode)\n\t{\n\t\tif (typeof(pNode) === 'undefined')\n\t\t\treturn false;\n\n\t\tif (!pNode.__ISNODE)\n\t\t\treturn false;\n\n\t\tthis.length--;\n\n\t\t// Last element in list.  Empty it out.\n\t\tif (this.length < 1)\n\t\t{\n\t\t\tthis.head = false;\n\t\t\tthis.tail = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's somewhere in the middle, surgically remove it.\n\t\tif (pNode.LeftNode && pNode.RightNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = pNode.RightNode;\n\t\t\tpNode.RightNode.LeftNode = pNode.LeftNode;\n\n\t\t\tpNode.RightNode = false;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It's the tail\n\t\tif (pNode.LeftNode)\n\t\t{\n\t\t\tpNode.LeftNode.RightNode = false;\n\t\t\tthis.tail = pNode.LeftNode;\n\t\t\tpNode.LeftNode = false;\n\t\t\treturn pNode;\n\t\t}\n\n\t\t// It must be the head\n\t\tpNode.RightNode.LeftNode = false;\n\t\tthis.head = pNode.RightNode;\n\t\tpNode.RightNode = false;\n\t\treturn pNode;\n\t}\n\n\t// Remove the head of the list (FIFO)\n\tpop()\n\t{\n\t\treturn this.remove(this.head);\n\t}\n\n\t// Enumerate over each node IN ORDER, running the function fAction(pDatum, pHash, fCallback) then calling the function fComplete callback when done\n\teach(fAction, fComplete)\n\t{\n\t\tif (this.length < 1)\n\t\t\treturn fComplete();\n\n\t\tlet tmpNode = false;\n\n\t\tlet fIterator = (pError)=>\n\t\t{\n\t\t\t// If the user passed in a callback with an error, call their callback with the error\n\t\t\tif (pError)\n\t\t\t\treturn fComplete(pError);\n\n\t\t\t// If there is no node, this must be the initial run.\n\t\t\tif (!tmpNode)\n\t\t\t\ttmpNode = this.head;\n\t\t\t// Check if we are at the tail of the list\n\t\t\telse if (!tmpNode.RightNode)\n\t\t\t\treturn fComplete();\n\t\t\t// Proceed to the next node\n\t\t\telse\n\t\t\t\ttmpNode = tmpNode.RightNode;\n\n\t\t\t// Call the actual action\n\t\t\t// I hate this pattern because long tails eventually cause stack overflows.\n\t\t\tfAction(tmpNode.Datum, tmpNode.Hash, fIterator);\n\t\t};\n\n\t\t// Now kick off the iterator\n\t\treturn fIterator();\n\t}\n\n\t// Seek a specific node, 0 is the index of the first node.\n\tseek(pNodeIndex)\n\t{\n\t\tif (!pNodeIndex)\n\t\t\treturn false;\n\t\tif (this.length < 1)\n\t\t\treturn false;\n\t\tif (pNodeIndex >= this.length)\n\t\t\treturn false;\n\n\t\tlet tmpNode = this.head;\n\t\tfor (let i = 0; i < pNodeIndex; i++)\n\t\t{\n\t\t\ttmpNode = tmpNode.RightNode;\n\t\t}\n\n\t\treturn tmpNode;\n\t}\n}\n\nmodule.exports = LinkedList;","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\nvar setFunctionLength = require('set-function-length');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tif (typeof originalFunction !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\tvar func = $reflectApply(bind, $call, arguments);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + $max(0, originalFunction.length - (arguments.length - 1)),\n\t\ttrue\n\t);\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.partitioned) {\n    str += '; Partitioned'\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} val\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_advancedFormat=t()}(this,(function(){\"use strict\";return function(e,t){var r=t.prototype,n=r.format;r.format=function(e){var t=this,r=this.$locale();if(!this.isValid())return n.bind(this)(e);var s=this.$utils(),a=(e||\"YYYY-MM-DDTHH:mm:ssZ\").replace(/\\[([^\\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g,(function(e){switch(e){case\"Q\":return Math.ceil((t.$M+1)/3);case\"Do\":return r.ordinal(t.$D);case\"gggg\":return t.weekYear();case\"GGGG\":return t.isoWeekYear();case\"wo\":return r.ordinal(t.week(),\"W\");case\"w\":case\"ww\":return s.s(t.week(),\"w\"===e?1:2,\"0\");case\"W\":case\"WW\":return s.s(t.isoWeek(),\"W\"===e?1:2,\"0\");case\"k\":case\"kk\":return s.s(String(0===t.$H?24:t.$H),\"k\"===e?1:2,\"0\");case\"X\":return Math.floor(t.$d.getTime()/1e3);case\"x\":return t.$d.getTime();case\"z\":return\"[\"+t.offsetName()+\"]\";case\"zzz\":return\"[\"+t.offsetName(\"long\")+\"]\";default:return e}}));return n.bind(this)(a)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isoWeek=t()}(this,(function(){\"use strict\";var e=\"day\";return function(t,i,s){var a=function(t){return t.add(4-t.isoWeekday(),e)},d=i.prototype;d.isoWeekYear=function(){return a(this).year()},d.isoWeek=function(t){if(!this.$utils().u(t))return this.add(7*(t-this.isoWeek()),e);var i,d,n,o,r=a(this),u=(i=this.isoWeekYear(),d=this.$u,n=(d?s.utc:s)().year(i).startOf(\"year\"),o=4-n.isoWeekday(),n.isoWeekday()>4&&(o+=7),n.add(o,e));return r.diff(u,\"week\")+1},d.isoWeekday=function(e){return this.$utils().u(e)?this.day()||7:this.day(this.day()%7?e:e-7)};var n=d.startOf;d.startOf=function(e,t){var i=this.$utils(),s=!!i.u(t)||t;return\"isoweek\"===i.p(e)?s?this.date(this.date()-(this.isoWeekday()-1)).startOf(\"day\"):this.date(this.date()-1-(this.isoWeekday()-1)+7).endOf(\"day\"):n.bind(this)(e,t)}}}));","!function(r,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(r=\"undefined\"!=typeof globalThis?globalThis:r||self).dayjs_plugin_relativeTime=e()}(this,(function(){\"use strict\";return function(r,e,t){r=r||{};var n=e.prototype,o={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"};function i(r,e,t,o){return n.fromToBase(r,e,t,o)}t.en.relativeTime=o,n.fromToBase=function(e,n,i,d,u){for(var f,a,s,l=i.$locale().relativeTime||o,h=r.thresholds||[{l:\"s\",r:44,d:\"second\"},{l:\"m\",r:89},{l:\"mm\",r:44,d:\"minute\"},{l:\"h\",r:89},{l:\"hh\",r:21,d:\"hour\"},{l:\"d\",r:35},{l:\"dd\",r:25,d:\"day\"},{l:\"M\",r:45},{l:\"MM\",r:10,d:\"month\"},{l:\"y\",r:17},{l:\"yy\",d:\"year\"}],m=h.length,c=0;c<m;c+=1){var y=h[c];y.d&&(f=d?t(e).diff(i,y.d,!0):i.diff(e,y.d,!0));var p=(r.rounding||Math.round)(Math.abs(f));if(s=f>0,p<=y.r||!y.r){p<=1&&c>0&&(y=h[c-1]);var v=l[y.l];u&&(p=u(\"\"+p)),a=\"string\"==typeof v?v.replace(\"%d\",p):v(p,n,y.l,s);break}}if(n)return a;var M=s?l.future:l.past;return\"function\"==typeof M?M(a):M.replace(\"%s\",a)},n.to=function(r,e){return i(r,e,this,!0)},n.from=function(r,e){return i(r,e,this)};var d=function(r){return r.$u?t.utc():t()};n.toNow=function(r){return this.to(d(this),r)},n.fromNow=function(r){return this.from(d(this),r)}}}));","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_timezone=e()}(this,(function(){\"use strict\";var t={year:0,month:1,day:2,hour:3,minute:4,second:5},e={};return function(n,i,o){var r,a=function(t,n,i){void 0===i&&(i={});var o=new Date(t),r=function(t,n){void 0===n&&(n={});var i=n.timeZoneName||\"short\",o=t+\"|\"+i,r=e[o];return r||(r=new Intl.DateTimeFormat(\"en-US\",{hour12:!1,timeZone:t,year:\"numeric\",month:\"2-digit\",day:\"2-digit\",hour:\"2-digit\",minute:\"2-digit\",second:\"2-digit\",timeZoneName:i}),e[o]=r),r}(n,i);return r.formatToParts(o)},u=function(e,n){for(var i=a(e,n),r=[],u=0;u<i.length;u+=1){var f=i[u],s=f.type,m=f.value,c=t[s];c>=0&&(r[c]=parseInt(m,10))}var d=r[3],l=24===d?0:d,h=r[0]+\"-\"+r[1]+\"-\"+r[2]+\" \"+l+\":\"+r[4]+\":\"+r[5]+\":000\",v=+e;return(o.utc(h).valueOf()-(v-=v%1e3))/6e4},f=i.prototype;f.tz=function(t,e){void 0===t&&(t=r);var n=this.utcOffset(),i=this.toDate(),a=i.toLocaleString(\"en-US\",{timeZone:t}),u=Math.round((i-new Date(a))/1e3/60),f=o(a,{locale:this.$L}).$set(\"millisecond\",this.$ms).utcOffset(15*-Math.round(i.getTimezoneOffset()/15)-u,!0);if(e){var s=f.utcOffset();f=f.add(n-s,\"minute\")}return f.$x.$timezone=t,f},f.offsetName=function(t){var e=this.$x.$timezone||o.tz.guess(),n=a(this.valueOf(),e,{timeZoneName:t}).find((function(t){return\"timezonename\"===t.type.toLowerCase()}));return n&&n.value};var s=f.startOf;f.startOf=function(t,e){if(!this.$x||!this.$x.$timezone)return s.call(this,t,e);var n=o(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\"),{locale:this.$L});return s.call(n,t,e).tz(this.$x.$timezone,!0)},o.tz=function(t,e,n){var i=n&&e,a=n||e||r,f=u(+o(),a);if(\"string\"!=typeof t)return o(t).tz(a);var s=function(t,e,n){var i=t-60*e*1e3,o=u(i,n);if(e===o)return[i,e];var r=u(i-=60*(o-e)*1e3,n);return o===r?[i,o]:[t-60*Math.min(o,r)*1e3,Math.max(o,r)]}(o.utc(t,i).valueOf(),f,a),m=s[0],c=s[1],d=o(m).utcOffset(c);return d.$x.$timezone=a,d},o.tz.guess=function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},o.tz.setDefault=function(t){r=t}}}));","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_utc=i()}(this,(function(){\"use strict\";var t=\"minute\",i=/[+-]\\d\\d(?::?\\d\\d)?/g,e=/([+-]|\\d\\d)/g;return function(s,f,n){var u=f.prototype;n.utc=function(t){var i={date:t,utc:!0,args:arguments};return new f(i)},u.utc=function(i){var e=n(this.toDate(),{locale:this.$L,utc:!0});return i?e.add(this.utcOffset(),t):e},u.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var o=u.parse;u.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),o.call(this,t)};var r=u.init;u.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else r.call(this)};var a=u.utcOffset;u.utcOffset=function(s,f){var n=this.$utils().u;if(n(s))return this.$u?0:n(this.$offset)?a.call(this):this.$offset;if(\"string\"==typeof s&&(s=function(t){void 0===t&&(t=\"\");var s=t.match(i);if(!s)return null;var f=(\"\"+s[0]).match(e)||[\"-\",0,0],n=f[0],u=60*+f[1]+ +f[2];return 0===u?0:\"+\"===n?u:-u}(s),null===s))return this;var u=Math.abs(s)<=16?60*s:s,o=this;if(f)return o.$offset=u,o.$u=0===s,o;if(0!==s){var r=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(o=this.local().add(u+r,t)).$offset=u,o.$x.$localOffset=r}else o=this.utc();return o};var h=u.format;u.format=function(t){var i=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return h.call(this,i)},u.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*t},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var l=u.toDate;u.toDate=function(t){return\"s\"===t&&this.$offset?n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate():l.call(this)};var c=u.diff;u.diff=function(t,i,e){if(t&&this.$u===t.$u)return c.call(this,t,i,e);var s=this.local(),f=n(t).local();return c.call(s,f,i,e)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekOfYear=t()}(this,(function(){\"use strict\";var e=\"week\",t=\"year\";return function(i,n,r){var f=n.prototype;f.week=function(i){if(void 0===i&&(i=null),null!==i)return this.add(7*(i-this.week()),\"day\");var n=this.$locale().yearStart||1;if(11===this.month()&&this.date()>25){var f=r(this).startOf(t).add(1,t).date(n),s=r(this).endOf(e);if(f.isBefore(s))return 1}var a=r(this).startOf(t).date(n).startOf(e).subtract(1,\"millisecond\"),o=this.diff(a,e,!0);return o<0?r(this).startOf(\"week\").week():Math.ceil(o)},f.weeks=function(e){return void 0===e&&(e=null),this.week(e)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekday=t()}(this,(function(){\"use strict\";return function(e,t){t.prototype.weekday=function(e){var t=this.$locale().weekStart||0,i=this.$W,n=(i<t?i+7:i)-t;return this.$utils().u(e)?n:this.subtract(n,\"day\").add(e,\"day\")}}}));","'use strict';\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = hasPropertyDescriptors && GetIntrinsic('%Object.defineProperty%', true);\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar gopd = require('gopd');\n\n/** @type {(obj: Record<PropertyKey, unknown>, property: PropertyKey, value: unknown, nonEnumerable?: boolean | null, nonWritable?: boolean | null, nonConfigurable?: boolean | null, loose?: boolean) => void} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/**\n* Base Logger Class\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass BaseLogger extends libFableServiceProviderBase\n{\n\tconstructor(pLogStreamSettings, pLogStreamHash)\n\t{\n\t\tsuper(pLogStreamSettings, pLogStreamHash);\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = (typeof(pLogStreamSettings) == 'object') ? pLogStreamSettings : {};\n\n\t\tthis.serviceType = 'Logging-Provider';\n\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\t// We added this as the mechanism for tracking loggers to allow multiple simultaneous streams\n\t\t// to the same provider.\n\t\tthis.loggerUUID = this.generateInsecureUUID();\n\n\t\t// Eventually we can use this array to ompute which levels the provider allows.\n\t\t// For now it's just used to precompute some string concatenations.\n\t\tthis.levels = (\n\t\t\t[\n\t\t\t\t\"trace\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"info\",\n\t\t\t\t\"warn\",\n\t\t\t\t\"error\",\n\t\t\t\t\"fatal\"\n\t\t\t]);\n\t}\n\n\t// This is meant to generate programmatically insecure UUIDs to identify loggers\n\tgenerateInsecureUUID()\n\t{\n\t\tlet tmpDate = new Date().getTime();\n\t\tlet tmpUUID = 'LOGSTREAM-xxxxxx-yxxxxx'.replace(/[xy]/g,\n\t\t\t\t(pCharacter) =>\n\t\t\t\t{\n\t\t\t\t\t// Funny algorithm from w3resource that is twister-ish without the deep math and security\n\t\t\t\t\t// ..but good enough for unique log stream identifiers\n\t\t\t\t\tlet tmpRandomData = (tmpDate + Math.random()*16)%16 | 0;\n\t\t\t\t\ttmpDate = Math.floor(tmpDate/16);\n\n\t\t\t\t\treturn (pCharacter =='x' ? tmpRandomData : (tmpRandomData&0x3|0x8)).toString(16);\n\t\t\t\t});\n\t\treturn tmpUUID;\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n","/**\n* Default Logger Provider Function\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\nvar getDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\ttmpDefaultProviders.default = tmpDefaultProviders.console;\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();","module.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]","let libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings);\n\n\t\tthis._ShowTimeStamps = this._Settings.hasOwnProperty('showtimestamps') ? (this._Settings.showtimestamps == true) : true;\n\t\tthis._FormattedTimeStamps = this._Settings.hasOwnProperty('formattedtimestamps') ? (this._Settings.formattedtimestamps == true) : true;\n\n\t\tthis._ContextMessage = this._Settings.hasOwnProperty('Context') ? `(${this._Settings.Context})` :\n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? `(${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'Unnamed_Log_Context';\n\n\t\t// Allow the user to decide what gets output to the console\n\t\tthis._OutputLogLinesToConsole = this._Settings.hasOwnProperty('outputloglinestoconsole') ? this._Settings.outputloglinestoconsole : true;\n\t\tthis._OutputObjectsToConsole = this._Settings.hasOwnProperty('outputobjectstoconsole') ? this._Settings.outputobjectstoconsole : true;\n\n\t\t// Precompute the prefix for each level\n\t\tthis.prefixCache = {};\n\t\tfor (let i = 0; i <= this.levels.length; i++)\n\t\t{\n\t\t\tthis.prefixCache[this.levels[i]] = `[${this.levels[i]}] ${this._ContextMessage}: `;\n\n\t\t\tif (this._ShowTimeStamps)\n\t\t\t{\n\t\t\t\t// If there is a timestamp we need a to prepend space before the prefixcache string, since the timestamp comes first\n\t\t\t\tthis.prefixCache[this.levels[i]] = ' '+this.prefixCache[this.levels[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpTimeStamp = '';\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = (new Date()).toISOString();\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\ttmpTimeStamp = +new Date();\n\t\t}\n\n\t\tlet tmpLogLine = `${tmpTimeStamp}${this.prefixCache[pLevel]}${pLogText}`;\n\n\t\tif (this._OutputLogLinesToConsole)\n\t\t{\n\t\t\tconsole.log(tmpLogLine);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (this._OutputObjectsToConsole && (typeof(pObject) !== 'undefined'))\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 2));\n\t\t}\n\n\t\t// Provide an easy way to be overridden and be consistent\n\t\treturn tmpLogLine;\n\t}\n}\n\nmodule.exports = ConsoleLogger;","const libConsoleLog = require('./Fable-Log-Logger-Console.js');\nconst libFS = require('fs');\nconst libPath = require('path');\n\nclass SimpleFlatFileLogger extends libConsoleLog\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings, pFableLog);\n\n\t\t// If a path isn't provided for the logfile, it tries to use the ProductName or Context\n\t\tthis.logFileRawPath = (this._Settings.hasOwnProperty('path')) ? this._Settings.path : `./${this._ContextMessage}.log`;\n\t\tthis.logFilePath = libPath.normalize(this.logFileRawPath);\n\n\t\tthis.logFileStreamOptions = (this._Settings.hasOwnProperty('fileStreamoptions')) ? this._Settings.fileStreamOptions : (\n\t\t\t{\n\t\t\t\t\"flags\": \"a\",\n\t\t\t\t\"encoding\": \"utf8\"\n\t\t\t})\n\n\t\tthis.fileWriter = libFS.createWriteStream(this.logFilePath, this.logFileStreamOptions);\n\n\t\tthis.activelyWriting = false;\n\n\t\tthis.logLineStrings = [];\n\t\tthis.logObjectStrings = [];\n\n\t\tthis.defaultWriteCompleteCallback = ()=>{};\n\t\tthis.defaultBufferFlushCallback = ()=>{};\n\t}\n\n\tcloseWriter(fCloseComplete)\n\t{\n\t\tlet tmpCloseComplete = (typeof(fCloseComplete) == 'function') ? fCloseComplete : ()=>{};\n\t\tif (this.fileWriter)\n\t\t{\n\t\t\tthis.fileWriter.end('\\n');\n\t\t\treturn this.fileWriter.once('finish', tmpCloseComplete.bind(this));\n\t\t}\n\t}\n\n\tcompleteBufferFlushToLogFile(fFlushComplete)\n\t{\n\t\tthis.activelyWriting = false;\n\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\tif (this.logLineStrings.length > 0)\n\t\t{\n\t\t\tthis.flushBufferToLogFile(tmpFlushComplete);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpFlushComplete();\n\t\t}\n\t}\n\n\tflushBufferToLogFile(fFlushComplete)\n\t{\n\t\tif (!this.activelyWriting)\n\t\t{\n\t\t\t// Only want to be writing one thing at a time....\n\t\t\tthis.activelyWriting = true;\n\n\t\t\tlet tmpFlushComplete = (typeof(fFlushComplete) == 'function') ? fFlushComplete : this.defaultBufferFlushCallback;\n\n\t\t\t// Get the current buffer arrays.  These should always have matching number of elements.\n\t\t\tlet tmpLineStrings = this.logLineStrings;\n\t\t\tlet tmpObjectStrings = this.logObjectStrings;\n\n\t\t\t// Reset these to be filled while we process this queue...\n\t\t\tthis.logLineStrings = [];\n\t\t\tthis.logObjectStrings = [];\n\n\t\t\t// This is where we will put each line before writing it to the file...\n\t\t\tlet tmpConstructedBufferOutputString = '';\n\n\t\t\tfor (let i = 0; i < tmpLineStrings.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: Windows Newline?   ....... yo no se!\n\t\t\t\ttmpConstructedBufferOutputString += `${tmpLineStrings[i]}\\n`;\n\t\t\t\tif (tmpObjectStrings[i] !== false)\n\t\t\t\t{\n\t\t\t\t\ttmpConstructedBufferOutputString += `${tmpObjectStrings[i]}\\n`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.fileWriter.write(tmpConstructedBufferOutputString, 'utf8'))\n\t\t\t{\n\t\t\t\t// If the streamwriter returns false, we need to wait for it to drain.\n\t\t\t\tthis.fileWriter.once('drain', this.completeBufferFlushToLogFile.bind(this, tmpFlushComplete));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.completeBufferFlushToLogFile(tmpFlushComplete);\n\t\t\t}\n\t\t}\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tlet tmpLogLine = super.write(pLevel, pLogText, pObject);\n\n\t\t// Use a very simple array as the write buffer\n\t\tthis.logLineStrings.push(tmpLogLine);\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tthis.logObjectStrings.push(JSON.stringify(pObject, null, 4));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logObjectStrings.push(false);\n\t\t}\n\n\t\tthis.flushBufferToLogFile();\n\t}\n}\n\nmodule.exports = SimpleFlatFileLogger;","/**\n* Fable Logging Service\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nclass FableLog extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'Logging';\n\n\t\tlet tmpSettings = (typeof(pSettings) === 'object') ? pSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders-Node.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'default',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\nmodule.exports = FableLog;\nmodule.exports.LogProviderBase = require('./Fable-Log-BaseLogger.js');\nmodule.exports.LogProviderConsole = require('./Fable-Log-Logger-Console.js');\nmodule.exports.LogProviderFlatfile = require('./Fable-Log-Logger-SimpleFlatFile.js');\n","/**\n* Fable Service Base\n* @author <steven@velozo.com>\n*/\n\nclass FableServiceProviderBase\n{\n\t// The constructor can be used in two ways:\n\t// 1) With a fable, options object and service hash (the options object and service hash are optional)\n\t// 2) With an object or nothing as the first parameter, where it will be treated as the options object\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Check if a fable was passed in; connect it if so\n\t\tif ((typeof(pFable) === 'object') && pFable.isFable)\n\t\t{\n\t\t\tthis.connectFable(pFable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.fable = false;\n\t\t}\n\n\t\t// initialize options and UUID based on whether the fable was passed in or not.\n\t\tif (this.fable)\n\t\t{\n\t\t\tthis.UUID = pFable.getUUID();\n\t\t\tthis.options = (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t\t: {};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// With no fable, check to see if there was an object passed into either of the first two\n\t\t\t// Parameters, and if so, treat it as the options object\n\t\t\tthis.options = ((typeof(pFable) === 'object') && !pFable.isFable) ? pFable\n\t\t\t\t\t\t\t: (typeof(pOptions) === 'object') ? pOptions\n\t\t\t\t\t\t\t: {};\n\t\t\tthis.UUID = `CORE-SVC-${Math.floor((Math.random() * (99999 - 10000)) + 10000)}`\n\t\t}\n\n\t\t// It's expected that the deriving class will set this\n\t\tthis.serviceType = `Unknown-${this.UUID}`;\n\n\t\t// The service hash is used to identify the specific instantiation of the service in the services map\n\t\tthis.Hash = (typeof(pServiceHash) === 'string') ? pServiceHash \n\t\t\t\t\t: (!this.fable && (typeof(pOptions) === 'string')) ? pOptions\n\t\t\t\t\t: `${this.UUID}`;\n\t}\n\n\tconnectFable(pFable)\n\t{\n\t\tif ((typeof(pFable) !== 'object') || (!pFable.isFable))\n\t\t{\n\t\t\tlet tmpErrorMessage = `Fable Service Provider Base: Cannot connect to Fable, invalid Fable object passed in.  The pFable parameter was a [${typeof(pFable)}].}`;\n\t\t\tconsole.log(tmpErrorMessage);\n\t\t\treturn new Error(tmpErrorMessage);\n\t\t}\n\n\t\tif (!this.fable)\n\t\t{\n\t\t\tthis.fable = pFable;\n\t\t}\n\n\t\tif (!this.log)\n\t\t{\n\t\t\tthis.log = this.fable.Logging;\n\t\t}\n\t\tif (!this.services)\n\t\t{\n\t\t\tthis.services = this.fable.services;\n\t\t}\n\n\t\tif (!this.servicesMap)\n\t\t{\n\t\t\tthis.servicesMap = this.fable.servicesMap;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tstatic isFableService = true;\n}\n\nmodule.exports = FableServiceProviderBase;\n\n// This is left here in case we want to go back to having different code/base class for \"core\" services\nmodule.exports.CoreServiceProviderBase = FableServiceProviderBase;","module.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n","/**\n* Fable Settings Template Processor\n*\n* This class allows environment variables to come in via templated expressions, and defaults to be set.\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\nconst libPrecedent = require('precedent');\n\nclass FableSettingsTemplateProcessor\n{\n\tconstructor(pDependencies)\n\t{\n        // Use a no-dependencies templating engine to parse out environment variables\n\t\tthis.templateProcessor = new libPrecedent();\n\n        // TODO: Make the environment variable wrap expression demarcation characters configurable?\n\t\tthis.templateProcessor.addPattern('${', '}',\n\t\t\t(pTemplateValue)=>\n\t\t\t{\n\t\t\t\tlet tmpTemplateValue = pTemplateValue.trim();\n\n\t\t\t\tlet tmpSeparatorIndex = tmpTemplateValue.indexOf('|');\n\n\t\t\t\tconst tmpDefaultValue = tmpSeparatorIndex >= 0 ? tmpTemplateValue.substring(tmpSeparatorIndex+1) : '';\n\n\t\t\t\tlet tmpEnvironmentVariableName = (tmpSeparatorIndex > -1) ? tmpTemplateValue.substring(0, tmpSeparatorIndex) : tmpTemplateValue;\n\n\t\t\t\tif (process.env.hasOwnProperty(tmpEnvironmentVariableName))\n\t\t\t\t{\n\t\t\t\t\treturn process.env[tmpEnvironmentVariableName];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn tmpDefaultValue;\n\t\t\t\t}\n\t\t\t});\n    }\n\n    parseSetting(pString)\n    {\n        return this.templateProcessor.parseString(pString);\n    }\n}\n\nmodule.exports = FableSettingsTemplateProcessor;\n","/**\n* Fable Settings Add-on\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;\n\nconst libFableSettingsTemplateProcessor = require('./Fable-Settings-TemplateProcessor.js');\n\nclass FableSettings extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'SettingsManager';\n\n\t\t// Initialize the settings value template processor\n\t\tthis.settingsTemplateProcessor = new libFableSettingsTemplateProcessor();\n\n\t\t// set straight away so anything that uses it respects the initial setting\n\t\tthis._configureEnvTemplating(pSettings);\n\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')));\n\t}\n\n\t// Update the configuration for environment variable templating based on the current settings object\n\t_configureEnvTemplating(pSettings)\n\t{\n\t\t// default environment variable templating to on\n\t\tthis._PerformEnvTemplating = !pSettings || pSettings.NoEnvReplacement !== true;\n\t}\n\n\t// Resolve (recursive) any environment variables found in settings object.\n\t_resolveEnv(pSettings)\n\t{\n\t\tfor (const tmpKey in pSettings)\n\t\t{\n\t\t\tif (typeof(pSettings[tmpKey]) === 'object')\n\t\t\t{\n\t\t\t\tthis._resolveEnv(pSettings[tmpKey]);\n\t\t\t}\n\t\t\telse if (typeof(pSettings[tmpKey]) === 'string')\n\t\t\t{\n\t\t\t\tpSettings[tmpKey] = this.settingsTemplateProcessor.parseSetting(pSettings[tmpKey]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if a value is an object (but not an array).\n\t */\n\t_isObject(value)\n\t{\n\t\treturn typeof(value) === 'object' && !Array.isArray(value);\n\t}\n\n\t/**\n\t * Merge two plain objects. Keys that are objects in both will be merged property-wise.\n\t */\n\t_deepMergeObjects(toObject, fromObject)\n\t{\n\t\tif (!fromObject || !this._isObject(fromObject))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.keys(fromObject).forEach((key) =>\n\t\t{\n\t\t\tconst fromValue = fromObject[key];\n\t\t\tif (this._isObject(fromValue))\n\t\t\t{\n\t\t\t\tconst toValue = toObject[key];\n\t\t\t\tif (toValue && this._isObject(toValue))\n\t\t\t\t{\n\t\t\t\t\t// both are objects, so do a recursive merge\n\t\t\t\t\tthis._deepMergeObjects(toValue, fromValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoObject[key] = fromValue;\n\t\t});\n\t\treturn toObject;\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\t\ttmpSettingsTo = this._deepMergeObjects(tmpSettingsTo, tmpSettingsFromCopy);\n\n\t\tif (this._PerformEnvTemplating)\n\t\t{\n\t\t\tthis._resolveEnv(tmpSettingsTo);\n\t\t}\n\t\t// Update env tempating config, since we just updated the config object, and it may have changed\n\t\tthis._configureEnvTemplating(tmpSettingsTo);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\t// do not mutate the From object property values\n\t\tlet tmpSettingsFromCopy = JSON.parse(JSON.stringify(tmpSettingsFrom));\n\n\t\tthis.settings = this._deepMergeObjects(tmpSettingsFromCopy, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = FableSettings;\nmodule.exports.new = autoConstruct;","/**\n* Random Byte Generator - Browser version\n*\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn this.generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n","/**\n* Fable UUID Generator\n*/\n\nconst libFableServiceProviderBase = require('fable-serviceproviderbase').CoreServiceProviderBase;0\n\nconst libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID extends libFableServiceProviderBase\n{\n\tconstructor(pSettings, pServiceHash)\n\t{\n\t\tsuper(pSettings, pServiceHash);\n\n\t\tthis.serviceType = 'UUID';\n\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = FableUUID;\nmodule.exports.new = autoConstruct;\n","/**\n* Fable Application Services Support Library\n* @author <steven@velozo.com>\n*/\n// Pre-init services\nconst libFableSettings = require('fable-settings');\nconst libFableUUID = require('fable-uuid');\nconst libFableLog = require('fable-log');\n\nconst libFableServiceBase = require('fable-serviceproviderbase');\n\nclass Fable extends libFableServiceBase.CoreServiceProviderBase\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\t// Initialization Phase 0: Set up the lowest level state (fable is a utility service manager at heart)\n\t\tthis.serviceType = 'ServiceManager';\n\n\t\t// An array of the types of services available\n\t\tthis.serviceTypes = [];\n\t\t// A map of instantiated services\n\t\tthis.servicesMap = {};\n\t\t// A map of the default instantiated service by type\n\t\tthis.services = {};\n\n\t\t// A map of class constructors for services\n\t\tthis.serviceClasses = {};\n\n\t\t// If we need extra service initialization capabilities\n\t\tthis.extraServiceInitialization = false;\n\n\t\t// Set how noisy the system is about signaling complexity\n\t\tthis.LogNoisiness = 0;\n\n\t\t// Initialization Phase 1: Set up the core utility services\n\t\t// These are things like power, water, and sewage.  They are required for fable to run (e.g. logging, settings, etc)\n\n\t\t// Instantiate the default Settings Manager\n\t\tthis.SettingsManager = new libFableSettings(pSettings);\n\t\tthis.SettingsManager = this.SettingsManager;\n\t\t// Instantiate the UUID generator\n\t\tthis.UUID = new libFableUUID(this.SettingsManager.settings);\n\t\t// Instantiate the logging system\n\t\tthis.Logging = new libFableLog(this.SettingsManager.settings);\n\t\tthis.Logging.initialize();\n\n\t\t// Initialization Phase 1.5: Instantiate the service manager\n\t\t// This is the start actual bootstrapping point for fable.\n\t\t// For consistency fable is treated as a service.\n\t\tthis.ServiceManager = this;\n\t\t// TODO: Remove this when Orator and meadow-endpoints are shifted to this new pattern\n\t\tthis.serviceManager = this;\n\t\t// END TODO\n\t\tthis.connectFable(this);\n\t\t// --> Bootstrapping of fable into the Service Manager is complete\n\n\t\t// Initialization Phase 2: Map in the default services.\n\t\t// They will then be available in the Default service provider set as well.\n\t\tthis.connectPreinitServiceProviderInstance(this.UUID);\n\t\tthis.connectPreinitServiceProviderInstance(this.Logging);\n\t\tthis.connectPreinitServiceProviderInstance(this.SettingsManager);\n\n\t\t// Initialize and instantiate the default baked-in Data Arithmatic service\n\t\tthis.addAndInstantiateServiceType('EnvironmentData', require('./services/Fable-Service-EnvironmentData.js'));\n\t\tthis.addServiceType('Template', require('./services/Fable-Service-Template.js'));\n\t\tthis.addServiceType('MetaTemplate', require('./services/Fable-Service-MetaTemplate.js'));\n\t\tthis.addServiceType('Anticipate', require('./services/Fable-Service-Anticipate.js'));\n\t\tthis.addAndInstantiateServiceType('Dates', require('./services/Fable-Service-DateManipulation.js'));\n\t\tthis.addAndInstantiateServiceType('DataFormat', require('./services/Fable-Service-DataFormat.js'));\n\t\tthis.addAndInstantiateServiceType('DataGeneration', require('./services/Fable-Service-DataGeneration.js'));\n\t\tthis.addAndInstantiateServiceType('Utility', require('./services/Fable-Service-Utility.js'));\n\t\tthis.addServiceType('Operation', require('./services/Fable-Service-Operation.js'));\n\t\tthis.addServiceType('RestClient', require('./services/Fable-Service-RestClient.js'));\n\t\tthis.addServiceType('CSVParser', require('./services/Fable-Service-CSVParser.js'));\n\t\tthis.addServiceType('Manifest', require('manyfest'));\n\t\tthis.addServiceType('ObjectCache', require('cachetrax'));\n\t\tthis.addServiceType('FilePersistence', require('./services/Fable-Service-FilePersistence.js'));\n\t}\n\n\t/* State Accessors */\n\tget isFable()\n\t{\n\t\treturn true;\n\t}\n\n\tget settings()\n\t{\n\t\treturn this.SettingsManager.settings;\n\t}\n\n\tget settingsManager()\n\t{\n\t\treturn this.SettingsManager;\n\t}\n\n\t// For backwards compatibility\n\tgetUUID()\n\t{\n\t\treturn this.UUID.getUUID();\n\t}\n\n\tnewAnticipate()\n\t{\n\t\treturn this.instantiateServiceProviderWithoutRegistration('Anticipate');\n\t}\n\n\t/* Service Manager Methods */\n\taddServiceType(pServiceType, pServiceClass)\n\t{\n\t\tif (this.servicesMap.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\t// TODO: Check if any services are running?\n\t\t\tthis.log.warn(`Adding a service type [${pServiceType}] that already exists.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the container for instantiated services to go in\n\t\t\tthis.servicesMap[pServiceType] = {};\n\n\t\t\t// Add the type to the list of types\n\t\t\tthis.serviceTypes.push(pServiceType);\n\t\t}\n\n\t\t// Using the static member of the class is a much more reliable way to check if it is a service class than instanceof\n\t\tif ((typeof(pServiceClass) == 'function') && (pServiceClass.isFableService))\n\t\t{\n\t\t\t// Add the class to the list of classes\n\t\t\tthis.serviceClasses[pServiceType] = pServiceClass;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Add the base class to the list of classes\n\t\t\tthis.log.error(`Attempted to add service type [${pServiceType}] with an invalid class.  Using base service class, which will not crash but won't provide meaningful services.`);\n\t\t\tthis.serviceClasses[pServiceType] = libFableServiceBase;\n\t\t}\n\t}\n\n\t// This is for the services that are meant to run mostly single-instance so need a default at initialization\n\taddAndInstantiateServiceType(pServiceType, pServiceClass)\n\t{\n\t\tthis.addServiceType(pServiceType, pServiceClass);\n\t\treturn this.instantiateServiceProvider(pServiceType, {}, `${pServiceType}-Default`);\n\t}\n\n\t// Some services expect to be overloaded / customized class.\n\tinstantiateServiceProviderFromPrototype(pServiceType, pOptions, pCustomServiceHash, pServicePrototype)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new pServicePrototype(this, pOptions, pCustomServiceHash);\n\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\tinstantiateServiceProvider(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = this.instantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash);\n\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[pServiceType][tmpService.Hash] = tmpService;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(pServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(pServiceType, tmpService.Hash)\n\t\t}\n\n\t\treturn tmpService;\n\t}\n\n\t// Create a service provider but don't register it to live forever in fable.services\n\tinstantiateServiceProviderWithoutRegistration(pServiceType, pOptions, pCustomServiceHash)\n\t{\n\t\t// Instantiate the service\n\t\tlet tmpService = new this.serviceClasses[pServiceType](this, pOptions, pCustomServiceHash);\n\t\tif (this.extraServiceInitialization)\n\t\t{\n\t\t\ttmpService = this.extraServiceInitialization(tmpService);\n\t\t}\n\t\treturn tmpService;\n\t}\n\n\t// Connect an initialized service provider that came before Fable was initialized\n\tconnectPreinitServiceProviderInstance(pServiceInstance)\n\t{\n\t\tlet tmpServiceType = pServiceInstance.serviceType;\n\t\tlet tmpServiceHash = pServiceInstance.Hash;\n\n\t\t// The service should already be instantiated, so just connect it to fable\n\t\tpServiceInstance.connectFable(this);\n\n\t\t// Add the service type to the map if it isn't there yet\n\t\tif (!this.servicesMap.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\t// If the core service hasn't registered itself yet, create the service container for it.\n\t\t\t// This means you couldn't register another with this type unless it was later registered with a constructor class.\n\t\t\tthis.servicesMap[tmpServiceType] = {};\n\t\t}\n\t\t// Add the service to the service map\n\t\tthis.servicesMap[tmpServiceType][tmpServiceHash] = pServiceInstance;\n\n\t\t// If this is the first service of this type, make it the default\n\t\tif (!this.services.hasOwnProperty(tmpServiceType))\n\t\t{\n\t\t\tthis.setDefaultServiceInstantiation(tmpServiceType, tmpServiceHash, false);\n\t\t}\n\n\t\treturn pServiceInstance;\n\t}\n\n\tsetDefaultServiceInstantiation(pServiceType, pServiceHash, pOverwriteService)\n\t{\n\t\t// Overwrite services by default, unless told not to\n\t\tlet tmpOverwriteService = (typeof(pOverwriteService) === 'undefined') ? true : pOverwriteService;\n\t\t// Make sure the service exists\n\t\tif (this.servicesMap[pServiceType].hasOwnProperty(pServiceHash))\n\t\t{\n\t\t\tif (!this.hasOwnProperty(pServiceType) || tmpOverwriteService)\n\t\t\t{\n\t\t\t\tthis[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\t}\n\t\t\tif (!this.services.hasOwnProperty(pServiceType) || tmpOverwriteService)\n\t\t\t{\n\t\t\t\tthis.services[pServiceType] = this.servicesMap[pServiceType][pServiceHash];\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\t\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new Fable(pSettings);\n}\n\nmodule.exports = Fable;\nmodule.exports.new = autoConstruct;\n\nmodule.exports.LogProviderBase = libFableLog.LogProviderBase;\nmodule.exports.ServiceProviderBase = libFableServiceBase;\nmodule.exports.CoreServiceProviderBase = libFableServiceBase.CoreServiceProviderBase;\n\nmodule.exports.precedent = libFableSettings.precedent;\n","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceAnticipate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'AsyncAnticipate';\n\n\t\t// The queue of operations waiting to run.\n\t\tthis.operationQueue = [];\n\t\tthis.erroredOperations = [];\n\n\t\tthis.executingOperationCount = 0;\n\t\tthis.completedOperationCount = 0;\n\n\t\tthis.callDepth = 0;\n\n\t\tthis.maxOperations = 1;\n\n\t\tthis.lastError = undefined;\n\t\tthis.waitingFunctions = [];\n\t}\n\n\tcheckQueue()\n\t{\n\t\t// This checks to see if we need to start any operations.\n\t\tif (this.operationQueue.length > 0 && this.executingOperationCount < this.maxOperations)\n\t\t{\n\t\t\tlet tmpOperation = this.operationQueue.shift();\n\t\t\tthis.executingOperationCount += 1;\n\t\t\ttmpOperation(this.buildAnticipatorCallback());\n\t\t}\n\t\telse if (this.waitingFunctions.length > 0 && this.executingOperationCount < 1)\n\t\t{\n\t\t\t// If there are no operations left, and we have waiting functions, call them.\n\t\t\tfor (let i = 0; i < this.waitingFunctions.length; i++)\n\t\t\t{\n\t\t\t\t//this.log.trace('Calling waiting function.')\n\t\t\t\tthis.waitingFunctions[i](this.lastError);\n\t\t\t}\n\t\t\t// Reset our state\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.waitingFunctions = [];\n\t\t}\n\t}\n\n\t// Expects a function fAsynchronousFunction(fCallback)\n\tanticipate(fAsynchronousFunction)\n\t{\n\t\t//this.log.trace('Adding a function...')\n\t\tthis.operationQueue.push(fAsynchronousFunction);\n\t\tthis.checkQueue();\n\t}\n\n\tbuildAnticipatorCallback()\n\t{\n\t\t// This uses closure-scoped state to track the callback state\n\t\tlet tmpCallbackState = (\n\t\t\t{\n\t\t\t\tCalled: false,\n\t\t\t\tError: undefined,\n\t\t\t\tOperationSet: this\n\t\t\t});\n\t\treturn hoistedCallback.bind(this);\n\t\tfunction hoistedCallback(pError)\n\t\t{\n\t\t\tif (tmpCallbackState.Called)\n\t\t\t{\n\t\t\t\t// If they call the callback twice, throw an error\n\t\t\t\tthrow new Error(\"Anticipation async callback called twice...\");\n\t\t\t}\n\t\t\ttmpCallbackState.Called = true;\n\t\t\ttmpCallbackState.error = pError;\n\n\t\t\ttmpCallbackState.OperationSet.executingOperationCount -= 1;\n\t\t\ttmpCallbackState.OperationSet.completedOperationCount += 1;\n\n\t\t\ttmpCallbackState.OperationSet.callDepth++;\n\n\t\t\t// TODO: Figure out a better pattern for chaining templates so the call stack doesn't get abused.\n\t\t\tif (tmpCallbackState.OperationSet.callDepth > 400)\n\t\t\t{\n\t\t\t\ttmpCallbackState.OperationSet.callDepth = 0;\n\t\t\t\tsetTimeout(tmpCallbackState.OperationSet.checkQueue.bind(this), 0);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpCallbackState.OperationSet.checkQueue();\n\t\t\t}\n\t\t}\n\t}\n\n\twait(fCallback)\n\t{\n\t\tthis.waitingFunctions.push(fCallback);\n\t\tthis.checkQueue();\n\t}\n}\n\nmodule.exports = FableServiceAnticipate;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Parsing CSVs.  Why?  Because it's a thing that needs to be done.\n*\n* 1. And the other node CSV parsers had issues with the really messy files we had.\n* \n*\n* 2. None of the CSV parsers dealt with and multi-line quoted string columns\n*    which are apparently a-ok according to the official spec.\n* Plus a lot of them are asynchronous because apparently that's the best way to\n* do anything; unfortunately some files have a sequence issue with that.\n*\n* @class CSVParser\n*/\nclass CSVParser extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'CSVParser';\n\n        this.Header = [];\n        this.HeaderFieldNames = [];\n\n        this.Delimiter = ',';\n        this.QuoteCharacter = '\"';\n\n        this.CleanCharacters = ['\\r'];\n\n        this.HeaderLineIndex = 0;\n        this.HasHeader = true;\n        this.HasSetHeader = false;\n        this.EmitHeader = false;\n\n        this.EmitJSON = true;\n\n        this.EscapedQuoteString = '&quot;';\n\n        // Current Line Parsing State\n        this.CurrentLine = '';\n        this.CurrentRecord = [];\n\n        this.InQuote = false;\n        this.InEscapedQuote = false;\n\n        this.LinesParsed = 0;\n        this.RowsEmitted = 0;\n    }\n\n    marshalRowToJSON(pRowArray)\n    {\n        if (!Array.isArray(pRowArray))\n        {\n            return false;\n        }\n\n        for (let i = this.HeaderFieldNames.length; i < pRowArray.length; i++)\n        {\n            this.HeaderFieldNames[i] = `${i}`;\n        }\n\n        let tmpObject = {};\n\n        for (let i = 0; i < pRowArray.length; i++)\n        {\n            tmpObject[this.HeaderFieldNames[i]] = pRowArray[i];\n        }\n\n        return tmpObject;\n    }\n\n    // Set the header data, for use in marshalling to JSON.\n    setHeader (pHeaderArray)\n    {\n        this.Header = pHeaderArray;\n\n        for (let i = 0; i < this.Header.length; i++)\n        {\n            if (typeof(this.Header[i]) == 'undefined')\n            {\n                this.HeaderFieldNames[i] = `${i}`;\n            }\n            else\n            {\n                this.HeaderFieldNames[i] = this.Header[i].toString().trim();\n            }\n        }\n    }\n\n    resetRowState()\n    {\n        this.CurrentRecord = [];\n    }\n\n    pushLine()\n    {\n        for (let i = 0; i < this.CleanCharacters.length; i++)\n        {\n            this.CurrentLine = this.CurrentLine.replace(this.CleanCharacters[i],'');\n        }\n        this.CurrentRecord.push(this.CurrentLine);\n        this.CurrentLine = '';\n    }\n\n    emitRow(pFormatAsJSON)\n    {\n        let tmpFormatAsJSON = (typeof(pFormatAsJSON) == 'undefined') ? this.EmitJSON : pFormatAsJSON;\n\n        this.RowsEmitted++;\n        let tmpCompletedRecord = this.CurrentRecord;\n        this.CurrentRecord = [];\n\n        if (tmpFormatAsJSON)\n        {\n            return this.marshalRowToJSON(tmpCompletedRecord);\n        }\n        else\n        {\n            return tmpCompletedRecord;\n        }\n    }\n\n    parseCSVLine (pLineString)\n    {\n        this.LinesParsed++;\n\n        for (let i = 0; i < pLineString.length; i++)\n        {\n            if ((!this.InQuote) && (pLineString[i] == this.Delimiter))\n            {\n                this.pushLine();\n            }\n            else if (pLineString[i] == this.QuoteCharacter)\n            {\n                // If we are in the second part of an escaped quote, ignore it.\n                if (this.InEscapedQuote)\n                {\n                    this.InEscapedQuote = false;\n                }\n                // If we aren't in a quote, enter quote\n                else if (!this.InQuote)\n                {\n                    this.InQuote = true;\n                }\n                // We are in a quote, so peek forward to see if this is an \"escaped\" quote pair\n                else if ((i < pLineString.length) && (pLineString[i+1] == this.QuoteCharacter))\n                {\n                    this.CurrentLine += this.EscapedQuoteString;\n                    this.InEscapedQuote = true;\n                }\n                // We are in a quote, this isn't an \"escaped\" quote pair, so go out of quote mode\n                else\n                {\n                    this.InQuote = false;\n                }\n            }\n            else\n            {\n                this.CurrentLine += pLineString[i];\n            }\n        }\n\n        // See if we are in a multiline quoted entry -- if not, emit the row.\n        if (!this.InQuote)\n        {\n            // Push the last remaining column from the buffer to the current line.\n            this.pushLine();\n\n            // Check to see if there is a header -- and if so, if this is the header row\n            if (this.HasHeader && !this.HasSetHeader && (this.RowsEmitted == this.HeaderLineIndex))\n            {\n                this.HasSetHeader = true;\n                // Override the format as json bit\n                this.setHeader(this.emitRow(false));\n\n                // No matter what, formatting this as JSON is silly and we don't want to go there anyway.\n                if (this.EmitHeader)\n                {\n                    return this.Header;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n            else\n            {\n                return this.emitRow();\n            }\n        }\n        else\n        {\n            return false;\n        }\n    };\n}\n\nmodule.exports = CSVParser;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Data Formatting and Translation Functions\n*\n* @class DataFormat\n*/\nclass DataFormat extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'DataArithmatic';\n\n\t\t// Regular Expressions (so they don't have to be recompiled every time)\n\t\t// These could be defined as static, but I'm not sure if that will work with browserify ... and specifically the QT browser.\n\t\tthis._Regex_formatterInsertCommas = /.{1,3}/g;\n\t\t// Match Function:\n\t\t// function(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t\t// Thoughts about below:   /^([+-]?)(0*)(\\d+)(\\.(\\d+))?$/;\n\t\tthis._Regex_formatterAddCommasToNumber = /^([-+]?)(0?)(\\d+)(.?)(\\d+)$/g;\n\t\tthis._Regex_formatterDollarsRemoveCommas = /,/gi;\n\t\tthis._Regex_formatterCleanNonAlphaChar = /[^a-zA-Z]/gi;\n\t\tthis._Regex_formatterCapitalizeEachWord = /([a-zA-Z]+)/g;\n\n\t\t// TODO: Potentially pull these in from a configuration.\n\t\t// TODO: Use locale data for this if it's defaults all the way down.\n\t\tthis._Value_MoneySign_Currency = '$';\n\t\tthis._Value_NaN_Currency = '--';\n\t\tthis._Value_GroupSeparator_Number = ',';\n\n\t\tthis._Value_Prefix_StringHash = 'HSH';\n\t\tthis._Value_Clean_formatterCleanNonAlpha = '';\n\n\t\tthis._UseEngineStringStartsWith = (typeof(String.prototype.startsWith) === 'function');\n\t\tthis._UseEngineStringEndsWith = (typeof(String.prototype.endsWith) === 'function');\n\t}\n\n\n\t/*************************************************************************\n\t * String Manipulation and Comparison Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Reverse a string\n\t *\n\t * @param {string} pString - The string to reverse\n\t * @returns {string}\n\t */\n\tstringReverse (pString)\n\t{\n\t\t// TODO: Benchmark if there are faster ways we want to do this with all the newer JS stuff\n\t\t//       ... and if it will work with browserify in a clean way.\n\t\treturn pString.split('').reverse().join('');\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pStartIndex\n\t * @returns {*}\n\t */\n\tstringStartsWith (pString, pSearchString, pStartIndex)\n\t{\n\t\tif (this._UseEngineStringStartsWith)\n\t\t{\n\t\t\treturn pString.startsWith(pSearchString, pStartIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringStartsWith_Polyfill.call(pString, pSearchString, pStartIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pStartIndex - The index to start the search at\n\t * @returns {boolean}\n\t */\n\tstringStartsWith_Polyfill (pSearchString, pStartIndex)\n\t{\n\t\treturn this.slice(pStartIndex || 0, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Test if a string starts with a given substring.\n\t *\n\t * @param {*} pString\n\t * @param {*} pSearchString\n\t * @param {*} pEndIndex\n\t * @returns {*}\n\t */\n\tstringEndsWith (pString, pSearchString, pEndIndex)\n\t{\n\t\tif (this._UseEngineStringEndsWith)\n\t\t{\n\t\t\treturn pString.endsWith(pSearchString, pEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.stringEndsWith_Polyfill.call(pString, pSearchString, pEndIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Check if a string starts with a given substring.  This is a safe polyfill for the ES6 string.startsWith() function.\n\t *\n\t * @param {*} pSearchString - The string to search for\n\t * @param {*} pEndIndex - The index to end the search at\n\t * @returns {boolean}\n\t */\n\tstringEndsWith_Polyfill (pSearchString, pEndIndex)\n\t{\n\t\t// This works much better than >= because\n\t\t// it compensates for NaN:\n\t\tif (!(pEndIndex < this.length))\n\t\t{\n\t\t\tpEndIndex = this.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpEndIndex |= 0; // round position\n\t\t}\n\t\treturn this.substr(pEndIndex - pSearchString.length, pSearchString.length) === pSearchString;\n\t}\n\n\t/**\n\t * Generate an insecure string hash.  Not meant to be secure, just a quick way to generate a hash for a string.  This is not a cryptographic hash.  Additional warranty and disclaimer ... this is not for passwords!\n\t *\n\t * @param {string} pString\n\t * @returns {string}\n\t */\n\tinsecureStringHash (pString)\n\t{\n\t\tlet tmpHash = 0;\n\t\tlet tmpStringLength = pString.length;\n\t\tlet tmpCharacterIndex = 0;\n\n\t\twhile (tmpCharacterIndex < tmpStringLength)\n\t\t{\n\t\t\ttmpHash = (tmpHash << 5) - tmpHash + pString.charCodeAt(tmpCharacterIndex++) | 0;\n\t\t}\n\n\t\treturn `${this._Value_Prefix_StringHash}${tmpHash}`;\n\t}\n\n\tcapitalizeEachWord (pString)\n\t{\n\t\treturn pString.replace(this._Regex_formatterCapitalizeEachWord,\n\t\t\t(pMatch) =>\n\t\t\t{\n\t\t\t\treturn pMatch.charAt(0).toUpperCase() + pMatch.substr(1);\n\t\t\t});\n\t}\n\n\t/**\n\t * Clean wrapping characters if they exist consistently around the string.  If they do not, the string is returned unchanged.\n\t *\n\t * @param {string} pWrapCharacter - The character expected as the wrapping character\n\t * @param {string} pString - the string to clean\n\t * @returns {string}\n\t */\n\tcleanEnclosureWrapCharacters (pWrapCharacter, pString)\n\t{\n\t\t// # Use case from ManyFest DSL:\n\t\t//\n\t\t// When a boxed property is passed in, it should have quotes of some\n\t\t// kind around it.\n\t\t//\n\t\t// For instance:\n\t\t// \t\tMyValues['Name']\n\t\t// \t\tMyValues[\"Age\"]\n\t\t// \t\tMyValues[`Cost`]\n\t\t//\n\t\t// This function is necessary to remove the wrapping quotes before object\n\t\t// resolution can occur.\n\t\tif (pString.startsWith(pWrapCharacter) && pString.endsWith(pWrapCharacter))\n\t\t{\n\t\t\treturn pString.substring(1, pString.length - 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pString;\n\t\t}\n\t}\n\n\t/**\n\t * Clean a string of any non-alpha characters (including numbers)\n\t *\n\t * @param {*} pString\n\t * @returns\n\t */\n\tcleanNonAlphaCharacters (pString)\n\t{\n\t\tif ((typeof(pString) == 'string') && (pString != ''))\n\t\t{\n\t\t\treturn pString.replace(this._Regex_formatterCleanNonAlphaChar, this._Value_Clean_formatterCleanNonAlpha);\n\t\t}\n\n\t\treturn '';\n\t}\n\n\n\t/*************************************************************************\n\t * Number Formatting Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Insert commas every 3 characters from the right.  Used by formatterAddCommasToNumber().\n\t *\n\t * @param {*} pString\n\t * @returns {*}\n\t */\n\tformatterInsertCommas (pString)\n\t{\n\t\t// Reverse, because it's easier to do things from the left, given arbitrary digit counts\n\t\tlet tmpReversed = this.stringReverse(pString);\n\t\t// Add commas every three characters\n\t\tlet tmpReversedWithCommas = tmpReversed.match(this._Regex_formatterInsertCommas).join(',');\n\t\t// Reverse again (back to normal direction)\n\t\treturn this.stringReverse(tmpReversedWithCommas);\n\t}\n\n\tprocessAddCommasToNumberRegex(pMatch, pSign, pZeros, pBefore, pDecimal, pAfter)\n\t{\n\t\t// If there was no decimal, the last capture grabs the final digit, so\n\t\t// we have to put it back together with the 'before' substring\n\t\treturn pSign + (pDecimal ? this.formatterInsertCommas(pBefore) + pDecimal + pAfter : this.formatterInsertCommas(pBefore + pAfter));\n\t}\n\n\t/**\n\t * Add Commas to a Number for readability.\n\t *\n\t * @param {*} pNumber\n\t * @returns {string}\n\t */\n\tformatterAddCommasToNumber (pNumber)\n\t{\n\t\t// If the regex doesn't match, `replace` returns the string unmodified\n\t\treturn (pNumber.toString()).replace\n\t\t(\n\t\t\tthis._Regex_formatterAddCommasToNumber,\n\t\t\tthis.processAddCommasToNumberRegex.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * This will take a number and format it as a dollar string.  It will also add commas to the number.  If the number is not a number, it will return '--'.\n\t *\n\t * @param {*} pValue\n\t * @returns {string}\n\t */\n\tformatterDollars (pValue)\n\t{\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tif (pValue === null || pValue === undefined)\n\t\t{\n\t\t\treturn this._Value_NaN_Currency;\n\t\t}\n\n\t\tlet tmpDollarAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpDollarAmount = tmpDollarAmountArbitrary.toFixed(2);\n\n\t\tif (isNaN(tmpDollarAmount))\n\t\t{\n\t\t\t// Try again and see if what was passed in was a dollars string.\n\t\t\tif (typeof(pValue) == 'string')\n\t\t\t{\n\t\t\t\t// TODO: Better rounding function?  This is a hack to get rid of the currency symbol and commas.\n\t\t\t\ttmpDollarAmount = parseFloat(pValue.replace(this._Value_MoneySign_Currency,'').replace(this._Regex_formatterDollarsRemoveCommas,'')).toFixed(2);\n\t\t\t}\n\t\t\t// If we didn't get a number, return the \"not a number\" string.\n\t\t\tif (isNaN(tmpDollarAmount))\n\t\t\t{\n\t\t\t\treturn this._Value_NaN_Currency;\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Get locale data and use that for this stuff.\n\t\treturn `$${this.formatterAddCommasToNumber(tmpDollarAmount)}`;\n\t}\n\n\t/**\n\t * Round a number to a certain number of digits.  If the number is not a number, it will return 0.  If no digits are specified, it will default to 2 significant digits.\n\t *\n\t * @param {*} pValue\n\t * @param {number} pDigits\n\t * @returns {string}\n\t */\n\tformatterRoundNumber (pValue, pDigits)\n\t{\n\t\tlet tmpDigits = (typeof(pDigits) == 'undefined') ? 2 : pDigits;\n\n\t\tif (isNaN(pValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\n\t\tif (pValue === null || pValue === undefined)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpAmountArbitrary = this.fable.Utility.bigNumber(pValue);\n\t\tlet tmpValue = tmpAmountArbitrary.toFixed(tmpDigits);\n\n\t\tif (isNaN(tmpValue))\n\t\t{\n\t\t\tlet tmpZed = 0;\n\t\t\treturn tmpZed.toFixed(tmpDigits);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpValue;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate a reapeating padding string to be appended before or after depending on \n\t * which padding function it uses.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringGeneratePaddingString(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpTargetLength = pTargetLength >> 0;\n\t\tlet tmpPadString = String((typeof pPadString !== 'undefined' ? pPadString : ' '));\n\t\tif (pString.length > pTargetLength)\n\t\t{\n\t\t\t// No padding string if the source string is already longer than the target length, return an empty string\n\t\t\treturn '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpPadLength = pTargetLength - pString.length;\n\t\t\tif (tmpPadLength > tmpPadString.length)\n\t\t\t{\n\t\t\t\ttmpPadString += tmpPadString.repeat(tmpTargetLength / tmpPadString.length);\n\t\t\t}\n\t\t\treturn tmpPadString.slice(0, tmpPadLength);\n\t\t}\n\t}\n\n\t/**\n\t * Pad the start of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadStart = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString) + tmpString;\n\t}\n\n\t/**\n\t * Pad the end of a string.\n\t *\n\t * @param {*} pString\n\t * @param {number} pTargetLength\n\t * @returns {string} pPadString\n\t */\n\tstringPadEnd = function(pString, pTargetLength, pPadString)\n\t{\n\t\tlet tmpString = pString.toString();\n\t\treturn tmpString + this.stringGeneratePaddingString(tmpString, pTargetLength, pPadString);\n\t}\n\n\t/*************************************************************************\n\t * Time Formatting Functions (milliseconds)\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Format a time length in milliseconds into a human readable string.\n\t * @param {number} pTimeSpan \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeSpan(pTimeSpan)\n\t{\n\t\tif (typeof(pTimeSpan) != 'number')\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet tmpMs = parseInt(pTimeSpan%1000);\n\t\tlet tmpSeconds = parseInt((pTimeSpan/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeSpan/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeSpan/(1000*60*60));\n\n\t\treturn `${this.stringPadStart(tmpHours,2,'0')}:${this.stringPadStart(tmpMinutes,2,'0')}:${this.stringPadStart(tmpSeconds,2,'0')}.${this.stringPadStart(tmpMs,3,'0')}`;\n\t}\n\n\t/**\n\t * Format the time delta between two times in milliseconds into a human readable string.\n\t * \n\t * @param {number} pTimeStart \n\t * @param {number} pTimeEnd \n\t * @returns {string} - HH:MM:SS.mmm\n\t */\n\tformatTimeDelta(pTimeStart, pTimeEnd)\n\t{\n\t\tif ((typeof(pTimeStart) != 'number') || (typeof(pTimeEnd) != 'number'))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.formatTimeSpan(pTimeEnd-pTimeStart);\n\t}\n\n\t// THE FOLLOWING TERRIBLE FUNCTIONS ARE FOR QT / WKHTMLTOPDF when luxon and moment don't work so well\n\tgetMonthFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tgetMonthAbbreviatedFromDate (pJavascriptDate)\n\t{\n\t\tvar tmpMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\treturn tmpMonths[pJavascriptDate.getMonth()];\n\t}\n\n\tformatMonthDayYearFromDate (pJavascriptDate, pStrict)\n\t{\n\t\tlet tmpStrict = (typeof(pStrict) !== 'undefined') ? pStrict : false;\n\n\t\tlet tmpMonth = pJavascriptDate.getMonth() + 1;\n\t\tlet tmpDay = pJavascriptDate.getDate();\n\t\tlet tmpYear = pJavascriptDate.getFullYear();\n\t\t\n\t\tif (tmpStrict)\n\t\t{\n\t\t\ttmpMonth = this.stringPadStart(tmpMonth, 2, '0');\n\t\t\ttmpDay = this.stringPadStart(tmpDay, 2, '0');\n\t\t\ttmpYear = this.stringPadStart(tmpYear, 4, '0');\n\t\t}\n\n\t\treturn `${tmpMonth}/${tmpDay}/${tmpYear}`;\n\t}\n\t\n\tformatSortableStringFromDate (pDate)\n\t{\n\t\treturn pDate.getFullYear()+this.stringPadStart(pDate.getMonth(),2,'0')+this.stringPadStart(pDate.getDate(),2,'0');\n\t}\n\n\t/*************************************************************************\n\t * String Tokenization Functions\n\t *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\n\t/**\n\t * Return the string before the matched substring.\n\t *\n\t * If the substring is not found, the entire string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringBeforeMatch (pString, pMatch)\n\t{\n\t\treturn pString.split(pMatch)[0];\n\t}\n\n\t/**\n\t * Return the string after the matched substring.\n\t *\n\t * If the substring is not found, an empty string is returned.  This only deals with the *first* match.\n\t *\n\t * @param {string} pString\n\t * @param {string} pMatch\n\t * @returns {string}\n\t */\n\tstringAfterMatch (pString, pMatch)\n\t{\n\t\tlet tmpStringSplitLocation = pString.indexOf(pMatch);\n\n\t\tif ((tmpStringSplitLocation < 0) || ((tmpStringSplitLocation + pMatch.length) >= pString.length))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn pString.substring(tmpStringSplitLocation + pMatch.length);\n\t}\n\n\t/**\n\t * Count the number of enclosures in a string based on the start and end characters.\n\t *\n\t * If no start or end characters are specified, it will default to parentheses.  If the string is not a string, it will return 0.\n\t *\n\t * @param {string} pString\n\t * @param {string} pEnclosureStart\n\t * @param {string} pEnclosureEnd\n\t * @returns the count of full in the string\n\t */\n\tstringCountEnclosures (pString, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\tif (tmpEnclosureDepth == 0)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t}\n\t\t\t\ttmpEnclosureDepth++;\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\t\t\t}\n\t\t}\n\n\t\treturn tmpEnclosureCount;\n\t}\n\n\n\t/**\n\t * Get the value of the enclosure at the specified index.\n\t *\n\t * If the index is not a number, it will default to 0.  If the string is not a string, it will return an empty string.  If the enclosure is not found, it will return an empty string.  If the enclosure\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToGet\n\t * @param {string} pEnclosureStart\n\t * @param {string}} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringGetEnclosureValueByIndex (pString, pEnclosureIndexToGet, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToGet = (typeof(pEnclosureIndexToGet) == 'number') ? pEnclosureIndexToGet : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosedValueStartIndex = 0;\n\t\tlet tmpEnclosedValueEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\t// Only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToGet == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is the start of *the* enclosure\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosedValueStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This is the end of an enclosure\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\t// Again, only count enclosures at depth 1, but still this parses both pairs of all of them.\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosedValueEndIndex <= tmpEnclosedValueStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosedValueEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToGet)\n\t\t{\n\t\t\t// Return an empty string if the enclosure is not found\n\t\t\treturn '';\n\t\t}\n\n\t\tif ((tmpEnclosedValueEndIndex > 0) && (tmpEnclosedValueEndIndex > tmpEnclosedValueStartIndex))\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1, tmpEnclosedValueEndIndex);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn tmpString.substring(tmpEnclosedValueStartIndex+1);\n\t\t}\n\t}\n\n\n\t/**\n\t * Remove an enclosure from a string based on the index of the enclosure.\n\t *\n\t * @param {string} pString\n\t * @param {number} pEnclosureIndexToRemove\n\t * @param {number} pEnclosureStart\n\t * @param {number} pEnclosureEnd\n\t * @returns {string}\n\t */\n\tstringRemoveEnclosureByIndex (pString, pEnclosureIndexToRemove, pEnclosureStart, pEnclosureEnd)\n\t{\n\t\tlet tmpString = (typeof(pString) == 'string') ? pString : '';\n\t\tlet tmpEnclosureIndexToRemove = (typeof(pEnclosureIndexToRemove) == 'number') ? pEnclosureIndexToRemove : 0;\n\t\tlet tmpEnclosureStart = (typeof(pEnclosureStart) == 'string') ? pEnclosureStart : '(';\n\t\tlet tmpEnclosureEnd = (typeof(pEnclosureEnd) == 'string') ? pEnclosureEnd : ')';\n\n\t\tlet tmpEnclosureCount = 0;\n\t\tlet tmpEnclosureDepth = 0;\n\n\t\tlet tmpMatchedEnclosureIndex = false;\n\t\tlet tmpEnclosureStartIndex = 0;\n\t\tlet tmpEnclosureEndIndex = 0;\n\n\t\tfor (let i = 0; i < tmpString.length; i++)\n\t\t{\n\t\t\t// This is the start of an enclosure\n\t\t\tif (tmpString[i] == tmpEnclosureStart)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth++;\n\n\t\t\t\tif (tmpEnclosureDepth == 1)\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureCount++;\n\t\t\t\t\tif (tmpEnclosureIndexToRemove == (tmpEnclosureCount - 1))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpMatchedEnclosureIndex = true;\n\t\t\t\t\t\ttmpEnclosureStartIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmpString[i] == tmpEnclosureEnd)\n\t\t\t{\n\t\t\t\ttmpEnclosureDepth--;\n\n\t\t\t\tif ((tmpEnclosureDepth == 0) &&\n\t\t\t\t\ttmpMatchedEnclosureIndex &&\n\t\t\t\t\t(tmpEnclosureEndIndex <= tmpEnclosureStartIndex))\n\t\t\t\t{\n\t\t\t\t\ttmpEnclosureEndIndex = i;\n\t\t\t\t\ttmpMatchedEnclosureIndex = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tmpEnclosureCount <= tmpEnclosureIndexToRemove)\n\t\t{\n\t\t\treturn tmpString;\n\t\t}\n\n\t\tlet tmpReturnString = '';\n\n\t\tif (tmpEnclosureStartIndex > 1)\n\t\t{\n\t\t\ttmpReturnString = tmpString.substring(0, tmpEnclosureStartIndex);\n\t\t}\n\n\t\tif ((tmpString.length > (tmpEnclosureEndIndex + 1)) && (tmpEnclosureEndIndex > tmpEnclosureStartIndex))\n\t\t{\n\t\t\ttmpReturnString += tmpString.substring(tmpEnclosureEndIndex+1);\n\t\t}\n\n\t\treturn tmpReturnString;\n\t}\n}\n\nmodule.exports = DataFormat;","module.exports={\n\t\"DefaultIntegerMinimum\": 0,\n\t\"DefaultIntegerMaximum\": 9999999,\n\n\t\"DefaultNumericStringLength\": 10,\n\n\t\"MonthSet\": [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n\n\t\"WeekDaySet\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n\n\t\"ColorSet\": \n\t\t[\n\t\t\t\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Indigo\", \"Violet\", \"Pink\", \"Purple\", \"Turquoise\", \"Gold\",\n\t\t\t\"Lime\", \"Maroon\", \"Navy\", \"Coral\", \"Teal\", \"Brown\", \"White\", \"Black\", \"Sky\", \"Berry\",\n\t\t\t\"Grey\", \"Straw\", \"Silver\", \"Sapphire\"\n\t\t],\n\n\t\"SurNameSet\":\n\t\t[\n\t\t\t\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Miller\", \"Davis\", \"Garcia\", \"Rodriguez\", \"Wilson\",\n\t\t\t\"Martinez\", \"Anderson\", \"Taylor\", \"Thomas\", \"Hernandez\", \"Moore\", \"Martin\", \"Jackson\", \"Thompson\", \"White\",\n\t\t\t\"Lopez\", \"Lee\", \"Gonzalez\", \"Harris\", \"Clark\", \"Lewis\", \"Robinson\", \"Walker\", \"Perez\", \"Hall\",\n\t\t\t\"Young\", \"Allen\", \"Sanchez\", \"Wright\", \"King\", \"Scott\", \"Green\", \"Baker\", \"Adams\", \"Nelson\",\n\t\t\t\"Hill\", \"Ramirez\", \"Campbell\", \"Mitchell\", \"Roberts\", \"Carter\", \"Phillips\", \"Evans\", \"Turner\", \"Torres\",\n\t\t\t\"Parker\", \"Collins\", \"Edwards\", \"Stewart\", \"Flores\", \"Morris\", \"Nguyen\", \"Murphy\", \"Rivera\", \"Cook\",\n\t\t\t\"Rogers\", \"Morgan\", \"Peterson\", \"Cooper\", \"Reed\", \"Bailey\", \"Bell\", \"Gomez\", \"Kelly\", \"Howard\",\n\t\t\t\"Ward\", \"Cox\", \"Diaz\", \"Richardson\", \"Wood\", \"Watson\", \"Brooks\", \"Bennett\", \"Gray\", \"James\",\n\t\t\t\"Reyes\", \"Cruz\", \"Hughes\", \"Price\", \"Myers\", \"Long\", \"Foster\", \"Sanders\", \"Ross\", \"Morales\",\n\t\t\t\"Powell\", \"Sullivan\", \"Russell\", \"Ortiz\", \"Jenkins\", \"Gutierrez\", \"Perry\", \"Butler\", \"Barnes\", \"Fisher\"\n\t\t],\n\n\t\"NameSet\":\n\t\t[\n\t\t\t\"Mary\", \"Patricia\", \"Jennifer\", \"Linda\", \"Elizabeth\", \"Barbara\", \"Susan\", \"Jessica\", \"Sarah\", \"Karen\",\n\t\t\t\"Lisa\", \"Nancy\", \"Betty\", \"Sandra\", \"Margaret\", \"Ashley\", \"Kimberly\", \"Emily\", \"Donna\", \"Michelle\",\n\t\t\t\"Carol\", \"Amanda\", \"Melissa\", \"Deborah\", \"Stephanie\", \"Dorothy\", \"Rebecca\", \"Sharon\", \"Laura\", \"Cynthia\",\n\t\t\t\"Amy\", \"Kathleen\", \"Angela\", \"Shirley\", \"Brenda\", \"Emma\", \"Anna\", \"Pamela\", \"Nicole\", \"Samantha\",\n\t\t\t\"Katherine\", \"Christine\", \"Helen\", \"Debra\", \"Rachel\", \"Carolyn\", \"Janet\", \"Maria\", \"Catherine\", \"Heather\",\n\t\t\t\"Diane\", \"Olivia\", \"Julie\", \"Joyce\", \"Victoria\", \"Ruth\", \"Virginia\", \"Lauren\", \"Kelly\", \"Christina\",\n\t\t\t\"Joan\", \"Evelyn\", \"Judith\", \"Andrea\", \"Hannah\", \"Megan\", \"Cheryl\", \"Jacqueline\", \"Martha\", \"Madison\",\n\t\t\t\"Teresa\", \"Gloria\", \"Sara\", \"Janice\", \"Ann\", \"Kathryn\", \"Abigail\", \"Sophia\", \"Frances\", \"Jean\",\n\t\t\t\"Alice\", \"Judy\", \"Isabella\", \"Julia\", \"Grace\", \"Amber\", \"Denise\", \"Danielle\", \"Marilyn\", \"Beverly\",\n\t\t\t\"Charlotte\", \"Natalie\", \"Theresa\", \"Diana\", \"Brittany\", \"Doris\", \"Kayla\", \"Alexis\", \"Lori\", \"Marie\",\n\t\t\t\"James\", \"Robert\", \"John\", \"Michael\", \"David\", \"William\", \"Richard\", \"Joseph\", \"Thomas\", \"Christopher\",\n\t\t\t\"Charles\", \"Daniel\", \"Matthew\", \"Anthony\", \"Mark\", \"Donald\", \"Steven\", \"Andrew\", \"Paul\", \"Joshua\",\n\t\t\t\"Kenneth\", \"Kevin\", \"Brian\", \"George\", \"Timothy\", \"Ronald\", \"Jason\", \"Edward\", \"Jeffrey\", \"Ryan\",\n\t\t\t\"Jacob\", \"Gary\", \"Nicholas\", \"Eric\", \"Jonathan\", \"Stephen\", \"Larry\", \"Justin\", \"Scott\", \"Brandon\",\n\t\t\t\"Benjamin\", \"Samuel\", \"Gregory\", \"Alexander\", \"Patrick\", \"Frank\", \"Raymond\", \"Jack\", \"Dennis\", \"Jerry\",\n\t\t\t\"Tyler\", \"Aaron\", \"Jose\", \"Adam\", \"Nathan\", \"Henry\", \"Zachary\", \"Douglas\", \"Peter\", \"Kyle\",\n\t\t\t\"Noah\", \"Ethan\", \"Jeremy\", \"Walter\", \"Christian\", \"Keith\", \"Roger\", \"Terry\", \"Austin\", \"Sean\",\n\t\t\t\"Gerald\", \"Carl\", \"Harold\", \"Dylan\", \"Arthur\", \"Lawrence\", \"Jordan\", \"Jesse\", \"Bryan\", \"Billy\",\n\t\t\t\"Bruce\", \"Gabriel\", \"Joe\", \"Logan\", \"Alan\", \"Juan\", \"Albert\", \"Willie\", \"Elijah\", \"Wayne\",\n\t\t\t\"Randy\", \"Vincent\", \"Mason\", \"Roy\", \"Ralph\", \"Bobby\", \"Russell\", \"Bradley\", \"Philip\", \"Eugene\"\n\t\t]\n}","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceDataGeneration extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'DataGeneration';\n\n\t\tthis.defaultData = require('./Fable-Service-DataGeneration-DefaultValues.json');\n\t}\n\n\t// Return a random integer between pMinimum and pMaximum\n\trandomIntegerBetween(pMinimum, pMaximum)\n\t{\n\t\treturn Math.floor(Math.random() * (pMaximum - pMinimum)) + pMinimum;\n\t}\n\t// Return a random integer up to the passed-in maximum\n\trandomIntegerUpTo(pMaximum)\n\t{\n\t\treturn this.randomIntegerBetween(0, pMaximum);\n\t}\n\t// Return a random integer between 0 and 9999999\n\trandomInteger()\n\t{\n\t\treturn Math.floor(Math.random()*this.defaultData.DefaultIntegerMaximum);\n\t}\n\n\n\trandomNumericString(pLength, pMaxNumber)\n\t{\n\t\tlet tmpLength = (typeof(pLength) === 'undefined') ? 10 : pLength;\n\t\tlet tmpMaxNumber = (typeof(pMaxNumber) === 'undefined') ? ((10 ** tmpLength) - 1) : pMaxNumber;\n\n\t\treturn this.services.DataFormat.stringPadStart(this.randomIntegerUpTo(tmpMaxNumber), pLength, '0');\n\t}\n\n\n\trandomMonth()\n\t{\n\t\treturn this.defaultData.MonthSet[this.randomIntegerUpTo(this.defaultData.MonthSet.length-1)];\n\t}\n\trandomDayOfWeek()\n\t{\n\t\treturn this.defaultData.WeekDaySet[this.randomIntegerUpTo(this.defaultData.WeekDaySet.length-1)];\n\t}\n\n\n\trandomColor()\n\t{\n\t\treturn this.defaultData.ColorSet[this.randomIntegerUpTo(this.defaultData.ColorSet.length-1)];\n\t}\n\n\n\trandomName()\n\t{\n\t\treturn this.defaultData.NameSet[this.randomIntegerUpTo(this.defaultData.NameSet.length-1)];\n\t}\n\trandomSurname()\n\t{\n\t\treturn this.defaultData.SurNameSet[this.randomIntegerUpTo(this.defaultData.SurNameSet.length-1)];\n\t}\n}\n\nmodule.exports = FableServiceDataGeneration;","const libFableServiceProviderBase = require('fable-serviceproviderbase');\n/**\n* Date management a la Moment using days.js\n*\n* @class DateManipulation\n*/\nclass DateManipulation extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash)\n\n\t\tthis.serviceType = 'Dates';\n\n\t\tthis.dayJS = require('dayjs');\n\n\t\t// Include the `weekOfYear` plugin\n\t\tthis.plugin_weekOfYear = require('dayjs/plugin/weekOfYear');\n\t\tthis.dayJS.extend(this.plugin_weekOfYear);\n\t\t// Include the `weekday` plugin\n\t\tthis.plugin_weekday = require('dayjs/plugin/weekday');\n\t\tthis.dayJS.extend(this.plugin_weekday);\n\t\t// Include the `isoWeek` plugin\n\t\tthis.plugin_isoWeek = require('dayjs/plugin/isoWeek');\n\t\tthis.dayJS.extend(this.plugin_isoWeek);\n\t\t// Include the `timezone` plugin\n\t\tthis.plugin_timezone = require('dayjs/plugin/timezone');\n\t\tthis.dayJS.extend(this.plugin_timezone);\n\t\t// Include the `relativetime` plugin\n\t\tthis.plugin_relativetime = require('dayjs/plugin/relativeTime');\n\t\tthis.dayJS.extend(this.plugin_relativetime);\n\t\t// Include the `utc` plugin\n\t\tthis.plugin_utc = require('dayjs/plugin/utc');\n\t\tthis.dayJS.extend(this.plugin_utc);\n\t\t// Include the `advancedFormat` plugin\n\t\tthis.plugin_advancedFormat = require('dayjs/plugin/advancedFormat');\n\t\tthis.dayJS.extend(this.plugin_advancedFormat);\n\n\t\t// A developer can include locales if they want\n\t\t// You would do the following:\n\t\t// const localeDE = require('dayjs/locale/de');\n\t\t// _Fable.Dates.dayJS.locale('de');\n\t}\n}\n\nmodule.exports = DateManipulation;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceEnvironmentData extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'EnvironmentData';\n\n\t\tthis.Environment = `node.js`;\n\t}\n}\n\nmodule.exports = FableServiceEnvironmentData;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libFS = require('fs');\nconst libPath = require('path');\nconst libReadline = require('readline');\n\n\nclass FableServiceFilePersistence extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'FilePersistence';\n\n\t\tif (!this.options.hasOwnProperty('Mode'))\n\t\t{\n\t\t\tthis.options.Mode = parseInt('0777', 8) & ~process.umask();\n\t\t}\n\n\t\tthis.libFS = libFS;\n\t\tthis.libPath = libPath;\n\t\tthis.libReadline = libReadline;\n\t}\n\n\tjoinPath(...pPathArray)\n\t{\n\t\treturn libPath.resolve(...pPathArray);\n\t}\n\n\texistsSync(pPath)\n\t{\n\t\treturn libFS.existsSync(pPath);\n\t}\n\n\texists(pPath, fCallback)\n\t{\n\t\tlet tmpFileExists = this.existsSync(pPath);;\n\n\t\treturn fCallback(null, tmpFileExists);\n\t}\n\n\tappendFileSync(pFileName, pAppendContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.appendFileSync(pFileName, pAppendContent, tmpOptions);\n\t}\n\n\tdeleteFileSync(pFileName)\n\t{\n\t\treturn libFS.unlinkSync(pFileName);\n\t}\n\n\tdeleteFolderSync(pFileName)\n\t{\n\t\treturn libFS.rmdirSync(pFileName);\n\t}\n\n\treadFileSync(pFilePath, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.readFileSync(pFilePath, tmpOptions);\n\t}\n\n\treadFile(pFilePath, pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.readFile(pFilePath, tmpOptions, fCallback);\n\t}\n\n\twriteFileSync(pFileName, pFileContent, pOptions)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFileSync(pFileName, pFileContent, tmpOptions);\n\t}\n\n\twriteFileSyncFromObject(pFileName, pObject)\n\t{\n\t\treturn this.writeFileSync(pFileName, JSON.stringify(pObject, null, 4));\n\t}\n\n\twriteFileSyncFromArray(pFileName, pFileArray)\n\t{\n\t\tif (!Array.isArray(pFileArray))\n\t\t{\n\t\t\tthis.log.error(`File Persistence Service attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).`);\n\t\t\treturn Error('Attempted to write ${pFileName} from array but the expected array was not an array (it was a ${typeof(pFileArray)}).');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (let i = 0; i < pFileArray.length; i++)\n\t\t\t{\n\t\t\t\treturn this.appendFileSync(pFileName, `${pFileArray[i]}\\n`);\n\t\t\t}\n\t\t}\n\t}\n\n\twriteFile(pFileName, pFileContent, pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) === 'undefined') ? 'utf8' : pOptions;\n\t\treturn libFS.writeFile(pFileName, pFileContent, tmpOptions, fCallback);\n\t}\n\n\tlineReaderFactory(pFilePath, fOnLine, fOnComplete, fOnError)\n\t{\n\t\tlet tmpLineReader = {};\n\n\t\tif (typeof(pFilePath) != 'string')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpLineReader.filePath = pFilePath;\n\n\t\ttmpLineReader.fileStream = libFS.createReadStream(tmpLineReader.filePath);\n\n\t\ttmpLineReader.reader = libReadline.createInterface({ input: tmpLineReader.fileStream, crlfDelay: Infinity });\n\n\t\tif (typeof(fOnError) === 'function')\n\t\t{\n\t\t\ttmpLineReader.reader.on('error', fOnError);\n\t\t}\n\n\t\ttmpLineReader.reader.on('line', (typeof(fOnLine) === 'function') ? fOnLine : () => {});\n\n\t\tif (typeof(fOnComplete) === 'function')\n\t\t{\n\t\t\ttmpLineReader.reader.on('close', fOnComplete);\n\t\t}\n\n\t\treturn tmpLineReader;\n\t}\n\n\t// Folder management\n\tmakeFolderRecursive(pParameters, fCallback)\n\t{\n\t\tlet tmpParameters = pParameters;\n\n\t\tif (typeof(pParameters) == 'string')\n\t\t{\n\t\t\ttmpParameters = { Path: pParameters };\n\t\t}\n\t\telse if (typeof(pParameters) !== 'object')\n\t\t{\n\t\t\tfCallback(new Error('Parameters object or string not properly passed to recursive folder create.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(tmpParameters.Path) !== 'string'))\n\t\t{\n\t\t\tfCallback(new Error('Parameters object needs a path to run the folder create operation.'));\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!tmpParameters.hasOwnProperty('Mode'))\n\t\t{\n\t\t\ttmpParameters.Mode = this.options.Mode;\n\t\t}\n\n\t\t// Check if we are just starting .. if so, build the initial state for our recursive function\n\t\tif (typeof(tmpParameters.CurrentPathIndex) === 'undefined')\n\t\t{\n\t\t\t// Build the tools to start recursing\n\t\t\ttmpParameters.ActualPath = libPath.normalize(tmpParameters.Path);\n\t\t\ttmpParameters.ActualPathParts = tmpParameters.ActualPath.split(libPath.sep);\n\t\t\ttmpParameters.CurrentPathIndex = 0;\n\t\t\ttmpParameters.CurrentPath = '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is not our first run, so we will continue the recursion.\n\t\t\t// Build the new base path\n\t\t\tif (tmpParameters.CurrentPath == libPath.sep)\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmpParameters.CurrentPath = tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex];\n\t\t\t}\n\n\t\t\t// Increment the path index\n\t\t\ttmpParameters.CurrentPathIndex++;\n\t\t}\n\n\t\t// Check if the path is fully complete\n\t\tif (tmpParameters.CurrentPathIndex >= tmpParameters.ActualPathParts.length)\n\t\t{\n\t\t\treturn fCallback(null);\n\t\t}\n\n\t\t// Check if the path exists (and is a folder)\n\t\tlibFS.open(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], 'r',\n\t\t\t(pError, pFileDescriptor)=>\n\t\t\t{\n\t\t\t\tif (pFileDescriptor)\n\t\t\t\t{\n\t\t\t\t\tlibFS.closeSync(pFileDescriptor);\n\t\t\t\t}\n\n\t\t\t\tif (pError && pError.code=='ENOENT')\n\t\t\t\t{\n\t\t\t\t\t/* Path doesn't exist, create it */\n\t\t\t\t\tlibFS.mkdir(tmpParameters.CurrentPath + libPath.sep + tmpParameters.ActualPathParts[tmpParameters.CurrentPathIndex], tmpParameters.Mode,\n\t\t\t\t\t\t(pCreateError) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!pCreateError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// We have now created our folder and there was no error -- continue.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (pCreateError.code =='EEXIST')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// The folder exists -- our dev might be running this in parallel/async/whatnot.\n\t\t\t\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(pCreateError.code);\n\t\t\t\t\t\t\t\treturn fCallback(pCreateError);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn this.makeFolderRecursive(tmpParameters, fCallback);\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nmodule.exports = FableServiceFilePersistence;","const libFableServiceBase = require('fable-serviceproviderbase');\n\n/**\n* Precedent Meta-Templating\n* @author      Steven Velozo <steven@velozo.com>\n* @description Process text stream trie and postfix tree, parsing out meta-template expression functions.\n*/\nconst libWordTree = require(`./Fable-Service-MetaTemplate/MetaTemplate-WordTree.js`);\nconst libStringParser = require(`./Fable-Service-MetaTemplate/MetaTemplate-StringParser.js`);\n\n\nclass FableServiceMetaTemplate extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'MetaTemplate';\n\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser(this.fable);\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\taddPatternAsync(pPatternStart, pPatternEnd, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternAsync(pPatternStart, pPatternEnd, pParserPromise);\n\t}\n\n\taddPatternBoth(pPatternStart, pPatternEnd, pParser, pParserPromise)\n\t{\n\t\treturn this.WordTree.addPatternBoth(pPatternStart, pPatternEnd, pParser, pParserPromise);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData, fCallback)\n\t{\n\t\tif (this.LogNoisiness > 4)\n\t\t{\n\t\t\tthis.fable.log.trace(`Metatemplate parsing template string [${pString}] where the callback is a ${typeof(fCallback)}`, {TemplateData:pData});\n\t\t}\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceMetaTemplate;","/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor(pFable)\n\t{\n\t\tthis.fable = pFable;\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse') && (!pParserState.Pattern.isAsync || pParserState.Pattern.isBoth))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pParserState.Pattern.isAsync && !pParserState.Pattern.isBoth)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(`MetaTemplate: The pattern ${pParserState.Pattern.PatternStartString} is asynchronous and cannot be used in a synchronous parser.`);\n\t\t\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texecutePatternAsync(pParserState, pData, fCallback)\n\t{\n\t\t// ... this is the end of a pattern, cut off the end tag and parse it.\n\t\t// Trim the start and end tags off the output buffer now\n\t\tif (pParserState.Pattern.isAsync && !pParserState.Pattern.isBoth)\n\t\t{\n\t\t\t// Run the function\n\t\t\treturn pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\treturn fCallback();\n\t\t\t\t});\n\t\t}\n\t\telse if (pParserState.Pattern.isAsync && pParserState.Pattern.isBoth)\n\t\t{\n\t\t\t// Run the function when both async and non async were provided with the pattern\n\t\t\treturn pParserState.Pattern.ParseAsync(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData,\n\t\t\t\t(pError, pAsyncOutput) =>\n\t\t\t\t{\n\t\t\t\t\tif (pError)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(`Precedent ERROR: Async template error happened parsing ${pParserState.Pattern.PatternStart} ... ${pParserState.Pattern.PatternEnd}: ${pError}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tpParserState.OutputBuffer = pAsyncOutput;\n\t\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\t\treturn fCallback();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Run the t*mplate function\n\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacterAsync (pCharacter, pParserState, pData, fCallback)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.executePatternAsync(pParserState, pData, fCallback);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.executePatternAsync(pParserState, pData, fCallback);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\telse\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\t// Without this, templates of all sizes work fine in node.  They do not in the browser.\n\t\t// Trying this out without the timout on non asynchronous template flips.\n\t\treturn fCallback();\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t * @param {function} fCallback - The callback function to call when the parse is complete\n\t */\n\tparseString (pString, pParseTree, pData, fCallback)\n\t{\n\t\tif (typeof(fCallback) !== 'function')\n\t\t{\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\t\tfor (var i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\t// TODO: This is not fast.\n\t\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData, fCallback);\n\t\t\t}\n\n\t\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\t\treturn tmpParserState.Output;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// This is the async mode\n\t\t\tlet tmpParserState = this.newParserState(pParseTree);\n\t\t\ttmpParserState.Asynchronous = true;\n\n\t\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tfor (let i = 0; i < pString.length; i++)\n\t\t\t{\n\t\t\t\ttmpAnticipate.anticipate(\n\t\t\t\t\t(fCallback) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.parseCharacterAsync(pString[i], tmpParserState, pData, fCallback);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\t// Flush the remaining data\n\t\t\t\t\tthis.flushOutputBuffer(tmpParserState);\n\t\t\t\t\treturn fCallback(pError, tmpParserState.Output);\n\t\t\t\t});\n\t\t}\n\t}\n}\n\nmodule.exports = StringParser;\n","/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn tmpLeaf;\n\t}\n\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPatternAsync\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParserAsync - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternAsync (pPatternStart, pPatternEnd, fParserAsync)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParserAsync);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t}\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPatternBoth\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPatternBoth (pPatternStart, pPatternEnd, fParser, fParserAsync)\n\t{\n\t\tlet tmpLeaf = this.addPattern(pPatternStart, pPatternEnd, fParser);\n\t\tif (tmpLeaf)\n\t\t{\n\t\t\ttmpLeaf.isAsync = true;\n\t\t\ttmpLeaf.isBoth = true;\n\t\t\t// When a leaf has both async and non-async versions of the functions, we store the async in fParserAsync.\n\t\t\ttmpLeaf.ParseAsync = fParserAsync;\n\t\t}\n\t}\n}\n\nmodule.exports = WordTree;\n","module.exports = (\n    {\n        \"Metadata\": {\n            \"UUID\": false,\n            \"Hash\": false,\n\n            \"Name\": \"\",\n            \"Summary\": \"\",\n\n            \"Version\": 0\n        },\n        \"Status\": {\n            \"Completed\": false,\n\n            \"CompletionProgress\": 0,\n            \"CompletionTimeElapsed\": 0,\n\n            \"TimeStart\": 0,\n            \"TimeEnd\": 0\n        },\n        \"Steps\": [],\n        \"Errors\": [],\n        \"Log\": []\n    }\n);","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst _OperationStatePrototypeString = JSON.stringify(require('./Fable-Service-Operation-DefaultSettings.js'));\n\nclass FableOperation extends libFableServiceBase\n{\n\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\t// Timestamps will just be the long ints\n\t\tthis.timeStamps = {};\n\t\t// ProgressTrackers have an object format of: {Hash:'SomeHash',EndTime:UINT,CurrentTime:UINT,TotalCount:INT,CurrentCount:INT}\n\t\tthis.progressTrackers = {};\n\n        this.serviceType = 'PhasedOperation';\n\n\t\tthis.state = JSON.parse(_OperationStatePrototypeString);\n\n\t\tthis.stepMap = {};\n\t\tthis.stepFunctions = {};\n\n\t\t// Match the service instantiation to the operation.\n\t\tthis.state.Metadata.Hash = this.Hash;\n\t\tthis.state.Metadata.UUID = this.UUID;\n\n\t\tthis.state.Metadata.Name = (typeof(this.options.Name) == 'string') ? this.options.Name : `Unnamed Operation ${this.state.Metadata.UUID}`;\n\t\tthis.name = this.state.Metadata.Name;\n\n\t\tthis.log = this;\n\t}\n\n\texecute(fExecutionCompleteCallback)\n\t{\n\t\tif (this.state.Status.TimeStart)\n\t\t{\n\t\t\treturn fExecutionCompleteCallback(new Error(`Operation [${this.state.Metadata.UUID}] ${this.state.Metadata.Name} has already been executed!`));\n\t\t}\n\n\t\tthis.state.Status.TimeStart = +new Date();\n\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\tfor (let i = 0; i < this.state.Steps; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(this.stepFunctions[this.state.Steps[i].GUIDStep].bind(this));\n\t\t}\n\n\t\t// Wait for the anticipation to complete\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tthis.state.Status.TimeEnd = +new Date();\n\t\t\t\treturn fExecutionCompleteCallback();\n\t\t\t});\n\t}\n\n/*\n\tTODO: I've gone back and forth on whether this should be an object, JSON \n\tobject prototype, or set of functions here.  Discuss with colleagues!\n*/\n\taddStep(pGUIDStep, fStepFunction, pStepName, pStepDescription, pStepMetadata)\n\t{\n\t\tlet tmpStep = {};\n\t\ttmpStep.GUIDStep = (typeof(pGUIDStep) !== 'undefined') ? pGUIDStep : `STEP-${this.state.Steps.length}-${this.fable.DataGeneration.randomNumericString()}`;\n\t\ttmpStep.Name = (typeof(pStepName) !== 'undefined') ? pStepName : `Step [${tmpStep.GUIDStep}]`;\n\t\ttmpStep.Description = (typeof(pStepDescription) !== 'undefined') ? pStepDescription : `Step execution of ${tmpStep.Name}.`;\n\t\t// TODO: Right now this allows an Array... do we want to block that?\n\t\ttmpStep.Metadata = (typeof(pStepMetadata) === 'object') ? pStepMetadata : {};\n\n\t\ttmpStep.TimeStart = false;\n\t\ttmpStep.TimeEnd = false;\n\n\t\t// There is an array of steps, in the Operation State itself ... push a step there\n\t\tthis.state.Steps.push(tmpStep);\n\n\t\tthis.stepMap[tmpStep.GUIDStep]\n\t\tthis.stepFunctions[tmpStep.GUIDStep] = fStepFunction;\n\n\t\tthis.state.Status.StepCount++;\n\t\treturn tmpStep;\n\t}\n\n\tgetStep(pGUIDStep)\n\t{\n\t\tif (this.stepMap.hasOwnProperty(pGUIDStep))\n\t\t{\n\t\t\treturn this.stepMap[pGUIDStep];\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tstartStep(pGUIDStep)\n\t{\n\t\tlet tmpStep = this.getStep(pGUIDStep);\n\n\t\tif (tmpStep === false)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpStep.TimeStart = +new Date();\n\n\t\treturn tmpStep;\n\t}\n\n\tstopStep(pGUIDStep)\n\t{\n\t\tlet tmpStep = this.getStep(pGUIDStep);\n\n\t\tif (tmpStep === false)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\ttmpStep.TimeEnd = +new Date();\n\n\t\treturn tmpStep;\n\t}\n\n\twriteOperationLog(pLogLevel, pLogText, pLogObject)\n\t{\n\t\tthis.state.Log.push(`[${new Date().toUTCString()}]-[${pLogLevel}]: ${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Log.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\twriteOperationErrors(pLogText, pLogObject)\n\t{\n\t\tthis.state.Errors.push(`${pLogText}`);\n\n\t\tif (typeof(pLogObject) == 'object')\n\t\t{\n\t\t\tthis.state.Errors.push(JSON.stringify(pLogObject));\n\t\t}\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('TRACE', pLogText, pLogObject);\n\t\tthis.fable.log.trace(pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('DEBUG', pLogText, pLogObject);\n\t\tthis.fable.log.debug(pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('INFO', pLogText, pLogObject);\n\t\tthis.fable.log.info(pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('WARN', pLogText, pLogObject);\n\t\tthis.fable.log.warn(pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('ERROR', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.error(pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.writeOperationLog('FATAL', pLogText, pLogObject);\n\t\tthis.writeOperationErrors(pLogText, pLogObject);\n\t\tthis.fable.log.fatal(pLogText, pLogObject);\n\t}\n\n\n\t/************************************************************************\n\t * BEGINNING OF -->  Telemetry Helpers\n\t */\n\tcreateTimeStamp(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tthis.timeStamps[tmpTimeStampHash] = +new Date();\n\t\treturn this.timeStamps[tmpTimeStampHash];\n\t}\n\n\tgetTimeDelta(pTimeStampHash)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tif (this.timeStamps.hasOwnProperty(tmpTimeStampHash))\n\t\t{\n\t\t\tlet tmpEndTime = +new Date();\n\t\t\treturn tmpEndTime-this.timeStamps[tmpTimeStampHash];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tlogTimeDelta(pTimeStampHash, pMessage)\n\t{\n\t\tlet tmpTimeStampHash = (typeof(pTimeStampHash) == 'string') ? pTimeStampHash : 'Default';\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : `Elapsed for ${tmpTimeStampHash}: `;\n\t\tlet tmpOperationTime = this.getTimeDelta(pTimeStampHash);\n\t\tthis.info(tmpMessage +' ('+tmpOperationTime+'ms)');\n\t\treturn tmpOperationTime;\n\t}\n\n\tcreateProgressTracker(pTotalOperations, pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpTotalOperations = (typeof(pTotalOperations) == 'number') ? pTotalOperations : 100;\n\n\t\tlet tmpProgressTracker = (\n\t\t\t{\n\t\t\t\tHash: tmpProgressTrackerHash,\n\t\t\t\tStartTime: this.createTimeStamp(tmpProgressTrackerHash),\n\t\t\t\tEndTime: 0,\n\t\t\t\tCurrentTime: 0,\n\t\t\t\tPercentComplete: -1,\n\t\t\t\tAverageOperationTime: -1,\n\t\t\t\tEstimatedCompletionTime: -1,\n\t\t\t\tTotalCount: tmpTotalOperations,\n\t\t\t\tCurrentCount:-1\n\t\t\t});\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash] = tmpProgressTracker;\n\n\t\treturn tmpProgressTracker;\n\t}\n\n\tsolveProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tlet tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\ttmpProgressTracker.CurrentTime = this.getTimeDelta(tmpProgressTracker.Hash);\n\n\t\tif ((tmpProgressTracker.CurrentCount > 0) && (tmpProgressTracker.TotalCount > 0))\n\t\t{\n\t\t\ttmpProgressTracker.PercentComplete = (tmpProgressTracker.CurrentCount / tmpProgressTracker.TotalCount) * 100.0;\n\t\t}\n\n\t\tif ((tmpProgressTracker.CurrentCount > 0) && (tmpProgressTracker.CurrentTime > 0))\n\t\t{\n\t\t\ttmpProgressTracker.AverageOperationTime = tmpProgressTracker.CurrentTime / tmpProgressTracker.CurrentCount;\n\t\t}\n\n\t\tif ((tmpProgressTracker.CurrentCount < tmpProgressTracker.TotalCount) && (tmpProgressTracker.AverageOperationTime > 0))\n\t\t{\n\t\t\ttmpProgressTracker.EstimatedCompletionTime = (tmpProgressTracker.TotalCount - tmpProgressTracker.CurrentCount) * tmpProgressTracker.AverageOperationTime;\n\t\t}\n\t}\n\n\tupdateProgressTrackerStatus(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\n\t\tif (isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = tmpCurrentOperations;\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tincrementProgressTrackerStatus(pProgressTrackerHash, pIncrementSize)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpIncrementSize = parseInt(pIncrementSize);\n\n\t\tif (isNaN(tmpIncrementSize))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.createProgressTracker(100, tmpProgressTrackerHash);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentCount = this.progressTrackers[tmpProgressTrackerHash].CurrentCount + tmpIncrementSize;\n\t\tthis.progressTrackers[tmpProgressTrackerHash].CurrentTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tsetProgressTrackerEndTime(pProgressTrackerHash, pCurrentOperations)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\t\tlet tmpCurrentOperations = parseInt(pCurrentOperations);\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (!isNaN(tmpCurrentOperations))\n\t\t{\n\t\t\tthis.updateProgressTrackerStatus(tmpProgressTrackerHash, tmpCurrentOperations);\n\t\t}\n\n\t\tthis.progressTrackers[tmpProgressTrackerHash].EndTime = this.getTimeDelta(tmpProgressTrackerHash);\n\n\t\tthis.solveProgressTrackerStatus(tmpProgressTrackerHash);\n\n\t\treturn this.progressTrackers[tmpProgressTrackerHash];\n\t}\n\n\tprintProgressTrackerStatus(pProgressTrackerHash)\n\t{\n\t\tlet tmpProgressTrackerHash = (typeof(pProgressTrackerHash) == 'string') ? pProgressTrackerHash : 'DefaultProgressTracker';\n\n\t\tif (!this.progressTrackers.hasOwnProperty(tmpProgressTrackerHash))\n\t\t{\n\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTrackerHash} does not exist!  No stats to display.`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst tmpProgressTracker = this.progressTrackers[tmpProgressTrackerHash];\n\n\t\t\tif (tmpProgressTracker.CurrentCount < 1)\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} has no completed operations.  ${tmpProgressTracker.CurrentTime}ms have elapsed since it was started.`);\n\t\t\t}\n\t\t\telse if (tmpProgressTracker.EndTime < 1)\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} is ${tmpProgressTracker.PercentComplete.toFixed(3)}% completed - ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations over ${tmpProgressTracker.CurrentTime}ms (median ${tmpProgressTracker.AverageOperationTime.toFixed(3)} per).  Estimated completion in ${tmpProgressTracker.EstimatedCompletionTime.toFixed(0)}ms or ${(tmpProgressTracker.EstimatedCompletionTime / 1000 / 60).toFixed(2)}minutes`)\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.info(`>> Progress Tracker ${tmpProgressTracker.Hash} is done and completed ${tmpProgressTracker.CurrentCount} / ${tmpProgressTracker.TotalCount} operations in ${tmpProgressTracker.EndTime}ms.`)\n\t\t\t}\n\t\t}\n\t}\n\t/*\n\t * END OF       -->  Logging and Telemetry Helpers\n\t ************************************************************************/\n}\n\nmodule.exports = FableOperation;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst libSimpleGet = require('simple-get');\nconst libCookie = require('cookie');\n\nclass FableServiceRestClient extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.TraceLog = false;\n\t\tif (this.options.TraceLog || this.fable.TraceLog)\n\t\t{\n\t\t\tthis.TraceLog = true;\n\t\t}\n\n\t\tthis.dataFormat = this.fable.services.DataFormat;\n\n\t\tthis.serviceType = 'RestClient';\n\n\t\tthis.cookie = false;\n\n\t\t// This is a function that can be overridden, to allow the management\n\t\t// of the request options before they are passed to the request library.\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tget simpleGet()\n\t{\n\t\treturn libSimpleGet;\n\t}\n\n\tprepareCookies(pRequestOptions)\n\t{\n\t\tif (this.cookie)\n\t\t{\n\t\t\tlet tmpCookieObject = this.cookie;\n\t\t\tif (!pRequestOptions.hasOwnProperty('headers'))\n\t\t\t{\n\t\t\t\tpRequestOptions.headers = {};\n\t\t\t}\n\t\t\tlet tmpCookieKeys = Object.keys(tmpCookieObject);\n\t\t\tif (tmpCookieKeys.length > 0)\n\t\t\t{\n\t\t\t\t// Only grab the first for now.\n\t\t\t\tpRequestOptions.headers.cookie = libCookie.serialize(tmpCookieKeys[0], tmpCookieObject[tmpCookieKeys[0]]);\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn pRequestOptions;\n\t}\n\n\tpreRequest(pOptions)\n\t{\n\t\t// Validate the options object\n\t\tlet tmpOptions = this.prepareCookies(pOptions);\n\n\t\t// Prepend a string to the URL if it exists in the Fable Config\n\t\tif (this.fable.settings.hasOwnProperty('RestClientURLPrefix'))\n\t\t{\n\t\t\ttmpOptions.url = this.fable.settings.RestClientURLPrefix + tmpOptions.url;\n\t\t}\n\n\t\treturn this.prepareRequestOptions(tmpOptions);\n\t}\n\n\texecuteChunkedRequest(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpData.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpData);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteChunkedRequestBinary(pOptions, fCallback)\n\t{\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\ttmpOptions.json = false;\n\t\ttmpOptions.encoding = null;\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpDataBuffer = false;\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// For JSON, the chunk is the serialized object.\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: Potentially create a third option that streams this to a file?  So it doesn't have to hold it all in memory.\n\t\t\t\t\t\tif (!tmpDataBuffer)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.from(pChunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataBuffer = Buffer.concat([tmpDataBuffer, pChunk]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> ${tmpOptions.method} completed data size ${tmpDataBuffer.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, tmpDataBuffer);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\texecuteJSONRequest(pOptions, fCallback)\n\t{\n\t\tpOptions.json = true;\n\n\t\tlet tmpOptions = this.preRequest(pOptions);\n\n\t\tif (!tmpOptions.hasOwnProperty('headers'))\n\t\t{\n\t\t\ttmpOptions.headers = {};\n\t\t}\n\t\t/* Automated headers break some APIs\n\t\tif (!tmpOptions.headers.hasOwnProperty('Content-Type'))\n\t\t{\n\t\t\ttmpOptions.headers['Content-Type'] = 'application/json';\n\t\t}\n\t\t*/\n\n\t\ttmpOptions.RequestStartTime = this.fable.log.getTimeStamp();\n\n\t\tif (this.TraceLog)\n\t\t{\n\t\t\tthis.fable.log.debug(`Beginning ${tmpOptions.method} JSON request to ${tmpOptions.url} at ${tmpOptions.RequestStartTime}`);\n\t\t}\n\n\t\treturn libSimpleGet(tmpOptions,\n\t\t\t(pError, pResponse)=>\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(pError, pResponse);\n\t\t\t\t}\n\n\t\t\t\tif (this.TraceLog)\n\t\t\t\t{\n\t\t\t\t\tlet tmpConnectTime = this.fable.log.getTimeStamp();\n\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} connected in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpConnectTime)}ms code ${pResponse.statusCode}`);\n\t\t\t\t}\n\n\t\t\t\tlet tmpJSONData = '';\n\n\t\t\t\tpResponse.on('data', (pChunk) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpChunkTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`--> JSON ${tmpOptions.method} data chunk size ${pChunk.length}b received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpChunkTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmpJSONData += pChunk;\n\t\t\t\t\t});\n\n\t\t\t\tpResponse.on('end', ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.TraceLog)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpCompletionTime = this.fable.log.getTimeStamp();\n\t\t\t\t\t\t\tthis.fable.log.debug(`==> JSON ${tmpOptions.method} completed - received in ${this.dataFormat.formatTimeDelta(tmpOptions.RequestStartTime, tmpCompletionTime)}ms`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pResponse, JSON.parse(tmpJSONData));\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetJSON(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeJSONRequest(tmpRequestOptions, fCallback);\n\t}\n\n\tputJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PUT JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PUT';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpostJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`POST JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'POST';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tpatchJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`PATCH JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'PATCH';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\theadJSON(pOptions, fCallback)\n\t{\n\t\tif (typeof(pOptions.body) != 'object')\n\t\t{\n\t\t\treturn fCallback(new Error(`HEAD JSON Error Invalid options object`));\n\t\t}\n\n\t\tpOptions.method = 'HEAD';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tdelJSON(pOptions, fCallback)\n\t{\n\t\tpOptions.method = 'DELETE';\n\n\t\treturn this.executeJSONRequest(pOptions, fCallback);\n\t}\n\n\tgetRawText(pOptionsOrURL, fCallback)\n\t{\n\t\tlet tmpRequestOptions = (typeof(pOptionsOrURL) == 'object') ? pOptionsOrURL : {};\n\t\tif (typeof(pOptionsOrURL) == 'string')\n\t\t{\n\t\t\ttmpRequestOptions.url = pOptionsOrURL;\n\t\t}\n\n\t\ttmpRequestOptions.method = 'GET';\n\n\t\treturn this.executeChunkedRequest(tmpRequestOptions, fCallback);\n\t}\n}\n\nmodule.exports = FableServiceRestClient;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nclass FableServiceTemplate extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'Template';\n\n\t\t// These are the exact regex's used in lodash/underscore\n\t\t// TODO: Switch this to precedent\n\t\tthis.Matchers = (\n\t\t\t{\n\t\t\t\tEvaluate: /<%([\\s\\S]+?)%>/g,\n\t\t\t\tInterpolate: /<%=([\\s\\S]+?)%>/g,\n\t\t\t\tEscaper: /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g,\n\t\t\t\tUnescaper: /\\\\(\\\\|'|r|n|t|u2028|u2029)/g,\n\t\t\t\t// This is how underscore does it, so we are keeping it for now.\n\t\t\t\tGuaranteedNonMatch: /.^/\n\t\t\t});\n\n\t\t// This is a helper for the escaper and unescaper functions.\n\t\t// Right now we are going to keep what underscore is doing, but, not forever.\n\t\tthis.templateEscapes = {\n\t\t\t'\\\\': '\\\\',\n\t\t\t\"'\": \"'\",\n\t\t\t'r': '\\r',\n\t\t\t'\\r': 'r',\n\t\t\t'n': '\\n',\n\t\t\t'\\n': 'n',\n\t\t\t't': '\\t',\n\t\t\t'\\t': 't',\n\t\t\t'u2028': '\\u2028',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'u2029': '\\u2029',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\t// This is defined as such to underscore that it is a dynamic programming\n\t\t// function on this class.\n\t\tthis.renderFunction = false;\n        this.templateString = false;\n\t}\n\n\trenderTemplate(pData)\n\t{\n\t\treturn this.renderFunction(pData);\n\t}\n\n\ttemplateFunction(pData)\n\t{\n\t\tlet fRenderTemplateBound = this.renderTemplate.bind(this);\n\t\treturn fRenderTemplateBound;\n\t}\n\n\tbuildTemplateFunction(pTemplateText, pData)\n\t{\n\t\t// For now this is being kept in a weird form ... this is to mimic the old\n\t\t// underscore code until this is rewritten using precedent.\n\t\tthis.TemplateSource = \"__p+='\" + pTemplateText\n\t\t\t.replace(this.Matchers.Escaper,\n\t\t\t\t(pMatch)=>\n\t\t\t\t{\n\t\t\t\t\treturn `\\\\${this.templateEscapes[pMatch]}`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Interpolate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `'+\\n(${decodeURIComponent(pCode)})+\\n'`;\n\t\t\t\t})\n\t\t\t.replace(this.Matchers.Evaluate || this.Matchers.GuaranteedNonMatch,\n\t\t\t\t(pMatch, pCode) =>\n\t\t\t\t{\n\t\t\t\t\treturn `';\\n${decodeURIComponent(pCode)}\\n;__p+='`;\n\t\t\t\t}) + `';\\n`;\n\n\n\t\tthis.TemplateSource = `with(pTemplateDataObject||{}){\\n${this.TemplateSource}}\\n`;\n\t\tthis.TemplateSource = `var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n${this.TemplateSource}return __p;\\n`;\n\n\t\tthis.renderFunction = new Function('pTemplateDataObject', this.TemplateSource);\n\n\t\tif (typeof(pData) != 'undefined')\n\t\t{\n\t\t\treturn this.renderFunction(pData);\n\t\t}\n\n\t\t// Provide the compiled function source as a convenience for build time\n\t\t// precompilation.\n\t\tthis.TemplateSourceCompiled = 'function(obj){\\n' + this.TemplateSource + '}';\n\n\t\treturn this.templateFunction();\n\t}\n}\n\nmodule.exports = FableServiceTemplate;","const libFableServiceBase = require('fable-serviceproviderbase');\n\n// TODO: These are still pretty big -- consider the smaller polyfills\nconst libAsyncWaterfall = require('async.waterfall');\nconst libAsyncEachLimit = require('async.eachlimit');\n\nconst libBigNumber = require('big.js');\n\nclass FableServiceUtility extends libFableServiceBase\n{\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\t//\n\t// NOTE: This does not implement underscore escape expressions\n\t// NOTE: This does not implement underscore magic browser variable assignment\n\t//\n\t// This is an implementation of that.\n\t// TODO: Make this use precedent, add configuration, add debugging.\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n\t\tthis.templates = {};\n\n\t\t// These two functions are used extensively throughout\n\t\tthis.waterfall = libAsyncWaterfall;\n\t\tthis.eachLimit = libAsyncEachLimit;\n\n\t\tthis.bigNumber = libBigNumber;\n\t}\n\n\t// Underscore and lodash have a behavior, _.extend, which merges objects.\n\t// Now that es6 gives us this, use the native thingy.\n\t// Nevermind, the native thing is not stable enough across environments\n\t// Basic shallow copy\n\textend(pDestinationObject, ...pSourceObjects)\n\t{\n\t\tfor (let i = 0; i < pSourceObjects.length; i++)\n\t\t{\n\t\t\tlet tmpSourceObject = pSourceObjects[i];\n\t\t\tif (typeof(tmpSourceObject) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpObjectProperties = Object.keys(tmpSourceObject);\n\t\t\t\tfor (let k = 0; k < tmpObjectProperties.length; k++)\n\t\t\t\t{\n\t\t\t\t\tpDestinationObject[tmpObjectProperties[k]] = tmpSourceObject[tmpObjectProperties[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pDestinationObject;\n\t}\n\n\t// Underscore and lodash have a behavior, _.template, which compiles a\n\t// string-based template with code snippets into simple executable pieces,\n\t// with the added twist of returning a precompiled function ready to go.\n\ttemplate(pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.instantiateServiceProviderWithoutRegistration('Template');\n\t\treturn tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t}\n\n\t// Build a template function from a template hash, and, register it with the service provider\n\tbuildHashedTemplate(pTemplateHash, pTemplateText, pData)\n\t{\n\t\tlet tmpTemplate = this.fable.instantiateServiceProvider('Template', {}, pTemplateHash);\n\t\tthis.templates[pTemplateHash] = tmpTemplate.buildTemplateFunction(pTemplateText, pData);\n\t\treturn this.templates[pTemplateHash];\n\t}\n\n\t// This is a safe, modern version of chunk from underscore\n\t// Algorithm pulled from a mix of these two polyfills:\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\n\t// https://youmightnotneed.com/lodash\n\t// This implementation was most tolerant in browsers.  Uglify can fix the rest.\n\tchunk (pInput, pChunkSize, pChunkCache)\n\t{\n\t\tlet tmpInputArray = [...pInput];\n\t\t// Note lodash defaults to 1, underscore defaults to 0\n\t\tlet tmpChunkSize = (typeof(pChunkSize) == 'number') ? pChunkSize : 0;\n\t\tlet tmpChunkCache = (typeof(pChunkCache) != 'undefined') ? pChunkCache : [];\n\n\t\tif (tmpChunkSize <= 0)\n\t\t{\n\t\t\treturn tmpChunkCache;\n\t\t}\n\n\t\twhile (tmpInputArray.length)\n\t\t{\n\t\t\ttmpChunkCache.push(tmpInputArray.splice(0, tmpChunkSize));\n\t\t}\n\n\t\treturn tmpChunkCache;\n\t}\n\n\t// Convert an ISO string to a javascript date object\n\t// Adapted from https://stackoverflow.com/a/54751179\n\t//\n\t// Takes strings like: 2022-11-04T11:34:45.000Z\n\t//                and: 1986-06-11T09:34:46.012Z+0200\n\t// ... and converts them into javascript timestamps, following the directions of the timezone stuff.\n\t//\n\t// This is not meant to replace the more complex libraries such as moment or luxon.\n\t// This *is* meant to be a simple, small, and fast way to convert ISO strings to dates in engines\n\t// with ultra limited JS capabilities where those don't work.\n\tisoStringToDate (pISOString)\n\t{\n\t\tif (!this.fable.hasOwnProperty('Dates'))\n\t\t{\n\t\t\tthis.fable.instantiateServiceProvider('Dates');\n\t\t}\n\n\t\tlet tmpDate = false;\n\n\t\ttry\n\t\t{\n\t\t\ttmpDate = this.fable.Dates.dayJS.utc(pISOString);\n\t\t}\n\t\tcatch(pError)\n\t\t{\n\t\t\t// TODO: Should this throw?  Doubtful.\n\t\t\tthis.fable.log.error(`Could not parse date string ${pISOString} with dayJS.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (tmpDate)\n\t\t{\n\t\t\treturn tmpDate.toDate();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nmodule.exports = FableServiceUtility;","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\tif ($defineProperty) {\n\t\ttry {\n\t\t\t$defineProperty({}, 'a', { value: 1 });\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// IE 8 has a broken defineProperty\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!hasPropertyDescriptors()) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\nvar test = {\n\tfoo: {}\n};\n\nvar $Object = Object;\n\nmodule.exports = function hasProto() {\n\treturn { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {(o: {}, p: PropertyKey) => p is keyof o} */\nmodule.exports = bind.call(call, $hasOwn);\n","var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// When a boxed property is passed in, it should have quotes of some\n// kind around it.\n//\n// For instance:\n// \t\tMyValues['Name']\n// \t\tMyValues[\"Age\"]\n// \t\tMyValues[`Cost`]\n//\n// This function removes the wrapping quotes.\n//\n// Please note it *DOES NOT PARSE* template literals, so backticks just\n// end up doing the same thing as other quote types.\n//\n// TODO: Should template literals be processed?  If so what state do they have access to?  That should happen here if so.\n// TODO: Make a simple class include library with these\nconst cleanWrapCharacters = (pCharacter, pString) =>\n{\n\tif (pString.startsWith(pCharacter) && pString.endsWith(pCharacter))\n\t{\n\t\treturn pString.substring(1, pString.length - 1);\n\t}\n\telse\n\t{\n\t\treturn pString;\n\t}\n};\n\nmodule.exports = cleanWrapCharacters;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Hash Translation\n*\n* This is a very simple translation table for hashes, which allows the same schema to resolve\n* differently based on a loaded translation table.\n*\n* This is to prevent the requirement for mutating schemas over and over again when we want to\n* reuse the structure but look up data elements by different addresses.\n*\n* One side-effect of this is that a translation table can \"override\" the built-in hashes, since\n* this is always used to resolve hashes before any of the functionCallByHash(pHash, ...) perform\n* their lookups by hash.\n*\n* @class ManyfestHashTranslation\n*/\nclass ManyfestHashTranslation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\n        this.translationTable = {};\n\t}\n\n    translationCount()\n    {\n        return Object.keys(this.translationTable).length;\n    }\n\n    addTranslation(pTranslation)\n    {\n        // This adds a translation in the form of:\n        // { \"SourceHash\": \"DestinationHash\", \"SecondSourceHash\":\"SecondDestinationHash\" }\n        if (typeof(pTranslation) != 'object')\n        {\n            this.logError(`Hash translation addTranslation expected a translation be type object but was passed in ${typeof(pTranslation)}`);\n            return false;\n        }\n\n        let tmpTranslationSources = Object.keys(pTranslation)\n\n        tmpTranslationSources.forEach(\n            (pTranslationSource) =>\n            {\n                if (typeof(pTranslation[pTranslationSource]) != 'string')\n                {\n                    this.logError(`Hash translation addTranslation expected a translation destination hash for [${pTranslationSource}] to be a string but the referrant was a ${typeof(pTranslation[pTranslationSource])}`);\n                }\n                else\n                {\n                    this.translationTable[pTranslationSource] = pTranslation[pTranslationSource];\n                }\n            });\n    }\n\n    removeTranslationHash(pTranslationHash)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslationHash))\n        {\n            delete this.translationTable[pTranslationHash];\n        }\n    }\n\n    // This removes translations.\n    // If passed a string, just removes the single one.\n    // If passed an object, it does all the source keys.\n    removeTranslation(pTranslation)\n    {\n        if (typeof(pTranslation) == 'string')\n        {\n            this.removeTranslationHash(pTranslation);\n            return true;\n        }\n        else if (typeof(pTranslation) == 'object')\n        {\n            let tmpTranslationSources = Object.keys(pTranslation)\n\n            tmpTranslationSources.forEach(\n                (pTranslationSource) =>\n                {\n                    this.removeTranslation(pTranslationSource);\n                });\n            return true;\n        }\n        else\n        {\n            this.logError(`Hash translation removeTranslation expected either a string or an object but the passed-in translation was type ${typeof(pTranslation)}`);\n            return false;\n        }\n    }\n\n    clearTranslations()\n    {\n        this.translationTable = {};\n    }\n\n    translate(pTranslation)\n    {\n        if (this.translationTable.hasOwnProperty(pTranslation))\n        {\n            return this.translationTable[pTranslation];\n        }\n        else\n        {\n            return pTranslation;\n        }\n    }\n}\n\nmodule.exports = ManyfestHashTranslation;","/**\n* @author <steven@velozo.com>\n*/\n\n/**\n* Manyfest simple logging shim (for browser and dependency-free running)\n*/\n\nconst logToConsole = (pLogLine, pLogObject) =>\n{\n    let tmpLogLine = (typeof(pLogLine) === 'string') ? pLogLine : '';\n\n    console.log(`[Manyfest] ${tmpLogLine}`);\n\n    if (pLogObject) console.log(JSON.stringify(pLogObject));\n};\n\nmodule.exports = logToConsole;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Resolver\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressResolverCheckAddressExists\n*/\nclass ManyfestObjectAddressResolverCheckAddressExists\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// Check if an address exists.\n\t//\n\t// This is necessary because the getValueAtAddress function is ambiguous on\n\t// whether the element/property is actually there or not (it returns\n\t// undefined whether the property exists or not).  This function checks for\n\t// existance and returns true or false dependent.\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\t// TODO: Should these throw an error?\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Check if the property exists.\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName].hasOwnProperty(tmpBoxedPropertyReference);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Use the new in operator to see if the element is in the array\n\t\t\t\t\treturn (tmpBoxedPropertyNumber in pObject[tmpBoxedPropertyName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Check if the property exists\n\t\t\t\treturn pObject.hasOwnProperty(pAddress);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// Because this is an impossible address, the property doesn't exist\n\t\t\t\t\t// TODO: Should we throw an error in this condition?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.checkAddressExists(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.checkAddressExists(pObject[tmpSubObjectName], tmpNewAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverCheckAddressExists;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - DeleteValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverDeleteValue\n*/\nclass ManyfestObjectAddressResolverDeleteValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// TODO: Dry me\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pParentAddress)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Count from the end to the beginning so splice doesn't %&%#$ up the array\n\t\t\t\tfor (let i = tmpInputArray.length - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Delete elements end to beginning\n\t\t\t\t\t\ttmpInputArray.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tdelete pObject[tmpObjectPropertyName];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tdelete pObject[pAddress];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.deleteValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.deleteValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverDeleteValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\nlet fParseConditionals = require(`../source/Manyfest-ParseConditionals.js`)\n\n/**\n* Object Address Resolver - GetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n* TODO: Once we validate this pattern is good to go, break these out into\n*       three separate modules.\n*\n* @class ManyfestObjectAddressResolverGetValue\n*/\nclass ManyfestObjectAddressResolverGetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\tcheckFilters(pAddress, pRecord)\n\t{\n\t\treturn fParseConditionals(this, pAddress, pRecord);\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress, pParentAddress, pRootObject)\n\t{\n\t\t// Make sure pObject (the object we are meant to be recursing) is an object (which could be an array or object)\n\t\tif (typeof(pObject) != 'object') return undefined;\n\t\t// Make sure pAddress (the address we are resolving) is a string\n\t\tif (typeof(pAddress) != 'string') return undefined;\n\t\t// Stash the parent address for later resolution\n\t\tlet tmpParentAddress = \"\";\n\t\tif (typeof(pParentAddress) == 'string')\n\t\t{\n\t\t\ttmpParentAddress = pParentAddress;\n\t\t}\n\n\t\t// Set the root object to the passed-in object if it isn't set yet.  This is expected to be the root object.\n\t\tlet tmpRootObject = (typeof(pRootObject) == 'undefined') ? pObject : pRootObject;\n\n\t\t// TODO: Make this work for things like SomeRootObject.Metadata[\"Some.People.Use.Bad.Object.Property.Names\"]\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\t// Adding simple back-navigation in objects\n\t\tif (tmpSeparatorIndex == 0)\n\t\t{\n\t\t\t// Given an address of \"Bundle.Contract.IDContract...Project.IDProject\" the ... would be interpreted as two back-navigations from IDContract.\n\t\t\t// When the address is passed in, though, the first . is already eliminated.  So we can count the dots.\n\t\t\tlet tmpParentAddressParts = tmpParentAddress.split('.');\n\n\t\t\tlet tmpBackNavigationCount = 0;\n\n\t\t\t// Count the number of dots\n\t\t\tfor (let i = 0; i < pAddress.length; i++)\n\t\t\t{\n\t\t\t\tif (pAddress.charAt(i) != '.')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttmpBackNavigationCount++;\n\t\t\t}\n\n\t\t\tlet tmpParentAddressLength = tmpParentAddressParts.length - tmpBackNavigationCount;\n\n\t\t\tif (tmpParentAddressLength < 0)\n\t\t\t{\n\t\t\t\t// We are trying to back navigate more than we can.\n\t\t\t\t// TODO: Should this be undefined or should we bank out at the bottom and try to go forward?\n\t\t\t\t// This seems safest for now.\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are trying to back navigate to a parent object.\n\t\t\t\t// Recurse with the back-propagated parent address, and, the new address without the back-navigation dots.\n\t\t\t\tlet tmpRecurseAddress = pAddress.slice(tmpBackNavigationCount);\n\t\t\t\tif (tmpParentAddressLength > 0)\n\t\t\t\t{\n\t\t\t\t\ttmpRecurseAddress = `${tmpParentAddressParts.slice(0, tmpParentAddressLength).join('.')}.${tmpRecurseAddress}`;\n\t\t\t\t}\n\t\t\t\tthis.logInfo(`Back-navigation detected.  Recursing back to address [${tmpRecurseAddress}]`);\n\t\t\t\treturn this.getValueAtAddress(tmpRootObject, tmpRecurseAddress);\n\t\t\t}\n\t\t}\n\n\t\t// This is the terminal address string (no more dots so the RECUSION ENDS IN HERE somehow)\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if the address refers to a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\n\t\t\t// Check for the Object Set Type marker.\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet tmpInputArray = pObject[tmpBoxedPropertyName];\n\t\t\t\tlet tmpOutputArray = [];\n\t\t\t\tfor (let i = 0; i < tmpInputArray.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpInputArray[i]);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpOutputArray.push(tmpInputArray[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpOutputArray;\n\t\t\t}\n\t\t\t// The object has been flagged as an object set, so treat it as such\n\t\t\telse if (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn pObject[tmpObjectPropertyName];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the point in recursion to return the value in the address\n\t\t\t\tif (typeof(pObject[pAddress]) != null)\n\t\t\t\t{\n\t\t\t\t\treturn pObject[pAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// BOXED ELEMENTS\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// Check if the boxed property is an object.\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.getValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The requirements to detect a boxed set element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\telse if ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket is after the start bracket\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is nothing in the brackets\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex == 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tif (!Array.isArray(pObject[tmpBoxedPropertyName]))\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the array and grab the addresses from there.\n\t\t\t\tlet tmpArrayProperty = pObject[tmpBoxedPropertyName];\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpBoxedPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpArrayProperty.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}[${i}]`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpBoxedPropertyName][i], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// OBJECT SET\n\t\t\t// Note this will not work with a bracket in the same address box set\n\t\t\tlet tmpObjectTypeMarkerIndex = pAddress.indexOf('{}');\n\t\t\tif (tmpObjectTypeMarkerIndex > 0)\n\t\t\t{\n\t\t\t\tlet tmpObjectPropertyName = pAddress.substring(0, tmpObjectTypeMarkerIndex).trim();\n\n\t\t\t\tif (typeof(pObject[tmpObjectPropertyName]) != 'object')\n\t\t\t\t{\n\t\t\t\t\t// We asked for a set from an array but it isnt' an array.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// We need to enumerate the Object and grab the addresses from there.\n\t\t\t\tlet tmpObjectProperty = pObject[tmpObjectPropertyName];\n\t\t\t\tlet tmpObjectPropertyKeys = Object.keys(tmpObjectProperty);\n\t\t\t\t// Managing the parent address is a bit more complex here -- the box will be added for each element.\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpObjectPropertyName}`;\n\t\t\t\t// The container object is where we have the \"Address\":SOMEVALUE pairs\n\t\t\t\tlet tmpContainerObject = {};\n\t\t\t\tfor (let i = 0; i < tmpObjectPropertyKeys.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet tmpPropertyParentAddress = `${tmpParentAddress}.${tmpObjectPropertyKeys[i]}`;\n\t\t\t\t\tlet tmpValue = this.getValueAtAddress(pObject[tmpObjectPropertyName][tmpObjectPropertyKeys[i]], tmpNewAddress, tmpPropertyParentAddress, tmpRootObject);\n\n\t\t\t\t\t// The filtering is complex but allows config-based metaprogramming directly from schema\n\t\t\t\t\tlet tmpKeepRecord = this.checkFilters(pAddress, tmpValue);\n\t\t\t\t\tif (tmpKeepRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpContainerObject[`${tmpPropertyParentAddress}.${tmpNewAddress}`] = tmpValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpContainerObject;\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\t// Continue to manage the parent address for recursion\n\t\t\t\ttmpParentAddress = `${tmpParentAddress}${(tmpParentAddress.length > 0) ? '.' : ''}${tmpSubObjectName}`;\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.getValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, tmpParentAddress, tmpRootObject);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressResolverGetValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\nlet fCleanWrapCharacters = require('./Manyfest-CleanWrapCharacters.js');\n\n/**\n* Object Address Resolver - SetValue\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressSetValue\n*/\nclass ManyfestObjectAddressSetValue\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\n\t\tthis.cleanWrapCharacters = fCleanWrapCharacters;\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\t// Make sure pObject is an object\n\t\tif (typeof(pObject) != 'object') return false;\n\t\t// Make sure pAddress is a string\n\t\tif (typeof(pAddress) != 'string') return false;\n\n\t\tlet tmpSeparatorIndex = pAddress.indexOf('.');\n\n\t\tif (tmpSeparatorIndex == -1)\n\t\t{\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = pAddress.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = pAddress.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[10]\n\t\t\t// \t\tMyValues['Name']\n\t\t\t// \t\tMyValues[\"Age\"]\n\t\t\t// \t\tMyValues[`Cost`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\t// The \"Name\" of the Object contained too the left of the bracket\n\t\t\t\tlet tmpBoxedPropertyName = pAddress.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\t// If the subproperty doesn't test as a proper Object, none of the rest of this is possible.\n\t\t\t\t// This is a rare case where Arrays testing as Objects is useful\n\t\t\t\tif (typeof(pObject[tmpBoxedPropertyName]) !== 'object')\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// The \"Reference\" to the property within it, either an array element or object property\n\t\t\t\tlet tmpBoxedPropertyReference = pAddress.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\t\t\t\t// Attempt to parse the reference as a number, which will be used as an array element\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to treat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynamic object property.\n\t\t\t\t\t// We would expect the property to be wrapped in some kind of quotes so strip them\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Return the value in the property\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyReference] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber] = pValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Now is the time in recursion to set the value in the object\n\t\t\t\tpObject[pAddress] = pValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpSubObjectName = pAddress.substring(0, tmpSeparatorIndex);\n\t\t\tlet tmpNewAddress = pAddress.substring(tmpSeparatorIndex+1);\n\n\t\t\t// Test if the tmpNewAddress is an array or object\n\t\t\t// Check if it's a boxed property\n\t\t\tlet tmpBracketStartIndex = tmpSubObjectName.indexOf('[');\n\t\t\tlet tmpBracketStopIndex = tmpSubObjectName.indexOf(']');\n\t\t\t// Boxed elements look like this:\n\t\t\t// \t\tMyValues[42]\n\t\t\t// \t\tMyValues['Color']\n\t\t\t// \t\tMyValues[\"Weight\"]\n\t\t\t// \t\tMyValues[`Diameter`]\n\t\t\t//\n\t\t\t// When we are passed SomeObject[\"Name\"] this code below recurses as if it were SomeObject.Name\n\t\t\t// The requirements to detect a boxed element are:\n\t\t\t//    1) The start bracket is after character 0\n\t\t\tif ((tmpBracketStartIndex > 0)\n\t\t\t//    2) The end bracket has something between them\n\t\t\t\t&& (tmpBracketStopIndex > tmpBracketStartIndex)\n\t\t\t//    3) There is data\n\t\t\t\t&& (tmpBracketStopIndex - tmpBracketStartIndex > 1))\n\t\t\t{\n\t\t\t\tlet tmpBoxedPropertyName = tmpSubObjectName.substring(0, tmpBracketStartIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyReference = tmpSubObjectName.substring(tmpBracketStartIndex+1, tmpBracketStopIndex).trim();\n\n\t\t\t\tlet tmpBoxedPropertyNumber = parseInt(tmpBoxedPropertyReference, 10);\n\n\t\t\t\t// Guard: If the referrant is a number and the boxed property is not an array, or vice versa, return undefined.\n\t\t\t\t//        This seems confusing to me at first read, so explaination:\n\t\t\t\t//        Is the Boxed Object an Array?  TRUE\n\t\t\t\t//        And is the Reference inside the boxed Object not a number? TRUE\n\t\t\t\t//        -->  So when these are in agreement, it's an impossible access state\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[1].Tardy\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an object, so the [1].Tardy is not possible to access\n\t\t\t\t// This could be a failure in the recursion chain because they passed something like this in:\n\t\t\t\t//    StudentData.Sections.Algebra.Students[\"JaneDoe\"].Grade\n\t\t\t\t//       BUT\n\t\t\t\t//         StudentData.Sections.Algebra.Students is an array, so the [\"JaneDoe\"].Grade is not possible to access\n\t\t\t\t// TODO: Should this be an error or something?  Should we keep a log of failures like this?\n\t\t\t\tif (Array.isArray(pObject[tmpBoxedPropertyName]) == isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t//This is a bracketed value\n\t\t\t\t//    4) If the middle part is *only* a number (no single, double or backtick quotes) it is an array element,\n\t\t\t\t//       otherwise we will try to reat it as a dynamic object property.\n\t\t\t\tif (isNaN(tmpBoxedPropertyNumber))\n\t\t\t\t{\n\t\t\t\t\t// This isn't a number ... let's treat it as a dynanmic object property.\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('\"', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters('`', tmpBoxedPropertyReference);\n\t\t\t\t\ttmpBoxedPropertyReference = this.cleanWrapCharacters(\"'\", tmpBoxedPropertyReference);\n\n\t\t\t\t\t// Recurse directly into the subobject\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyReference], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We parsed a valid number out of the boxed property name, so recurse into the array\n\t\t\t\t\treturn this.setValueAtAddress(pObject[tmpBoxedPropertyName][tmpBoxedPropertyNumber], tmpNewAddress, pValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is an object property already named for the sub object, but it isn't an object\n\t\t\t// then the system can't set the value in there.  Error and abort!\n\t\t\tif (pObject.hasOwnProperty(tmpSubObjectName) && typeof(pObject[tmpSubObjectName]) !== 'object')\n\t\t\t{\n\t\t\t\tif (!pObject.hasOwnProperty('__ERROR'))\n\t\t\t\t\tpObject['__ERROR'] = {};\n\t\t\t\t// Put it in an error object so data isn't lost\n\t\t\t\tpObject['__ERROR'][pAddress] = pValue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (pObject.hasOwnProperty(tmpSubObjectName))\n\t\t\t{\n\t\t\t\t// If there is already a subobject pass that to the recursive thingy\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Create a subobject and then pass that\n\t\t\t\tpObject[tmpSubObjectName] = {};\n\t\t\t\treturn this.setValueAtAddress(pObject[tmpSubObjectName], tmpNewAddress, pValue);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressSetValue;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Object Address Generation\n*\n* Automagically generate addresses and properties based on a passed-in object,\n* to be used for easy creation of schemas.  Meant to simplify the lives of\n* developers wanting to create schemas without typing a bunch of stuff.\n*\n* IMPORTANT NOTE: This code is intentionally more verbose than necessary, to\n*                 be extremely clear what is going on in the recursion for\n*                 each of the three address resolution functions.\n*\n*                 Although there is some opportunity to repeat ourselves a\n*                 bit less in this codebase (e.g. with detection of arrays\n*                 versus objects versus direct properties), it can make\n*                 debugging.. challenging.  The minified version of the code\n*                 optimizes out almost anything repeated in here.  So please\n*                 be kind and rewind... meaning please keep the codebase less\n*                 terse and more verbose so humans can comprehend it.\n*\n*\n* @class ManyfestObjectAddressGeneration\n*/\nclass ManyfestObjectAddressGeneration\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) == 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) == 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n\t// generateAddressses\n\t//\n\t// This flattens an object into a set of key:value pairs for *EVERY SINGLE\n\t// POSSIBLE ADDRESS* in the object.  It can get ... really insane really\n\t// quickly.  This is not meant to be used directly to generate schemas, but\n\t// instead as a starting point for scripts or UIs.\n\t//\n\t// This will return a mega set of key:value pairs with all possible schema\n\t// permutations and default values (when not an object) and everything else.\n\tgenerateAddressses (pObject, pBaseAddress, pSchema)\n\t{\n\t\tlet tmpBaseAddress = (typeof(pBaseAddress) == 'string') ? pBaseAddress : '';\n\t\tlet tmpSchema = (typeof(pSchema) == 'object') ? pSchema : {};\n\n\t\tlet tmpObjectType = typeof(pObject);\n\n\t\tlet tmpSchemaObjectEntry = (\n\t\t\t{\n\t\t\t\tAddress: tmpBaseAddress,\n\t\t\t\tHash: tmpBaseAddress,\n\t\t\t\tName: tmpBaseAddress,\n\t\t\t\t// This is so scripts and UI controls can force a developer to opt-in.\n\t\t\t\tInSchema: false\n\t\t\t}\n\t\t)\n\n\t\tif ((tmpObjectType == 'object') && (pObject == null))\n\t\t{\n\t\t\ttmpObjectType = 'null';\n\t\t}\n\n\t\tswitch(tmpObjectType)\n\t\t{\n\t\t\tcase 'string':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'String';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\tcase 'bigint':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Number';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\tcase 'null':\n\t\t\t\ttmpSchemaObjectEntry.DataType = 'Any';\n\t\t\t\ttmpSchemaObjectEntry.Default = pObject;\n\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif (Array.isArray(pObject))\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Array';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < pObject.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[i], `${tmpBaseAddress}[${i}]`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmpSchemaObjectEntry.DataType = 'Object';\n\t\t\t\t\tif (tmpBaseAddress != '')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpSchema[tmpBaseAddress] = tmpSchemaObjectEntry;\n\t\t\t\t\t\ttmpBaseAddress += '.';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpObjectProperties = Object.keys(pObject);\n\n\t\t\t\t\tfor (let i = 0; i < tmpObjectProperties.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.generateAddressses(pObject[tmpObjectProperties[i]], `${tmpBaseAddress}${tmpObjectProperties[i]}`, tmpSchema);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'symbol':\n\t\t\tcase 'function':\n\t\t\t\t// Symbols and functions neither recurse nor get added to the schema\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tmpSchema;\n\t}\n};\n\nmodule.exports = ManyfestObjectAddressGeneration;","// Given a string, parse out any conditional expressions and set whether or not to keep the record.\n//\n// For instance:\n// \t\t'files[]<<~?format,==,Thumbnail?~>>'\n//      'files[]<<~?format,==,Metadata?~>>'\n//      'files[]<<~?size,>,4000?~>>'\n//\n// The wrapping parts are the <<~? and ?~>> megabrackets.\n//\n// The function does not need to alter the string -- just check the conditionals within.\n\n// TODO: Consider making this an es6 class\n\n// Let's use indexOf since it is apparently the fastest.\nconst _ConditionalStanzaStart = '<<~?';\nconst _ConditionalStanzaStartLength = _ConditionalStanzaStart.length;\nconst _ConditionalStanzaEnd = '?~>>';\nconst _ConditionalStanzaEndLength = _ConditionalStanzaEnd.length;\n\n// Test the condition of a value in a record\nconst testCondition = (pManyfest, pRecord, pSearchAddress, pSearchComparator, pValue) =>\n{\n\tswitch(pSearchComparator)\n\t{\n\t\tcase '!=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) != pValue);\n\t\t\tbreak;\n\t\tcase '<':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) < pValue);\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) > pValue);\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) <= pValue);\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) >= pValue);\n\t\t\tbreak;\n\t\tcase '===':\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) === pValue);\n\t\t\tbreak;\n\t\tcase '==':\n\t\tdefault:\n\t\t\treturn (pManyfest.getValueAtAddress(pRecord, pSearchAddress) == pValue);\n\t\t\tbreak;\n\t}\n};\n\nconst parseConditionals = (pManyfest, pAddress, pRecord) =>\n{\n\tlet tmpKeepRecord = true;\n\n\t/*\n\t\tAlgorithm is simple:\n\n\t\t1.  Enuerate start points\n\n\t\t2.  Find stop points within each start point\n\t\t3. Check the conditional\n\t*/\n\n\tlet tmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart);\n\n\twhile (tmpStartIndex != -1)\n\t{\n\t\tlet tmpStopIndex = pAddress.indexOf(_ConditionalStanzaEnd, tmpStartIndex+_ConditionalStanzaStartLength);\n\n\t\tif (tmpStopIndex != -1)\n\t\t{\n\t\t\tlet tmpMagicComparisonPatternSet = pAddress.substring(tmpStartIndex+_ConditionalStanzaStartLength, tmpStopIndex).split(',');\n\n\t\t\tlet tmpSearchAddress = tmpMagicComparisonPatternSet[0];\n\t\t\tlet tmpSearchComparator = tmpMagicComparisonPatternSet[1];\n\t\t\tlet tmpSearchValue = tmpMagicComparisonPatternSet[2];\n\n\t\t\t// Process the piece\n\t\t\ttmpKeepRecord = tmpKeepRecord && testCondition(pManyfest, pRecord, tmpSearchAddress, tmpSearchComparator, tmpSearchValue);\n\t\t\ttmpStartIndex = pAddress.indexOf(_ConditionalStanzaStart, tmpStopIndex+_ConditionalStanzaEndLength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpStartIndex = -1;\n\t\t}\n\t\t\n\t}\n\n\treturn tmpKeepRecord;\n}\n\nmodule.exports = parseConditionals;","/**\n* @author <steven@velozo.com>\n*/\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\n/**\n* Schema Manipulation Functions\n*\n* @class ManyfestSchemaManipulation\n*/\nclass ManyfestSchemaManipulation\n{\n\tconstructor(pInfoLog, pErrorLog)\n\t{\n\t\t// Wire in logging\n\t\tthis.logInfo = (typeof(pInfoLog) === 'function') ? pInfoLog : libSimpleLog;\n\t\tthis.logError = (typeof(pErrorLog) === 'function') ? pErrorLog : libSimpleLog;\n\t}\n\n    // This translates the default address mappings to something different.\n    //\n    // For instance you can pass in manyfest schema descriptor object:\n    // \t{\n\t//\t  \"Address.Of.a\": { \"Hash\": \"a\", \"Type\": \"Number\" },\n\t//\t  \"Address.Of.b\": { \"Hash\": \"b\", \"Type\": \"Number\" }\n\t//  }\n    //\n    //\n    // And then an address mapping (basically a Hash->Address map)\n    //  {\n    //    \"a\": \"New.Address.Of.a\",\n    //    \"b\": \"New.Address.Of.b\"\n    //  }\n    //\n    // NOTE: This mutates the schema object permanently, altering the base hash.\n    //       If there is a collision with an existing address, it can lead to overwrites.\n    // TODO: Discuss what should happen on collisions.\n\tresolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\tif (typeof(pManyfestSchemaDescriptors) != 'object')\n\t\t{\n\t\t\tthis.logError(`Attempted to resolve address mapping but the descriptor was not an object.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof(pAddressMapping) != 'object')\n\t\t{\n\t\t\t// No mappings were passed in\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the arrays of both the schema definition and the hash mapping\n\t\tlet tmpManyfestAddresses = Object.keys(pManyfestSchemaDescriptors);\n\t\tlet tmpHashMapping = {};\n\t\ttmpManyfestAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tif (pManyfestSchemaDescriptors[pAddress].hasOwnProperty('Hash'))\n\t\t\t\t{\n\t\t\t\t\ttmpHashMapping[pManyfestSchemaDescriptors[pAddress].Hash] = pAddress;\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet tmpAddressMappingSet = Object.keys(pAddressMapping);\n\n\t\ttmpAddressMappingSet.forEach(\n\t\t\t(pInputAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpNewDescriptorAddress = pAddressMapping[pInputAddress];\n\t\t\t\tlet tmpOldDescriptorAddress = false;\n\t\t\t\tlet tmpDescriptor = false;\n\n\t\t\t\t// See if there is a matching descriptor either by Address directly or Hash\n\t\t\t\tif (pManyfestSchemaDescriptors.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = pInputAddress;\n\t\t\t\t}\n\t\t\t\telse if (tmpHashMapping.hasOwnProperty(pInputAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpOldDescriptorAddress = tmpHashMapping[pInputAddress];\n\t\t\t\t}\n\n\t\t\t\t// If there was a matching descriptor in the manifest, store it in the temporary descriptor\n\t\t\t\tif (tmpOldDescriptorAddress)\n\t\t\t\t{\n\t\t\t\t\ttmpDescriptor = pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t\tdelete pManyfestSchemaDescriptors[tmpOldDescriptorAddress];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Create a new descriptor!  Map it to the input address.\n\t\t\t\t\ttmpDescriptor = { Hash:pInputAddress };\n\t\t\t\t}\n\n\t\t\t\t// Now re-add the descriptor to the manyfest schema\n\t\t\t\tpManyfestSchemaDescriptors[tmpNewDescriptorAddress] = tmpDescriptor;\n\t\t\t});\n\n\t\treturn true;\n\t}\n\n\tsafeResolveAddressMappings(pManyfestSchemaDescriptors, pAddressMapping)\n\t{\n\t\t// This returns the descriptors as a new object, safely remapping without mutating the original schema Descriptors\n\t\tlet tmpManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptors));\n\t\tthis.resolveAddressMappings(tmpManyfestSchemaDescriptors, pAddressMapping);\n\t\treturn tmpManyfestSchemaDescriptors;\n\t}\n\n\tmergeAddressMappings(pManyfestSchemaDescriptorsDestination, pManyfestSchemaDescriptorsSource)\n\t{\n\t\tif ((typeof(pManyfestSchemaDescriptorsSource) != 'object') || (typeof(pManyfestSchemaDescriptorsDestination) != 'object'))\n\t\t{\n\t\t\tthis.logError(`Attempted to merge two schema descriptors but both were not objects.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpSource = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsSource));\n\t\tlet tmpNewManyfestSchemaDescriptors = JSON.parse(JSON.stringify(pManyfestSchemaDescriptorsDestination));\n\n\t\t// The first passed-in set of descriptors takes precedence.\n\t\tlet tmpDescriptorAddresses = Object.keys(tmpSource);\n\n\t\ttmpDescriptorAddresses.forEach(\n\t\t\t(pDescriptorAddress) =>\n\t\t\t{\n\t\t\t\tif (!tmpNewManyfestSchemaDescriptors.hasOwnProperty(pDescriptorAddress))\n\t\t\t\t{\n\t\t\t\t\ttmpNewManyfestSchemaDescriptors[pDescriptorAddress] = tmpSource[pDescriptorAddress];\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpNewManyfestSchemaDescriptors;\n\t}\n}\n\nmodule.exports = ManyfestSchemaManipulation;","/**\n* @author <steven@velozo.com>\n*/\nconst libFableServiceProviderBase = require('fable-serviceproviderbase');\n\nlet libSimpleLog = require('./Manyfest-LogToConsole.js');\n\nlet libHashTranslation = require('./Manyfest-HashTranslation.js');\nlet libObjectAddressCheckAddressExists = require('./Manyfest-ObjectAddress-CheckAddressExists.js');\nlet libObjectAddressGetValue = require('./Manyfest-ObjectAddress-GetValue.js');\nlet libObjectAddressSetValue = require('./Manyfest-ObjectAddress-SetValue.js');\nlet libObjectAddressDeleteValue = require('./Manyfest-ObjectAddress-DeleteValue.js');\nlet libObjectAddressGeneration = require('./Manyfest-ObjectAddressGeneration.js');\nlet libSchemaManipulation = require('./Manyfest-SchemaManipulation.js');\n\nconst _DefaultConfiguration = { Scope:'DEFAULT', Descriptors: {} }\n\n/**\n* Manyfest object address-based descriptions and manipulations.\n*\n* @class Manyfest\n*/\nclass Manyfest extends libFableServiceProviderBase\n{\n\tconstructor(pFable, pManifest, pServiceHash)\n\t{\n\t\tif (pFable === undefined)\n\t\t{\n\t\t\tsuper({});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsuper(pFable, pManifest, pServiceHash);\n\t\t}\n\n        this.serviceType = 'Manifest';\n\n\t\t// Wire in logging\n\t\tthis.logInfo = libSimpleLog;\n\t\tthis.logError = libSimpleLog;\n\n\t\t// Create an object address resolver and map in the functions\n\t\tthis.objectAddressCheckAddressExists = new libObjectAddressCheckAddressExists(this.logInfo, this.logError);\n\t\tthis.objectAddressGetValue = new libObjectAddressGetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressSetValue = new libObjectAddressSetValue(this.logInfo, this.logError);\n\t\tthis.objectAddressDeleteValue = new libObjectAddressDeleteValue(this.logInfo, this.logError);\n\n\t\tif (!this.options.hasOwnProperty('defaultValues'))\n\t\t{\n\t\t\tthis.options.defaultValues = (\n\t\t\t\t{\n\t\t\t\t\t\"String\": \"\",\n\t\t\t\t\t\"Number\": 0,\n\t\t\t\t\t\"Float\": 0.0,\n\t\t\t\t\t\"Integer\": 0,\n\t\t\t\t\t\"Boolean\": false,\n\t\t\t\t\t\"Binary\": 0,\n\t\t\t\t\t\"DateTime\": 0,\n\t\t\t\t\t\"Array\": [],\n\t\t\t\t\t\"Object\": {},\n\t\t\t\t\t\"Null\": null\n\t\t\t\t});\n\t\t}\n\t\tif (!this.options.hasOwnProperty('strict'))\n\t\t{\n\t\t\tthis.options.strict = false;\n\t\t}\n\n\t\tthis.scope = undefined;\n\t\tthis.elementAddresses = undefined;\n\t\tthis.elementHashes = undefined;\n\t\tthis.elementDescriptors = undefined;\n\n\t\tthis.reset();\n\n\t\tif (typeof(this.options) === 'object')\n\t\t{\n\t\t\tthis.loadManifest(this.options);\n\t\t}\n\n\t\tthis.schemaManipulations = new libSchemaManipulation(this.logInfo, this.logError);\n\t\tthis.objectAddressGeneration = new libObjectAddressGeneration(this.logInfo, this.logError);\n\n\t\tthis.hashTranslations = new libHashTranslation(this.logInfo, this.logError);\n\t}\n\n\t/*************************************************************************\n\t * Schema Manifest Loading, Reading, Manipulation and Serialization Functions\n\t */\n\n\t// Reset critical manifest properties\n\treset()\n\t{\n\t\tthis.scope = 'DEFAULT';\n\t\tthis.elementAddresses = [];\n\t\tthis.elementHashes = {};\n\t\tthis.elementDescriptors = {};\n\t}\n\n\tclone()\n\t{\n\t\t// Make a copy of the options in-place\n\t\tlet tmpNewOptions = JSON.parse(JSON.stringify(this.options));\n\n\t\tlet tmpNewManyfest = new Manyfest(this.getManifest(), this.logInfo, this.logError, tmpNewOptions);\n\n\t\t// Import the hash translations\n\t\ttmpNewManyfest.hashTranslations.addTranslation(this.hashTranslations.translationTable);\n\n\t\treturn tmpNewManyfest;\n\t}\n\n\t// Deserialize a Manifest from a string\n\tdeserialize(pManifestString)\n\t{\n\t\t// TODO: Add guards for bad manifest string\n\t\treturn this.loadManifest(JSON.parse(pManifestString));\n\t}\n\n\t// Load a manifest from an object\n\tloadManifest(pManifest)\n\t{\n\t\tif (typeof(pManifest) !== 'object')\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading manifest; expecting an object but parameter was type ${typeof(pManifest)}.`);\n\t\t}\n\n\t\tlet tmpManifest = (typeof(pManifest) == 'object') ? pManifest : {};\n\n\t\tlet tmpDescriptorKeys = Object.keys(_DefaultConfiguration);\n\n\t\tfor (let i = 0; i < tmpDescriptorKeys.length; i++)\n\t\t{\n\t\t\tif (!tmpManifest.hasOwnProperty(tmpDescriptorKeys[i]))\n\t\t\t{\n\t\t\t\ttmpManifest[tmpDescriptorKeys[i]] = JSON.parse(JSON.stringify(_DefaultConfiguration[tmpDescriptorKeys[i]]));\n\t\t\t}\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Scope'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Scope) === 'string')\n\t\t\t{\n\t\t\t\tthis.scope = tmpManifest.Scope;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest; expecting a string but property was type ${typeof(tmpManifest.Scope)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading scope from manifest object.  Property \"Scope\" does not exist in the root of the object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('Descriptors'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.Descriptors) === 'object')\n\t\t\t{\n\t\t\t\tlet tmpDescriptionAddresses = Object.keys(tmpManifest.Descriptors);\n\t\t\t\tfor (let i = 0; i < tmpDescriptionAddresses.length; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.addDescriptor(tmpDescriptionAddresses[i], tmpManifest.Descriptors[tmpDescriptionAddresses[i]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.logError(`(${this.scope}) Error loading description object from manifest object.  Expecting an object in 'Manifest.Descriptors' but the property was type ${typeof(tmpManifest.Descriptors)}.`, tmpManifest);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object description from manifest object.  Property \"Descriptors\" does not exist in the root of the Manifest object.`, tmpManifest);\n\t\t}\n\n\t\tif (tmpManifest.hasOwnProperty('HashTranslations'))\n\t\t{\n\t\t\tif (typeof(tmpManifest.HashTranslations) === 'object')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < tmpManifest.HashTranslations.length; i++)\n\t\t\t\t{\n\t\t\t\t\t// Each translation is \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Serialize the Manifest to a string\n\tserialize()\n\t{\n\t\treturn JSON.stringify(this.getManifest());\n\t}\n\n\tgetManifest()\n\t{\n\t\treturn (\n\t\t\t{\n\t\t\t\tScope: this.scope,\n\t\t\t\tDescriptors: JSON.parse(JSON.stringify(this.elementDescriptors)),\n\t\t\t\tHashTranslations: JSON.parse(JSON.stringify(this.hashTranslations.translationTable))\n\t\t\t});\n\t}\n\n\t// Add a descriptor to the manifest\n\taddDescriptor(pAddress, pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) === 'object')\n\t\t{\n\t\t\t// Add the Address into the Descriptor if it doesn't exist:\n\t\t\tif (!pDescriptor.hasOwnProperty('Address'))\n\t\t\t{\n\t\t\t\tpDescriptor.Address = pAddress;\n\t\t\t}\n\n\t\t\tif (!this.elementDescriptors.hasOwnProperty(pAddress))\n\t\t\t{\n\t\t\t\tthis.elementAddresses.push(pAddress);\n\t\t\t}\n\n\t\t\t// Add the element descriptor to the schema\n\t\t\tthis.elementDescriptors[pAddress] = pDescriptor;\n\n\t\t\t// Always add the address as a hash\n\t\t\tthis.elementHashes[pAddress] = pAddress;\n\n\t\t\tif (pDescriptor.hasOwnProperty('Hash'))\n\t\t\t{\n\t\t\t\t// TODO: Check if this is a good idea or not..\n\t\t\t\t//       Collisions are bound to happen with both representations of the address/hash in here and developers being able to create their own hashes.\n\t\t\t\tthis.elementHashes[pDescriptor.Hash] = pAddress;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpDescriptor.Hash = pAddress;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.logError(`(${this.scope}) Error loading object descriptor for address '${pAddress}' from manifest object.  Expecting an object but property was type ${typeof(pDescriptor)}.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetDescriptorByHash(pHash)\n\t{\n\t\treturn this.getDescriptor(this.resolveHashAddress(pHash));\n\t}\n\n\tgetDescriptor(pAddress)\n\t{\n\t\treturn this.elementDescriptors[pAddress];\n\t}\n\n\t// execute an action function for each descriptor\n\teachDescriptor(fAction)\n\t{\n        let tmpDescriptorAddresses = Object.keys(this.elementDescriptors);\n        for (let i = 0; i < tmpDescriptorAddresses.length; i++)\n        {\n            fAction(this.elementDescriptors[tmpDescriptorAddresses[i]]);\n        }\n\n\t}\n\n\t/*************************************************************************\n\t * Beginning of Object Manipulation (read & write) Functions\n\t */\n\t// Check if an element exists by its hash\n\tcheckAddressExistsByHash (pObject, pHash)\n\t{\n\t\treturn this.checkAddressExists(pObject,this.resolveHashAddress(pHash));\n\t}\n\n\t// Check if an element exists at an address\n\tcheckAddressExists (pObject, pAddress)\n\t{\n\t\treturn this.objectAddressCheckAddressExists.checkAddressExists(pObject, pAddress);\n\t}\n\n\t// Turn a hash into an address, factoring in the translation table.\n\tresolveHashAddress(pHash)\n\t{\n\t\tlet tmpAddress = undefined;\n\n\t\tlet tmpInElementHashTable = this.elementHashes.hasOwnProperty(pHash);\n\t\tlet tmpInTranslationTable = this.hashTranslations.translationTable.hasOwnProperty(pHash);\n\n\t\t// The most straightforward: the hash exists, no translations.\n\t\tif (tmpInElementHashTable && !tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[pHash];\n\t\t}\n\t\t// There is a translation from one hash to another, and, the elementHashes contains the pointer end\n\t\telse if (tmpInTranslationTable && this.elementHashes.hasOwnProperty(this.hashTranslations.translate(pHash)))\n\t\t{\n\t\t\ttmpAddress = this.elementHashes[this.hashTranslations.translate(pHash)];\n\t\t}\n\t\t// Use the level of indirection only in the Translation Table\n\t\telse if (tmpInTranslationTable)\n\t\t{\n\t\t\ttmpAddress = this.hashTranslations.translate(pHash);\n\t\t}\n\t\t// Just treat the hash as an address.\n\t\t// TODO: Discuss this ... it is magic but controversial\n\t\telse\n\t\t{\n\t\t\ttmpAddress = pHash;\n\t\t}\n\n\t\treturn tmpAddress;\n\t}\n\n\t// Get the value of an element by its hash\n\tgetValueByHash (pObject, pHash)\n\t{\n\t\tlet tmpValue = this.getValueAtAddress(pObject, this.resolveHashAddress(pHash));\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptorByHash(pHash));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Get the value of an element at an address\n\tgetValueAtAddress (pObject, pAddress)\n\t{\n\t\tlet tmpValue = this.objectAddressGetValue.getValueAtAddress(pObject, pAddress);\n\n\t\tif (typeof(tmpValue) == 'undefined')\n\t\t{\n\t\t\t// Try to get a default if it exists\n\t\t\ttmpValue = this.getDefaultValue(this.getDescriptor(pAddress));\n\t\t}\n\n\t\treturn tmpValue;\n\t}\n\n\t// Set the value of an element by its hash\n\tsetValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.setValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Set the value of an element at an address\n\tsetValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressSetValue.setValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Delete the value of an element by its hash\n\tdeleteValueByHash(pObject, pHash, pValue)\n\t{\n\t\treturn this.deleteValueAtAddress(pObject, this.resolveHashAddress(pHash), pValue);\n\t}\n\n\t// Delete the value of an element at an address\n\tdeleteValueAtAddress (pObject, pAddress, pValue)\n\t{\n\t\treturn this.objectAddressDeleteValue.deleteValueAtAddress(pObject, pAddress, pValue);\n\t}\n\n\t// Validate the consistency of an object against the schema\n\tvalidate(pObject)\n\t{\n\t\tlet tmpValidationData =\n\t\t{\n\t\t\tError: null,\n\t\t\tErrors: [],\n\t\t\tMissingElements:[]\n\t\t};\n\n\t\tif (typeof(pObject) !== 'object')\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Expected passed in object to be type object but was passed in ${typeof(pObject)}`);\n\t\t}\n\n\t\tlet addValidationError = (pAddress, pErrorMessage) =>\n\t\t{\n\t\t\ttmpValidationData.Error = true;\n\t\t\ttmpValidationData.Errors.push(`Element at address \"${pAddress}\" ${pErrorMessage}.`);\n\t\t};\n\n\t\t// Now enumerate through the values and check for anomalies based on the schema\n\t\tfor (let i = 0; i < this.elementAddresses.length; i++)\n\t\t{\n\t\t\tlet tmpDescriptor = this.getDescriptor(this.elementAddresses[i]);\n\t\t\tlet tmpValueExists = this.checkAddressExists(pObject, tmpDescriptor.Address);\n\t\t\tlet tmpValue = this.getValueAtAddress(pObject, tmpDescriptor.Address);\n\n\t\t\tif ((typeof(tmpValue) == 'undefined') || !tmpValueExists)\n\t\t\t{\n\t\t\t\t// This will technically mean that `Object.Some.Value = undefined` will end up showing as \"missing\"\n\t\t\t\t// TODO: Do we want to do a different message based on if the property exists but is undefined?\n\t\t\t\ttmpValidationData.MissingElements.push(tmpDescriptor.Address);\n\t\t\t\tif (tmpDescriptor.Required || this.options.strict)\n\t\t\t\t{\n\t\t\t\t\taddValidationError(tmpDescriptor.Address, 'is flagged REQUIRED but is not set in the object');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now see if there is a data type specified for this element\n\t\t\tif (tmpDescriptor.DataType)\n\t\t\t{\n\t\t\t\tlet tmpElementType = typeof(tmpValue);\n\t\t\t\tswitch(tmpDescriptor.DataType.toString().trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet tmpValueString = tmpValue.toString();\n\t\t\t\t\t\t\tif (tmpValueString.indexOf('.') > -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// TODO: Is this an error?\n\t\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but has a decimal point in the number.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tif (tmpElementType != 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DateTime':\n\t\t\t\t\t\tlet tmpValueDate = new Date(tmpValue);\n\t\t\t\t\t\tif (tmpValueDate.toString() == 'Invalid Date')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} but is not parsable as a Date by Javascript`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Check if this is a string, in the default case\n\t\t\t\t\t\t// Note this is only when a DataType is specified and it is an unrecognized data type.\n\t\t\t\t\t\tif (tmpElementType != 'string')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddValidationError(tmpDescriptor.Address, `has a DataType ${tmpDescriptor.DataType} (which auto-converted to String because it was unrecognized) but is of the type ${tmpElementType}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tmpValidationData;\n\t}\n\n\t// Returns a default value, or, the default value for the data type (which is overridable with configuration)\n\tgetDefaultValue(pDescriptor)\n\t{\n\t\tif (typeof(pDescriptor) != 'object')\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (pDescriptor.hasOwnProperty('Default'))\n\t\t{\n\t\t\treturn pDescriptor.Default;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Default to a null if it doesn't have a type specified.\n\t\t\t// This will ensure a placeholder is created but isn't misinterpreted.\n\t\t\tlet tmpDataType = (pDescriptor.hasOwnProperty('DataType')) ? pDescriptor.DataType : 'String';\n\t\t\tif (this.options.defaultValues.hasOwnProperty(tmpDataType))\n\t\t\t{\n\t\t\t\treturn this.options.defaultValues[tmpDataType];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// give up and return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enumerate through the schema and populate default values if they don't exist.\n\tpopulateDefaults(pObject, pOverwriteProperties)\n\t{\n\t\treturn this.populateObject(pObject, pOverwriteProperties,\n\t\t\t// This just sets up a simple filter to see if there is a default set.\n\t\t\t(pDescriptor) =>\n\t\t\t{\n\t\t\t\treturn pDescriptor.hasOwnProperty('Default');\n\t\t\t});\n\t}\n\n\t// Forcefully populate all values even if they don't have defaults.\n\t// Based on type, this can do unexpected things.\n\tpopulateObject(pObject, pOverwriteProperties, fFilter)\n\t{\n\t\t// Automatically create an object if one isn't passed in.\n\t\tlet tmpObject = (typeof(pObject) === 'object') ? pObject : {};\n\t\t// Default to *NOT OVERWRITING* properties\n\t\tlet tmpOverwriteProperties = (typeof(pOverwriteProperties) == 'undefined') ? false : pOverwriteProperties;\n\t\t// This is a filter function, which is passed the schema and allows complex filtering of population\n\t\t// The default filter function just returns true, populating everything.\n\t\tlet tmpFilterFunction = (typeof(fFilter) == 'function') ? fFilter : (pDescriptor) => { return true; };\n\n\t\tthis.elementAddresses.forEach(\n\t\t\t(pAddress) =>\n\t\t\t{\n\t\t\t\tlet tmpDescriptor = this.getDescriptor(pAddress);\n\t\t\t\t// Check the filter function to see if this is an address we want to set the value for.\n\t\t\t\tif (tmpFilterFunction(tmpDescriptor))\n\t\t\t\t{\n\t\t\t\t\t// If we are overwriting properties OR the property does not exist\n\t\t\t\t\tif (tmpOverwriteProperties || !this.checkAddressExists(tmpObject, pAddress))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setValueAtAddress(tmpObject, pAddress, this.getDefaultValue(tmpDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn tmpObject;\n\t}\n};\n\nmodule.exports = Manyfest;","var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (obj === global) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","const libFableServiceBase = require('fable-serviceproviderbase')\n\nconst defaultPictSettings = (\n\t{\n\t\tName: 'DefaultPictApplication',\n\n\t\t// The main \"viewport\" is the view that is used to host our application\n\t\tMainViewportViewIdentifier: 'Default-View',\n\t\tMainViewportRenderableHash: false,\n\t\tMainViewportDestinationAddress: false,\n\t\tMainViewportDefaultDataAddress: false,\n\n\t\t// Whether or not we should automatically render the main viewport after we initialize the pict application\n\t\tAutoSolveAfterInitialize: true,\n\t\tAutoRenderMainViewportViewAfterInitialize: true,\n\n\t\tManifests: {},\n\t\t// The prefix to prepend on all template destination hashes\n\t\tIdentifierAddressPrefix: 'PICT-'\n\t});\n\nclass PictApplication extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tthis.serviceType = 'PictApplication';\n\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict state\n\t\tthis.AppData = this.fable.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastMarshalFromViewsTimestamp = false;\n\t\tthis.lastMarshalToViewsTimestamp = false;\n\n\t\t// Load all the manifests for the application\n\t\tlet tmpManifestKeys = Object.keys(this.options.Manifests);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++)\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.fable.instantiateServiceProvider('Manifest', this.options.Manifests[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Solve All Views                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing solve() function...`)\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpViewsToSolve[i].solve();\n\t\t}\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\t// Walk through any loaded views and solve them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToSolve = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\tif (tmpView.options.AutoSolveWithApp)\n\t\t\t{\n\t\t\t\ttmpViewsToSolve.push(tmpView);\n\t\t\t}\n\t\t}\n\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\ttmpViewsToSolve.sort((a, b) => { return a.options.AutoSolveOrdinal - b.options.AutoSolveOrdinal; });\n\t\tfor (let i = 0; i < tmpViewsToSolve.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToSolve[i].solveAsync.bind(tmpViewsToSolve[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Initialize Application                   */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority (if they are all priority 0, it will end up being add order due to JSON Object Property Key order stuff)\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\ttmpViewsToInitialize[i].initialize();\n\t\t\t}\n\t\t\tthis.onAfterInitialize();\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Solve the template synchronously\n\t\t\t\tthis.solve();\n\t\t\t}\n\t\t\t// Now check and see if we should automatically render as well\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering after initialization...`);\n\t\t\t\t}\n\t\t\t\t// Render the template synchronously\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallBack)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\t// Now walk through any loaded views and initialize them as well.\n\t\t\t// TODO: Some optimization cleverness could be gained by grouping them into a parallelized async operation, by ordinal.\n\t\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\t\tlet tmpViewsToInitialize = [];\n\t\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\t\tif (tmpView.options.AutoInitialize)\n\t\t\t\t{\n\t\t\t\t\ttmpViewsToInitialize.push(tmpView);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Sort the views by their priority\n\t\t\t// If they are all the default priority 0, it will end up being add order due to JSON Object Property Key order stuff\n\t\t\ttmpViewsToInitialize.sort((a, b) => { return a.options.AutoInitializeOrdinal - b.options.AutoInitializeOrdinal; });\n\t\t\tfor (let i = 0; i < tmpViewsToInitialize.length; i++)\n\t\t\t{\n\t\t\t\tlet tmpView = tmpViewsToInitialize[i];\n\t\t\t\ttmpAnticipate.anticipate(tmpView.initializeAsync.bind(tmpView));\n\t\t\t}\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\tif (this.options.AutoSolveAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto solving (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.solveAsync.bind(this));\n\t\t\t}\n\n\t\t\tif (this.options.AutoRenderMainViewportViewAfterInitialize)\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} auto rendering (asynchronously) after initialization...`);\n\t\t\t\t}\n\t\t\t\ttmpAnticipate.anticipate(this.renderMainViewportAsync.bind(this));\n\t\t\t}\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallBack();\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data From All Views              */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalFromViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalFromViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalFromViews[i].marshalFromView();\n\t\t}\n\t\tthis.onMarshalFromViews();\n\t\tthis.onAfterMarshalFromViews();\n\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalFromViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalFromViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalFromViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalFromViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalFromViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalFromViews[i].marshalFromViewAsync.bind(tmpViewsToMarshalFromViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalFromViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalFromViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal Data To All Views                */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onBeforeMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} executing marshalToViews() function...`)\n\t\t}\n\t\tthis.onBeforeMarshalToViews();\n\t\t// Now walk through any loaded views and initialize them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpViewsToMarshalToViews[i].marshalToView();\n\t\t}\n\t\tthis.onMarshalToViews();\n\t\tthis.onAfterMarshalToViews();\n\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\treturn true;\n\t}\n\tmarshalToViewsAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.fable.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewsAsync.bind(this));\n\t\t// Walk through any loaded views and marshalToViews them as well.\n\t\tlet tmpLoadedViews = Object.keys(this.pict.views);\n\t\tlet tmpViewsToMarshalToViews = [];\n\t\tfor (let i = 0; i < tmpLoadedViews.length; i++)\n\t\t{\n\t\t\tlet tmpView = this.pict.views[tmpLoadedViews[i]];\n\t\t\ttmpViewsToMarshalToViews.push(tmpView);\n\t\t}\n\t\tfor (let i = 0; i < tmpViewsToMarshalToViews.length; i++)\n\t\t{\n\t\t\ttmpAnticipate.anticipate(tmpViewsToMarshalToViews[i].marshalToViewAsync.bind(tmpViewsToMarshalToViews[i]));\n\t\t}\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewsAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewsAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} marshalToViewsAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewsTimestamp = this.fable.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToViews()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} onAfterMarshalToViews:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewsAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToViews();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Render View                              */\n\t/* -------------------------------------------------------------------------- */\n\trender(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\t// Now get the view (by hash) from the loaded views\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tthis.log.error(`PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not render from View ${tmpViewIdentifier} because it is not a valid view.`);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn tmpView.render(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress);\n\t}\n\trenderMainViewport()\n\t{\n\t\treturn this.render(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress);\n\t}\n\n\trenderAsync(pViewIdentifier, pRenderableHash, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpViewIdentifier = (typeof(pViewIdentifier) === 'undefined') ? this.options.MainViewportViewIdentifier : pViewIdentifier;\n\t\tlet tmpRenderableHash = (typeof(pRenderableHash) === 'undefined') ? this.options.MainViewportRenderableHash : pRenderableHash;\n\t\tlet tmpRenderDestinationAddress = (typeof(pRenderDestinationAddress) === 'undefined') ? this.options.MainViewportDestinationAddress : pRenderDestinationAddress;\n\t\tlet tmpTemplateDataAddress = (typeof(pTemplateDataAddress) === 'undefined') ? this.options.MainViewportDefaultDataAddress : pTemplateDataAddress;\n\n\t\tlet tmpView = (typeof (tmpViewIdentifier) === 'string') ? this.servicesMap.PictView[tmpViewIdentifier] : false;\n\t\tif (!tmpView)\n\t\t{\n\t\t\tlet tmpErrorMessage = `PictApp [${this.UUID}]::[${this.Hash}] ${this.options.Name} could not asynchronously render from View ${tmpViewIdentifier} because it is not a valid view.`;\n\t\t\tif (this.pict.LogNoisiness > 3)\n\t\t\t{\n\t\t\t\tthis.log.error(tmpErrorMessage);\n\t\t\t}\n\t\t\treturn fCallback(new Error(tmpErrorMessage));\n\t\t}\n\n\t\treturn tmpView.renderAsync(tmpRenderableHash, tmpRenderDestinationAddress, tmpTemplateDataAddress, fCallback);\n\t}\n\trenderMainViewportAsync(fCallback)\n\t{\n\t\treturn this.renderAsync(this.options.MainViewportViewIdentifier, this.options.MainViewportRenderableHash, this.options.MainViewportDestinationAddress, this.options.MainViewportDefaultDataAddress, fCallback);\n\t}\n}\n\nmodule.exports = PictApplication;","const libFableServiceBase = require('fable-serviceproviderbase');\n\nconst defaultPictViewSettings = (\n\t{\n\t\tDefaultRenderable: false,\n\t\tDefaultDestinationAddress: false,\n\t\tDefaultTemplateRecordAddress: false,\n\n\t\tViewIdentifier: false,\n\n\t\t// If this is set to true, when the App initializes this will.\n\t\t// After the App initializes, initialize will be called as soon as it's added.\n\t\tAutoInitialize: true,\n\t\tAutoInitializeOrdinal: 0,\n\n\t\t// If this is set to true, when the App autorenders (on load) this will.\n\t\t// After the App initializes, render will be called as soon as it's added.\n\t\tAutoRender: true,\n\t\tAutoRenderOrdinal: 0,\n\n\t\tAutoSolveWithApp: true,\n\t\tAutoSolveOrdinal: 0,\n\n\t\tCSSHash: false,\n\t\tCSS: false,\n\t\tCSSProvider: false,\n\t\tCSSPriority: 500,\n\n\t\tTemplates: [],\n\n\t\tDefaultTemplates: [],\n\n\t\tRenderables: [],\n\n\t\tManifests: {}\n\t});\n\nclass PictView extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\t// Intersect default options, parent constructor, service information\n\t\tlet tmpOptions = Object.assign({}, JSON.parse(JSON.stringify(defaultPictViewSettings)), pOptions);\n\t\tsuper(pFable, tmpOptions, pServiceHash);\n\t\tif (!this.options.ViewIdentifier)\n\t\t{\n\t\t\tthis.options.ViewIdentifier = `AutoViewID-${this.fable.getUUID()}`;\n\t\t}\n\t\tthis.serviceType = 'PictView';\n\t\t// Convenience and consistency naming\n\t\tthis.pict = this.fable;\n\t\t// Wire in the essential Pict application state\n\t\tthis.AppData = this.pict.AppData;\n\n\t\tthis.initializeTimestamp = false;\n\t\tthis.lastSolvedTimestamp = false;\n\t\tthis.lastRenderedTimestamp = false;\n\t\tthis.lastMarshalFromViewTimestamp = false;\n\t\tthis.lastMarshalToViewTimestamp = false;\n\n\t\t// Load all templates from the array in the options\n\t\t// Templates are in the form of {Hash:'Some-Template-Hash',Template:'Template content',Source:'TemplateSource'}\n\t\tfor (let i = 0; i < this.options.Templates.length; i++)\n\t\t{\n\t\t\tlet tmpTemplate = this.options.Templates[i];\n\n\t\t\tif (!tmpTemplate.hasOwnProperty('Hash') || !tmpTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Template ${i} in the options array.`, tmpTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addTemplate(tmpTemplate.Hash, tmpTemplate.Template, tmpTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load all default templates from the array in the options\n\t\t// Templates are in the form of {Prefix:'',Postfix:'-List-Row',Template:'Template content',Source:'TemplateSourceString'}\n\t\tfor (let i = 0; i < this.options.DefaultTemplates.length; i++)\n\t\t{\n\t\t\tlet tmpDefaultTemplate = this.options.DefaultTemplates[i];\n\n\t\t\tif (!tmpDefaultTemplate.hasOwnProperty('Postfix') || !tmpDefaultTemplate.hasOwnProperty('Template'))\n\t\t\t{\n\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Default Template ${i} in the options array.`, tmpDefaultTemplate);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!tmpDefaultTemplate.Source)\n\t\t\t\t{\n\t\t\t\t\ttmpDefaultTemplate.Source = `PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} options object.`;\n\t\t\t\t}\n\t\t\t\tthis.pict.TemplateProvider.addDefaultTemplate(tmpDefaultTemplate.Prefix, tmpDefaultTemplate.Postfix, tmpDefaultTemplate.Template, tmpDefaultTemplate.Source);\n\t\t\t}\n\t\t}\n\n\t\t// Load the CSS if it's available\n\t\tif (this.options.CSS)\n\t\t{\n\t\t\tlet tmpCSSHash = this.options.CSSHash ? this.options.CSSHash : `View-${this.options.ViewIdentifier}`;\n\t\t\tlet tmpCSSProvider = this.options.CSSProvider ? this.options.CSSProvider : tmpCSSHash;\n\t\t\tthis.pict.CSSMap.addCSS(tmpCSSHash, this.options.CSS, tmpCSSProvider, this.options.CSSPriority);\n\t\t}\n\n\t\t// Load all renderables\n\t\t// Renderables are launchable renderable instructions with templates\n\t\t// They look as such: {Identifier:'ContentEntry', TemplateHash:'Content-Entry-Section-Main', ContentDestinationAddress:'#ContentSection', RecordAddress:'AppData.Content.DefaultText', ManifestTransformation:'ManyfestHash', ManifestDestinationAddress:'AppData.Content.DataToTransformContent'}\n\t\t// The only parts that are necessary are Identifier and Template\n\t\t// A developer can then do render('ContentEntry') and it just kinda works.  Or they can override the ContentDestinationAddress\n\t\tthis.renderables = {};\n\t\tfor (let i = 0; i < this.options.Renderables.length; i++)\n\t\t{\n\t\t\tlet tmpRenderable = this.options.Renderables[i];\n\t\t\tthis.addRenderable(this.options.Renderables[i]);\n\t\t}\n\t}\n\n\taddRenderable(pRenderableHash, pTemplateHash, pDefaultTemplateDataAddress, pDefaultDestinationAddress, pRenderMethod)\n\t{\n\t\tlet tmpRenderable = false;\n\n\t\tif (typeof(pRenderableHash) == 'object')\n\t\t{\n\t\t\t// The developer passed in the renderable as an object.\n\t\t\t// Use theirs instead!\n\t\t\ttmpRenderable = pRenderableHash;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet tmpRenderMethod = (typeof(pRenderMethod) !== 'string') ? pRenderMethod : 'replace';\n\t\t\ttmpRenderable = (\n\t\t\t\t{\n\t\t\t\t\tRenderableHash: pRenderableHash,\n\t\t\t\t\tTemplateHash: pTemplateHash,\n\t\t\t\t\tDefaultTemplateDataAddress: pDefaultTemplateDataAddress,\n\t\t\t\t\tDefaultDestinationAddress: pDefaultDestinationAddress,\n\t\t\t\t\tRenderMethod: tmpRenderMethod\n\t\t\t\t});\n\t\t}\n\n\t\tif ((typeof(tmpRenderable.RenderableHash) != 'string') || (typeof(tmpRenderable.TemplateHash) != 'string'))\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not load Renderable; RenderableHash or TemplateHash are invalid.`, tmpRenderable);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} adding renderable [${tmpRenderable.RenderableHash}] pointed to template ${tmpRenderable.TemplateHash}.`);\n\t\t\t}\n\n\t\t\tthis.renderables[tmpRenderable.RenderableHash] = tmpRenderable;\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                        Code Section: Initialization                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeInitializeAsync(fCallback)\n\t{\n\t\tthis.onBeforeInitialize();\n\t\treturn fCallback();\n\t}\n\n\tonInitialize()\n\t{\n\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonInitializeAsync(fCallback)\n\t{\n\t\tthis.onInitialize();\n\t\treturn fCallback();\n\t}\n\n\tinitialize()\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tthis.onBeforeInitialize();\n\t\t\tthis.onInitialize();\n\t\t\tthis.onAfterInitialize();\n\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialize called but initialization is already completed.  Aborting.`);\n\t\t\treturn false;\n\t\t}\n\t}\n\tinitializeAsync(fCallback)\n\t{\n\t\tif (!this.initializeTimestamp)\n\t\t{\n\t\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t{\n\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} beginning initialization...`);\n\t\t\t}\n\n\t\t\ttmpAnticipate.anticipate(this.onBeforeInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onInitializeAsync.bind(this));\n\t\t\ttmpAnticipate.anticipate(this.onAfterInitializeAsync.bind(this));\n\n\t\t\ttmpAnticipate.wait(\n\t\t\t\t(pError) =>\n\t\t\t\t{\n\t\t\t\t\tthis.initializeTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\t\tif (this.pict.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.info(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} initialization complete.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn fCallback();\n\t\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.warn(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} async initialize called but initialization is already completed.  Aborting.`);\n\t\t\t// TODO: Should this be an error?\n\t\t\treturn fCallback();\n\t\t}\n\t}\n\n\tonAfterInitialize()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterInitialize:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterInitializeAsync(fCallback)\n\t{\n\t\tthis.onAfterInitialize();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Render                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeRender(pRenderable, pRenderDestinationAddress, pData)\n\t{\n\t\t// Overload this to mess with stuff before the content gets generated from the template\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeRenderAsync(fCallback)\n\t{\n\t\treturn fCallback();\n\t}\n\n\trender(pRenderable, pRenderDestinationAddress, pTemplateDataAddress)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it is not a valid renderable.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpDataAddress;\n\t\tlet tmpData;\n\n\t\tif (typeof(pTemplateDataAddress) === 'object')\n\t\t{\n\t\t\ttmpData = pTemplateDataAddress;\n\t\t\ttmpDataAddress = 'Passed in as object';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\t\ttmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\t\t}\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\n\t\t// Generate the content output from the template and data\n\t\tlet tmpContent = this.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData)\n\n\t\t// Assign the content to the destination address\n\t\tswitch(tmpRenderable.RenderMethod)\n\t\t{\n\t\t\tcase 'append':\n\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'prepend':\n\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t\tcase 'append_once':\n\t\t\t\t// Try to find the content in the destination address\n\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t{\n\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'replace':\n\t\t\t\t// TODO: Should this be the default?\n\t\t\tdefault:\n\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, tmpContent);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Execute the developer-overridable post-render behavior\n\t\tthis.onAfterRender(tmpRenderable, tmpRenderDestinationAddress, tmpData, tmpContent)\n\n\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\treturn true;\n\t}\n\trenderAsync(pRenderable, pRenderDestinationAddress, pTemplateDataAddress, fCallback)\n\t{\n\t\tlet tmpRenderableHash = (typeof (pRenderable) === 'string') ? pRenderable :\n\t\t\t(typeof (this.options.DefaultRenderable) == 'string') ? this.options.DefaultRenderable : false;\n\t\tif (!tmpRenderableHash)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not asynchronously render ${tmpRenderableHash} (param ${pRenderable}because it is not a valid renderable.`));\n\t\t}\n\n\t\tlet tmpRenderable = this.renderables[tmpRenderableHash];\n\n\t\tif (!tmpRenderable)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`);\n\t\t\treturn fCallback(Error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not exist.`));\n\t\t}\n\n\t\tlet tmpRenderDestinationAddress = (typeof (pRenderDestinationAddress) === 'string') ? pRenderDestinationAddress :\n\t\t\t(typeof (tmpRenderable.ContentDestinationAddress) === 'string') ? tmpRenderable.ContentDestinationAddress :\n\t\t\t\t(typeof (this.options.DefaultDestinationAddress) === 'string') ? this.options.DefaultDestinationAddress : false;\n\n\t\tif (!tmpRenderDestinationAddress)\n\t\t{\n\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render ${tmpRenderableHash} (param ${pRenderable}) because it does not have a valid destination address.`);\n\t\t\treturn fCallback(Error(`Could not render ${tmpRenderableHash}`));\n\t\t}\n\n\t\tlet tmpDataAddress;\n\t\tlet tmpData;\n\n\t\tif (typeof(pTemplateDataAddress) === 'object')\n\t\t{\n\t\t\ttmpData = pTemplateDataAddress;\n\t\t\ttmpDataAddress = 'Passed in as object';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmpDataAddress = (typeof (pTemplateDataAddress) === 'string') ? pTemplateDataAddress :\n\t\t\t\t(typeof (tmpRenderable.DefaultTemplateRecordAddress) === 'string') ? tmpRenderable.DefaultTemplateRecordAddress :\n\t\t\t\t\t(typeof (this.options.DefaultTemplateRecordAddress) === 'string') ? this.options.DefaultTemplateRecordAddress : false;\n\n\t\t\ttmpData = (typeof (tmpDataAddress) === 'string') ? this.pict.DataProvider.getDataByAddress(tmpDataAddress) : undefined;\n\t\t}\n\n\t\tlet tmpAnticipate = this.fable.newAnticipate();\n\n\t\t// Execute the developer-overridable pre-render behavior\n\t\t//\n\n\t\ttmpAnticipate.anticipate(\n\t\t\t(fOnBeforeRenderCallback) =>\n\t\t\t{\n\t\t\t\tthis.onBeforeRender(tmpRenderable, tmpRenderDestinationAddress, tmpData);\n\t\t\t\tthis.onBeforeRenderAsync(\n\t\t\t\t\t(pError) =>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fOnBeforeRenderCallback(pError);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\ttmpAnticipate.anticipate(\n\t\t\t(fAsyncTemplateCallback) =>\n\t\t\t{\n\t\t\t\t// Render the template (asynchronously)\n\t\t\t\tthis.pict.parseTemplateByHash(tmpRenderable.TemplateHash, tmpData,\n\t\t\t\t\t(pError, pContent) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} could not render (asynchronously) ${tmpRenderableHash} (param ${pRenderable}) because it did not parse the template.`, pError);\n\t\t\t\t\t\t\treturn fAsyncTemplateCallback(pError);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Assign the content to the destination address\n\t\t\t\t\t\tswitch(tmpRenderable.RenderMethod)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'append':\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'prepend':\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.prependContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'append_once':\n\t\t\t\t\t\t\t\t// Try to find the content in the destination address\n\t\t\t\t\t\t\t\tlet tmpExistingContent = this.pict.ContentAssignment.getElement(`#${tmpRenderableHash}`);\n\t\t\t\t\t\t\t\tif (tmpExistingContent.length < 1)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.appendContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'replace':\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthis.pict.ContentAssignment.assignContent(tmpRenderDestinationAddress, pContent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Execute the developer-overridable asynchronous post-render behavior\n\t\t\t\t\t\tthis.lastRenderedTimestamp = this.pict.log.getTimeStamp();\n\n\t\t\t\t\t\treturn this.onAfterRenderAsync(fAsyncTemplateCallback, pContent);\n\t\t\t\t\t});\n\t\t\t});\n\t\ttmpAnticipate.wait(fCallback);\n\t}\n\n\tonAfterRender()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterRender:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterRenderAsync(fCallback)\n\t{\n\t\tthis.onAfterRender();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                            Code Section: Solver                            */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeSolveAsync(fCallback)\n\t{\n\t\tthis.onBeforeSolve();\n\t\treturn fCallback();\n\t}\n\n\tonSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonSolveAsync(fCallback)\n\t{\n\t\tthis.onSolve();\n\t\treturn fCallback();\n\t}\n\n\tsolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeSolve();\n\t\tthis.onSolve();\n\t\tthis.onAfterSolve();\n\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tsolveAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onSolveAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterSolveAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastSolvedTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterSolve()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterSolve:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterSolveAsync(fCallback)\n\t{\n\t\tthis.onAfterSolve();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal From View                        */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalFromView();\n\t\tthis.onMarshalFromView();\n\t\tthis.onAfterMarshalFromView();\n\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalFromViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalFromViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalFromViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalFromViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalFromView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalFromView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalFromViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalFromView();\n\t\treturn fCallback();\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                     Code Section: Marshal To View                          */\n\t/* -------------------------------------------------------------------------- */\n\tonBeforeMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onBeforeMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonBeforeMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onBeforeMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tonMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onMarshalToView();\n\t\treturn fCallback();\n\t}\n\n\tmarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 2)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} executing solve() function...`);\n\t\t}\n\t\tthis.onBeforeMarshalToView();\n\t\tthis.onMarshalToView();\n\t\tthis.onAfterMarshalToView();\n\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\treturn true;\n\t}\n\n\tmarshalToViewAsync(fCallback)\n\t{\n\t\tlet tmpAnticipate = this.pict.instantiateServiceProviderWithoutRegistration('Anticipate');\n\n\t\ttmpAnticipate.anticipate(this.onBeforeMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onMarshalToViewAsync.bind(this));\n\t\ttmpAnticipate.anticipate(this.onAfterMarshalToViewAsync.bind(this));\n\n\t\ttmpAnticipate.wait(\n\t\t\t(pError) =>\n\t\t\t{\n\t\t\t\tif (this.pict.LogNoisiness > 2)\n\t\t\t\t{\n\t\t\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} solveAsync() complete.`);\n\t\t\t\t}\n\t\t\t\tthis.lastMarshalToViewTimestamp = this.pict.log.getTimeStamp();\n\t\t\t\treturn fCallback(pError);\n\t\t\t});\n\t}\n\n\tonAfterMarshalToView()\n\t{\n\t\tif (this.pict.LogNoisiness > 3)\n\t\t{\n\t\t\tthis.log.trace(`PictView [${this.UUID}]::[${this.Hash}] ${this.options.ViewIdentifier} onAfterMarshalToView:`);\n\t\t}\n\t\treturn true;\n\t}\n\tonAfterMarshalToViewAsync(fCallback)\n\t{\n\t\tthis.onAfterMarshalToView();\n\t\treturn fCallback();\n\t}\n}\n\nmodule.exports = PictView;","/**\n* Precedent Meta-Templating\n*\n* @license     MIT\n*\n* @author      Steven Velozo <steven@velozo.com>\n*\n* @description Process text streams, parsing out meta-template expressions.\n*/\nvar libWordTree = require(`./WordTree.js`);\nvar libStringParser = require(`./StringParser.js`);\n\nclass Precedent\n{\n\t/**\n\t * Precedent Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.WordTree = new libWordTree();\n\n\t\tthis.StringParser = new libStringParser();\n\n\t\tthis.ParseTree = this.WordTree.ParseTree;\n\t}\n\n\t/**\n\t * Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pTree - A node on the parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @param {number} pIndex - callback function\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern(pPatternStart, pPatternEnd, pParser)\n\t{\n\t\treturn this.WordTree.addPattern(pPatternStart, pPatternEnd, pParser);\n\t}\n\n\t/**\n\t * Parse a string with the existing parse tree\n\t * @method parseString\n\t * @param {string} pString - The string to parse\n\t * @param {object} pData - Data to pass in as the second argument\n\t * @return {string} The result from the parser\n\t */\n\tparseString(pString, pData)\n\t{\n\t\treturn this.StringParser.parseString(pString, this.ParseTree, pData);\n\t}\n}\n\nmodule.exports = Precedent;\n","/**\n* String Parser\n* @author      Steven Velozo <steven@velozo.com>\n* @description Parse a string, properly processing each matched token in the word tree.\n*/\n\nclass StringParser\n{\n\t/**\n\t * StringParser Constructor\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * Create a fresh parsing state object to work with.\n\t * @method newParserState\n\t * @param {Object} pParseTree - A node on the parse tree to begin parsing from (usually root)\n\t * @return {Object} A new parser state object for running a character parser on\n\t * @private\n\t */\n\tnewParserState (pParseTree)\n\t{\n\t\treturn (\n\t\t{\n\t\t\tParseTree: pParseTree,\n\n\t\t\tAsynchronous: false,\n\n\t\t\tOutput: '',\n\t\t\tOutputBuffer: '',\n\n\t\t\tPattern: {},\n\n\t\t\tPatternMatch: false,\n\t\t\tPatternMatchEnd: false\n\t\t});\n\t}\n\n\t/**\n\t * Append a character to the output buffer in the parser state.\n\t * This output buffer is used when a potential match is being explored, or a match is being explored.\n\t * @method appendOutputBuffer\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tappendOutputBuffer (pCharacter, pParserState)\n\t{\n\t\tpParserState.OutputBuffer += pCharacter;\n\t}\n\n\t/**\n\t * Flush the output buffer to the output and clear it.\n\t * @method flushOutputBuffer\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tflushOutputBuffer (pParserState)\n\t{\n\t\tpParserState.Output += pParserState.OutputBuffer;\n\t\tpParserState.OutputBuffer = '';\n\t}\n\n\tresetOutputBuffer (pParserState)\n\t{\n\t\t// Flush the output buffer.\n\t\tthis.flushOutputBuffer(pParserState);\n\t\t// End pattern mode\n\t\tpParserState.Pattern = false;\n\t\tpParserState.PatternStartNode = false;\n\t\tpParserState.StartPatternMatchComplete = false;\n\t\tpParserState.EndPatternMatchBegan = false;\n\t\tpParserState.PatternMatch = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse a character in the buffer.\n\t * @method parseCharacter\n\t * @param {string} pCharacter - The character to append\n\t * @param {Object} pParserState - The state object for the current parsing task\n\t * @private\n\t */\n\tparseCharacter (pCharacter, pParserState, pData)\n\t{\n\t\t// If we are already in a pattern match traversal\n\t\tif (pParserState.PatternMatch)\n\t\t{\n\t\t\t// If the pattern is still matching the start and we haven't passed the buffer\n\t\t\tif (!pParserState.StartPatternMatchComplete && pParserState.Pattern.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\tpParserState.Pattern = pParserState.Pattern[pCharacter];\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t\telse if (pParserState.EndPatternMatchBegan)\n\t\t\t{\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// Flush the output buffer.\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pParserState.PatternStartNode.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// We broke out of the end -- see if this is a new start of the end.\n\t\t\t\t\tpParserState.Pattern = pParserState.PatternStartNode.PatternEnd[pCharacter];\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpParserState.EndPatternMatchBegan = false;\n\t\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pParserState.Pattern.hasOwnProperty('PatternEnd'))\n\t\t\t{\n\t\t\t\tif (!pParserState.StartPatternMatchComplete)\n\t\t\t\t{\n\t\t\t\t\tpParserState.StartPatternMatchComplete = true;\n\t\t\t\t\tpParserState.PatternStartNode = pParserState.Pattern;\n\t\t\t\t}\n\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\n\t\t\t\tif (pParserState.Pattern.PatternEnd.hasOwnProperty(pCharacter))\n\t\t\t\t{\n\t\t\t\t\t// This is the first character of the end pattern.\n\t\t\t\t\tpParserState.EndPatternMatchBegan = true;\n\t\t\t\t\t// This leaf has a PatternEnd tree, so we will wait until that end is met.\n\t\t\t\t\tpParserState.Pattern = pParserState.Pattern.PatternEnd[pCharacter];\n\t\t\t\t\t// If this last character is the end of the pattern, parse it.\n\t\t\t\t\tif (pParserState.Pattern.hasOwnProperty('Parse'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Run the t*mplate function\n\t\t\t\t\t\tpParserState.OutputBuffer = pParserState.Pattern.Parse(pParserState.OutputBuffer.substr(pParserState.Pattern.PatternStartString.length, pParserState.OutputBuffer.length - (pParserState.Pattern.PatternStartString.length+pParserState.Pattern.PatternEndString.length)), pData);\n\t\t\t\t\t\treturn this.resetOutputBuffer(pParserState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are in a pattern start but didn't match one; reset and start trying again from this character.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t}\n\t\t}\n\t\t// If we aren't in a pattern match or pattern, and this isn't the start of a new pattern (RAW mode)....\n\t\tif (!pParserState.PatternMatch)\n\t\t{\n\t\t\t// This may be the start of a new pattern....\n\t\t\tif (pParserState.ParseTree.hasOwnProperty(pCharacter))\n\t\t\t{\n\t\t\t\t// ... assign the root node as the matched node.\n\t\t\t\tthis.resetOutputBuffer(pParserState);\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t\tpParserState.Pattern = pParserState.ParseTree[pCharacter];\n\t\t\t\tpParserState.PatternMatch = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.appendOutputBuffer(pCharacter, pParserState);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse a string for matches, and process any template segments that occur.\n\t * @method parseString\n\t * @param {string} pString - The string to parse.\n\t * @param {Object} pParseTree - The parse tree to begin parsing from (usually root)\n\t * @param {Object} pData - The data to pass to the function as a second parameter\n\t */\n\tparseString (pString, pParseTree, pData)\n\t{\n\t\tlet tmpParserState = this.newParserState(pParseTree);\n\n\t\tfor (var i = 0; i < pString.length; i++)\n\t\t{\n\t\t\tthis.parseCharacter(pString[i], tmpParserState, pData);\n\t\t}\n\n\t\tthis.flushOutputBuffer(tmpParserState);\n\n\t\treturn tmpParserState.Output;\n\t}\n}\n\nmodule.exports = StringParser;\n","/**\n* Word Tree\n* @author      Steven Velozo <steven@velozo.com>\n* @description Create a tree (directed graph) of Javascript objects, one character per object.\n*/\n\nclass WordTree\n{\n\t/**\n\t * WordTree Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.ParseTree = {};\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree node\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty(pPattern))\n\t\t{\n\t\t\tpTree[pPattern] = {};\n\t\t}\n\n\t\treturn pTree[pPattern];\n\t}\n\n\t/**\n\t * Add a child character to a Parse Tree PatternEnd subtree\n\t * @method addChild\n\t * @param {Object} pTree - A parse tree to push the characters into\n\t * @param {string} pPattern - The string to add to the tree\n\t * @returns {Object} The resulting leaf node that was added (or found)\n\t * @private\n\t */\n\taddEndChild (pTree, pPattern)\n\t{\n\t\tif (!pTree.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\tpTree.PatternEnd = {};\n\t\t}\n\n\t\tpTree.PatternEnd[pPattern] = {};\n\n\t\treturn pTree.PatternEnd[pPattern];\n\t}\n\n\t/** Add a Pattern to the Parse Tree\n\t * @method addPattern\n\t * @param {Object} pPatternStart - The starting string for the pattern (e.g. \"${\")\n\t * @param {string} pPatternEnd - The ending string for the pattern (e.g. \"}\")\n\t * @param {function} fParser - The function to parse if this is the matched pattern, once the Pattern End is met.  If this is a string, a simple replacement occurs.\n\t * @return {bool} True if adding the pattern was successful\n\t */\n\taddPattern (pPatternStart, pPatternEnd, fParser)\n\t{\n\t\tif (pPatternStart.length < 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((typeof(pPatternEnd) === 'string') && (pPatternEnd.length < 1))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tmpLeaf = this.ParseTree;\n\n\t\t// Add the tree of leaves iteratively\n\t\tfor (var i = 0; i < pPatternStart.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addChild(tmpLeaf, pPatternStart[i], i);\n\t\t}\n\n\t\tif (!tmpLeaf.hasOwnProperty('PatternEnd'))\n\t\t{\n\t\t\ttmpLeaf.PatternEnd = {};\n\t\t}\n\n\t\tlet tmpPatternEnd = (typeof(pPatternEnd) === 'string') ? pPatternEnd : pPatternStart;\n\t\tfor (let i = 0; i < tmpPatternEnd.length; i++)\n\t\t{\n\t\t\ttmpLeaf = this.addEndChild(tmpLeaf, tmpPatternEnd[i], i);\n\t\t}\n\n\t\ttmpLeaf.PatternStartString = pPatternStart;\n\t\ttmpLeaf.PatternEndString = tmpPatternEnd;\n\t\ttmpLeaf.Parse = (typeof(fParser) === 'function') ? fParser :\n\t\t\t\t\t\t(typeof(fParser) === 'string') ? () => { return fParser; } :\n\t\t\t\t\t\t(pData) => { return pData; };\n\n\t\treturn true;\n\t}\n}\n\nmodule.exports = WordTree;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            strictNullHandling,\n            skipNulls,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $floor = GetIntrinsic('%Math.floor%');\n\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(fn, 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(fn, 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n","/*! simple-concat. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function (stream, cb) {\n  var chunks = []\n  stream.on('data', function (chunk) {\n    chunks.push(chunk)\n  })\n  stream.once('end', function () {\n    if (cb) cb(null, Buffer.concat(chunks))\n    cb = null\n  })\n  stream.once('error', function (err) {\n    if (cb) cb(err)\n    cb = null\n  })\n}\n","/*! simple-get. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const originalHost = opts.hostname // hostname before potential redirect\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api\n      // If redirected host is different than original host, drop headers to prevent cookie leak (#73)\n      if (redirectHost !== null && redirectHost !== originalHost) {\n        delete opts.headers.cookie\n        delete opts.headers.authorization\n      }\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};","/*\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nvar punycode = require('punycode');\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n/*\n * define these here so at least they only have to be\n * compiled once on the first module load.\n */\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/,\n\n  /*\n   * RFC 2396: characters reserved for delimiting URLs.\n   * We actually just auto-escape these.\n   */\n  delims = [\n    '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'\n  ],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = [\n    '{', '}', '|', '\\\\', '^', '`'\n  ].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  /*\n   * Characters that are never ever allowed in a hostname.\n   * Note that any invalid chars are also handled, but these\n   * are the ones that are *expected* to be seen, so we fast-path\n   * them.\n   */\n  nonHostChars = [\n    '%', '/', '?', ';', '#'\n  ].concat(autoEscape),\n  hostEndingChars = [\n    '/', '?', '#'\n  ],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    http: true,\n    https: true,\n    ftp: true,\n    gopher: true,\n    file: true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  },\n  querystring = require('qs');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && typeof url === 'object' && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (typeof url !== 'string') {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  /*\n   * Copy chrome, IE, opera backslash-handling behavior.\n   * Back slashes before the query string get converted to forward slashes\n   * See: https://code.google.com/p/chromium/issues/detail?id=25916\n   */\n  var queryIndex = url.indexOf('?'),\n    splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  /*\n   * trim before proceeding.\n   * This is to support parse stuff like \"  http://foo.com  \\n\"\n   */\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  /*\n   * figure out if it's got a host\n   * user@server is *always* interpreted as a hostname, and url\n   * resolution will treat //foo/bar as host=foo,path=bar because that's\n   * how the browser resolves relative URLs.\n   */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@/]+@[^@/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || (proto && !slashedProtocol[proto]))) {\n\n    /*\n     * there's a hostname.\n     * the first instance of /, ?, ;, or # ends the host.\n     *\n     * If there is an @ in the hostname, then non-host chars *are* allowed\n     * to the left of the last @ sign, unless some host-ending character\n     * comes *before* the @-sign.\n     * URLs are obnoxious.\n     *\n     * ex:\n     * http://a@b@c/ => user:a@b host:c\n     * http://a@b?@c => user:a host:c path:/?@c\n     */\n\n    /*\n     * v0.12 TODO(isaacs): This is not quite how Chrome does things.\n     * Review our test case against browsers more comprehensively.\n     */\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n\n    /*\n     * at this point, either we have an explicit point where the\n     * auth portion cannot go past, or the last @ char is the decider.\n     */\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      /*\n       * atSign must be in auth portion.\n       * http://a@b/c@d => host:b auth:a path:/c@d\n       */\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    /*\n     * Now we have a portion which is definitely the auth.\n     * Pull that off.\n     */\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) { hostEnd = rest.length; }\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    /*\n     * we've indicated that there is a hostname,\n     * so even if it's empty, it has to be present.\n     */\n    this.hostname = this.hostname || '';\n\n    /*\n     * if hostname begins with [ and ends with ]\n     * assume that it's an IPv6 address.\n     */\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              /*\n               * we replace non-ASCII char with a temporary placeholder\n               * we need this to make sure size of hostname is not\n               * broken by replacing non-ASCII by nothing\n               */\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      /*\n       * IDNA Support: Returns a punycoded representation of \"domain\".\n       * It only converts parts of the domain name that\n       * have non-ASCII characters, i.e. it doesn't matter if\n       * you call it with a domain that already is ASCII-only.\n       */\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    /*\n     * strip [ and ] from the hostname\n     * the host field still retains them, though\n     */\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  /*\n   * now rest is set to the post-host stuff.\n   * chop off any delim chars.\n   */\n  if (!unsafeProtocol[lowerProto]) {\n\n    /*\n     * First, make 100% sure that any \"autoEscape\" chars get\n     * escaped, even if encodeURIComponent doesn't think they\n     * need to be.\n     */\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) { continue; }\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  /*\n   * ensure it's an object, and not a string url.\n   * If it's an obj, this is a no-op.\n   * this way, you can call url_format() on strings\n   * to clean up potentially wonky urls.\n   */\n  if (typeof obj === 'string') { obj = urlParse(obj); }\n  if (!(obj instanceof Url)) { return Url.prototype.format.call(obj); }\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n    pathname = this.pathname || '',\n    hash = this.hash || '',\n    host = false,\n    query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && typeof this.query === 'object' && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query, {\n      arrayFormat: 'repeat',\n      addQueryPrefix: false\n    });\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') { protocol += ':'; }\n\n  /*\n   * only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n   * unless they had them to begin with.\n   */\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') { pathname = '/' + pathname; }\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') { hash = '#' + hash; }\n  if (search && search.charAt(0) !== '?') { search = '?' + search; }\n\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) { return relative; }\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (typeof relative === 'string') {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  /*\n   * hash is always overridden, no matter what.\n   * even href=\"\" will remove it.\n   */\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') { result[rkey] = relative[rkey]; }\n    }\n\n    // urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.pathname = '/';\n      result.path = result.pathname;\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    /*\n     * if it's a known url protocol, then changing\n     * the protocol does weird things\n     * first, if it's not file:, then we MUST have a host,\n     * and if there was a path\n     * to begin with, then we MUST have a path.\n     * if it is file:, then the host is dropped,\n     * because that's known to be hostless.\n     * anything else is assumed to be absolute.\n     */\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift())) { }\n      if (!relative.host) { relative.host = ''; }\n      if (!relative.hostname) { relative.hostname = ''; }\n      if (relPath[0] !== '') { relPath.unshift(''); }\n      if (relPath.length < 2) { relPath.unshift(''); }\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n    isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n    mustEndAbs = isRelAbs || isSourceAbs || (result.host && relative.pathname),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    relPath = relative.pathname && relative.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  /*\n   * if the url is a non-slashed url, then relative\n   * links like ../.. should be able\n   * to crawl up to the hostname, as well.  This is strange.\n   * result.protocol has already been set by now.\n   * Later on, put the first path part into the host field.\n   */\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') { srcPath[0] = result.host; } else { srcPath.unshift(result.host); }\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') { relPath[0] = relative.host; } else { relPath.unshift(relative.host); }\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    /*\n     * it's relative\n     * throw away the existing file, and take the new path instead.\n     */\n    if (!srcPath) { srcPath = []; }\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search != null) {\n    /*\n     * just pull out the search.\n     * like href='?foo'.\n     * Put this after the other two cases because it simplifies the booleans\n     */\n    if (psychotic) {\n      result.host = srcPath.shift();\n      result.hostname = result.host;\n      /*\n       * occationaly the auth can get stuck only in host\n       * this especially happens in cases like\n       * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n       */\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.hostname = authInHost.shift();\n        result.host = result.hostname;\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    // to support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    /*\n     * no path at all.  easy.\n     * we've already handled the other stuff above.\n     */\n    result.pathname = null;\n    // to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  /*\n   * if a url ENDs in . or .., then it must get a trailing slash.\n   * however, if it ends in anything else non-slashy,\n   * then it must NOT get a trailing slash.\n   */\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === '';\n\n  /*\n   * strip single dots, resolve double dots to parent dir\n   * if the path tries to go above the root, `up` ends up > 0\n   */\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    result.host = result.hostname;\n    /*\n     * occationaly the auth can get stuck only in host\n     * this especially happens in cases like\n     * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n     */\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.hostname = authInHost.shift();\n      result.host = result.hostname;\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (srcPath.length > 0) {\n    result.pathname = srcPath.join('/');\n  } else {\n    result.pathname = null;\n    result.path = null;\n  }\n\n  // to support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nconst defaultConfiguration = (\n\t{\n\t\t// This is the address for the <script /> tag that contains the CSS.\n\t\tCSSElementAddress: '#PICT-CSS'\n\t}\n)\n\nclass PictCSS extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\t// No merging of options necessary\n\t\tif (typeof(this.options.CSSElementAddress) === 'undefined')\n\t\t{\n\t\t\tthis.options.CSSElementAddress = defaultConfiguration.CSSElementAddress;\n\t\t}\n\n\t\tthis.inlineCSSMap = {};\n\t}\n\n\t// Add a CSS fragment to the CSS map (each view can have its own CSS fragment)\n\t// Hash is shared across all views, so if 10 views all load the \"My-Table-View\" fragment, it will only be loaded once.\n\taddCSS(pHash, pContent, pPriority, pProvider)\n\t{\n\t\tlet tmpPriority = (typeof(pPriority) !== 'undefined') ? pPriority : 1000;\n\t\tlet tmpProvidor = (typeof(pProvider) === 'string') ? pProvider : 'Unknown';\n\t\tthis.inlineCSSMap[pHash] = { Hash: pHash, Content: pContent, Provider: tmpProvidor, Priority:tmpPriority };\n\t}\n\n\tremoveCSS(pHash)\n\t{\n\t\tdelete this.inlineCSSMap[pHash];\n\t}\n\n\tgenerateCSS()\n\t{\n\t\tlet tmpCSS = '';\n\t\tlet tmpCSSHashes = Object.keys(this.inlineCSSMap);\n\t\t// Sort the hashes by Priority\n\t\ttmpCSSHashes.sort((a, b) => { return this.inlineCSSMap[a].Priority - this.inlineCSSMap[b].Priority; });\n\t\tfor (let i = 0; i < tmpCSSHashes.length; i++)\n\t\t{\n\t\t\tlet tmpCSSFragment = this.inlineCSSMap[tmpCSSHashes[i]];\n\t\t\tlet tmpCSSComment = tmpCSSFragment.Hash;\n\t\t\tif (tmpCSSFragment.Hash != tmpCSSFragment.Provider)\n\t\t\t{\n\t\t\t\ttmpCSSComment = `${tmpCSSComment} from ${tmpCSSFragment.Provider}`;\n\t\t\t}\n\t\t\ttmpCSS += `/* ${tmpCSSComment} */\\n${tmpCSSFragment.Content}\\n`;\n\t\t}\n\t\treturn tmpCSS;\n\t}\n\n\t// Inject the CSS into the magic DOM element for it\n\tinjectCSS()\n\t{\n\t\tthis.services.ContentAssignment.assignContent(this.options.CSSElementAddress, this.generateCSS());\n\t}\n}\n\nmodule.exports = PictCSS;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictContentAssignment extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictContentAssignment';\n\n\t\t// Check to see if we are running in a browser\n\t\tthis.inBrowser = false;\n\t\tthis.hasDocument = false;\n\t\tif (typeof (window) == 'object')\n\t\t{\n\t\t\tthis.inBrowser = true;\n\t\t\t// Now check that the browser has a document object\n\t\t\tif ((typeof (window.document) != 'undefined') && (typeof (window.document.querySelectorAll) == 'function'))\n\t\t\t{\n\t\t\t\tthis.hasDocument = true;\n\t\t\t}\n\t\t}\n\n\t\t// If we're in a browser, check to see if jQuery is available.\n\t\tthis.hasJquery = false;\n\t\tthis.jQuery = false;\n\t\tif (this.inBrowser && typeof (window.jQuery) !== 'undefined')\n\t\t{\n\t\t\tthis.hasJquery = true;\n\t\t}\n\n\t\t// API Consumers can craft their own assign function\n\t\tthis.customAssignFunction = false;\n\t\t// API Consumers can also craft their own prepend function\n\t\tthis.customPrependFunction = false;\n\t\t// API Consumers can also craft their own append function\n\t\tthis.customAppendFunction = false;\n\n\t\t// API Consumers can also craft their own read function\n\t\tthis.customReadFunction = false;\n\t\t// API Consumers can even craft their own get element function.\n\t\tthis.customGetElementFunction = false;\n\n\t\t// API Consumers can also craft their own attribute read function\n\t\tthis.customReadAttributeFunction = false;\n\t\t// API Consumers can also craft their own attribute set function\n\t\tthis.customSetAttributeFunction = false;\n\t\t// API Consumers can also craft their own attribute remove function\n\t\tthis.customRemoveAttributeFunction = false;\n\n\t\t// API Consumers can also craft their own class read function\n\t\tthis.customReadClassFunction = false;\n\t\t// API Consumers can also craft their own class set function\n\t\tthis.customSetClassFunction = false;\n\t\t// API Consumers can also craft their own class remove function\n\t\tthis.customRemoveClassFunction = false;\n\t}\n\n\tgetElement(pAddress)\n\t{\n\t\tif (this.customGetElementFunction)\n\t\t{\n\t\t\treturn this.customGetElementFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpElements = window.jQuery(pAddress);\n\t\t\tif (tmpElements.length == 0)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// TODO: This isn't the most efficient method, but it is the most compatible.\n\t\t\t\tlet tmpElementSet = [];\n\t\t\t\tfor (let i = 0; i < tmpElements.length; i++)\n\t\t\t\t{\n\t\t\t\t\ttmpElementSet.push(tmpElements[0]);\n\t\t\t\t}\n\t\t\t\treturn tmpElementSet;\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\treturn window.document.querySelectorAll(pAddress);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content GET ELEMENT for [${pAddress}] will return empty because none of the browser methods are available`);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tassignContent(pAddress, pContent)\n\t{\n\t\tif (this.customAssignFunction)\n\t\t{\n\t\t\treturn this.customAssignFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element(s)\n\t\t\tlet tmpTargetElementSet = window.jQuery(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\t// Get the element(s)\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[i].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\ttmpTargetElementSet[i].value = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\ttmpTargetElementSet[i].text = pContent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttmpTargetElementSet[i].innerHTML = pContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now\n\t\t\tthis.log.trace(`PICT Content ASSIGN to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tappendContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customAppendFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.append(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"beforeend\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content APPEND to [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\tprependContent(pAddress, pContent)\n\t{\n\t\tif (this.customAppendFunction)\n\t\t{\n\t\t\treturn this.customPrependFunction(pAddress, pContent);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.prepend(pContent);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].insertAdjacentHTML(\"afterbegin\", pContent);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content PREPEND in [${pAddress}]:`, pContent);\n\t\t}\n\t}\n\n\treadContent(pAddress)\n\t{\n\t\tif (this.customReadFunction)\n\t\t{\n\t\t\treturn this.customReadFunction(pAddress);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\tswitch (tmpTargetElement.prop('tagName'))\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\treturn tmpTargetElement.val();\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\treturn tmpTargetElement.text();\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn tmpTargetElement.html();\n\t\t\t\t}\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\t\t\tif (tmpTargetElementSet.length < 1)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse if (tmpTargetElementSet.length == 1)\n\t\t\t{\n\t\t\t\tswitch (tmpTargetElementSet[0].tagName)\n\t\t\t\t{\n\t\t\t\t\tcase 'INPUT':\n\t\t\t\t\tcase 'SELECT':\n\t\t\t\t\tcase 'TEXTAREA':\n\t\t\t\t\t\treturn tmpTargetElementSet[0].value;\n\t\t\t\t\tcase 'SCRIPT':\n\t\t\t\t\t\treturn tmpTargetElementSet[0].text;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn tmpTargetElementSet[0].innerHTML;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just log it out for now -- nothing browser in our mix.\n\t\t\tthis.log.trace(`PICT Content READ from [${pAddress}]...`);\n\t\t\treturn '';\n\t\t}\n\t}\n\n\n\taddClass(pAddress, pClass)\n\t{\n\t\tif (this.customSetClassFunction)\n\t\t{\n\t\t\treturn this.customSetClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.addClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.add(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content ADDCLASS to [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\tremoveClass(pAddress, pClass)\n\t{\n\t\tif (this.customRemoveClassFunction)\n\t\t{\n\t\t\treturn this.customRemoveClassFunction(pAddress, pClass);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\t// Get the element\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].classList.remove(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVECLASS from [${pAddress}]:`, pClass);\n\t\t}\n\t}\n\n\treadAttribute(pAddress, pAttribute)\n\t{\n\t\tif (this.customReadAttributeFunction)\n\t\t{\n\t\t\treturn this.customReadAttributeFunction(pAddress, pAttribute);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.attr(pAttribute);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].getAttribute(pAttribute);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content READATTRIBUTE from [${pAddress}]:`, pAttribute);\n\t\t}\n\t}\n\n\tsetAttribute(pAddress, pAttribute, pValue)\n\t{\n\t\tif (this.customSetAttributeFunction)\n\t\t{\n\t\t\treturn this.customSetAttributeFunction(pAddress, pAttribute, pValue);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.attr(pAttribute, pValue);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].setAttribute(pAttribute, pValue);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content SETATTRIBUTE for [${pAddress}] ATTRIBUTE [${pAttribute}]:`, pValue);\n\t\t}\n\t}\n\n\tremoveAttribute(pAddress, pAttribute)\n\t{\n\t\tif (this.customRemoveAttributeFunction)\n\t\t{\n\t\t\treturn this.customRemoveAttributeFunction(pAddress, pAttribute);\n\t\t}\n\t\telse if (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\ttmpTargetElement.removeAttr(pAttribute);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\ttmpTargetElementSet[i].removeAttribute(pAttribute);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content REMOVEATTRIBUTE for [${pAddress}] ATTRIBUTE [${pAttribute}]`);\n\t\t}\n\t}\n\n\thasClass(pAddress, pClass)\n\t{\n\t\tif (this.customReadClassFunction)\n\t\t{\n\t\t\treturn this.customReadClassFunction(pAddress, pClass);\n\t\t}\n\t\tif (this.hasJquery)\n\t\t{\n\t\t\tlet tmpTargetElement = window.jQuery(pAddress);\n\t\t\treturn tmpTargetElement.hasClass(pClass);\n\t\t}\n\t\telse if (this.inBrowser && this.hasDocument)\n\t\t{\n\t\t\tlet tmpTargetElementSet = window.document.querySelectorAll(pAddress);\n\n\t\t\tfor (let i = 0; i < tmpTargetElementSet.length; i++)\n\t\t\t{\n\t\t\t\treturn tmpTargetElementSet[i].classList.contains(pClass);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.log.trace(`PICT Content HASCLASS for [${pAddress}] CLASS [${pClass}]:`);\n\t\t}\n\t}\n}\n\nmodule.exports = PictContentAssignment;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictDataProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictDataProvider';\n\t}\n\n    getDataByAddress(pAddress, pData)\n    {\n        let tmpData = (typeof(pData) === 'undefined') ? {} : pData;\n\n        return this.fable.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, pAddress);\n    }\n}\n\nmodule.exports = PictDataProvider;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictMeadowEntityProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n\t\tsuper(pFable, pOptions, pServiceHash);\n\n\t\tthis.serviceType = 'PictMeadowProvider';\n\n\t\tif (this.fable.settings.PictDefaultURLPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = this.fable.settings.PictDefaultURLPrefix;\n\t\t}\n\t\telse if (!this.options.urlPrefix)\n\t\t{\n\t\t\tthis.options.urlPrefix = '/1.0/';\n\t\t}\n\n\t\tif (this.fable.settings.PictDefaultDownloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = this.fable.settings.PictDefaultDownloadBatchSize;\n\t\t}\n\t\telse if (!this.options.downloadBatchSize)\n\t\t{\n\t\t\tthis.options.downloadBatchSize = 100;\n\t\t}\n\n\t\tthis.restClient = this.fable.instantiateServiceProviderWithoutRegistration('RestClient');\n\n\t\tthis.cache = {};\n\n\t\tthis.prepareRequestOptions = (pOptions) => { return pOptions; };\n\t}\n\n\tinitializeCache(pEntity)\n\t{\n\t\t// This should not be happening as often as it's happening.\n\t\tif (!this.cache.hasOwnProperty(pEntity))\n\t\t{\n\t\t\tthis.cache[pEntity] = this.fable.instantiateServiceProviderWithoutRegistration('ObjectCache');\n\t\t\t// TODO: Make this a configuration?\n\t\t\t// For now cache for 30 seconds.\n\t\t\tthis.cache[pEntity].maxAge = 30000;\n\t\t\tthis.cache[pEntity].maxLength = 10000;\n\n\t\t\tthis.fable.Bundle[pEntity] = this.cache[pEntity].RecordMap;\n\t\t}\n\t}\n\n\tgetEntity(pEntity, pIDRecord, fCallback)\n\t{\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\tfunction ()\n\t\t\t{\n\t\t\t\tlet tmpPossibleRecord = this.cache[pEntity].read(pIDRecord);\n\n\t\t\t\tif (tmpPossibleRecord)\n\t\t\t\t{\n\t\t\t\t\treturn fCallback(null, tmpPossibleRecord);\n\t\t\t\t}\n\n\t\t\t\tlet tmpOptions = (\n\t\t\t\t\t{\n\t\t\t\t\t\turl: `${this.options.urlPrefix}${pEntity}/${pIDRecord}`\n\t\t\t\t\t});\n\t\t\t\ttmpOptions = this.prepareRequestOptions(tmpOptions);\n\n\t\t\t\treturn this.restClient.getJSON(tmpOptions,\n\t\t\t\t\t(pError, pResponse, pBody) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pBody)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.cache[pEntity].put(pBody, pIDRecord);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fCallback(pError, pBody);\n\t\t\t\t\t});\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySetPage(pEntity, pMeadowFilterExpression, pRecordStartCursor, pRecordCount, fCallback)\n\t{\n\t\tlet tmpURL = `${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${pRecordStartCursor}/${pRecordCount}`;\n\n\t\treturn this.restClient.getJSON(tmpURL,\n\t\t\tfunction (pDownloadError, pDownloadResponse, pDownloadBody)\n\t\t\t{\n\t\t\t\treturn fCallback(pDownloadError, pDownloadBody);\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySetRecordCount(pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\tlet tmpURL = `${this.options.urlPrefix}${pEntity}s/Count/FilteredTo/${pMeadowFilterExpression}`;\n\n\t\treturn this.restClient.getJSON(tmpURL,\n\t\t\tfunction (pError, pResponse, pBody)\n\t\t\t{\n\t\t\t\tif (pError)\n\t\t\t\t{\n\t\t\t\t\tthis.log.error(`Error getting entity count of [${pEntity}] filtered to [${pMeadowFilterExpression}] from url [${tmpURL}]: ${pError}`);\n\t\t\t\t\treturn fCallback(pError);\n\t\t\t\t}\n\t\t\t\tlet tmpRecordCount = 0;\n\t\t\t\tif (pBody.Count)\n\t\t\t\t{\n\t\t\t\t\ttmpRecordCount = pBody.Count;\n\t\t\t\t}\n\t\t\t\treturn fCallback(pError, tmpRecordCount);\n\t\t\t}.bind(this));\n\t}\n\n\tgetEntitySet(pEntity, pMeadowFilterExpression, fCallback)\n\t{\n\t\t// TODO: Should we test for too many record IDs here by string length in pMeadowFilterExpression?\n\t\t//       FBL~ID${pDestinationEntity}~INN~${tmpIDRecordsCommaSeparated}\n\t\t//       If the list is mega-long we can parse it and break it into chunks.\n\t\tthis.initializeCache(pEntity);\n\t\t// Discard anything from the cache that has expired or is over size.\n\t\tthis.cache[pEntity].prune(\n\t\t\tfunction ()\n\t\t\t{\n\t\t\t\treturn this.getEntitySetRecordCount(pEntity, pMeadowFilterExpression,\n\t\t\t\t\t(pRecordCountError, pRecordCount) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pRecordCountError)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn fCallback(pRecordCountError);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet tmpRecordCount = pRecordCount;\n\n\t\t\t\t\t\tif (isNaN(pRecordCount))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.log.error(`Entity count did not return a number for [${pEntity}] filtered to [${pMeadowFilterExpression}]... something is fatally wrong from the server accessed in getEntitySet call.`);\n\t\t\t\t\t\t\treturn fCallback(new Error('Entity count did not return a number in getEntitySet.'));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpDownloadURIFragments = [];\n\t\t\t\t\t\tlet tmpDownloadBatchSize = this.options.downloadBatchSize;\n\t\t\t\t\t\tfor (let i = 0; i < (tmpRecordCount / tmpDownloadBatchSize); i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Generate each of the URI fragments to download\n\t\t\t\t\t\t\ttmpDownloadURIFragments.push(`${this.options.urlPrefix}${pEntity}s/FilteredTo/${pMeadowFilterExpression}/${i * tmpDownloadBatchSize}/${tmpDownloadBatchSize}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet tmpEntitySet = [];\n\n\t\t\t\t\t\t// Now run these in series (it's possible to parallelize the requests but they would not be in server order)\n\t\t\t\t\t\tthis.fable.Utility.eachLimit(tmpDownloadURIFragments, 1,\n\t\t\t\t\t\t\t(pURIFragment, fDownloadCallback) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.restClient.getJSON(pURIFragment,\n\t\t\t\t\t\t\t\t\t(pDownloadError, pDownloadResponse, pDownloadBody) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmpEntitySet = tmpEntitySet.concat(pDownloadBody);\n\t\t\t\t\t\t\t\t\t\t// Should we be caching each record?\n\t\t\t\t\t\t\t\t\t\treturn fDownloadCallback(pDownloadError);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(pFullDownloadError) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn fCallback(pFullDownloadError, tmpEntitySet);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t}.bind(this));\n\t}\n}\n\nmodule.exports = PictMeadowEntityProvider;","const libFableServiceBase = require('fable').ServiceProviderBase;\n\nclass PictTemplateProvider extends libFableServiceBase\n{\n\tconstructor(pFable, pOptions, pServiceHash)\n\t{\n        super(pFable, pOptions, pServiceHash);\n\n        this.serviceType = 'PictTemplateProvider';\n\n        this.templates = {};\n        this.templateSources = {};\n\n        // Default templates are stored by prefix.\n        // The longest prefix match is used.\n        // Case sensitive.\n        this.defaultTemplates = [];\n\n        // This function can be overloaded to load templates from a database, in a page or other source.\n        this.loadTemplateFunction = (pTemplateHash) => { return false; };\n\t}\n\n    addTemplate(pTemplateHash, pTemplate, pTemplateSource)\n    {\n        this.templates[pTemplateHash] = pTemplate;\n\n        if (typeof(pTemplateSource) == 'string')\n        {\n            this.templateSources[pTemplateHash] = pTemplateSource;\n        }\n        else\n        {\n            this.templateSources[pTemplateHash] = `Direct addTemplate('${pTemplateHash}') function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`;\n        }\n    }\n\n    addDefaultTemplate(pPrefix, pPostfix, pTemplate, pSource)\n    {\n        let tmpSource = (typeof(pSource) == 'string') ? pSource : `Direct addDefaultTemplate('${pPrefix}','${pPostfix}',..) function load into PictTemplateProvider [${this.UUID}]::[${this.Hash}]`\n        let tmpDefaultTemplate = {\n            prefix: pPrefix,\n            postfix: pPostfix,\n            template: pTemplate,\n            source: tmpSource\n        };\n        if (typeof(pTemplate) != 'string')\n        {\n            this.log.error('PictTemplateProvider.addDefaultTemplate: pTemplate is not a string.');\n        }\n        this.defaultTemplates.push(tmpDefaultTemplate);\n    }\n\n    checkDefaultTemplateHash(pTemplateHash)\n    {\n        /*\n         * Default templates are managed by postfix and prefix.  The use case is things like titles, headers, list \n         * wrappers, rows, etc.\n         *\n         * So we might have a default template for a list wrapper and it should expect \"-ListWrap\" as the postfix.\n         * And we might have a default template for a list row and it should expect \"-ListRow\" as the postfix.\n         * The list might have a \"-ListTitle\", or we might have shared titles and it would just be \"-Title\".\n         * \n         * The idea is to allow fallbacks on defaults.\n         */\n        for (let i = 0; i < this.defaultTemplates.length; i++)\n        {\n            if ((pTemplateHash.indexOf(this.defaultTemplates[i].postfix) == pTemplateHash.length - this.defaultTemplates[i].postfix.length)\n                && (pTemplateHash.indexOf(this.defaultTemplates[i].prefix) == 0))\n            {\n                this.templates[pTemplateHash] = this.defaultTemplates[i].template;\n                this.templateSources[pTemplateHash] = `Auto created in checkDefaultTemplateHash('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${this.defaultTemplates[i].prefix}]...[${this.defaultTemplates[i].postfix}]`;\n                return this.templates[pTemplateHash];\n            }\n        }\n        return false;\n    }\n\n    getTemplate(pTemplateHash)\n    {\n        // TODO: Optimize this.\n        // If the template doesn't exist, try to load it with the loading function\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.loadTemplate(pTemplateHash);\n        }\n        // If the loading function fails, try to load it from the default templates\n        if (!this.templates.hasOwnProperty(pTemplateHash))\n        {\n            this.checkDefaultTemplateHash(pTemplateHash);\n        }\n        if (this.templates.hasOwnProperty(pTemplateHash))\n        {\n            return this.templates[pTemplateHash];\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    loadTemplate(pTemplateHash)\n    {\n        let tmpTemplate = this.loadTemplateFunction(pTemplateHash);\n\n        if (tmpTemplate)\n        {\n            this.templates[pTemplateHash] = tmpTemplate.template;\n            this.templateSources[pTemplateHash] = `Loaded in loadTemplate('${pTemplateHash}') function by PictTemplateProvider [${this.UUID}]::[${this.Hash}] from [${tmpTemplate.source}]`;\n\n        }\n\n        return tmpTemplate;\n    }\n}\n\nmodule.exports = PictTemplateProvider;","/**\n* @author <steven@velozo.com>\n*/\nconst libFable = require('fable');\n\nclass Pict extends libFable\n{\n\tconstructor(pSettings)\n\t{\n\t\tsuper(pSettings);\n\n\t\tthis.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");\n\n\t\t// The templateProvider provides a basic key->template mapping with default fallback capabilities\n\t\tthis.addAndInstantiateServiceType('TemplateProvider', require('./Pict-Template-Provider.js'));\n\t\tthis.addAndInstantiateServiceType('EntityProvider',  require('./Pict-Meadow-EntityProvider.js'));\n\t\tthis.addAndInstantiateServiceType('DataProvider',  require('./Pict-DataProvider.js'));\n\t\tthis.addAndInstantiateServiceType('ContentAssignment',  require('./Pict-Content-Assignment.js'));\n\t\tthis.addAndInstantiateServiceType('CSSMap', require('./Pict-CSS.js'));\n\n\t\tthis.instantiateServiceProvider('MetaTemplate');\n\t\tthis.instantiateServiceProvider('DataGeneration');\n\n\t\tthis.manifest = this.instantiateServiceProvider('Manifest');\n\n\t\tthis.AppData = {};\n\t\tthis.Bundle = {};\n\n\t\t// Log noisness goes from 0 - 5, where 5 is show me everything.\n\t\tthis.LogNoisiness = 0;\n\n\t\t// Load manifest sets\n\t\tif (this.settings.Manifests)\n\t\t{\n\t\t\tthis.loadManifestSet(this.settings.Manifests);\n\t\t}\n\n\t\tthis._DefaultPictTemplatesInitialized = false;\n\t\tthis.initializePictTemplateEngine();\n\n\t\tthis.addServiceType('PictView',  require('pict-view'));\n\t\tthis.addServiceType('PictApplication',  require('pict-application'));\n\n\t\t// Expose the named views directly, through a convenience accessor\n\t\tthis.views = this.servicesMap.PictView;\n\t}\n\n\t// Load manifests in as Hashed services\n\tloadManifestSet (pManifestSet)\n\t{\n\t\tif (typeof(pManifestSet) != 'object')\n\t\t{\n\t\t\tthis.log.warn(`PICT [${this.UUID}] could not load Manifest Set; pManifestSet was not an object.`);\n\t\t\treturn false;\n\t\t}\n\t\tlet tmpManifestKeys = Object.keys(pManifestSet);\n\t\tif (tmpManifestKeys.length > 0)\n\t\t{\n\t\t\tfor (let i = 0; i < tmpManifestKeys.length; i++ )\n\t\t\t{\n\t\t\t\t// Load each manifest\n\t\t\t\tlet tmpManifestKey = tmpManifestKeys[i];\n\t\t\t\tthis.instantiateServiceProvider('Manifest', pManifestSet[tmpManifestKey], tmpManifestKey);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddView(pViewHash, pOptions, pViewPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpViewHash = (typeof(pViewHash) == 'string') ? pViewHash : this.fable.getUUID();\n\n\t\tif (typeof(pViewPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pViewPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pViewPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictView', tmpOptions, tmpViewHash, pViewPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictView', tmpOptions, tmpViewHash);\n\t\t}\n\t}\n\n\t// Just passing an options will construct one for us.\n\t// Passing a hash will set the hash.\n\t// Passing a prototype will use that!\n\taddApplication(pApplicationHash, pOptions, pApplicationPrototype)\n\t{\n\t\tlet tmpOptions = (typeof(pOptions) == 'object') ? pOptions : {};\n\t\tlet tmpApplicationHash = (typeof(pApplicationHash) == 'string') ? pApplicationHash : this.fable.getUUID();\n\n\t\tif (typeof(pApplicationPrototype) != 'undefined')\n\t\t{\n\t\t\t// If the prototype has a default_configuration, it will be merged with options.\n\t\t\tif (pApplicationPrototype.hasOwnProperty('default_configuration'))\n\t\t\t{\n\t\t\t\ttmpOptions = this.fable.Utility.extend({}, pApplicationPrototype.default_configuration, tmpOptions);\n\t\t\t}\n\n\t\t\treturn this.instantiateServiceProviderFromPrototype('PictApplication', tmpOptions, tmpApplicationHash, pApplicationPrototype);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.instantiateServiceProvider('PictApplication', tmpOptions, tmpApplicationHash);\n\t\t}\n\t}\n\n\tinitializePictTemplateEngine()\n\t{\n\t\t/*\n\t\t *\n\t\t * To stave off madness, these are inefficient for now.  The wkhtmltopdf renderer leaves much to be desired\n\t\t * in the way of feedback with regards to javascript compatibility.\n\t\t *\n\t\t */\n\t\tif (!this._DefaultPictTemplatesInitialized)\n\t\t{\n\t\t\t// Expects one of the following:\n\t\t\t// \t\t{~E:Book^AppData.Some.Address.IDBook^Render-Book-Template~}\n\t\t\t//          ...meaning GET BOOK with IDBook FROM AppData.Some.Address.IDBook and render it to Render-Book-Template\n\t\t\tlet fEntityRender = (pHash, pData, fCallback) =>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fEntityRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpEntity = false;\n\t\t\t\t\tlet tmpEntityID = false;\n\t\t\t\t\tlet tmpEntityTemplate = false;\n\n\t\t\t\t\t// This expression requires 2 parts -- a third is optional, and, if present, is the template to render to.\n\t\t\t\t\tlet tmpAddressParts = tmpHash.split('^');\n\n\t\t\t\t\tif (tmpAddressParts.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn tmpCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpEntity = tmpAddressParts[0].trim();\n\t\t\t\t\ttmpEntityID = tmpAddressParts[1].trim();\n\t\t\t\t\ttmpEntityTemplate = tmpAddressParts[2].trim();\n\n\t\t\t\t\tif (!isNaN(tmpEntityID))\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpEntityID = parseInt(tmpEntityID);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// This is an address, so we need to get the value at the address\n\t\t\t\t\t\ttmpEntityID = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpEntityID);\n\t\t\t\t\t}\n\n\t\t\t\t\t// No Entity or EntityID\n\t\t\t\t\tif (!tmpEntity || !tmpEntityID)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]  Entity: ${tmpEntity} ID: ${tmpEntityID}`);\n\t\t\t\t\t\treturn tmpCallback(Error(`Pict: Entity Render: Entity or entity ID not resolved for [${tmpHash}]  Entity: ${tmpEntity} ID: ${tmpEntityID}`), '');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`Pict: Entity Render: Entity [${tmpEntity}] with ID [${tmpEntityID}] as template [${tmpEntityTemplate}] from [${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now try to get the entity\n\t\t\t\t\tthis.EntityProvider.getEntity(tmpEntity, tmpEntityID,\n\t\t\t\t\t\tfunction (pError, pRecord)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.log.error(`Pict: Entity Render: Error getting entity [${tmpEntity}] with ID [${tmpEntityID}] for [${tmpHash}]: ${pError}`, pError);\n\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Now render the template\n\t\t\t\t\t\t\tif (tmpEntityTemplate)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn this.parseTemplateByHash(tmpEntityTemplate, pRecord, tmpCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn tmpCallback(null, '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(this));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternAsync('{~E:', '~}', fEntityRender);\n\t\t\tthis.MetaTemplate.addPatternAsync('{~Entity:', '~}', fEntityRender);\n\n\t\t\t// {~T:Template:AddressOfData~}\n\t\t\tlet fTemplateRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render Async: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render Async: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData),\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~T:', '~}', fTemplateRender, fTemplateRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~Template:', '~}', fTemplateRender, fTemplateRenderAsync);\n\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!tmpAddressOfData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateSetRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0]\n\t\t\t\t\ttmpAddressOfData = tmpTemplateHashPart[1];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\ttmpData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData);\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TS:', '~}', fTemplateSetRender, fTemplateSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateSet:', '~}', fTemplateSetRender, fTemplateSetRenderAsync);\n\n// Refactor: #### DRY PROBLEM Too much dry needing fixed at this point\n\t\t\t// {~TS:Template:AddressOfDataSet~}\n\t\t\tlet fTemplateValueSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is just a simple 2 part hash (the entity and the ID)\n\t\t\t\t\tlet tmpHashTemplateSeparator = tmpHash.indexOf(':');\n\t\t\t\t\ttmpTemplateHash = tmpHash.substring(0, tmpHashTemplateSeparator);\n\t\t\t\t\tif (tmpHashTemplateSeparator > -1)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpAddressOfData = tmpHash.substring(tmpHashTemplateSeparator + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpTemplateHash = tmpHash;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template hash\n\t\t\t\t\tif (!tmpTemplateHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn `Pict: Template Render: TemplateHash not resolved for [${tmpHash}]`;\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData);\n\n\t\t\t\t\tlet tmpDataValueSet = [];\n\t\t\t\t\tif (Array.isArray(tmpData))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < tmpData.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[i]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof(tmpData) === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueKeys = Object.keys(tmpData);\n\t\t\t\t\t\tfor (let i = 0; i < tmpValueKeys.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[tmpValueKeys[i]]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData});\n\t\t\t\t\t}\n\t\t\t\t\ttmpData = tmpDataValueSet;\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateHash, tmpData);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateValueSetRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fTemplateValueSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfData = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0]\n\t\t\t\t\ttmpAddressOfData = tmpTemplateHashPart[1];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\ttmpData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfData);\n\n\t\t\t\t\tlet tmpDataValueSet = [];\n\t\t\t\t\tif (Array.isArray(tmpData))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (let i = 0; i < tmpData.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[i]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof(tmpData) === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValueKeys = Object.keys(tmpData);\n\t\t\t\t\t\tfor (let i = 0; i < tmpValueKeys.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData[tmpValueKeys[i]]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpDataValueSet.push({ Value: tmpData});\n\t\t\t\t\t}\n\t\t\t\t\ttmpData = tmpDataValueSet;\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the template with what this template has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from templates\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TVS:', '~}', fTemplateValueSetRender, fTemplateValueSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateValueSet:', '~}', fTemplateValueSetRender, fTemplateValueSetRenderAsync);\n\n\t\t\t// {~T:TemplateFromMap:AddressOfData~}\n\t\t\tlet fTemplateFromMapRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfMap);\n\t\t\t\t\tlet tmpKey = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfKey);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, tmpData);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateFromMapRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfMap);\n\t\t\t\t\tlet tmpKey = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfKey);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from TemplateFromMaps\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TFM:', '~}', fTemplateFromMapRender, fTemplateFromMapRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateFromMap:', '~}', fTemplateFromMapRender, fTemplateFromMapRenderAsync);\n\n\t\t\t// {~TS:TemplateFromMap:AddressOfDataSet~}\n\t\t\tlet fTemplateFromMapSetRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfMap);\n\t\t\t\t\tlet tmpKey = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfKey);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMap Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tlet fTemplateFromMapSetRenderAsync = (pHash, pData, fCallback)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpCallback = (typeof(fCallback) === 'function') ? fCallback : () => { return ''; };\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRenderAsync]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapSetRenderAsync]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpTemplateFromMapHash = false;\n\t\t\t\t\tlet tmpAddressOfMap = false;\n\t\t\t\t\tlet tmpAddressOfKey = false;\n\n\t\t\t\t\t// This is a 3 part hash with the map address and the key address both\n\t\t\t\t\tlet tmpTemplateHashPart = tmpHash.split(':');\n\n\t\t\t\t\tif (tmpTemplateHashPart.length < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT TemplateFromMap [fTemplateFromMapRenderAsync]::[${tmpHash}] failed because there were not three stanzas in the expression [${pHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpTemplateFromMapHash = tmpTemplateHashPart[0];\n\t\t\t\t\ttmpAddressOfMap = tmpTemplateHashPart[1];\n\t\t\t\t\ttmpAddressOfKey = tmpTemplateHashPart[2];\n\n\t\t\t\t\t// No TemplateFromMap hash\n\t\t\t\t\tif (!tmpTemplateFromMapHash)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMapSet Render Async: TemplateFromMapHash not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now resolve the data\n\t\t\t\t\tlet tmpMap = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfMap);\n\t\t\t\t\tlet tmpKey = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpAddressOfKey);\n\n\t\t\t\t\tif (!tmpMap)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.warn(`Pict: TemplateFromMapSet Render: Map not resolved for [${tmpHash}]`);\n\t\t\t\t\t\treturn fCallback(null, '');\n\t\t\t\t\t}\n\n\t\t\t\t\ttmpData = tmpMap[tmpKey];\n\n\t\t\t\t\tif (!tmpData)\n\t\t\t\t\t{\n\t\t\t\t\t\t// No address was provided, just render the TemplateFromMap with what this TemplateFromMap has.\n\t\t\t\t\t\t// The async portion of this is a mind bender because of how entry can happen dynamically from TemplateFromMaps\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, pData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplateSetByHash(tmpTemplateFromMapHash, tmpData,\n\t\t\t\t\t\t\t(pError, pValue) =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (pError)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn tmpCallback(pError, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn tmpCallback(null, pValue);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TSFM:', '~}', fTemplateFromMapSetRender, fTemplateFromMapSetRenderAsync);\n\t\t\tthis.MetaTemplate.addPatternBoth('{~TemplateSetFromMap:', '~}', fTemplateFromMapSetRender, fTemplateFromMapSetRenderAsync);\n// Refactor: #### END OF DRY PROBLEM\n\n\n\n\t\t\t//{~Data:AppData.Some.Value.to.Render~}\n\t\t\tlet fDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = '';\n\t\t\t\t\tif (tmpHash != null)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\t}\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn tmpValue;\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~D:', '~}', fDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Data:', '~}', fDataRender);\n\n\t\t\t//<p>{~Join: - ^Record.d1^Record.d1~}</p>\n\t\t\tlet fJoinDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash;\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDataAddresses = tmpHash.split('^');\n\t\t\t\t\tif (tmpDataAddresses.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get the separator string\n\t\t\t\t\tlet tmpSeparator = tmpDataAddresses.shift();\n\n\t\t\t\t\tlet tmpValueList = [];\n\t\t\t\t\tfor (let i = 0; i < tmpDataAddresses.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpDataAddresses[i]);\n\t\t\t\t\t\tif (tmpValue)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpValueList.push(tmpValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpValueList.join(tmpSeparator);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~J:', '~}', fJoinDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~Join:', '~}', fJoinDataRender);\n\n\t\t\t//<p>{~JoinUnique: - ^Record.d1^Record.d1~}</p>\n\t\t\tlet fJoinUniqueDataRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash;\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join Unique [fDataRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Join Unique [fDataRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDataAddresses = tmpHash.split('^');\n\t\t\t\t\tif (tmpDataAddresses.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get the separator string\n\t\t\t\t\tlet tmpSeparator = tmpDataAddresses.shift();\n\n\t\t\t\t\tlet tmpValueList = [];\n\t\t\t\t\tlet tmpValueMap = {};\n\t\t\t\t\tfor (let i = 0; i < tmpDataAddresses.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpDataAddresses[i]);\n\t\t\t\t\t\tif (tmpValue)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!tmpValueMap.hasOwnProperty(tmpValue))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValueMap[tmpValue] = true;\n\t\t\t\t\t\t\t\ttmpValueList.push(tmpValue);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpValueList.join(tmpSeparator);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~JU:', '~}', fJoinUniqueDataRender);\n\t\t\tthis.MetaTemplate.addPattern('{~JoinUnique:', '~}', fJoinUniqueDataRender);\n\n\t\t\tthis.MetaTemplate.addPattern('{~Dollars:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDollars]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterDollars(tmpColumnData);\n\t\t\t\t});\n\t\t\tthis.MetaTemplate.addPattern('{~Digits:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDigits]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpColumnData = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\treturn this.DataFormat.formatterAddCommasToNumber(this.DataFormat.formatterRoundNumber(tmpColumnData, 2));\n\t\t\t\t});\n\t\t\t\n\t\t\t// Output the date as a YYYY-MM-DD string\n\t\t\tthis.MetaTemplate.addPattern('{~DateYMD:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpDateValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: Modularize this\n\t\t\t\t\tlet tmpDayJS = this.fable.Dates.dayJS.utc(tmpDateValue);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Try to cast the day to be a specific timezone if one is set for the app\n\t\t\t\t\t\tif (this.options.Timezone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.options.Timezone);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`Error casting Document date ${tmpSQLDateTime} to the Document timezone using tz in this.AppData.DocumentData.Timezone: [${this.AppData.DocumentData.Timezone}] .. casting to the browser guess which is [${this.fable.Dates.dayJS.tz.guess()}].`);\n\t\t\t\t\t\t// Day.js will try to guess the user's timezone for us\n\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpDayJS.format('YYYY-MM-DD');\n\t\t\t\t});\n\n\t\t\t\n\t\t\t// Output the date as a YYYY-MM-DD string\n\t\t\t// Takes in the format as the second parameter: {~DateYMD:AppData.Some.Date^YYYY-MM-DD~}\n\t\t\tthis.MetaTemplate.addPattern('{~DateFormat:', '~}',\n\t\t\t\t(pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\t\t\t\tlet tmpDateValueSet = tmpHash.split('^');\n\n\t\t\t\t\tif (tmpDateValueSet.length < 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`PICT Template [fDateFormat]::[${tmpHash}] did not have a valid format string and date.`);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpDateValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpDateValueSet[0]);\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fDateFormat]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: Modularize this\n\t\t\t\t\tlet tmpDayJS = this.fable.Dates.dayJS.utc(tmpDateValue);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Try to cast the day to be a specific timezone if one is set for the app\n\t\t\t\t\t\tif (this.options.Timezone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.options.Timezone);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.error(`Error casting Document date ${tmpSQLDateTime} to the Document timezone using tz in this.AppData.DocumentData.Timezone: [${this.AppData.DocumentData.Timezone}] .. casting to the browser guess which is [${this.fable.Dates.dayJS.tz.guess()}].`);\n\t\t\t\t\t\t// Day.js will try to guess the user's timezone for us\n\t\t\t\t\t\ttmpDayJS = tmpDayJS.tz(this.fable.Dates.dayJS.tz.guess());\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tmpDayJS.format(tmpDateValueSet[1]);\n\t\t\t\t});\n\t\t\t// {NE~Some.Address|If the left value is truthy, render this value.~}\n\t\t\tlet fNotEmptyRender = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fNotEmptyRender]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Should switch this to indexOf so pipes can be in the content.\n\t\t\t\t\tlet tmpHashParts = tmpHash.split('|');\n\n\t\t\t\t\t// For now just check truthiness\n\t\t\t\t\tif (this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHashParts[0]))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn tmpHashParts[1];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~NotEmpty:', '~}', fNotEmptyRender);\n\t\t\tthis.MetaTemplate.addPattern('{~NE:', '~}', fNotEmptyRender);\n\n\t\t\tlet fRandomNumberString = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumberString]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpStringLength = 4;\n\t\t\t\t\tlet tmpMaxNumber = 9999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpStringLength = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomNumericString(tmpStringLength, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumberString:', '~}',fRandomNumberString);\n\t\t\tthis.MetaTemplate.addPattern('{~RNS:', '~}',fRandomNumberString);\n\n\t\t\tlet fRandomNumber = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\n\t\t\t\t\tif (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fRandomNumber]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpMinimumNumber = 0;\n\t\t\t\t\tlet tmpMaxNumber = 9999999;\n\n\t\t\t\t\tif (tmpHash.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet tmpHashParts = tmpHash.split(',');\n\t\t\t\t\t\tif (tmpHashParts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMinimumNumber = parseInt(tmpHashParts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tmpHashParts.length > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmpMaxNumber = parseInt(tmpHashParts[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.DataGeneration.randomIntegerBetween(tmpMinimumNumber, tmpMaxNumber);\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~RandomNumber:', '~}',fRandomNumber);\n\t\t\tthis.MetaTemplate.addPattern('{~RN:', '~}',fRandomNumber);\n\n\t\t\tlet fPascalCaseIdentifier = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tif (this.LogNoisiness > 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}] with tmpData:`, tmpData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.LogNoisiness > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template [fPascalCaseIdentifier]::[${tmpHash}]`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValue == 'undefined') || (typeof(tmpValue) == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\treturn this.DataFormat.cleanNonAlphaCharacters(this.DataFormat.capitalizeEachWord(tmpValue));\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~PascalCaseIdentifier:', '~}',fPascalCaseIdentifier);\n\n\t\t\tlet fLogValue = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\n\t\t\t\t\tlet tmpValue = this.manifest.getValueByHash({AppData:this.AppData, Bundle:this.Bundle, Record:tmpData}, tmpHash);\n\t\t\t\t\tlet tmpValueType = typeof(tmpValue);\n\t\t\t\t\tif ((tmpValue == null) || (tmpValueType == 'undefined'))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is ${tmpValueType}.`);\n\t\t\t\t\t}\n\t\t\t\t\telse if (tmpValueType == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is an obect.`, tmpValue);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log.trace(`PICT Template Log Value: [${tmpHash}] is a ${tmpValueType} = [${tmpValue}]`);\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogValue:', '~}',fLogValue);\n\t\t\tthis.MetaTemplate.addPattern('{~LV:', '~}',fLogValue);\n\n\n\t\t\tlet fLogStatement = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tthis.log.trace(`PICT Template Log Message: ${tmpHash}`);\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~LogStatement:', '~}',fLogStatement);\n\t\t\tthis.MetaTemplate.addPattern('{~LS:', '~}',fLogStatement);\n\n\t\t\tlet fBreakpoint = (pHash, pData)=>\n\t\t\t\t{\n\t\t\t\t\tlet tmpHash = pHash.trim();\n\t\t\t\t\tlet tmpError = new Error(`PICT Template Breakpoint: ${tmpHash}`);\n\t\t\t\t\tthis.log.trace(`PICT Template Breakpoint: ${tmpHash}`, tmpError.stack);\n\t\t\t\t\tdebugger;\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\t\t\tthis.MetaTemplate.addPattern('{~Breakpoint', '~}',fBreakpoint);\n\n\t\t\tthis._DefaultPictTemplatesInitialized = true;\n\t\t}\n\t}\n\n\tparseTemplate (pTemplateString, pData, fCallback)\n\t{\n\t\tlet tmpData = (typeof(pData) === 'object') ? pData : {};\n\t\treturn this.MetaTemplate.parseString(pTemplateString, tmpData, fCallback);\n\t}\n\n\tparseTemplateByHash (pTemplateHash, pData, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\ttmpTemplateString = '';\n\t\t}\n\t\treturn this.parseTemplate(tmpTemplateString, pData, fCallback);\n\t}\n\n\tparseTemplateSet (pTemplateString, pDataSet, fCallback)\n\t{\n\t\t// TODO: This will need streaming -- for now janky old string append does the trick\n\t\tlet tmpValue = '';\n\t\tif (typeof(fCallback) == 'function')\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tthis.Utility.eachLimit(pDataSet, 1,\n\t\t\t\t\t(pRecord, fRecordTemplateCallback)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.parseTemplate(pTemplateString, pRecord,\n\t\t\t\t\t\t\t(pError, pTemplateResult)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmpValue += pTemplateResult;\n\t\t\t\t\t\t\t\treturn fRecordTemplateCallback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t(pError)=>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn fCallback(pError, tmpValue);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn fCallback(Error('Pict: Template Set: pDataSet is not an array or object.'), '');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (Array.isArray(pDataSet) || typeof(pDataSet) == 'object')\n\t\t\t{\n\t\t\t\tif (Array.isArray(pDataSet))\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < pDataSet.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet tmpKeys = Object.keys(pDataSet);\n\t\t\t\t\tfor (let i = 0; i < tmpKeys.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmpValue += this.parseTemplate(pTemplateString, pDataSet[tmpKeys[i]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmpValue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\tparseTemplateSetByHash (pTemplateHash, pDataSet, fCallback)\n\t{\n\t\tlet tmpTemplateString = this.TemplateProvider.getTemplate(pTemplateHash);\n\n\t\t// TODO: Unsure if returning empty is always the right behavior -- if it isn't we will use config to set the behavior\n\t\tif (!tmpTemplateString)\n\t\t{\n\t\t\ttmpTemplateString = '';\n\t\t}\n\t\treturn this.parseTemplateSet(tmpTemplateString, pDataSet, fCallback);\n\t}\n};\n\nmodule.exports = Pict;\n\nmodule.exports.PictApplicationClass = require('pict-application');\nmodule.exports.PictViewClass = require('pict-view');\n\nmodule.exports.EnvironmentLog = require('./environments/Pict-Environment-Log.js');\nmodule.exports.EnvironmentObject = require('./environments/Pict-Environment-Object.js');\n\n// This is to help understand the type of enivironement we're executing in\nmodule.exports.isBrowser = new Function(\"try {return (this===window);} catch(pError) {return false;}\");","/**\n* Pict browser shim loader\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\n\nclass PictEnvironmentLog\n{\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\n\t\tthis.pict.ContentAssignment.customReadAttributeFunction = this.customReadAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetAttributeFunction = this.customSetAttributeFunction.bind(this);\n\t}\n\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\tcustomGetElementFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\tcustomReadFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\tcustomAppendFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\tcustomPrependFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomAssignFunction (pAddress, pContent)\n\t{\n\t\tif (this.storeEventLog) this.eventLog.Assign.push(this.createEventLogEntry(pAddress, pContent));\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomReadAttributeFunction (pAddress, pAttribute)\n\t{\n\t\tthis.pict.log.info(`Mocking an READ ATTRIBUTE from Address -> [${pAddress}]`, {Attribute: pAttribute});\n\t\treturn '';\n\t}\n\n\tcustomSetAttributeFunction (pAddress, pAttribute, pContent)\n\t{\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an SET ATTRIBUTE to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Attribute: pAttribute, Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an SET ATTRIBUTE to Address -> [${pAddress}]`, {Attribute: pAttribute, Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n}\n\nmodule.exports = PictEnvironmentLog;","/**\n* Pict browser shim loader with Object statefulness for the environement\n* @author <steven@velozo.com>\n*\n* This was born after writing about 10 views and copying basically the same\n* mock environment read/write functions into the test harnesses.  It allows\n* mocks or other types of communications back-and-forth to be configured\n* as an environment for views and applications.\n*\n* To use this:\n*\n* 1. Construct a pict object in your favorite fashion:\n*        let _Pict = new libPict({...Environment})\n* 2. Require this; it's exported as a static subobject of the pict library,\n*    so you can do:\n*        const libPictEnvironmentLog = require('pict').EnvironmentLog;\n* 3. Create an object that is your custom read data.  Any key that is requested\n*    but missing will return empty.\n*        const tmpContentMap = { '#SomeElement': 'SomeValue' };\n* 4. Pass your pict through this to get the custom functions mapped into the ContentAssignment service:\n*        let tmpMockEnvironment = new libPictEnvironmentLog(_Pict, tmpContentMap);\n* 5. Now you can use your pict as normal, and it will log all of the read/write events out and keep a log of when they occurred.\n*/\n\nclass PictEnvironmentObject\n{\n\tconstructor(pPict, pContentMap)\n\t{\n\t\tthis.contentMap = (typeof(pContentMap) == 'object') ? pContentMap : {};\n\n\t\tthis.contentMap._ATTRIBUTE_MAP = {};\n\t\tthis.contentMap._CLASS_MAP = {};\n\n\t\tthis.pict = pPict;\n\n\t\t// If this is set to false, we won't keep an array-based log of every read, assignment, append or get.\n\t\tthis.truncateContentLength = 256;\n\t\tthis.storeEventLog = true;\n\t\t// Where to store each event type\n\t\tthis.eventLog = {};\n\t\tthis.eventLog.GetElement = [];\n\t\tthis.eventLog.Read = [];\n\t\tthis.eventLog.Prepend = [];\n\t\tthis.eventLog.Append = [];\n\t\tthis.eventLog.Assign = [];\n\t\tthis.eventLog.ReadAttribute = [];\n\t\tthis.eventLog.SetAttribute = [];\n\t\tthis.eventLog.RemoveAttribute = [];\n\t\tthis.eventLog.ReadClass = [];\n\t\tthis.eventLog.SetClass = [];\n\t\tthis.eventLog.RemoveClass = [];\n\n\t\tthis.pict.ContentAssignment.customGetElementFunction = this.customGetElementFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadFunction = this.customReadFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customAppendFunction = this.customAppendFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customPrependFunction = this.customPrependFunction.bind(this)\n\t\tthis.pict.ContentAssignment.customAssignFunction = this.customAssignFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadAttributeFunction = this.customReadAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetAttributeFunction = this.customSetAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customRemoveAttributeFunction = this.customRemoveAttributeFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customReadClassFunction = this.customReadClassFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customSetClassFunction = this.customSetClassFunction.bind(this);\n\t\tthis.pict.ContentAssignment.customRemoveClassFunction = this.customRemoveClassFunction.bind(this);\n\t}\n\n\tcreateEventLogEntry(pAddress, pContent)\n\t{\n\t\tlet tmpContent = (typeof(pContent) == 'undefined') ? '' : pContent;\n\t\treturn (\n\t\t\t{\n\t\t\t\tTimeStamp:this.pict.log.getTimeStamp(),\n\t\t\t\tHash: pAddress,\n\t\t\t\tContent: tmpContent\n\t\t\t});\n\t}\n\n\tcustomGetElementFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.GetElement.push(this.createEventLogEntry(pAddress));\n\t\t}\n\n\t\tthis.pict.log.info(`Mocking an GET of Address -> [${pAddress}]`);\n\t\treturn '';\n\t}\n\n\tcustomReadFunction (pAddress)\n\t{\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Read.push(this.createEventLogEntry(pAddress));\n\t\t}\n\n\t\tthis.pict.log.info(`Mocking an READ from Address -> [${pAddress}]`);\n\t\tif (this.contentMap.hasOwnProperty(pAddress))\n\t\t{\n\t\t\t// The data is in the content map!\n\t\t\treturn this.contentMap[pAddress];\n\t\t}\n\t\tthis.pict.log.warn(`Mock read from Address ${pAddress} did not find a value in the content map.`);\n\t\treturn '';\n\t}\n\n\tcustomAppendFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = (typeof(this.contentMap[pAddress]) == 'undefined') ? pContent : this.contentMap[pAddress] + pContent;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Append.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an APPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\tcustomPrependFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = (typeof(this.contentMap[pAddress]) == 'undefined') ? pContent : pContent + this.contentMap[pAddress];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an PREPEND to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tcustomAssignFunction (pAddress, pContent)\n\t{\n\t\tthis.contentMap[pAddress] = pContent;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Prepend.push(this.createEventLogEntry(pAddress, pContent));\n\t\t}\n\n\t\tif (pContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ASSIGN to Address -> [${pAddress}]`, {Content: pContent});\n\t\t}\n\t\treturn '';\n\t}\n\n\tinitializeAttributeMapLocation(pAddress, pAttribute)\n\t{\n\t\tif (!this.contentMap._ATTRIBUTE_MAP.hasOwnProperty(pAddress))\n\t\t{\n\t\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress] = {};\n\t\t}\n\t\tif (!this.contentMap._ATTRIBUTE_MAP[pAddress].hasOwnProperty(pAttribute))\n\t\t{\n\t\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute] = false;\n\t\t}\n\t}\n\n\tinitializeClassMapLocation(pAddress)\n\t{\n\t\tif (!this.contentMap._CLASS_MAP.hasOwnProperty(pAddress))\n\t\t{\n\t\t\tthis.contentMap._CLASS_MAP[pAddress] = [];\n\t\t}\n\t}\n\n\tcustomReadAttributeFunction (pAddress, pAttribute)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tlet tmpContent = this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (tmpContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE READ for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: tmpContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE READ for Address -> [${pAddress}]::[${pAttribute}]`, {Content: tmpContent});\n\t\t}\n\t\treturn tmpContent;\n\t}\n\n\tcustomSetAttributeFunction (pAddress, pAttribute, pValue)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tthis.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute] = pValue;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (pValue.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE SET for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: pValue.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE SET for Address -> [${pAddress}]::[${pAttribute}]`, {Content: pValue});\n\t\t}\n\t\treturn pValue;\n\t}\n\n\tcustomRemoveAttributeFunction (pAddress, pAttribute)\n\t{\n\t\tthis.initializeAttributeMapLocation(pAddress, pAttribute);\n\n\t\tlet tmpContent = this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pAttribute));\n\t\t}\n\n\t\tif (tmpContent.length > this.truncateContentLength)\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE REMOVE for Address -> [${pAddress}] (log truncated to first ${this.truncateContentLength} characters)`, {Content: tmpContent.substring(0, this.truncateContentLength)});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.pict.log.info(`Mocking an ATTRIBUTE REMOVE for Address -> [${pAddress}]::[${pAttribute}]`, {Content: tmpContent});\n\t\t}\n\n\t\tdelete this.contentMap._ATTRIBUTE_MAP[pAddress][pAttribute];\n\n\t\treturn true;\n\t}\n\n\tcustomReadClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tconst tmpContent = this.contentMap._CLASS_MAP[pAddress].indexOf(pClass) > -1;\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS READ for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent});\n\n\t\treturn tmpContent;\n\t}\n\n\tcustomSetClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tlet tmpContent = this.contentMap._CLASS_MAP[pAddress];\n\n\t\tif (!this.contentMap._CLASS_MAP[pAddress].indexOf(pClass) > -1)\n\t\t{\n\t\t\tthis.contentMap._CLASS_MAP[pAddress].push(pClass);\n\t\t}\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS SET for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent.join(' ')});\n\n\t\treturn tmpContent;\n\t}\n\n\tcustomRemoveClassFunction (pAddress, pClass)\n\t{\n\t\tthis.initializeClassMapLocation(pAddress);\n\n\t\tlet tmpContent = this.contentMap._CLASS_MAP[pAddress];\n\n\t\tthis.contentMap._CLASS_MAP[pAddress].splice(pClass);\n\n\t\tif (this.storeEventLog)\n\t\t{\n\t\t\tthis.eventLog.Assign.push(this.createEventLogEntry(pAddress, pClass));\n\t\t}\n\t\tthis.pict.log.info(`Mocking an CLASS REMOVE for Address -> [${pAddress}]::[${pClass}]`, {Content: tmpContent.join(' ')});\n\n\t\treturn tmpContent;\n\t}\n}\n\nmodule.exports = PictEnvironmentObject;"]}